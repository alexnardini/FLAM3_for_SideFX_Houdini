;_name	TFFAuicollect
; ModuleID = 'TFFAuicollect'
source_filename = "TFFAuicollect"

@0 = private constant [0 x i8*] zeroinitializer
@1 = private constant [7 x i8] c"linear\00"
@2 = private constant [11 x i8] c"sinusoidal\00"
@3 = private constant [10 x i8] c"spherical\00"
@4 = private constant [6 x i8] c"swirl\00"
@5 = private constant [10 x i8] c"horseshoe\00"
@6 = private constant [6 x i8] c"polar\00"
@7 = private constant [13 x i8] c"handkerchief\00"
@8 = private constant [6 x i8] c"heart\00"
@9 = private constant [5 x i8] c"disc\00"
@10 = private constant [7 x i8] c"spiral\00"
@11 = private constant [11 x i8] c"hiperbolic\00"
@12 = private constant [8 x i8] c"diamond\00"
@13 = private constant [3 x i8] c"ex\00"
@14 = private constant [6 x i8] c"julia\00"
@15 = private constant [5 x i8] c"bent\00"
@16 = private constant [6 x i8] c"waves\00"
@17 = private constant [8 x i8] c"fisheye\00"
@18 = private constant [8 x i8] c"popcorn\00"
@19 = private constant [12 x i8] c"exponential\00"
@20 = private constant [6 x i8] c"power\00"
@21 = private constant [7 x i8] c"cosine\00"
@22 = private constant [6 x i8] c"rings\00"
@23 = private constant [4 x i8] c"fan\00"
@24 = private constant [7 x i8] c"bubble\00"
@25 = private constant [9 x i8] c"cylinder\00"
@26 = private constant [8 x i8] c"eyefish\00"
@27 = private constant [5 x i8] c"blur\00"
@28 = private constant [5 x i8] c"curl\00"
@29 = private constant [5 x i8] c"ngon\00"
@30 = private constant [4 x i8] c"pdj\00"
@31 = private constant [5 x i8] c"blob\00"
@32 = private constant [7 x i8] c"juliaN\00"
@33 = private constant [11 x i8] c"juliaScope\00"
@34 = private constant [14 x i8] c"gaussian_blur\00"
@35 = private constant [5 x i8] c"fan2\00"
@36 = private constant [7 x i8] c"rings2\00"
@37 = private constant [11 x i8] c"rectangles\00"
@38 = private constant [11 x i8] c"radialblur\00"
@39 = private constant [4 x i8] c"pie\00"
@40 = private constant [5 x i8] c"arch\00"
@41 = private constant [8 x i8] c"tangent\00"
@42 = private constant [7 x i8] c"square\00"
@43 = private constant [5 x i8] c"rays\00"
@44 = private constant [6 x i8] c"blade\00"
@45 = private constant [8 x i8] c"secant2\00"
@46 = private constant [10 x i8] c"twintrian\00"
@47 = private constant [6 x i8] c"cross\00"
@48 = private constant [6 x i8] c"disc2\00"
@49 = private constant [11 x i8] c"supershape\00"
@50 = private constant [7 x i8] c"flower\00"
@51 = private constant [6 x i8] c"conic\00"
@52 = private constant [9 x i8] c"parabola\00"
@53 = private constant [6 x i8] c"bent2\00"
@54 = private constant [8 x i8] c"bipolar\00"
@55 = private constant [9 x i8] c"boarders\00"
@56 = private constant [10 x i8] c"butterfly\00"
@57 = private constant [5 x i8] c"cell\00"
@58 = private constant [5 x i8] c"cpow\00"
@59 = private constant [6 x i8] c"edisc\00"
@60 = private constant [9 x i8] c"elliptic\00"
@61 = private constant [6 x i8] c"noise\00"
@62 = private constant [7 x i8] c"escher\00"
@63 = private constant [5 x i8] c"foci\00"
@64 = private constant [10 x i8] c"lazysusan\00"
@65 = private constant [7 x i8] c"loonie\00"
@66 = private constant [9 x i8] c"pre blur\00"
@67 = private constant [8 x i8] c"modulus\00"
@68 = private constant [7 x i8] c"oscope\00"
@69 = private constant [7 x i8] c"polar2\00"
@70 = private constant [9 x i8] c"popcorn2\00"
@71 = private constant [5 x i8] c"scry\00"
@72 = private constant [11 x i8] c"separation\00"
@73 = private constant [6 x i8] c"split\00"
@74 = private constant [7 x i8] c"splits\00"
@75 = private constant [8 x i8] c"stripes\00"
@76 = private constant [6 x i8] c"wedge\00"
@77 = private constant [12 x i8] c"wedge julia\00"
@78 = private constant [10 x i8] c"wedge sph\00"
@79 = private constant [6 x i8] c"whorl\00"
@80 = private constant [7 x i8] c"waves2\00"
@81 = private constant [4 x i8] c"exp\00"
@82 = private constant [4 x i8] c"log\00"
@83 = private constant [4 x i8] c"sin\00"
@84 = private constant [4 x i8] c"cos\00"
@85 = private constant [4 x i8] c"tan\00"
@86 = private constant [4 x i8] c"sec\00"
@87 = private constant [4 x i8] c"csc\00"
@88 = private constant [4 x i8] c"cot\00"
@89 = private constant [5 x i8] c"sinh\00"
@90 = private constant [5 x i8] c"cosh\00"
@91 = private constant [5 x i8] c"tanh\00"
@92 = private constant [5 x i8] c"sech\00"
@93 = private constant [5 x i8] c"csch\00"
@94 = private constant [5 x i8] c"coth\00"
@95 = private constant [6 x i8] c"auger\00"
@96 = private constant [5 x i8] c"flux\00"
@97 = private constant [7 x i8] c"mobius\00"
@98 = private constant [6 x i8] c"curve\00"
@99 = private constant [12 x i8] c"perspective\00"
@100 = private constant [7 x i8] c"bwraps\00"
@101 = private constant [11 x i8] c"hemisphere\00"
@102 = private constant [11 x i8] c"polynomial\00"
@103 = private constant [5 x i8] c"crop\00"
@104 = private constant [8 x i8] c"unpolar\00"
@105 = private constant [8 x i8] c"glynnia\00"
@106 = private constant [15 x i8] c"point_symmetry\00"
@107 = private constant [106 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @2, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @3, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @4, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @5, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @6, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @7, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @8, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @9, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @10, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @11, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @12, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @13, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @14, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @15, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @16, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @17, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @18, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @19, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @20, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @21, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @22, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @23, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @24, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @25, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @26, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @27, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @28, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @29, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @30, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @31, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @32, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @33, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @34, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @35, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @36, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @37, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @38, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @39, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @40, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @41, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @42, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @43, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @44, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @45, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @46, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @47, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @48, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @49, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @50, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @51, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @52, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @53, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @54, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @55, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @56, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @57, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @58, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @59, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @60, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @61, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @62, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @63, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @64, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @65, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @66, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @67, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @68, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @69, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @70, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @71, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @72, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @73, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @74, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @75, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @76, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @77, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @78, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @79, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @80, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @81, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @82, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @83, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @84, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @85, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @86, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @87, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @88, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @89, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @90, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @91, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @92, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @93, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @94, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @95, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @96, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @97, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @98, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @99, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @100, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @101, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @102, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @103, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @104, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @105, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @106, i64 0, i64 0)]
@108 = private constant [8 x i8] c"../doff\00"
@109 = private constant [8 x i8] c"../domb\00"
@110 = private constant [13 x i8] c"../flamefunc\00"
@111 = private constant [8 x i8] c"../iter\00"
@112 = private constant [7 x i8] c"../f3c\00"
@113 = private constant [6 x i8] c"../xm\00"
@114 = private constant [2 x i8] c"[\00"
@115 = private constant [2 x i8] c"]\00"
@116 = private constant [3 x i8] c"XS\00"
@117 = private constant [3 x i8] c"Xt\00"
@118 = private constant [3 x i8] c"fX\00"
@119 = private constant [4 x i8] c"F3C\00"
@120 = private constant [3 x i8] c"MB\00"
@121 = private constant [1 x i8] zeroinitializer
@122 = private constant [12 x i8] c"../vactive_\00"
@123 = private constant [13 x i8] c" :::::::::: \00"
@124 = private constant [13 x i8] c"../v1weight_\00"
@125 = private constant [11 x i8] c"../v1type_\00"
@126 = private constant [2 x i8] c":\00"
@127 = private constant [13 x i8] c"../v2weight_\00"
@128 = private constant [11 x i8] c"../v2type_\00"
@129 = private constant [13 x i8] c"../v3weight_\00"
@130 = private constant [11 x i8] c"../v3type_\00"
@131 = private constant [13 x i8] c"../v4weight_\00"
@132 = private constant [11 x i8] c"../v4type_\00"
@133 = private constant [18 x i8] c"../preblurweight_\00"
@134 = private constant [2 x i8] c"*\00"
@135 = private constant [15 x i8] c"../pre1weight_\00"
@136 = private constant [13 x i8] c"../pre1type_\00"
@137 = private constant [15 x i8] c"../pre2weight_\00"
@138 = private constant [13 x i8] c"../pre2type_\00"
@139 = private constant [3 x i8] c"[ \00"
@140 = private constant [4 x i8] c" ]:\00"
@141 = private constant [3 x i8] c", \00"
@142 = private constant [13 x i8] c"../p1weight_\00"
@143 = private constant [11 x i8] c"../p1type_\00"
@144 = private constant [3 x i8] c"%g\00"
@145 = private constant [7 x i8] c"../iw_\00"
@146 = private constant [2 x i8] c".\00"
@147 = private constant [14 x i8] c"../ffv1weight\00"
@148 = private constant [12 x i8] c"../ffv1type\00"
@149 = private constant [14 x i8] c"../ffv2weight\00"
@150 = private constant [12 x i8] c"../ffv2type\00"
@151 = private constant [16 x i8] c"../ffpre1weight\00"
@152 = private constant [14 x i8] c"../ffpre1type\00"
@153 = private constant [3 x i8] c"]:\00"
@154 = private constant [14 x i8] c"../ffp1weight\00"
@155 = private constant [12 x i8] c"../ffp1type\00"
@156 = private constant [14 x i8] c"../ffp2weight\00"
@157 = private constant [12 x i8] c"../ffp2type\00"
@158 = private constant [3 x i8] c" ]\00"
@VARTYPE = external global i8**
@XS = external global i64
@159 = private constant [8 x i8] c"VARTYPE\00"

; Function Attrs: alwaysinline nounwind
define private void @"_TFFAuicollect@[SI"(i8*** %_bound_VARTYPE, i64* %_bound_XS) #0 {
__llvm_entry:
  %return = call i64 @"chi@IS"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @108, i64 0, i64 0))
  %return1 = call i64 @"chi@IS"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @109, i64 0, i64 0))
  %return2 = call i64 @"chi@IS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @110, i64 0, i64 0))
  %return3 = call i64 @"chi@IS"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @111, i64 0, i64 0))
  %return4 = call i64 @"chi@IS"(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @112, i64 0, i64 0))
  %return5 = call i64 @"chi@IS"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @113, i64 0, i64 0))
  %return8 = call i8* @"itoa@SI"(i64 %return3)
  %return9 = call i8* @"concat@SSS:S"(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @114, i64 0, i64 0), i8* %return8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @115, i64 0, i64 0))
  %output = call i8** @"append@[SS"(i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @0, i64 0, i64 0), i8* %return9)
  %return10 = call i64 @"detail@IIS"(i64 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @116, i64 0, i64 0))
  %0 = icmp ne i64 %return10, 0
  br i1 %0, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %return13 = call i64 @"not@II"(i64 %return5)
  %1 = icmp ne i64 %return13, 0
  br i1 %1, label %true14, label %false

end:                                              ; preds = %true14, %false, %__llvm_entry
  %T.0 = phi i8** [ %output18, %true14 ], [ %output21, %false ], [ %output, %__llvm_entry ]
  %2 = icmp ne i64 %return4, 0
  br i1 %2, label %true23, label %end24

true14:                                           ; preds = %true
  %return17 = call i8* @"concat@SSS:S"(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @114, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @117, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @115, i64 0, i64 0))
  %output18 = call i8** @"append@[SS"(i8** %output, i8* %return17)
  br label %end

false:                                            ; preds = %true
  %return20 = call i8* @"concat@SSS:S"(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @114, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @118, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @115, i64 0, i64 0))
  %output21 = call i8** @"append@[SS"(i8** %output, i8* %return20)
  br label %end

true23:                                           ; preds = %end
  %output26 = call i8** @"append@[SS"(i8** %T.0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @119, i64 0, i64 0))
  br label %end24

end24:                                            ; preds = %true23, %end
  %T.1 = phi i8** [ %output26, %true23 ], [ %T.0, %end ]
  %3 = icmp ne i64 %return1, 0
  br i1 %3, label %true28, label %end29

true28:                                           ; preds = %end24
  %output31 = call i8** @"append@[SS"(i8** %T.1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @120, i64 0, i64 0))
  br label %end29

end29:                                            ; preds = %true28, %end24
  %T.2 = phi i8** [ %output31, %true28 ], [ %T.1, %end24 ]
  br label %cond

cond:                                             ; preds = %end46, %end29
  %i.0 = phi i64 [ 0, %end29 ], [ %output38, %end46 ]
  %T.3 = phi i8** [ %T.2, %end29 ], [ %output266, %end46 ]
  %return34 = call i64 @"lt@III"(i64 %i.0, i64 %return2)
  %4 = icmp ne i64 %return34, 0
  br i1 %4, label %body, label %end35

body:                                             ; preds = %cond
  %output38 = add i64 %i.0, 1
  %return39 = call i8* @"itoa@SI"(i64 %output38)
  %return41 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @122, i64 0, i64 0), i8* %return39)
  %return42 = call i64 @"chi@IS"(i8* %return41)
  %return43 = call i64 @"not@II"(i64 %return42)
  %5 = icmp ne i64 %return43, 0
  br i1 %5, label %true44, label %false45

end35:                                            ; preds = %cond
  %6 = icmp ne i64 %return, 0
  br i1 %6, label %true270, label %end271

true44:                                           ; preds = %body
  br label %end46

false45:                                          ; preds = %body
  %return48 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @124, i64 0, i64 0), i8* %return39)
  %return49 = call double @"chf@FS"(i8* %return48)
  %return51 = fcmp one double %return49, 0.000000e+00
  br i1 %return51, label %true53, label %false54

end46:                                            ; preds = %end228, %true44
  %VAR.0 = phi i8* [ getelementptr inbounds ([13 x i8], [13 x i8]* @123, i64 0, i64 0), %true44 ], [ %return263, %end228 ]
  %output266 = call i8** @"append@[SS"(i8** %T.3, i8* %VAR.0)
  br label %cond

true53:                                           ; preds = %false45
  %return58 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @125, i64 0, i64 0), i8* %return39)
  %return59 = call i8* @"chs@SS"(i8* %return58)
  %return60 = call i64 @"atoi@IS"(i8* %return59)
  %return61 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([106 x i8*], [106 x i8*]* @107, i64 0, i64 0), i64 %return60)
  %output62 = call i8* @"add@SS"(i8* %return61, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @126, i64 0, i64 0))
  br label %end55

false54:                                          ; preds = %false45
  br label %end55

end55:                                            ; preds = %false54, %true53
  %V1.0 = phi i8* [ %output62, %true53 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @126, i64 0, i64 0), %false54 ]
  %return64 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @127, i64 0, i64 0), i8* %return39)
  %return65 = call double @"chf@FS"(i8* %return64)
  %return67 = fcmp one double %return65, 0.000000e+00
  br i1 %return67, label %true69, label %false70

true69:                                           ; preds = %end55
  %return74 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @128, i64 0, i64 0), i8* %return39)
  %return75 = call i8* @"chs@SS"(i8* %return74)
  %return76 = call i64 @"atoi@IS"(i8* %return75)
  %return77 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([106 x i8*], [106 x i8*]* @107, i64 0, i64 0), i64 %return76)
  %output78 = call i8* @"add@SS"(i8* %return77, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @126, i64 0, i64 0))
  br label %end71

false70:                                          ; preds = %end55
  br label %end71

end71:                                            ; preds = %false70, %true69
  %V2.0 = phi i8* [ %output78, %true69 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @126, i64 0, i64 0), %false70 ]
  %return80 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @129, i64 0, i64 0), i8* %return39)
  %return81 = call double @"chf@FS"(i8* %return80)
  %return83 = fcmp one double %return81, 0.000000e+00
  br i1 %return83, label %true85, label %false86

true85:                                           ; preds = %end71
  %return90 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @130, i64 0, i64 0), i8* %return39)
  %return91 = call i8* @"chs@SS"(i8* %return90)
  %return92 = call i64 @"atoi@IS"(i8* %return91)
  %return93 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([106 x i8*], [106 x i8*]* @107, i64 0, i64 0), i64 %return92)
  %output94 = call i8* @"add@SS"(i8* %return93, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @126, i64 0, i64 0))
  br label %end87

false86:                                          ; preds = %end71
  br label %end87

end87:                                            ; preds = %false86, %true85
  %V3.0 = phi i8* [ %output94, %true85 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @126, i64 0, i64 0), %false86 ]
  %return96 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @131, i64 0, i64 0), i8* %return39)
  %return97 = call double @"chf@FS"(i8* %return96)
  %return99 = fcmp one double %return97, 0.000000e+00
  br i1 %return99, label %true101, label %false102

true101:                                          ; preds = %end87
  %return106 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @132, i64 0, i64 0), i8* %return39)
  %return107 = call i8* @"chs@SS"(i8* %return106)
  %return108 = call i64 @"atoi@IS"(i8* %return107)
  %return109 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([106 x i8*], [106 x i8*]* @107, i64 0, i64 0), i64 %return108)
  %output110 = call i8* @"add@SS"(i8* %return109, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @126, i64 0, i64 0))
  br label %end103

false102:                                         ; preds = %end87
  br label %end103

end103:                                           ; preds = %false102, %true101
  %V4.0 = phi i8* [ %output110, %true101 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @126, i64 0, i64 0), %false102 ]
  %output113 = fadd double %return49, %return65
  %output115 = fadd double %output113, %return81
  %output117 = fadd double %output115, %return97
  %return119 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @133, i64 0, i64 0), i8* %return39)
  %return120 = call double @"chf@FS"(i8* %return119)
  %return122 = fcmp ogt double %return120, 0.000000e+00
  br i1 %return122, label %true124, label %end125

true124:                                          ; preds = %end103
  %return127 = fcmp one double %output117, 0.000000e+00
  br i1 %return127, label %true129, label %end125

end125:                                           ; preds = %true124, %true129, %end103
  %PB.0 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @134, i64 0, i64 0), %true129 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @121, i64 0, i64 0), %true124 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @121, i64 0, i64 0), %end103 ]
  %return132 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @135, i64 0, i64 0), i8* %return39)
  %return133 = call double @"chf@FS"(i8* %return132)
  %return135 = fcmp ogt double %return133, 0.000000e+00
  br i1 %return135, label %true137, label %end138

true129:                                          ; preds = %true124
  br label %end125

true137:                                          ; preds = %end125
  %return140 = fcmp one double %output117, 0.000000e+00
  br i1 %return140, label %true142, label %end138

end138:                                           ; preds = %true137, %true142, %end125
  %PP.0 = phi i8** [ %output151, %true142 ], [ getelementptr inbounds ([0 x i8*], [0 x i8*]* @0, i64 0, i64 0), %true137 ], [ getelementptr inbounds ([0 x i8*], [0 x i8*]* @0, i64 0, i64 0), %end125 ]
  %return153 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @137, i64 0, i64 0), i8* %return39)
  %return154 = call double @"chf@FS"(i8* %return153)
  %return156 = fcmp ogt double %return154, 0.000000e+00
  br i1 %return156, label %true158, label %end159

true142:                                          ; preds = %true137
  %return147 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @136, i64 0, i64 0), i8* %return39)
  %return148 = call i8* @"chs@SS"(i8* %return147)
  %return149 = call i64 @"atoi@IS"(i8* %return148)
  %return150 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([106 x i8*], [106 x i8*]* @107, i64 0, i64 0), i64 %return149)
  %output151 = call i8** @"append@[SS"(i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @0, i64 0, i64 0), i8* %return150)
  br label %end138

true158:                                          ; preds = %end138
  %return161 = fcmp one double %output117, 0.000000e+00
  br i1 %return161, label %true163, label %end159

end159:                                           ; preds = %true158, %true163, %end138
  %PP.1 = phi i8** [ %output172, %true163 ], [ %PP.0, %true158 ], [ %PP.0, %end138 ]
  %return174 = call i64 @"len@I[S"(i8** %PP.1)
  %return175 = call i64 @"eq@III"(i64 %return174, i64 1)
  %7 = icmp ne i64 %return175, 0
  br i1 %7, label %true176, label %false177

true163:                                          ; preds = %true158
  %return168 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @138, i64 0, i64 0), i8* %return39)
  %return169 = call i8* @"chs@SS"(i8* %return168)
  %return170 = call i64 @"atoi@IS"(i8* %return169)
  %return171 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([106 x i8*], [106 x i8*]* @107, i64 0, i64 0), i64 %return170)
  %output172 = call i8** @"append@[SS"(i8** %PP.0, i8* %return171)
  br label %end159

true176:                                          ; preds = %end159
  %return180 = call i8* @"getcomp@S[SI"(i8** %PP.1, i64 0)
  %return181 = call i8* @"concat@SSS:S"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @139, i64 0, i64 0), i8* %return180, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @140, i64 0, i64 0))
  br label %end178

false177:                                         ; preds = %end159
  %return184 = call i64 @"gt@III"(i64 %return174, i64 1)
  %8 = icmp ne i64 %return184, 0
  br i1 %8, label %true185, label %false186

end178:                                           ; preds = %true185, %false186, %true176
  %p_build.0 = phi i8* [ %return181, %true176 ], [ %return190, %true185 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @121, i64 0, i64 0), %false186 ]
  %return192 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @142, i64 0, i64 0), i8* %return39)
  %return193 = call double @"chf@FS"(i8* %return192)
  %return195 = fcmp ogt double %return193, 0.000000e+00
  br i1 %return195, label %true197, label %end198

true185:                                          ; preds = %false177
  %return189 = call i8* @"join@S[SS"(i8** %PP.1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @141, i64 0, i64 0))
  %return190 = call i8* @"concat@SSS:S"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @139, i64 0, i64 0), i8* %return189, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @140, i64 0, i64 0))
  br label %end178

false186:                                         ; preds = %false177
  br label %end178

true197:                                          ; preds = %end178
  %return200 = fcmp one double %output117, 0.000000e+00
  br i1 %return200, label %true202, label %end198

end198:                                           ; preds = %true197, %true202, %end178
  %P1.0 = phi i8* [ %return210, %true202 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @121, i64 0, i64 0), %true197 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @121, i64 0, i64 0), %end178 ]
  %return212 = fcmp one double %output117, 0.000000e+00
  br i1 %return212, label %true214, label %false215

true202:                                          ; preds = %true197
  %return206 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @143, i64 0, i64 0), i8* %return39)
  %return207 = call i8* @"chs@SS"(i8* %return206)
  %return208 = call i64 @"atoi@IS"(i8* %return207)
  %return209 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([106 x i8*], [106 x i8*]* @107, i64 0, i64 0), i64 %return208)
  %return210 = call i8* @"concat@SSS:S"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @139, i64 0, i64 0), i8* %return209, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @140, i64 0, i64 0))
  br label %end198

true214:                                          ; preds = %end198
  %return218 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @145, i64 0, i64 0), i8* %return39)
  %return219 = call double @"chf@FS"(i8* %return218)
  %return220 = call i8* @"sprintf@SS:F"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @144, i64 0, i64 0), double %return219)
  br label %end216

false215:                                         ; preds = %end198
  br label %end216

end216:                                           ; preds = %false215, %true214
  %W.0 = phi i8* [ %return220, %true214 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @121, i64 0, i64 0), %false215 ]
  %return222 = call i8** @"split@[SSS"(i8* %W.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @146, i64 0, i64 0))
  %return224 = call i64 @"len@I[S"(i8** %return222)
  %return225 = call i64 @"gt@III"(i64 %return224, i64 1)
  %9 = icmp ne i64 %return225, 0
  br i1 %9, label %true226, label %false227

true226:                                          ; preds = %end216
  br label %cond231

false227:                                         ; preds = %end216
  br label %end228

end228:                                           ; preds = %cond231, %false227
  %out.0 = phi i8** [ %out.1, %cond231 ], [ %return222, %false227 ]
  %return254 = call i8* @"join@S[SS"(i8** %out.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @146, i64 0, i64 0))
  %return263 = call i8* @"concat@SSS:SSSSSS"(i8* %PB.0, i8* %p_build.0, i8* %V1.0, i8* %V2.0, i8* %V3.0, i8* %V4.0, i8* %P1.0, i8* %return254)
  br label %end46

cond231:                                          ; preds = %body232, %true226
  %out.1 = phi i8** [ getelementptr inbounds ([0 x i8*], [0 x i8*]* @0, i64 0, i64 0), %true226 ], [ %output246, %body232 ]
  %count.0 = phi i64 [ 1, %true226 ], [ %output249, %body232 ]
  %__impl_foreach_index.0 = phi i64 [ 0, %true226 ], [ %output251, %body232 ]
  %return235 = call i64 @"lt@III"(i64 %__impl_foreach_index.0, i64 %return224)
  %10 = icmp ne i64 %return235, 0
  br i1 %10, label %body232, label %end228

body232:                                          ; preds = %cond231
  %return240 = call i8* @"getcomp@S[SI"(i8** %return222, i64 %__impl_foreach_index.0)
  %output244 = call i64 @"div@II"(i64 6, i64 %count.0)
  %return245 = call i8* @"slice@SSIIIIII"(i8* %return240, i64 0, i64 0, i64 1, i64 %output244, i64 0, i64 0)
  %output246 = call i8** @"append@[SS"(i8** %out.1, i8* %return245)
  %output249 = add i64 %count.0, 1
  %output251 = add i64 %__impl_foreach_index.0, 1
  br label %cond231

true270:                                          ; preds = %end35
  %return273 = call double @"chf@FS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @147, i64 0, i64 0))
  %return275 = fcmp one double %return273, 0.000000e+00
  br i1 %return275, label %true277, label %false278

end271:                                           ; preds = %end374, %end35
  %T.4 = phi i8** [ %output395, %end374 ], [ %T.3, %end35 ]
  store i8** %T.4, i8*** %_bound_VARTYPE
  store i64 %return10, i64* %_bound_XS
  ret void

true277:                                          ; preds = %true270
  %return281 = call i8* @"chs@SS"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @148, i64 0, i64 0))
  %return282 = call i64 @"atoi@IS"(i8* %return281)
  %return283 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([106 x i8*], [106 x i8*]* @107, i64 0, i64 0), i64 %return282)
  %output284 = call i8* @"add@SS"(i8* %return283, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @126, i64 0, i64 0))
  br label %end279

false278:                                         ; preds = %true270
  br label %end279

end279:                                           ; preds = %false278, %true277
  %FV1.0 = phi i8* [ %output284, %true277 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @126, i64 0, i64 0), %false278 ]
  %return285 = call double @"chf@FS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @149, i64 0, i64 0))
  %return287 = fcmp one double %return285, 0.000000e+00
  br i1 %return287, label %true289, label %false290

true289:                                          ; preds = %end279
  %return293 = call i8* @"chs@SS"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @150, i64 0, i64 0))
  %return294 = call i64 @"atoi@IS"(i8* %return293)
  %return295 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([106 x i8*], [106 x i8*]* @107, i64 0, i64 0), i64 %return294)
  %output296 = call i8* @"add@SS"(i8* %return295, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @126, i64 0, i64 0))
  br label %end291

false290:                                         ; preds = %end279
  br label %end291

end291:                                           ; preds = %false290, %true289
  %FV2.0 = phi i8* [ %output296, %true289 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @126, i64 0, i64 0), %false290 ]
  %output299 = fadd double %return273, %return285
  %return300 = call double @"chf@FS"(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @151, i64 0, i64 0))
  %return302 = fcmp ogt double %return300, 0.000000e+00
  br i1 %return302, label %true304, label %end305

true304:                                          ; preds = %end291
  %return307 = fcmp one double %output299, 0.000000e+00
  br i1 %return307, label %true309, label %end305

end305:                                           ; preds = %true304, %true309, %end291
  %Fp.0 = phi i8** [ %output316, %true309 ], [ getelementptr inbounds ([0 x i8*], [0 x i8*]* @0, i64 0, i64 0), %true304 ], [ getelementptr inbounds ([0 x i8*], [0 x i8*]* @0, i64 0, i64 0), %end291 ]
  %return318 = call i64 @"len@I[S"(i8** %Fp.0)
  %return319 = call i64 @"eq@III"(i64 %return318, i64 1)
  %11 = icmp ne i64 %return319, 0
  br i1 %11, label %true320, label %false321

true309:                                          ; preds = %true304
  %return313 = call i8* @"chs@SS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @152, i64 0, i64 0))
  %return314 = call i64 @"atoi@IS"(i8* %return313)
  %return315 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([106 x i8*], [106 x i8*]* @107, i64 0, i64 0), i64 %return314)
  %output316 = call i8** @"append@[SS"(i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @0, i64 0, i64 0), i8* %return315)
  br label %end305

true320:                                          ; preds = %end305
  %return324 = call i8* @"getcomp@S[SI"(i8** %Fp.0, i64 0)
  %return325 = call i8* @"concat@SSS:S"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @139, i64 0, i64 0), i8* %return324, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @140, i64 0, i64 0))
  br label %end322

false321:                                         ; preds = %end305
  %return328 = call i64 @"gt@III"(i64 %return318, i64 1)
  %12 = icmp ne i64 %return328, 0
  br i1 %12, label %true329, label %false330

end322:                                           ; preds = %true329, %false330, %true320
  %Fp_build.0 = phi i8* [ %return325, %true320 ], [ %return334, %true329 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @121, i64 0, i64 0), %false330 ]
  %return335 = call double @"chf@FS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @154, i64 0, i64 0))
  %return337 = fcmp ogt double %return335, 0.000000e+00
  br i1 %return337, label %true339, label %end340

true329:                                          ; preds = %false321
  %return333 = call i8* @"join@S[SS"(i8** %Fp.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @141, i64 0, i64 0))
  %return334 = call i8* @"concat@SSS:S"(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @114, i64 0, i64 0), i8* %return333, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @153, i64 0, i64 0))
  br label %end322

false330:                                         ; preds = %false321
  br label %end322

true339:                                          ; preds = %end322
  %return342 = fcmp one double %output299, 0.000000e+00
  br i1 %return342, label %true344, label %end340

end340:                                           ; preds = %true339, %true344, %end322
  %FP.0 = phi i8** [ %output351, %true344 ], [ getelementptr inbounds ([0 x i8*], [0 x i8*]* @0, i64 0, i64 0), %true339 ], [ getelementptr inbounds ([0 x i8*], [0 x i8*]* @0, i64 0, i64 0), %end322 ]
  %return352 = call double @"chf@FS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @156, i64 0, i64 0))
  %return354 = fcmp ogt double %return352, 0.000000e+00
  br i1 %return354, label %true356, label %end357

true344:                                          ; preds = %true339
  %return348 = call i8* @"chs@SS"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @155, i64 0, i64 0))
  %return349 = call i64 @"atoi@IS"(i8* %return348)
  %return350 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([106 x i8*], [106 x i8*]* @107, i64 0, i64 0), i64 %return349)
  %output351 = call i8** @"append@[SS"(i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @0, i64 0, i64 0), i8* %return350)
  br label %end340

true356:                                          ; preds = %end340
  %return359 = fcmp one double %output299, 0.000000e+00
  br i1 %return359, label %true361, label %end357

end357:                                           ; preds = %true356, %true361, %end340
  %FP.1 = phi i8** [ %output368, %true361 ], [ %FP.0, %true356 ], [ %FP.0, %end340 ]
  %return370 = call i64 @"len@I[S"(i8** %FP.1)
  %return371 = call i64 @"eq@III"(i64 %return370, i64 1)
  %13 = icmp ne i64 %return371, 0
  br i1 %13, label %true372, label %false373

true361:                                          ; preds = %true356
  %return365 = call i8* @"chs@SS"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @157, i64 0, i64 0))
  %return366 = call i64 @"atoi@IS"(i8* %return365)
  %return367 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([106 x i8*], [106 x i8*]* @107, i64 0, i64 0), i64 %return366)
  %output368 = call i8** @"append@[SS"(i8** %FP.0, i8* %return367)
  br label %end357

true372:                                          ; preds = %end357
  %return376 = call i8* @"getcomp@S[SI"(i8** %FP.1, i64 0)
  %return377 = call i8* @"concat@SSS:S"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @139, i64 0, i64 0), i8* %return376, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @158, i64 0, i64 0))
  br label %end374

false373:                                         ; preds = %end357
  %return380 = call i64 @"gt@III"(i64 %return370, i64 1)
  %14 = icmp ne i64 %return380, 0
  br i1 %14, label %true381, label %false382

end374:                                           ; preds = %true381, %false382, %true372
  %FP_build.0 = phi i8* [ %return377, %true372 ], [ %return386, %true381 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @121, i64 0, i64 0), %false382 ]
  %return391 = call i8* @"concat@SSS:SS"(i8* %Fp_build.0, i8* %FV1.0, i8* %FV2.0, i8* %FP_build.0)
  %return394 = call i8* @"toupper@SS"(i8* %return391)
  %output395 = call i8** @"append@[SS"(i8** %T.3, i8* %return394)
  br label %end271

true381:                                          ; preds = %false373
  %return385 = call i8* @"join@S[SS"(i8** %FP.1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @141, i64 0, i64 0))
  %return386 = call i8* @"concat@SSS:S"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @139, i64 0, i64 0), i8* %return385, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @158, i64 0, i64 0))
  br label %end374

false382:                                         ; preds = %false373
  br label %end374
}

; Function Attrs: nounwind readnone
declare i64 @"chi@IS"(i8*) #1

; Function Attrs: nounwind readnone
declare i8* @"itoa@SI"(i64) #1

; Function Attrs: nounwind readnone
declare i8* @"concat@SSS:S"(i8*, i8*, i8*) #1

; Function Attrs: nounwind
declare i8** @"append@[SS"(i8**, i8*) #2

; Function Attrs: nounwind
declare i64 @"detail@IIS"(i64, i8*) #2

; Function Attrs: nounwind readnone
declare i64 @"not@II"(i64) #1

; Function Attrs: nounwind readnone
declare i64 @"lt@III"(i64, i64) #1

; Function Attrs: nounwind readnone
declare i8* @"concat@SSS"(i8*, i8*) #1

; Function Attrs: nounwind readnone
declare double @"chf@FS"(i8*) #1

; Function Attrs: nounwind readnone
declare i8* @"chs@SS"(i8*) #1

; Function Attrs: nounwind readnone
declare i64 @"atoi@IS"(i8*) #1

; Function Attrs: nounwind readnone
declare i8* @"getcomp@S[SI"(i8**, i64) #1

; Function Attrs: nounwind readnone
declare i8* @"add@SS"(i8*, i8*) #1

; Function Attrs: nounwind readnone
declare i64 @"len@I[S"(i8**) #1

; Function Attrs: nounwind readnone
declare i64 @"eq@III"(i64, i64) #1

; Function Attrs: nounwind readnone
declare i64 @"gt@III"(i64, i64) #1

; Function Attrs: nounwind readnone
declare i8* @"join@S[SS"(i8**, i8*) #1

; Function Attrs: nounwind readnone
declare i8* @"sprintf@SS:F"(i8*, double) #1

; Function Attrs: nounwind readnone
declare i8** @"split@[SSS"(i8*, i8*) #1

; Function Attrs: nounwind readnone
declare i64 @"div@II"(i64, i64) #1

; Function Attrs: nounwind readnone
declare i8* @"slice@SSIIIIII"(i8*, i64, i64, i64, i64, i64, i64) #1

; Function Attrs: nounwind readnone
declare i8* @"concat@SSS:SSSSSS"(i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*) #1

; Function Attrs: nounwind readnone
declare i8* @"concat@SSS:SS"(i8*, i8*, i8*, i8*) #1

; Function Attrs: nounwind
declare i8* @"toupper@SS"(i8*) #2

; Function Attrs: nounwind
define void @TFFAuicollect(i8** %VARTYPE, i64 %XS) #2 {
__llvm_entry:
  %"<XS>" = alloca i64
  %"<VARTYPE>" = alloca i8**
  store i8** %VARTYPE, i8*** %"<VARTYPE>"
  store i64 %XS, i64* %"<XS>"
  call void @"_TFFAuicollect@[SI"(i8*** %"<VARTYPE>", i64* %"<XS>")
  %evalue = load i8**, i8*** %"<VARTYPE>"
  %gvalue = call i8** @"_export@[SS[S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @159, i64 0, i64 0), i8** %evalue) #3
  %evalue1 = load i64, i64* %"<XS>"
  %gvalue2 = call i64 @"_export@ISI"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @116, i64 0, i64 0), i64 %evalue1) #3
  store i8** %gvalue, i8*** @VARTYPE
  store i64 %gvalue2, i64* @XS
  ret void
}

declare i8** @"_export@[SS[S"(i8*, i8**)

declare i64 @"_export@ISI"(i8*, i64)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @TFFAuicollect(i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @0, i64 0, i64 0), i64 0)
  ret void
}

attributes #0 = { alwaysinline nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind }
attributes #3 = { nounwind readonly }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"20.0.506"}
!2 = !{!"64"}

;_code_end
