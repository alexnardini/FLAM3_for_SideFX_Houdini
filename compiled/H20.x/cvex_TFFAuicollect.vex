;_name	TFFAuicollect
; ModuleID = 'TFFAuicollect'
source_filename = "TFFAuicollect"

%gemtag = type { i64, i64*, i64*, i64*, i64*, i64*, i64*, i64*, double*, double*, double*, double*, double*, double*, double*, double* }
%gemtagff = type { i64, i64, i64, i64, i64, double, double, double, double, double }

@0 = private constant [4 x i8] c"RES\00"
@1 = private constant [4 x i8] c"pbw\00"
@2 = private constant [4 x i8] c"p1w\00"
@3 = private constant [4 x i8] c"p2w\00"
@4 = private constant [4 x i8] c"v1w\00"
@5 = private constant [4 x i8] c"v2w\00"
@6 = private constant [4 x i8] c"v3w\00"
@7 = private constant [4 x i8] c"v4w\00"
@8 = private constant [4 x i8] c"P1w\00"
@9 = private constant [4 x i8] c"p1t\00"
@10 = private constant [4 x i8] c"p2t\00"
@11 = private constant [4 x i8] c"v1t\00"
@12 = private constant [4 x i8] c"v2t\00"
@13 = private constant [4 x i8] c"v3t\00"
@14 = private constant [4 x i8] c"v4t\00"
@15 = private constant [4 x i8] c"P1t\00"
@16 = private constant [0 x i64] zeroinitializer
@17 = private constant [0 x double] zeroinitializer
@18 = private constant [5 x i8] c"fp1w\00"
@19 = private constant [5 x i8] c"fv1w\00"
@20 = private constant [5 x i8] c"fv2w\00"
@21 = private constant [5 x i8] c"fP1w\00"
@22 = private constant [5 x i8] c"fP2w\00"
@23 = private constant [5 x i8] c"fp1t\00"
@24 = private constant [5 x i8] c"fv1t\00"
@25 = private constant [5 x i8] c"fv2t\00"
@26 = private constant [5 x i8] c"fP1t\00"
@27 = private constant [5 x i8] c"fP2t\00"
@28 = private constant [0 x i8*] zeroinitializer
@29 = private constant [7 x i8] c"linear\00"
@30 = private constant [11 x i8] c"sinusoidal\00"
@31 = private constant [10 x i8] c"spherical\00"
@32 = private constant [6 x i8] c"swirl\00"
@33 = private constant [10 x i8] c"horseshoe\00"
@34 = private constant [6 x i8] c"polar\00"
@35 = private constant [13 x i8] c"handkerchief\00"
@36 = private constant [6 x i8] c"heart\00"
@37 = private constant [5 x i8] c"disc\00"
@38 = private constant [7 x i8] c"spiral\00"
@39 = private constant [11 x i8] c"hiperbolic\00"
@40 = private constant [8 x i8] c"diamond\00"
@41 = private constant [3 x i8] c"ex\00"
@42 = private constant [6 x i8] c"julia\00"
@43 = private constant [5 x i8] c"bent\00"
@44 = private constant [6 x i8] c"waves\00"
@45 = private constant [8 x i8] c"fisheye\00"
@46 = private constant [8 x i8] c"popcorn\00"
@47 = private constant [12 x i8] c"exponential\00"
@48 = private constant [6 x i8] c"power\00"
@49 = private constant [7 x i8] c"cosine\00"
@50 = private constant [6 x i8] c"rings\00"
@51 = private constant [4 x i8] c"fan\00"
@52 = private constant [7 x i8] c"bubble\00"
@53 = private constant [9 x i8] c"cylinder\00"
@54 = private constant [8 x i8] c"eyefish\00"
@55 = private constant [5 x i8] c"blur\00"
@56 = private constant [5 x i8] c"curl\00"
@57 = private constant [5 x i8] c"ngon\00"
@58 = private constant [4 x i8] c"pdj\00"
@59 = private constant [5 x i8] c"blob\00"
@60 = private constant [7 x i8] c"juliaN\00"
@61 = private constant [11 x i8] c"juliaScope\00"
@62 = private constant [14 x i8] c"gaussian_blur\00"
@63 = private constant [5 x i8] c"fan2\00"
@64 = private constant [7 x i8] c"rings2\00"
@65 = private constant [11 x i8] c"rectangles\00"
@66 = private constant [11 x i8] c"radialblur\00"
@67 = private constant [4 x i8] c"pie\00"
@68 = private constant [5 x i8] c"arch\00"
@69 = private constant [8 x i8] c"tangent\00"
@70 = private constant [7 x i8] c"square\00"
@71 = private constant [5 x i8] c"rays\00"
@72 = private constant [6 x i8] c"blade\00"
@73 = private constant [8 x i8] c"secant2\00"
@74 = private constant [10 x i8] c"twintrian\00"
@75 = private constant [6 x i8] c"cross\00"
@76 = private constant [6 x i8] c"disc2\00"
@77 = private constant [11 x i8] c"supershape\00"
@78 = private constant [7 x i8] c"flower\00"
@79 = private constant [6 x i8] c"conic\00"
@80 = private constant [9 x i8] c"parabola\00"
@81 = private constant [6 x i8] c"bent2\00"
@82 = private constant [8 x i8] c"bipolar\00"
@83 = private constant [9 x i8] c"boarders\00"
@84 = private constant [10 x i8] c"butterfly\00"
@85 = private constant [5 x i8] c"cell\00"
@86 = private constant [5 x i8] c"cpow\00"
@87 = private constant [6 x i8] c"edisc\00"
@88 = private constant [9 x i8] c"elliptic\00"
@89 = private constant [6 x i8] c"noise\00"
@90 = private constant [7 x i8] c"escher\00"
@91 = private constant [5 x i8] c"foci\00"
@92 = private constant [10 x i8] c"lazysusan\00"
@93 = private constant [7 x i8] c"loonie\00"
@94 = private constant [9 x i8] c"pre blur\00"
@95 = private constant [8 x i8] c"modulus\00"
@96 = private constant [7 x i8] c"oscope\00"
@97 = private constant [7 x i8] c"polar2\00"
@98 = private constant [9 x i8] c"popcorn2\00"
@99 = private constant [5 x i8] c"scry\00"
@100 = private constant [11 x i8] c"separation\00"
@101 = private constant [6 x i8] c"split\00"
@102 = private constant [7 x i8] c"splits\00"
@103 = private constant [8 x i8] c"stripes\00"
@104 = private constant [6 x i8] c"wedge\00"
@105 = private constant [12 x i8] c"wedge julia\00"
@106 = private constant [10 x i8] c"wedge sph\00"
@107 = private constant [6 x i8] c"whorl\00"
@108 = private constant [7 x i8] c"waves2\00"
@109 = private constant [4 x i8] c"exp\00"
@110 = private constant [4 x i8] c"log\00"
@111 = private constant [4 x i8] c"sin\00"
@112 = private constant [4 x i8] c"cos\00"
@113 = private constant [4 x i8] c"tan\00"
@114 = private constant [4 x i8] c"sec\00"
@115 = private constant [4 x i8] c"csc\00"
@116 = private constant [4 x i8] c"cot\00"
@117 = private constant [5 x i8] c"sinh\00"
@118 = private constant [5 x i8] c"cosh\00"
@119 = private constant [5 x i8] c"tanh\00"
@120 = private constant [5 x i8] c"sech\00"
@121 = private constant [5 x i8] c"csch\00"
@122 = private constant [5 x i8] c"coth\00"
@123 = private constant [6 x i8] c"auger\00"
@124 = private constant [5 x i8] c"flux\00"
@125 = private constant [7 x i8] c"mobius\00"
@126 = private constant [6 x i8] c"curve\00"
@127 = private constant [12 x i8] c"perspective\00"
@128 = private constant [7 x i8] c"bwraps\00"
@129 = private constant [11 x i8] c"hemisphere\00"
@130 = private constant [11 x i8] c"polynomial\00"
@131 = private constant [5 x i8] c"crop\00"
@132 = private constant [8 x i8] c"unpolar\00"
@133 = private constant [8 x i8] c"glynnia\00"
@134 = private constant [15 x i8] c"point_symmetry\00"
@135 = private constant [106 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @29, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @30, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @31, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @32, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @33, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @35, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @36, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @37, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @38, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @39, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @40, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @41, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @42, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @43, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @44, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @45, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @46, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @47, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @48, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @49, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @50, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @51, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @52, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @53, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @54, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @55, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @56, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @57, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @58, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @59, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @60, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @61, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @62, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @63, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @64, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @65, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @66, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @67, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @68, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @69, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @70, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @71, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @72, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @73, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @74, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @75, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @76, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @77, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @78, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @79, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @80, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @81, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @82, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @83, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @84, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @85, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @86, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @87, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @88, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @89, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @90, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @91, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @92, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @93, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @94, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @95, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @96, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @97, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @98, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @99, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @100, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @101, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @102, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @103, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @104, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @105, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @106, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @107, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @108, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @109, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @110, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @111, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @112, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @113, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @114, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @115, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @116, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @117, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @118, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @119, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @120, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @121, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @122, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @123, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @124, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @125, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @126, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @127, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @128, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @129, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @130, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @131, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @132, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @133, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @134, i64 0, i64 0)]
@136 = private constant [5 x i8] c"doff\00"
@137 = private constant [4 x i8] c"rip\00"
@138 = private constant [5 x i8] c"domb\00"
@139 = private constant [5 x i8] c"iter\00"
@140 = private constant [4 x i8] c"f3c\00"
@141 = private constant [3 x i8] c"XS\00"
@142 = private constant [3 x i8] c"xm\00"
@143 = private constant [2 x i8] c"[\00"
@144 = private constant [2 x i8] c"]\00"
@145 = private constant [3 x i8] c"Xt\00"
@146 = private constant [3 x i8] c"fX\00"
@147 = private constant [4 x i8] c"RIP\00"
@148 = private constant [4 x i8] c"F3C\00"
@149 = private constant [3 x i8] c"MB\00"
@150 = private constant [1 x i8] zeroinitializer
@151 = private constant [2 x i8] c":\00"
@152 = private constant [2 x i8] c"*\00"
@153 = private constant [3 x i8] c"[ \00"
@154 = private constant [4 x i8] c" ]:\00"
@155 = private constant [3 x i8] c", \00"
@156 = private constant [3 x i8] c"%g\00"
@157 = private constant [4 x i8] c"iw_\00"
@158 = private constant [2 x i8] c".\00"
@159 = private constant [3 x i8] c"]:\00"
@160 = private constant [3 x i8] c" ]\00"
@VARTYPE = external global i8**
@XS = external global i64
@161 = private constant [8 x i8] c"VARTYPE\00"

; Function Attrs: alwaysinline nounwind
define private void @"gemtagBuild@Z6gemtagM16N3RESIN3p1t[IN3p2t[IN3v1t[IN3v2t[IN3v3t[IN3v4t[IN3P1t[IN3pbw[FN3p1w[FN3p2w[FN3v1w[FN3v2w[FN3v3w[FN3v4w[FN3P1w[F"(%gemtag* %this) #0 {
__llvm_entry:
  %return = call i64 @"detail@IIS"(i64 2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @0, i64 0, i64 0))
  %tmp = load %gemtag, %gemtag* %this
  %0 = insertvalue %gemtag %tmp, i64 %return, 0
  store %gemtag %0, %gemtag* %this
  %return1 = call double* @"detail@[FIS"(i64 2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @1, i64 0, i64 0))
  %tmp2 = load %gemtag, %gemtag* %this
  %1 = insertvalue %gemtag %tmp2, double* %return1, 8
  store %gemtag %1, %gemtag* %this
  %return3 = call double* @"detail@[FIS"(i64 2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @2, i64 0, i64 0))
  %tmp4 = load %gemtag, %gemtag* %this
  %2 = insertvalue %gemtag %tmp4, double* %return3, 9
  store %gemtag %2, %gemtag* %this
  %return5 = call double* @"detail@[FIS"(i64 2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @3, i64 0, i64 0))
  %tmp6 = load %gemtag, %gemtag* %this
  %3 = insertvalue %gemtag %tmp6, double* %return5, 10
  store %gemtag %3, %gemtag* %this
  %return7 = call double* @"detail@[FIS"(i64 2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @4, i64 0, i64 0))
  %tmp8 = load %gemtag, %gemtag* %this
  %4 = insertvalue %gemtag %tmp8, double* %return7, 11
  store %gemtag %4, %gemtag* %this
  %return9 = call double* @"detail@[FIS"(i64 2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @5, i64 0, i64 0))
  %tmp10 = load %gemtag, %gemtag* %this
  %5 = insertvalue %gemtag %tmp10, double* %return9, 12
  store %gemtag %5, %gemtag* %this
  %return11 = call double* @"detail@[FIS"(i64 2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @6, i64 0, i64 0))
  %tmp12 = load %gemtag, %gemtag* %this
  %6 = insertvalue %gemtag %tmp12, double* %return11, 13
  store %gemtag %6, %gemtag* %this
  %return13 = call double* @"detail@[FIS"(i64 2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @7, i64 0, i64 0))
  %tmp14 = load %gemtag, %gemtag* %this
  %7 = insertvalue %gemtag %tmp14, double* %return13, 14
  store %gemtag %7, %gemtag* %this
  %return15 = call double* @"detail@[FIS"(i64 2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @8, i64 0, i64 0))
  %tmp16 = load %gemtag, %gemtag* %this
  %8 = insertvalue %gemtag %tmp16, double* %return15, 15
  store %gemtag %8, %gemtag* %this
  %return17 = call i64* @"detail@[IIS"(i64 2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @9, i64 0, i64 0))
  %tmp18 = load %gemtag, %gemtag* %this
  %9 = insertvalue %gemtag %tmp18, i64* %return17, 1
  store %gemtag %9, %gemtag* %this
  %return19 = call i64* @"detail@[IIS"(i64 2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @10, i64 0, i64 0))
  %tmp20 = load %gemtag, %gemtag* %this
  %10 = insertvalue %gemtag %tmp20, i64* %return19, 2
  store %gemtag %10, %gemtag* %this
  %return21 = call i64* @"detail@[IIS"(i64 2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @11, i64 0, i64 0))
  %tmp22 = load %gemtag, %gemtag* %this
  %11 = insertvalue %gemtag %tmp22, i64* %return21, 3
  store %gemtag %11, %gemtag* %this
  %return23 = call i64* @"detail@[IIS"(i64 2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @12, i64 0, i64 0))
  %tmp24 = load %gemtag, %gemtag* %this
  %12 = insertvalue %gemtag %tmp24, i64* %return23, 4
  store %gemtag %12, %gemtag* %this
  %return25 = call i64* @"detail@[IIS"(i64 2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @13, i64 0, i64 0))
  %tmp26 = load %gemtag, %gemtag* %this
  %13 = insertvalue %gemtag %tmp26, i64* %return25, 5
  store %gemtag %13, %gemtag* %this
  %return27 = call i64* @"detail@[IIS"(i64 2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @14, i64 0, i64 0))
  %tmp28 = load %gemtag, %gemtag* %this
  %14 = insertvalue %gemtag %tmp28, i64* %return27, 6
  store %gemtag %14, %gemtag* %this
  %return29 = call i64* @"detail@[IIS"(i64 2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @15, i64 0, i64 0))
  %tmp30 = load %gemtag, %gemtag* %this
  %15 = insertvalue %gemtag %tmp30, i64* %return29, 7
  store %gemtag %15, %gemtag* %this
  ret void
}

; Function Attrs: nounwind
declare i64 @"detail@IIS"(i64, i8*) #1

; Function Attrs: nounwind
declare double* @"detail@[FIS"(i64, i8*) #1

; Function Attrs: nounwind
declare i64* @"detail@[IIS"(i64, i8*) #1

; Function Attrs: alwaysinline nounwind
define private %gemtag @"gemtag@Z6gemtagM16N3RESIN3p1t[IN3p2t[IN3v1t[IN3v2t[IN3v3t[IN3v4t[IN3P1t[IN3pbw[FN3p1w[FN3p2w[FN3v1w[FN3v2w[FN3v3w[FN3v4w[FN3P1w[FI[I[I[I[I[I[I[I[F[F[F[F[F[F[F[F"(i64* %RES, i64** %p1t, i64** %p2t, i64** %v1t, i64** %v2t, i64** %v3t, i64** %v4t, i64** %P1t, double** %pbw, double** %p1w, double** %p2w, double** %v1w, double** %v2w, double** %v3w, double** %v4w, double** %P1w) #0 {
__llvm_entry:
  %RES1 = load i64, i64* %RES
  %0 = insertvalue %gemtag undef, i64 %RES1, 0
  %p1t2 = load i64*, i64** %p1t
  %1 = insertvalue %gemtag %0, i64* %p1t2, 1
  %p2t4 = load i64*, i64** %p2t
  %2 = insertvalue %gemtag %1, i64* %p2t4, 2
  %v1t6 = load i64*, i64** %v1t
  %3 = insertvalue %gemtag %2, i64* %v1t6, 3
  %v2t8 = load i64*, i64** %v2t
  %4 = insertvalue %gemtag %3, i64* %v2t8, 4
  %v3t10 = load i64*, i64** %v3t
  %5 = insertvalue %gemtag %4, i64* %v3t10, 5
  %v4t12 = load i64*, i64** %v4t
  %6 = insertvalue %gemtag %5, i64* %v4t12, 6
  %P1t14 = load i64*, i64** %P1t
  %7 = insertvalue %gemtag %6, i64* %P1t14, 7
  %pbw16 = load double*, double** %pbw
  %8 = insertvalue %gemtag %7, double* %pbw16, 8
  %p1w18 = load double*, double** %p1w
  %9 = insertvalue %gemtag %8, double* %p1w18, 9
  %p2w20 = load double*, double** %p2w
  %10 = insertvalue %gemtag %9, double* %p2w20, 10
  %v1w22 = load double*, double** %v1w
  %11 = insertvalue %gemtag %10, double* %v1w22, 11
  %v2w24 = load double*, double** %v2w
  %12 = insertvalue %gemtag %11, double* %v2w24, 12
  %v3w26 = load double*, double** %v3w
  %13 = insertvalue %gemtag %12, double* %v3w26, 13
  %v4w28 = load double*, double** %v4w
  %14 = insertvalue %gemtag %13, double* %v4w28, 14
  %P1w30 = load double*, double** %P1w
  %15 = insertvalue %gemtag %14, double* %P1w30, 15
  ret %gemtag %15
}

; Function Attrs: alwaysinline nounwind
define private %gemtag @"gemtag@Z6gemtagM16N3RESIN3p1t[IN3p2t[IN3v1t[IN3v2t[IN3v3t[IN3v4t[IN3P1t[IN3pbw[FN3p1w[FN3p2w[FN3v1w[FN3v2w[FN3v3w[FN3v4w[FN3P1w[F"() #0 {
__llvm_entry:
  %0 = alloca i64*
  %1 = alloca i64*
  %2 = alloca i64*
  %3 = alloca i64*
  %4 = alloca i64*
  %5 = alloca i64*
  %6 = alloca i64*
  %7 = alloca double*
  %8 = alloca double*
  %9 = alloca double*
  %10 = alloca double*
  %11 = alloca double*
  %12 = alloca double*
  %13 = alloca double*
  %14 = alloca double*
  %15 = alloca i64
  store i64 0, i64* %15
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @16, i64 0, i64 0), i64** %0
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @16, i64 0, i64 0), i64** %1
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @16, i64 0, i64 0), i64** %2
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @16, i64 0, i64 0), i64** %3
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @16, i64 0, i64 0), i64** %4
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @16, i64 0, i64 0), i64** %5
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @16, i64 0, i64 0), i64** %6
  store double* getelementptr inbounds ([0 x double], [0 x double]* @17, i64 0, i64 0), double** %7
  store double* getelementptr inbounds ([0 x double], [0 x double]* @17, i64 0, i64 0), double** %8
  store double* getelementptr inbounds ([0 x double], [0 x double]* @17, i64 0, i64 0), double** %9
  store double* getelementptr inbounds ([0 x double], [0 x double]* @17, i64 0, i64 0), double** %10
  store double* getelementptr inbounds ([0 x double], [0 x double]* @17, i64 0, i64 0), double** %11
  store double* getelementptr inbounds ([0 x double], [0 x double]* @17, i64 0, i64 0), double** %12
  store double* getelementptr inbounds ([0 x double], [0 x double]* @17, i64 0, i64 0), double** %13
  store double* getelementptr inbounds ([0 x double], [0 x double]* @17, i64 0, i64 0), double** %14
  %gemtag = call %gemtag @"gemtag@Z6gemtagM16N3RESIN3p1t[IN3p2t[IN3v1t[IN3v2t[IN3v3t[IN3v4t[IN3P1t[IN3pbw[FN3p1w[FN3p2w[FN3v1w[FN3v2w[FN3v3w[FN3v4w[FN3P1w[FI[I[I[I[I[I[I[I[F[F[F[F[F[F[F[F"(i64* %15, i64** %0, i64** %1, i64** %2, i64** %3, i64** %4, i64** %5, i64** %6, double** %7, double** %8, double** %9, double** %10, double** %11, double** %12, double** %13, double** %14)
  ret %gemtag %gemtag
}

; Function Attrs: alwaysinline nounwind
define private void @"gemtagffBuild@Z8gemtagffM10N4fp1tIN4fv1tIN4fv2tIN4fP1tIN4fP2tIN4fp1wFN4fv1wFN4fv2wFN4fP1wFN4fP2wFI"(%gemtagff* %this, i64* %FF) #0 {
__llvm_entry:
  %FF1 = load i64, i64* %FF
  %0 = icmp ne i64 %FF1, 0
  br i1 %0, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %return = call double @"detail@FIS"(i64 2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @18, i64 0, i64 0))
  %tmp = load %gemtagff, %gemtagff* %this
  %1 = insertvalue %gemtagff %tmp, double %return, 5
  store %gemtagff %1, %gemtagff* %this
  %return2 = call double @"detail@FIS"(i64 2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @19, i64 0, i64 0))
  %tmp3 = load %gemtagff, %gemtagff* %this
  %2 = insertvalue %gemtagff %tmp3, double %return2, 6
  store %gemtagff %2, %gemtagff* %this
  %return4 = call double @"detail@FIS"(i64 2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @20, i64 0, i64 0))
  %tmp5 = load %gemtagff, %gemtagff* %this
  %3 = insertvalue %gemtagff %tmp5, double %return4, 7
  store %gemtagff %3, %gemtagff* %this
  %return6 = call double @"detail@FIS"(i64 2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @21, i64 0, i64 0))
  %tmp7 = load %gemtagff, %gemtagff* %this
  %4 = insertvalue %gemtagff %tmp7, double %return6, 8
  store %gemtagff %4, %gemtagff* %this
  %return8 = call double @"detail@FIS"(i64 2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @22, i64 0, i64 0))
  %tmp9 = load %gemtagff, %gemtagff* %this
  %5 = insertvalue %gemtagff %tmp9, double %return8, 9
  store %gemtagff %5, %gemtagff* %this
  %return10 = call i64 @"detail@IIS"(i64 2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @23, i64 0, i64 0))
  %tmp11 = load %gemtagff, %gemtagff* %this
  %6 = insertvalue %gemtagff %tmp11, i64 %return10, 0
  store %gemtagff %6, %gemtagff* %this
  %return12 = call i64 @"detail@IIS"(i64 2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @24, i64 0, i64 0))
  %tmp13 = load %gemtagff, %gemtagff* %this
  %7 = insertvalue %gemtagff %tmp13, i64 %return12, 1
  store %gemtagff %7, %gemtagff* %this
  %return14 = call i64 @"detail@IIS"(i64 2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @25, i64 0, i64 0))
  %tmp15 = load %gemtagff, %gemtagff* %this
  %8 = insertvalue %gemtagff %tmp15, i64 %return14, 2
  store %gemtagff %8, %gemtagff* %this
  %return16 = call i64 @"detail@IIS"(i64 2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @26, i64 0, i64 0))
  %tmp17 = load %gemtagff, %gemtagff* %this
  %9 = insertvalue %gemtagff %tmp17, i64 %return16, 3
  store %gemtagff %9, %gemtagff* %this
  %return18 = call i64 @"detail@IIS"(i64 2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @27, i64 0, i64 0))
  %tmp19 = load %gemtagff, %gemtagff* %this
  %10 = insertvalue %gemtagff %tmp19, i64 %return18, 4
  store %gemtagff %10, %gemtagff* %this
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  ret void
}

; Function Attrs: nounwind
declare double @"detail@FIS"(i64, i8*) #1

; Function Attrs: alwaysinline nounwind
define private %gemtagff @"gemtagff@Z8gemtagffM10N4fp1tIN4fv1tIN4fv2tIN4fP1tIN4fP2tIN4fp1wFN4fv1wFN4fv2wFN4fP1wFN4fP2wFIIIIIFFFFF"(i64* %fp1t, i64* %fv1t, i64* %fv2t, i64* %fP1t, i64* %fP2t, double* %fp1w, double* %fv1w, double* %fv2w, double* %fP1w, double* %fP2w) #0 {
__llvm_entry:
  %fp1t1 = load i64, i64* %fp1t
  %0 = insertvalue %gemtagff undef, i64 %fp1t1, 0
  %fv1t2 = load i64, i64* %fv1t
  %1 = insertvalue %gemtagff %0, i64 %fv1t2, 1
  %fv2t4 = load i64, i64* %fv2t
  %2 = insertvalue %gemtagff %1, i64 %fv2t4, 2
  %fP1t6 = load i64, i64* %fP1t
  %3 = insertvalue %gemtagff %2, i64 %fP1t6, 3
  %fP2t8 = load i64, i64* %fP2t
  %4 = insertvalue %gemtagff %3, i64 %fP2t8, 4
  %fp1w10 = load double, double* %fp1w
  %5 = insertvalue %gemtagff %4, double %fp1w10, 5
  %fv1w12 = load double, double* %fv1w
  %6 = insertvalue %gemtagff %5, double %fv1w12, 6
  %fv2w14 = load double, double* %fv2w
  %7 = insertvalue %gemtagff %6, double %fv2w14, 7
  %fP1w16 = load double, double* %fP1w
  %8 = insertvalue %gemtagff %7, double %fP1w16, 8
  %fP2w18 = load double, double* %fP2w
  %9 = insertvalue %gemtagff %8, double %fP2w18, 9
  ret %gemtagff %9
}

; Function Attrs: alwaysinline nounwind
define private %gemtagff @"gemtagff@Z8gemtagffM10N4fp1tIN4fv1tIN4fv2tIN4fP1tIN4fP2tIN4fp1wFN4fv1wFN4fv2wFN4fP1wFN4fP2wF"() #0 {
__llvm_entry:
  %0 = alloca i64
  %1 = alloca i64
  %2 = alloca i64
  %3 = alloca i64
  %4 = alloca double
  %5 = alloca double
  %6 = alloca double
  %7 = alloca double
  %8 = alloca double
  %9 = alloca i64
  store i64 0, i64* %9
  store i64 0, i64* %0
  store i64 0, i64* %1
  store i64 0, i64* %2
  store i64 0, i64* %3
  store double 0.000000e+00, double* %4
  store double 0.000000e+00, double* %5
  store double 0.000000e+00, double* %6
  store double 0.000000e+00, double* %7
  store double 0.000000e+00, double* %8
  %gemtagff = call %gemtagff @"gemtagff@Z8gemtagffM10N4fp1tIN4fv1tIN4fv2tIN4fP1tIN4fP2tIN4fp1wFN4fv1wFN4fv2wFN4fP1wFN4fP2wFIIIIIFFFFF"(i64* %9, i64* %0, i64* %1, i64* %2, i64* %3, double* %4, double* %5, double* %6, double* %7, double* %8)
  ret %gemtagff %gemtagff
}

; Function Attrs: alwaysinline nounwind
define private void @"_TFFAuicollect@[SI"(i8*** %_bound_VARTYPE, i64* %_bound_XS) #0 {
__llvm_entry:
  %GEMTAG = alloca %gemtag
  %GEMTAGFF = alloca %gemtagff
  %0 = alloca i64
  %return = call i64 @"chi@IS"(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @136, i64 0, i64 0))
  %return1 = call i64 @"chi@IS"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @137, i64 0, i64 0))
  %return2 = call i64 @"chi@IS"(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @138, i64 0, i64 0))
  %return3 = call i64 @"chi@IS"(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @139, i64 0, i64 0))
  %return4 = call i64 @"chi@IS"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @140, i64 0, i64 0))
  %return6 = call i64 @"detail@IIS"(i64 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @141, i64 0, i64 0))
  %return7 = call i64 @"chi@IS"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @142, i64 0, i64 0))
  %GEMTAG8 = call %gemtag @"gemtag@Z6gemtagM16N3RESIN3p1t[IN3p2t[IN3v1t[IN3v2t[IN3v3t[IN3v4t[IN3P1t[IN3pbw[FN3p1w[FN3p2w[FN3v1w[FN3v2w[FN3v3w[FN3v4w[FN3P1w[F"()
  %GEMTAG8.fca.0.extract = extractvalue %gemtag %GEMTAG8, 0
  %GEMTAG8.fca.0.gep = getelementptr inbounds %gemtag, %gemtag* %GEMTAG, i32 0, i32 0
  store i64 %GEMTAG8.fca.0.extract, i64* %GEMTAG8.fca.0.gep
  %GEMTAG8.fca.1.extract = extractvalue %gemtag %GEMTAG8, 1
  %GEMTAG8.fca.1.gep = getelementptr inbounds %gemtag, %gemtag* %GEMTAG, i32 0, i32 1
  store i64* %GEMTAG8.fca.1.extract, i64** %GEMTAG8.fca.1.gep
  %GEMTAG8.fca.2.extract = extractvalue %gemtag %GEMTAG8, 2
  %GEMTAG8.fca.2.gep = getelementptr inbounds %gemtag, %gemtag* %GEMTAG, i32 0, i32 2
  store i64* %GEMTAG8.fca.2.extract, i64** %GEMTAG8.fca.2.gep
  %GEMTAG8.fca.3.extract = extractvalue %gemtag %GEMTAG8, 3
  %GEMTAG8.fca.3.gep = getelementptr inbounds %gemtag, %gemtag* %GEMTAG, i32 0, i32 3
  store i64* %GEMTAG8.fca.3.extract, i64** %GEMTAG8.fca.3.gep
  %GEMTAG8.fca.4.extract = extractvalue %gemtag %GEMTAG8, 4
  %GEMTAG8.fca.4.gep = getelementptr inbounds %gemtag, %gemtag* %GEMTAG, i32 0, i32 4
  store i64* %GEMTAG8.fca.4.extract, i64** %GEMTAG8.fca.4.gep
  %GEMTAG8.fca.5.extract = extractvalue %gemtag %GEMTAG8, 5
  %GEMTAG8.fca.5.gep = getelementptr inbounds %gemtag, %gemtag* %GEMTAG, i32 0, i32 5
  store i64* %GEMTAG8.fca.5.extract, i64** %GEMTAG8.fca.5.gep
  %GEMTAG8.fca.6.extract = extractvalue %gemtag %GEMTAG8, 6
  %GEMTAG8.fca.6.gep = getelementptr inbounds %gemtag, %gemtag* %GEMTAG, i32 0, i32 6
  store i64* %GEMTAG8.fca.6.extract, i64** %GEMTAG8.fca.6.gep
  %GEMTAG8.fca.7.extract = extractvalue %gemtag %GEMTAG8, 7
  %GEMTAG8.fca.7.gep = getelementptr inbounds %gemtag, %gemtag* %GEMTAG, i32 0, i32 7
  store i64* %GEMTAG8.fca.7.extract, i64** %GEMTAG8.fca.7.gep
  %GEMTAG8.fca.8.extract = extractvalue %gemtag %GEMTAG8, 8
  %GEMTAG8.fca.8.gep = getelementptr inbounds %gemtag, %gemtag* %GEMTAG, i32 0, i32 8
  store double* %GEMTAG8.fca.8.extract, double** %GEMTAG8.fca.8.gep
  %GEMTAG8.fca.9.extract = extractvalue %gemtag %GEMTAG8, 9
  %GEMTAG8.fca.9.gep = getelementptr inbounds %gemtag, %gemtag* %GEMTAG, i32 0, i32 9
  store double* %GEMTAG8.fca.9.extract, double** %GEMTAG8.fca.9.gep
  %GEMTAG8.fca.10.extract = extractvalue %gemtag %GEMTAG8, 10
  %GEMTAG8.fca.10.gep = getelementptr inbounds %gemtag, %gemtag* %GEMTAG, i32 0, i32 10
  store double* %GEMTAG8.fca.10.extract, double** %GEMTAG8.fca.10.gep
  %GEMTAG8.fca.11.extract = extractvalue %gemtag %GEMTAG8, 11
  %GEMTAG8.fca.11.gep = getelementptr inbounds %gemtag, %gemtag* %GEMTAG, i32 0, i32 11
  store double* %GEMTAG8.fca.11.extract, double** %GEMTAG8.fca.11.gep
  %GEMTAG8.fca.12.extract = extractvalue %gemtag %GEMTAG8, 12
  %GEMTAG8.fca.12.gep = getelementptr inbounds %gemtag, %gemtag* %GEMTAG, i32 0, i32 12
  store double* %GEMTAG8.fca.12.extract, double** %GEMTAG8.fca.12.gep
  %GEMTAG8.fca.13.extract = extractvalue %gemtag %GEMTAG8, 13
  %GEMTAG8.fca.13.gep = getelementptr inbounds %gemtag, %gemtag* %GEMTAG, i32 0, i32 13
  store double* %GEMTAG8.fca.13.extract, double** %GEMTAG8.fca.13.gep
  %GEMTAG8.fca.14.extract = extractvalue %gemtag %GEMTAG8, 14
  %GEMTAG8.fca.14.gep = getelementptr inbounds %gemtag, %gemtag* %GEMTAG, i32 0, i32 14
  store double* %GEMTAG8.fca.14.extract, double** %GEMTAG8.fca.14.gep
  %GEMTAG8.fca.15.extract = extractvalue %gemtag %GEMTAG8, 15
  %GEMTAG8.fca.15.gep = getelementptr inbounds %gemtag, %gemtag* %GEMTAG, i32 0, i32 15
  store double* %GEMTAG8.fca.15.extract, double** %GEMTAG8.fca.15.gep
  call void @"gemtagBuild@Z6gemtagM16N3RESIN3p1t[IN3p2t[IN3v1t[IN3v2t[IN3v3t[IN3v4t[IN3P1t[IN3pbw[FN3p1w[FN3p2w[FN3v1w[FN3v2w[FN3v3w[FN3v4w[FN3P1w[F"(%gemtag* %GEMTAG)
  %GEMTAG9.fca.0.load = load i64, i64* %GEMTAG8.fca.0.gep
  %GEMTAG9.fca.0.insert = insertvalue %gemtag undef, i64 %GEMTAG9.fca.0.load, 0
  %GEMTAG9.fca.1.load = load i64*, i64** %GEMTAG8.fca.1.gep
  %GEMTAG9.fca.1.insert = insertvalue %gemtag %GEMTAG9.fca.0.insert, i64* %GEMTAG9.fca.1.load, 1
  %GEMTAG9.fca.2.load = load i64*, i64** %GEMTAG8.fca.2.gep
  %GEMTAG9.fca.2.insert = insertvalue %gemtag %GEMTAG9.fca.1.insert, i64* %GEMTAG9.fca.2.load, 2
  %GEMTAG9.fca.3.load = load i64*, i64** %GEMTAG8.fca.3.gep
  %GEMTAG9.fca.3.insert = insertvalue %gemtag %GEMTAG9.fca.2.insert, i64* %GEMTAG9.fca.3.load, 3
  %GEMTAG9.fca.4.load = load i64*, i64** %GEMTAG8.fca.4.gep
  %GEMTAG9.fca.4.insert = insertvalue %gemtag %GEMTAG9.fca.3.insert, i64* %GEMTAG9.fca.4.load, 4
  %GEMTAG9.fca.5.load = load i64*, i64** %GEMTAG8.fca.5.gep
  %GEMTAG9.fca.5.insert = insertvalue %gemtag %GEMTAG9.fca.4.insert, i64* %GEMTAG9.fca.5.load, 5
  %GEMTAG9.fca.6.load = load i64*, i64** %GEMTAG8.fca.6.gep
  %GEMTAG9.fca.6.insert = insertvalue %gemtag %GEMTAG9.fca.5.insert, i64* %GEMTAG9.fca.6.load, 6
  %GEMTAG9.fca.7.load = load i64*, i64** %GEMTAG8.fca.7.gep
  %GEMTAG9.fca.7.insert = insertvalue %gemtag %GEMTAG9.fca.6.insert, i64* %GEMTAG9.fca.7.load, 7
  %GEMTAG9.fca.8.load = load double*, double** %GEMTAG8.fca.8.gep
  %GEMTAG9.fca.8.insert = insertvalue %gemtag %GEMTAG9.fca.7.insert, double* %GEMTAG9.fca.8.load, 8
  %GEMTAG9.fca.9.load = load double*, double** %GEMTAG8.fca.9.gep
  %GEMTAG9.fca.9.insert = insertvalue %gemtag %GEMTAG9.fca.8.insert, double* %GEMTAG9.fca.9.load, 9
  %GEMTAG9.fca.10.load = load double*, double** %GEMTAG8.fca.10.gep
  %GEMTAG9.fca.10.insert = insertvalue %gemtag %GEMTAG9.fca.9.insert, double* %GEMTAG9.fca.10.load, 10
  %GEMTAG9.fca.11.load = load double*, double** %GEMTAG8.fca.11.gep
  %GEMTAG9.fca.11.insert = insertvalue %gemtag %GEMTAG9.fca.10.insert, double* %GEMTAG9.fca.11.load, 11
  %GEMTAG9.fca.12.load = load double*, double** %GEMTAG8.fca.12.gep
  %GEMTAG9.fca.12.insert = insertvalue %gemtag %GEMTAG9.fca.11.insert, double* %GEMTAG9.fca.12.load, 12
  %GEMTAG9.fca.13.load = load double*, double** %GEMTAG8.fca.13.gep
  %GEMTAG9.fca.13.insert = insertvalue %gemtag %GEMTAG9.fca.12.insert, double* %GEMTAG9.fca.13.load, 13
  %GEMTAG9.fca.14.load = load double*, double** %GEMTAG8.fca.14.gep
  %GEMTAG9.fca.14.insert = insertvalue %gemtag %GEMTAG9.fca.13.insert, double* %GEMTAG9.fca.14.load, 14
  %GEMTAG9.fca.15.load = load double*, double** %GEMTAG8.fca.15.gep
  %GEMTAGFF41 = call %gemtagff @"gemtagff@Z8gemtagffM10N4fp1tIN4fv1tIN4fv2tIN4fP1tIN4fP2tIN4fp1wFN4fv1wFN4fv2wFN4fP1wFN4fP2wF"()
  %GEMTAGFF41.fca.0.extract = extractvalue %gemtagff %GEMTAGFF41, 0
  %GEMTAGFF41.fca.0.gep = getelementptr inbounds %gemtagff, %gemtagff* %GEMTAGFF, i32 0, i32 0
  store i64 %GEMTAGFF41.fca.0.extract, i64* %GEMTAGFF41.fca.0.gep
  %GEMTAGFF41.fca.1.extract = extractvalue %gemtagff %GEMTAGFF41, 1
  %GEMTAGFF41.fca.1.gep = getelementptr inbounds %gemtagff, %gemtagff* %GEMTAGFF, i32 0, i32 1
  store i64 %GEMTAGFF41.fca.1.extract, i64* %GEMTAGFF41.fca.1.gep
  %GEMTAGFF41.fca.2.extract = extractvalue %gemtagff %GEMTAGFF41, 2
  %GEMTAGFF41.fca.2.gep = getelementptr inbounds %gemtagff, %gemtagff* %GEMTAGFF, i32 0, i32 2
  store i64 %GEMTAGFF41.fca.2.extract, i64* %GEMTAGFF41.fca.2.gep
  %GEMTAGFF41.fca.3.extract = extractvalue %gemtagff %GEMTAGFF41, 3
  %GEMTAGFF41.fca.3.gep = getelementptr inbounds %gemtagff, %gemtagff* %GEMTAGFF, i32 0, i32 3
  store i64 %GEMTAGFF41.fca.3.extract, i64* %GEMTAGFF41.fca.3.gep
  %GEMTAGFF41.fca.4.extract = extractvalue %gemtagff %GEMTAGFF41, 4
  %GEMTAGFF41.fca.4.gep = getelementptr inbounds %gemtagff, %gemtagff* %GEMTAGFF, i32 0, i32 4
  store i64 %GEMTAGFF41.fca.4.extract, i64* %GEMTAGFF41.fca.4.gep
  %GEMTAGFF41.fca.5.extract = extractvalue %gemtagff %GEMTAGFF41, 5
  %GEMTAGFF41.fca.5.gep = getelementptr inbounds %gemtagff, %gemtagff* %GEMTAGFF, i32 0, i32 5
  store double %GEMTAGFF41.fca.5.extract, double* %GEMTAGFF41.fca.5.gep
  %GEMTAGFF41.fca.6.extract = extractvalue %gemtagff %GEMTAGFF41, 6
  %GEMTAGFF41.fca.6.gep = getelementptr inbounds %gemtagff, %gemtagff* %GEMTAGFF, i32 0, i32 6
  store double %GEMTAGFF41.fca.6.extract, double* %GEMTAGFF41.fca.6.gep
  %GEMTAGFF41.fca.7.extract = extractvalue %gemtagff %GEMTAGFF41, 7
  %GEMTAGFF41.fca.7.gep = getelementptr inbounds %gemtagff, %gemtagff* %GEMTAGFF, i32 0, i32 7
  store double %GEMTAGFF41.fca.7.extract, double* %GEMTAGFF41.fca.7.gep
  %GEMTAGFF41.fca.8.extract = extractvalue %gemtagff %GEMTAGFF41, 8
  %GEMTAGFF41.fca.8.gep = getelementptr inbounds %gemtagff, %gemtagff* %GEMTAGFF, i32 0, i32 8
  store double %GEMTAGFF41.fca.8.extract, double* %GEMTAGFF41.fca.8.gep
  %GEMTAGFF41.fca.9.extract = extractvalue %gemtagff %GEMTAGFF41, 9
  %GEMTAGFF41.fca.9.gep = getelementptr inbounds %gemtagff, %gemtagff* %GEMTAGFF, i32 0, i32 9
  store double %GEMTAGFF41.fca.9.extract, double* %GEMTAGFF41.fca.9.gep
  store i64 %return, i64* %0
  call void @"gemtagffBuild@Z8gemtagffM10N4fp1tIN4fv1tIN4fv2tIN4fP1tIN4fP2tIN4fp1wFN4fv1wFN4fv2wFN4fP1wFN4fP2wFI"(%gemtagff* %GEMTAGFF, i64* %0)
  %GEMTAGFF43.fca.0.load = load i64, i64* %GEMTAGFF41.fca.0.gep
  %GEMTAGFF43.fca.0.insert = insertvalue %gemtagff undef, i64 %GEMTAGFF43.fca.0.load, 0
  %GEMTAGFF43.fca.1.load = load i64, i64* %GEMTAGFF41.fca.1.gep
  %GEMTAGFF43.fca.1.insert = insertvalue %gemtagff %GEMTAGFF43.fca.0.insert, i64 %GEMTAGFF43.fca.1.load, 1
  %GEMTAGFF43.fca.2.load = load i64, i64* %GEMTAGFF41.fca.2.gep
  %GEMTAGFF43.fca.2.insert = insertvalue %gemtagff %GEMTAGFF43.fca.1.insert, i64 %GEMTAGFF43.fca.2.load, 2
  %GEMTAGFF43.fca.3.load = load i64, i64* %GEMTAGFF41.fca.3.gep
  %GEMTAGFF43.fca.3.insert = insertvalue %gemtagff %GEMTAGFF43.fca.2.insert, i64 %GEMTAGFF43.fca.3.load, 3
  %GEMTAGFF43.fca.4.load = load i64, i64* %GEMTAGFF41.fca.4.gep
  %GEMTAGFF43.fca.4.insert = insertvalue %gemtagff %GEMTAGFF43.fca.3.insert, i64 %GEMTAGFF43.fca.4.load, 4
  %GEMTAGFF43.fca.5.load = load double, double* %GEMTAGFF41.fca.5.gep
  %GEMTAGFF43.fca.5.insert = insertvalue %gemtagff %GEMTAGFF43.fca.4.insert, double %GEMTAGFF43.fca.5.load, 5
  %GEMTAGFF43.fca.6.load = load double, double* %GEMTAGFF41.fca.6.gep
  %GEMTAGFF43.fca.6.insert = insertvalue %gemtagff %GEMTAGFF43.fca.5.insert, double %GEMTAGFF43.fca.6.load, 6
  %GEMTAGFF43.fca.7.load = load double, double* %GEMTAGFF41.fca.7.gep
  %GEMTAGFF43.fca.7.insert = insertvalue %gemtagff %GEMTAGFF43.fca.6.insert, double %GEMTAGFF43.fca.7.load, 7
  %GEMTAGFF43.fca.8.load = load double, double* %GEMTAGFF41.fca.8.gep
  %GEMTAGFF43.fca.8.insert = insertvalue %gemtagff %GEMTAGFF43.fca.7.insert, double %GEMTAGFF43.fca.8.load, 8
  %GEMTAGFF43.fca.9.load = load double, double* %GEMTAGFF41.fca.9.gep
  %return65 = call i8* @"itoa@SI"(i64 %return3)
  %return66 = call i8* @"concat@SSS:S"(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @143, i64 0, i64 0), i8* %return65, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @144, i64 0, i64 0))
  %output = call i8** @"append@[SS"(i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @28, i64 0, i64 0), i8* %return66)
  %1 = icmp ne i64 %return6, 0
  br i1 %1, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %return69 = call i64 @"not@II"(i64 %return7)
  %2 = icmp ne i64 %return69, 0
  br i1 %2, label %true70, label %false

end:                                              ; preds = %true70, %false, %__llvm_entry
  %T.0 = phi i8** [ %output74, %true70 ], [ %output77, %false ], [ %output, %__llvm_entry ]
  %3 = icmp ne i64 %return1, 0
  br i1 %3, label %true79, label %end80

true70:                                           ; preds = %true
  %return73 = call i8* @"concat@SSS:S"(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @143, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @145, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @144, i64 0, i64 0))
  %output74 = call i8** @"append@[SS"(i8** %output, i8* %return73)
  br label %end

false:                                            ; preds = %true
  %return76 = call i8* @"concat@SSS:S"(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @143, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @146, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @144, i64 0, i64 0))
  %output77 = call i8** @"append@[SS"(i8** %output, i8* %return76)
  br label %end

true79:                                           ; preds = %end
  %output82 = call i8** @"append@[SS"(i8** %T.0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @147, i64 0, i64 0))
  br label %end80

end80:                                            ; preds = %true79, %end
  %T.1 = phi i8** [ %output82, %true79 ], [ %T.0, %end ]
  %4 = icmp ne i64 %return4, 0
  br i1 %4, label %true84, label %end85

true84:                                           ; preds = %end80
  %output87 = call i8** @"append@[SS"(i8** %T.1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @148, i64 0, i64 0))
  br label %end85

end85:                                            ; preds = %true84, %end80
  %T.2 = phi i8** [ %output87, %true84 ], [ %T.1, %end80 ]
  %5 = icmp ne i64 %return2, 0
  br i1 %5, label %true89, label %end90

true89:                                           ; preds = %end85
  %output92 = call i8** @"append@[SS"(i8** %T.2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @149, i64 0, i64 0))
  br label %end90

end90:                                            ; preds = %true89, %end85
  %T.3 = phi i8** [ %output92, %true89 ], [ %T.2, %end85 ]
  br label %cond

cond:                                             ; preds = %end275, %end90
  %i.0 = phi i64 [ 0, %end90 ], [ %output99, %end275 ]
  %T.4 = phi i8** [ %T.3, %end90 ], [ %output313, %end275 ]
  %return95 = call i64 @"lt@III"(i64 %i.0, i64 %GEMTAG9.fca.0.load)
  %6 = icmp ne i64 %return95, 0
  br i1 %6, label %body, label %end96

body:                                             ; preds = %cond
  %output99 = add i64 %i.0, 1
  %return100 = call i8* @"itoa@SI"(i64 %output99)
  %return103 = call double @"getcomp@F[FI"(double* %GEMTAG9.fca.11.load, i64 %i.0)
  %return105 = fcmp one double %return103, 0.000000e+00
  br i1 %return105, label %true107, label %false108

end96:                                            ; preds = %cond
  %7 = icmp ne i64 %return, 0
  br i1 %7, label %true317, label %end318

true107:                                          ; preds = %body
  %return113 = call i64 @"getcomp@I[II"(i64* %GEMTAG9.fca.3.load, i64 %i.0)
  %return114 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([106 x i8*], [106 x i8*]* @135, i64 0, i64 0), i64 %return113)
  %output115 = call i8* @"add@SS"(i8* %return114, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @151, i64 0, i64 0))
  br label %end109

false108:                                         ; preds = %body
  br label %end109

end109:                                           ; preds = %false108, %true107
  %V1.0 = phi i8* [ %output115, %true107 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @151, i64 0, i64 0), %false108 ]
  %return118 = call double @"getcomp@F[FI"(double* %GEMTAG9.fca.12.load, i64 %i.0)
  %return120 = fcmp one double %return118, 0.000000e+00
  br i1 %return120, label %true122, label %false123

true122:                                          ; preds = %end109
  %return128 = call i64 @"getcomp@I[II"(i64* %GEMTAG9.fca.4.load, i64 %i.0)
  %return129 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([106 x i8*], [106 x i8*]* @135, i64 0, i64 0), i64 %return128)
  %output130 = call i8* @"add@SS"(i8* %return129, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @151, i64 0, i64 0))
  br label %end124

false123:                                         ; preds = %end109
  br label %end124

end124:                                           ; preds = %false123, %true122
  %V2.0 = phi i8* [ %output130, %true122 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @151, i64 0, i64 0), %false123 ]
  %return133 = call double @"getcomp@F[FI"(double* %GEMTAG9.fca.13.load, i64 %i.0)
  %return135 = fcmp one double %return133, 0.000000e+00
  br i1 %return135, label %true137, label %false138

true137:                                          ; preds = %end124
  %return143 = call i64 @"getcomp@I[II"(i64* %GEMTAG9.fca.5.load, i64 %i.0)
  %return144 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([106 x i8*], [106 x i8*]* @135, i64 0, i64 0), i64 %return143)
  %output145 = call i8* @"add@SS"(i8* %return144, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @151, i64 0, i64 0))
  br label %end139

false138:                                         ; preds = %end124
  br label %end139

end139:                                           ; preds = %false138, %true137
  %V3.0 = phi i8* [ %output145, %true137 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @151, i64 0, i64 0), %false138 ]
  %return148 = call double @"getcomp@F[FI"(double* %GEMTAG9.fca.14.load, i64 %i.0)
  %return150 = fcmp one double %return148, 0.000000e+00
  br i1 %return150, label %true152, label %false153

true152:                                          ; preds = %end139
  %return158 = call i64 @"getcomp@I[II"(i64* %GEMTAG9.fca.6.load, i64 %i.0)
  %return159 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([106 x i8*], [106 x i8*]* @135, i64 0, i64 0), i64 %return158)
  %output160 = call i8* @"add@SS"(i8* %return159, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @151, i64 0, i64 0))
  br label %end154

false153:                                         ; preds = %end139
  br label %end154

end154:                                           ; preds = %false153, %true152
  %V4.0 = phi i8* [ %output160, %true152 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @151, i64 0, i64 0), %false153 ]
  %output163 = fadd double %return103, %return118
  %output165 = fadd double %output163, %return133
  %output167 = fadd double %output165, %return148
  %return170 = call double @"getcomp@F[FI"(double* %GEMTAG9.fca.8.load, i64 %i.0)
  %return172 = fcmp ogt double %return170, 0.000000e+00
  br i1 %return172, label %true174, label %end175

true174:                                          ; preds = %end154
  %return177 = fcmp one double %output167, 0.000000e+00
  br i1 %return177, label %true179, label %end175

end175:                                           ; preds = %true174, %true179, %end154
  %PB.0 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @152, i64 0, i64 0), %true179 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @150, i64 0, i64 0), %true174 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @150, i64 0, i64 0), %end154 ]
  %return183 = call double @"getcomp@F[FI"(double* %GEMTAG9.fca.9.load, i64 %i.0)
  %return185 = fcmp ogt double %return183, 0.000000e+00
  br i1 %return185, label %true187, label %end188

true179:                                          ; preds = %true174
  br label %end175

true187:                                          ; preds = %end175
  %return190 = fcmp one double %output167, 0.000000e+00
  br i1 %return190, label %true192, label %end188

end188:                                           ; preds = %true187, %true192, %end175
  %PP.0 = phi i8** [ %output200, %true192 ], [ getelementptr inbounds ([0 x i8*], [0 x i8*]* @28, i64 0, i64 0), %true187 ], [ getelementptr inbounds ([0 x i8*], [0 x i8*]* @28, i64 0, i64 0), %end175 ]
  %return203 = call double @"getcomp@F[FI"(double* %GEMTAG9.fca.10.load, i64 %i.0)
  %return205 = fcmp ogt double %return203, 0.000000e+00
  br i1 %return205, label %true207, label %end208

true192:                                          ; preds = %true187
  %return198 = call i64 @"getcomp@I[II"(i64* %GEMTAG9.fca.1.load, i64 %i.0)
  %return199 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([106 x i8*], [106 x i8*]* @135, i64 0, i64 0), i64 %return198)
  %output200 = call i8** @"append@[SS"(i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @28, i64 0, i64 0), i8* %return199)
  br label %end188

true207:                                          ; preds = %end188
  %return210 = fcmp one double %output167, 0.000000e+00
  br i1 %return210, label %true212, label %end208

end208:                                           ; preds = %true207, %true212, %end188
  %PP.1 = phi i8** [ %output220, %true212 ], [ %PP.0, %true207 ], [ %PP.0, %end188 ]
  %return222 = call i64 @"len@I[S"(i8** %PP.1)
  %return223 = call i64 @"eq@III"(i64 %return222, i64 1)
  %8 = icmp ne i64 %return223, 0
  br i1 %8, label %true224, label %false225

true212:                                          ; preds = %true207
  %return218 = call i64 @"getcomp@I[II"(i64* %GEMTAG9.fca.2.load, i64 %i.0)
  %return219 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([106 x i8*], [106 x i8*]* @135, i64 0, i64 0), i64 %return218)
  %output220 = call i8** @"append@[SS"(i8** %PP.0, i8* %return219)
  br label %end208

true224:                                          ; preds = %end208
  %return228 = call i8* @"getcomp@S[SI"(i8** %PP.1, i64 0)
  %return229 = call i8* @"concat@SSS:S"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @153, i64 0, i64 0), i8* %return228, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @154, i64 0, i64 0))
  br label %end226

false225:                                         ; preds = %end208
  %return232 = call i64 @"gt@III"(i64 %return222, i64 1)
  %9 = icmp ne i64 %return232, 0
  br i1 %9, label %true233, label %false234

end226:                                           ; preds = %true233, %false234, %true224
  %p_build.0 = phi i8* [ %return229, %true224 ], [ %return238, %true233 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @150, i64 0, i64 0), %false234 ]
  %return241 = call double @"getcomp@F[FI"(double* %GEMTAG9.fca.15.load, i64 %i.0)
  %return243 = fcmp ogt double %return241, 0.000000e+00
  br i1 %return243, label %true245, label %end246

true233:                                          ; preds = %false225
  %return237 = call i8* @"join@S[SS"(i8** %PP.1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @155, i64 0, i64 0))
  %return238 = call i8* @"concat@SSS:S"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @153, i64 0, i64 0), i8* %return237, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @154, i64 0, i64 0))
  br label %end226

false234:                                         ; preds = %false225
  br label %end226

true245:                                          ; preds = %end226
  %return248 = fcmp one double %output167, 0.000000e+00
  br i1 %return248, label %true250, label %end246

end246:                                           ; preds = %true245, %true250, %end226
  %P1.0 = phi i8* [ %return257, %true250 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @150, i64 0, i64 0), %true245 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @150, i64 0, i64 0), %end226 ]
  %return259 = fcmp one double %output167, 0.000000e+00
  br i1 %return259, label %true261, label %false262

true250:                                          ; preds = %true245
  %return255 = call i64 @"getcomp@I[II"(i64* %GEMTAG9.fca.7.load, i64 %i.0)
  %return256 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([106 x i8*], [106 x i8*]* @135, i64 0, i64 0), i64 %return255)
  %return257 = call i8* @"concat@SSS:S"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @153, i64 0, i64 0), i8* %return256, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @154, i64 0, i64 0))
  br label %end246

true261:                                          ; preds = %end246
  %return265 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @157, i64 0, i64 0), i8* %return100)
  %return266 = call double @"chf@FS"(i8* %return265)
  %return267 = call i8* @"sprintf@SS:F"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @156, i64 0, i64 0), double %return266)
  br label %end263

false262:                                         ; preds = %end246
  br label %end263

end263:                                           ; preds = %false262, %true261
  %W.0 = phi i8* [ %return267, %true261 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @150, i64 0, i64 0), %false262 ]
  %return269 = call i8** @"split@[SSS"(i8* %W.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @158, i64 0, i64 0))
  %return271 = call i64 @"len@I[S"(i8** %return269)
  %return272 = call i64 @"gt@III"(i64 %return271, i64 1)
  %10 = icmp ne i64 %return272, 0
  br i1 %10, label %true273, label %false274

true273:                                          ; preds = %end263
  br label %cond278

false274:                                         ; preds = %end263
  br label %end275

end275:                                           ; preds = %cond278, %false274
  %out.0 = phi i8** [ %out.1, %cond278 ], [ %return269, %false274 ]
  %return301 = call i8* @"join@S[SS"(i8** %out.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @158, i64 0, i64 0))
  %return310 = call i8* @"concat@SSS:SSSSSS"(i8* %PB.0, i8* %p_build.0, i8* %V1.0, i8* %V2.0, i8* %V3.0, i8* %V4.0, i8* %P1.0, i8* %return301)
  %output313 = call i8** @"append@[SS"(i8** %T.4, i8* %return310)
  br label %cond

cond278:                                          ; preds = %body279, %true273
  %out.1 = phi i8** [ getelementptr inbounds ([0 x i8*], [0 x i8*]* @28, i64 0, i64 0), %true273 ], [ %output293, %body279 ]
  %count.0 = phi i64 [ 1, %true273 ], [ %output296, %body279 ]
  %__impl_foreach_index.0 = phi i64 [ 0, %true273 ], [ %output298, %body279 ]
  %return282 = call i64 @"lt@III"(i64 %__impl_foreach_index.0, i64 %return271)
  %11 = icmp ne i64 %return282, 0
  br i1 %11, label %body279, label %end275

body279:                                          ; preds = %cond278
  %return287 = call i8* @"getcomp@S[SI"(i8** %return269, i64 %__impl_foreach_index.0)
  %output291 = call i64 @"div@II"(i64 6, i64 %count.0)
  %return292 = call i8* @"slice@SSIIIIII"(i8* %return287, i64 0, i64 0, i64 1, i64 %output291, i64 0, i64 0)
  %output293 = call i8** @"append@[SS"(i8** %out.1, i8* %return292)
  %output296 = add i64 %count.0, 1
  %output298 = add i64 %__impl_foreach_index.0, 1
  br label %cond278

true317:                                          ; preds = %end96
  %return321 = fcmp one double %GEMTAGFF43.fca.6.load, 0.000000e+00
  br i1 %return321, label %true323, label %false324

end318:                                           ; preds = %end411, %end96
  %T.5 = phi i8** [ %output432, %end411 ], [ %T.4, %end96 ]
  store i8** %T.5, i8*** %_bound_VARTYPE
  store i64 %return6, i64* %_bound_XS
  ret void

true323:                                          ; preds = %true317
  %return328 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([106 x i8*], [106 x i8*]* @135, i64 0, i64 0), i64 %GEMTAGFF43.fca.1.load)
  %output329 = call i8* @"add@SS"(i8* %return328, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @151, i64 0, i64 0))
  br label %end325

false324:                                         ; preds = %true317
  br label %end325

end325:                                           ; preds = %false324, %true323
  %FV1.0 = phi i8* [ %output329, %true323 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @151, i64 0, i64 0), %false324 ]
  %return331 = fcmp one double %GEMTAGFF43.fca.7.load, 0.000000e+00
  br i1 %return331, label %true333, label %false334

true333:                                          ; preds = %end325
  %return338 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([106 x i8*], [106 x i8*]* @135, i64 0, i64 0), i64 %GEMTAGFF43.fca.2.load)
  %output339 = call i8* @"add@SS"(i8* %return338, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @151, i64 0, i64 0))
  br label %end335

false334:                                         ; preds = %end325
  br label %end335

end335:                                           ; preds = %false334, %true333
  %FV2.0 = phi i8* [ %output339, %true333 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @151, i64 0, i64 0), %false334 ]
  %output342 = fadd double %GEMTAGFF43.fca.6.load, %GEMTAGFF43.fca.7.load
  %return344 = fcmp ogt double %GEMTAGFF43.fca.5.load, 0.000000e+00
  br i1 %return344, label %true346, label %end347

true346:                                          ; preds = %end335
  %return349 = fcmp one double %output342, 0.000000e+00
  br i1 %return349, label %true351, label %end347

end347:                                           ; preds = %true346, %true351, %end335
  %Fp.0 = phi i8** [ %output357, %true351 ], [ getelementptr inbounds ([0 x i8*], [0 x i8*]* @28, i64 0, i64 0), %true346 ], [ getelementptr inbounds ([0 x i8*], [0 x i8*]* @28, i64 0, i64 0), %end335 ]
  %return359 = call i64 @"len@I[S"(i8** %Fp.0)
  %return360 = call i64 @"eq@III"(i64 %return359, i64 1)
  %12 = icmp ne i64 %return360, 0
  br i1 %12, label %true361, label %false362

true351:                                          ; preds = %true346
  %return356 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([106 x i8*], [106 x i8*]* @135, i64 0, i64 0), i64 %GEMTAGFF43.fca.0.load)
  %output357 = call i8** @"append@[SS"(i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @28, i64 0, i64 0), i8* %return356)
  br label %end347

true361:                                          ; preds = %end347
  %return365 = call i8* @"getcomp@S[SI"(i8** %Fp.0, i64 0)
  %return366 = call i8* @"concat@SSS:S"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @153, i64 0, i64 0), i8* %return365, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @154, i64 0, i64 0))
  br label %end363

false362:                                         ; preds = %end347
  %return369 = call i64 @"gt@III"(i64 %return359, i64 1)
  %13 = icmp ne i64 %return369, 0
  br i1 %13, label %true370, label %false371

end363:                                           ; preds = %true370, %false371, %true361
  %Fp_build.0 = phi i8* [ %return366, %true361 ], [ %return375, %true370 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @150, i64 0, i64 0), %false371 ]
  %return377 = fcmp ogt double %GEMTAGFF43.fca.8.load, 0.000000e+00
  br i1 %return377, label %true379, label %end380

true370:                                          ; preds = %false362
  %return374 = call i8* @"join@S[SS"(i8** %Fp.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @155, i64 0, i64 0))
  %return375 = call i8* @"concat@SSS:S"(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @143, i64 0, i64 0), i8* %return374, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @159, i64 0, i64 0))
  br label %end363

false371:                                         ; preds = %false362
  br label %end363

true379:                                          ; preds = %end363
  %return382 = fcmp one double %output342, 0.000000e+00
  br i1 %return382, label %true384, label %end380

end380:                                           ; preds = %true379, %true384, %end363
  %FP.0 = phi i8** [ %output390, %true384 ], [ getelementptr inbounds ([0 x i8*], [0 x i8*]* @28, i64 0, i64 0), %true379 ], [ getelementptr inbounds ([0 x i8*], [0 x i8*]* @28, i64 0, i64 0), %end363 ]
  %return392 = fcmp ogt double %GEMTAGFF43.fca.9.load, 0.000000e+00
  br i1 %return392, label %true394, label %end395

true384:                                          ; preds = %true379
  %return389 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([106 x i8*], [106 x i8*]* @135, i64 0, i64 0), i64 %GEMTAGFF43.fca.3.load)
  %output390 = call i8** @"append@[SS"(i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @28, i64 0, i64 0), i8* %return389)
  br label %end380

true394:                                          ; preds = %end380
  %return397 = fcmp one double %output342, 0.000000e+00
  br i1 %return397, label %true399, label %end395

end395:                                           ; preds = %true394, %true399, %end380
  %FP.1 = phi i8** [ %output405, %true399 ], [ %FP.0, %true394 ], [ %FP.0, %end380 ]
  %return407 = call i64 @"len@I[S"(i8** %FP.1)
  %return408 = call i64 @"eq@III"(i64 %return407, i64 1)
  %14 = icmp ne i64 %return408, 0
  br i1 %14, label %true409, label %false410

true399:                                          ; preds = %true394
  %return404 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([106 x i8*], [106 x i8*]* @135, i64 0, i64 0), i64 %GEMTAGFF43.fca.4.load)
  %output405 = call i8** @"append@[SS"(i8** %FP.0, i8* %return404)
  br label %end395

true409:                                          ; preds = %end395
  %return413 = call i8* @"getcomp@S[SI"(i8** %FP.1, i64 0)
  %return414 = call i8* @"concat@SSS:S"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @153, i64 0, i64 0), i8* %return413, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @160, i64 0, i64 0))
  br label %end411

false410:                                         ; preds = %end395
  %return417 = call i64 @"gt@III"(i64 %return407, i64 1)
  %15 = icmp ne i64 %return417, 0
  br i1 %15, label %true418, label %false419

end411:                                           ; preds = %true418, %false419, %true409
  %FP_build.0 = phi i8* [ %return414, %true409 ], [ %return423, %true418 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @150, i64 0, i64 0), %false419 ]
  %return428 = call i8* @"concat@SSS:SS"(i8* %Fp_build.0, i8* %FV1.0, i8* %FV2.0, i8* %FP_build.0)
  %return431 = call i8* @"toupper@SS"(i8* %return428)
  %output432 = call i8** @"append@[SS"(i8** %T.4, i8* %return431)
  br label %end318

true418:                                          ; preds = %false410
  %return422 = call i8* @"join@S[SS"(i8** %FP.1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @155, i64 0, i64 0))
  %return423 = call i8* @"concat@SSS:S"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @153, i64 0, i64 0), i8* %return422, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @160, i64 0, i64 0))
  br label %end411

false419:                                         ; preds = %false410
  br label %end411
}

; Function Attrs: nounwind readnone
declare i64 @"chi@IS"(i8*) #2

; Function Attrs: nounwind readnone
declare i8* @"itoa@SI"(i64) #2

; Function Attrs: nounwind readnone
declare i8* @"concat@SSS:S"(i8*, i8*, i8*) #2

; Function Attrs: nounwind
declare i8** @"append@[SS"(i8**, i8*) #1

; Function Attrs: nounwind readnone
declare i64 @"not@II"(i64) #2

; Function Attrs: nounwind readnone
declare i64 @"lt@III"(i64, i64) #2

; Function Attrs: nounwind readnone
declare double @"getcomp@F[FI"(double*, i64) #2

; Function Attrs: nounwind readnone
declare i64 @"getcomp@I[II"(i64*, i64) #2

; Function Attrs: nounwind readnone
declare i8* @"getcomp@S[SI"(i8**, i64) #2

; Function Attrs: nounwind readnone
declare i8* @"add@SS"(i8*, i8*) #2

; Function Attrs: nounwind readnone
declare i64 @"len@I[S"(i8**) #2

; Function Attrs: nounwind readnone
declare i64 @"eq@III"(i64, i64) #2

; Function Attrs: nounwind readnone
declare i64 @"gt@III"(i64, i64) #2

; Function Attrs: nounwind readnone
declare i8* @"join@S[SS"(i8**, i8*) #2

; Function Attrs: nounwind readnone
declare i8* @"concat@SSS"(i8*, i8*) #2

; Function Attrs: nounwind readnone
declare double @"chf@FS"(i8*) #2

; Function Attrs: nounwind readnone
declare i8* @"sprintf@SS:F"(i8*, double) #2

; Function Attrs: nounwind readnone
declare i8** @"split@[SSS"(i8*, i8*) #2

; Function Attrs: nounwind readnone
declare i64 @"div@II"(i64, i64) #2

; Function Attrs: nounwind readnone
declare i8* @"slice@SSIIIIII"(i8*, i64, i64, i64, i64, i64, i64) #2

; Function Attrs: nounwind readnone
declare i8* @"concat@SSS:SSSSSS"(i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*) #2

; Function Attrs: nounwind readnone
declare i8* @"concat@SSS:SS"(i8*, i8*, i8*, i8*) #2

; Function Attrs: nounwind
declare i8* @"toupper@SS"(i8*) #1

; Function Attrs: nounwind
define void @TFFAuicollect(i8** %VARTYPE, i64 %XS) #1 {
__llvm_entry:
  %"<XS>" = alloca i64
  %"<VARTYPE>" = alloca i8**
  store i8** %VARTYPE, i8*** %"<VARTYPE>"
  store i64 %XS, i64* %"<XS>"
  call void @"_TFFAuicollect@[SI"(i8*** %"<VARTYPE>", i64* %"<XS>")
  %evalue = load i8**, i8*** %"<VARTYPE>"
  %gvalue = call i8** @"_export@[SS[S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @161, i64 0, i64 0), i8** %evalue) #3
  %evalue1 = load i64, i64* %"<XS>"
  %gvalue2 = call i64 @"_export@ISI"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @141, i64 0, i64 0), i64 %evalue1) #3
  store i8** %gvalue, i8*** @VARTYPE
  store i64 %gvalue2, i64* @XS
  ret void
}

declare i8** @"_export@[SS[S"(i8*, i8**)

declare i64 @"_export@ISI"(i8*, i64)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @TFFAuicollect(i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @28, i64 0, i64 0), i64 0)
  ret void
}

attributes #0 = { alwaysinline nounwind }
attributes #1 = { nounwind }
attributes #2 = { nounwind readnone }
attributes #3 = { nounwind readonly }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"20.5.370"}
!2 = !{!"64"}

;_code_end
