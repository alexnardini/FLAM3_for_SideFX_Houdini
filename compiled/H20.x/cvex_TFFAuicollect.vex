;_name	TFFAuicollect
; ModuleID = 'TFFAuicollect'
source_filename = "TFFAuicollect"

@0 = private constant [0 x i8*] zeroinitializer
@1 = private constant [7 x i8] c"linear\00"
@2 = private constant [11 x i8] c"sinusoidal\00"
@3 = private constant [10 x i8] c"spherical\00"
@4 = private constant [6 x i8] c"swirl\00"
@5 = private constant [10 x i8] c"horseshoe\00"
@6 = private constant [6 x i8] c"polar\00"
@7 = private constant [13 x i8] c"handkerchief\00"
@8 = private constant [6 x i8] c"heart\00"
@9 = private constant [5 x i8] c"disc\00"
@10 = private constant [7 x i8] c"spiral\00"
@11 = private constant [11 x i8] c"hiperbolic\00"
@12 = private constant [8 x i8] c"diamond\00"
@13 = private constant [3 x i8] c"ex\00"
@14 = private constant [6 x i8] c"julia\00"
@15 = private constant [5 x i8] c"bent\00"
@16 = private constant [6 x i8] c"waves\00"
@17 = private constant [8 x i8] c"fisheye\00"
@18 = private constant [8 x i8] c"popcorn\00"
@19 = private constant [12 x i8] c"exponential\00"
@20 = private constant [6 x i8] c"power\00"
@21 = private constant [7 x i8] c"cosine\00"
@22 = private constant [6 x i8] c"rings\00"
@23 = private constant [4 x i8] c"fan\00"
@24 = private constant [7 x i8] c"bubble\00"
@25 = private constant [9 x i8] c"cylinder\00"
@26 = private constant [8 x i8] c"eyefish\00"
@27 = private constant [5 x i8] c"blur\00"
@28 = private constant [5 x i8] c"curl\00"
@29 = private constant [5 x i8] c"ngon\00"
@30 = private constant [4 x i8] c"pdj\00"
@31 = private constant [5 x i8] c"blob\00"
@32 = private constant [7 x i8] c"juliaN\00"
@33 = private constant [11 x i8] c"juliaScope\00"
@34 = private constant [14 x i8] c"gaussian_blur\00"
@35 = private constant [5 x i8] c"fan2\00"
@36 = private constant [7 x i8] c"rings2\00"
@37 = private constant [11 x i8] c"rectangles\00"
@38 = private constant [11 x i8] c"radialblur\00"
@39 = private constant [4 x i8] c"pie\00"
@40 = private constant [5 x i8] c"arch\00"
@41 = private constant [8 x i8] c"tangent\00"
@42 = private constant [7 x i8] c"square\00"
@43 = private constant [5 x i8] c"rays\00"
@44 = private constant [6 x i8] c"blade\00"
@45 = private constant [8 x i8] c"secant2\00"
@46 = private constant [10 x i8] c"twintrian\00"
@47 = private constant [6 x i8] c"cross\00"
@48 = private constant [6 x i8] c"disc2\00"
@49 = private constant [11 x i8] c"supershape\00"
@50 = private constant [7 x i8] c"flower\00"
@51 = private constant [6 x i8] c"conic\00"
@52 = private constant [9 x i8] c"parabola\00"
@53 = private constant [6 x i8] c"bent2\00"
@54 = private constant [8 x i8] c"bipolar\00"
@55 = private constant [9 x i8] c"boarders\00"
@56 = private constant [10 x i8] c"butterfly\00"
@57 = private constant [5 x i8] c"cell\00"
@58 = private constant [5 x i8] c"cpow\00"
@59 = private constant [6 x i8] c"edisc\00"
@60 = private constant [9 x i8] c"elliptic\00"
@61 = private constant [6 x i8] c"noise\00"
@62 = private constant [7 x i8] c"escher\00"
@63 = private constant [5 x i8] c"foci\00"
@64 = private constant [10 x i8] c"lazysusan\00"
@65 = private constant [7 x i8] c"loonie\00"
@66 = private constant [9 x i8] c"pre blur\00"
@67 = private constant [8 x i8] c"modulus\00"
@68 = private constant [7 x i8] c"oscope\00"
@69 = private constant [7 x i8] c"polar2\00"
@70 = private constant [9 x i8] c"popcorn2\00"
@71 = private constant [5 x i8] c"scry\00"
@72 = private constant [11 x i8] c"separation\00"
@73 = private constant [6 x i8] c"split\00"
@74 = private constant [7 x i8] c"splits\00"
@75 = private constant [8 x i8] c"stripes\00"
@76 = private constant [6 x i8] c"wedge\00"
@77 = private constant [12 x i8] c"wedge julia\00"
@78 = private constant [10 x i8] c"wedge sph\00"
@79 = private constant [6 x i8] c"whorl\00"
@80 = private constant [7 x i8] c"waves2\00"
@81 = private constant [4 x i8] c"exp\00"
@82 = private constant [4 x i8] c"log\00"
@83 = private constant [4 x i8] c"sin\00"
@84 = private constant [4 x i8] c"cos\00"
@85 = private constant [4 x i8] c"tan\00"
@86 = private constant [4 x i8] c"sec\00"
@87 = private constant [4 x i8] c"csc\00"
@88 = private constant [4 x i8] c"cot\00"
@89 = private constant [5 x i8] c"sinh\00"
@90 = private constant [5 x i8] c"cosh\00"
@91 = private constant [5 x i8] c"tanh\00"
@92 = private constant [5 x i8] c"sech\00"
@93 = private constant [5 x i8] c"csch\00"
@94 = private constant [5 x i8] c"coth\00"
@95 = private constant [6 x i8] c"auger\00"
@96 = private constant [5 x i8] c"flux\00"
@97 = private constant [7 x i8] c"mobius\00"
@98 = private constant [6 x i8] c"curve\00"
@99 = private constant [12 x i8] c"perspective\00"
@100 = private constant [7 x i8] c"bwraps\00"
@101 = private constant [11 x i8] c"hemisphere\00"
@102 = private constant [11 x i8] c"polynomial\00"
@103 = private constant [5 x i8] c"crop\00"
@104 = private constant [8 x i8] c"unpolar\00"
@105 = private constant [8 x i8] c"glynnia\00"
@106 = private constant [15 x i8] c"point_symmetry\00"
@107 = private constant [106 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @2, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @3, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @4, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @5, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @6, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @7, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @8, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @9, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @10, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @11, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @12, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @13, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @14, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @15, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @16, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @17, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @18, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @19, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @20, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @21, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @22, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @23, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @24, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @25, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @26, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @27, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @28, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @29, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @30, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @31, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @32, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @33, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @34, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @35, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @36, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @37, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @38, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @39, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @40, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @41, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @42, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @43, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @44, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @45, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @46, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @47, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @48, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @49, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @50, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @51, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @52, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @53, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @54, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @55, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @56, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @57, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @58, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @59, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @60, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @61, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @62, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @63, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @64, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @65, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @66, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @67, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @68, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @69, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @70, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @71, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @72, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @73, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @74, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @75, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @76, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @77, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @78, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @79, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @80, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @81, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @82, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @83, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @84, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @85, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @86, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @87, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @88, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @89, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @90, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @91, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @92, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @93, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @94, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @95, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @96, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @97, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @98, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @99, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @100, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @101, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @102, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @103, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @104, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @105, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @106, i64 0, i64 0)]
@108 = private constant [5 x i8] c"doff\00"
@109 = private constant [4 x i8] c"rip\00"
@110 = private constant [5 x i8] c"domb\00"
@111 = private constant [5 x i8] c"iter\00"
@112 = private constant [4 x i8] c"f3c\00"
@113 = private constant [10 x i8] c"flamefunc\00"
@114 = private constant [3 x i8] c"xm\00"
@115 = private constant [2 x i8] c"[\00"
@116 = private constant [2 x i8] c"]\00"
@117 = private constant [3 x i8] c"XS\00"
@118 = private constant [3 x i8] c"Xt\00"
@119 = private constant [3 x i8] c"fX\00"
@120 = private constant [4 x i8] c"RIP\00"
@121 = private constant [4 x i8] c"F3C\00"
@122 = private constant [3 x i8] c"MB\00"
@123 = private constant [1 x i8] zeroinitializer
@124 = private constant [9 x i8] c"vactive_\00"
@125 = private constant [13 x i8] c" :::::::::: \00"
@126 = private constant [10 x i8] c"v1weight_\00"
@127 = private constant [8 x i8] c"v1type_\00"
@128 = private constant [2 x i8] c":\00"
@129 = private constant [10 x i8] c"v2weight_\00"
@130 = private constant [8 x i8] c"v2type_\00"
@131 = private constant [10 x i8] c"v3weight_\00"
@132 = private constant [8 x i8] c"v3type_\00"
@133 = private constant [10 x i8] c"v4weight_\00"
@134 = private constant [8 x i8] c"v4type_\00"
@135 = private constant [15 x i8] c"preblurweight_\00"
@136 = private constant [2 x i8] c"*\00"
@137 = private constant [12 x i8] c"pre1weight_\00"
@138 = private constant [10 x i8] c"pre1type_\00"
@139 = private constant [12 x i8] c"pre2weight_\00"
@140 = private constant [10 x i8] c"pre2type_\00"
@141 = private constant [3 x i8] c"[ \00"
@142 = private constant [4 x i8] c" ]:\00"
@143 = private constant [3 x i8] c", \00"
@144 = private constant [10 x i8] c"p1weight_\00"
@145 = private constant [8 x i8] c"p1type_\00"
@146 = private constant [3 x i8] c"%g\00"
@147 = private constant [4 x i8] c"iw_\00"
@148 = private constant [2 x i8] c".\00"
@149 = private constant [11 x i8] c"ffv1weight\00"
@150 = private constant [9 x i8] c"ffv1type\00"
@151 = private constant [11 x i8] c"ffv2weight\00"
@152 = private constant [9 x i8] c"ffv2type\00"
@153 = private constant [13 x i8] c"ffpre1weight\00"
@154 = private constant [11 x i8] c"ffpre1type\00"
@155 = private constant [3 x i8] c"]:\00"
@156 = private constant [11 x i8] c"ffp1weight\00"
@157 = private constant [9 x i8] c"ffp1type\00"
@158 = private constant [11 x i8] c"ffp2weight\00"
@159 = private constant [9 x i8] c"ffp2type\00"
@160 = private constant [3 x i8] c" ]\00"
@VARTYPE = external global i8**
@XS = external global i64
@161 = private constant [8 x i8] c"VARTYPE\00"

; Function Attrs: alwaysinline nounwind
define private void @"_TFFAuicollect@[SI"(i8*** %_bound_VARTYPE, i64* %_bound_XS) #0 {
__llvm_entry:
  %return = call i64 @"chi@IS"(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @108, i64 0, i64 0))
  %return1 = call i64 @"chi@IS"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @109, i64 0, i64 0))
  %return2 = call i64 @"chi@IS"(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @110, i64 0, i64 0))
  %return3 = call i64 @"chi@IS"(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @111, i64 0, i64 0))
  %return4 = call i64 @"chi@IS"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @112, i64 0, i64 0))
  %return5 = call i64 @"chi@IS"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @113, i64 0, i64 0))
  %return6 = call i64 @"chi@IS"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @114, i64 0, i64 0))
  %return9 = call i8* @"itoa@SI"(i64 %return3)
  %return10 = call i8* @"concat@SSS:S"(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @115, i64 0, i64 0), i8* %return9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @116, i64 0, i64 0))
  %output = call i8** @"append@[SS"(i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @0, i64 0, i64 0), i8* %return10)
  %return11 = call i64 @"detail@IIS"(i64 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @117, i64 0, i64 0))
  %0 = icmp ne i64 %return11, 0
  br i1 %0, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %return14 = call i64 @"not@II"(i64 %return6)
  %1 = icmp ne i64 %return14, 0
  br i1 %1, label %true15, label %false

end:                                              ; preds = %true15, %false, %__llvm_entry
  %T.0 = phi i8** [ %output19, %true15 ], [ %output22, %false ], [ %output, %__llvm_entry ]
  %2 = icmp ne i64 %return1, 0
  br i1 %2, label %true24, label %end25

true15:                                           ; preds = %true
  %return18 = call i8* @"concat@SSS:S"(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @115, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @118, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @116, i64 0, i64 0))
  %output19 = call i8** @"append@[SS"(i8** %output, i8* %return18)
  br label %end

false:                                            ; preds = %true
  %return21 = call i8* @"concat@SSS:S"(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @115, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @119, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @116, i64 0, i64 0))
  %output22 = call i8** @"append@[SS"(i8** %output, i8* %return21)
  br label %end

true24:                                           ; preds = %end
  %output27 = call i8** @"append@[SS"(i8** %T.0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @120, i64 0, i64 0))
  br label %end25

end25:                                            ; preds = %true24, %end
  %T.1 = phi i8** [ %output27, %true24 ], [ %T.0, %end ]
  %3 = icmp ne i64 %return4, 0
  br i1 %3, label %true29, label %end30

true29:                                           ; preds = %end25
  %output32 = call i8** @"append@[SS"(i8** %T.1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @121, i64 0, i64 0))
  br label %end30

end30:                                            ; preds = %true29, %end25
  %T.2 = phi i8** [ %output32, %true29 ], [ %T.1, %end25 ]
  %4 = icmp ne i64 %return2, 0
  br i1 %4, label %true34, label %end35

true34:                                           ; preds = %end30
  %output37 = call i8** @"append@[SS"(i8** %T.2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @122, i64 0, i64 0))
  br label %end35

end35:                                            ; preds = %true34, %end30
  %T.3 = phi i8** [ %output37, %true34 ], [ %T.2, %end30 ]
  br label %cond

cond:                                             ; preds = %end52, %end35
  %i.0 = phi i64 [ 0, %end35 ], [ %output44, %end52 ]
  %T.4 = phi i8** [ %T.3, %end35 ], [ %output272, %end52 ]
  %return40 = call i64 @"lt@III"(i64 %i.0, i64 %return5)
  %5 = icmp ne i64 %return40, 0
  br i1 %5, label %body, label %end41

body:                                             ; preds = %cond
  %output44 = add i64 %i.0, 1
  %return45 = call i8* @"itoa@SI"(i64 %output44)
  %return47 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @124, i64 0, i64 0), i8* %return45)
  %return48 = call i64 @"chi@IS"(i8* %return47)
  %return49 = call i64 @"not@II"(i64 %return48)
  %6 = icmp ne i64 %return49, 0
  br i1 %6, label %true50, label %false51

end41:                                            ; preds = %cond
  %7 = icmp ne i64 %return, 0
  br i1 %7, label %true276, label %end277

true50:                                           ; preds = %body
  br label %end52

false51:                                          ; preds = %body
  %return54 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @126, i64 0, i64 0), i8* %return45)
  %return55 = call double @"chf@FS"(i8* %return54)
  %return57 = fcmp one double %return55, 0.000000e+00
  br i1 %return57, label %true59, label %false60

end52:                                            ; preds = %end234, %true50
  %VAR.0 = phi i8* [ getelementptr inbounds ([13 x i8], [13 x i8]* @125, i64 0, i64 0), %true50 ], [ %return269, %end234 ]
  %output272 = call i8** @"append@[SS"(i8** %T.4, i8* %VAR.0)
  br label %cond

true59:                                           ; preds = %false51
  %return64 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @127, i64 0, i64 0), i8* %return45)
  %return65 = call i8* @"chs@SS"(i8* %return64)
  %return66 = call i64 @"atoi@IS"(i8* %return65)
  %return67 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([106 x i8*], [106 x i8*]* @107, i64 0, i64 0), i64 %return66)
  %output68 = call i8* @"add@SS"(i8* %return67, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @128, i64 0, i64 0))
  br label %end61

false60:                                          ; preds = %false51
  br label %end61

end61:                                            ; preds = %false60, %true59
  %V1.0 = phi i8* [ %output68, %true59 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @128, i64 0, i64 0), %false60 ]
  %return70 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @129, i64 0, i64 0), i8* %return45)
  %return71 = call double @"chf@FS"(i8* %return70)
  %return73 = fcmp one double %return71, 0.000000e+00
  br i1 %return73, label %true75, label %false76

true75:                                           ; preds = %end61
  %return80 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @130, i64 0, i64 0), i8* %return45)
  %return81 = call i8* @"chs@SS"(i8* %return80)
  %return82 = call i64 @"atoi@IS"(i8* %return81)
  %return83 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([106 x i8*], [106 x i8*]* @107, i64 0, i64 0), i64 %return82)
  %output84 = call i8* @"add@SS"(i8* %return83, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @128, i64 0, i64 0))
  br label %end77

false76:                                          ; preds = %end61
  br label %end77

end77:                                            ; preds = %false76, %true75
  %V2.0 = phi i8* [ %output84, %true75 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @128, i64 0, i64 0), %false76 ]
  %return86 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @131, i64 0, i64 0), i8* %return45)
  %return87 = call double @"chf@FS"(i8* %return86)
  %return89 = fcmp one double %return87, 0.000000e+00
  br i1 %return89, label %true91, label %false92

true91:                                           ; preds = %end77
  %return96 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @132, i64 0, i64 0), i8* %return45)
  %return97 = call i8* @"chs@SS"(i8* %return96)
  %return98 = call i64 @"atoi@IS"(i8* %return97)
  %return99 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([106 x i8*], [106 x i8*]* @107, i64 0, i64 0), i64 %return98)
  %output100 = call i8* @"add@SS"(i8* %return99, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @128, i64 0, i64 0))
  br label %end93

false92:                                          ; preds = %end77
  br label %end93

end93:                                            ; preds = %false92, %true91
  %V3.0 = phi i8* [ %output100, %true91 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @128, i64 0, i64 0), %false92 ]
  %return102 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @133, i64 0, i64 0), i8* %return45)
  %return103 = call double @"chf@FS"(i8* %return102)
  %return105 = fcmp one double %return103, 0.000000e+00
  br i1 %return105, label %true107, label %false108

true107:                                          ; preds = %end93
  %return112 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @134, i64 0, i64 0), i8* %return45)
  %return113 = call i8* @"chs@SS"(i8* %return112)
  %return114 = call i64 @"atoi@IS"(i8* %return113)
  %return115 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([106 x i8*], [106 x i8*]* @107, i64 0, i64 0), i64 %return114)
  %output116 = call i8* @"add@SS"(i8* %return115, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @128, i64 0, i64 0))
  br label %end109

false108:                                         ; preds = %end93
  br label %end109

end109:                                           ; preds = %false108, %true107
  %V4.0 = phi i8* [ %output116, %true107 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @128, i64 0, i64 0), %false108 ]
  %output119 = fadd double %return55, %return71
  %output121 = fadd double %output119, %return87
  %output123 = fadd double %output121, %return103
  %return125 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @135, i64 0, i64 0), i8* %return45)
  %return126 = call double @"chf@FS"(i8* %return125)
  %return128 = fcmp ogt double %return126, 0.000000e+00
  br i1 %return128, label %true130, label %end131

true130:                                          ; preds = %end109
  %return133 = fcmp one double %output123, 0.000000e+00
  br i1 %return133, label %true135, label %end131

end131:                                           ; preds = %true130, %true135, %end109
  %PB.0 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @136, i64 0, i64 0), %true135 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @123, i64 0, i64 0), %true130 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @123, i64 0, i64 0), %end109 ]
  %return138 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @137, i64 0, i64 0), i8* %return45)
  %return139 = call double @"chf@FS"(i8* %return138)
  %return141 = fcmp ogt double %return139, 0.000000e+00
  br i1 %return141, label %true143, label %end144

true135:                                          ; preds = %true130
  br label %end131

true143:                                          ; preds = %end131
  %return146 = fcmp one double %output123, 0.000000e+00
  br i1 %return146, label %true148, label %end144

end144:                                           ; preds = %true143, %true148, %end131
  %PP.0 = phi i8** [ %output157, %true148 ], [ getelementptr inbounds ([0 x i8*], [0 x i8*]* @0, i64 0, i64 0), %true143 ], [ getelementptr inbounds ([0 x i8*], [0 x i8*]* @0, i64 0, i64 0), %end131 ]
  %return159 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @139, i64 0, i64 0), i8* %return45)
  %return160 = call double @"chf@FS"(i8* %return159)
  %return162 = fcmp ogt double %return160, 0.000000e+00
  br i1 %return162, label %true164, label %end165

true148:                                          ; preds = %true143
  %return153 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @138, i64 0, i64 0), i8* %return45)
  %return154 = call i8* @"chs@SS"(i8* %return153)
  %return155 = call i64 @"atoi@IS"(i8* %return154)
  %return156 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([106 x i8*], [106 x i8*]* @107, i64 0, i64 0), i64 %return155)
  %output157 = call i8** @"append@[SS"(i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @0, i64 0, i64 0), i8* %return156)
  br label %end144

true164:                                          ; preds = %end144
  %return167 = fcmp one double %output123, 0.000000e+00
  br i1 %return167, label %true169, label %end165

end165:                                           ; preds = %true164, %true169, %end144
  %PP.1 = phi i8** [ %output178, %true169 ], [ %PP.0, %true164 ], [ %PP.0, %end144 ]
  %return180 = call i64 @"len@I[S"(i8** %PP.1)
  %return181 = call i64 @"eq@III"(i64 %return180, i64 1)
  %8 = icmp ne i64 %return181, 0
  br i1 %8, label %true182, label %false183

true169:                                          ; preds = %true164
  %return174 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @140, i64 0, i64 0), i8* %return45)
  %return175 = call i8* @"chs@SS"(i8* %return174)
  %return176 = call i64 @"atoi@IS"(i8* %return175)
  %return177 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([106 x i8*], [106 x i8*]* @107, i64 0, i64 0), i64 %return176)
  %output178 = call i8** @"append@[SS"(i8** %PP.0, i8* %return177)
  br label %end165

true182:                                          ; preds = %end165
  %return186 = call i8* @"getcomp@S[SI"(i8** %PP.1, i64 0)
  %return187 = call i8* @"concat@SSS:S"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @141, i64 0, i64 0), i8* %return186, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @142, i64 0, i64 0))
  br label %end184

false183:                                         ; preds = %end165
  %return190 = call i64 @"gt@III"(i64 %return180, i64 1)
  %9 = icmp ne i64 %return190, 0
  br i1 %9, label %true191, label %false192

end184:                                           ; preds = %true191, %false192, %true182
  %p_build.0 = phi i8* [ %return187, %true182 ], [ %return196, %true191 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @123, i64 0, i64 0), %false192 ]
  %return198 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @144, i64 0, i64 0), i8* %return45)
  %return199 = call double @"chf@FS"(i8* %return198)
  %return201 = fcmp ogt double %return199, 0.000000e+00
  br i1 %return201, label %true203, label %end204

true191:                                          ; preds = %false183
  %return195 = call i8* @"join@S[SS"(i8** %PP.1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @143, i64 0, i64 0))
  %return196 = call i8* @"concat@SSS:S"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @141, i64 0, i64 0), i8* %return195, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @142, i64 0, i64 0))
  br label %end184

false192:                                         ; preds = %false183
  br label %end184

true203:                                          ; preds = %end184
  %return206 = fcmp one double %output123, 0.000000e+00
  br i1 %return206, label %true208, label %end204

end204:                                           ; preds = %true203, %true208, %end184
  %P1.0 = phi i8* [ %return216, %true208 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @123, i64 0, i64 0), %true203 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @123, i64 0, i64 0), %end184 ]
  %return218 = fcmp one double %output123, 0.000000e+00
  br i1 %return218, label %true220, label %false221

true208:                                          ; preds = %true203
  %return212 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @145, i64 0, i64 0), i8* %return45)
  %return213 = call i8* @"chs@SS"(i8* %return212)
  %return214 = call i64 @"atoi@IS"(i8* %return213)
  %return215 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([106 x i8*], [106 x i8*]* @107, i64 0, i64 0), i64 %return214)
  %return216 = call i8* @"concat@SSS:S"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @141, i64 0, i64 0), i8* %return215, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @142, i64 0, i64 0))
  br label %end204

true220:                                          ; preds = %end204
  %return224 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @147, i64 0, i64 0), i8* %return45)
  %return225 = call double @"chf@FS"(i8* %return224)
  %return226 = call i8* @"sprintf@SS:F"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @146, i64 0, i64 0), double %return225)
  br label %end222

false221:                                         ; preds = %end204
  br label %end222

end222:                                           ; preds = %false221, %true220
  %W.0 = phi i8* [ %return226, %true220 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @123, i64 0, i64 0), %false221 ]
  %return228 = call i8** @"split@[SSS"(i8* %W.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @148, i64 0, i64 0))
  %return230 = call i64 @"len@I[S"(i8** %return228)
  %return231 = call i64 @"gt@III"(i64 %return230, i64 1)
  %10 = icmp ne i64 %return231, 0
  br i1 %10, label %true232, label %false233

true232:                                          ; preds = %end222
  br label %cond237

false233:                                         ; preds = %end222
  br label %end234

end234:                                           ; preds = %cond237, %false233
  %out.0 = phi i8** [ %out.1, %cond237 ], [ %return228, %false233 ]
  %return260 = call i8* @"join@S[SS"(i8** %out.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @148, i64 0, i64 0))
  %return269 = call i8* @"concat@SSS:SSSSSS"(i8* %PB.0, i8* %p_build.0, i8* %V1.0, i8* %V2.0, i8* %V3.0, i8* %V4.0, i8* %P1.0, i8* %return260)
  br label %end52

cond237:                                          ; preds = %body238, %true232
  %out.1 = phi i8** [ getelementptr inbounds ([0 x i8*], [0 x i8*]* @0, i64 0, i64 0), %true232 ], [ %output252, %body238 ]
  %count.0 = phi i64 [ 1, %true232 ], [ %output255, %body238 ]
  %__impl_foreach_index.0 = phi i64 [ 0, %true232 ], [ %output257, %body238 ]
  %return241 = call i64 @"lt@III"(i64 %__impl_foreach_index.0, i64 %return230)
  %11 = icmp ne i64 %return241, 0
  br i1 %11, label %body238, label %end234

body238:                                          ; preds = %cond237
  %return246 = call i8* @"getcomp@S[SI"(i8** %return228, i64 %__impl_foreach_index.0)
  %output250 = call i64 @"div@II"(i64 6, i64 %count.0)
  %return251 = call i8* @"slice@SSIIIIII"(i8* %return246, i64 0, i64 0, i64 1, i64 %output250, i64 0, i64 0)
  %output252 = call i8** @"append@[SS"(i8** %out.1, i8* %return251)
  %output255 = add i64 %count.0, 1
  %output257 = add i64 %__impl_foreach_index.0, 1
  br label %cond237

true276:                                          ; preds = %end41
  %return279 = call double @"chf@FS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @149, i64 0, i64 0))
  %return281 = fcmp one double %return279, 0.000000e+00
  br i1 %return281, label %true283, label %false284

end277:                                           ; preds = %end380, %end41
  %T.5 = phi i8** [ %output401, %end380 ], [ %T.4, %end41 ]
  store i8** %T.5, i8*** %_bound_VARTYPE
  store i64 %return11, i64* %_bound_XS
  ret void

true283:                                          ; preds = %true276
  %return287 = call i8* @"chs@SS"(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @150, i64 0, i64 0))
  %return288 = call i64 @"atoi@IS"(i8* %return287)
  %return289 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([106 x i8*], [106 x i8*]* @107, i64 0, i64 0), i64 %return288)
  %output290 = call i8* @"add@SS"(i8* %return289, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @128, i64 0, i64 0))
  br label %end285

false284:                                         ; preds = %true276
  br label %end285

end285:                                           ; preds = %false284, %true283
  %FV1.0 = phi i8* [ %output290, %true283 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @128, i64 0, i64 0), %false284 ]
  %return291 = call double @"chf@FS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @151, i64 0, i64 0))
  %return293 = fcmp one double %return291, 0.000000e+00
  br i1 %return293, label %true295, label %false296

true295:                                          ; preds = %end285
  %return299 = call i8* @"chs@SS"(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @152, i64 0, i64 0))
  %return300 = call i64 @"atoi@IS"(i8* %return299)
  %return301 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([106 x i8*], [106 x i8*]* @107, i64 0, i64 0), i64 %return300)
  %output302 = call i8* @"add@SS"(i8* %return301, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @128, i64 0, i64 0))
  br label %end297

false296:                                         ; preds = %end285
  br label %end297

end297:                                           ; preds = %false296, %true295
  %FV2.0 = phi i8* [ %output302, %true295 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @128, i64 0, i64 0), %false296 ]
  %output305 = fadd double %return279, %return291
  %return306 = call double @"chf@FS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @153, i64 0, i64 0))
  %return308 = fcmp ogt double %return306, 0.000000e+00
  br i1 %return308, label %true310, label %end311

true310:                                          ; preds = %end297
  %return313 = fcmp one double %output305, 0.000000e+00
  br i1 %return313, label %true315, label %end311

end311:                                           ; preds = %true310, %true315, %end297
  %Fp.0 = phi i8** [ %output322, %true315 ], [ getelementptr inbounds ([0 x i8*], [0 x i8*]* @0, i64 0, i64 0), %true310 ], [ getelementptr inbounds ([0 x i8*], [0 x i8*]* @0, i64 0, i64 0), %end297 ]
  %return324 = call i64 @"len@I[S"(i8** %Fp.0)
  %return325 = call i64 @"eq@III"(i64 %return324, i64 1)
  %12 = icmp ne i64 %return325, 0
  br i1 %12, label %true326, label %false327

true315:                                          ; preds = %true310
  %return319 = call i8* @"chs@SS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @154, i64 0, i64 0))
  %return320 = call i64 @"atoi@IS"(i8* %return319)
  %return321 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([106 x i8*], [106 x i8*]* @107, i64 0, i64 0), i64 %return320)
  %output322 = call i8** @"append@[SS"(i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @0, i64 0, i64 0), i8* %return321)
  br label %end311

true326:                                          ; preds = %end311
  %return330 = call i8* @"getcomp@S[SI"(i8** %Fp.0, i64 0)
  %return331 = call i8* @"concat@SSS:S"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @141, i64 0, i64 0), i8* %return330, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @142, i64 0, i64 0))
  br label %end328

false327:                                         ; preds = %end311
  %return334 = call i64 @"gt@III"(i64 %return324, i64 1)
  %13 = icmp ne i64 %return334, 0
  br i1 %13, label %true335, label %false336

end328:                                           ; preds = %true335, %false336, %true326
  %Fp_build.0 = phi i8* [ %return331, %true326 ], [ %return340, %true335 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @123, i64 0, i64 0), %false336 ]
  %return341 = call double @"chf@FS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @156, i64 0, i64 0))
  %return343 = fcmp ogt double %return341, 0.000000e+00
  br i1 %return343, label %true345, label %end346

true335:                                          ; preds = %false327
  %return339 = call i8* @"join@S[SS"(i8** %Fp.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @143, i64 0, i64 0))
  %return340 = call i8* @"concat@SSS:S"(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @115, i64 0, i64 0), i8* %return339, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @155, i64 0, i64 0))
  br label %end328

false336:                                         ; preds = %false327
  br label %end328

true345:                                          ; preds = %end328
  %return348 = fcmp one double %output305, 0.000000e+00
  br i1 %return348, label %true350, label %end346

end346:                                           ; preds = %true345, %true350, %end328
  %FP.0 = phi i8** [ %output357, %true350 ], [ getelementptr inbounds ([0 x i8*], [0 x i8*]* @0, i64 0, i64 0), %true345 ], [ getelementptr inbounds ([0 x i8*], [0 x i8*]* @0, i64 0, i64 0), %end328 ]
  %return358 = call double @"chf@FS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @158, i64 0, i64 0))
  %return360 = fcmp ogt double %return358, 0.000000e+00
  br i1 %return360, label %true362, label %end363

true350:                                          ; preds = %true345
  %return354 = call i8* @"chs@SS"(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @157, i64 0, i64 0))
  %return355 = call i64 @"atoi@IS"(i8* %return354)
  %return356 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([106 x i8*], [106 x i8*]* @107, i64 0, i64 0), i64 %return355)
  %output357 = call i8** @"append@[SS"(i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @0, i64 0, i64 0), i8* %return356)
  br label %end346

true362:                                          ; preds = %end346
  %return365 = fcmp one double %output305, 0.000000e+00
  br i1 %return365, label %true367, label %end363

end363:                                           ; preds = %true362, %true367, %end346
  %FP.1 = phi i8** [ %output374, %true367 ], [ %FP.0, %true362 ], [ %FP.0, %end346 ]
  %return376 = call i64 @"len@I[S"(i8** %FP.1)
  %return377 = call i64 @"eq@III"(i64 %return376, i64 1)
  %14 = icmp ne i64 %return377, 0
  br i1 %14, label %true378, label %false379

true367:                                          ; preds = %true362
  %return371 = call i8* @"chs@SS"(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @159, i64 0, i64 0))
  %return372 = call i64 @"atoi@IS"(i8* %return371)
  %return373 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([106 x i8*], [106 x i8*]* @107, i64 0, i64 0), i64 %return372)
  %output374 = call i8** @"append@[SS"(i8** %FP.0, i8* %return373)
  br label %end363

true378:                                          ; preds = %end363
  %return382 = call i8* @"getcomp@S[SI"(i8** %FP.1, i64 0)
  %return383 = call i8* @"concat@SSS:S"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @141, i64 0, i64 0), i8* %return382, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @160, i64 0, i64 0))
  br label %end380

false379:                                         ; preds = %end363
  %return386 = call i64 @"gt@III"(i64 %return376, i64 1)
  %15 = icmp ne i64 %return386, 0
  br i1 %15, label %true387, label %false388

end380:                                           ; preds = %true387, %false388, %true378
  %FP_build.0 = phi i8* [ %return383, %true378 ], [ %return392, %true387 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @123, i64 0, i64 0), %false388 ]
  %return397 = call i8* @"concat@SSS:SS"(i8* %Fp_build.0, i8* %FV1.0, i8* %FV2.0, i8* %FP_build.0)
  %return400 = call i8* @"toupper@SS"(i8* %return397)
  %output401 = call i8** @"append@[SS"(i8** %T.4, i8* %return400)
  br label %end277

true387:                                          ; preds = %false379
  %return391 = call i8* @"join@S[SS"(i8** %FP.1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @143, i64 0, i64 0))
  %return392 = call i8* @"concat@SSS:S"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @141, i64 0, i64 0), i8* %return391, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @160, i64 0, i64 0))
  br label %end380

false388:                                         ; preds = %false379
  br label %end380
}

; Function Attrs: nounwind readnone
declare i64 @"chi@IS"(i8*) #1

; Function Attrs: nounwind readnone
declare i8* @"itoa@SI"(i64) #1

; Function Attrs: nounwind readnone
declare i8* @"concat@SSS:S"(i8*, i8*, i8*) #1

; Function Attrs: nounwind
declare i8** @"append@[SS"(i8**, i8*) #2

; Function Attrs: nounwind
declare i64 @"detail@IIS"(i64, i8*) #2

; Function Attrs: nounwind readnone
declare i64 @"not@II"(i64) #1

; Function Attrs: nounwind readnone
declare i64 @"lt@III"(i64, i64) #1

; Function Attrs: nounwind readnone
declare i8* @"concat@SSS"(i8*, i8*) #1

; Function Attrs: nounwind readnone
declare double @"chf@FS"(i8*) #1

; Function Attrs: nounwind readnone
declare i8* @"chs@SS"(i8*) #1

; Function Attrs: nounwind readnone
declare i64 @"atoi@IS"(i8*) #1

; Function Attrs: nounwind readnone
declare i8* @"getcomp@S[SI"(i8**, i64) #1

; Function Attrs: nounwind readnone
declare i8* @"add@SS"(i8*, i8*) #1

; Function Attrs: nounwind readnone
declare i64 @"len@I[S"(i8**) #1

; Function Attrs: nounwind readnone
declare i64 @"eq@III"(i64, i64) #1

; Function Attrs: nounwind readnone
declare i64 @"gt@III"(i64, i64) #1

; Function Attrs: nounwind readnone
declare i8* @"join@S[SS"(i8**, i8*) #1

; Function Attrs: nounwind readnone
declare i8* @"sprintf@SS:F"(i8*, double) #1

; Function Attrs: nounwind readnone
declare i8** @"split@[SSS"(i8*, i8*) #1

; Function Attrs: nounwind readnone
declare i64 @"div@II"(i64, i64) #1

; Function Attrs: nounwind readnone
declare i8* @"slice@SSIIIIII"(i8*, i64, i64, i64, i64, i64, i64) #1

; Function Attrs: nounwind readnone
declare i8* @"concat@SSS:SSSSSS"(i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*) #1

; Function Attrs: nounwind readnone
declare i8* @"concat@SSS:SS"(i8*, i8*, i8*, i8*) #1

; Function Attrs: nounwind
declare i8* @"toupper@SS"(i8*) #2

; Function Attrs: nounwind
define void @TFFAuicollect(i8** %VARTYPE, i64 %XS) #2 {
__llvm_entry:
  %"<XS>" = alloca i64
  %"<VARTYPE>" = alloca i8**
  store i8** %VARTYPE, i8*** %"<VARTYPE>"
  store i64 %XS, i64* %"<XS>"
  call void @"_TFFAuicollect@[SI"(i8*** %"<VARTYPE>", i64* %"<XS>")
  %evalue = load i8**, i8*** %"<VARTYPE>"
  %gvalue = call i8** @"_export@[SS[S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @161, i64 0, i64 0), i8** %evalue) #3
  %evalue1 = load i64, i64* %"<XS>"
  %gvalue2 = call i64 @"_export@ISI"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @117, i64 0, i64 0), i64 %evalue1) #3
  store i8** %gvalue, i8*** @VARTYPE
  store i64 %gvalue2, i64* @XS
  ret void
}

declare i8** @"_export@[SS[S"(i8*, i8**)

declare i64 @"_export@ISI"(i8*, i64)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @TFFAuicollect(i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @0, i64 0, i64 0), i64 0)
  ret void
}

attributes #0 = { alwaysinline nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind }
attributes #3 = { nounwind readonly }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"20.5.370"}
!2 = !{!"64"}

;_code_end
