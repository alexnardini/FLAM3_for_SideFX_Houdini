;_name	TFFAvactive
; ModuleID = 'TFFAvactive'

@0 = private constant [13 x i8] c"../flamefunc\00"
@1 = private constant [0 x i64] zeroinitializer
@2 = private constant [12 x i8] c"../vactive_\00"
@VACTIVE = external global i64*
@3 = private constant [8 x i8] c"VACTIVE\00"

define private void @"_TFFAvactive@[I"(i64** %_bound_VACTIVE) nounwind alwaysinline {
__llvm_entry:
  %return = call i64 @"chi@IS"(i8* getelementptr inbounds ([13 x i8]* @0, i64 0, i64 0))
  br label %cond

cond:                                             ; preds = %body, %__llvm_entry
  %i.0 = phi i64 [ 0, %__llvm_entry ], [ %output, %body ]
  %vactive.0 = phi i64* [ getelementptr inbounds ([0 x i64]* @1, i64 0, i64 0), %__llvm_entry ], [ %output10, %body ]
  %return3 = call i64 @"lt@III"(i64 %i.0, i64 %return)
  %0 = icmp ne i64 %return3, 0
  br i1 %0, label %body, label %end

body:                                             ; preds = %cond
  %output = add i64 %i.0, 1
  %return5 = call i8* @"itoa@SI"(i64 %output)
  %return8 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([12 x i8]* @2, i64 0, i64 0), i8* %return5)
  %return9 = call i64 @"chi@IS"(i8* %return8)
  %output10 = call i64* @"append@[II"(i64* %vactive.0, i64 %return9)
  br label %cond

end:                                              ; preds = %cond
  store i64* %vactive.0, i64** %_bound_VACTIVE
  ret void
}

declare i64 @"chi@IS"(i8*) nounwind readnone

declare i64 @"lt@III"(i64, i64) nounwind readnone

declare i8* @"itoa@SI"(i64) nounwind readnone

declare i8* @"concat@SSS"(i8*, i8*) nounwind readnone

declare i64* @"append@[II"(i64*, i64) nounwind

define void @TFFAvactive(i64* %VACTIVE) nounwind {
__llvm_entry:
  %"<VACTIVE>" = alloca i64*
  store i64* %VACTIVE, i64** %"<VACTIVE>"
  call void @"_TFFAvactive@[I"(i64** %"<VACTIVE>")
  %evalue = load i64** %"<VACTIVE>"
  %gvalue = call i64* @"_export@[IS[I"(i8* getelementptr inbounds ([8 x i8]* @3, i64 0, i64 0), i64* %evalue) nounwind readonly
  store i64* %gvalue, i64** @VACTIVE
  ret void
}

declare i64* @"_export@[IS[I"(i8*, i64*)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @TFFAvactive(i64* getelementptr inbounds ([0 x i64]* @1, i64 0, i64 0))
  ret void
}

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = metadata !{metadata !"cvex"}
!1 = metadata !{metadata !"18.5.499"}
!2 = metadata !{metadata !"64"}

;_code_end
