;_name	TFFAxformsdata
; ModuleID = 'TFFAxformsdata'
source_filename = "TFFAxformsdata"

@0 = private constant [0 x i64] zeroinitializer
@1 = private constant [0 x double] zeroinitializer
@2 = private constant [0 x <2 x double>] zeroinitializer
@3 = private constant [0 x i8*] zeroinitializer
@4 = private constant [5 x i8] c"sIDX\00"
@5 = private constant [5 x i8] c"clr_\00"
@6 = private constant [10 x i8] c"clrspeed_\00"
@7 = private constant [7 x i8] c"alpha_\00"
@8 = private constant [15 x i8] c"preblurweight_\00"
@9 = private constant [12 x i8] c"pre1weight_\00"
@10 = private constant [10 x i8] c"pre1type_\00"
@11 = private constant [12 x i8] c"pre2weight_\00"
@12 = private constant [10 x i8] c"pre2type_\00"
@13 = private constant [10 x i8] c"v1weight_\00"
@14 = private constant [8 x i8] c"v1type_\00"
@15 = private constant [10 x i8] c"v2weight_\00"
@16 = private constant [8 x i8] c"v2type_\00"
@17 = private constant [10 x i8] c"v3weight_\00"
@18 = private constant [8 x i8] c"v3type_\00"
@19 = private constant [10 x i8] c"v4weight_\00"
@20 = private constant [8 x i8] c"v4type_\00"
@21 = private constant [10 x i8] c"p1weight_\00"
@22 = private constant [8 x i8] c"p1type_\00"
@23 = private constant [3 x i8] c"x_\00"
@24 = private constant [3 x i8] c"y_\00"
@25 = private constant [5 x i8] c"ang_\00"
@26 = private constant [3 x i8] c"o_\00"
@27 = private constant [8 x i8] c"dopost_\00"
@28 = private constant [4 x i8] c"px_\00"
@29 = private constant [4 x i8] c"py_\00"
@30 = private constant [6 x i8] c"pang_\00"
@31 = private constant [4 x i8] c"po_\00"
@sIDX = external global i8**
@RES = external global i64
@POST = external global i64*
@p1t = external global i64*
@p2t = external global i64*
@v1t = external global i64*
@v2t = external global i64*
@v3t = external global i64*
@v4t = external global i64*
@P1t = external global i64*
@pbw = external global double*
@p1w = external global double*
@p2w = external global double*
@v1w = external global double*
@v2w = external global double*
@v3w = external global double*
@v4w = external global double*
@P1w = external global double*
@A = external global double*
@CLR = external global double*
@OM = external global double*
@X = external global <2 x double>*
@Y = external global <2 x double>*
@O = external global <2 x double>*
@PX = external global <2 x double>*
@PY = external global <2 x double>*
@PO = external global <2 x double>*
@32 = private constant [4 x i8] c"RES\00"
@33 = private constant [5 x i8] c"POST\00"
@34 = private constant [4 x i8] c"p1t\00"
@35 = private constant [4 x i8] c"p2t\00"
@36 = private constant [4 x i8] c"v1t\00"
@37 = private constant [4 x i8] c"v2t\00"
@38 = private constant [4 x i8] c"v3t\00"
@39 = private constant [4 x i8] c"v4t\00"
@40 = private constant [4 x i8] c"P1t\00"
@41 = private constant [4 x i8] c"pbw\00"
@42 = private constant [4 x i8] c"p1w\00"
@43 = private constant [4 x i8] c"p2w\00"
@44 = private constant [4 x i8] c"v1w\00"
@45 = private constant [4 x i8] c"v2w\00"
@46 = private constant [4 x i8] c"v3w\00"
@47 = private constant [4 x i8] c"v4w\00"
@48 = private constant [4 x i8] c"P1w\00"
@49 = private constant [2 x i8] c"A\00"
@50 = private constant [4 x i8] c"CLR\00"
@51 = private constant [3 x i8] c"OM\00"
@52 = private constant [2 x i8] c"X\00"
@53 = private constant [2 x i8] c"Y\00"
@54 = private constant [2 x i8] c"O\00"
@55 = private constant [3 x i8] c"PX\00"
@56 = private constant [3 x i8] c"PY\00"
@57 = private constant [3 x i8] c"PO\00"

; Function Attrs: nounwind readnone
declare double @"div@FF"(double, double) #0

; Function Attrs: nounwind readnone
declare double @"getcomp@FUI"(<2 x double>, i64) #0

; Function Attrs: nounwind readnone
declare double @"atan2@FFF"(double, double) #0

; Function Attrs: nounwind readnone
declare double @"sqrt@FF"(double) #0

; Function Attrs: nounwind readnone
declare double @"neg@FF"(double) #0

; Function Attrs: nounwind
declare double @"clamp@FFFF"(double, double, double) #1

; Function Attrs: nounwind readnone
declare double @"tan@FF"(double) #0

; Function Attrs: nounwind readnone
declare i64 @"neg@II"(i64) #0

; Function Attrs: nounwind readnone
declare double @"floor@FF"(double) #0

; Function Attrs: nounwind readnone
declare double @"sin@FF"(double) #0

; Function Attrs: nounwind readnone
declare double @"cos@FF"(double) #0

; Function Attrs: nounwind readnone
declare <3 x double> @"setcomp@VFI"(<3 x double>, double, i64) #0

; Function Attrs: nounwind readnone
declare double @"getcomp@FVI"(<3 x double>, i64) #0

; Function Attrs: nounwind readnone
declare <2 x double> @"setcomp@UFI"(<2 x double>, double, i64) #0

; Function Attrs: nounwind
declare double @"abs@FF"(double) #1

; Function Attrs: nounwind
declare double @"nrandom@F:S"(i8*) #1

; Function Attrs: nounwind readnone
declare <2 x double> @"set@UFF"(double, double) #0

; Function Attrs: nounwind readnone
declare i64 @"isfinite@IF"(double) #0

; Function Attrs: nounwind readnone
declare i64 @"not@II"(i64) #0

; Function Attrs: nounwind readnone
declare i64 @"isnan@IF"(double) #0

; Function Attrs: nounwind readnone
declare i64 @"or@III"(i64, i64) #0

; Function Attrs: nounwind
declare double @"length@FU"(<2 x double>) #1

; Function Attrs: alwaysinline nounwind
define private void @"affineRot@2UUF"(<4 x double>* %m2, <2 x double>* %x, <2 x double>* %y, double* %ang) #2 {
__llvm_entry:
  %x1 = load <2 x double>, <2 x double>* %x
  %y2 = load <2 x double>, <2 x double>* %y
  %return = call <4 x double> @"set@2UU"(<2 x double> %x1, <2 x double> %y2)
  store <4 x double> %return, <4 x double>* %m2
  %ang4 = load double, double* %ang
  %output = call <4 x double> @"rotate@2F"(<4 x double> %return, double %ang4)
  store <4 x double> %output, <4 x double>* %m2
  ret void
}

; Function Attrs: nounwind
declare <4 x double> @"set@2UU"(<2 x double>, <2 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @"rotate@2F"(<4 x double>, double) #0

; Function Attrs: nounwind readnone
declare i64 @"lt@III"(i64, i64) #0

; Function Attrs: nounwind readnone
declare i8* @"getcomp@S[SI"(i8**, i64) #0

; Function Attrs: nounwind
declare i8** @"append@[SS"(i8**, i8*) #1

; Function Attrs: alwaysinline nounwind
define private void @"_TFFAxformsdata@[SI[I[I[I[I[I[I[I[I[F[F[F[F[F[F[F[F[F[F[F[U[U[U[U[U[U"(i8*** %_bound_sIDX, i64* %_bound_RES, i64** %_bound_POST, i64** %_bound_p1t, i64** %_bound_p2t, i64** %_bound_v1t, i64** %_bound_v2t, i64** %_bound_v3t, i64** %_bound_v4t, i64** %_bound_P1t, double** %_bound_pbw, double** %_bound_p1w, double** %_bound_p2w, double** %_bound_v1w, double** %_bound_v2w, double** %_bound_v3w, double** %_bound_v4w, double** %_bound_P1w, double** %_bound_A, double** %_bound_CLR, double** %_bound_OM, <2 x double>** %_bound_X, <2 x double>** %_bound_Y, <2 x double>** %_bound_O, <2 x double>** %_bound_PX, <2 x double>** %_bound_PY, <2 x double>** %_bound_PO) #2 {
__llvm_entry:
  %_m2 = alloca <4 x double>
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  %3 = alloca <2 x double>
  %4 = alloca <2 x double>
  %5 = alloca double
  %return = call i8** @"detail@[SIS"(i64 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @4, i64 0, i64 0))
  %return2 = call i64 @"len@I[S"(i8** %return)
  store <4 x double> zeroinitializer, <4 x double>* %_m2, !vex-initializer-store !3
  br label %cond

cond:                                             ; preds = %end268, %__llvm_entry
  %POST.0 = phi i64* [ getelementptr inbounds ([0 x i64], [0 x i64]* @0, i64 0, i64 0), %__llvm_entry ], [ %output263, %end268 ]
  %v1t.0 = phi i64* [ getelementptr inbounds ([0 x i64], [0 x i64]* @0, i64 0, i64 0), %__llvm_entry ], [ %v1t.1, %end268 ]
  %v2t.0 = phi i64* [ getelementptr inbounds ([0 x i64], [0 x i64]* @0, i64 0, i64 0), %__llvm_entry ], [ %v2t.1, %end268 ]
  %v3t.0 = phi i64* [ getelementptr inbounds ([0 x i64], [0 x i64]* @0, i64 0, i64 0), %__llvm_entry ], [ %v3t.1, %end268 ]
  %v4t.0 = phi i64* [ getelementptr inbounds ([0 x i64], [0 x i64]* @0, i64 0, i64 0), %__llvm_entry ], [ %v4t.1, %end268 ]
  %p1t.0 = phi i64* [ getelementptr inbounds ([0 x i64], [0 x i64]* @0, i64 0, i64 0), %__llvm_entry ], [ %p1t.1, %end268 ]
  %p2t.0 = phi i64* [ getelementptr inbounds ([0 x i64], [0 x i64]* @0, i64 0, i64 0), %__llvm_entry ], [ %p2t.1, %end268 ]
  %P1t.0 = phi i64* [ getelementptr inbounds ([0 x i64], [0 x i64]* @0, i64 0, i64 0), %__llvm_entry ], [ %P1t.1, %end268 ]
  %pbw.0 = phi double* [ getelementptr inbounds ([0 x double], [0 x double]* @1, i64 0, i64 0), %__llvm_entry ], [ %output46, %end268 ]
  %v1w.0 = phi double* [ getelementptr inbounds ([0 x double], [0 x double]* @1, i64 0, i64 0), %__llvm_entry ], [ %output99, %end268 ]
  %v2w.0 = phi double* [ getelementptr inbounds ([0 x double], [0 x double]* @1, i64 0, i64 0), %__llvm_entry ], [ %output122, %end268 ]
  %v3w.0 = phi double* [ getelementptr inbounds ([0 x double], [0 x double]* @1, i64 0, i64 0), %__llvm_entry ], [ %output145, %end268 ]
  %v4w.0 = phi double* [ getelementptr inbounds ([0 x double], [0 x double]* @1, i64 0, i64 0), %__llvm_entry ], [ %output168, %end268 ]
  %p1w.0 = phi double* [ getelementptr inbounds ([0 x double], [0 x double]* @1, i64 0, i64 0), %__llvm_entry ], [ %output54, %end268 ]
  %p2w.0 = phi double* [ getelementptr inbounds ([0 x double], [0 x double]* @1, i64 0, i64 0), %__llvm_entry ], [ %output76, %end268 ]
  %P1w.0 = phi double* [ getelementptr inbounds ([0 x double], [0 x double]* @1, i64 0, i64 0), %__llvm_entry ], [ %output191, %end268 ]
  %CLR.0 = phi double* [ getelementptr inbounds ([0 x double], [0 x double]* @1, i64 0, i64 0), %__llvm_entry ], [ %output22, %end268 ]
  %OM.0 = phi double* [ getelementptr inbounds ([0 x double], [0 x double]* @1, i64 0, i64 0), %__llvm_entry ], [ %output30, %end268 ]
  %A.0 = phi double* [ getelementptr inbounds ([0 x double], [0 x double]* @1, i64 0, i64 0), %__llvm_entry ], [ %output38, %end268 ]
  %x.0 = phi <2 x double>* [ getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @2, i64 0, i64 0), %__llvm_entry ], [ %output241, %end268 ]
  %y.0 = phi <2 x double>* [ getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @2, i64 0, i64 0), %__llvm_entry ], [ %output247, %end268 ]
  %o.0 = phi <2 x double>* [ getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @2, i64 0, i64 0), %__llvm_entry ], [ %output255, %end268 ]
  %px.0 = phi <2 x double>* [ getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @2, i64 0, i64 0), %__llvm_entry ], [ %px.1, %end268 ]
  %py.0 = phi <2 x double>* [ getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @2, i64 0, i64 0), %__llvm_entry ], [ %py.1, %end268 ]
  %po.0 = phi <2 x double>* [ getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @2, i64 0, i64 0), %__llvm_entry ], [ %po.1, %end268 ]
  %i.0 = phi i64 [ 0, %__llvm_entry ], [ %output319, %end268 ]
  %return5 = call i64 @"lt@III"(i64 %i.0, i64 %return2)
  %6 = icmp ne i64 %return5, 0
  br i1 %6, label %body, label %end

body:                                             ; preds = %cond
  %return8 = call i8* @"getcomp@S[SI"(i8** %return, i64 %i.0)
  %return10 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @5, i64 0, i64 0), i8* %return8)
  %return11 = call double @"chf@FS"(i8* %return10)
  %return13 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @6, i64 0, i64 0), i8* %return8)
  %return14 = call double @"chf@FS"(i8* %return13)
  %output = fsub double 1.000000e+00, %return14
  %output18 = fmul double %return11, %output
  %output19 = call double @"div@FF"(double %output18, double 2.000000e+00)
  %return20 = call { double, double* } @"setcomp@F[FFI"(double* %CLR.0, double %output19, i64 %i.0)
  %output22 = extractvalue { double, double* } %return20, 1
  %output25 = fadd double 1.000000e+00, %return14
  %output26 = call double @"div@FF"(double %output25, double 2.000000e+00)
  %return28 = call { double, double* } @"setcomp@F[FFI"(double* %OM.0, double %output26, i64 %i.0)
  %output30 = extractvalue { double, double* } %return28, 1
  %return33 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @7, i64 0, i64 0), i8* %return8)
  %return34 = call double @"chf@FS"(i8* %return33)
  %return36 = call { double, double* } @"setcomp@F[FFI"(double* %A.0, double %return34, i64 %i.0)
  %output38 = extractvalue { double, double* } %return36, 1
  %return41 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @8, i64 0, i64 0), i8* %return8)
  %return42 = call double @"chf@FS"(i8* %return41)
  %return44 = call { double, double* } @"setcomp@F[FFI"(double* %pbw.0, double %return42, i64 %i.0)
  %output46 = extractvalue { double, double* } %return44, 1
  %return49 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @9, i64 0, i64 0), i8* %return8)
  %return50 = call double @"chf@FS"(i8* %return49)
  %return52 = call { double, double* } @"setcomp@F[FFI"(double* %p1w.0, double %return50, i64 %i.0)
  %output54 = extractvalue { double, double* } %return52, 1
  %return57 = call double @"getcomp@F[FI"(double* %output54, i64 %i.0)
  %return58 = fcmp ogt double %return57, 0.000000e+00
  br i1 %return58, label %true, label %end60

end:                                              ; preds = %cond
  store i8** %return, i8*** %_bound_sIDX
  store i64 %return2, i64* %_bound_RES
  store i64* %POST.0, i64** %_bound_POST
  store i64* %p1t.0, i64** %_bound_p1t
  store i64* %p2t.0, i64** %_bound_p2t
  store i64* %v1t.0, i64** %_bound_v1t
  store i64* %v2t.0, i64** %_bound_v2t
  store i64* %v3t.0, i64** %_bound_v3t
  store i64* %v4t.0, i64** %_bound_v4t
  store i64* %P1t.0, i64** %_bound_P1t
  store double* %pbw.0, double** %_bound_pbw
  store double* %p1w.0, double** %_bound_p1w
  store double* %p2w.0, double** %_bound_p2w
  store double* %v1w.0, double** %_bound_v1w
  store double* %v2w.0, double** %_bound_v2w
  store double* %v3w.0, double** %_bound_v3w
  store double* %v4w.0, double** %_bound_v4w
  store double* %P1w.0, double** %_bound_P1w
  store double* %A.0, double** %_bound_A
  store double* %CLR.0, double** %_bound_CLR
  store double* %OM.0, double** %_bound_OM
  store <2 x double>* %x.0, <2 x double>** %_bound_X
  store <2 x double>* %y.0, <2 x double>** %_bound_Y
  store <2 x double>* %o.0, <2 x double>** %_bound_O
  store <2 x double>* %px.0, <2 x double>** %_bound_PX
  store <2 x double>* %py.0, <2 x double>** %_bound_PY
  store <2 x double>* %po.0, <2 x double>** %_bound_PO
  ret void

true:                                             ; preds = %body
  %return63 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @10, i64 0, i64 0), i8* %return8)
  %return64 = call i64 @"chi@IS"(i8* %return63)
  %return66 = call { i64, i64* } @"setcomp@I[III"(i64* %p1t.0, i64 %return64, i64 %i.0)
  %output68 = extractvalue { i64, i64* } %return66, 1
  br label %end60

end60:                                            ; preds = %true, %body
  %p1t.1 = phi i64* [ %output68, %true ], [ %p1t.0, %body ]
  %return71 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @11, i64 0, i64 0), i8* %return8)
  %return72 = call double @"chf@FS"(i8* %return71)
  %return74 = call { double, double* } @"setcomp@F[FFI"(double* %p2w.0, double %return72, i64 %i.0)
  %output76 = extractvalue { double, double* } %return74, 1
  %return79 = call double @"getcomp@F[FI"(double* %output76, i64 %i.0)
  %return80 = fcmp ogt double %return79, 0.000000e+00
  br i1 %return80, label %true82, label %end83

true82:                                           ; preds = %end60
  %return86 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @12, i64 0, i64 0), i8* %return8)
  %return87 = call i64 @"chi@IS"(i8* %return86)
  %return89 = call { i64, i64* } @"setcomp@I[III"(i64* %p2t.0, i64 %return87, i64 %i.0)
  %output91 = extractvalue { i64, i64* } %return89, 1
  br label %end83

end83:                                            ; preds = %true82, %end60
  %p2t.1 = phi i64* [ %output91, %true82 ], [ %p2t.0, %end60 ]
  %return94 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @13, i64 0, i64 0), i8* %return8)
  %return95 = call double @"chf@FS"(i8* %return94)
  %return97 = call { double, double* } @"setcomp@F[FFI"(double* %v1w.0, double %return95, i64 %i.0)
  %output99 = extractvalue { double, double* } %return97, 1
  %return102 = call double @"getcomp@F[FI"(double* %output99, i64 %i.0)
  %return103 = fcmp one double %return102, 0.000000e+00
  br i1 %return103, label %true105, label %end106

true105:                                          ; preds = %end83
  %return109 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @14, i64 0, i64 0), i8* %return8)
  %return110 = call i64 @"chi@IS"(i8* %return109)
  %return112 = call { i64, i64* } @"setcomp@I[III"(i64* %v1t.0, i64 %return110, i64 %i.0)
  %output114 = extractvalue { i64, i64* } %return112, 1
  br label %end106

end106:                                           ; preds = %true105, %end83
  %v1t.1 = phi i64* [ %output114, %true105 ], [ %v1t.0, %end83 ]
  %return117 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @15, i64 0, i64 0), i8* %return8)
  %return118 = call double @"chf@FS"(i8* %return117)
  %return120 = call { double, double* } @"setcomp@F[FFI"(double* %v2w.0, double %return118, i64 %i.0)
  %output122 = extractvalue { double, double* } %return120, 1
  %return125 = call double @"getcomp@F[FI"(double* %output122, i64 %i.0)
  %return126 = fcmp one double %return125, 0.000000e+00
  br i1 %return126, label %true128, label %end129

true128:                                          ; preds = %end106
  %return132 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @16, i64 0, i64 0), i8* %return8)
  %return133 = call i64 @"chi@IS"(i8* %return132)
  %return135 = call { i64, i64* } @"setcomp@I[III"(i64* %v2t.0, i64 %return133, i64 %i.0)
  %output137 = extractvalue { i64, i64* } %return135, 1
  br label %end129

end129:                                           ; preds = %true128, %end106
  %v2t.1 = phi i64* [ %output137, %true128 ], [ %v2t.0, %end106 ]
  %return140 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @17, i64 0, i64 0), i8* %return8)
  %return141 = call double @"chf@FS"(i8* %return140)
  %return143 = call { double, double* } @"setcomp@F[FFI"(double* %v3w.0, double %return141, i64 %i.0)
  %output145 = extractvalue { double, double* } %return143, 1
  %return148 = call double @"getcomp@F[FI"(double* %output145, i64 %i.0)
  %return149 = fcmp one double %return148, 0.000000e+00
  br i1 %return149, label %true151, label %end152

true151:                                          ; preds = %end129
  %return155 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @18, i64 0, i64 0), i8* %return8)
  %return156 = call i64 @"chi@IS"(i8* %return155)
  %return158 = call { i64, i64* } @"setcomp@I[III"(i64* %v3t.0, i64 %return156, i64 %i.0)
  %output160 = extractvalue { i64, i64* } %return158, 1
  br label %end152

end152:                                           ; preds = %true151, %end129
  %v3t.1 = phi i64* [ %output160, %true151 ], [ %v3t.0, %end129 ]
  %return163 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @19, i64 0, i64 0), i8* %return8)
  %return164 = call double @"chf@FS"(i8* %return163)
  %return166 = call { double, double* } @"setcomp@F[FFI"(double* %v4w.0, double %return164, i64 %i.0)
  %output168 = extractvalue { double, double* } %return166, 1
  %return171 = call double @"getcomp@F[FI"(double* %output168, i64 %i.0)
  %return172 = fcmp one double %return171, 0.000000e+00
  br i1 %return172, label %true174, label %end175

true174:                                          ; preds = %end152
  %return178 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @20, i64 0, i64 0), i8* %return8)
  %return179 = call i64 @"chi@IS"(i8* %return178)
  %return181 = call { i64, i64* } @"setcomp@I[III"(i64* %v4t.0, i64 %return179, i64 %i.0)
  %output183 = extractvalue { i64, i64* } %return181, 1
  br label %end175

end175:                                           ; preds = %true174, %end152
  %v4t.1 = phi i64* [ %output183, %true174 ], [ %v4t.0, %end152 ]
  %return186 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @21, i64 0, i64 0), i8* %return8)
  %return187 = call double @"chf@FS"(i8* %return186)
  %return189 = call { double, double* } @"setcomp@F[FFI"(double* %P1w.0, double %return187, i64 %i.0)
  %output191 = extractvalue { double, double* } %return189, 1
  %return194 = call double @"getcomp@F[FI"(double* %output191, i64 %i.0)
  %return195 = fcmp ogt double %return194, 0.000000e+00
  br i1 %return195, label %true197, label %end198

true197:                                          ; preds = %end175
  %return201 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @22, i64 0, i64 0), i8* %return8)
  %return202 = call i64 @"chi@IS"(i8* %return201)
  %return204 = call { i64, i64* } @"setcomp@I[III"(i64* %P1t.0, i64 %return202, i64 %i.0)
  %output206 = extractvalue { i64, i64* } %return204, 1
  br label %end198

end198:                                           ; preds = %true197, %end175
  %P1t.1 = phi i64* [ %output206, %true197 ], [ %P1t.0, %end175 ]
  %return208 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @23, i64 0, i64 0), i8* %return8)
  %return209 = call <2 x double> @"chu@US"(i8* %return208)
  %return211 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @24, i64 0, i64 0), i8* %return8)
  %return212 = call <2 x double> @"chu@US"(i8* %return211)
  %return214 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @25, i64 0, i64 0), i8* %return8)
  %return215 = call double @"chf@FS"(i8* %return214)
  %return217 = fcmp one double %return215, 0.000000e+00
  br i1 %return217, label %true219, label %end220

true219:                                          ; preds = %end198
  store <2 x double> %return209, <2 x double>* %0
  store <2 x double> %return212, <2 x double>* %1
  %return224 = call double @"radians@FF"(double %return215)
  %return225 = call double @"neg@FF"(double %return224)
  store double %return225, double* %2
  call void @"affineRot@2UUF"(<4 x double>* %_m2, <2 x double>* %0, <2 x double>* %1, double* %2)
  %_m2226 = load <4 x double>, <4 x double>* %_m2
  %return227 = call double @"getcomp@F2II"(<4 x double> %_m2226, i64 0, i64 0)
  %return229 = call double @"getcomp@F2II"(<4 x double> %_m2226, i64 0, i64 1)
  %return230 = call <2 x double> @"set@UFF"(double %return227, double %return229)
  %return232 = call double @"getcomp@F2II"(<4 x double> %_m2226, i64 1, i64 0)
  %return234 = call double @"getcomp@F2II"(<4 x double> %_m2226, i64 1, i64 1)
  %return235 = call <2 x double> @"set@UFF"(double %return232, double %return234)
  br label %end220

end220:                                           ; preds = %true219, %end198
  %_x.0 = phi <2 x double> [ %return230, %true219 ], [ %return209, %end198 ]
  %_y.0 = phi <2 x double> [ %return235, %true219 ], [ %return212, %end198 ]
  %return239 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %x.0, <2 x double> %_x.0, i64 %i.0)
  %output241 = extractvalue { <2 x double>, <2 x double>* } %return239, 1
  %return245 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %y.0, <2 x double> %_y.0, i64 %i.0)
  %output247 = extractvalue { <2 x double>, <2 x double>* } %return245, 1
  %return250 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @26, i64 0, i64 0), i8* %return8)
  %return251 = call <2 x double> @"chu@US"(i8* %return250)
  %return253 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %o.0, <2 x double> %return251, i64 %i.0)
  %output255 = extractvalue { <2 x double>, <2 x double>* } %return253, 1
  %return258 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @27, i64 0, i64 0), i8* %return8)
  %return259 = call i64 @"chi@IS"(i8* %return258)
  %return261 = call { i64, i64* } @"setcomp@I[III"(i64* %POST.0, i64 %return259, i64 %i.0)
  %output263 = extractvalue { i64, i64* } %return261, 1
  %return266 = call i64 @"getcomp@I[II"(i64* %output263, i64 %i.0)
  %7 = icmp ne i64 %return266, 0
  br i1 %7, label %true267, label %end268

true267:                                          ; preds = %end220
  %return270 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @28, i64 0, i64 0), i8* %return8)
  %return271 = call <2 x double> @"chu@US"(i8* %return270)
  %return273 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @29, i64 0, i64 0), i8* %return8)
  %return274 = call <2 x double> @"chu@US"(i8* %return273)
  %return276 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i64 0, i64 0), i8* %return8)
  %return277 = call double @"chf@FS"(i8* %return276)
  %return279 = fcmp one double %return277, 0.000000e+00
  br i1 %return279, label %true281, label %end282

end268:                                           ; preds = %end282, %end220
  %px.1 = phi <2 x double>* [ %output303, %end282 ], [ %px.0, %end220 ]
  %py.1 = phi <2 x double>* [ %output309, %end282 ], [ %py.0, %end220 ]
  %po.1 = phi <2 x double>* [ %output317, %end282 ], [ %po.0, %end220 ]
  %output319 = add i64 %i.0, 1
  br label %cond

true281:                                          ; preds = %true267
  store <2 x double> %return271, <2 x double>* %3
  store <2 x double> %return274, <2 x double>* %4
  %return286 = call double @"radians@FF"(double %return277)
  %return287 = call double @"neg@FF"(double %return286)
  store double %return287, double* %5
  call void @"affineRot@2UUF"(<4 x double>* %_m2, <2 x double>* %3, <2 x double>* %4, double* %5)
  %_m2288 = load <4 x double>, <4 x double>* %_m2
  %return289 = call double @"getcomp@F2II"(<4 x double> %_m2288, i64 0, i64 0)
  %return291 = call double @"getcomp@F2II"(<4 x double> %_m2288, i64 0, i64 1)
  %return292 = call <2 x double> @"set@UFF"(double %return289, double %return291)
  %return294 = call double @"getcomp@F2II"(<4 x double> %_m2288, i64 1, i64 0)
  %return296 = call double @"getcomp@F2II"(<4 x double> %_m2288, i64 1, i64 1)
  %return297 = call <2 x double> @"set@UFF"(double %return294, double %return296)
  br label %end282

end282:                                           ; preds = %true281, %true267
  %_x.1 = phi <2 x double> [ %return292, %true281 ], [ %return271, %true267 ]
  %_y.1 = phi <2 x double> [ %return297, %true281 ], [ %return274, %true267 ]
  %return301 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %px.0, <2 x double> %_x.1, i64 %i.0)
  %output303 = extractvalue { <2 x double>, <2 x double>* } %return301, 1
  %return307 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %py.0, <2 x double> %_y.1, i64 %i.0)
  %output309 = extractvalue { <2 x double>, <2 x double>* } %return307, 1
  %return312 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @31, i64 0, i64 0), i8* %return8)
  %return313 = call <2 x double> @"chu@US"(i8* %return312)
  %return315 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %po.0, <2 x double> %return313, i64 %i.0)
  %output317 = extractvalue { <2 x double>, <2 x double>* } %return315, 1
  br label %end268
}

; Function Attrs: nounwind
declare i8** @"detail@[SIS"(i64, i8*) #1

; Function Attrs: nounwind readnone
declare i64 @"len@I[S"(i8**) #0

; Function Attrs: nounwind readnone
declare i8* @"concat@SSS"(i8*, i8*) #0

; Function Attrs: nounwind readnone
declare double @"chf@FS"(i8*) #0

; Function Attrs: nounwind readnone
declare { double, double* } @"setcomp@F[FFI"(double*, double, i64) #0

; Function Attrs: nounwind readnone
declare double @"getcomp@F[FI"(double*, i64) #0

; Function Attrs: nounwind readnone
declare i64 @"chi@IS"(i8*) #0

; Function Attrs: nounwind readnone
declare { i64, i64* } @"setcomp@I[III"(i64*, i64, i64) #0

; Function Attrs: nounwind readnone
declare <2 x double> @"chu@US"(i8*) #0

; Function Attrs: nounwind
declare double @"radians@FF"(double) #1

; Function Attrs: nounwind readnone
declare double @"getcomp@F2II"(<4 x double>, i64, i64) #0

; Function Attrs: nounwind readnone
declare { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>*, <2 x double>, i64) #0

; Function Attrs: nounwind readnone
declare i64 @"getcomp@I[II"(i64*, i64) #0

; Function Attrs: nounwind
define void @TFFAxformsdata(i8** %sIDX, i64 %RES, i64* %POST, i64* %p1t, i64* %p2t, i64* %v1t, i64* %v2t, i64* %v3t, i64* %v4t, i64* %P1t, double* %pbw, double* %p1w, double* %p2w, double* %v1w, double* %v2w, double* %v3w, double* %v4w, double* %P1w, double* %A, double* %CLR, double* %OM, <2 x double>* %X, <2 x double>* %Y, <2 x double>* %O, <2 x double>* %PX, <2 x double>* %PY, <2 x double>* %PO) #1 {
__llvm_entry:
  %"<RES>" = alloca i64
  %"<POST>" = alloca i64*
  %"<p1t>" = alloca i64*
  %"<p2t>" = alloca i64*
  %"<v1t>" = alloca i64*
  %"<v2t>" = alloca i64*
  %"<v3t>" = alloca i64*
  %"<v4t>" = alloca i64*
  %"<P1t>" = alloca i64*
  %"<pbw>" = alloca double*
  %"<p1w>" = alloca double*
  %"<p2w>" = alloca double*
  %"<v1w>" = alloca double*
  %"<v2w>" = alloca double*
  %"<v3w>" = alloca double*
  %"<v4w>" = alloca double*
  %"<P1w>" = alloca double*
  %"<A>" = alloca double*
  %"<CLR>" = alloca double*
  %"<OM>" = alloca double*
  %"<X>" = alloca <2 x double>*
  %"<Y>" = alloca <2 x double>*
  %"<O>" = alloca <2 x double>*
  %"<PX>" = alloca <2 x double>*
  %"<PY>" = alloca <2 x double>*
  %"<PO>" = alloca <2 x double>*
  %"<sIDX>" = alloca i8**
  store i8** %sIDX, i8*** %"<sIDX>"
  store i64 %RES, i64* %"<RES>"
  store i64* %POST, i64** %"<POST>"
  store i64* %p1t, i64** %"<p1t>"
  store i64* %p2t, i64** %"<p2t>"
  store i64* %v1t, i64** %"<v1t>"
  store i64* %v2t, i64** %"<v2t>"
  store i64* %v3t, i64** %"<v3t>"
  store i64* %v4t, i64** %"<v4t>"
  store i64* %P1t, i64** %"<P1t>"
  store double* %pbw, double** %"<pbw>"
  store double* %p1w, double** %"<p1w>"
  store double* %p2w, double** %"<p2w>"
  store double* %v1w, double** %"<v1w>"
  store double* %v2w, double** %"<v2w>"
  store double* %v3w, double** %"<v3w>"
  store double* %v4w, double** %"<v4w>"
  store double* %P1w, double** %"<P1w>"
  store double* %A, double** %"<A>"
  store double* %CLR, double** %"<CLR>"
  store double* %OM, double** %"<OM>"
  store <2 x double>* %X, <2 x double>** %"<X>"
  store <2 x double>* %Y, <2 x double>** %"<Y>"
  store <2 x double>* %O, <2 x double>** %"<O>"
  store <2 x double>* %PX, <2 x double>** %"<PX>"
  store <2 x double>* %PY, <2 x double>** %"<PY>"
  store <2 x double>* %PO, <2 x double>** %"<PO>"
  call void @"_TFFAxformsdata@[SI[I[I[I[I[I[I[I[I[F[F[F[F[F[F[F[F[F[F[F[U[U[U[U[U[U"(i8*** %"<sIDX>", i64* %"<RES>", i64** %"<POST>", i64** %"<p1t>", i64** %"<p2t>", i64** %"<v1t>", i64** %"<v2t>", i64** %"<v3t>", i64** %"<v4t>", i64** %"<P1t>", double** %"<pbw>", double** %"<p1w>", double** %"<p2w>", double** %"<v1w>", double** %"<v2w>", double** %"<v3w>", double** %"<v4w>", double** %"<P1w>", double** %"<A>", double** %"<CLR>", double** %"<OM>", <2 x double>** %"<X>", <2 x double>** %"<Y>", <2 x double>** %"<O>", <2 x double>** %"<PX>", <2 x double>** %"<PY>", <2 x double>** %"<PO>")
  %evalue = load i8**, i8*** %"<sIDX>"
  %gvalue = call i8** @"_export@[SS[S"(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @4, i64 0, i64 0), i8** %evalue) #3
  %evalue1 = load i64, i64* %"<RES>"
  %gvalue2 = call i64 @"_export@ISI"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @32, i64 0, i64 0), i64 %evalue1) #3
  %evalue3 = load i64*, i64** %"<POST>"
  %gvalue4 = call i64* @"_export@[IS[I"(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @33, i64 0, i64 0), i64* %evalue3) #3
  %evalue5 = load i64*, i64** %"<p1t>"
  %gvalue6 = call i64* @"_export@[IS[I"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @34, i64 0, i64 0), i64* %evalue5) #3
  %evalue7 = load i64*, i64** %"<p2t>"
  %gvalue8 = call i64* @"_export@[IS[I"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @35, i64 0, i64 0), i64* %evalue7) #3
  %evalue9 = load i64*, i64** %"<v1t>"
  %gvalue10 = call i64* @"_export@[IS[I"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @36, i64 0, i64 0), i64* %evalue9) #3
  %evalue11 = load i64*, i64** %"<v2t>"
  %gvalue12 = call i64* @"_export@[IS[I"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @37, i64 0, i64 0), i64* %evalue11) #3
  %evalue13 = load i64*, i64** %"<v3t>"
  %gvalue14 = call i64* @"_export@[IS[I"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @38, i64 0, i64 0), i64* %evalue13) #3
  %evalue15 = load i64*, i64** %"<v4t>"
  %gvalue16 = call i64* @"_export@[IS[I"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @39, i64 0, i64 0), i64* %evalue15) #3
  %evalue17 = load i64*, i64** %"<P1t>"
  %gvalue18 = call i64* @"_export@[IS[I"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @40, i64 0, i64 0), i64* %evalue17) #3
  %evalue19 = load double*, double** %"<pbw>"
  %gvalue20 = call double* @"_export@[FS[F"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @41, i64 0, i64 0), double* %evalue19) #3
  %evalue21 = load double*, double** %"<p1w>"
  %gvalue22 = call double* @"_export@[FS[F"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @42, i64 0, i64 0), double* %evalue21) #3
  %evalue23 = load double*, double** %"<p2w>"
  %gvalue24 = call double* @"_export@[FS[F"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @43, i64 0, i64 0), double* %evalue23) #3
  %evalue25 = load double*, double** %"<v1w>"
  %gvalue26 = call double* @"_export@[FS[F"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @44, i64 0, i64 0), double* %evalue25) #3
  %evalue27 = load double*, double** %"<v2w>"
  %gvalue28 = call double* @"_export@[FS[F"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @45, i64 0, i64 0), double* %evalue27) #3
  %evalue29 = load double*, double** %"<v3w>"
  %gvalue30 = call double* @"_export@[FS[F"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @46, i64 0, i64 0), double* %evalue29) #3
  %evalue31 = load double*, double** %"<v4w>"
  %gvalue32 = call double* @"_export@[FS[F"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @47, i64 0, i64 0), double* %evalue31) #3
  %evalue33 = load double*, double** %"<P1w>"
  %gvalue34 = call double* @"_export@[FS[F"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @48, i64 0, i64 0), double* %evalue33) #3
  %evalue35 = load double*, double** %"<A>"
  %gvalue36 = call double* @"_export@[FS[F"(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @49, i64 0, i64 0), double* %evalue35) #3
  %evalue37 = load double*, double** %"<CLR>"
  %gvalue38 = call double* @"_export@[FS[F"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @50, i64 0, i64 0), double* %evalue37) #3
  %evalue39 = load double*, double** %"<OM>"
  %gvalue40 = call double* @"_export@[FS[F"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @51, i64 0, i64 0), double* %evalue39) #3
  %evalue41 = load <2 x double>*, <2 x double>** %"<X>"
  %gvalue42 = call <2 x double>* @"_export@[US[U"(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @52, i64 0, i64 0), <2 x double>* %evalue41) #3
  %evalue43 = load <2 x double>*, <2 x double>** %"<Y>"
  %gvalue44 = call <2 x double>* @"_export@[US[U"(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @53, i64 0, i64 0), <2 x double>* %evalue43) #3
  %evalue45 = load <2 x double>*, <2 x double>** %"<O>"
  %gvalue46 = call <2 x double>* @"_export@[US[U"(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @54, i64 0, i64 0), <2 x double>* %evalue45) #3
  %evalue47 = load <2 x double>*, <2 x double>** %"<PX>"
  %gvalue48 = call <2 x double>* @"_export@[US[U"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @55, i64 0, i64 0), <2 x double>* %evalue47) #3
  %evalue49 = load <2 x double>*, <2 x double>** %"<PY>"
  %gvalue50 = call <2 x double>* @"_export@[US[U"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @56, i64 0, i64 0), <2 x double>* %evalue49) #3
  %evalue51 = load <2 x double>*, <2 x double>** %"<PO>"
  %gvalue52 = call <2 x double>* @"_export@[US[U"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @57, i64 0, i64 0), <2 x double>* %evalue51) #3
  store i8** %gvalue, i8*** @sIDX
  store i64 %gvalue2, i64* @RES
  store i64* %gvalue4, i64** @POST
  store i64* %gvalue6, i64** @p1t
  store i64* %gvalue8, i64** @p2t
  store i64* %gvalue10, i64** @v1t
  store i64* %gvalue12, i64** @v2t
  store i64* %gvalue14, i64** @v3t
  store i64* %gvalue16, i64** @v4t
  store i64* %gvalue18, i64** @P1t
  store double* %gvalue20, double** @pbw
  store double* %gvalue22, double** @p1w
  store double* %gvalue24, double** @p2w
  store double* %gvalue26, double** @v1w
  store double* %gvalue28, double** @v2w
  store double* %gvalue30, double** @v3w
  store double* %gvalue32, double** @v4w
  store double* %gvalue34, double** @P1w
  store double* %gvalue36, double** @A
  store double* %gvalue38, double** @CLR
  store double* %gvalue40, double** @OM
  store <2 x double>* %gvalue42, <2 x double>** @X
  store <2 x double>* %gvalue44, <2 x double>** @Y
  store <2 x double>* %gvalue46, <2 x double>** @O
  store <2 x double>* %gvalue48, <2 x double>** @PX
  store <2 x double>* %gvalue50, <2 x double>** @PY
  store <2 x double>* %gvalue52, <2 x double>** @PO
  ret void
}

declare i8** @"_export@[SS[S"(i8*, i8**)

declare i64 @"_export@ISI"(i8*, i64)

declare i64* @"_export@[IS[I"(i8*, i64*)

declare double* @"_export@[FS[F"(i8*, double*)

declare <2 x double>* @"_export@[US[U"(i8*, <2 x double>*)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @TFFAxformsdata(i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @3, i64 0, i64 0), i64 0, i64* getelementptr inbounds ([0 x i64], [0 x i64]* @0, i64 0, i64 0), i64* getelementptr inbounds ([0 x i64], [0 x i64]* @0, i64 0, i64 0), i64* getelementptr inbounds ([0 x i64], [0 x i64]* @0, i64 0, i64 0), i64* getelementptr inbounds ([0 x i64], [0 x i64]* @0, i64 0, i64 0), i64* getelementptr inbounds ([0 x i64], [0 x i64]* @0, i64 0, i64 0), i64* getelementptr inbounds ([0 x i64], [0 x i64]* @0, i64 0, i64 0), i64* getelementptr inbounds ([0 x i64], [0 x i64]* @0, i64 0, i64 0), i64* getelementptr inbounds ([0 x i64], [0 x i64]* @0, i64 0, i64 0), double* getelementptr inbounds ([0 x double], [0 x double]* @1, i64 0, i64 0), double* getelementptr inbounds ([0 x double], [0 x double]* @1, i64 0, i64 0), double* getelementptr inbounds ([0 x double], [0 x double]* @1, i64 0, i64 0), double* getelementptr inbounds ([0 x double], [0 x double]* @1, i64 0, i64 0), double* getelementptr inbounds ([0 x double], [0 x double]* @1, i64 0, i64 0), double* getelementptr inbounds ([0 x double], [0 x double]* @1, i64 0, i64 0), double* getelementptr inbounds ([0 x double], [0 x double]* @1, i64 0, i64 0), double* getelementptr inbounds ([0 x double], [0 x double]* @1, i64 0, i64 0), double* getelementptr inbounds ([0 x double], [0 x double]* @1, i64 0, i64 0), double* getelementptr inbounds ([0 x double], [0 x double]* @1, i64 0, i64 0), double* getelementptr inbounds ([0 x double], [0 x double]* @1, i64 0, i64 0), <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @2, i64 0, i64 0), <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @2, i64 0, i64 0), <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @2, i64 0, i64 0), <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @2, i64 0, i64 0), <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @2, i64 0, i64 0), <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @2, i64 0, i64 0))
  ret void
}

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { alwaysinline nounwind }
attributes #3 = { nounwind readonly }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"20.5.370"}
!2 = !{!"64"}
!3 = !{!""}

;_code_end
