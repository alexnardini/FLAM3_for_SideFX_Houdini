;_name	TFFAuicollect
; ModuleID = 'TFFAuicollect'
source_filename = "TFFAuicollect"

@0 = private constant [0 x i8*] zeroinitializer
@1 = private constant [7 x i8] c"linear\00"
@2 = private constant [11 x i8] c"sinusoidal\00"
@3 = private constant [10 x i8] c"spherical\00"
@4 = private constant [6 x i8] c"swirl\00"
@5 = private constant [10 x i8] c"horseshoe\00"
@6 = private constant [6 x i8] c"polar\00"
@7 = private constant [13 x i8] c"handkerchief\00"
@8 = private constant [6 x i8] c"heart\00"
@9 = private constant [5 x i8] c"disc\00"
@10 = private constant [7 x i8] c"spiral\00"
@11 = private constant [11 x i8] c"hiperbolic\00"
@12 = private constant [8 x i8] c"diamond\00"
@13 = private constant [3 x i8] c"ex\00"
@14 = private constant [6 x i8] c"julia\00"
@15 = private constant [5 x i8] c"bent\00"
@16 = private constant [6 x i8] c"waves\00"
@17 = private constant [8 x i8] c"fisheye\00"
@18 = private constant [8 x i8] c"popcorn\00"
@19 = private constant [12 x i8] c"exponential\00"
@20 = private constant [6 x i8] c"power\00"
@21 = private constant [7 x i8] c"cosine\00"
@22 = private constant [6 x i8] c"rings\00"
@23 = private constant [4 x i8] c"fan\00"
@24 = private constant [7 x i8] c"bubble\00"
@25 = private constant [9 x i8] c"cylinder\00"
@26 = private constant [8 x i8] c"eyefish\00"
@27 = private constant [5 x i8] c"blur\00"
@28 = private constant [5 x i8] c"curl\00"
@29 = private constant [5 x i8] c"ngon\00"
@30 = private constant [4 x i8] c"pdj\00"
@31 = private constant [5 x i8] c"blob\00"
@32 = private constant [7 x i8] c"juliaN\00"
@33 = private constant [11 x i8] c"juliaScope\00"
@34 = private constant [14 x i8] c"gaussian_blur\00"
@35 = private constant [5 x i8] c"fan2\00"
@36 = private constant [7 x i8] c"rings2\00"
@37 = private constant [11 x i8] c"rectangles\00"
@38 = private constant [11 x i8] c"radialblur\00"
@39 = private constant [4 x i8] c"pie\00"
@40 = private constant [5 x i8] c"arch\00"
@41 = private constant [8 x i8] c"tangent\00"
@42 = private constant [7 x i8] c"square\00"
@43 = private constant [5 x i8] c"rays\00"
@44 = private constant [6 x i8] c"blade\00"
@45 = private constant [8 x i8] c"secant2\00"
@46 = private constant [10 x i8] c"twintrian\00"
@47 = private constant [6 x i8] c"cross\00"
@48 = private constant [6 x i8] c"disc2\00"
@49 = private constant [11 x i8] c"supershape\00"
@50 = private constant [7 x i8] c"flower\00"
@51 = private constant [6 x i8] c"conic\00"
@52 = private constant [9 x i8] c"parabola\00"
@53 = private constant [6 x i8] c"bent2\00"
@54 = private constant [8 x i8] c"bipolar\00"
@55 = private constant [9 x i8] c"boarders\00"
@56 = private constant [10 x i8] c"butterfly\00"
@57 = private constant [5 x i8] c"cell\00"
@58 = private constant [5 x i8] c"cpow\00"
@59 = private constant [6 x i8] c"edisc\00"
@60 = private constant [9 x i8] c"elliptic\00"
@61 = private constant [6 x i8] c"noise\00"
@62 = private constant [7 x i8] c"escher\00"
@63 = private constant [5 x i8] c"foci\00"
@64 = private constant [10 x i8] c"lazysusan\00"
@65 = private constant [7 x i8] c"loonie\00"
@66 = private constant [9 x i8] c"pre blur\00"
@67 = private constant [8 x i8] c"modulus\00"
@68 = private constant [7 x i8] c"oscope\00"
@69 = private constant [7 x i8] c"polar2\00"
@70 = private constant [9 x i8] c"popcorn2\00"
@71 = private constant [5 x i8] c"scry\00"
@72 = private constant [11 x i8] c"separation\00"
@73 = private constant [6 x i8] c"split\00"
@74 = private constant [7 x i8] c"splits\00"
@75 = private constant [8 x i8] c"stripes\00"
@76 = private constant [6 x i8] c"wedge\00"
@77 = private constant [12 x i8] c"wedge julia\00"
@78 = private constant [10 x i8] c"wedge sph\00"
@79 = private constant [6 x i8] c"whorl\00"
@80 = private constant [7 x i8] c"waves2\00"
@81 = private constant [4 x i8] c"exp\00"
@82 = private constant [4 x i8] c"log\00"
@83 = private constant [4 x i8] c"sin\00"
@84 = private constant [4 x i8] c"cos\00"
@85 = private constant [4 x i8] c"tan\00"
@86 = private constant [4 x i8] c"sec\00"
@87 = private constant [4 x i8] c"csc\00"
@88 = private constant [4 x i8] c"cot\00"
@89 = private constant [5 x i8] c"sinh\00"
@90 = private constant [5 x i8] c"cosh\00"
@91 = private constant [5 x i8] c"tanh\00"
@92 = private constant [5 x i8] c"sech\00"
@93 = private constant [5 x i8] c"csch\00"
@94 = private constant [5 x i8] c"coth\00"
@95 = private constant [6 x i8] c"auger\00"
@96 = private constant [5 x i8] c"flux\00"
@97 = private constant [7 x i8] c"mobius\00"
@98 = private constant [6 x i8] c"curve\00"
@99 = private constant [12 x i8] c"perspective\00"
@100 = private constant [7 x i8] c"bwraps\00"
@101 = private constant [11 x i8] c"hemisphere\00"
@102 = private constant [11 x i8] c"polynomial\00"
@103 = private constant [5 x i8] c"crop\00"
@104 = private constant [8 x i8] c"unpolar\00"
@105 = private constant [8 x i8] c"glynnia\00"
@106 = private constant [15 x i8] c"point_symmetry\00"
@107 = private constant [106 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @2, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @3, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @4, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @5, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @6, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @7, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @8, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @9, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @10, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @11, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @12, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @13, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @14, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @15, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @16, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @17, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @18, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @19, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @20, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @21, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @22, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @23, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @24, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @25, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @26, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @27, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @28, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @29, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @30, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @31, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @32, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @33, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @34, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @35, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @36, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @37, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @38, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @39, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @40, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @41, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @42, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @43, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @44, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @45, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @46, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @47, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @48, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @49, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @50, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @51, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @52, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @53, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @54, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @55, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @56, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @57, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @58, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @59, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @60, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @61, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @62, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @63, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @64, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @65, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @66, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @67, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @68, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @69, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @70, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @71, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @72, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @73, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @74, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @75, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @76, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @77, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @78, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @79, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @80, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @81, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @82, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @83, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @84, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @85, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @86, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @87, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @88, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @89, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @90, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @91, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @92, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @93, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @94, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @95, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @96, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @97, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @98, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @99, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @100, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @101, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @102, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @103, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @104, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @105, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @106, i64 0, i64 0)]
@108 = private constant [4 x i8] c"SYS\00"
@109 = private constant [13 x i8] c"../flamefunc\00"
@110 = private constant [6 x i8] c"../xm\00"
@111 = private constant [2 x i8] c"[\00"
@112 = private constant [2 x i8] c"]\00"
@113 = private constant [3 x i8] c"XS\00"
@114 = private constant [3 x i8] c"Xt\00"
@115 = private constant [3 x i8] c"fX\00"
@116 = private constant [4 x i8] c"RIP\00"
@117 = private constant [4 x i8] c"F3C\00"
@118 = private constant [3 x i8] c"MB\00"
@119 = private constant [1 x i8] zeroinitializer
@120 = private constant [12 x i8] c"../vactive_\00"
@121 = private constant [13 x i8] c" :::::::::: \00"
@122 = private constant [13 x i8] c"../v1weight_\00"
@123 = private constant [11 x i8] c"../v1type_\00"
@124 = private constant [2 x i8] c":\00"
@125 = private constant [13 x i8] c"../v2weight_\00"
@126 = private constant [11 x i8] c"../v2type_\00"
@127 = private constant [13 x i8] c"../v3weight_\00"
@128 = private constant [11 x i8] c"../v3type_\00"
@129 = private constant [13 x i8] c"../v4weight_\00"
@130 = private constant [11 x i8] c"../v4type_\00"
@131 = private constant [18 x i8] c"../preblurweight_\00"
@132 = private constant [2 x i8] c"*\00"
@133 = private constant [15 x i8] c"../pre1weight_\00"
@134 = private constant [13 x i8] c"../pre1type_\00"
@135 = private constant [15 x i8] c"../pre2weight_\00"
@136 = private constant [13 x i8] c"../pre2type_\00"
@137 = private constant [3 x i8] c"[ \00"
@138 = private constant [4 x i8] c" ]:\00"
@139 = private constant [3 x i8] c", \00"
@140 = private constant [13 x i8] c"../p1weight_\00"
@141 = private constant [11 x i8] c"../p1type_\00"
@142 = private constant [3 x i8] c"%g\00"
@143 = private constant [7 x i8] c"../iw_\00"
@144 = private constant [2 x i8] c".\00"
@145 = private constant [14 x i8] c"../ffv1weight\00"
@146 = private constant [12 x i8] c"../ffv1type\00"
@147 = private constant [14 x i8] c"../ffv2weight\00"
@148 = private constant [12 x i8] c"../ffv2type\00"
@149 = private constant [16 x i8] c"../ffpre1weight\00"
@150 = private constant [14 x i8] c"../ffpre1type\00"
@151 = private constant [3 x i8] c"]:\00"
@152 = private constant [14 x i8] c"../ffp1weight\00"
@153 = private constant [12 x i8] c"../ffp1type\00"
@154 = private constant [14 x i8] c"../ffp2weight\00"
@155 = private constant [12 x i8] c"../ffp2type\00"
@156 = private constant [3 x i8] c" ]\00"
@VARTYPE = external global i8**
@XS = external global i64
@157 = private constant [8 x i8] c"VARTYPE\00"

; Function Attrs: alwaysinline nounwind
define private void @"_TFFAuicollect@[SI"(i8*** %_bound_VARTYPE, i64* %_bound_XS) #0 {
__llvm_entry:
  %return = call i64* @"detail@[IIS"(i64 1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @108, i64 0, i64 0))
  %return2 = call i64 @"getcomp@I[II"(i64* %return, i64 0)
  %return4 = call i64 @"getcomp@I[II"(i64* %return, i64 1)
  %return6 = call i64 @"getcomp@I[II"(i64* %return, i64 2)
  %return8 = call i64 @"getcomp@I[II"(i64* %return, i64 3)
  %return10 = call i64 @"getcomp@I[II"(i64* %return, i64 4)
  %return11 = call i64 @"chi@IS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @109, i64 0, i64 0))
  %return12 = call i64 @"chi@IS"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @110, i64 0, i64 0))
  %return15 = call i8* @"itoa@SI"(i64 %return8)
  %return16 = call i8* @"concat@SSS:S"(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @111, i64 0, i64 0), i8* %return15, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @112, i64 0, i64 0))
  %output = call i8** @"append@[SS"(i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @0, i64 0, i64 0), i8* %return16)
  %return17 = call i64 @"detail@IIS"(i64 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @113, i64 0, i64 0))
  %0 = icmp ne i64 %return17, 0
  br i1 %0, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %return20 = call i64 @"not@II"(i64 %return12)
  %1 = icmp ne i64 %return20, 0
  br i1 %1, label %true21, label %false

end:                                              ; preds = %true21, %false, %__llvm_entry
  %T.0 = phi i8** [ %output25, %true21 ], [ %output28, %false ], [ %output, %__llvm_entry ]
  %2 = icmp ne i64 %return4, 0
  br i1 %2, label %true30, label %end31

true21:                                           ; preds = %true
  %return24 = call i8* @"concat@SSS:S"(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @111, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @114, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @112, i64 0, i64 0))
  %output25 = call i8** @"append@[SS"(i8** %output, i8* %return24)
  br label %end

false:                                            ; preds = %true
  %return27 = call i8* @"concat@SSS:S"(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @111, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @115, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @112, i64 0, i64 0))
  %output28 = call i8** @"append@[SS"(i8** %output, i8* %return27)
  br label %end

true30:                                           ; preds = %end
  %output33 = call i8** @"append@[SS"(i8** %T.0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @116, i64 0, i64 0))
  br label %end31

end31:                                            ; preds = %true30, %end
  %T.1 = phi i8** [ %output33, %true30 ], [ %T.0, %end ]
  %3 = icmp ne i64 %return10, 0
  br i1 %3, label %true35, label %end36

true35:                                           ; preds = %end31
  %output38 = call i8** @"append@[SS"(i8** %T.1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @117, i64 0, i64 0))
  br label %end36

end36:                                            ; preds = %true35, %end31
  %T.2 = phi i8** [ %output38, %true35 ], [ %T.1, %end31 ]
  %4 = icmp ne i64 %return6, 0
  br i1 %4, label %true40, label %end41

true40:                                           ; preds = %end36
  %output43 = call i8** @"append@[SS"(i8** %T.2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @118, i64 0, i64 0))
  br label %end41

end41:                                            ; preds = %true40, %end36
  %T.3 = phi i8** [ %output43, %true40 ], [ %T.2, %end36 ]
  br label %cond

cond:                                             ; preds = %end58, %end41
  %i.0 = phi i64 [ 0, %end41 ], [ %output50, %end58 ]
  %T.4 = phi i8** [ %T.3, %end41 ], [ %output278, %end58 ]
  %return46 = call i64 @"lt@III"(i64 %i.0, i64 %return11)
  %5 = icmp ne i64 %return46, 0
  br i1 %5, label %body, label %end47

body:                                             ; preds = %cond
  %output50 = add i64 %i.0, 1
  %return51 = call i8* @"itoa@SI"(i64 %output50)
  %return53 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @120, i64 0, i64 0), i8* %return51)
  %return54 = call i64 @"chi@IS"(i8* %return53)
  %return55 = call i64 @"not@II"(i64 %return54)
  %6 = icmp ne i64 %return55, 0
  br i1 %6, label %true56, label %false57

end47:                                            ; preds = %cond
  %7 = icmp ne i64 %return2, 0
  br i1 %7, label %true282, label %end283

true56:                                           ; preds = %body
  br label %end58

false57:                                          ; preds = %body
  %return60 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @122, i64 0, i64 0), i8* %return51)
  %return61 = call double @"chf@FS"(i8* %return60)
  %return63 = fcmp one double %return61, 0.000000e+00
  br i1 %return63, label %true65, label %false66

end58:                                            ; preds = %end240, %true56
  %VAR.0 = phi i8* [ getelementptr inbounds ([13 x i8], [13 x i8]* @121, i64 0, i64 0), %true56 ], [ %return275, %end240 ]
  %output278 = call i8** @"append@[SS"(i8** %T.4, i8* %VAR.0)
  br label %cond

true65:                                           ; preds = %false57
  %return70 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @123, i64 0, i64 0), i8* %return51)
  %return71 = call i8* @"chs@SS"(i8* %return70)
  %return72 = call i64 @"atoi@IS"(i8* %return71)
  %return73 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([106 x i8*], [106 x i8*]* @107, i64 0, i64 0), i64 %return72)
  %output74 = call i8* @"add@SS"(i8* %return73, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @124, i64 0, i64 0))
  br label %end67

false66:                                          ; preds = %false57
  br label %end67

end67:                                            ; preds = %false66, %true65
  %V1.0 = phi i8* [ %output74, %true65 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @124, i64 0, i64 0), %false66 ]
  %return76 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @125, i64 0, i64 0), i8* %return51)
  %return77 = call double @"chf@FS"(i8* %return76)
  %return79 = fcmp one double %return77, 0.000000e+00
  br i1 %return79, label %true81, label %false82

true81:                                           ; preds = %end67
  %return86 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @126, i64 0, i64 0), i8* %return51)
  %return87 = call i8* @"chs@SS"(i8* %return86)
  %return88 = call i64 @"atoi@IS"(i8* %return87)
  %return89 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([106 x i8*], [106 x i8*]* @107, i64 0, i64 0), i64 %return88)
  %output90 = call i8* @"add@SS"(i8* %return89, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @124, i64 0, i64 0))
  br label %end83

false82:                                          ; preds = %end67
  br label %end83

end83:                                            ; preds = %false82, %true81
  %V2.0 = phi i8* [ %output90, %true81 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @124, i64 0, i64 0), %false82 ]
  %return92 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @127, i64 0, i64 0), i8* %return51)
  %return93 = call double @"chf@FS"(i8* %return92)
  %return95 = fcmp one double %return93, 0.000000e+00
  br i1 %return95, label %true97, label %false98

true97:                                           ; preds = %end83
  %return102 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @128, i64 0, i64 0), i8* %return51)
  %return103 = call i8* @"chs@SS"(i8* %return102)
  %return104 = call i64 @"atoi@IS"(i8* %return103)
  %return105 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([106 x i8*], [106 x i8*]* @107, i64 0, i64 0), i64 %return104)
  %output106 = call i8* @"add@SS"(i8* %return105, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @124, i64 0, i64 0))
  br label %end99

false98:                                          ; preds = %end83
  br label %end99

end99:                                            ; preds = %false98, %true97
  %V3.0 = phi i8* [ %output106, %true97 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @124, i64 0, i64 0), %false98 ]
  %return108 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @129, i64 0, i64 0), i8* %return51)
  %return109 = call double @"chf@FS"(i8* %return108)
  %return111 = fcmp one double %return109, 0.000000e+00
  br i1 %return111, label %true113, label %false114

true113:                                          ; preds = %end99
  %return118 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @130, i64 0, i64 0), i8* %return51)
  %return119 = call i8* @"chs@SS"(i8* %return118)
  %return120 = call i64 @"atoi@IS"(i8* %return119)
  %return121 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([106 x i8*], [106 x i8*]* @107, i64 0, i64 0), i64 %return120)
  %output122 = call i8* @"add@SS"(i8* %return121, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @124, i64 0, i64 0))
  br label %end115

false114:                                         ; preds = %end99
  br label %end115

end115:                                           ; preds = %false114, %true113
  %V4.0 = phi i8* [ %output122, %true113 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @124, i64 0, i64 0), %false114 ]
  %output125 = fadd double %return61, %return77
  %output127 = fadd double %output125, %return93
  %output129 = fadd double %output127, %return109
  %return131 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @131, i64 0, i64 0), i8* %return51)
  %return132 = call double @"chf@FS"(i8* %return131)
  %return134 = fcmp ogt double %return132, 0.000000e+00
  br i1 %return134, label %true136, label %end137

true136:                                          ; preds = %end115
  %return139 = fcmp one double %output129, 0.000000e+00
  br i1 %return139, label %true141, label %end137

end137:                                           ; preds = %true136, %true141, %end115
  %PB.0 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @132, i64 0, i64 0), %true141 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @119, i64 0, i64 0), %true136 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @119, i64 0, i64 0), %end115 ]
  %return144 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @133, i64 0, i64 0), i8* %return51)
  %return145 = call double @"chf@FS"(i8* %return144)
  %return147 = fcmp ogt double %return145, 0.000000e+00
  br i1 %return147, label %true149, label %end150

true141:                                          ; preds = %true136
  br label %end137

true149:                                          ; preds = %end137
  %return152 = fcmp one double %output129, 0.000000e+00
  br i1 %return152, label %true154, label %end150

end150:                                           ; preds = %true149, %true154, %end137
  %PP.0 = phi i8** [ %output163, %true154 ], [ getelementptr inbounds ([0 x i8*], [0 x i8*]* @0, i64 0, i64 0), %true149 ], [ getelementptr inbounds ([0 x i8*], [0 x i8*]* @0, i64 0, i64 0), %end137 ]
  %return165 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @135, i64 0, i64 0), i8* %return51)
  %return166 = call double @"chf@FS"(i8* %return165)
  %return168 = fcmp ogt double %return166, 0.000000e+00
  br i1 %return168, label %true170, label %end171

true154:                                          ; preds = %true149
  %return159 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @134, i64 0, i64 0), i8* %return51)
  %return160 = call i8* @"chs@SS"(i8* %return159)
  %return161 = call i64 @"atoi@IS"(i8* %return160)
  %return162 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([106 x i8*], [106 x i8*]* @107, i64 0, i64 0), i64 %return161)
  %output163 = call i8** @"append@[SS"(i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @0, i64 0, i64 0), i8* %return162)
  br label %end150

true170:                                          ; preds = %end150
  %return173 = fcmp one double %output129, 0.000000e+00
  br i1 %return173, label %true175, label %end171

end171:                                           ; preds = %true170, %true175, %end150
  %PP.1 = phi i8** [ %output184, %true175 ], [ %PP.0, %true170 ], [ %PP.0, %end150 ]
  %return186 = call i64 @"len@I[S"(i8** %PP.1)
  %return187 = call i64 @"eq@III"(i64 %return186, i64 1)
  %8 = icmp ne i64 %return187, 0
  br i1 %8, label %true188, label %false189

true175:                                          ; preds = %true170
  %return180 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @136, i64 0, i64 0), i8* %return51)
  %return181 = call i8* @"chs@SS"(i8* %return180)
  %return182 = call i64 @"atoi@IS"(i8* %return181)
  %return183 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([106 x i8*], [106 x i8*]* @107, i64 0, i64 0), i64 %return182)
  %output184 = call i8** @"append@[SS"(i8** %PP.0, i8* %return183)
  br label %end171

true188:                                          ; preds = %end171
  %return192 = call i8* @"getcomp@S[SI"(i8** %PP.1, i64 0)
  %return193 = call i8* @"concat@SSS:S"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @137, i64 0, i64 0), i8* %return192, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @138, i64 0, i64 0))
  br label %end190

false189:                                         ; preds = %end171
  %return196 = call i64 @"gt@III"(i64 %return186, i64 1)
  %9 = icmp ne i64 %return196, 0
  br i1 %9, label %true197, label %false198

end190:                                           ; preds = %true197, %false198, %true188
  %p_build.0 = phi i8* [ %return193, %true188 ], [ %return202, %true197 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @119, i64 0, i64 0), %false198 ]
  %return204 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @140, i64 0, i64 0), i8* %return51)
  %return205 = call double @"chf@FS"(i8* %return204)
  %return207 = fcmp ogt double %return205, 0.000000e+00
  br i1 %return207, label %true209, label %end210

true197:                                          ; preds = %false189
  %return201 = call i8* @"join@S[SS"(i8** %PP.1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @139, i64 0, i64 0))
  %return202 = call i8* @"concat@SSS:S"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @137, i64 0, i64 0), i8* %return201, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @138, i64 0, i64 0))
  br label %end190

false198:                                         ; preds = %false189
  br label %end190

true209:                                          ; preds = %end190
  %return212 = fcmp one double %output129, 0.000000e+00
  br i1 %return212, label %true214, label %end210

end210:                                           ; preds = %true209, %true214, %end190
  %P1.0 = phi i8* [ %return222, %true214 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @119, i64 0, i64 0), %true209 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @119, i64 0, i64 0), %end190 ]
  %return224 = fcmp one double %output129, 0.000000e+00
  br i1 %return224, label %true226, label %false227

true214:                                          ; preds = %true209
  %return218 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @141, i64 0, i64 0), i8* %return51)
  %return219 = call i8* @"chs@SS"(i8* %return218)
  %return220 = call i64 @"atoi@IS"(i8* %return219)
  %return221 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([106 x i8*], [106 x i8*]* @107, i64 0, i64 0), i64 %return220)
  %return222 = call i8* @"concat@SSS:S"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @137, i64 0, i64 0), i8* %return221, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @138, i64 0, i64 0))
  br label %end210

true226:                                          ; preds = %end210
  %return230 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @143, i64 0, i64 0), i8* %return51)
  %return231 = call double @"chf@FS"(i8* %return230)
  %return232 = call i8* @"sprintf@SS:F"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @142, i64 0, i64 0), double %return231)
  br label %end228

false227:                                         ; preds = %end210
  br label %end228

end228:                                           ; preds = %false227, %true226
  %W.0 = phi i8* [ %return232, %true226 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @119, i64 0, i64 0), %false227 ]
  %return234 = call i8** @"split@[SSS"(i8* %W.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @144, i64 0, i64 0))
  %return236 = call i64 @"len@I[S"(i8** %return234)
  %return237 = call i64 @"gt@III"(i64 %return236, i64 1)
  %10 = icmp ne i64 %return237, 0
  br i1 %10, label %true238, label %false239

true238:                                          ; preds = %end228
  br label %cond243

false239:                                         ; preds = %end228
  br label %end240

end240:                                           ; preds = %cond243, %false239
  %out.0 = phi i8** [ %out.1, %cond243 ], [ %return234, %false239 ]
  %return266 = call i8* @"join@S[SS"(i8** %out.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @144, i64 0, i64 0))
  %return275 = call i8* @"concat@SSS:SSSSSS"(i8* %PB.0, i8* %p_build.0, i8* %V1.0, i8* %V2.0, i8* %V3.0, i8* %V4.0, i8* %P1.0, i8* %return266)
  br label %end58

cond243:                                          ; preds = %body244, %true238
  %out.1 = phi i8** [ getelementptr inbounds ([0 x i8*], [0 x i8*]* @0, i64 0, i64 0), %true238 ], [ %output258, %body244 ]
  %count.0 = phi i64 [ 1, %true238 ], [ %output261, %body244 ]
  %__impl_foreach_index.0 = phi i64 [ 0, %true238 ], [ %output263, %body244 ]
  %return247 = call i64 @"lt@III"(i64 %__impl_foreach_index.0, i64 %return236)
  %11 = icmp ne i64 %return247, 0
  br i1 %11, label %body244, label %end240

body244:                                          ; preds = %cond243
  %return252 = call i8* @"getcomp@S[SI"(i8** %return234, i64 %__impl_foreach_index.0)
  %output256 = call i64 @"div@II"(i64 6, i64 %count.0)
  %return257 = call i8* @"slice@SSIIIIII"(i8* %return252, i64 0, i64 0, i64 1, i64 %output256, i64 0, i64 0)
  %output258 = call i8** @"append@[SS"(i8** %out.1, i8* %return257)
  %output261 = add i64 %count.0, 1
  %output263 = add i64 %__impl_foreach_index.0, 1
  br label %cond243

true282:                                          ; preds = %end47
  %return285 = call double @"chf@FS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @145, i64 0, i64 0))
  %return287 = fcmp one double %return285, 0.000000e+00
  br i1 %return287, label %true289, label %false290

end283:                                           ; preds = %end386, %end47
  %T.5 = phi i8** [ %output407, %end386 ], [ %T.4, %end47 ]
  store i8** %T.5, i8*** %_bound_VARTYPE
  store i64 %return17, i64* %_bound_XS
  ret void

true289:                                          ; preds = %true282
  %return293 = call i8* @"chs@SS"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @146, i64 0, i64 0))
  %return294 = call i64 @"atoi@IS"(i8* %return293)
  %return295 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([106 x i8*], [106 x i8*]* @107, i64 0, i64 0), i64 %return294)
  %output296 = call i8* @"add@SS"(i8* %return295, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @124, i64 0, i64 0))
  br label %end291

false290:                                         ; preds = %true282
  br label %end291

end291:                                           ; preds = %false290, %true289
  %FV1.0 = phi i8* [ %output296, %true289 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @124, i64 0, i64 0), %false290 ]
  %return297 = call double @"chf@FS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @147, i64 0, i64 0))
  %return299 = fcmp one double %return297, 0.000000e+00
  br i1 %return299, label %true301, label %false302

true301:                                          ; preds = %end291
  %return305 = call i8* @"chs@SS"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @148, i64 0, i64 0))
  %return306 = call i64 @"atoi@IS"(i8* %return305)
  %return307 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([106 x i8*], [106 x i8*]* @107, i64 0, i64 0), i64 %return306)
  %output308 = call i8* @"add@SS"(i8* %return307, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @124, i64 0, i64 0))
  br label %end303

false302:                                         ; preds = %end291
  br label %end303

end303:                                           ; preds = %false302, %true301
  %FV2.0 = phi i8* [ %output308, %true301 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @124, i64 0, i64 0), %false302 ]
  %output311 = fadd double %return285, %return297
  %return312 = call double @"chf@FS"(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @149, i64 0, i64 0))
  %return314 = fcmp ogt double %return312, 0.000000e+00
  br i1 %return314, label %true316, label %end317

true316:                                          ; preds = %end303
  %return319 = fcmp one double %output311, 0.000000e+00
  br i1 %return319, label %true321, label %end317

end317:                                           ; preds = %true316, %true321, %end303
  %Fp.0 = phi i8** [ %output328, %true321 ], [ getelementptr inbounds ([0 x i8*], [0 x i8*]* @0, i64 0, i64 0), %true316 ], [ getelementptr inbounds ([0 x i8*], [0 x i8*]* @0, i64 0, i64 0), %end303 ]
  %return330 = call i64 @"len@I[S"(i8** %Fp.0)
  %return331 = call i64 @"eq@III"(i64 %return330, i64 1)
  %12 = icmp ne i64 %return331, 0
  br i1 %12, label %true332, label %false333

true321:                                          ; preds = %true316
  %return325 = call i8* @"chs@SS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @150, i64 0, i64 0))
  %return326 = call i64 @"atoi@IS"(i8* %return325)
  %return327 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([106 x i8*], [106 x i8*]* @107, i64 0, i64 0), i64 %return326)
  %output328 = call i8** @"append@[SS"(i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @0, i64 0, i64 0), i8* %return327)
  br label %end317

true332:                                          ; preds = %end317
  %return336 = call i8* @"getcomp@S[SI"(i8** %Fp.0, i64 0)
  %return337 = call i8* @"concat@SSS:S"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @137, i64 0, i64 0), i8* %return336, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @138, i64 0, i64 0))
  br label %end334

false333:                                         ; preds = %end317
  %return340 = call i64 @"gt@III"(i64 %return330, i64 1)
  %13 = icmp ne i64 %return340, 0
  br i1 %13, label %true341, label %false342

end334:                                           ; preds = %true341, %false342, %true332
  %Fp_build.0 = phi i8* [ %return337, %true332 ], [ %return346, %true341 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @119, i64 0, i64 0), %false342 ]
  %return347 = call double @"chf@FS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @152, i64 0, i64 0))
  %return349 = fcmp ogt double %return347, 0.000000e+00
  br i1 %return349, label %true351, label %end352

true341:                                          ; preds = %false333
  %return345 = call i8* @"join@S[SS"(i8** %Fp.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @139, i64 0, i64 0))
  %return346 = call i8* @"concat@SSS:S"(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @111, i64 0, i64 0), i8* %return345, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @151, i64 0, i64 0))
  br label %end334

false342:                                         ; preds = %false333
  br label %end334

true351:                                          ; preds = %end334
  %return354 = fcmp one double %output311, 0.000000e+00
  br i1 %return354, label %true356, label %end352

end352:                                           ; preds = %true351, %true356, %end334
  %FP.0 = phi i8** [ %output363, %true356 ], [ getelementptr inbounds ([0 x i8*], [0 x i8*]* @0, i64 0, i64 0), %true351 ], [ getelementptr inbounds ([0 x i8*], [0 x i8*]* @0, i64 0, i64 0), %end334 ]
  %return364 = call double @"chf@FS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @154, i64 0, i64 0))
  %return366 = fcmp ogt double %return364, 0.000000e+00
  br i1 %return366, label %true368, label %end369

true356:                                          ; preds = %true351
  %return360 = call i8* @"chs@SS"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @153, i64 0, i64 0))
  %return361 = call i64 @"atoi@IS"(i8* %return360)
  %return362 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([106 x i8*], [106 x i8*]* @107, i64 0, i64 0), i64 %return361)
  %output363 = call i8** @"append@[SS"(i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @0, i64 0, i64 0), i8* %return362)
  br label %end352

true368:                                          ; preds = %end352
  %return371 = fcmp one double %output311, 0.000000e+00
  br i1 %return371, label %true373, label %end369

end369:                                           ; preds = %true368, %true373, %end352
  %FP.1 = phi i8** [ %output380, %true373 ], [ %FP.0, %true368 ], [ %FP.0, %end352 ]
  %return382 = call i64 @"len@I[S"(i8** %FP.1)
  %return383 = call i64 @"eq@III"(i64 %return382, i64 1)
  %14 = icmp ne i64 %return383, 0
  br i1 %14, label %true384, label %false385

true373:                                          ; preds = %true368
  %return377 = call i8* @"chs@SS"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @155, i64 0, i64 0))
  %return378 = call i64 @"atoi@IS"(i8* %return377)
  %return379 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([106 x i8*], [106 x i8*]* @107, i64 0, i64 0), i64 %return378)
  %output380 = call i8** @"append@[SS"(i8** %FP.0, i8* %return379)
  br label %end369

true384:                                          ; preds = %end369
  %return388 = call i8* @"getcomp@S[SI"(i8** %FP.1, i64 0)
  %return389 = call i8* @"concat@SSS:S"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @137, i64 0, i64 0), i8* %return388, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @156, i64 0, i64 0))
  br label %end386

false385:                                         ; preds = %end369
  %return392 = call i64 @"gt@III"(i64 %return382, i64 1)
  %15 = icmp ne i64 %return392, 0
  br i1 %15, label %true393, label %false394

end386:                                           ; preds = %true393, %false394, %true384
  %FP_build.0 = phi i8* [ %return389, %true384 ], [ %return398, %true393 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @119, i64 0, i64 0), %false394 ]
  %return403 = call i8* @"concat@SSS:SS"(i8* %Fp_build.0, i8* %FV1.0, i8* %FV2.0, i8* %FP_build.0)
  %return406 = call i8* @"toupper@SS"(i8* %return403)
  %output407 = call i8** @"append@[SS"(i8** %T.4, i8* %return406)
  br label %end283

true393:                                          ; preds = %false385
  %return397 = call i8* @"join@S[SS"(i8** %FP.1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @139, i64 0, i64 0))
  %return398 = call i8* @"concat@SSS:S"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @137, i64 0, i64 0), i8* %return397, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @156, i64 0, i64 0))
  br label %end386

false394:                                         ; preds = %false385
  br label %end386
}

; Function Attrs: nounwind
declare i64* @"detail@[IIS"(i64, i8*) #1

; Function Attrs: nounwind readnone
declare i64 @"getcomp@I[II"(i64*, i64) #2

; Function Attrs: nounwind readnone
declare i64 @"chi@IS"(i8*) #2

; Function Attrs: nounwind readnone
declare i8* @"itoa@SI"(i64) #2

; Function Attrs: nounwind readnone
declare i8* @"concat@SSS:S"(i8*, i8*, i8*) #2

; Function Attrs: nounwind
declare i8** @"append@[SS"(i8**, i8*) #1

; Function Attrs: nounwind
declare i64 @"detail@IIS"(i64, i8*) #1

; Function Attrs: nounwind readnone
declare i64 @"not@II"(i64) #2

; Function Attrs: nounwind readnone
declare i64 @"lt@III"(i64, i64) #2

; Function Attrs: nounwind readnone
declare i8* @"concat@SSS"(i8*, i8*) #2

; Function Attrs: nounwind readnone
declare double @"chf@FS"(i8*) #2

; Function Attrs: nounwind readnone
declare i8* @"chs@SS"(i8*) #2

; Function Attrs: nounwind readnone
declare i64 @"atoi@IS"(i8*) #2

; Function Attrs: nounwind readnone
declare i8* @"getcomp@S[SI"(i8**, i64) #2

; Function Attrs: nounwind readnone
declare i8* @"add@SS"(i8*, i8*) #2

; Function Attrs: nounwind readnone
declare i64 @"len@I[S"(i8**) #2

; Function Attrs: nounwind readnone
declare i64 @"eq@III"(i64, i64) #2

; Function Attrs: nounwind readnone
declare i64 @"gt@III"(i64, i64) #2

; Function Attrs: nounwind readnone
declare i8* @"join@S[SS"(i8**, i8*) #2

; Function Attrs: nounwind readnone
declare i8* @"sprintf@SS:F"(i8*, double) #2

; Function Attrs: nounwind readnone
declare i8** @"split@[SSS"(i8*, i8*) #2

; Function Attrs: nounwind readnone
declare i64 @"div@II"(i64, i64) #2

; Function Attrs: nounwind readnone
declare i8* @"slice@SSIIIIII"(i8*, i64, i64, i64, i64, i64, i64) #2

; Function Attrs: nounwind readnone
declare i8* @"concat@SSS:SSSSSS"(i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*) #2

; Function Attrs: nounwind readnone
declare i8* @"concat@SSS:SS"(i8*, i8*, i8*, i8*) #2

; Function Attrs: nounwind
declare i8* @"toupper@SS"(i8*) #1

; Function Attrs: nounwind
define void @TFFAuicollect(i8** %VARTYPE, i64 %XS) #1 {
__llvm_entry:
  %"<XS>" = alloca i64
  %"<VARTYPE>" = alloca i8**
  store i8** %VARTYPE, i8*** %"<VARTYPE>"
  store i64 %XS, i64* %"<XS>"
  call void @"_TFFAuicollect@[SI"(i8*** %"<VARTYPE>", i64* %"<XS>")
  %evalue = load i8**, i8*** %"<VARTYPE>"
  %gvalue = call i8** @"_export@[SS[S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @157, i64 0, i64 0), i8** %evalue) #3
  %evalue1 = load i64, i64* %"<XS>"
  %gvalue2 = call i64 @"_export@ISI"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @113, i64 0, i64 0), i64 %evalue1) #3
  store i8** %gvalue, i8*** @VARTYPE
  store i64 %gvalue2, i64* @XS
  ret void
}

declare i8** @"_export@[SS[S"(i8*, i8**)

declare i64 @"_export@ISI"(i8*, i64)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @TFFAuicollect(i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @0, i64 0, i64 0), i64 0)
  ret void
}

attributes #0 = { alwaysinline nounwind }
attributes #1 = { nounwind }
attributes #2 = { nounwind readnone }
attributes #3 = { nounwind readonly }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"19.0.720"}
!2 = !{!"64"}

;_code_end
