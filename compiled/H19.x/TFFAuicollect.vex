;_name	TFFAuicollect
; ModuleID = 'TFFAuicollect'
source_filename = "TFFAuicollect"

@0 = private constant [0 x i8*] zeroinitializer
@1 = private constant [7 x i8] c"linear\00"
@2 = private constant [11 x i8] c"sinusoidal\00"
@3 = private constant [10 x i8] c"spherical\00"
@4 = private constant [6 x i8] c"swirl\00"
@5 = private constant [10 x i8] c"horseshoe\00"
@6 = private constant [6 x i8] c"polar\00"
@7 = private constant [13 x i8] c"handkerchief\00"
@8 = private constant [6 x i8] c"heart\00"
@9 = private constant [5 x i8] c"disc\00"
@10 = private constant [7 x i8] c"spiral\00"
@11 = private constant [11 x i8] c"hiperbolic\00"
@12 = private constant [8 x i8] c"diamond\00"
@13 = private constant [3 x i8] c"ex\00"
@14 = private constant [6 x i8] c"julia\00"
@15 = private constant [5 x i8] c"bent\00"
@16 = private constant [6 x i8] c"waves\00"
@17 = private constant [8 x i8] c"fisheye\00"
@18 = private constant [8 x i8] c"popcorn\00"
@19 = private constant [12 x i8] c"exponential\00"
@20 = private constant [6 x i8] c"power\00"
@21 = private constant [7 x i8] c"cosine\00"
@22 = private constant [6 x i8] c"rings\00"
@23 = private constant [4 x i8] c"fan\00"
@24 = private constant [7 x i8] c"bubble\00"
@25 = private constant [9 x i8] c"cylinder\00"
@26 = private constant [8 x i8] c"eyefish\00"
@27 = private constant [5 x i8] c"blur\00"
@28 = private constant [5 x i8] c"curl\00"
@29 = private constant [5 x i8] c"ngon\00"
@30 = private constant [4 x i8] c"pdj\00"
@31 = private constant [5 x i8] c"blob\00"
@32 = private constant [7 x i8] c"juliaN\00"
@33 = private constant [11 x i8] c"juliaScope\00"
@34 = private constant [9 x i8] c"gaussian\00"
@35 = private constant [5 x i8] c"fan2\00"
@36 = private constant [7 x i8] c"rings2\00"
@37 = private constant [11 x i8] c"rectangles\00"
@38 = private constant [11 x i8] c"radialblur\00"
@39 = private constant [4 x i8] c"pie\00"
@40 = private constant [5 x i8] c"arch\00"
@41 = private constant [8 x i8] c"tangent\00"
@42 = private constant [7 x i8] c"square\00"
@43 = private constant [5 x i8] c"rays\00"
@44 = private constant [6 x i8] c"blade\00"
@45 = private constant [8 x i8] c"secant2\00"
@46 = private constant [10 x i8] c"twintrian\00"
@47 = private constant [6 x i8] c"cross\00"
@48 = private constant [6 x i8] c"disc2\00"
@49 = private constant [11 x i8] c"supershape\00"
@50 = private constant [7 x i8] c"flower\00"
@51 = private constant [6 x i8] c"conic\00"
@52 = private constant [9 x i8] c"parabola\00"
@53 = private constant [6 x i8] c"bent2\00"
@54 = private constant [8 x i8] c"bipolar\00"
@55 = private constant [9 x i8] c"boarders\00"
@56 = private constant [10 x i8] c"butterfly\00"
@57 = private constant [5 x i8] c"cell\00"
@58 = private constant [5 x i8] c"cpow\00"
@59 = private constant [6 x i8] c"edisc\00"
@60 = private constant [9 x i8] c"elliptic\00"
@61 = private constant [6 x i8] c"noise\00"
@62 = private constant [7 x i8] c"escher\00"
@63 = private constant [5 x i8] c"foci\00"
@64 = private constant [10 x i8] c"lazysusan\00"
@65 = private constant [7 x i8] c"loonie\00"
@66 = private constant [9 x i8] c"pre blur\00"
@67 = private constant [8 x i8] c"modulus\00"
@68 = private constant [7 x i8] c"oscope\00"
@69 = private constant [7 x i8] c"polar2\00"
@70 = private constant [9 x i8] c"popcorn2\00"
@71 = private constant [5 x i8] c"scry\00"
@72 = private constant [11 x i8] c"separation\00"
@73 = private constant [6 x i8] c"split\00"
@74 = private constant [7 x i8] c"splits\00"
@75 = private constant [8 x i8] c"stripes\00"
@76 = private constant [6 x i8] c"wedge\00"
@77 = private constant [12 x i8] c"wedge julia\00"
@78 = private constant [10 x i8] c"wedge sph\00"
@79 = private constant [6 x i8] c"whorl\00"
@80 = private constant [7 x i8] c"waves2\00"
@81 = private constant [4 x i8] c"exp\00"
@82 = private constant [4 x i8] c"log\00"
@83 = private constant [4 x i8] c"sin\00"
@84 = private constant [4 x i8] c"cos\00"
@85 = private constant [4 x i8] c"tan\00"
@86 = private constant [4 x i8] c"sec\00"
@87 = private constant [4 x i8] c"csc\00"
@88 = private constant [4 x i8] c"cot\00"
@89 = private constant [5 x i8] c"sinh\00"
@90 = private constant [5 x i8] c"cosh\00"
@91 = private constant [5 x i8] c"tanh\00"
@92 = private constant [5 x i8] c"sech\00"
@93 = private constant [5 x i8] c"csch\00"
@94 = private constant [5 x i8] c"coth\00"
@95 = private constant [6 x i8] c"auger\00"
@96 = private constant [5 x i8] c"flux\00"
@97 = private constant [7 x i8] c"mobius\00"
@98 = private constant [6 x i8] c"curve\00"
@99 = private constant [12 x i8] c"perspective\00"
@100 = private constant [7 x i8] c"bwraps\00"
@101 = private constant [11 x i8] c"hemisphere\00"
@102 = private constant [11 x i8] c"polynomial\00"
@103 = private constant [102 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @2, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @3, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @4, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @5, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @6, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @7, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @8, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @9, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @10, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @11, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @12, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @13, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @14, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @15, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @16, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @17, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @18, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @19, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @20, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @21, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @22, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @23, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @24, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @25, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @26, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @27, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @28, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @29, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @30, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @31, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @32, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @33, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @34, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @35, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @36, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @37, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @38, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @39, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @40, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @41, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @42, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @43, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @44, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @45, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @46, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @47, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @48, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @49, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @50, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @51, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @52, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @53, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @54, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @55, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @56, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @57, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @58, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @59, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @60, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @61, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @62, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @63, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @64, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @65, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @66, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @67, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @68, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @69, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @70, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @71, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @72, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @73, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @74, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @75, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @76, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @77, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @78, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @79, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @80, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @81, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @82, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @83, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @84, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @85, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @86, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @87, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @88, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @89, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @90, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @91, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @92, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @93, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @94, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @95, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @96, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @97, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @98, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @99, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @100, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @101, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @102, i64 0, i64 0)]
@104 = private constant [16 x i8] c"../dofinalflame\00"
@105 = private constant [14 x i8] c"../dotmglobal\00"
@106 = private constant [8 x i8] c"../iter\00"
@107 = private constant [13 x i8] c"../flamefunc\00"
@108 = private constant [12 x i8] c"../symmetry\00"
@109 = private constant [14 x i8] c"../rotational\00"
@110 = private constant [8 x i8] c"../domb\00"
@111 = private constant [2 x i8] c"[\00"
@112 = private constant [2 x i8] c"]\00"
@113 = private constant [5 x i8] c"XAOS\00"
@114 = private constant [2 x i8] c"X\00"
@115 = private constant [3 x i8] c"MB\00"
@116 = private constant [4 x i8] c"SM3\00"
@117 = private constant [4 x i8] c"SM5\00"
@118 = private constant [3 x i8] c"TM\00"
@119 = private constant [1 x i8] zeroinitializer
@120 = private constant [12 x i8] c"../vactive_\00"
@121 = private constant [13 x i8] c" :::::::::: \00"
@122 = private constant [13 x i8] c"../v1weight_\00"
@123 = private constant [11 x i8] c"../v1type_\00"
@124 = private constant [2 x i8] c":\00"
@125 = private constant [13 x i8] c"../v2weight_\00"
@126 = private constant [11 x i8] c"../v2type_\00"
@127 = private constant [13 x i8] c"../v3weight_\00"
@128 = private constant [11 x i8] c"../v3type_\00"
@129 = private constant [13 x i8] c"../v4weight_\00"
@130 = private constant [11 x i8] c"../v4type_\00"
@131 = private constant [13 x i8] c"../p1weight_\00"
@132 = private constant [3 x i8] c" [\00"
@133 = private constant [11 x i8] c"../p1type_\00"
@134 = private constant [3 x i8] c"] \00"
@135 = private constant [18 x i8] c"../preblurweight_\00"
@136 = private constant [2 x i8] c"*\00"
@137 = private constant [15 x i8] c"../pre1weight_\00"
@138 = private constant [13 x i8] c"../pre1type_\00"
@139 = private constant [3 x i8] c"%g\00"
@140 = private constant [7 x i8] c"../iw_\00"
@141 = private constant [2 x i8] c".\00"
@142 = private constant [14 x i8] c"../ffv1weight\00"
@143 = private constant [12 x i8] c"../ffv1type\00"
@144 = private constant [14 x i8] c"../ffv2weight\00"
@145 = private constant [12 x i8] c"../ffv2type\00"
@146 = private constant [14 x i8] c"../ffv3weight\00"
@147 = private constant [12 x i8] c"../ffv3type\00"
@148 = private constant [14 x i8] c"../ffp1weight\00"
@149 = private constant [12 x i8] c"../ffp1type\00"
@VARTYPE = external global i8**
@150 = private constant [8 x i8] c"VARTYPE\00"

; Function Attrs: alwaysinline nounwind
define private void @"_TFFAuicollect@[S"(i8*** %_bound_VARTYPE) #0 {
__llvm_entry:
  %return = call i64 @"chi@IS"(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @104, i64 0, i64 0))
  %return1 = call i64 @"chi@IS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @105, i64 0, i64 0))
  %return2 = call i64 @"chi@IS"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @106, i64 0, i64 0))
  %return3 = call i64 @"chi@IS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @107, i64 0, i64 0))
  %return4 = call i64 @"chi@IS"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @108, i64 0, i64 0))
  %return5 = call i64 @"chi@IS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @109, i64 0, i64 0))
  %return6 = call i64 @"chi@IS"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @110, i64 0, i64 0))
  %return9 = call i8* @"itoa@SI"(i64 %return2)
  %return10 = call i8* @"concat@SSS:S"(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @111, i64 0, i64 0), i8* %return9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @112, i64 0, i64 0))
  %output = call i8** @"append@[SS"(i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @0, i64 0, i64 0), i8* %return10)
  %return11 = call i64 @"detail@IIS"(i64 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @113, i64 0, i64 0))
  %0 = icmp ne i64 %return11, 0
  br i1 %0, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %return14 = call i8* @"concat@SSS:S"(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @111, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @114, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @112, i64 0, i64 0))
  %output15 = call i8** @"append@[SS"(i8** %output, i8* %return14)
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %type.0 = phi i8** [ %output15, %true ], [ %output, %__llvm_entry ]
  %1 = icmp ne i64 %return6, 0
  br i1 %1, label %true17, label %end18

true17:                                           ; preds = %end
  %output20 = call i8** @"append@[SS"(i8** %type.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @115, i64 0, i64 0))
  br label %end18

end18:                                            ; preds = %true17, %end
  %type.1 = phi i8** [ %output20, %true17 ], [ %type.0, %end ]
  %2 = icmp ne i64 %return4, 0
  br i1 %2, label %true22, label %end23

true22:                                           ; preds = %end18
  %return25 = call i64 @"not@II"(i64 %return5)
  %3 = icmp ne i64 %return25, 0
  br i1 %3, label %true26, label %false

end23:                                            ; preds = %true26, %false, %end18
  %type.2 = phi i8** [ %output29, %true26 ], [ %output31, %false ], [ %type.1, %end18 ]
  %4 = icmp ne i64 %return1, 0
  br i1 %4, label %true33, label %end34

true26:                                           ; preds = %true22
  %output29 = call i8** @"append@[SS"(i8** %type.1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @116, i64 0, i64 0))
  br label %end23

false:                                            ; preds = %true22
  %output31 = call i8** @"append@[SS"(i8** %type.1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @117, i64 0, i64 0))
  br label %end23

true33:                                           ; preds = %end23
  %output36 = call i8** @"append@[SS"(i8** %type.2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @118, i64 0, i64 0))
  br label %end34

end34:                                            ; preds = %true33, %end23
  %type.3 = phi i8** [ %output36, %true33 ], [ %type.2, %end23 ]
  br label %cond

cond:                                             ; preds = %end51, %end34
  %i.0 = phi i64 [ 0, %end34 ], [ %output43, %end51 ]
  %type.4 = phi i8** [ %type.3, %end34 ], [ %output231, %end51 ]
  %return39 = call i64 @"lt@III"(i64 %i.0, i64 %return3)
  %5 = icmp ne i64 %return39, 0
  br i1 %5, label %body, label %end40

body:                                             ; preds = %cond
  %output43 = add i64 %i.0, 1
  %return44 = call i8* @"itoa@SI"(i64 %output43)
  %return46 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @120, i64 0, i64 0), i8* %return44)
  %return47 = call i64 @"chi@IS"(i8* %return46)
  %return48 = call i64 @"not@II"(i64 %return47)
  %6 = icmp ne i64 %return48, 0
  br i1 %6, label %true49, label %false50

end40:                                            ; preds = %cond
  %7 = icmp ne i64 %return, 0
  br i1 %7, label %true235, label %end236

true49:                                           ; preds = %body
  br label %end51

false50:                                          ; preds = %body
  %return53 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @122, i64 0, i64 0), i8* %return44)
  %return54 = call double @"chf@FS"(i8* %return53)
  %return56 = fcmp one double %return54, 0.000000e+00
  br i1 %return56, label %true58, label %false59

end51:                                            ; preds = %end193, %true49
  %VAR.0 = phi i8* [ getelementptr inbounds ([13 x i8], [13 x i8]* @121, i64 0, i64 0), %true49 ], [ %return228, %end193 ]
  %output231 = call i8** @"append@[SS"(i8** %type.4, i8* %VAR.0)
  br label %cond

true58:                                           ; preds = %false50
  %return63 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @123, i64 0, i64 0), i8* %return44)
  %return64 = call i8* @"chs@SS"(i8* %return63)
  %return65 = call i64 @"atoi@IS"(i8* %return64)
  %return66 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([102 x i8*], [102 x i8*]* @103, i64 0, i64 0), i64 %return65)
  %output67 = call i8* @"add@SS"(i8* %return66, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @124, i64 0, i64 0))
  br label %end60

false59:                                          ; preds = %false50
  br label %end60

end60:                                            ; preds = %false59, %true58
  %V1.0 = phi i8* [ %output67, %true58 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @124, i64 0, i64 0), %false59 ]
  %return69 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @125, i64 0, i64 0), i8* %return44)
  %return70 = call double @"chf@FS"(i8* %return69)
  %return72 = fcmp one double %return70, 0.000000e+00
  br i1 %return72, label %true74, label %false75

true74:                                           ; preds = %end60
  %return79 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @126, i64 0, i64 0), i8* %return44)
  %return80 = call i8* @"chs@SS"(i8* %return79)
  %return81 = call i64 @"atoi@IS"(i8* %return80)
  %return82 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([102 x i8*], [102 x i8*]* @103, i64 0, i64 0), i64 %return81)
  %output83 = call i8* @"add@SS"(i8* %return82, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @124, i64 0, i64 0))
  br label %end76

false75:                                          ; preds = %end60
  br label %end76

end76:                                            ; preds = %false75, %true74
  %V2.0 = phi i8* [ %output83, %true74 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @124, i64 0, i64 0), %false75 ]
  %return85 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @127, i64 0, i64 0), i8* %return44)
  %return86 = call double @"chf@FS"(i8* %return85)
  %return88 = fcmp one double %return86, 0.000000e+00
  br i1 %return88, label %true90, label %false91

true90:                                           ; preds = %end76
  %return95 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @128, i64 0, i64 0), i8* %return44)
  %return96 = call i8* @"chs@SS"(i8* %return95)
  %return97 = call i64 @"atoi@IS"(i8* %return96)
  %return98 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([102 x i8*], [102 x i8*]* @103, i64 0, i64 0), i64 %return97)
  %output99 = call i8* @"add@SS"(i8* %return98, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @124, i64 0, i64 0))
  br label %end92

false91:                                          ; preds = %end76
  br label %end92

end92:                                            ; preds = %false91, %true90
  %V3.0 = phi i8* [ %output99, %true90 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @124, i64 0, i64 0), %false91 ]
  %return101 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @129, i64 0, i64 0), i8* %return44)
  %return102 = call double @"chf@FS"(i8* %return101)
  %return104 = fcmp one double %return102, 0.000000e+00
  br i1 %return104, label %true106, label %false107

true106:                                          ; preds = %end92
  %return111 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @130, i64 0, i64 0), i8* %return44)
  %return112 = call i8* @"chs@SS"(i8* %return111)
  %return113 = call i64 @"atoi@IS"(i8* %return112)
  %return114 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([102 x i8*], [102 x i8*]* @103, i64 0, i64 0), i64 %return113)
  %output115 = call i8* @"add@SS"(i8* %return114, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @124, i64 0, i64 0))
  br label %end108

false107:                                         ; preds = %end92
  br label %end108

end108:                                           ; preds = %false107, %true106
  %V4.0 = phi i8* [ %output115, %true106 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @124, i64 0, i64 0), %false107 ]
  %output118 = fadd double %return54, %return70
  %output120 = fadd double %output118, %return86
  %output122 = fadd double %output120, %return102
  %return124 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @131, i64 0, i64 0), i8* %return44)
  %return125 = call double @"chf@FS"(i8* %return124)
  %return127 = fcmp one double %return125, 0.000000e+00
  br i1 %return127, label %true129, label %end130

true129:                                          ; preds = %end108
  %return132 = fcmp one double %output122, 0.000000e+00
  br i1 %return132, label %true134, label %end130

end130:                                           ; preds = %true129, %true134, %end108
  %P1.0 = phi i8* [ %return142, %true134 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @119, i64 0, i64 0), %true129 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @119, i64 0, i64 0), %end108 ]
  %return144 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @135, i64 0, i64 0), i8* %return44)
  %return145 = call double @"chf@FS"(i8* %return144)
  %return147 = fcmp ogt double %return145, 0.000000e+00
  br i1 %return147, label %true149, label %end150

true134:                                          ; preds = %true129
  %return138 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @133, i64 0, i64 0), i8* %return44)
  %return139 = call i8* @"chs@SS"(i8* %return138)
  %return140 = call i64 @"atoi@IS"(i8* %return139)
  %return141 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([102 x i8*], [102 x i8*]* @103, i64 0, i64 0), i64 %return140)
  %return142 = call i8* @"concat@SSS:S"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @132, i64 0, i64 0), i8* %return141, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @134, i64 0, i64 0))
  br label %end130

true149:                                          ; preds = %end130
  %return152 = fcmp one double %output122, 0.000000e+00
  br i1 %return152, label %true154, label %end150

end150:                                           ; preds = %true149, %true154, %end130
  %PB.0 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @136, i64 0, i64 0), %true154 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @119, i64 0, i64 0), %true149 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @119, i64 0, i64 0), %end130 ]
  %return157 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @137, i64 0, i64 0), i8* %return44)
  %return158 = call double @"chf@FS"(i8* %return157)
  %return160 = fcmp ogt double %return158, 0.000000e+00
  br i1 %return160, label %true162, label %end163

true154:                                          ; preds = %true149
  br label %end150

true162:                                          ; preds = %end150
  %return165 = fcmp one double %output122, 0.000000e+00
  br i1 %return165, label %true167, label %end163

end163:                                           ; preds = %true162, %true167, %end150
  %PP.0 = phi i8* [ %return175, %true167 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @119, i64 0, i64 0), %true162 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @119, i64 0, i64 0), %end150 ]
  %return177 = fcmp one double %output122, 0.000000e+00
  br i1 %return177, label %true179, label %false180

true167:                                          ; preds = %true162
  %return171 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @138, i64 0, i64 0), i8* %return44)
  %return172 = call i8* @"chs@SS"(i8* %return171)
  %return173 = call i64 @"atoi@IS"(i8* %return172)
  %return174 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([102 x i8*], [102 x i8*]* @103, i64 0, i64 0), i64 %return173)
  %return175 = call i8* @"concat@SSS:S"(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @111, i64 0, i64 0), i8* %return174, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @134, i64 0, i64 0))
  br label %end163

true179:                                          ; preds = %end163
  %return183 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @140, i64 0, i64 0), i8* %return44)
  %return184 = call double @"chf@FS"(i8* %return183)
  %return185 = call i8* @"sprintf@SS:F"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @139, i64 0, i64 0), double %return184)
  br label %end181

false180:                                         ; preds = %end163
  br label %end181

end181:                                           ; preds = %false180, %true179
  %W.0 = phi i8* [ %return185, %true179 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @119, i64 0, i64 0), %false180 ]
  %return187 = call i8** @"split@[SSS"(i8* %W.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @141, i64 0, i64 0))
  %return189 = call i64 @"len@I[S"(i8** %return187)
  %return190 = call i64 @"gt@III"(i64 %return189, i64 1)
  %8 = icmp ne i64 %return190, 0
  br i1 %8, label %true191, label %false192

true191:                                          ; preds = %end181
  br label %cond196

false192:                                         ; preds = %end181
  br label %end193

end193:                                           ; preds = %cond196, %false192
  %out.0 = phi i8** [ %out.1, %cond196 ], [ %return187, %false192 ]
  %return219 = call i8* @"join@S[SS"(i8** %out.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @141, i64 0, i64 0))
  %return228 = call i8* @"concat@SSS:SSSSSS"(i8* %PB.0, i8* %PP.0, i8* %V1.0, i8* %V2.0, i8* %V3.0, i8* %V4.0, i8* %P1.0, i8* %return219)
  br label %end51

cond196:                                          ; preds = %body197, %true191
  %out.1 = phi i8** [ getelementptr inbounds ([0 x i8*], [0 x i8*]* @0, i64 0, i64 0), %true191 ], [ %output211, %body197 ]
  %count.0 = phi i64 [ 1, %true191 ], [ %output214, %body197 ]
  %__impl_foreach_index.0 = phi i64 [ 0, %true191 ], [ %output216, %body197 ]
  %return200 = call i64 @"lt@III"(i64 %__impl_foreach_index.0, i64 %return189)
  %9 = icmp ne i64 %return200, 0
  br i1 %9, label %body197, label %end193

body197:                                          ; preds = %cond196
  %return205 = call i8* @"getcomp@S[SI"(i8** %return187, i64 %__impl_foreach_index.0)
  %output209 = call i64 @"div@II"(i64 6, i64 %count.0)
  %return210 = call i8* @"slice@SSIIIIII"(i8* %return205, i64 0, i64 0, i64 1, i64 %output209, i64 0, i64 0)
  %output211 = call i8** @"append@[SS"(i8** %out.1, i8* %return210)
  %output214 = add i64 %count.0, 1
  %output216 = add i64 %__impl_foreach_index.0, 1
  br label %cond196

true235:                                          ; preds = %end40
  %return238 = call double @"chf@FS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @142, i64 0, i64 0))
  %return240 = fcmp one double %return238, 0.000000e+00
  br i1 %return240, label %true242, label %false243

end236:                                           ; preds = %end283, %end40
  %type.5 = phi i8** [ %output302, %end283 ], [ %type.4, %end40 ]
  store i8** %type.5, i8*** %_bound_VARTYPE
  ret void

true242:                                          ; preds = %true235
  %return246 = call i8* @"chs@SS"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @143, i64 0, i64 0))
  %return247 = call i64 @"atoi@IS"(i8* %return246)
  %return248 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([102 x i8*], [102 x i8*]* @103, i64 0, i64 0), i64 %return247)
  %output249 = call i8* @"add@SS"(i8* %return248, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @124, i64 0, i64 0))
  br label %end244

false243:                                         ; preds = %true235
  br label %end244

end244:                                           ; preds = %false243, %true242
  %FV1.0 = phi i8* [ %output249, %true242 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @124, i64 0, i64 0), %false243 ]
  %return250 = call double @"chf@FS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @144, i64 0, i64 0))
  %return252 = fcmp one double %return250, 0.000000e+00
  br i1 %return252, label %true254, label %false255

true254:                                          ; preds = %end244
  %return258 = call i8* @"chs@SS"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @145, i64 0, i64 0))
  %return259 = call i64 @"atoi@IS"(i8* %return258)
  %return260 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([102 x i8*], [102 x i8*]* @103, i64 0, i64 0), i64 %return259)
  %output261 = call i8* @"add@SS"(i8* %return260, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @124, i64 0, i64 0))
  br label %end256

false255:                                         ; preds = %end244
  br label %end256

end256:                                           ; preds = %false255, %true254
  %FV2.0 = phi i8* [ %output261, %true254 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @124, i64 0, i64 0), %false255 ]
  %return262 = call double @"chf@FS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @146, i64 0, i64 0))
  %return264 = fcmp one double %return262, 0.000000e+00
  br i1 %return264, label %true266, label %false267

true266:                                          ; preds = %end256
  %return270 = call i8* @"chs@SS"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @147, i64 0, i64 0))
  %return271 = call i64 @"atoi@IS"(i8* %return270)
  %return272 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([102 x i8*], [102 x i8*]* @103, i64 0, i64 0), i64 %return271)
  br label %end268

false267:                                         ; preds = %end256
  br label %end268

end268:                                           ; preds = %false267, %true266
  %FV3.0 = phi i8* [ %return272, %true266 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @124, i64 0, i64 0), %false267 ]
  %output275 = fadd double %return238, %return250
  %output277 = fadd double %output275, %return262
  %return278 = call double @"chf@FS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @148, i64 0, i64 0))
  %return280 = fcmp one double %return278, 0.000000e+00
  br i1 %return280, label %true282, label %end283

true282:                                          ; preds = %end268
  %return285 = fcmp one double %output277, 0.000000e+00
  br i1 %return285, label %true287, label %end283

end283:                                           ; preds = %true282, %true287, %end268
  %FP1.0 = phi i8* [ %return293, %true287 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @119, i64 0, i64 0), %true282 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @119, i64 0, i64 0), %end268 ]
  %return298 = call i8* @"concat@SSS:SS"(i8* %FV1.0, i8* %FV2.0, i8* %FV3.0, i8* %FP1.0)
  %return301 = call i8* @"toupper@SS"(i8* %return298)
  %output302 = call i8** @"append@[SS"(i8** %type.4, i8* %return301)
  br label %end236

true287:                                          ; preds = %true282
  %return290 = call i8* @"chs@SS"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @149, i64 0, i64 0))
  %return291 = call i64 @"atoi@IS"(i8* %return290)
  %return292 = call i8* @"getcomp@S[SI"(i8** getelementptr inbounds ([102 x i8*], [102 x i8*]* @103, i64 0, i64 0), i64 %return291)
  %return293 = call i8* @"concat@SSS:S"(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @111, i64 0, i64 0), i8* %return292, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @112, i64 0, i64 0))
  br label %end283
}

; Function Attrs: nounwind readnone
declare i64 @"chi@IS"(i8*) #1

; Function Attrs: nounwind readnone
declare i8* @"itoa@SI"(i64) #1

; Function Attrs: nounwind readnone
declare i8* @"concat@SSS:S"(i8*, i8*, i8*) #1

; Function Attrs: nounwind
declare i8** @"append@[SS"(i8**, i8*) #2

; Function Attrs: nounwind
declare i64 @"detail@IIS"(i64, i8*) #2

; Function Attrs: nounwind readnone
declare i64 @"not@II"(i64) #1

; Function Attrs: nounwind readnone
declare i64 @"lt@III"(i64, i64) #1

; Function Attrs: nounwind readnone
declare i8* @"concat@SSS"(i8*, i8*) #1

; Function Attrs: nounwind readnone
declare double @"chf@FS"(i8*) #1

; Function Attrs: nounwind readnone
declare i8* @"chs@SS"(i8*) #1

; Function Attrs: nounwind readnone
declare i64 @"atoi@IS"(i8*) #1

; Function Attrs: nounwind readnone
declare i8* @"getcomp@S[SI"(i8**, i64) #1

; Function Attrs: nounwind readnone
declare i8* @"add@SS"(i8*, i8*) #1

; Function Attrs: nounwind readnone
declare i8* @"sprintf@SS:F"(i8*, double) #1

; Function Attrs: nounwind readnone
declare i8** @"split@[SSS"(i8*, i8*) #1

; Function Attrs: nounwind readnone
declare i64 @"len@I[S"(i8**) #1

; Function Attrs: nounwind readnone
declare i64 @"gt@III"(i64, i64) #1

; Function Attrs: nounwind readnone
declare i64 @"div@II"(i64, i64) #1

; Function Attrs: nounwind readnone
declare i8* @"slice@SSIIIIII"(i8*, i64, i64, i64, i64, i64, i64) #1

; Function Attrs: nounwind readnone
declare i8* @"join@S[SS"(i8**, i8*) #1

; Function Attrs: nounwind readnone
declare i8* @"concat@SSS:SSSSSS"(i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*) #1

; Function Attrs: nounwind readnone
declare i8* @"concat@SSS:SS"(i8*, i8*, i8*, i8*) #1

; Function Attrs: nounwind
declare i8* @"toupper@SS"(i8*) #2

; Function Attrs: nounwind
define void @TFFAuicollect(i8** %VARTYPE) #2 {
__llvm_entry:
  %"<VARTYPE>" = alloca i8**
  store i8** %VARTYPE, i8*** %"<VARTYPE>"
  call void @"_TFFAuicollect@[S"(i8*** %"<VARTYPE>")
  %evalue = load i8**, i8*** %"<VARTYPE>"
  %gvalue = call i8** @"_export@[SS[S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @150, i64 0, i64 0), i8** %evalue) #3
  store i8** %gvalue, i8*** @VARTYPE
  ret void
}

declare i8** @"_export@[SS[S"(i8*, i8**)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @TFFAuicollect(i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @0, i64 0, i64 0))
  ret void
}

attributes #0 = { alwaysinline nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind }
attributes #3 = { nounwind readonly }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"19.0.622"}
!2 = !{!"64"}

;_code_end
