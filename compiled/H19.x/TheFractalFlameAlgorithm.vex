;_name	TheFractalFlameAlgorithm
; ModuleID = 'TheFractalFlameAlgorithm'
source_filename = "TheFractalFlameAlgorithm"

%gemSYS = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, double }
%gem = type { i64*, i64*, i64*, i64*, i64*, i64*, i64*, i64, i64, i64, i64, double*, double*, double*, double*, double*, double*, double*, double*, double*, double, double, double, double, double, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>, <2 x double>, <2 x double>, <2 x double>, <2 x double>, <2 x double>, i8** }
%gemPrm = type { double*, double*, double*, double*, double*, double*, <3 x double>*, <3 x double>*, <3 x double>*, <3 x double>*, <3 x double>*, <3 x double>*, <3 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <4 x double>*, <4 x double>*, <4 x double>*, <4 x double>*, <4 x double>*, <4 x double>*, <4 x double>*, <4 x double>*, <4 x double>* }

@0 = private constant [5 x i8] c"../_\00"
@1 = private constant [7 x i8] c"../_p1\00"
@2 = private constant [8 x i8] c"twister\00"
@3 = private constant [14 x i8] c"../dotmglobal\00"
@4 = private constant [16 x i8] c"../dofinalflame\00"
@5 = private constant [14 x i8] c"../_dofpost_2\00"
@6 = private constant [16 x i8] c"../delinvalidpt\00"
@7 = private constant [12 x i8] c"../symmetry\00"
@8 = private constant [13 x i8] c"../flamefunc\00"
@9 = private constant [8 x i8] c"../iter\00"
@10 = private constant [8 x i8] c"../domb\00"
@11 = private constant [14 x i8] c"../rotational\00"
@12 = private constant [11 x i8] c"Tstep_mult\00"
@13 = private constant [8 x i8] c"../clr_\00"
@14 = private constant [13 x i8] c"../clrspeed_\00"
@15 = private constant [10 x i8] c"../alpha_\00"
@16 = private constant [18 x i8] c"../preblurweight_\00"
@17 = private constant [16 x i8] c"../preblurtype_\00"
@18 = private constant [13 x i8] c"../v1weight_\00"
@19 = private constant [11 x i8] c"../v1type_\00"
@20 = private constant [13 x i8] c"../v2weight_\00"
@21 = private constant [11 x i8] c"../v2type_\00"
@22 = private constant [13 x i8] c"../v3weight_\00"
@23 = private constant [11 x i8] c"../v3type_\00"
@24 = private constant [13 x i8] c"../v4weight_\00"
@25 = private constant [11 x i8] c"../v4type_\00"
@26 = private constant [13 x i8] c"../p1weight_\00"
@27 = private constant [11 x i8] c"../p1type_\00"
@28 = private constant [6 x i8] c"../x_\00"
@29 = private constant [6 x i8] c"../y_\00"
@30 = private constant [8 x i8] c"../ang_\00"
@31 = private constant [6 x i8] c"../o_\00"
@32 = private constant [11 x i8] c"../dopost_\00"
@33 = private constant [7 x i8] c"../px_\00"
@34 = private constant [7 x i8] c"../py_\00"
@35 = private constant [9 x i8] c"../pang_\00"
@36 = private constant [7 x i8] c"../po_\00"
@37 = private constant [7 x i8] c"../frt\00"
@38 = private constant [14 x i8] c"../ffv1weight\00"
@39 = private constant [12 x i8] c"../ffv1type\00"
@40 = private constant [14 x i8] c"../ffv2weight\00"
@41 = private constant [12 x i8] c"../ffv2type\00"
@42 = private constant [14 x i8] c"../ffv3weight\00"
@43 = private constant [12 x i8] c"../ffv3type\00"
@44 = private constant [14 x i8] c"../ffp1weight\00"
@45 = private constant [12 x i8] c"../ffp1type\00"
@46 = private constant [9 x i8] c"../_fx_2\00"
@47 = private constant [9 x i8] c"../_fy_2\00"
@48 = private constant [10 x i8] c"../_ang_2\00"
@49 = private constant [9 x i8] c"../_fo_2\00"
@50 = private constant [10 x i8] c"../_pfx_2\00"
@51 = private constant [10 x i8] c"../_pfy_2\00"
@52 = private constant [11 x i8] c"../_pang_2\00"
@53 = private constant [10 x i8] c"../_pfo_2\00"
@54 = private constant [0 x i64] zeroinitializer
@55 = private constant [0 x double] zeroinitializer
@56 = private constant [0 x <2 x double>] zeroinitializer
@57 = private constant [0 x i8*] zeroinitializer
@58 = private constant [20 x double] [double 2.700000e+01, double 2.800000e+01, double 2.900000e+01, double 3.000000e+01, double 3.100000e+01, double 3.200000e+01, double 3.400000e+01, double 3.500000e+01, double 3.600000e+01, double 3.700000e+01, double 3.800000e+01, double 4.700000e+01, double 4.800000e+01, double 4.900000e+01, double 5.000000e+01, double 5.100000e+01, double 5.200000e+01, double 5.300000e+01, double 5.600000e+01, double 5.700000e+01]
@59 = private constant [10 x i8] c"../curlc_\00"
@60 = private constant [9 x i8] c"../ngon_\00"
@61 = private constant [9 x i8] c"../pdjw_\00"
@62 = private constant [9 x i8] c"../blob_\00"
@63 = private constant [11 x i8] c"../julian_\00"
@64 = private constant [15 x i8] c"../juliascope_\00"
@65 = private constant [9 x i8] c"../fan2_\00"
@66 = private constant [14 x i8] c"../rings2val_\00"
@67 = private constant [15 x i8] c"../rectangles_\00"
@68 = private constant [15 x i8] c"../radialblur_\00"
@69 = private constant [8 x i8] c"../pie_\00"
@70 = private constant [10 x i8] c"../disc2_\00"
@71 = private constant [15 x i8] c"../supershape_\00"
@72 = private constant [16 x i8] c"../supershapen_\00"
@73 = private constant [11 x i8] c"../flower_\00"
@74 = private constant [10 x i8] c"../conic_\00"
@75 = private constant [13 x i8] c"../parabola_\00"
@76 = private constant [12 x i8] c"../bent2xy_\00"
@77 = private constant [17 x i8] c"../bipolarshift_\00"
@78 = private constant [13 x i8] c"../cellsize_\00"
@79 = private constant [9 x i8] c"../cpow_\00"
@80 = private constant [21 x double] [double 6.100000e+01, double 6.300000e+01, double 6.600000e+01, double 6.700000e+01, double 6.900000e+01, double 7.100000e+01, double 7.200000e+01, double 7.300000e+01, double 7.400000e+01, double 7.500000e+01, double 7.600000e+01, double 7.700000e+01, double 7.800000e+01, double 7.900000e+01, double 9.400000e+01, double 9.500000e+01, double 9.600000e+01, double 9.700000e+01, double 9.800000e+01, double 9.900000e+01, double 1.010000e+02]
@81 = private constant [15 x i8] c"../escherbeta_\00"
@82 = private constant [17 x i8] c"../lazysusanxyz_\00"
@83 = private constant [14 x i8] c"../lazysusan_\00"
@84 = private constant [15 x i8] c"../modulusXYZ_\00"
@85 = private constant [11 x i8] c"../oscope_\00"
@86 = private constant [16 x i8] c"../popcorn2xyz_\00"
@87 = private constant [14 x i8] c"../popcorn2c_\00"
@88 = private constant [18 x i8] c"../separationxyz_\00"
@89 = private constant [24 x i8] c"../separationinsidexyz_\00"
@90 = private constant [13 x i8] c"../splitxyz_\00"
@91 = private constant [14 x i8] c"../splitsxyz_\00"
@92 = private constant [12 x i8] c"../stripes_\00"
@93 = private constant [10 x i8] c"../wedge_\00"
@94 = private constant [15 x i8] c"../wedgejulia_\00"
@95 = private constant [13 x i8] c"../wedgesph_\00"
@96 = private constant [10 x i8] c"../whorl_\00"
@97 = private constant [19 x i8] c"../waves2scalexyz_\00"
@98 = private constant [18 x i8] c"../waves2freqxyz_\00"
@99 = private constant [10 x i8] c"../auger_\00"
@100 = private constant [15 x i8] c"../fluxspread_\00"
@101 = private constant [13 x i8] c"../mobiusre_\00"
@102 = private constant [13 x i8] c"../mobiusim_\00"
@103 = private constant [19 x i8] c"../curvexyzlenght_\00"
@104 = private constant [16 x i8] c"../curvexyzamp_\00"
@105 = private constant [10 x i8] c"../persp_\00"
@106 = private constant [11 x i8] c"../bwraps_\00"
@107 = private constant [16 x i8] c"../bwrapstwist_\00"
@108 = private constant [18 x i8] c"../polynomialpow_\00"
@109 = private constant [17 x i8] c"../polynomiallc_\00"
@110 = private constant [17 x i8] c"../polynomialsc_\00"
@111 = private constant [0 x <3 x double>] zeroinitializer
@112 = private constant [0 x <4 x double>] zeroinitializer
@113 = private constant [8 x i8] c"curlc_2\00"
@114 = private constant [7 x i8] c"ngon_2\00"
@115 = private constant [7 x i8] c"pdjw_2\00"
@116 = private constant [7 x i8] c"blob_2\00"
@117 = private constant [9 x i8] c"julian_2\00"
@118 = private constant [13 x i8] c"juliascope_2\00"
@119 = private constant [7 x i8] c"fan2_2\00"
@120 = private constant [12 x i8] c"rings2val_2\00"
@121 = private constant [13 x i8] c"rectangles_2\00"
@122 = private constant [13 x i8] c"radialblur_2\00"
@123 = private constant [6 x i8] c"pie_2\00"
@124 = private constant [8 x i8] c"disc2_2\00"
@125 = private constant [13 x i8] c"supershape_2\00"
@126 = private constant [14 x i8] c"supershapen_2\00"
@127 = private constant [9 x i8] c"flower_2\00"
@128 = private constant [8 x i8] c"conic_2\00"
@129 = private constant [11 x i8] c"parabola_2\00"
@130 = private constant [10 x i8] c"bent2xy_2\00"
@131 = private constant [15 x i8] c"bipolarshift_2\00"
@132 = private constant [11 x i8] c"cellsize_2\00"
@133 = private constant [7 x i8] c"cpow_2\00"
@134 = private constant [13 x i8] c"escherbeta_2\00"
@135 = private constant [12 x i8] c"lazysusan_2\00"
@136 = private constant [15 x i8] c"lazysusanxyz_2\00"
@137 = private constant [13 x i8] c"modulusXYZ_2\00"
@138 = private constant [9 x i8] c"oscope_2\00"
@139 = private constant [12 x i8] c"popcorn2c_2\00"
@140 = private constant [14 x i8] c"popcorn2xyz_2\00"
@141 = private constant [16 x i8] c"separationxyz_2\00"
@142 = private constant [22 x i8] c"separationinsidexyz_2\00"
@143 = private constant [11 x i8] c"splitxyz_2\00"
@144 = private constant [12 x i8] c"splitsxyz_2\00"
@145 = private constant [10 x i8] c"stripes_2\00"
@146 = private constant [8 x i8] c"wedge_2\00"
@147 = private constant [13 x i8] c"wedgejulia_2\00"
@148 = private constant [11 x i8] c"wedgesph_2\00"
@149 = private constant [8 x i8] c"whorl_2\00"
@150 = private constant [17 x i8] c"waves2scalexyz_2\00"
@151 = private constant [16 x i8] c"waves2freqxyz_2\00"
@152 = private constant [8 x i8] c"auger_2\00"
@153 = private constant [13 x i8] c"fluxspread_2\00"
@154 = private constant [11 x i8] c"mobiusre_2\00"
@155 = private constant [11 x i8] c"mobiusim_2\00"
@156 = private constant [17 x i8] c"curvexyzlenght_2\00"
@157 = private constant [14 x i8] c"curvexyzamp_2\00"
@158 = private constant [8 x i8] c"persp_2\00"
@159 = private constant [9 x i8] c"bwraps_2\00"
@160 = private constant [14 x i8] c"bwrapstwist_2\00"
@161 = private constant [16 x i8] c"polynomialpow_2\00"
@162 = private constant [15 x i8] c"polynomiallc_2\00"
@163 = private constant [15 x i8] c"polynomialsc_2\00"
@164 = private constant [12 x i8] c"mb_modulate\00"
@165 = private constant [4 x i8] c"set\00"
@ptnum = external global i64
@pscale = external global double
@COORD = external global double
@Alpha = external global double
@P = external global <3 x double>
@166 = private constant [6 x i8] c"ptnum\00"
@167 = private constant [7 x i8] c"pscale\00"
@168 = private constant [6 x i8] c"COORD\00"
@169 = private constant [6 x i8] c"Alpha\00"
@170 = private constant [2 x i8] c"P\00"

; Function Attrs: alwaysinline nounwind
define private double @"ATAN@FU"(<2 x double>* %p) #0 {
__llvm_entry:
  %p1 = load <2 x double>, <2 x double>* %p
  %return = call double @"getcomp@FUI"(<2 x double> %p1, i64 0)
  %return3 = call double @"getcomp@FUI"(<2 x double> %p1, i64 1)
  %return4 = call double @"atan2@FFF"(double %return, double %return3)
  ret double %return4
}

; Function Attrs: nounwind readnone
declare double @"getcomp@FUI"(<2 x double>, i64) #1

; Function Attrs: nounwind readnone
declare double @"atan2@FFF"(double, double) #1

; Function Attrs: alwaysinline nounwind
define private double @"ATANYX@FU"(<2 x double>* %p) #0 {
__llvm_entry:
  %p1 = load <2 x double>, <2 x double>* %p
  %return = call double @"getcomp@FUI"(<2 x double> %p1, i64 1)
  %return3 = call double @"getcomp@FUI"(<2 x double> %p1, i64 0)
  %return4 = call double @"atan2@FFF"(double %return, double %return3)
  ret double %return4
}

; Function Attrs: alwaysinline nounwind
define private double @"SUMSQ@FU"(<2 x double>* %p) #0 {
__llvm_entry:
  %p1 = load <2 x double>, <2 x double>* %p
  %return = call double @"getcomp@FUI"(<2 x double> %p1, i64 0)
  %output = fmul double %return, %return
  %return5 = call double @"getcomp@FUI"(<2 x double> %p1, i64 1)
  %output8 = fmul double %return5, %return5
  %output9 = fadd double %output, %output8
  ret double %output9
}

; Function Attrs: alwaysinline nounwind
define private double @"SQRT@FU"(<2 x double>* %p) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %p1 = load <2 x double>, <2 x double>* %p
  store <2 x double> %p1, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %return = call double @"sqrt@FF"(double %SUMSQ)
  ret double %return
}

; Function Attrs: nounwind readnone
declare double @"sqrt@FF"(double) #1

; Function Attrs: alwaysinline nounwind
define private double @"sgn@FF"(double* %n) #0 {
__llvm_entry:
  %n1 = load double, double* %n
  %return = fcmp olt double %n1, 0.000000e+00
  br i1 %return, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %return3 = call i64 @"neg@II"(i64 1)
  br label %end

false:                                            ; preds = %__llvm_entry
  %return5 = fcmp ogt double %n1, 0.000000e+00
  %. = select i1 %return5, i64 1, i64 0
  br label %end

end:                                              ; preds = %false, %true
  %phi10 = phi i64 [ %return3, %true ], [ %., %false ]
  %cast = sitofp i64 %phi10 to double
  ret double %cast
}

; Function Attrs: nounwind readnone
declare i64 @"neg@II"(i64) #1

; Function Attrs: alwaysinline nounwind
define private double @"fmod@FFF"(double* %a, double* %b) #0 {
__llvm_entry:
  %a1 = load double, double* %a
  %b3 = load double, double* %b
  %output = call double @"div@FF"(double %a1, double %b3)
  %return = call double @"floor@FF"(double %output)
  %output5 = fmul double %return, %b3
  %output6 = fsub double %a1, %output5
  ret double %output6
}

; Function Attrs: nounwind readnone
declare double @"div@FF"(double, double) #1

; Function Attrs: nounwind readnone
declare double @"floor@FF"(double) #1

; Function Attrs: alwaysinline nounwind
define private void @"sincos@FFF"(double* %a, double* %sa, double* %ca) #0 {
__llvm_entry:
  %a1 = load double, double* %a
  %return = call double @"sin@FF"(double %a1)
  store double %return, double* %sa
  %a2 = load double, double* %a
  %return3 = call double @"cos@FF"(double %a2)
  store double %return3, double* %ca
  ret void
}

; Function Attrs: nounwind readnone
declare double @"sin@FF"(double) #1

; Function Attrs: nounwind readnone
declare double @"cos@FF"(double) #1

; Function Attrs: nounwind readnone
declare <3 x double> @"setcomp@VFI"(<3 x double>, double, i64) #1

; Function Attrs: nounwind readnone
declare double @"getcomp@FVI"(<3 x double>, i64) #1

; Function Attrs: alwaysinline
define private { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %rw11, double %rw22, i64 %rw33) #2 {
__llvm_entry:
  %rw16 = call <2 x double> @"setcomp@UFI"(<2 x double> %rw11, double %rw22, i64 %rw33)
  %mrv = insertvalue { double, <2 x double> } undef, double %rw22, 0
  %mrv9 = insertvalue { double, <2 x double> } %mrv, <2 x double> %rw16, 1
  ret { double, <2 x double> } %mrv9
}

; Function Attrs: nounwind readnone
declare <2 x double> @"setcomp@UFI"(<2 x double>, double, i64) #1

; Function Attrs: nounwind readnone
declare double @"neg@FF"(double) #1

; Function Attrs: nounwind
declare double @"abs@FF"(double) #3

; Function Attrs: alwaysinline nounwind
define private i8* @"PRX@SI"(i64* %ftype) #0 {
__llvm_entry:
  %ftype1 = load i64, i64* %ftype
  %return = call i64 @"eq@III"(i64 %ftype1, i64 1)
  %0 = icmp ne i64 %return, 0
  %. = select i1 %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1, i64 0, i64 0)
  ret i8* %.
}

; Function Attrs: nounwind readnone
declare i64 @"eq@III"(i64, i64) #1

; Function Attrs: alwaysinline nounwind
define private <2 x double> @"biunit@U"() #0 {
__llvm_entry:
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i64 0, i64 0))
  %output = fmul double 2.000000e+00, %return
  %output1 = fsub double %output, 1.000000e+00
  %return2 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i64 0, i64 0))
  %output3 = fmul double 2.000000e+00, %return2
  %output4 = fsub double %output3, 1.000000e+00
  %return5 = call <2 x double> @"set@UFF"(double %output1, double %output4)
  ret <2 x double> %return5
}

; Function Attrs: nounwind
declare double @"nrandom@F:S"(i8*) #3

; Function Attrs: nounwind readnone
declare <2 x double> @"set@UFF"(double, double) #1

; Function Attrs: alwaysinline nounwind
define private i64 @"chkNAN_v@IIUF"(i64* %ACTIVE, <2 x double>* %vec, double* %alpha) #0 {
__llvm_entry:
  %ACTIVE1 = load i64, i64* %ACTIVE
  %0 = icmp ne i64 %ACTIVE1, 0
  br i1 %0, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %vec2 = load <2 x double>, <2 x double>* %vec
  %return = call double @"getcomp@FUI"(<2 x double> %vec2, i64 0)
  %return3 = call i64 @"isfinite@IF"(double %return)
  %return4 = call i64 @"not@II"(i64 %return3)
  %return6 = call double @"getcomp@FUI"(<2 x double> %vec2, i64 1)
  %return7 = call i64 @"isfinite@IF"(double %return6)
  %return8 = call i64 @"not@II"(i64 %return7)
  %return9 = call i64 @"or@III"(i64 %return4, i64 %return8)
  %return12 = call i64 @"isnan@IF"(double %return)
  %return13 = call i64 @"or@III"(i64 %return9, i64 %return12)
  %return16 = call i64 @"isnan@IF"(double %return6)
  %return17 = call i64 @"or@III"(i64 %return13, i64 %return16)
  %return19 = call double @"length@FU"(<2 x double> %vec2)
  %return20 = fcmp ogt double %return19, 1.000000e+03
  %return21 = zext i1 %return20 to i64
  %return22 = call i64 @"or@III"(i64 %return17, i64 %return21)
  %alpha23 = load double, double* %alpha
  %return24 = fcmp oeq double %alpha23, 0.000000e+00
  %return25 = zext i1 %return24 to i64
  %return26 = call i64 @"or@III"(i64 %return22, i64 %return25)
  %1 = icmp ne i64 %return26, 0
  %. = select i1 %1, i64 1, i64 0
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %merge = phi i64 [ 0, %__llvm_entry ], [ %., %true ]
  ret i64 %merge
}

; Function Attrs: nounwind readnone
declare i64 @"isfinite@IF"(double) #1

; Function Attrs: nounwind readnone
declare i64 @"not@II"(i64) #1

; Function Attrs: nounwind readnone
declare i64 @"or@III"(i64, i64) #1

; Function Attrs: nounwind readnone
declare i64 @"isnan@IF"(double) #1

; Function Attrs: nounwind
declare double @"length@FU"(<2 x double>) #3

; Function Attrs: alwaysinline nounwind
define private void @"V_SYM@UI"(<2 x double>* %p, i64* %num) #0 {
__llvm_entry:
  %num1 = load i64, i64* %num
  %return = call i64 @"not@II"(i64 %num1)
  %0 = icmp ne i64 %return, 0
  br i1 %0, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %return2 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i64 0, i64 0))
  %output = call double @"div@FF"(double 1.000000e+00, double 3.000000e+00)
  %return3 = fcmp ogt double %return2, %output
  br i1 %return3, label %true5, label %end

false:                                            ; preds = %__llvm_entry
  %1 = icmp ne i64 %num1, 0
  br i1 %1, label %true13, label %end

end:                                              ; preds = %false45, %true53, %true44, %true35, %true26, %true13, %false, %true5, %true10, %true
  %ang.0 = phi double [ 2.400000e+02, %true10 ], [ 1.200000e+02, %true5 ], [ 0.000000e+00, %true ], [ 7.200000e+01, %true26 ], [ 1.440000e+02, %true35 ], [ 2.160000e+02, %true44 ], [ 2.880000e+02, %true53 ], [ 0.000000e+00, %false45 ], [ 0.000000e+00, %true13 ], [ 0.000000e+00, %false ]
  %p55 = load <2 x double>, <2 x double>* %p
  %cast56 = call <3 x double> @"set@VI"(i64 0)
  %return58 = call <3 x double> @"set@VFFF"(double 0.000000e+00, double 0.000000e+00, double %ang.0)
  %cast59 = call <3 x double> @"set@VI"(i64 1)
  %return61 = call <16 x double> @"maketransform@4IIVVVV"(i64 0, i64 0, <3 x double> %cast56, <3 x double> %return58, <3 x double> %cast59, <3 x double> %cast56)
  %cast62 = call <4 x double> @"set@24"(<16 x double> %return61)
  %output63 = call <2 x double> @"mul@U2"(<2 x double> %p55, <4 x double> %cast62)
  store <2 x double> %output63, <2 x double>* %p
  ret void

true5:                                            ; preds = %true
  %return7 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i64 0, i64 0))
  %return8 = fcmp ogt double %return7, 5.000000e-01
  br i1 %return8, label %true10, label %end

true10:                                           ; preds = %true5
  br label %end

true13:                                           ; preds = %false
  %return15 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i64 0, i64 0))
  %return16 = fcmp oge double %return15, 2.000000e-01
  br i1 %return16, label %true18, label %end

true18:                                           ; preds = %true13
  %return20 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i64 0, i64 0))
  %return22 = fcmp olt double 2.000000e-01, %return20
  %return23 = zext i1 %return22 to i64
  %cast = sitofp i64 %return23 to double
  %return24 = fcmp ole double %cast, 4.000000e-01
  br i1 %return24, label %true26, label %false27

true26:                                           ; preds = %true18
  br label %end

false27:                                          ; preds = %true18
  %return30 = fcmp olt double 4.000000e-01, %return20
  %return31 = zext i1 %return30 to i64
  %cast32 = sitofp i64 %return31 to double
  %return33 = fcmp ole double %cast32, 6.000000e-01
  br i1 %return33, label %true35, label %false36

true35:                                           ; preds = %false27
  br label %end

false36:                                          ; preds = %false27
  %return39 = fcmp olt double 6.000000e-01, %return20
  %return40 = zext i1 %return39 to i64
  %cast41 = sitofp i64 %return40 to double
  %return42 = fcmp ole double %cast41, 8.000000e-01
  br i1 %return42, label %true44, label %false45

true44:                                           ; preds = %false36
  br label %end

false45:                                          ; preds = %false36
  %return48 = fcmp olt double 8.000000e-01, %return20
  %return49 = zext i1 %return48 to i64
  %cast50 = sitofp i64 %return49 to double
  %return51 = fcmp ole double %cast50, 1.000000e+00
  br i1 %return51, label %true53, label %end

true53:                                           ; preds = %false45
  br label %end
}

; Function Attrs: nounwind readnone
declare <3 x double> @"set@VI"(i64) #1

; Function Attrs: nounwind readnone
declare <3 x double> @"set@VFFF"(double, double, double) #1

; Function Attrs: nounwind readnone
declare <16 x double> @"maketransform@4IIVVVV"(i64, i64, <3 x double>, <3 x double>, <3 x double>, <3 x double>) #1

; Function Attrs: nounwind
declare <4 x double> @"set@24"(<16 x double>) #3

; Function Attrs: nounwind readnone
declare <2 x double> @"mul@U2"(<2 x double>, <4 x double>) #1

; Function Attrs: alwaysinline nounwind
define private void @"affine@UUUU"(<2 x double>* %p, <2 x double>* %x, <2 x double>* %y, <2 x double>* %o) #0 {
__llvm_entry:
  %x1 = load <2 x double>, <2 x double>* %x
  %return = call double @"getcomp@FUI"(<2 x double> %x1, i64 0)
  %p2 = load <2 x double>, <2 x double>* %p
  %return3 = call double @"getcomp@FUI"(<2 x double> %p2, i64 0)
  %output = fmul double %return, %return3
  %y4 = load <2 x double>, <2 x double>* %y
  %return5 = call double @"getcomp@FUI"(<2 x double> %y4, i64 0)
  %return7 = call double @"getcomp@FUI"(<2 x double> %p2, i64 1)
  %output8 = fmul double %return5, %return7
  %output9 = fadd double %output, %output8
  %o10 = load <2 x double>, <2 x double>* %o
  %return11 = call double @"getcomp@FUI"(<2 x double> %o10, i64 0)
  %output12 = fadd double %output9, %return11
  %return14 = call double @"getcomp@FUI"(<2 x double> %x1, i64 1)
  %output17 = fmul double %return14, %return3
  %return19 = call double @"getcomp@FUI"(<2 x double> %y4, i64 1)
  %output22 = fmul double %return19, %return7
  %output23 = fadd double %output17, %output22
  %return25 = call double @"getcomp@FUI"(<2 x double> %o10, i64 1)
  %output26 = fadd double %output23, %return25
  %return27 = call <2 x double> @"set@UFF"(double %output12, double %output26)
  store <2 x double> %return27, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"affineRot@2UUF"(<4 x double>* %m2, <2 x double>* %x, <2 x double>* %y, double* %ang) #0 {
__llvm_entry:
  %x1 = load <2 x double>, <2 x double>* %x
  %y2 = load <2 x double>, <2 x double>* %y
  %return = call <4 x double> @"set@2UU"(<2 x double> %x1, <2 x double> %y2)
  store <4 x double> %return, <4 x double>* %m2
  %ang4 = load double, double* %ang
  %output = call <4 x double> @"rotate@2F"(<4 x double> %return, double %ang4)
  store <4 x double> %output, <4 x double>* %m2
  ret void
}

; Function Attrs: nounwind
declare <4 x double> @"set@2UU"(<2 x double>, <2 x double>) #3

; Function Attrs: nounwind readnone
declare <4 x double> @"rotate@2F"(<4 x double>, double) #1

; Function Attrs: nounwind readnone
declare i64 @"lt@III"(i64, i64) #1

; Function Attrs: nounwind readnone
declare double @"getcomp@F[FI"(double*, i64) #1

; Function Attrs: nounwind
declare double* @"append@[FF"(double*, double) #3

; Function Attrs: alwaysinline nounwind
define private void @"gemSYSBuild@Z6gemSYSM10N3TMGIN2FFIN3PFFIN3RIPIN3SYMIN6iter_fIN4iterIN8sym_modeIN2MBIN6mb_modF"(%gemSYS* %this) #0 {
__llvm_entry:
  %return = call i64 @"chi@IS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @3, i64 0, i64 0))
  %tmp = load %gemSYS, %gemSYS* %this
  %0 = insertvalue %gemSYS %tmp, i64 %return, 0
  %return1 = call i64 @"chi@IS"(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @4, i64 0, i64 0))
  %1 = insertvalue %gemSYS %0, i64 %return1, 1
  %return3 = call i64 @"chi@IS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @5, i64 0, i64 0))
  %2 = insertvalue %gemSYS %1, i64 %return3, 2
  %return5 = call i64 @"chi@IS"(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @6, i64 0, i64 0))
  %3 = insertvalue %gemSYS %2, i64 %return5, 3
  %return7 = call i64 @"chi@IS"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @7, i64 0, i64 0))
  %4 = insertvalue %gemSYS %3, i64 %return7, 4
  %return9 = call i64 @"chi@IS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @8, i64 0, i64 0))
  %5 = insertvalue %gemSYS %4, i64 %return9, 5
  %return11 = call i64 @"chi@IS"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @9, i64 0, i64 0))
  %6 = insertvalue %gemSYS %5, i64 %return11, 6
  %return13 = call i64 @"chi@IS"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @10, i64 0, i64 0))
  %7 = insertvalue %gemSYS %6, i64 %return13, 8
  store %gemSYS %7, %gemSYS* %this
  %8 = icmp ne i64 %return7, 0
  br i1 %8, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %return16 = call i64 @"chi@IS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @11, i64 0, i64 0))
  %9 = insertvalue %gemSYS %7, i64 %return16, 7
  store %gemSYS %9, %gemSYS* %this
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %this18 = load %gemSYS, %gemSYS* %this
  %MB = extractvalue %gemSYS %this18, 8
  %10 = icmp ne i64 %MB, 0
  br i1 %10, label %true19, label %end20

true19:                                           ; preds = %end
  %return21 = call double @"detail@FISI"(i64 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @12, i64 0, i64 0), i64 0)
  %tmp22 = load %gemSYS, %gemSYS* %this
  %11 = insertvalue %gemSYS %tmp22, double %return21, 9
  store %gemSYS %11, %gemSYS* %this
  br label %end20

end20:                                            ; preds = %true19, %end
  ret void
}

; Function Attrs: nounwind readnone
declare i64 @"chi@IS"(i8*) #1

; Function Attrs: nounwind
declare double @"detail@FISI"(i64, i8*, i64) #3

; Function Attrs: alwaysinline nounwind
define private %gemSYS @"gemSYS@Z6gemSYSM10N3TMGIN2FFIN3PFFIN3RIPIN3SYMIN6iter_fIN4iterIN8sym_modeIN2MBIN6mb_modFIIIIIIIIIF"(i64* %TMG, i64* %FF, i64* %PFF, i64* %RIP, i64* %SYM, i64* %iter_f, i64* %iter, i64* %sym_mode, i64* %MB, double* %mb_mod) #0 {
__llvm_entry:
  %TMG1 = load i64, i64* %TMG
  %0 = insertvalue %gemSYS undef, i64 %TMG1, 0
  %FF2 = load i64, i64* %FF
  %1 = insertvalue %gemSYS %0, i64 %FF2, 1
  %PFF4 = load i64, i64* %PFF
  %2 = insertvalue %gemSYS %1, i64 %PFF4, 2
  %RIP6 = load i64, i64* %RIP
  %3 = insertvalue %gemSYS %2, i64 %RIP6, 3
  %SYM8 = load i64, i64* %SYM
  %4 = insertvalue %gemSYS %3, i64 %SYM8, 4
  %iter_f10 = load i64, i64* %iter_f
  %5 = insertvalue %gemSYS %4, i64 %iter_f10, 5
  %iter12 = load i64, i64* %iter
  %6 = insertvalue %gemSYS %5, i64 %iter12, 6
  %sym_mode14 = load i64, i64* %sym_mode
  %7 = insertvalue %gemSYS %6, i64 %sym_mode14, 7
  %MB16 = load i64, i64* %MB
  %8 = insertvalue %gemSYS %7, i64 %MB16, 8
  %mb_mod18 = load double, double* %mb_mod
  %9 = insertvalue %gemSYS %8, double %mb_mod18, 9
  ret %gemSYS %9
}

; Function Attrs: alwaysinline nounwind
define private %gemSYS @"gemSYS@Z6gemSYSM10N3TMGIN2FFIN3PFFIN3RIPIN3SYMIN6iter_fIN4iterIN8sym_modeIN2MBIN6mb_modF"() #0 {
__llvm_entry:
  %0 = alloca i64
  %1 = alloca i64
  %2 = alloca i64
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca i64
  %8 = alloca double
  %9 = alloca i64
  store i64 0, i64* %9
  store i64 0, i64* %0
  store i64 0, i64* %1
  store i64 0, i64* %2
  store i64 0, i64* %3
  store i64 0, i64* %4
  store i64 0, i64* %5
  store i64 0, i64* %6
  store i64 0, i64* %7
  store double 1.000000e+00, double* %8
  %gemSYS = call %gemSYS @"gemSYS@Z6gemSYSM10N3TMGIN2FFIN3PFFIN3RIPIN3SYMIN6iter_fIN4iterIN8sym_modeIN2MBIN6mb_modFIIIIIIIIIF"(i64* %9, i64* %0, i64* %1, i64* %2, i64* %3, i64* %4, i64* %5, i64* %6, i64* %7, double* %8)
  ret %gemSYS %gemSYS
}

; Function Attrs: alwaysinline nounwind
define private void @"gemBuild@Z3gemM38N6v1type[IN6v2type[IN6v3type[IN6v4type[IN6p1type[IN7pp1type[IN5POSTL[IN8ffv1typeIN8ffv2typeIN8ffv3typeIN8ffp1typeIN3v1w[FN3v2w[FN3v3w[FN3v4w[FN3p1w[FN4pp1w[FN3CLR[FN8ONEMINUS[FN5ALPHA[FN5ffv1wFN5ffv2wFN5ffv3wFN5ffp1wFN3grtFN1x[UN1y[UN1o[UN2px[UN2py[UN2po[UN2fxUN2fyUN2foUN3pfxUN3pfyUN3pfoUN4sIDX[S[IZ6gemSYSM10N3TMGIN2FFIN3PFFIN3RIPIN3SYMIN6iter_fIN4iterIN8sym_modeIN2MBIN6mb_modF"(%gem* %this, i64** %VACTIVE, %gemSYS* %SYS) #0 {
__llvm_entry:
  %m2 = alloca <4 x double>
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  %3 = alloca <2 x double>
  %4 = alloca <2 x double>
  %5 = alloca double
  %6 = alloca <2 x double>
  %7 = alloca <2 x double>
  %8 = alloca double
  %9 = alloca <2 x double>
  %10 = alloca <2 x double>
  %11 = alloca double
  %SYS1 = load %gemSYS, %gemSYS* %SYS
  %iter_f2 = extractvalue %gemSYS %SYS1, 5
  %TMG4 = extractvalue %gemSYS %SYS1, 0
  %FF6 = extractvalue %gemSYS %SYS1, 1
  %PFF8 = extractvalue %gemSYS %SYS1, 2
  store <4 x double> zeroinitializer, <4 x double>* %m2, !vex-initializer-store !3
  br label %cond

cond:                                             ; preds = %iter, %__llvm_entry
  %res.0 = phi i64 [ 0, %__llvm_entry ], [ %res.1, %iter ]
  %i.0 = phi i64 [ 0, %__llvm_entry ], [ %output309, %iter ]
  %return = call i64 @"lt@III"(i64 %i.0, i64 %iter_f2)
  %12 = icmp ne i64 %return, 0
  br i1 %12, label %body, label %end

body:                                             ; preds = %cond
  %VACTIVE11 = load i64*, i64** %VACTIVE
  %return13 = call i64 @"getcomp@I[II"(i64* %VACTIVE11, i64 %i.0)
  %return14 = call i64 @"not@II"(i64 %return13)
  %13 = icmp ne i64 %return14, 0
  br i1 %13, label %iter, label %end15

end:                                              ; preds = %cond
  %14 = icmp ne i64 %TMG4, 0
  br i1 %14, label %true311, label %end312

iter:                                             ; preds = %true254, %false255, %body
  %res.1 = phi i64 [ %res.0, %body ], [ %output23, %true254 ], [ %output23, %false255 ]
  %output309 = add i64 %i.0, 1
  br label %cond

end15:                                            ; preds = %body
  %output = add i64 %i.0, 1
  %return17 = call i8* @"itoa@SI"(i64 %output)
  %this18 = load %gem, %gem* %this
  %sIDX = extractvalue %gem %this18, 37
  %output20 = call i8** @"append@[SS"(i8** %sIDX, i8* %return17)
  %tmp = load %gem, %gem* %this
  %15 = insertvalue %gem %tmp, i8** %output20, 37
  store %gem %15, %gem* %this
  %output23 = add i64 %res.0, 1
  %return25 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @13, i64 0, i64 0), i8* %return17)
  %return26 = call double @"chf@FS"(i8* %return25)
  %return28 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @14, i64 0, i64 0), i8* %return17)
  %return29 = call double @"chf@FS"(i8* %return28)
  %CLR = extractvalue %gem %15, 17
  %output33 = fmul double %return29, %return26
  %output34 = call double* @"append@[FF"(double* %CLR, double %output33)
  %tmp35 = load %gem, %gem* %this
  %16 = insertvalue %gem %tmp35, double* %output34, 17
  store %gem %16, %gem* %this
  %ONEMINUS = extractvalue %gem %16, 18
  %output38 = fsub double 1.000000e+00, %return29
  %output39 = call double* @"append@[FF"(double* %ONEMINUS, double %output38)
  %tmp40 = load %gem, %gem* %this
  %17 = insertvalue %gem %tmp40, double* %output39, 18
  store %gem %17, %gem* %this
  %ALPHA = extractvalue %gem %17, 19
  %return43 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @15, i64 0, i64 0), i8* %return17)
  %return44 = call double @"chf@FS"(i8* %return43)
  %output45 = call double* @"append@[FF"(double* %ALPHA, double %return44)
  %tmp46 = load %gem, %gem* %this
  %18 = insertvalue %gem %tmp46, double* %output45, 19
  store %gem %18, %gem* %this
  %pp1w = extractvalue %gem %18, 16
  %return49 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @16, i64 0, i64 0), i8* %return17)
  %return50 = call double @"chf@FS"(i8* %return49)
  %output51 = call double* @"append@[FF"(double* %pp1w, double %return50)
  %tmp52 = load %gem, %gem* %this
  %19 = insertvalue %gem %tmp52, double* %output51, 16
  store %gem %19, %gem* %this
  %return55 = call i64 @"neg@II"(i64 1)
  %return56 = call double @"getcomp@F[FI"(double* %output51, i64 %return55)
  %return57 = fcmp ogt double %return56, 0.000000e+00
  %pp1type = extractvalue %gem %19, 5
  br i1 %return57, label %true59, label %false

true59:                                           ; preds = %end15
  %return63 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @17, i64 0, i64 0), i8* %return17)
  %return64 = call i8* @"chs@SS"(i8* %return63)
  %return65 = call i64 @"atoi@IS"(i8* %return64)
  %output66 = call i64* @"append@[II"(i64* %pp1type, i64 %return65)
  %tmp67 = load %gem, %gem* %this
  %20 = insertvalue %gem %tmp67, i64* %output66, 5
  store %gem %20, %gem* %this
  br label %end60

false:                                            ; preds = %end15
  %output71 = call i64* @"resize@[II"(i64* %pp1type, i64 %output23)
  %21 = insertvalue %gem %19, i64* %output71, 5
  store %gem %21, %gem* %this
  br label %end60

end60:                                            ; preds = %false, %true59
  %this73 = load %gem, %gem* %this
  %v1w = extractvalue %gem %this73, 11
  %return75 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @18, i64 0, i64 0), i8* %return17)
  %return76 = call double @"chf@FS"(i8* %return75)
  %output77 = call double* @"append@[FF"(double* %v1w, double %return76)
  %tmp78 = load %gem, %gem* %this
  %22 = insertvalue %gem %tmp78, double* %output77, 11
  store %gem %22, %gem* %this
  %return82 = call double @"getcomp@F[FI"(double* %output77, i64 %return55)
  %return83 = fcmp one double %return82, 0.000000e+00
  %v1type = extractvalue %gem %22, 0
  br i1 %return83, label %true85, label %false86

true85:                                           ; preds = %end60
  %return90 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @19, i64 0, i64 0), i8* %return17)
  %return91 = call i8* @"chs@SS"(i8* %return90)
  %return92 = call i64 @"atoi@IS"(i8* %return91)
  %output93 = call i64* @"append@[II"(i64* %v1type, i64 %return92)
  %tmp94 = load %gem, %gem* %this
  %23 = insertvalue %gem %tmp94, i64* %output93, 0
  store %gem %23, %gem* %this
  br label %end87

false86:                                          ; preds = %end60
  %output98 = call i64* @"resize@[II"(i64* %v1type, i64 %output23)
  %24 = insertvalue %gem %22, i64* %output98, 0
  store %gem %24, %gem* %this
  br label %end87

end87:                                            ; preds = %false86, %true85
  %this100 = load %gem, %gem* %this
  %v2w = extractvalue %gem %this100, 12
  %return102 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @20, i64 0, i64 0), i8* %return17)
  %return103 = call double @"chf@FS"(i8* %return102)
  %output104 = call double* @"append@[FF"(double* %v2w, double %return103)
  %tmp105 = load %gem, %gem* %this
  %25 = insertvalue %gem %tmp105, double* %output104, 12
  store %gem %25, %gem* %this
  %return109 = call double @"getcomp@F[FI"(double* %output104, i64 %return55)
  %return110 = fcmp one double %return109, 0.000000e+00
  %v2type = extractvalue %gem %25, 1
  br i1 %return110, label %true112, label %false113

true112:                                          ; preds = %end87
  %return117 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @21, i64 0, i64 0), i8* %return17)
  %return118 = call i8* @"chs@SS"(i8* %return117)
  %return119 = call i64 @"atoi@IS"(i8* %return118)
  %output120 = call i64* @"append@[II"(i64* %v2type, i64 %return119)
  %tmp121 = load %gem, %gem* %this
  %26 = insertvalue %gem %tmp121, i64* %output120, 1
  store %gem %26, %gem* %this
  br label %end114

false113:                                         ; preds = %end87
  %output125 = call i64* @"resize@[II"(i64* %v2type, i64 %output23)
  %27 = insertvalue %gem %25, i64* %output125, 1
  store %gem %27, %gem* %this
  br label %end114

end114:                                           ; preds = %false113, %true112
  %this127 = load %gem, %gem* %this
  %v3w = extractvalue %gem %this127, 13
  %return129 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @22, i64 0, i64 0), i8* %return17)
  %return130 = call double @"chf@FS"(i8* %return129)
  %output131 = call double* @"append@[FF"(double* %v3w, double %return130)
  %tmp132 = load %gem, %gem* %this
  %28 = insertvalue %gem %tmp132, double* %output131, 13
  store %gem %28, %gem* %this
  %return136 = call double @"getcomp@F[FI"(double* %output131, i64 %return55)
  %return137 = fcmp one double %return136, 0.000000e+00
  %v3type = extractvalue %gem %28, 2
  br i1 %return137, label %true139, label %false140

true139:                                          ; preds = %end114
  %return144 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @23, i64 0, i64 0), i8* %return17)
  %return145 = call i8* @"chs@SS"(i8* %return144)
  %return146 = call i64 @"atoi@IS"(i8* %return145)
  %output147 = call i64* @"append@[II"(i64* %v3type, i64 %return146)
  %tmp148 = load %gem, %gem* %this
  %29 = insertvalue %gem %tmp148, i64* %output147, 2
  store %gem %29, %gem* %this
  br label %end141

false140:                                         ; preds = %end114
  %output152 = call i64* @"resize@[II"(i64* %v3type, i64 %output23)
  %30 = insertvalue %gem %28, i64* %output152, 2
  store %gem %30, %gem* %this
  br label %end141

end141:                                           ; preds = %false140, %true139
  %this154 = load %gem, %gem* %this
  %v4w = extractvalue %gem %this154, 14
  %return156 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @24, i64 0, i64 0), i8* %return17)
  %return157 = call double @"chf@FS"(i8* %return156)
  %output158 = call double* @"append@[FF"(double* %v4w, double %return157)
  %tmp159 = load %gem, %gem* %this
  %31 = insertvalue %gem %tmp159, double* %output158, 14
  store %gem %31, %gem* %this
  %return163 = call double @"getcomp@F[FI"(double* %output158, i64 %return55)
  %return164 = fcmp one double %return163, 0.000000e+00
  %v4type = extractvalue %gem %31, 3
  br i1 %return164, label %true166, label %false167

true166:                                          ; preds = %end141
  %return171 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @25, i64 0, i64 0), i8* %return17)
  %return172 = call i8* @"chs@SS"(i8* %return171)
  %return173 = call i64 @"atoi@IS"(i8* %return172)
  %output174 = call i64* @"append@[II"(i64* %v4type, i64 %return173)
  %tmp175 = load %gem, %gem* %this
  %32 = insertvalue %gem %tmp175, i64* %output174, 3
  store %gem %32, %gem* %this
  br label %end168

false167:                                         ; preds = %end141
  %output179 = call i64* @"resize@[II"(i64* %v4type, i64 %output23)
  %33 = insertvalue %gem %31, i64* %output179, 3
  store %gem %33, %gem* %this
  br label %end168

end168:                                           ; preds = %false167, %true166
  %this181 = load %gem, %gem* %this
  %p1w = extractvalue %gem %this181, 15
  %return183 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @26, i64 0, i64 0), i8* %return17)
  %return184 = call double @"chf@FS"(i8* %return183)
  %output185 = call double* @"append@[FF"(double* %p1w, double %return184)
  %tmp186 = load %gem, %gem* %this
  %34 = insertvalue %gem %tmp186, double* %output185, 15
  store %gem %34, %gem* %this
  %return190 = call double @"getcomp@F[FI"(double* %output185, i64 %return55)
  %return191 = fcmp one double %return190, 0.000000e+00
  %p1type = extractvalue %gem %34, 4
  br i1 %return191, label %true193, label %false194

true193:                                          ; preds = %end168
  %return198 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @27, i64 0, i64 0), i8* %return17)
  %return199 = call i8* @"chs@SS"(i8* %return198)
  %return200 = call i64 @"atoi@IS"(i8* %return199)
  %output201 = call i64* @"append@[II"(i64* %p1type, i64 %return200)
  %tmp202 = load %gem, %gem* %this
  %35 = insertvalue %gem %tmp202, i64* %output201, 4
  store %gem %35, %gem* %this
  br label %end195

false194:                                         ; preds = %end168
  %output206 = call i64* @"resize@[II"(i64* %p1type, i64 %output23)
  %36 = insertvalue %gem %34, i64* %output206, 4
  store %gem %36, %gem* %this
  br label %end195

end195:                                           ; preds = %false194, %true193
  %return209 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @28, i64 0, i64 0), i8* %return17)
  %return210 = call <2 x double> @"chu@US"(i8* %return209)
  %return212 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @29, i64 0, i64 0), i8* %return17)
  %return213 = call <2 x double> @"chu@US"(i8* %return212)
  %return215 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @30, i64 0, i64 0), i8* %return17)
  %return216 = call double @"chf@FS"(i8* %return215)
  store <2 x double> %return210, <2 x double>* %0
  store <2 x double> %return213, <2 x double>* %1
  %return220 = call double @"radians@FF"(double %return216)
  %return221 = call double @"neg@FF"(double %return220)
  store double %return221, double* %2
  call void @"affineRot@2UUF"(<4 x double>* %m2, <2 x double>* %0, <2 x double>* %1, double* %2)
  %this222 = load %gem, %gem* %this
  %x = extractvalue %gem %this222, 25
  %m2223 = load <4 x double>, <4 x double>* %m2
  %return224 = call double @"getcomp@F2II"(<4 x double> %m2223, i64 0, i64 0)
  %return226 = call double @"getcomp@F2II"(<4 x double> %m2223, i64 0, i64 1)
  %return227 = call <2 x double> @"set@UFF"(double %return224, double %return226)
  %output228 = call <2 x double>* @"append@[UU"(<2 x double>* %x, <2 x double> %return227)
  %tmp229 = load %gem, %gem* %this
  %37 = insertvalue %gem %tmp229, <2 x double>* %output228, 25
  store %gem %37, %gem* %this
  %y = extractvalue %gem %37, 26
  %m2231 = load <4 x double>, <4 x double>* %m2
  %return232 = call double @"getcomp@F2II"(<4 x double> %m2231, i64 1, i64 0)
  %return234 = call double @"getcomp@F2II"(<4 x double> %m2231, i64 1, i64 1)
  %return235 = call <2 x double> @"set@UFF"(double %return232, double %return234)
  %output236 = call <2 x double>* @"append@[UU"(<2 x double>* %y, <2 x double> %return235)
  %tmp237 = load %gem, %gem* %this
  %38 = insertvalue %gem %tmp237, <2 x double>* %output236, 26
  store %gem %38, %gem* %this
  %o = extractvalue %gem %38, 27
  %return240 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @31, i64 0, i64 0), i8* %return17)
  %return241 = call <2 x double> @"chu@US"(i8* %return240)
  %output242 = call <2 x double>* @"append@[UU"(<2 x double>* %o, <2 x double> %return241)
  %tmp243 = load %gem, %gem* %this
  %39 = insertvalue %gem %tmp243, <2 x double>* %output242, 27
  store %gem %39, %gem* %this
  %POSTL = extractvalue %gem %39, 6
  %return246 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @32, i64 0, i64 0), i8* %return17)
  %return247 = call i64 @"chi@IS"(i8* %return246)
  %output248 = call i64* @"append@[II"(i64* %POSTL, i64 %return247)
  %tmp249 = load %gem, %gem* %this
  %40 = insertvalue %gem %tmp249, i64* %output248, 6
  store %gem %40, %gem* %this
  %return253 = call i64 @"getcomp@I[II"(i64* %output248, i64 %return55)
  %41 = icmp ne i64 %return253, 0
  br i1 %41, label %true254, label %false255

true254:                                          ; preds = %end195
  %return258 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @33, i64 0, i64 0), i8* %return17)
  %return259 = call <2 x double> @"chu@US"(i8* %return258)
  %return261 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @34, i64 0, i64 0), i8* %return17)
  %return262 = call <2 x double> @"chu@US"(i8* %return261)
  %return264 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @35, i64 0, i64 0), i8* %return17)
  %return265 = call double @"chf@FS"(i8* %return264)
  store <2 x double> %return259, <2 x double>* %3
  store <2 x double> %return262, <2 x double>* %4
  %return269 = call double @"radians@FF"(double %return265)
  %return270 = call double @"neg@FF"(double %return269)
  store double %return270, double* %5
  call void @"affineRot@2UUF"(<4 x double>* %m2, <2 x double>* %3, <2 x double>* %4, double* %5)
  %this271 = load %gem, %gem* %this
  %px = extractvalue %gem %this271, 28
  %m2272 = load <4 x double>, <4 x double>* %m2
  %return273 = call double @"getcomp@F2II"(<4 x double> %m2272, i64 0, i64 0)
  %return275 = call double @"getcomp@F2II"(<4 x double> %m2272, i64 0, i64 1)
  %return276 = call <2 x double> @"set@UFF"(double %return273, double %return275)
  %output277 = call <2 x double>* @"append@[UU"(<2 x double>* %px, <2 x double> %return276)
  %tmp278 = load %gem, %gem* %this
  %42 = insertvalue %gem %tmp278, <2 x double>* %output277, 28
  store %gem %42, %gem* %this
  %py = extractvalue %gem %42, 29
  %m2280 = load <4 x double>, <4 x double>* %m2
  %return281 = call double @"getcomp@F2II"(<4 x double> %m2280, i64 1, i64 0)
  %return283 = call double @"getcomp@F2II"(<4 x double> %m2280, i64 1, i64 1)
  %return284 = call <2 x double> @"set@UFF"(double %return281, double %return283)
  %output285 = call <2 x double>* @"append@[UU"(<2 x double>* %py, <2 x double> %return284)
  %tmp286 = load %gem, %gem* %this
  %43 = insertvalue %gem %tmp286, <2 x double>* %output285, 29
  store %gem %43, %gem* %this
  %po = extractvalue %gem %43, 30
  %return289 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @36, i64 0, i64 0), i8* %return17)
  %return290 = call <2 x double> @"chu@US"(i8* %return289)
  %output291 = call <2 x double>* @"append@[UU"(<2 x double>* %po, <2 x double> %return290)
  %tmp292 = load %gem, %gem* %this
  %44 = insertvalue %gem %tmp292, <2 x double>* %output291, 30
  store %gem %44, %gem* %this
  br label %iter

false255:                                         ; preds = %end195
  %px294 = extractvalue %gem %40, 28
  %output296 = call <2 x double>* @"resize@[UI"(<2 x double>* %px294, i64 %output23)
  %45 = insertvalue %gem %40, <2 x double>* %output296, 28
  %py299 = extractvalue %gem %45, 29
  %output301 = call <2 x double>* @"resize@[UI"(<2 x double>* %py299, i64 %output23)
  %46 = insertvalue %gem %45, <2 x double>* %output301, 29
  %po304 = extractvalue %gem %46, 30
  %output306 = call <2 x double>* @"resize@[UI"(<2 x double>* %po304, i64 %output23)
  %47 = insertvalue %gem %46, <2 x double>* %output306, 30
  store %gem %47, %gem* %this
  br label %iter

true311:                                          ; preds = %end
  %return313 = call double @"chf@FS"(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @37, i64 0, i64 0))
  %tmp314 = load %gem, %gem* %this
  %48 = insertvalue %gem %tmp314, double %return313, 24
  store %gem %48, %gem* %this
  br label %end312

end312:                                           ; preds = %true311, %end
  %49 = icmp ne i64 %FF6, 0
  br i1 %49, label %true316, label %end317

true316:                                          ; preds = %end312
  %return318 = call double @"chf@FS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @38, i64 0, i64 0))
  %tmp319 = load %gem, %gem* %this
  %50 = insertvalue %gem %tmp319, double %return318, 20
  store %gem %50, %gem* %this
  %return321 = fcmp one double %return318, 0.000000e+00
  br i1 %return321, label %true323, label %end324

end317:                                           ; preds = %end351, %true377, %end312
  ret void

true323:                                          ; preds = %true316
  %return325 = call i64 @"chi@IS"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @39, i64 0, i64 0))
  %51 = insertvalue %gem %50, i64 %return325, 7
  store %gem %51, %gem* %this
  br label %end324

end324:                                           ; preds = %true323, %true316
  %return327 = call double @"chf@FS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @40, i64 0, i64 0))
  %tmp328 = load %gem, %gem* %this
  %52 = insertvalue %gem %tmp328, double %return327, 21
  store %gem %52, %gem* %this
  %return330 = fcmp one double %return327, 0.000000e+00
  br i1 %return330, label %true332, label %end333

true332:                                          ; preds = %end324
  %return334 = call i64 @"chi@IS"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @41, i64 0, i64 0))
  %53 = insertvalue %gem %52, i64 %return334, 8
  store %gem %53, %gem* %this
  br label %end333

end333:                                           ; preds = %true332, %end324
  %return336 = call double @"chf@FS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @42, i64 0, i64 0))
  %tmp337 = load %gem, %gem* %this
  %54 = insertvalue %gem %tmp337, double %return336, 22
  store %gem %54, %gem* %this
  %return339 = fcmp one double %return336, 0.000000e+00
  br i1 %return339, label %true341, label %end342

true341:                                          ; preds = %end333
  %return343 = call i64 @"chi@IS"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @43, i64 0, i64 0))
  %55 = insertvalue %gem %54, i64 %return343, 9
  store %gem %55, %gem* %this
  br label %end342

end342:                                           ; preds = %true341, %end333
  %return345 = call double @"chf@FS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @44, i64 0, i64 0))
  %tmp346 = load %gem, %gem* %this
  %56 = insertvalue %gem %tmp346, double %return345, 23
  store %gem %56, %gem* %this
  %return348 = fcmp one double %return345, 0.000000e+00
  br i1 %return348, label %true350, label %end351

true350:                                          ; preds = %end342
  %return352 = call i64 @"chi@IS"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @45, i64 0, i64 0))
  %57 = insertvalue %gem %56, i64 %return352, 10
  store %gem %57, %gem* %this
  br label %end351

end351:                                           ; preds = %true350, %end342
  %return354 = call <2 x double> @"chu@US"(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @46, i64 0, i64 0))
  %return355 = call <2 x double> @"chu@US"(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @47, i64 0, i64 0))
  %return356 = call double @"chf@FS"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @48, i64 0, i64 0))
  store <2 x double> %return354, <2 x double>* %6
  store <2 x double> %return355, <2 x double>* %7
  %return360 = call double @"radians@FF"(double %return356)
  %return361 = call double @"neg@FF"(double %return360)
  store double %return361, double* %8
  call void @"affineRot@2UUF"(<4 x double>* %m2, <2 x double>* %6, <2 x double>* %7, double* %8)
  %m2362 = load <4 x double>, <4 x double>* %m2
  %return363 = call double @"getcomp@F2II"(<4 x double> %m2362, i64 0, i64 0)
  %return365 = call double @"getcomp@F2II"(<4 x double> %m2362, i64 0, i64 1)
  %return366 = call <2 x double> @"set@UFF"(double %return363, double %return365)
  %tmp367 = load %gem, %gem* %this
  %58 = insertvalue %gem %tmp367, <2 x double> %return366, 31
  %return369 = call double @"getcomp@F2II"(<4 x double> %m2362, i64 1, i64 0)
  %return371 = call double @"getcomp@F2II"(<4 x double> %m2362, i64 1, i64 1)
  %return372 = call <2 x double> @"set@UFF"(double %return369, double %return371)
  %59 = insertvalue %gem %58, <2 x double> %return372, 32
  %return374 = call <2 x double> @"chu@US"(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @49, i64 0, i64 0))
  %60 = insertvalue %gem %59, <2 x double> %return374, 33
  store %gem %60, %gem* %this
  %61 = icmp ne i64 %PFF8, 0
  br i1 %61, label %true377, label %end317

true377:                                          ; preds = %end351
  %return379 = call <2 x double> @"chu@US"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @50, i64 0, i64 0))
  %return380 = call <2 x double> @"chu@US"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @51, i64 0, i64 0))
  %return381 = call double @"chf@FS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @52, i64 0, i64 0))
  store <2 x double> %return379, <2 x double>* %9
  store <2 x double> %return380, <2 x double>* %10
  %return385 = call double @"radians@FF"(double %return381)
  %return386 = call double @"neg@FF"(double %return385)
  store double %return386, double* %11
  call void @"affineRot@2UUF"(<4 x double>* %m2, <2 x double>* %9, <2 x double>* %10, double* %11)
  %m2387 = load <4 x double>, <4 x double>* %m2
  %return388 = call double @"getcomp@F2II"(<4 x double> %m2387, i64 0, i64 0)
  %return390 = call double @"getcomp@F2II"(<4 x double> %m2387, i64 0, i64 1)
  %return391 = call <2 x double> @"set@UFF"(double %return388, double %return390)
  %tmp392 = load %gem, %gem* %this
  %62 = insertvalue %gem %tmp392, <2 x double> %return391, 34
  %return394 = call double @"getcomp@F2II"(<4 x double> %m2387, i64 1, i64 0)
  %return396 = call double @"getcomp@F2II"(<4 x double> %m2387, i64 1, i64 1)
  %return397 = call <2 x double> @"set@UFF"(double %return394, double %return396)
  %63 = insertvalue %gem %62, <2 x double> %return397, 35
  %return399 = call <2 x double> @"chu@US"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @53, i64 0, i64 0))
  %64 = insertvalue %gem %63, <2 x double> %return399, 36
  store %gem %64, %gem* %this
  br label %end317
}

; Function Attrs: nounwind readnone
declare i64 @"getcomp@I[II"(i64*, i64) #1

; Function Attrs: nounwind readnone
declare i8* @"itoa@SI"(i64) #1

; Function Attrs: nounwind
declare i8** @"append@[SS"(i8**, i8*) #3

; Function Attrs: nounwind readnone
declare i8* @"concat@SSS"(i8*, i8*) #1

; Function Attrs: nounwind readnone
declare double @"chf@FS"(i8*) #1

; Function Attrs: nounwind readnone
declare i8* @"chs@SS"(i8*) #1

; Function Attrs: nounwind readnone
declare i64 @"atoi@IS"(i8*) #1

; Function Attrs: nounwind
declare i64* @"append@[II"(i64*, i64) #3

; Function Attrs: nounwind readnone
declare i64* @"resize@[II"(i64*, i64) #1

; Function Attrs: nounwind readnone
declare <2 x double> @"chu@US"(i8*) #1

; Function Attrs: nounwind
declare double @"radians@FF"(double) #3

; Function Attrs: nounwind readnone
declare double @"getcomp@F2II"(<4 x double>, i64, i64) #1

; Function Attrs: nounwind
declare <2 x double>* @"append@[UU"(<2 x double>*, <2 x double>) #3

; Function Attrs: nounwind readnone
declare <2 x double>* @"resize@[UI"(<2 x double>*, i64) #1

; Function Attrs: alwaysinline nounwind
define private %gem @"gem@Z3gemM38N6v1type[IN6v2type[IN6v3type[IN6v4type[IN6p1type[IN7pp1type[IN5POSTL[IN8ffv1typeIN8ffv2typeIN8ffv3typeIN8ffp1typeIN3v1w[FN3v2w[FN3v3w[FN3v4w[FN3p1w[FN4pp1w[FN3CLR[FN8ONEMINUS[FN5ALPHA[FN5ffv1wFN5ffv2wFN5ffv3wFN5ffp1wFN3grtFN1x[UN1y[UN1o[UN2px[UN2py[UN2po[UN2fxUN2fyUN2foUN3pfxUN3pfyUN3pfoUN4sIDX[S[I[I[I[I[I[I[IIIII[F[F[F[F[F[F[F[F[FFFFFF[U[U[U[U[U[UUUUUUU[S"(i64** %v1type, i64** %v2type, i64** %v3type, i64** %v4type, i64** %p1type, i64** %pp1type, i64** %POSTL, i64* %ffv1type, i64* %ffv2type, i64* %ffv3type, i64* %ffp1type, double** %v1w, double** %v2w, double** %v3w, double** %v4w, double** %p1w, double** %pp1w, double** %CLR, double** %ONEMINUS, double** %ALPHA, double* %ffv1w, double* %ffv2w, double* %ffv3w, double* %ffp1w, double* %grt, <2 x double>** %x, <2 x double>** %y, <2 x double>** %o, <2 x double>** %px, <2 x double>** %py, <2 x double>** %po, <2 x double>* %fx, <2 x double>* %fy, <2 x double>* %fo, <2 x double>* %pfx, <2 x double>* %pfy, <2 x double>* %pfo, i8*** %sIDX) #0 {
__llvm_entry:
  %v1type1 = load i64*, i64** %v1type
  %0 = insertvalue %gem undef, i64* %v1type1, 0
  %v2type2 = load i64*, i64** %v2type
  %1 = insertvalue %gem %0, i64* %v2type2, 1
  %v3type4 = load i64*, i64** %v3type
  %2 = insertvalue %gem %1, i64* %v3type4, 2
  %v4type6 = load i64*, i64** %v4type
  %3 = insertvalue %gem %2, i64* %v4type6, 3
  %p1type8 = load i64*, i64** %p1type
  %4 = insertvalue %gem %3, i64* %p1type8, 4
  %pp1type10 = load i64*, i64** %pp1type
  %5 = insertvalue %gem %4, i64* %pp1type10, 5
  %POSTL12 = load i64*, i64** %POSTL
  %6 = insertvalue %gem %5, i64* %POSTL12, 6
  %ffv1type14 = load i64, i64* %ffv1type
  %7 = insertvalue %gem %6, i64 %ffv1type14, 7
  %ffv2type16 = load i64, i64* %ffv2type
  %8 = insertvalue %gem %7, i64 %ffv2type16, 8
  %ffv3type18 = load i64, i64* %ffv3type
  %9 = insertvalue %gem %8, i64 %ffv3type18, 9
  %ffp1type20 = load i64, i64* %ffp1type
  %10 = insertvalue %gem %9, i64 %ffp1type20, 10
  %v1w22 = load double*, double** %v1w
  %11 = insertvalue %gem %10, double* %v1w22, 11
  %v2w24 = load double*, double** %v2w
  %12 = insertvalue %gem %11, double* %v2w24, 12
  %v3w26 = load double*, double** %v3w
  %13 = insertvalue %gem %12, double* %v3w26, 13
  %v4w28 = load double*, double** %v4w
  %14 = insertvalue %gem %13, double* %v4w28, 14
  %p1w30 = load double*, double** %p1w
  %15 = insertvalue %gem %14, double* %p1w30, 15
  %pp1w32 = load double*, double** %pp1w
  %16 = insertvalue %gem %15, double* %pp1w32, 16
  %CLR34 = load double*, double** %CLR
  %17 = insertvalue %gem %16, double* %CLR34, 17
  %ONEMINUS36 = load double*, double** %ONEMINUS
  %18 = insertvalue %gem %17, double* %ONEMINUS36, 18
  %ALPHA38 = load double*, double** %ALPHA
  %19 = insertvalue %gem %18, double* %ALPHA38, 19
  %ffv1w40 = load double, double* %ffv1w
  %20 = insertvalue %gem %19, double %ffv1w40, 20
  %ffv2w42 = load double, double* %ffv2w
  %21 = insertvalue %gem %20, double %ffv2w42, 21
  %ffv3w44 = load double, double* %ffv3w
  %22 = insertvalue %gem %21, double %ffv3w44, 22
  %ffp1w46 = load double, double* %ffp1w
  %23 = insertvalue %gem %22, double %ffp1w46, 23
  %grt48 = load double, double* %grt
  %24 = insertvalue %gem %23, double %grt48, 24
  %x50 = load <2 x double>*, <2 x double>** %x
  %25 = insertvalue %gem %24, <2 x double>* %x50, 25
  %y52 = load <2 x double>*, <2 x double>** %y
  %26 = insertvalue %gem %25, <2 x double>* %y52, 26
  %o54 = load <2 x double>*, <2 x double>** %o
  %27 = insertvalue %gem %26, <2 x double>* %o54, 27
  %px56 = load <2 x double>*, <2 x double>** %px
  %28 = insertvalue %gem %27, <2 x double>* %px56, 28
  %py58 = load <2 x double>*, <2 x double>** %py
  %29 = insertvalue %gem %28, <2 x double>* %py58, 29
  %po60 = load <2 x double>*, <2 x double>** %po
  %30 = insertvalue %gem %29, <2 x double>* %po60, 30
  %fx62 = load <2 x double>, <2 x double>* %fx
  %31 = insertvalue %gem %30, <2 x double> %fx62, 31
  %fy64 = load <2 x double>, <2 x double>* %fy
  %32 = insertvalue %gem %31, <2 x double> %fy64, 32
  %fo66 = load <2 x double>, <2 x double>* %fo
  %33 = insertvalue %gem %32, <2 x double> %fo66, 33
  %pfx68 = load <2 x double>, <2 x double>* %pfx
  %34 = insertvalue %gem %33, <2 x double> %pfx68, 34
  %pfy70 = load <2 x double>, <2 x double>* %pfy
  %35 = insertvalue %gem %34, <2 x double> %pfy70, 35
  %pfo72 = load <2 x double>, <2 x double>* %pfo
  %36 = insertvalue %gem %35, <2 x double> %pfo72, 36
  %sIDX74 = load i8**, i8*** %sIDX
  %37 = insertvalue %gem %36, i8** %sIDX74, 37
  ret %gem %37
}

; Function Attrs: alwaysinline nounwind
define private %gem @"gem@Z3gemM38N6v1type[IN6v2type[IN6v3type[IN6v4type[IN6p1type[IN7pp1type[IN5POSTL[IN8ffv1typeIN8ffv2typeIN8ffv3typeIN8ffp1typeIN3v1w[FN3v2w[FN3v3w[FN3v4w[FN3p1w[FN4pp1w[FN3CLR[FN8ONEMINUS[FN5ALPHA[FN5ffv1wFN5ffv2wFN5ffv3wFN5ffp1wFN3grtFN1x[UN1y[UN1o[UN2px[UN2py[UN2po[UN2fxUN2fyUN2foUN3pfxUN3pfyUN3pfoUN4sIDX[S"() #0 {
__llvm_entry:
  %0 = alloca i64*
  %1 = alloca i64*
  %2 = alloca i64*
  %3 = alloca i64*
  %4 = alloca i64*
  %5 = alloca i64*
  %6 = alloca i64
  %7 = alloca i64
  %8 = alloca i64
  %9 = alloca i64
  %10 = alloca double*
  %11 = alloca double*
  %12 = alloca double*
  %13 = alloca double*
  %14 = alloca double*
  %15 = alloca double*
  %16 = alloca double*
  %17 = alloca double*
  %18 = alloca double*
  %19 = alloca double
  %20 = alloca double
  %21 = alloca double
  %22 = alloca double
  %23 = alloca double
  %24 = alloca <2 x double>*
  %25 = alloca <2 x double>*
  %26 = alloca <2 x double>*
  %27 = alloca <2 x double>*
  %28 = alloca <2 x double>*
  %29 = alloca <2 x double>*
  %30 = alloca <2 x double>
  %31 = alloca <2 x double>
  %32 = alloca <2 x double>
  %33 = alloca <2 x double>
  %34 = alloca <2 x double>
  %35 = alloca <2 x double>
  %36 = alloca i8**
  %37 = alloca i64*
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @54, i64 0, i64 0), i64** %37
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @54, i64 0, i64 0), i64** %0
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @54, i64 0, i64 0), i64** %1
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @54, i64 0, i64 0), i64** %2
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @54, i64 0, i64 0), i64** %3
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @54, i64 0, i64 0), i64** %4
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @54, i64 0, i64 0), i64** %5
  store i64 0, i64* %6
  store i64 0, i64* %7
  store i64 0, i64* %8
  store i64 0, i64* %9
  store double* getelementptr inbounds ([0 x double], [0 x double]* @55, i64 0, i64 0), double** %10
  store double* getelementptr inbounds ([0 x double], [0 x double]* @55, i64 0, i64 0), double** %11
  store double* getelementptr inbounds ([0 x double], [0 x double]* @55, i64 0, i64 0), double** %12
  store double* getelementptr inbounds ([0 x double], [0 x double]* @55, i64 0, i64 0), double** %13
  store double* getelementptr inbounds ([0 x double], [0 x double]* @55, i64 0, i64 0), double** %14
  store double* getelementptr inbounds ([0 x double], [0 x double]* @55, i64 0, i64 0), double** %15
  store double* getelementptr inbounds ([0 x double], [0 x double]* @55, i64 0, i64 0), double** %16
  store double* getelementptr inbounds ([0 x double], [0 x double]* @55, i64 0, i64 0), double** %17
  store double* getelementptr inbounds ([0 x double], [0 x double]* @55, i64 0, i64 0), double** %18
  store double 0.000000e+00, double* %19
  store double 0.000000e+00, double* %20
  store double 0.000000e+00, double* %21
  store double 0.000000e+00, double* %22
  store double 0.000000e+00, double* %23
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @56, i64 0, i64 0), <2 x double>** %24
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @56, i64 0, i64 0), <2 x double>** %25
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @56, i64 0, i64 0), <2 x double>** %26
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @56, i64 0, i64 0), <2 x double>** %27
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @56, i64 0, i64 0), <2 x double>** %28
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @56, i64 0, i64 0), <2 x double>** %29
  store <2 x double> zeroinitializer, <2 x double>* %30
  store <2 x double> zeroinitializer, <2 x double>* %31
  store <2 x double> zeroinitializer, <2 x double>* %32
  store <2 x double> zeroinitializer, <2 x double>* %33
  store <2 x double> zeroinitializer, <2 x double>* %34
  store <2 x double> zeroinitializer, <2 x double>* %35
  store i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @57, i64 0, i64 0), i8*** %36
  %gem = call %gem @"gem@Z3gemM38N6v1type[IN6v2type[IN6v3type[IN6v4type[IN6p1type[IN7pp1type[IN5POSTL[IN8ffv1typeIN8ffv2typeIN8ffv3typeIN8ffp1typeIN3v1w[FN3v2w[FN3v3w[FN3v4w[FN3p1w[FN4pp1w[FN3CLR[FN8ONEMINUS[FN5ALPHA[FN5ffv1wFN5ffv2wFN5ffv3wFN5ffp1wFN3grtFN1x[UN1y[UN1o[UN2px[UN2py[UN2po[UN2fxUN2fyUN2foUN3pfxUN3pfyUN3pfoUN4sIDX[S[I[I[I[I[I[I[IIIII[F[F[F[F[F[F[F[F[FFFFFF[U[U[U[U[U[UUUUUUU[S"(i64** %37, i64** %0, i64** %1, i64** %2, i64** %3, i64** %4, i64** %5, i64* %6, i64* %7, i64* %8, i64* %9, double** %10, double** %11, double** %12, double** %13, double** %14, double** %15, double** %16, double** %17, double** %18, double* %19, double* %20, double* %21, double* %22, double* %23, <2 x double>** %24, <2 x double>** %25, <2 x double>** %26, <2 x double>** %27, <2 x double>** %28, <2 x double>** %29, <2 x double>* %30, <2 x double>* %31, <2 x double>* %32, <2 x double>* %33, <2 x double>* %34, <2 x double>* %35, i8*** %36)
  ret %gem %gem
}

; Function Attrs: alwaysinline nounwind
define private void @"gemPrmBuild@Z6gemPrmM51N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[P[S[I[F"(%gemPrm* %this, i8*** %sIDX, i64** %GEMTYPE, double** %w) #0 {
__llvm_entry:
  %GEMTYPE1 = load i64*, i64** %GEMTYPE
  %return = call i64 @"max@I[I"(i64* %GEMTYPE1)
  %return2 = call i64 @"gt@III"(i64 %return, i64 26)
  %0 = icmp ne i64 %return2, 0
  br i1 %0, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %GEMTYPE3 = load i64*, i64** %GEMTYPE
  %return4 = call i64 @"len@I[I"(i64* %GEMTYPE3)
  %this5 = load %gemPrm, %gemPrm* %this
  %rings2_val = extractvalue %gemPrm %this5, 0
  %output = call double* @"resize@[FI"(double* %rings2_val, i64 %return4)
  %1 = insertvalue %gemPrm %this5, double* %output, 0
  %2 = insertvalue %gemPrm %1, double* %output, 5
  %3 = insertvalue %gemPrm %2, double* %output, 4
  %4 = insertvalue %gemPrm %3, double* %output, 3
  %5 = insertvalue %gemPrm %4, double* %output, 2
  %6 = insertvalue %gemPrm %5, double* %output, 1
  %blob = extractvalue %gemPrm %6, 6
  %output16 = call <3 x double>* @"resize@[VI"(<3 x double>* %blob, i64 %return4)
  %7 = insertvalue %gemPrm %6, <3 x double>* %output16, 6
  %8 = insertvalue %gemPrm %7, <3 x double>* %output16, 11
  %9 = insertvalue %gemPrm %8, <3 x double>* %output16, 10
  %10 = insertvalue %gemPrm %9, <3 x double>* %output16, 9
  %11 = insertvalue %gemPrm %10, <3 x double>* %output16, 8
  %12 = insertvalue %gemPrm %11, <3 x double>* %output16, 7
  %curl_c = extractvalue %gemPrm %12, 13
  %output27 = call <2 x double>* @"resize@[UI"(<2 x double>* %curl_c, i64 %return4)
  %13 = insertvalue %gemPrm %12, <2 x double>* %output27, 13
  %14 = insertvalue %gemPrm %13, <2 x double>* %output27, 41
  %15 = insertvalue %gemPrm %14, <2 x double>* %output27, 40
  %16 = insertvalue %gemPrm %15, <2 x double>* %output27, 39
  %17 = insertvalue %gemPrm %16, <2 x double>* %output27, 38
  %18 = insertvalue %gemPrm %17, <2 x double>* %output27, 37
  %19 = insertvalue %gemPrm %18, <2 x double>* %output27, 36
  %20 = insertvalue %gemPrm %19, <2 x double>* %output27, 35
  %21 = insertvalue %gemPrm %20, <2 x double>* %output27, 34
  %22 = insertvalue %gemPrm %21, <2 x double>* %output27, 33
  %23 = insertvalue %gemPrm %22, <2 x double>* %output27, 32
  %24 = insertvalue %gemPrm %23, <2 x double>* %output27, 31
  %25 = insertvalue %gemPrm %24, <2 x double>* %output27, 30
  %26 = insertvalue %gemPrm %25, <2 x double>* %output27, 29
  %27 = insertvalue %gemPrm %26, <2 x double>* %output27, 28
  %28 = insertvalue %gemPrm %27, <2 x double>* %output27, 27
  %29 = insertvalue %gemPrm %28, <2 x double>* %output27, 26
  %30 = insertvalue %gemPrm %29, <2 x double>* %output27, 25
  %31 = insertvalue %gemPrm %30, <2 x double>* %output27, 24
  %32 = insertvalue %gemPrm %31, <2 x double>* %output27, 23
  %33 = insertvalue %gemPrm %32, <2 x double>* %output27, 22
  %34 = insertvalue %gemPrm %33, <2 x double>* %output27, 21
  %35 = insertvalue %gemPrm %34, <2 x double>* %output27, 20
  %36 = insertvalue %gemPrm %35, <2 x double>* %output27, 19
  %37 = insertvalue %gemPrm %36, <2 x double>* %output27, 18
  %38 = insertvalue %gemPrm %37, <2 x double>* %output27, 17
  %39 = insertvalue %gemPrm %38, <2 x double>* %output27, 16
  %40 = insertvalue %gemPrm %39, <2 x double>* %output27, 15
  %41 = insertvalue %gemPrm %40, <2 x double>* %output27, 14
  %ngon = extractvalue %gemPrm %41, 42
  %output61 = call <4 x double>* @"resize@[PI"(<4 x double>* %ngon, i64 %return4)
  %42 = insertvalue %gemPrm %41, <4 x double>* %output61, 42
  %43 = insertvalue %gemPrm %42, <4 x double>* %output61, 50
  %44 = insertvalue %gemPrm %43, <4 x double>* %output61, 49
  %45 = insertvalue %gemPrm %44, <4 x double>* %output61, 48
  %46 = insertvalue %gemPrm %45, <4 x double>* %output61, 47
  %47 = insertvalue %gemPrm %46, <4 x double>* %output61, 46
  %48 = insertvalue %gemPrm %47, <4 x double>* %output61, 45
  %49 = insertvalue %gemPrm %48, <4 x double>* %output61, 44
  %50 = insertvalue %gemPrm %49, <4 x double>* %output61, 43
  store %gemPrm %50, %gemPrm* %this
  br label %cond

end:                                              ; preds = %cond, %__llvm_entry
  ret void

cond:                                             ; preds = %iter, %true
  %i.0 = phi i64 [ 0, %true ], [ %output776, %iter ]
  %return75 = call i64 @"lt@III"(i64 %i.0, i64 %return4)
  %51 = icmp ne i64 %return75, 0
  br i1 %51, label %body, label %end

body:                                             ; preds = %cond
  %GEMTYPE77 = load i64*, i64** %GEMTYPE
  %return79 = call i64 @"getcomp@I[II"(i64* %GEMTYPE77, i64 %i.0)
  %sIDX80 = load i8**, i8*** %sIDX
  %return82 = call i8* @"getcomp@S[SI"(i8** %sIDX80, i64 %i.0)
  %return84 = call i64 @"lt@III"(i64 %return79, i64 27)
  %w85 = load double*, double** %w
  %return87 = call double @"getcomp@F[FI"(double* %w85, i64 %i.0)
  %return88 = fcmp oeq double %return87, 0.000000e+00
  %return89 = zext i1 %return88 to i64
  %return90 = call i64 @"or@III"(i64 %return84, i64 %return89)
  %52 = icmp ne i64 %return90, 0
  br i1 %52, label %iter, label %false

iter:                                             ; preds = %false724, %false558, %false97, %false367, %false219, %body, %true746, %true723, %true709, %true686, %true663, %true649, %true635, %true612, %true598, %true584, %true571, %true557, %true543, %true529, %true515, %true492, %true469, %true455, %true441, %true418, %true404, %true380, %true366, %true352, %true338, %true324, %true310, %true296, %true273, %true259, %true245, %true232, %true218, %true204, %true190, %true176, %true162, %true148, %true134, %true120, %true106
  %output776 = add i64 %i.0, 1
  br label %cond

false:                                            ; preds = %body
  %cast = sitofp i64 %return79 to double
  %return94 = call i64 @"find@I[FF"(double* getelementptr inbounds ([20 x double], [20 x double]* @58, i64 0, i64 0), double %cast)
  %return95 = call i64 @"ge@III"(i64 %return94, i64 0)
  %53 = icmp ne i64 %return95, 0
  br i1 %53, label %true96, label %false97

true96:                                           ; preds = %false
  %return100 = call i64 @"lt@III"(i64 %return79, i64 38)
  %54 = icmp ne i64 %return100, 0
  br i1 %54, label %true101, label %false102

false97:                                          ; preds = %false
  %return393 = call i64 @"find@I[FF"(double* getelementptr inbounds ([21 x double], [21 x double]* @80, i64 0, i64 0), double %cast)
  %return394 = call i64 @"ge@III"(i64 %return393, i64 0)
  %55 = icmp ne i64 %return394, 0
  br i1 %55, label %true395, label %iter

true101:                                          ; preds = %true96
  %return105 = call i64 @"eq@III"(i64 %return79, i64 27)
  %56 = icmp ne i64 %return105, 0
  br i1 %56, label %true106, label %false107

false102:                                         ; preds = %true96
  %return244 = call i64 @"eq@III"(i64 %return79, i64 38)
  %57 = icmp ne i64 %return244, 0
  br i1 %57, label %true245, label %false246

true106:                                          ; preds = %true101
  %return111 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @59, i64 0, i64 0), i8* %return82)
  %return112 = call <2 x double> @"chu@US"(i8* %return111)
  %tmp113 = load %gemPrm, %gemPrm* %this
  %tmp114 = extractvalue %gemPrm %tmp113, 13
  %return115 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp114, <2 x double> %return112, i64 %i.0)
  %output117 = extractvalue { <2 x double>, <2 x double>* } %return115, 1
  %58 = insertvalue %gemPrm %tmp113, <2 x double>* %output117, 13
  store %gemPrm %58, %gemPrm* %this
  br label %iter

false107:                                         ; preds = %true101
  %return119 = call i64 @"eq@III"(i64 %return79, i64 28)
  %59 = icmp ne i64 %return119, 0
  br i1 %59, label %true120, label %false121

true120:                                          ; preds = %false107
  %return125 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @60, i64 0, i64 0), i8* %return82)
  %return126 = call <4 x double> @"chp@PS"(i8* %return125)
  %tmp127 = load %gemPrm, %gemPrm* %this
  %tmp128 = extractvalue %gemPrm %tmp127, 42
  %return129 = call { <4 x double>, <4 x double>* } @"setcomp@P[PPI"(<4 x double>* %tmp128, <4 x double> %return126, i64 %i.0)
  %output131 = extractvalue { <4 x double>, <4 x double>* } %return129, 1
  %60 = insertvalue %gemPrm %tmp127, <4 x double>* %output131, 42
  store %gemPrm %60, %gemPrm* %this
  br label %iter

false121:                                         ; preds = %false107
  %return133 = call i64 @"eq@III"(i64 %return79, i64 29)
  %61 = icmp ne i64 %return133, 0
  br i1 %61, label %true134, label %false135

true134:                                          ; preds = %false121
  %return139 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @61, i64 0, i64 0), i8* %return82)
  %return140 = call <4 x double> @"chp@PS"(i8* %return139)
  %tmp141 = load %gemPrm, %gemPrm* %this
  %tmp142 = extractvalue %gemPrm %tmp141, 43
  %return143 = call { <4 x double>, <4 x double>* } @"setcomp@P[PPI"(<4 x double>* %tmp142, <4 x double> %return140, i64 %i.0)
  %output145 = extractvalue { <4 x double>, <4 x double>* } %return143, 1
  %62 = insertvalue %gemPrm %tmp141, <4 x double>* %output145, 43
  store %gemPrm %62, %gemPrm* %this
  br label %iter

false135:                                         ; preds = %false121
  %return147 = call i64 @"eq@III"(i64 %return79, i64 30)
  %63 = icmp ne i64 %return147, 0
  br i1 %63, label %true148, label %false149

true148:                                          ; preds = %false135
  %return153 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @62, i64 0, i64 0), i8* %return82)
  %return154 = call <3 x double> @"chv@VS"(i8* %return153)
  %tmp155 = load %gemPrm, %gemPrm* %this
  %tmp156 = extractvalue %gemPrm %tmp155, 6
  %return157 = call { <3 x double>, <3 x double>* } @"setcomp@V[VVI"(<3 x double>* %tmp156, <3 x double> %return154, i64 %i.0)
  %output159 = extractvalue { <3 x double>, <3 x double>* } %return157, 1
  %64 = insertvalue %gemPrm %tmp155, <3 x double>* %output159, 6
  store %gemPrm %64, %gemPrm* %this
  br label %iter

false149:                                         ; preds = %false135
  %return161 = call i64 @"eq@III"(i64 %return79, i64 31)
  %65 = icmp ne i64 %return161, 0
  br i1 %65, label %true162, label %false163

true162:                                          ; preds = %false149
  %return167 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @63, i64 0, i64 0), i8* %return82)
  %return168 = call <2 x double> @"chu@US"(i8* %return167)
  %tmp169 = load %gemPrm, %gemPrm* %this
  %tmp170 = extractvalue %gemPrm %tmp169, 32
  %return171 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp170, <2 x double> %return168, i64 %i.0)
  %output173 = extractvalue { <2 x double>, <2 x double>* } %return171, 1
  %66 = insertvalue %gemPrm %tmp169, <2 x double>* %output173, 32
  store %gemPrm %66, %gemPrm* %this
  br label %iter

false163:                                         ; preds = %false149
  %return175 = call i64 @"eq@III"(i64 %return79, i64 32)
  %67 = icmp ne i64 %return175, 0
  br i1 %67, label %true176, label %false177

true176:                                          ; preds = %false163
  %return181 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @64, i64 0, i64 0), i8* %return82)
  %return182 = call <2 x double> @"chu@US"(i8* %return181)
  %tmp183 = load %gemPrm, %gemPrm* %this
  %tmp184 = extractvalue %gemPrm %tmp183, 33
  %return185 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp184, <2 x double> %return182, i64 %i.0)
  %output187 = extractvalue { <2 x double>, <2 x double>* } %return185, 1
  %68 = insertvalue %gemPrm %tmp183, <2 x double>* %output187, 33
  store %gemPrm %68, %gemPrm* %this
  br label %iter

false177:                                         ; preds = %false163
  %return189 = call i64 @"eq@III"(i64 %return79, i64 34)
  %69 = icmp ne i64 %return189, 0
  br i1 %69, label %true190, label %false191

true190:                                          ; preds = %false177
  %return195 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @65, i64 0, i64 0), i8* %return82)
  %return196 = call <2 x double> @"chu@US"(i8* %return195)
  %tmp197 = load %gemPrm, %gemPrm* %this
  %tmp198 = extractvalue %gemPrm %tmp197, 15
  %return199 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp198, <2 x double> %return196, i64 %i.0)
  %output201 = extractvalue { <2 x double>, <2 x double>* } %return199, 1
  %70 = insertvalue %gemPrm %tmp197, <2 x double>* %output201, 15
  store %gemPrm %70, %gemPrm* %this
  br label %iter

false191:                                         ; preds = %false177
  %return203 = call i64 @"eq@III"(i64 %return79, i64 35)
  %71 = icmp ne i64 %return203, 0
  br i1 %71, label %true204, label %false205

true204:                                          ; preds = %false191
  %return209 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @66, i64 0, i64 0), i8* %return82)
  %return210 = call double @"chf@FS"(i8* %return209)
  %tmp211 = load %gemPrm, %gemPrm* %this
  %tmp212 = extractvalue %gemPrm %tmp211, 0
  %return213 = call { double, double* } @"setcomp@F[FFI"(double* %tmp212, double %return210, i64 %i.0)
  %output215 = extractvalue { double, double* } %return213, 1
  %72 = insertvalue %gemPrm %tmp211, double* %output215, 0
  store %gemPrm %72, %gemPrm* %this
  br label %iter

false205:                                         ; preds = %false191
  %return217 = call i64 @"eq@III"(i64 %return79, i64 36)
  %73 = icmp ne i64 %return217, 0
  br i1 %73, label %true218, label %false219

true218:                                          ; preds = %false205
  %return223 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @67, i64 0, i64 0), i8* %return82)
  %return224 = call <2 x double> @"chu@US"(i8* %return223)
  %tmp225 = load %gemPrm, %gemPrm* %this
  %tmp226 = extractvalue %gemPrm %tmp225, 16
  %return227 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp226, <2 x double> %return224, i64 %i.0)
  %output229 = extractvalue { <2 x double>, <2 x double>* } %return227, 1
  %74 = insertvalue %gemPrm %tmp225, <2 x double>* %output229, 16
  store %gemPrm %74, %gemPrm* %this
  br label %iter

false219:                                         ; preds = %false205
  %return231 = call i64 @"eq@III"(i64 %return79, i64 37)
  %75 = icmp ne i64 %return231, 0
  br i1 %75, label %true232, label %iter

true232:                                          ; preds = %false219
  %return236 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @68, i64 0, i64 0), i8* %return82)
  %return237 = call <2 x double> @"chu@US"(i8* %return236)
  %tmp238 = load %gemPrm, %gemPrm* %this
  %tmp239 = extractvalue %gemPrm %tmp238, 34
  %return240 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp239, <2 x double> %return237, i64 %i.0)
  %output242 = extractvalue { <2 x double>, <2 x double>* } %return240, 1
  %76 = insertvalue %gemPrm %tmp238, <2 x double>* %output242, 34
  store %gemPrm %76, %gemPrm* %this
  br label %iter

true245:                                          ; preds = %false102
  %return250 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @69, i64 0, i64 0), i8* %return82)
  %return251 = call <3 x double> @"chv@VS"(i8* %return250)
  %tmp252 = load %gemPrm, %gemPrm* %this
  %tmp253 = extractvalue %gemPrm %tmp252, 7
  %return254 = call { <3 x double>, <3 x double>* } @"setcomp@V[VVI"(<3 x double>* %tmp253, <3 x double> %return251, i64 %i.0)
  %output256 = extractvalue { <3 x double>, <3 x double>* } %return254, 1
  %77 = insertvalue %gemPrm %tmp252, <3 x double>* %output256, 7
  store %gemPrm %77, %gemPrm* %this
  br label %iter

false246:                                         ; preds = %false102
  %return258 = call i64 @"eq@III"(i64 %return79, i64 47)
  %78 = icmp ne i64 %return258, 0
  br i1 %78, label %true259, label %false260

true259:                                          ; preds = %false246
  %return264 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @70, i64 0, i64 0), i8* %return82)
  %return265 = call <2 x double> @"chu@US"(i8* %return264)
  %tmp266 = load %gemPrm, %gemPrm* %this
  %tmp267 = extractvalue %gemPrm %tmp266, 35
  %return268 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp267, <2 x double> %return265, i64 %i.0)
  %output270 = extractvalue { <2 x double>, <2 x double>* } %return268, 1
  %79 = insertvalue %gemPrm %tmp266, <2 x double>* %output270, 35
  store %gemPrm %79, %gemPrm* %this
  br label %iter

false260:                                         ; preds = %false246
  %return272 = call i64 @"eq@III"(i64 %return79, i64 48)
  %80 = icmp ne i64 %return272, 0
  br i1 %80, label %true273, label %false274

true273:                                          ; preds = %false260
  %return278 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @71, i64 0, i64 0), i8* %return82)
  %return279 = call <3 x double> @"chv@VS"(i8* %return278)
  %tmp280 = load %gemPrm, %gemPrm* %this
  %tmp281 = extractvalue %gemPrm %tmp280, 8
  %return282 = call { <3 x double>, <3 x double>* } @"setcomp@V[VVI"(<3 x double>* %tmp281, <3 x double> %return279, i64 %i.0)
  %output284 = extractvalue { <3 x double>, <3 x double>* } %return282, 1
  %81 = insertvalue %gemPrm %tmp280, <3 x double>* %output284, 8
  %return287 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @72, i64 0, i64 0), i8* %return82)
  %return288 = call <3 x double> @"chv@VS"(i8* %return287)
  %tmp290 = extractvalue %gemPrm %81, 9
  %return291 = call { <3 x double>, <3 x double>* } @"setcomp@V[VVI"(<3 x double>* %tmp290, <3 x double> %return288, i64 %i.0)
  %output293 = extractvalue { <3 x double>, <3 x double>* } %return291, 1
  %82 = insertvalue %gemPrm %81, <3 x double>* %output293, 9
  store %gemPrm %82, %gemPrm* %this
  br label %iter

false274:                                         ; preds = %false260
  %return295 = call i64 @"eq@III"(i64 %return79, i64 49)
  %83 = icmp ne i64 %return295, 0
  br i1 %83, label %true296, label %false297

true296:                                          ; preds = %false274
  %return301 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @73, i64 0, i64 0), i8* %return82)
  %return302 = call <2 x double> @"chu@US"(i8* %return301)
  %tmp303 = load %gemPrm, %gemPrm* %this
  %tmp304 = extractvalue %gemPrm %tmp303, 36
  %return305 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp304, <2 x double> %return302, i64 %i.0)
  %output307 = extractvalue { <2 x double>, <2 x double>* } %return305, 1
  %84 = insertvalue %gemPrm %tmp303, <2 x double>* %output307, 36
  store %gemPrm %84, %gemPrm* %this
  br label %iter

false297:                                         ; preds = %false274
  %return309 = call i64 @"eq@III"(i64 %return79, i64 50)
  %85 = icmp ne i64 %return309, 0
  br i1 %85, label %true310, label %false311

true310:                                          ; preds = %false297
  %return315 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @74, i64 0, i64 0), i8* %return82)
  %return316 = call <2 x double> @"chu@US"(i8* %return315)
  %tmp317 = load %gemPrm, %gemPrm* %this
  %tmp318 = extractvalue %gemPrm %tmp317, 37
  %return319 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp318, <2 x double> %return316, i64 %i.0)
  %output321 = extractvalue { <2 x double>, <2 x double>* } %return319, 1
  %86 = insertvalue %gemPrm %tmp317, <2 x double>* %output321, 37
  store %gemPrm %86, %gemPrm* %this
  br label %iter

false311:                                         ; preds = %false297
  %return323 = call i64 @"eq@III"(i64 %return79, i64 51)
  %87 = icmp ne i64 %return323, 0
  br i1 %87, label %true324, label %false325

true324:                                          ; preds = %false311
  %return329 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @75, i64 0, i64 0), i8* %return82)
  %return330 = call <2 x double> @"chu@US"(i8* %return329)
  %tmp331 = load %gemPrm, %gemPrm* %this
  %tmp332 = extractvalue %gemPrm %tmp331, 14
  %return333 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp332, <2 x double> %return330, i64 %i.0)
  %output335 = extractvalue { <2 x double>, <2 x double>* } %return333, 1
  %88 = insertvalue %gemPrm %tmp331, <2 x double>* %output335, 14
  store %gemPrm %88, %gemPrm* %this
  br label %iter

false325:                                         ; preds = %false311
  %return337 = call i64 @"eq@III"(i64 %return79, i64 52)
  %89 = icmp ne i64 %return337, 0
  br i1 %89, label %true338, label %false339

true338:                                          ; preds = %false325
  %return343 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @76, i64 0, i64 0), i8* %return82)
  %return344 = call <2 x double> @"chu@US"(i8* %return343)
  %tmp345 = load %gemPrm, %gemPrm* %this
  %tmp346 = extractvalue %gemPrm %tmp345, 17
  %return347 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp346, <2 x double> %return344, i64 %i.0)
  %output349 = extractvalue { <2 x double>, <2 x double>* } %return347, 1
  %90 = insertvalue %gemPrm %tmp345, <2 x double>* %output349, 17
  store %gemPrm %90, %gemPrm* %this
  br label %iter

false339:                                         ; preds = %false325
  %return351 = call i64 @"eq@III"(i64 %return79, i64 53)
  %91 = icmp ne i64 %return351, 0
  br i1 %91, label %true352, label %false353

true352:                                          ; preds = %false339
  %return357 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @77, i64 0, i64 0), i8* %return82)
  %return358 = call double @"chf@FS"(i8* %return357)
  %tmp359 = load %gemPrm, %gemPrm* %this
  %tmp360 = extractvalue %gemPrm %tmp359, 1
  %return361 = call { double, double* } @"setcomp@F[FFI"(double* %tmp360, double %return358, i64 %i.0)
  %output363 = extractvalue { double, double* } %return361, 1
  %92 = insertvalue %gemPrm %tmp359, double* %output363, 1
  store %gemPrm %92, %gemPrm* %this
  br label %iter

false353:                                         ; preds = %false339
  %return365 = call i64 @"eq@III"(i64 %return79, i64 56)
  %93 = icmp ne i64 %return365, 0
  br i1 %93, label %true366, label %false367

true366:                                          ; preds = %false353
  %return371 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @78, i64 0, i64 0), i8* %return82)
  %return372 = call double @"chf@FS"(i8* %return371)
  %tmp373 = load %gemPrm, %gemPrm* %this
  %tmp374 = extractvalue %gemPrm %tmp373, 2
  %return375 = call { double, double* } @"setcomp@F[FFI"(double* %tmp374, double %return372, i64 %i.0)
  %output377 = extractvalue { double, double* } %return375, 1
  %94 = insertvalue %gemPrm %tmp373, double* %output377, 2
  store %gemPrm %94, %gemPrm* %this
  br label %iter

false367:                                         ; preds = %false353
  %return379 = call i64 @"eq@III"(i64 %return79, i64 57)
  %95 = icmp ne i64 %return379, 0
  br i1 %95, label %true380, label %iter

true380:                                          ; preds = %false367
  %return384 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @79, i64 0, i64 0), i8* %return82)
  %return385 = call <3 x double> @"chv@VS"(i8* %return384)
  %tmp386 = load %gemPrm, %gemPrm* %this
  %tmp387 = extractvalue %gemPrm %tmp386, 10
  %return388 = call { <3 x double>, <3 x double>* } @"setcomp@V[VVI"(<3 x double>* %tmp387, <3 x double> %return385, i64 %i.0)
  %output390 = extractvalue { <3 x double>, <3 x double>* } %return388, 1
  %96 = insertvalue %gemPrm %tmp386, <3 x double>* %output390, 10
  store %gemPrm %96, %gemPrm* %this
  br label %iter

true395:                                          ; preds = %false97
  %return398 = call i64 @"lt@III"(i64 %return79, i64 77)
  %97 = icmp ne i64 %return398, 0
  br i1 %97, label %true399, label %false400

true399:                                          ; preds = %true395
  %return403 = call i64 @"eq@III"(i64 %return79, i64 61)
  %98 = icmp ne i64 %return403, 0
  br i1 %98, label %true404, label %false405

false400:                                         ; preds = %true395
  %return583 = call i64 @"eq@III"(i64 %return79, i64 77)
  %99 = icmp ne i64 %return583, 0
  br i1 %99, label %true584, label %false585

true404:                                          ; preds = %true399
  %return409 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @81, i64 0, i64 0), i8* %return82)
  %return410 = call double @"chf@FS"(i8* %return409)
  %tmp411 = load %gemPrm, %gemPrm* %this
  %tmp412 = extractvalue %gemPrm %tmp411, 3
  %return413 = call { double, double* } @"setcomp@F[FFI"(double* %tmp412, double %return410, i64 %i.0)
  %output415 = extractvalue { double, double* } %return413, 1
  %100 = insertvalue %gemPrm %tmp411, double* %output415, 3
  store %gemPrm %100, %gemPrm* %this
  br label %iter

false405:                                         ; preds = %true399
  %return417 = call i64 @"eq@III"(i64 %return79, i64 63)
  %101 = icmp ne i64 %return417, 0
  br i1 %101, label %true418, label %false419

true418:                                          ; preds = %false405
  %return423 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @82, i64 0, i64 0), i8* %return82)
  %return424 = call <2 x double> @"chu@US"(i8* %return423)
  %tmp425 = load %gemPrm, %gemPrm* %this
  %tmp426 = extractvalue %gemPrm %tmp425, 18
  %return427 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp426, <2 x double> %return424, i64 %i.0)
  %output429 = extractvalue { <2 x double>, <2 x double>* } %return427, 1
  %102 = insertvalue %gemPrm %tmp425, <2 x double>* %output429, 18
  %return432 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @83, i64 0, i64 0), i8* %return82)
  %return433 = call <3 x double> @"chv@VS"(i8* %return432)
  %tmp435 = extractvalue %gemPrm %102, 11
  %return436 = call { <3 x double>, <3 x double>* } @"setcomp@V[VVI"(<3 x double>* %tmp435, <3 x double> %return433, i64 %i.0)
  %output438 = extractvalue { <3 x double>, <3 x double>* } %return436, 1
  %103 = insertvalue %gemPrm %102, <3 x double>* %output438, 11
  store %gemPrm %103, %gemPrm* %this
  br label %iter

false419:                                         ; preds = %false405
  %return440 = call i64 @"eq@III"(i64 %return79, i64 66)
  %104 = icmp ne i64 %return440, 0
  br i1 %104, label %true441, label %false442

true441:                                          ; preds = %false419
  %return446 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @84, i64 0, i64 0), i8* %return82)
  %return447 = call <2 x double> @"chu@US"(i8* %return446)
  %tmp448 = load %gemPrm, %gemPrm* %this
  %tmp449 = extractvalue %gemPrm %tmp448, 19
  %return450 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp449, <2 x double> %return447, i64 %i.0)
  %output452 = extractvalue { <2 x double>, <2 x double>* } %return450, 1
  %105 = insertvalue %gemPrm %tmp448, <2 x double>* %output452, 19
  store %gemPrm %105, %gemPrm* %this
  br label %iter

false442:                                         ; preds = %false419
  %return454 = call i64 @"eq@III"(i64 %return79, i64 67)
  %106 = icmp ne i64 %return454, 0
  br i1 %106, label %true455, label %false456

true455:                                          ; preds = %false442
  %return460 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @85, i64 0, i64 0), i8* %return82)
  %return461 = call <4 x double> @"chp@PS"(i8* %return460)
  %tmp462 = load %gemPrm, %gemPrm* %this
  %tmp463 = extractvalue %gemPrm %tmp462, 44
  %return464 = call { <4 x double>, <4 x double>* } @"setcomp@P[PPI"(<4 x double>* %tmp463, <4 x double> %return461, i64 %i.0)
  %output466 = extractvalue { <4 x double>, <4 x double>* } %return464, 1
  %107 = insertvalue %gemPrm %tmp462, <4 x double>* %output466, 44
  store %gemPrm %107, %gemPrm* %this
  br label %iter

false456:                                         ; preds = %false442
  %return468 = call i64 @"eq@III"(i64 %return79, i64 69)
  %108 = icmp ne i64 %return468, 0
  br i1 %108, label %true469, label %false470

true469:                                          ; preds = %false456
  %return474 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @86, i64 0, i64 0), i8* %return82)
  %return475 = call <2 x double> @"chu@US"(i8* %return474)
  %tmp476 = load %gemPrm, %gemPrm* %this
  %tmp477 = extractvalue %gemPrm %tmp476, 20
  %return478 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp477, <2 x double> %return475, i64 %i.0)
  %output480 = extractvalue { <2 x double>, <2 x double>* } %return478, 1
  %109 = insertvalue %gemPrm %tmp476, <2 x double>* %output480, 20
  %return483 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @87, i64 0, i64 0), i8* %return82)
  %return484 = call double @"chf@FS"(i8* %return483)
  %tmp486 = extractvalue %gemPrm %109, 4
  %return487 = call { double, double* } @"setcomp@F[FFI"(double* %tmp486, double %return484, i64 %i.0)
  %output489 = extractvalue { double, double* } %return487, 1
  %110 = insertvalue %gemPrm %109, double* %output489, 4
  store %gemPrm %110, %gemPrm* %this
  br label %iter

false470:                                         ; preds = %false456
  %return491 = call i64 @"eq@III"(i64 %return79, i64 71)
  %111 = icmp ne i64 %return491, 0
  br i1 %111, label %true492, label %false493

true492:                                          ; preds = %false470
  %return497 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @88, i64 0, i64 0), i8* %return82)
  %return498 = call <2 x double> @"chu@US"(i8* %return497)
  %tmp499 = load %gemPrm, %gemPrm* %this
  %tmp500 = extractvalue %gemPrm %tmp499, 21
  %return501 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp500, <2 x double> %return498, i64 %i.0)
  %output503 = extractvalue { <2 x double>, <2 x double>* } %return501, 1
  %112 = insertvalue %gemPrm %tmp499, <2 x double>* %output503, 21
  %return506 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @89, i64 0, i64 0), i8* %return82)
  %return507 = call <2 x double> @"chu@US"(i8* %return506)
  %tmp509 = extractvalue %gemPrm %112, 22
  %return510 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp509, <2 x double> %return507, i64 %i.0)
  %output512 = extractvalue { <2 x double>, <2 x double>* } %return510, 1
  %113 = insertvalue %gemPrm %112, <2 x double>* %output512, 22
  store %gemPrm %113, %gemPrm* %this
  br label %iter

false493:                                         ; preds = %false470
  %return514 = call i64 @"eq@III"(i64 %return79, i64 72)
  %114 = icmp ne i64 %return514, 0
  br i1 %114, label %true515, label %false516

true515:                                          ; preds = %false493
  %return520 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @90, i64 0, i64 0), i8* %return82)
  %return521 = call <2 x double> @"chu@US"(i8* %return520)
  %tmp522 = load %gemPrm, %gemPrm* %this
  %tmp523 = extractvalue %gemPrm %tmp522, 23
  %return524 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp523, <2 x double> %return521, i64 %i.0)
  %output526 = extractvalue { <2 x double>, <2 x double>* } %return524, 1
  %115 = insertvalue %gemPrm %tmp522, <2 x double>* %output526, 23
  store %gemPrm %115, %gemPrm* %this
  br label %iter

false516:                                         ; preds = %false493
  %return528 = call i64 @"eq@III"(i64 %return79, i64 73)
  %116 = icmp ne i64 %return528, 0
  br i1 %116, label %true529, label %false530

true529:                                          ; preds = %false516
  %return534 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @91, i64 0, i64 0), i8* %return82)
  %return535 = call <2 x double> @"chu@US"(i8* %return534)
  %tmp536 = load %gemPrm, %gemPrm* %this
  %tmp537 = extractvalue %gemPrm %tmp536, 24
  %return538 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp537, <2 x double> %return535, i64 %i.0)
  %output540 = extractvalue { <2 x double>, <2 x double>* } %return538, 1
  %117 = insertvalue %gemPrm %tmp536, <2 x double>* %output540, 24
  store %gemPrm %117, %gemPrm* %this
  br label %iter

false530:                                         ; preds = %false516
  %return542 = call i64 @"eq@III"(i64 %return79, i64 74)
  %118 = icmp ne i64 %return542, 0
  br i1 %118, label %true543, label %false544

true543:                                          ; preds = %false530
  %return548 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @92, i64 0, i64 0), i8* %return82)
  %return549 = call <2 x double> @"chu@US"(i8* %return548)
  %tmp550 = load %gemPrm, %gemPrm* %this
  %tmp551 = extractvalue %gemPrm %tmp550, 38
  %return552 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp551, <2 x double> %return549, i64 %i.0)
  %output554 = extractvalue { <2 x double>, <2 x double>* } %return552, 1
  %119 = insertvalue %gemPrm %tmp550, <2 x double>* %output554, 38
  store %gemPrm %119, %gemPrm* %this
  br label %iter

false544:                                         ; preds = %false530
  %return556 = call i64 @"eq@III"(i64 %return79, i64 75)
  %120 = icmp ne i64 %return556, 0
  br i1 %120, label %true557, label %false558

true557:                                          ; preds = %false544
  %return562 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @93, i64 0, i64 0), i8* %return82)
  %return563 = call <4 x double> @"chp@PS"(i8* %return562)
  %tmp564 = load %gemPrm, %gemPrm* %this
  %tmp565 = extractvalue %gemPrm %tmp564, 45
  %return566 = call { <4 x double>, <4 x double>* } @"setcomp@P[PPI"(<4 x double>* %tmp565, <4 x double> %return563, i64 %i.0)
  %output568 = extractvalue { <4 x double>, <4 x double>* } %return566, 1
  %121 = insertvalue %gemPrm %tmp564, <4 x double>* %output568, 45
  store %gemPrm %121, %gemPrm* %this
  br label %iter

false558:                                         ; preds = %false544
  %return570 = call i64 @"eq@III"(i64 %return79, i64 76)
  %122 = icmp ne i64 %return570, 0
  br i1 %122, label %true571, label %iter

true571:                                          ; preds = %false558
  %return575 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @94, i64 0, i64 0), i8* %return82)
  %return576 = call <4 x double> @"chp@PS"(i8* %return575)
  %tmp577 = load %gemPrm, %gemPrm* %this
  %tmp578 = extractvalue %gemPrm %tmp577, 46
  %return579 = call { <4 x double>, <4 x double>* } @"setcomp@P[PPI"(<4 x double>* %tmp578, <4 x double> %return576, i64 %i.0)
  %output581 = extractvalue { <4 x double>, <4 x double>* } %return579, 1
  %123 = insertvalue %gemPrm %tmp577, <4 x double>* %output581, 46
  store %gemPrm %123, %gemPrm* %this
  br label %iter

true584:                                          ; preds = %false400
  %return589 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @95, i64 0, i64 0), i8* %return82)
  %return590 = call <4 x double> @"chp@PS"(i8* %return589)
  %tmp591 = load %gemPrm, %gemPrm* %this
  %tmp592 = extractvalue %gemPrm %tmp591, 47
  %return593 = call { <4 x double>, <4 x double>* } @"setcomp@P[PPI"(<4 x double>* %tmp592, <4 x double> %return590, i64 %i.0)
  %output595 = extractvalue { <4 x double>, <4 x double>* } %return593, 1
  %124 = insertvalue %gemPrm %tmp591, <4 x double>* %output595, 47
  store %gemPrm %124, %gemPrm* %this
  br label %iter

false585:                                         ; preds = %false400
  %return597 = call i64 @"eq@III"(i64 %return79, i64 78)
  %125 = icmp ne i64 %return597, 0
  br i1 %125, label %true598, label %false599

true598:                                          ; preds = %false585
  %return603 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @96, i64 0, i64 0), i8* %return82)
  %return604 = call <2 x double> @"chu@US"(i8* %return603)
  %tmp605 = load %gemPrm, %gemPrm* %this
  %tmp606 = extractvalue %gemPrm %tmp605, 39
  %return607 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp606, <2 x double> %return604, i64 %i.0)
  %output609 = extractvalue { <2 x double>, <2 x double>* } %return607, 1
  %126 = insertvalue %gemPrm %tmp605, <2 x double>* %output609, 39
  store %gemPrm %126, %gemPrm* %this
  br label %iter

false599:                                         ; preds = %false585
  %return611 = call i64 @"eq@III"(i64 %return79, i64 79)
  %127 = icmp ne i64 %return611, 0
  br i1 %127, label %true612, label %false613

true612:                                          ; preds = %false599
  %return617 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @97, i64 0, i64 0), i8* %return82)
  %return618 = call <2 x double> @"chu@US"(i8* %return617)
  %tmp619 = load %gemPrm, %gemPrm* %this
  %tmp620 = extractvalue %gemPrm %tmp619, 25
  %return621 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp620, <2 x double> %return618, i64 %i.0)
  %output623 = extractvalue { <2 x double>, <2 x double>* } %return621, 1
  %128 = insertvalue %gemPrm %tmp619, <2 x double>* %output623, 25
  %return626 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @98, i64 0, i64 0), i8* %return82)
  %return627 = call <2 x double> @"chu@US"(i8* %return626)
  %tmp629 = extractvalue %gemPrm %128, 26
  %return630 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp629, <2 x double> %return627, i64 %i.0)
  %output632 = extractvalue { <2 x double>, <2 x double>* } %return630, 1
  %129 = insertvalue %gemPrm %128, <2 x double>* %output632, 26
  store %gemPrm %129, %gemPrm* %this
  br label %iter

false613:                                         ; preds = %false599
  %return634 = call i64 @"eq@III"(i64 %return79, i64 94)
  %130 = icmp ne i64 %return634, 0
  br i1 %130, label %true635, label %false636

true635:                                          ; preds = %false613
  %return640 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @99, i64 0, i64 0), i8* %return82)
  %return641 = call <4 x double> @"chp@PS"(i8* %return640)
  %tmp642 = load %gemPrm, %gemPrm* %this
  %tmp643 = extractvalue %gemPrm %tmp642, 48
  %return644 = call { <4 x double>, <4 x double>* } @"setcomp@P[PPI"(<4 x double>* %tmp643, <4 x double> %return641, i64 %i.0)
  %output646 = extractvalue { <4 x double>, <4 x double>* } %return644, 1
  %131 = insertvalue %gemPrm %tmp642, <4 x double>* %output646, 48
  store %gemPrm %131, %gemPrm* %this
  br label %iter

false636:                                         ; preds = %false613
  %return648 = call i64 @"eq@III"(i64 %return79, i64 95)
  %132 = icmp ne i64 %return648, 0
  br i1 %132, label %true649, label %false650

true649:                                          ; preds = %false636
  %return654 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @100, i64 0, i64 0), i8* %return82)
  %return655 = call double @"chf@FS"(i8* %return654)
  %tmp656 = load %gemPrm, %gemPrm* %this
  %tmp657 = extractvalue %gemPrm %tmp656, 5
  %return658 = call { double, double* } @"setcomp@F[FFI"(double* %tmp657, double %return655, i64 %i.0)
  %output660 = extractvalue { double, double* } %return658, 1
  %133 = insertvalue %gemPrm %tmp656, double* %output660, 5
  store %gemPrm %133, %gemPrm* %this
  br label %iter

false650:                                         ; preds = %false636
  %return662 = call i64 @"eq@III"(i64 %return79, i64 96)
  %134 = icmp ne i64 %return662, 0
  br i1 %134, label %true663, label %false664

true663:                                          ; preds = %false650
  %return668 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @101, i64 0, i64 0), i8* %return82)
  %return669 = call <4 x double> @"chp@PS"(i8* %return668)
  %tmp670 = load %gemPrm, %gemPrm* %this
  %tmp671 = extractvalue %gemPrm %tmp670, 49
  %return672 = call { <4 x double>, <4 x double>* } @"setcomp@P[PPI"(<4 x double>* %tmp671, <4 x double> %return669, i64 %i.0)
  %output674 = extractvalue { <4 x double>, <4 x double>* } %return672, 1
  %135 = insertvalue %gemPrm %tmp670, <4 x double>* %output674, 49
  %return677 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @102, i64 0, i64 0), i8* %return82)
  %return678 = call <4 x double> @"chp@PS"(i8* %return677)
  %tmp680 = extractvalue %gemPrm %135, 50
  %return681 = call { <4 x double>, <4 x double>* } @"setcomp@P[PPI"(<4 x double>* %tmp680, <4 x double> %return678, i64 %i.0)
  %output683 = extractvalue { <4 x double>, <4 x double>* } %return681, 1
  %136 = insertvalue %gemPrm %135, <4 x double>* %output683, 50
  store %gemPrm %136, %gemPrm* %this
  br label %iter

false664:                                         ; preds = %false650
  %return685 = call i64 @"eq@III"(i64 %return79, i64 97)
  %137 = icmp ne i64 %return685, 0
  br i1 %137, label %true686, label %false687

true686:                                          ; preds = %false664
  %return691 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @103, i64 0, i64 0), i8* %return82)
  %return692 = call <2 x double> @"chu@US"(i8* %return691)
  %tmp693 = load %gemPrm, %gemPrm* %this
  %tmp694 = extractvalue %gemPrm %tmp693, 27
  %return695 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp694, <2 x double> %return692, i64 %i.0)
  %output697 = extractvalue { <2 x double>, <2 x double>* } %return695, 1
  %138 = insertvalue %gemPrm %tmp693, <2 x double>* %output697, 27
  %return700 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @104, i64 0, i64 0), i8* %return82)
  %return701 = call <2 x double> @"chu@US"(i8* %return700)
  %tmp703 = extractvalue %gemPrm %138, 28
  %return704 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp703, <2 x double> %return701, i64 %i.0)
  %output706 = extractvalue { <2 x double>, <2 x double>* } %return704, 1
  %139 = insertvalue %gemPrm %138, <2 x double>* %output706, 28
  store %gemPrm %139, %gemPrm* %this
  br label %iter

false687:                                         ; preds = %false664
  %return708 = call i64 @"eq@III"(i64 %return79, i64 98)
  %140 = icmp ne i64 %return708, 0
  br i1 %140, label %true709, label %false710

true709:                                          ; preds = %false687
  %return714 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @105, i64 0, i64 0), i8* %return82)
  %return715 = call <2 x double> @"chu@US"(i8* %return714)
  %tmp716 = load %gemPrm, %gemPrm* %this
  %tmp717 = extractvalue %gemPrm %tmp716, 40
  %return718 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp717, <2 x double> %return715, i64 %i.0)
  %output720 = extractvalue { <2 x double>, <2 x double>* } %return718, 1
  %141 = insertvalue %gemPrm %tmp716, <2 x double>* %output720, 40
  store %gemPrm %141, %gemPrm* %this
  br label %iter

false710:                                         ; preds = %false687
  %return722 = call i64 @"eq@III"(i64 %return79, i64 99)
  %142 = icmp ne i64 %return722, 0
  br i1 %142, label %true723, label %false724

true723:                                          ; preds = %false710
  %return728 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @106, i64 0, i64 0), i8* %return82)
  %return729 = call <3 x double> @"chv@VS"(i8* %return728)
  %tmp730 = load %gemPrm, %gemPrm* %this
  %tmp731 = extractvalue %gemPrm %tmp730, 12
  %return732 = call { <3 x double>, <3 x double>* } @"setcomp@V[VVI"(<3 x double>* %tmp731, <3 x double> %return729, i64 %i.0)
  %output734 = extractvalue { <3 x double>, <3 x double>* } %return732, 1
  %143 = insertvalue %gemPrm %tmp730, <3 x double>* %output734, 12
  %return737 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @107, i64 0, i64 0), i8* %return82)
  %return738 = call <2 x double> @"chu@US"(i8* %return737)
  %tmp740 = extractvalue %gemPrm %143, 41
  %return741 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp740, <2 x double> %return738, i64 %i.0)
  %output743 = extractvalue { <2 x double>, <2 x double>* } %return741, 1
  %144 = insertvalue %gemPrm %143, <2 x double>* %output743, 41
  store %gemPrm %144, %gemPrm* %this
  br label %iter

false724:                                         ; preds = %false710
  %return745 = call i64 @"eq@III"(i64 %return79, i64 101)
  %145 = icmp ne i64 %return745, 0
  br i1 %145, label %true746, label %iter

true746:                                          ; preds = %false724
  %return750 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @108, i64 0, i64 0), i8* %return82)
  %return751 = call <2 x double> @"chu@US"(i8* %return750)
  %tmp752 = load %gemPrm, %gemPrm* %this
  %tmp753 = extractvalue %gemPrm %tmp752, 29
  %return754 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp753, <2 x double> %return751, i64 %i.0)
  %output756 = extractvalue { <2 x double>, <2 x double>* } %return754, 1
  %146 = insertvalue %gemPrm %tmp752, <2 x double>* %output756, 29
  %return759 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @109, i64 0, i64 0), i8* %return82)
  %return760 = call <2 x double> @"chu@US"(i8* %return759)
  %tmp762 = extractvalue %gemPrm %146, 30
  %return763 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp762, <2 x double> %return760, i64 %i.0)
  %output765 = extractvalue { <2 x double>, <2 x double>* } %return763, 1
  %147 = insertvalue %gemPrm %146, <2 x double>* %output765, 30
  %return768 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @110, i64 0, i64 0), i8* %return82)
  %return769 = call <2 x double> @"chu@US"(i8* %return768)
  %tmp771 = extractvalue %gemPrm %147, 31
  %return772 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp771, <2 x double> %return769, i64 %i.0)
  %output774 = extractvalue { <2 x double>, <2 x double>* } %return772, 1
  %148 = insertvalue %gemPrm %147, <2 x double>* %output774, 31
  store %gemPrm %148, %gemPrm* %this
  br label %iter
}

; Function Attrs: nounwind
declare i64 @"max@I[I"(i64*) #3

; Function Attrs: nounwind readnone
declare i64 @"gt@III"(i64, i64) #1

; Function Attrs: nounwind readnone
declare i64 @"len@I[I"(i64*) #1

; Function Attrs: nounwind readnone
declare double* @"resize@[FI"(double*, i64) #1

; Function Attrs: nounwind readnone
declare <3 x double>* @"resize@[VI"(<3 x double>*, i64) #1

; Function Attrs: nounwind readnone
declare <4 x double>* @"resize@[PI"(<4 x double>*, i64) #1

; Function Attrs: nounwind readnone
declare i8* @"getcomp@S[SI"(i8**, i64) #1

; Function Attrs: nounwind
declare i64 @"find@I[FF"(double*, double) #3

; Function Attrs: nounwind readnone
declare i64 @"ge@III"(i64, i64) #1

; Function Attrs: nounwind readnone
declare { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>*, <2 x double>, i64) #1

; Function Attrs: nounwind readnone
declare <4 x double> @"chp@PS"(i8*) #1

; Function Attrs: nounwind readnone
declare { <4 x double>, <4 x double>* } @"setcomp@P[PPI"(<4 x double>*, <4 x double>, i64) #1

; Function Attrs: nounwind readnone
declare <3 x double> @"chv@VS"(i8*) #1

; Function Attrs: nounwind readnone
declare { <3 x double>, <3 x double>* } @"setcomp@V[VVI"(<3 x double>*, <3 x double>, i64) #1

; Function Attrs: nounwind readnone
declare { double, double* } @"setcomp@F[FFI"(double*, double, i64) #1

; Function Attrs: alwaysinline nounwind
define private %gemPrm @"gemPrm@Z6gemPrmM51N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[P[F[F[F[F[F[F[V[V[V[V[V[V[V[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[P[P[P[P[P[P[P[P[P"(double** %rings2_val, double** %bipolar_shift, double** %cell_size, double** %escher_beta, double** %popcorn2_c, double** %flux_spread, <3 x double>** %blob, <3 x double>** %pie, <3 x double>** %supershape, <3 x double>** %supershape_n, <3 x double>** %cpow, <3 x double>** %lazysusan, <3 x double>** %bwraps, <2 x double>** %curl_c, <2 x double>** %parabola, <2 x double>** %fan2, <2 x double>** %rectangles, <2 x double>** %bent2, <2 x double>** %lazysusanxyz, <2 x double>** %modulus, <2 x double>** %popcorn2, <2 x double>** %separation, <2 x double>** %separation_inside, <2 x double>** %split, <2 x double>** %splits, <2 x double>** %waves2_scale, <2 x double>** %waves2_freq, <2 x double>** %curve_lenght, <2 x double>** %curve_amp, <2 x double>** %polynomial_pow, <2 x double>** %polynomial_lc, <2 x double>** %polynomial_sc, <2 x double>** %julian, <2 x double>** %juliascope, <2 x double>** %radialblur, <2 x double>** %disc2, <2 x double>** %flower, <2 x double>** %conic, <2 x double>** %stripes, <2 x double>** %whorl, <2 x double>** %persp, <2 x double>** %bwrapstwist, <4 x double>** %ngon, <4 x double>** %pdj_w, <4 x double>** %oscope, <4 x double>** %wedge, <4 x double>** %wedgejulia, <4 x double>** %wedgesph, <4 x double>** %auger, <4 x double>** %mobius_re, <4 x double>** %mobius_im) #0 {
__llvm_entry:
  %rings2_val1 = load double*, double** %rings2_val
  %0 = insertvalue %gemPrm undef, double* %rings2_val1, 0
  %bipolar_shift2 = load double*, double** %bipolar_shift
  %1 = insertvalue %gemPrm %0, double* %bipolar_shift2, 1
  %cell_size4 = load double*, double** %cell_size
  %2 = insertvalue %gemPrm %1, double* %cell_size4, 2
  %escher_beta6 = load double*, double** %escher_beta
  %3 = insertvalue %gemPrm %2, double* %escher_beta6, 3
  %popcorn2_c8 = load double*, double** %popcorn2_c
  %4 = insertvalue %gemPrm %3, double* %popcorn2_c8, 4
  %flux_spread10 = load double*, double** %flux_spread
  %5 = insertvalue %gemPrm %4, double* %flux_spread10, 5
  %blob12 = load <3 x double>*, <3 x double>** %blob
  %6 = insertvalue %gemPrm %5, <3 x double>* %blob12, 6
  %pie14 = load <3 x double>*, <3 x double>** %pie
  %7 = insertvalue %gemPrm %6, <3 x double>* %pie14, 7
  %supershape16 = load <3 x double>*, <3 x double>** %supershape
  %8 = insertvalue %gemPrm %7, <3 x double>* %supershape16, 8
  %supershape_n18 = load <3 x double>*, <3 x double>** %supershape_n
  %9 = insertvalue %gemPrm %8, <3 x double>* %supershape_n18, 9
  %cpow20 = load <3 x double>*, <3 x double>** %cpow
  %10 = insertvalue %gemPrm %9, <3 x double>* %cpow20, 10
  %lazysusan22 = load <3 x double>*, <3 x double>** %lazysusan
  %11 = insertvalue %gemPrm %10, <3 x double>* %lazysusan22, 11
  %bwraps24 = load <3 x double>*, <3 x double>** %bwraps
  %12 = insertvalue %gemPrm %11, <3 x double>* %bwraps24, 12
  %curl_c26 = load <2 x double>*, <2 x double>** %curl_c
  %13 = insertvalue %gemPrm %12, <2 x double>* %curl_c26, 13
  %parabola28 = load <2 x double>*, <2 x double>** %parabola
  %14 = insertvalue %gemPrm %13, <2 x double>* %parabola28, 14
  %fan230 = load <2 x double>*, <2 x double>** %fan2
  %15 = insertvalue %gemPrm %14, <2 x double>* %fan230, 15
  %rectangles32 = load <2 x double>*, <2 x double>** %rectangles
  %16 = insertvalue %gemPrm %15, <2 x double>* %rectangles32, 16
  %bent234 = load <2 x double>*, <2 x double>** %bent2
  %17 = insertvalue %gemPrm %16, <2 x double>* %bent234, 17
  %lazysusanxyz36 = load <2 x double>*, <2 x double>** %lazysusanxyz
  %18 = insertvalue %gemPrm %17, <2 x double>* %lazysusanxyz36, 18
  %modulus38 = load <2 x double>*, <2 x double>** %modulus
  %19 = insertvalue %gemPrm %18, <2 x double>* %modulus38, 19
  %popcorn240 = load <2 x double>*, <2 x double>** %popcorn2
  %20 = insertvalue %gemPrm %19, <2 x double>* %popcorn240, 20
  %separation42 = load <2 x double>*, <2 x double>** %separation
  %21 = insertvalue %gemPrm %20, <2 x double>* %separation42, 21
  %separation_inside44 = load <2 x double>*, <2 x double>** %separation_inside
  %22 = insertvalue %gemPrm %21, <2 x double>* %separation_inside44, 22
  %split46 = load <2 x double>*, <2 x double>** %split
  %23 = insertvalue %gemPrm %22, <2 x double>* %split46, 23
  %splits48 = load <2 x double>*, <2 x double>** %splits
  %24 = insertvalue %gemPrm %23, <2 x double>* %splits48, 24
  %waves2_scale50 = load <2 x double>*, <2 x double>** %waves2_scale
  %25 = insertvalue %gemPrm %24, <2 x double>* %waves2_scale50, 25
  %waves2_freq52 = load <2 x double>*, <2 x double>** %waves2_freq
  %26 = insertvalue %gemPrm %25, <2 x double>* %waves2_freq52, 26
  %curve_lenght54 = load <2 x double>*, <2 x double>** %curve_lenght
  %27 = insertvalue %gemPrm %26, <2 x double>* %curve_lenght54, 27
  %curve_amp56 = load <2 x double>*, <2 x double>** %curve_amp
  %28 = insertvalue %gemPrm %27, <2 x double>* %curve_amp56, 28
  %polynomial_pow58 = load <2 x double>*, <2 x double>** %polynomial_pow
  %29 = insertvalue %gemPrm %28, <2 x double>* %polynomial_pow58, 29
  %polynomial_lc60 = load <2 x double>*, <2 x double>** %polynomial_lc
  %30 = insertvalue %gemPrm %29, <2 x double>* %polynomial_lc60, 30
  %polynomial_sc62 = load <2 x double>*, <2 x double>** %polynomial_sc
  %31 = insertvalue %gemPrm %30, <2 x double>* %polynomial_sc62, 31
  %julian64 = load <2 x double>*, <2 x double>** %julian
  %32 = insertvalue %gemPrm %31, <2 x double>* %julian64, 32
  %juliascope66 = load <2 x double>*, <2 x double>** %juliascope
  %33 = insertvalue %gemPrm %32, <2 x double>* %juliascope66, 33
  %radialblur68 = load <2 x double>*, <2 x double>** %radialblur
  %34 = insertvalue %gemPrm %33, <2 x double>* %radialblur68, 34
  %disc270 = load <2 x double>*, <2 x double>** %disc2
  %35 = insertvalue %gemPrm %34, <2 x double>* %disc270, 35
  %flower72 = load <2 x double>*, <2 x double>** %flower
  %36 = insertvalue %gemPrm %35, <2 x double>* %flower72, 36
  %conic74 = load <2 x double>*, <2 x double>** %conic
  %37 = insertvalue %gemPrm %36, <2 x double>* %conic74, 37
  %stripes76 = load <2 x double>*, <2 x double>** %stripes
  %38 = insertvalue %gemPrm %37, <2 x double>* %stripes76, 38
  %whorl78 = load <2 x double>*, <2 x double>** %whorl
  %39 = insertvalue %gemPrm %38, <2 x double>* %whorl78, 39
  %persp80 = load <2 x double>*, <2 x double>** %persp
  %40 = insertvalue %gemPrm %39, <2 x double>* %persp80, 40
  %bwrapstwist82 = load <2 x double>*, <2 x double>** %bwrapstwist
  %41 = insertvalue %gemPrm %40, <2 x double>* %bwrapstwist82, 41
  %ngon84 = load <4 x double>*, <4 x double>** %ngon
  %42 = insertvalue %gemPrm %41, <4 x double>* %ngon84, 42
  %pdj_w86 = load <4 x double>*, <4 x double>** %pdj_w
  %43 = insertvalue %gemPrm %42, <4 x double>* %pdj_w86, 43
  %oscope88 = load <4 x double>*, <4 x double>** %oscope
  %44 = insertvalue %gemPrm %43, <4 x double>* %oscope88, 44
  %wedge90 = load <4 x double>*, <4 x double>** %wedge
  %45 = insertvalue %gemPrm %44, <4 x double>* %wedge90, 45
  %wedgejulia92 = load <4 x double>*, <4 x double>** %wedgejulia
  %46 = insertvalue %gemPrm %45, <4 x double>* %wedgejulia92, 46
  %wedgesph94 = load <4 x double>*, <4 x double>** %wedgesph
  %47 = insertvalue %gemPrm %46, <4 x double>* %wedgesph94, 47
  %auger96 = load <4 x double>*, <4 x double>** %auger
  %48 = insertvalue %gemPrm %47, <4 x double>* %auger96, 48
  %mobius_re98 = load <4 x double>*, <4 x double>** %mobius_re
  %49 = insertvalue %gemPrm %48, <4 x double>* %mobius_re98, 49
  %mobius_im100 = load <4 x double>*, <4 x double>** %mobius_im
  %50 = insertvalue %gemPrm %49, <4 x double>* %mobius_im100, 50
  ret %gemPrm %50
}

; Function Attrs: alwaysinline nounwind
define private %gemPrm @"gemPrm@Z6gemPrmM51N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[P"() #0 {
__llvm_entry:
  %0 = alloca double*
  %1 = alloca double*
  %2 = alloca double*
  %3 = alloca double*
  %4 = alloca double*
  %5 = alloca <3 x double>*
  %6 = alloca <3 x double>*
  %7 = alloca <3 x double>*
  %8 = alloca <3 x double>*
  %9 = alloca <3 x double>*
  %10 = alloca <3 x double>*
  %11 = alloca <3 x double>*
  %12 = alloca <2 x double>*
  %13 = alloca <2 x double>*
  %14 = alloca <2 x double>*
  %15 = alloca <2 x double>*
  %16 = alloca <2 x double>*
  %17 = alloca <2 x double>*
  %18 = alloca <2 x double>*
  %19 = alloca <2 x double>*
  %20 = alloca <2 x double>*
  %21 = alloca <2 x double>*
  %22 = alloca <2 x double>*
  %23 = alloca <2 x double>*
  %24 = alloca <2 x double>*
  %25 = alloca <2 x double>*
  %26 = alloca <2 x double>*
  %27 = alloca <2 x double>*
  %28 = alloca <2 x double>*
  %29 = alloca <2 x double>*
  %30 = alloca <2 x double>*
  %31 = alloca <2 x double>*
  %32 = alloca <2 x double>*
  %33 = alloca <2 x double>*
  %34 = alloca <2 x double>*
  %35 = alloca <2 x double>*
  %36 = alloca <2 x double>*
  %37 = alloca <2 x double>*
  %38 = alloca <2 x double>*
  %39 = alloca <2 x double>*
  %40 = alloca <2 x double>*
  %41 = alloca <4 x double>*
  %42 = alloca <4 x double>*
  %43 = alloca <4 x double>*
  %44 = alloca <4 x double>*
  %45 = alloca <4 x double>*
  %46 = alloca <4 x double>*
  %47 = alloca <4 x double>*
  %48 = alloca <4 x double>*
  %49 = alloca <4 x double>*
  %50 = alloca double*
  store double* getelementptr inbounds ([0 x double], [0 x double]* @55, i64 0, i64 0), double** %50
  store double* getelementptr inbounds ([0 x double], [0 x double]* @55, i64 0, i64 0), double** %0
  store double* getelementptr inbounds ([0 x double], [0 x double]* @55, i64 0, i64 0), double** %1
  store double* getelementptr inbounds ([0 x double], [0 x double]* @55, i64 0, i64 0), double** %2
  store double* getelementptr inbounds ([0 x double], [0 x double]* @55, i64 0, i64 0), double** %3
  store double* getelementptr inbounds ([0 x double], [0 x double]* @55, i64 0, i64 0), double** %4
  store <3 x double>* getelementptr inbounds ([0 x <3 x double>], [0 x <3 x double>]* @111, i64 0, i64 0), <3 x double>** %5
  store <3 x double>* getelementptr inbounds ([0 x <3 x double>], [0 x <3 x double>]* @111, i64 0, i64 0), <3 x double>** %6
  store <3 x double>* getelementptr inbounds ([0 x <3 x double>], [0 x <3 x double>]* @111, i64 0, i64 0), <3 x double>** %7
  store <3 x double>* getelementptr inbounds ([0 x <3 x double>], [0 x <3 x double>]* @111, i64 0, i64 0), <3 x double>** %8
  store <3 x double>* getelementptr inbounds ([0 x <3 x double>], [0 x <3 x double>]* @111, i64 0, i64 0), <3 x double>** %9
  store <3 x double>* getelementptr inbounds ([0 x <3 x double>], [0 x <3 x double>]* @111, i64 0, i64 0), <3 x double>** %10
  store <3 x double>* getelementptr inbounds ([0 x <3 x double>], [0 x <3 x double>]* @111, i64 0, i64 0), <3 x double>** %11
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @56, i64 0, i64 0), <2 x double>** %12
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @56, i64 0, i64 0), <2 x double>** %13
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @56, i64 0, i64 0), <2 x double>** %14
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @56, i64 0, i64 0), <2 x double>** %15
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @56, i64 0, i64 0), <2 x double>** %16
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @56, i64 0, i64 0), <2 x double>** %17
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @56, i64 0, i64 0), <2 x double>** %18
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @56, i64 0, i64 0), <2 x double>** %19
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @56, i64 0, i64 0), <2 x double>** %20
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @56, i64 0, i64 0), <2 x double>** %21
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @56, i64 0, i64 0), <2 x double>** %22
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @56, i64 0, i64 0), <2 x double>** %23
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @56, i64 0, i64 0), <2 x double>** %24
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @56, i64 0, i64 0), <2 x double>** %25
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @56, i64 0, i64 0), <2 x double>** %26
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @56, i64 0, i64 0), <2 x double>** %27
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @56, i64 0, i64 0), <2 x double>** %28
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @56, i64 0, i64 0), <2 x double>** %29
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @56, i64 0, i64 0), <2 x double>** %30
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @56, i64 0, i64 0), <2 x double>** %31
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @56, i64 0, i64 0), <2 x double>** %32
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @56, i64 0, i64 0), <2 x double>** %33
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @56, i64 0, i64 0), <2 x double>** %34
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @56, i64 0, i64 0), <2 x double>** %35
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @56, i64 0, i64 0), <2 x double>** %36
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @56, i64 0, i64 0), <2 x double>** %37
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @56, i64 0, i64 0), <2 x double>** %38
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @56, i64 0, i64 0), <2 x double>** %39
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @56, i64 0, i64 0), <2 x double>** %40
  store <4 x double>* getelementptr inbounds ([0 x <4 x double>], [0 x <4 x double>]* @112, i64 0, i64 0), <4 x double>** %41
  store <4 x double>* getelementptr inbounds ([0 x <4 x double>], [0 x <4 x double>]* @112, i64 0, i64 0), <4 x double>** %42
  store <4 x double>* getelementptr inbounds ([0 x <4 x double>], [0 x <4 x double>]* @112, i64 0, i64 0), <4 x double>** %43
  store <4 x double>* getelementptr inbounds ([0 x <4 x double>], [0 x <4 x double>]* @112, i64 0, i64 0), <4 x double>** %44
  store <4 x double>* getelementptr inbounds ([0 x <4 x double>], [0 x <4 x double>]* @112, i64 0, i64 0), <4 x double>** %45
  store <4 x double>* getelementptr inbounds ([0 x <4 x double>], [0 x <4 x double>]* @112, i64 0, i64 0), <4 x double>** %46
  store <4 x double>* getelementptr inbounds ([0 x <4 x double>], [0 x <4 x double>]* @112, i64 0, i64 0), <4 x double>** %47
  store <4 x double>* getelementptr inbounds ([0 x <4 x double>], [0 x <4 x double>]* @112, i64 0, i64 0), <4 x double>** %48
  store <4 x double>* getelementptr inbounds ([0 x <4 x double>], [0 x <4 x double>]* @112, i64 0, i64 0), <4 x double>** %49
  %gemPrm = call %gemPrm @"gemPrm@Z6gemPrmM51N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[P[F[F[F[F[F[F[V[V[V[V[V[V[V[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[P[P[P[P[P[P[P[P[P"(double** %50, double** %0, double** %1, double** %2, double** %3, double** %4, <3 x double>** %5, <3 x double>** %6, <3 x double>** %7, <3 x double>** %8, <3 x double>** %9, <3 x double>** %10, <3 x double>** %11, <2 x double>** %12, <2 x double>** %13, <2 x double>** %14, <2 x double>** %15, <2 x double>** %16, <2 x double>** %17, <2 x double>** %18, <2 x double>** %19, <2 x double>** %20, <2 x double>** %21, <2 x double>** %22, <2 x double>** %23, <2 x double>** %24, <2 x double>** %25, <2 x double>** %26, <2 x double>** %27, <2 x double>** %28, <2 x double>** %29, <2 x double>** %30, <2 x double>** %31, <2 x double>** %32, <2 x double>** %33, <2 x double>** %34, <2 x double>** %35, <2 x double>** %36, <2 x double>** %37, <2 x double>** %38, <2 x double>** %39, <2 x double>** %40, <4 x double>** %41, <4 x double>** %42, <4 x double>** %43, <4 x double>** %44, <4 x double>** %45, <4 x double>** %46, <4 x double>** %47, <4 x double>** %48, <4 x double>** %49)
  ret %gemPrm %gemPrm
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SINUSOIDAL@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %w1 = load double, double* %w
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %return3 = call double @"sin@FF"(double %return)
  %output = fmul double %w1, %return3
  %tmp = load <2 x double>, <2 x double>* %p
  %return4 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output, i64 0)
  %output6 = extractvalue { double, <2 x double> } %return4, 1
  store <2 x double> %output6, <2 x double>* %p
  %w7 = load double, double* %w
  %_p8 = load <2 x double>, <2 x double>* %_p
  %return9 = call double @"getcomp@FUI"(<2 x double> %_p8, i64 1)
  %return10 = call double @"sin@FF"(double %return9)
  %output11 = fmul double %w7, %return10
  %return13 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output6, double %output11, i64 1)
  %output15 = extractvalue { double, <2 x double> } %return13, 1
  store <2 x double> %output15, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SPHERICAL@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %w1 = load double, double* %w
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %output = fadd double %SUMSQ, 1.000000e-10
  %output3 = call double @"div@FF"(double %w1, double %output)
  %_p5 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p5, i64 0)
  %output6 = fmul double %output3, %return
  %tmp = load <2 x double>, <2 x double>* %p
  %return7 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output6, i64 0)
  %output9 = extractvalue { double, <2 x double> } %return7, 1
  store <2 x double> %output9, <2 x double>* %p
  %_p11 = load <2 x double>, <2 x double>* %_p
  %return12 = call double @"getcomp@FUI"(<2 x double> %_p11, i64 1)
  %output13 = fmul double %output3, %return12
  %return15 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output9, double %output13, i64 1)
  %output17 = extractvalue { double, <2 x double> } %return15, 1
  store <2 x double> %output17, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SWIRL@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %return = call double @"sin@FF"(double %SUMSQ)
  %return4 = call double @"cos@FF"(double %SUMSQ)
  %_p6 = load <2 x double>, <2 x double>* %_p
  %return7 = call double @"getcomp@FUI"(<2 x double> %_p6, i64 0)
  %output = fmul double %return, %return7
  %return10 = call double @"getcomp@FUI"(<2 x double> %_p6, i64 1)
  %output11 = fmul double %return4, %return10
  %output12 = fsub double %output, %output11
  %output16 = fmul double %return4, %return7
  %output20 = fmul double %return, %return10
  %output21 = fadd double %output16, %output20
  %w22 = load double, double* %w
  %output24 = fmul double %w22, %output12
  %tmp = load <2 x double>, <2 x double>* %p
  %return25 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output24, i64 0)
  %output27 = extractvalue { double, <2 x double> } %return25, 1
  store <2 x double> %output27, <2 x double>* %p
  %w28 = load double, double* %w
  %output30 = fmul double %w28, %output21
  %return32 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output27, double %output30, i64 1)
  %output34 = extractvalue { double, <2 x double> } %return32, 1
  store <2 x double> %output34, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_HORSESHOE@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %w1 = load double, double* %w
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %output = fadd double %SQRT, 1.000000e-10
  %output3 = call double @"div@FF"(double %w1, double %output)
  %_p4 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p4, i64 0)
  %return6 = call double @"getcomp@FUI"(<2 x double> %_p4, i64 1)
  %output7 = fsub double %return, %return6
  %output12 = fadd double %return, %return6
  %output13 = fmul double %output7, %output12
  %output15 = fmul double %output13, %output3
  %tmp = load <2 x double>, <2 x double>* %p
  %return16 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output15, i64 0)
  %output18 = extractvalue { double, <2 x double> } %return16, 1
  store <2 x double> %output18, <2 x double>* %p
  %_p19 = load <2 x double>, <2 x double>* %_p
  %return20 = call double @"getcomp@FUI"(<2 x double> %_p19, i64 0)
  %output21 = fmul double 2.000000e+00, %return20
  %return23 = call double @"getcomp@FUI"(<2 x double> %_p19, i64 1)
  %output24 = fmul double %output21, %return23
  %output26 = fmul double %output24, %output3
  %return28 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output18, double %output26, i64 1)
  %output30 = extractvalue { double, <2 x double> } %return28, 1
  store <2 x double> %output30, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_POLAR@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %ATAN = call double @"ATAN@FU"(<2 x double>* %0)
  %output = fmul double %ATAN, 0x3FD45F306DC9C883
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %1
  %SQRT = call double @"SQRT@FU"(<2 x double>* %1)
  %output3 = fsub double %SQRT, 1.000000e+00
  %w4 = load double, double* %w
  %output6 = fmul double %w4, %output
  %tmp = load <2 x double>, <2 x double>* %p
  %return = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output6, i64 0)
  %output8 = extractvalue { double, <2 x double> } %return, 1
  store <2 x double> %output8, <2 x double>* %p
  %w9 = load double, double* %w
  %output11 = fmul double %w9, %output3
  %return13 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output8, double %output11, i64 1)
  %output15 = extractvalue { double, <2 x double> } %return13, 1
  store <2 x double> %output15, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_HANDKERCHIEF@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca <2 x double>
  %3 = alloca <2 x double>
  %4 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %ATAN = call double @"ATAN@FU"(<2 x double>* %0)
  %w2 = load double, double* %w
  %_p3 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p3, <2 x double>* %1
  %SQRT = call double @"SQRT@FU"(<2 x double>* %1)
  %output = fmul double %w2, %SQRT
  %_p5 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p5, <2 x double>* %2
  %SQRT6 = call double @"SQRT@FU"(<2 x double>* %2)
  %output7 = fadd double %ATAN, %SQRT6
  %return = call double @"sin@FF"(double %output7)
  %output8 = fmul double %output, %return
  %tmp = load <2 x double>, <2 x double>* %p
  %return9 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output8, i64 0)
  %output11 = extractvalue { double, <2 x double> } %return9, 1
  store <2 x double> %output11, <2 x double>* %p
  %w12 = load double, double* %w
  %_p13 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p13, <2 x double>* %3
  %SQRT14 = call double @"SQRT@FU"(<2 x double>* %3)
  %output15 = fmul double %w12, %SQRT14
  %_p17 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p17, <2 x double>* %4
  %SQRT18 = call double @"SQRT@FU"(<2 x double>* %4)
  %output19 = fsub double %ATAN, %SQRT18
  %return20 = call double @"cos@FF"(double %output19)
  %output21 = fmul double %output15, %return20
  %tmp22 = load <2 x double>, <2 x double>* %p
  %return23 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp22, double %output21, i64 1)
  %output25 = extractvalue { double, <2 x double> } %return23, 1
  store <2 x double> %output25, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_HEART@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %1
  %ATAN = call double @"ATAN@FU"(<2 x double>* %1)
  %output = fmul double %SQRT, %ATAN
  %return = call double @"sin@FF"(double %output)
  %return5 = call double @"cos@FF"(double %output)
  %w6 = load double, double* %w
  %_p7 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p7, <2 x double>* %2
  %SQRT8 = call double @"SQRT@FU"(<2 x double>* %2)
  %output9 = fmul double %w6, %SQRT8
  %output11 = fmul double %output9, %return
  %output14 = fmul double %output11, %return
  %tmp = load <2 x double>, <2 x double>* %p
  %return15 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output14, i64 0)
  %output17 = extractvalue { double, <2 x double> } %return15, 1
  store <2 x double> %output17, <2 x double>* %p
  %return19 = call double @"neg@FF"(double %output11)
  %output21 = fmul double %return19, %return5
  %return23 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output17, double %output21, i64 1)
  %output25 = extractvalue { double, <2 x double> } %return23, 1
  store <2 x double> %output25, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_DISC@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %sr = alloca double
  %cr = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sr, !vex-initializer-store !3
  store double 0.000000e+00, double* %cr, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %ATAN = call double @"ATAN@FU"(<2 x double>* %0)
  %output = call double @"div@FF"(double 1.000000e+00, double 0x400921FB4D12D84A)
  %output2 = fmul double %ATAN, %output
  %_p3 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p3, <2 x double>* %1
  %SQRT = call double @"SQRT@FU"(<2 x double>* %1)
  %output4 = fmul double 0x400921FB4D12D84A, %SQRT
  store double %output4, double* %2
  call void @"sincos@FFF"(double* %2, double* %sr, double* %cr)
  %w6 = load double, double* %w
  %sr7 = load double, double* %sr
  %output8 = fmul double %w6, %sr7
  %output10 = fmul double %output8, %output2
  %tmp = load <2 x double>, <2 x double>* %p
  %return = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output10, i64 0)
  %output12 = extractvalue { double, <2 x double> } %return, 1
  store <2 x double> %output12, <2 x double>* %p
  %w13 = load double, double* %w
  %cr14 = load double, double* %cr
  %output15 = fmul double %w13, %cr14
  %output17 = fmul double %output15, %output2
  %return19 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output12, double %output17, i64 1)
  %output21 = extractvalue { double, <2 x double> } %return19, 1
  store <2 x double> %output21, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SPIRAL@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %sr = alloca double
  %cr = alloca double
  %1 = alloca <2 x double>
  %2 = alloca double
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %cast = call <2 x double> @"set@UF"(double %SQRT)
  %output = call <2 x double> @"div@UU"(<2 x double> %_p1, <2 x double> %cast)
  store double 0.000000e+00, double* %sr, !vex-initializer-store !3
  store double 0.000000e+00, double* %cr, !vex-initializer-store !3
  %_p3 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p3, <2 x double>* %1
  %SQRT4 = call double @"SQRT@FU"(<2 x double>* %1)
  %output5 = fadd double %SQRT4, 1.000000e-10
  %w6 = load double, double* %w
  %output8 = call double @"div@FF"(double %w6, double %output5)
  store double %output5, double* %2
  call void @"sincos@FFF"(double* %2, double* %sr, double* %cr)
  %return = call double @"getcomp@FUI"(<2 x double> %output, i64 1)
  %sr12 = load double, double* %sr
  %output13 = fadd double %return, %sr12
  %output14 = fmul double %output8, %output13
  %tmp = load <2 x double>, <2 x double>* %p
  %return15 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output14, i64 0)
  %output17 = extractvalue { double, <2 x double> } %return15, 1
  store <2 x double> %output17, <2 x double>* %p
  %return20 = call double @"getcomp@FUI"(<2 x double> %output, i64 0)
  %cr21 = load double, double* %cr
  %output22 = fsub double %return20, %cr21
  %output23 = fmul double %output8, %output22
  %return25 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output17, double %output23, i64 1)
  %output27 = extractvalue { double, <2 x double> } %return25, 1
  store <2 x double> %output27, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind readnone
declare <2 x double> @"set@UF"(double) #1

; Function Attrs: nounwind readnone
declare <2 x double> @"div@UU"(<2 x double>, <2 x double>) #1

; Function Attrs: alwaysinline nounwind
define private void @"V_HIPERBOLIC@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %cast = call <2 x double> @"set@UF"(double %SQRT)
  %output = call <2 x double> @"div@UU"(<2 x double> %_p1, <2 x double> %cast)
  %_p3 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p3, <2 x double>* %1
  %SQRT4 = call double @"SQRT@FU"(<2 x double>* %1)
  %output5 = fadd double %SQRT4, 1.000000e-10
  %w6 = load double, double* %w
  %return = call double @"getcomp@FUI"(<2 x double> %output, i64 0)
  %output8 = fmul double %w6, %return
  %output10 = call double @"div@FF"(double %output8, double %output5)
  %tmp = load <2 x double>, <2 x double>* %p
  %return11 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output10, i64 0)
  %output13 = extractvalue { double, <2 x double> } %return11, 1
  store <2 x double> %output13, <2 x double>* %p
  %w14 = load double, double* %w
  %return16 = call double @"getcomp@FUI"(<2 x double> %output, i64 1)
  %output17 = fmul double %w14, %return16
  %output19 = fmul double %output17, %output5
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output13, double %output19, i64 1)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_DIAMOND@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %sr = alloca double
  %cr = alloca double
  %1 = alloca <2 x double>
  %2 = alloca double
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %cast = call <2 x double> @"set@UF"(double %SQRT)
  %output = call <2 x double> @"div@UU"(<2 x double> %_p1, <2 x double> %cast)
  store double 0.000000e+00, double* %sr, !vex-initializer-store !3
  store double 0.000000e+00, double* %cr, !vex-initializer-store !3
  %_p3 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p3, <2 x double>* %1
  %SQRT4 = call double @"SQRT@FU"(<2 x double>* %1)
  store double %SQRT4, double* %2
  call void @"sincos@FFF"(double* %2, double* %sr, double* %cr)
  %w6 = load double, double* %w
  %return = call double @"getcomp@FUI"(<2 x double> %output, i64 0)
  %cr8 = load double, double* %cr
  %output9 = fmul double %return, %cr8
  %output10 = fmul double %w6, %output9
  %tmp = load <2 x double>, <2 x double>* %p
  %return11 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output10, i64 0)
  %output13 = extractvalue { double, <2 x double> } %return11, 1
  store <2 x double> %output13, <2 x double>* %p
  %w14 = load double, double* %w
  %return16 = call double @"getcomp@FUI"(<2 x double> %output, i64 1)
  %sr17 = load double, double* %sr
  %output18 = fmul double %return16, %sr17
  %output19 = fmul double %w14, %output18
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output13, double %output19, i64 1)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_EX@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %ATAN = call double @"ATAN@FU"(<2 x double>* %0)
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %1
  %SQRT = call double @"SQRT@FU"(<2 x double>* %1)
  %output = fadd double %ATAN, %SQRT
  %return = call double @"sin@FF"(double %output)
  %output7 = fsub double %ATAN, %SQRT
  %return8 = call double @"cos@FF"(double %output7)
  %output11 = fmul double %return, %return
  %output13 = fmul double %output11, %return
  %output15 = fmul double %output13, %SQRT
  %output18 = fmul double %return8, %return8
  %output20 = fmul double %output18, %return8
  %output22 = fmul double %output20, %SQRT
  %w23 = load double, double* %w
  %output26 = fadd double %output15, %output22
  %output27 = fmul double %w23, %output26
  %tmp = load <2 x double>, <2 x double>* %p
  %return28 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output27, i64 0)
  %output30 = extractvalue { double, <2 x double> } %return28, 1
  store <2 x double> %output30, <2 x double>* %p
  %w31 = load double, double* %w
  %output34 = fsub double %output15, %output22
  %output35 = fmul double %w31, %output34
  %return37 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output30, double %output35, i64 1)
  %output39 = extractvalue { double, <2 x double> } %return37, 1
  store <2 x double> %output39, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_JULIA@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %ATAN = call double @"ATAN@FU"(<2 x double>* %0)
  %output = fmul double 5.000000e-01, %ATAN
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i64 0, i64 0))
  %return2 = fcmp olt double %return, 5.000000e-01
  br i1 %return2, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %output5 = fadd double %output, 0x400921FB4D12D84A
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %aa.0 = phi double [ %output5, %true ], [ %output, %__llvm_entry ]
  %w6 = load double, double* %w
  %_p7 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p7, <2 x double>* %1
  %SQRT = call double @"SQRT@FU"(<2 x double>* %1)
  %return8 = call double @"sqrt@FF"(double %SQRT)
  %output9 = fmul double %w6, %return8
  store double %aa.0, double* %2
  call void @"sincos@FFF"(double* %2, double* %sa, double* %ca)
  %ca12 = load double, double* %ca
  %output13 = fmul double %output9, %ca12
  %tmp = load <2 x double>, <2 x double>* %p
  %return14 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output13, i64 0)
  %output16 = extractvalue { double, <2 x double> } %return14, 1
  store <2 x double> %output16, <2 x double>* %p
  %sa18 = load double, double* %sa
  %output19 = fmul double %output9, %sa18
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output16, double %output19, i64 1)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_BENT@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  %return3 = call double @"getcomp@FUI"(<2 x double> %_p1, i64 1)
  %return5 = fcmp olt double %return, 0.000000e+00
  br i1 %return5, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %output = fmul double %return, 2.000000e+00
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %nx.0 = phi double [ %output, %true ], [ %return, %__llvm_entry ]
  %return9 = fcmp olt double %return3, 0.000000e+00
  br i1 %return9, label %true11, label %end12

true11:                                           ; preds = %end
  %output14 = call double @"div@FF"(double %return3, double 2.000000e+00)
  br label %end12

end12:                                            ; preds = %true11, %end
  %ny.0 = phi double [ %output14, %true11 ], [ %return3, %end ]
  %w15 = load double, double* %w
  %output17 = fmul double %w15, %nx.0
  %tmp = load <2 x double>, <2 x double>* %p
  %return18 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output17, i64 0)
  %output20 = extractvalue { double, <2 x double> } %return18, 1
  store <2 x double> %output20, <2 x double>* %p
  %w21 = load double, double* %w
  %output23 = fmul double %w21, %ny.0
  %return25 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output20, double %output23, i64 1)
  %output27 = extractvalue { double, <2 x double> } %return25, 1
  store <2 x double> %output27, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_WAVES@UUFFFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %d, double* %e, double* %f, double* %h) #0 {
__llvm_entry:
  %f1 = load double, double* %f
  %output = fmul double %f1, %f1
  %output3 = fadd double %output, 1.000000e-10
  %output4 = call double @"div@FF"(double 1.000000e+00, double %output3)
  %h5 = load double, double* %h
  %output7 = fmul double %h5, %h5
  %output8 = fadd double %output7, 1.000000e-10
  %output9 = call double @"div@FF"(double 1.000000e+00, double %output8)
  %_p10 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p10, i64 0)
  %d11 = load double, double* %d
  %return13 = call double @"getcomp@FUI"(<2 x double> %_p10, i64 1)
  %output15 = fmul double %return13, %output4
  %return16 = call double @"sin@FF"(double %output15)
  %output17 = fmul double %d11, %return16
  %output18 = fadd double %return, %output17
  %e21 = load double, double* %e
  %output25 = fmul double %return, %output9
  %return26 = call double @"sin@FF"(double %output25)
  %output27 = fmul double %e21, %return26
  %output28 = fadd double %return13, %output27
  %w29 = load double, double* %w
  %output31 = fmul double %w29, %output18
  %tmp = load <2 x double>, <2 x double>* %p
  %return32 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output31, i64 0)
  %output34 = extractvalue { double, <2 x double> } %return32, 1
  store <2 x double> %output34, <2 x double>* %p
  %w35 = load double, double* %w
  %output37 = fmul double %w35, %output28
  %return39 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output34, double %output37, i64 1)
  %output41 = extractvalue { double, <2 x double> } %return39, 1
  store <2 x double> %output41, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_FISHEYE@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %w2 = load double, double* %w
  %output = fmul double 2.000000e+00, %w2
  %output4 = fadd double %SQRT, 1.000000e+00
  %output5 = call double @"div@FF"(double %output, double %output4)
  %_p7 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p7, i64 1)
  %output8 = fmul double %output5, %return
  %tmp = load <2 x double>, <2 x double>* %p
  %return9 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output8, i64 0)
  %output11 = extractvalue { double, <2 x double> } %return9, 1
  store <2 x double> %output11, <2 x double>* %p
  %_p13 = load <2 x double>, <2 x double>* %_p
  %return14 = call double @"getcomp@FUI"(<2 x double> %_p13, i64 0)
  %output15 = fmul double %output5, %return14
  %return17 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output11, double %output15, i64 1)
  %output19 = extractvalue { double, <2 x double> } %return17, 1
  store <2 x double> %output19, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_POPCORN@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %d, double* %h) #0 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 1)
  %output = fmul double 3.000000e+00, %return
  %return2 = call double @"tan@FF"(double %output)
  %return4 = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  %output5 = fmul double 3.000000e+00, %return4
  %return6 = call double @"tan@FF"(double %output5)
  %d9 = load double, double* %d
  %return11 = call double @"sin@FF"(double %return2)
  %output12 = fmul double %d9, %return11
  %output13 = fadd double %return4, %output12
  %h16 = load double, double* %h
  %return18 = call double @"sin@FF"(double %return6)
  %output19 = fmul double %h16, %return18
  %output20 = fadd double %return, %output19
  %w21 = load double, double* %w
  %output23 = fmul double %w21, %output13
  %tmp = load <2 x double>, <2 x double>* %p
  %return24 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output23, i64 0)
  %output26 = extractvalue { double, <2 x double> } %return24, 1
  store <2 x double> %output26, <2 x double>* %p
  %w27 = load double, double* %w
  %output29 = fmul double %w27, %output20
  %return31 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output26, double %output29, i64 1)
  %output33 = extractvalue { double, <2 x double> } %return31, 1
  store <2 x double> %output33, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind readnone
declare double @"tan@FF"(double) #1

; Function Attrs: alwaysinline nounwind
define private void @"V_EXPONENTIAL@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %sdy = alloca double
  %cdy = alloca double
  %0 = alloca double
  store double 0.000000e+00, double* %sdy, !vex-initializer-store !3
  store double 0.000000e+00, double* %cdy, !vex-initializer-store !3
  %w1 = load double, double* %w
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %output = fsub double %return, 1.000000e+00
  %return3 = call double @"exp@FF"(double %output)
  %output4 = fmul double %w1, %return3
  %return6 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  %output7 = fmul double 0x400921FB4D12D84A, %return6
  store double %output7, double* %0
  call void @"sincos@FFF"(double* %0, double* %sdy, double* %cdy)
  %cdy10 = load double, double* %cdy
  %output11 = fmul double %output4, %cdy10
  %tmp = load <2 x double>, <2 x double>* %p
  %return12 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output11, i64 0)
  %output14 = extractvalue { double, <2 x double> } %return12, 1
  store <2 x double> %output14, <2 x double>* %p
  %sdy16 = load double, double* %sdy
  %output17 = fmul double %output4, %sdy16
  %return19 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output14, double %output17, i64 1)
  %output21 = extractvalue { double, <2 x double> } %return19, 1
  store <2 x double> %output21, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind readnone
declare double @"exp@FF"(double) #1

; Function Attrs: alwaysinline nounwind
define private void @"V_POWER@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %cast = call <2 x double> @"set@UF"(double %SQRT)
  %output = call <2 x double> @"div@UU"(<2 x double> %_p1, <2 x double> %cast)
  %w3 = load double, double* %w
  %_p4 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p4, <2 x double>* %1
  %SQRT5 = call double @"SQRT@FU"(<2 x double>* %1)
  %return = call double @"getcomp@FUI"(<2 x double> %output, i64 0)
  %return7 = call double @"pow@FFF"(double %SQRT5, double %return)
  %output8 = fmul double %w3, %return7
  %return11 = call double @"getcomp@FUI"(<2 x double> %output, i64 1)
  %output12 = fmul double %output8, %return11
  %tmp = load <2 x double>, <2 x double>* %p
  %return13 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output12, i64 0)
  %output15 = extractvalue { double, <2 x double> } %return13, 1
  store <2 x double> %output15, <2 x double>* %p
  %output19 = fmul double %output8, %return
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output15, double %output19, i64 1)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind readnone
declare double @"pow@FFF"(double, double) #1

; Function Attrs: alwaysinline nounwind
define private void @"V_COSINE@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  %output = fmul double %return, 0x400921FB4D12D84A
  store double %output, double* %0
  call void @"sincos@FFF"(double* %0, double* %sa, double* %ca)
  %ca3 = load double, double* %ca
  %_p4 = load <2 x double>, <2 x double>* %_p
  %return5 = call double @"getcomp@FUI"(<2 x double> %_p4, i64 1)
  %return6 = call double @"cosh@FF"(double %return5)
  %output7 = fmul double %ca3, %return6
  %sa8 = load double, double* %sa
  %return9 = call double @"neg@FF"(double %sa8)
  %return12 = call double @"sinh@FF"(double %return5)
  %output13 = fmul double %return9, %return12
  %w14 = load double, double* %w
  %output16 = fmul double %w14, %output7
  %tmp = load <2 x double>, <2 x double>* %p
  %return17 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output16, i64 0)
  %output19 = extractvalue { double, <2 x double> } %return17, 1
  store <2 x double> %output19, <2 x double>* %p
  %w20 = load double, double* %w
  %output22 = fmul double %w20, %output13
  %return24 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output19, double %output22, i64 1)
  %output26 = extractvalue { double, <2 x double> } %return24, 1
  store <2 x double> %output26, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind readnone
declare double @"cosh@FF"(double) #1

; Function Attrs: nounwind readnone
declare double @"sinh@FF"(double) #1

; Function Attrs: alwaysinline nounwind
define private void @"V_RINGS@UUFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %d) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  %3 = alloca double
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %cast = call <2 x double> @"set@UF"(double %SQRT)
  %output = call <2 x double> @"div@UU"(<2 x double> %_p1, <2 x double> %cast)
  %d3 = load double, double* %d
  %output5 = fmul double %d3, %d3
  %output6 = fadd double %output5, 1.000000e-10
  %_p7 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p7, <2 x double>* %1
  %SQRT8 = call double @"SQRT@FU"(<2 x double>* %1)
  %w9 = load double, double* %w
  %output12 = fadd double %SQRT8, %output6
  store double %output12, double* %2
  %output14 = fmul double 2.000000e+00, %output6
  store double %output14, double* %3
  %fmod = call double @"fmod@FFF"(double* %2, double* %3)
  %output16 = fsub double %fmod, %output6
  %output19 = fsub double 1.000000e+00, %output6
  %output20 = fmul double %SQRT8, %output19
  %output21 = fadd double %output16, %output20
  %output22 = fmul double %w9, %output21
  %return = call double @"getcomp@FUI"(<2 x double> %output, i64 1)
  %output25 = fmul double %output22, %return
  %tmp = load <2 x double>, <2 x double>* %p
  %return26 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output25, i64 0)
  %output28 = extractvalue { double, <2 x double> } %return26, 1
  store <2 x double> %output28, <2 x double>* %p
  %return31 = call double @"getcomp@FUI"(<2 x double> %output, i64 0)
  %output32 = fmul double %output22, %return31
  %return34 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output28, double %output32, i64 1)
  %output36 = extractvalue { double, <2 x double> } %return34, 1
  store <2 x double> %output36, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_FAN@UUFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %d) #0 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  %3 = alloca double
  %4 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %d1 = load double, double* %d
  %output = fmul double %d1, %d1
  %output3 = fadd double %output, 1.000000e-10
  %output4 = fmul double 0x400921FB4D12D84A, %output3
  %output7 = fmul double 5.000000e-01, %output4
  %_p8 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p8, <2 x double>* %0
  %ATAN = call double @"ATAN@FU"(<2 x double>* %0)
  %w9 = load double, double* %w
  %_p10 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p10, <2 x double>* %1
  %SQRT = call double @"SQRT@FU"(<2 x double>* %1)
  %output11 = fmul double %w9, %SQRT
  %output15 = fadd double %ATAN, %d1
  store double %output15, double* %2
  store double %output4, double* %3
  %fmod = call double @"fmod@FFF"(double* %2, double* %3)
  %return = fcmp ogt double %fmod, %output7
  br i1 %return, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %return20 = call double @"neg@FF"(double %output7)
  br label %end

end:                                              ; preds = %__llvm_entry, %true
  %phi = phi double [ %return20, %true ], [ %output7, %__llvm_entry ]
  %output22 = fadd double %ATAN, %phi
  store double %output22, double* %4
  call void @"sincos@FFF"(double* %4, double* %sa, double* %ca)
  %ca25 = load double, double* %ca
  %output26 = fmul double %output11, %ca25
  %tmp = load <2 x double>, <2 x double>* %p
  %return27 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output26, i64 0)
  %output29 = extractvalue { double, <2 x double> } %return27, 1
  store <2 x double> %output29, <2 x double>* %p
  %sa31 = load double, double* %sa
  %output32 = fmul double %output11, %sa31
  %return34 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output29, double %output32, i64 1)
  %output36 = extractvalue { double, <2 x double> } %return34, 1
  store <2 x double> %output36, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_BUBBLE@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %w1 = load double, double* %w
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %output = fmul double 2.500000e-01, %SUMSQ
  %output3 = fadd double %output, 1.000000e+00
  %output4 = call double @"div@FF"(double %w1, double %output3)
  %_p6 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p6, i64 0)
  %output7 = fmul double %output4, %return
  %tmp = load <2 x double>, <2 x double>* %p
  %return8 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output7, i64 0)
  %output10 = extractvalue { double, <2 x double> } %return8, 1
  store <2 x double> %output10, <2 x double>* %p
  %_p12 = load <2 x double>, <2 x double>* %_p
  %return13 = call double @"getcomp@FUI"(<2 x double> %_p12, i64 1)
  %output14 = fmul double %output4, %return13
  %return16 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output10, double %output14, i64 1)
  %output18 = extractvalue { double, <2 x double> } %return16, 1
  store <2 x double> %output18, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_CYLINDER@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %w1 = load double, double* %w
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %return3 = call double @"sin@FF"(double %return)
  %output = fmul double %w1, %return3
  %tmp = load <2 x double>, <2 x double>* %p
  %return4 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output, i64 0)
  %output6 = extractvalue { double, <2 x double> } %return4, 1
  store <2 x double> %output6, <2 x double>* %p
  %w7 = load double, double* %w
  %_p8 = load <2 x double>, <2 x double>* %_p
  %return9 = call double @"getcomp@FUI"(<2 x double> %_p8, i64 1)
  %output10 = fmul double %w7, %return9
  %return12 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output6, double %output10, i64 1)
  %output14 = extractvalue { double, <2 x double> } %return12, 1
  store <2 x double> %output14, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_EYEFISH@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %w1 = load double, double* %w
  %output = fmul double %w1, 2.000000e+00
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %output3 = fadd double 1.000000e+00, %SQRT
  %output4 = call double @"div@FF"(double %output, double %output3)
  %_p6 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p6, i64 0)
  %output7 = fmul double %output4, %return
  %tmp = load <2 x double>, <2 x double>* %p
  %return8 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output7, i64 0)
  %output10 = extractvalue { double, <2 x double> } %return8, 1
  store <2 x double> %output10, <2 x double>* %p
  %_p12 = load <2 x double>, <2 x double>* %_p
  %return13 = call double @"getcomp@FUI"(<2 x double> %_p12, i64 1)
  %output14 = fmul double %output4, %return13
  %return16 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output10, double %output14, i64 1)
  %output18 = extractvalue { double, <2 x double> } %return16, 1
  store <2 x double> %output18, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_BLUR@UF"(<2 x double>* %p, double* %w) #0 {
__llvm_entry:
  %sinr = alloca double
  %cosr = alloca double
  %0 = alloca double
  store double 0.000000e+00, double* %sinr, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosr, !vex-initializer-store !3
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i64 0, i64 0))
  %output = fmul double %return, 2.000000e+00
  %output1 = fmul double %output, 0x400921FB4D12D84A
  store double %output1, double* %0
  call void @"sincos@FFF"(double* %0, double* %sinr, double* %cosr)
  %w3 = load double, double* %w
  %return4 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i64 0, i64 0))
  %output5 = fmul double %w3, %return4
  %cosr7 = load double, double* %cosr
  %output8 = fmul double %output5, %cosr7
  %tmp = load <2 x double>, <2 x double>* %p
  %return9 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output8, i64 0)
  %output11 = extractvalue { double, <2 x double> } %return9, 1
  store <2 x double> %output11, <2 x double>* %p
  %sinr13 = load double, double* %sinr
  %output14 = fmul double %output5, %sinr13
  %return16 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output11, double %output14, i64 1)
  %output18 = extractvalue { double, <2 x double> } %return16, 1
  store <2 x double> %output18, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_CURL@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %c1, double* %c2) #0 {
__llvm_entry:
  %c11 = load double, double* %c1
  %return = fcmp oeq double %c11, 0.000000e+00
  %c23 = load double, double* %c2
  %return4 = fcmp oeq double %c23, 0.000000e+00
  br i1 %return, label %true, label %false

true:                                             ; preds = %__llvm_entry
  br i1 %return4, label %true6, label %false7

false:                                            ; preds = %__llvm_entry
  %_p87 = load <2 x double>, <2 x double>* %_p
  %return88 = call double @"getcomp@FUI"(<2 x double> %_p87, i64 0)
  %output89 = fmul double %c11, %return88
  %output90 = fadd double 1.000000e+00, %output89
  br i1 %return4, label %true83, label %false84

end:                                              ; preds = %true83, %false84, %true6, %false7
  ret void

true6:                                            ; preds = %true
  %w9 = load double, double* %w
  %_p10 = load <2 x double>, <2 x double>* %_p
  %return11 = call double @"getcomp@FUI"(<2 x double> %_p10, i64 0)
  %output = fmul double %w9, %return11
  %tmp = load <2 x double>, <2 x double>* %p
  %return12 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output, i64 0)
  %output14 = extractvalue { double, <2 x double> } %return12, 1
  store <2 x double> %output14, <2 x double>* %p
  %w15 = load double, double* %w
  %_p16 = load <2 x double>, <2 x double>* %_p
  %return17 = call double @"getcomp@FUI"(<2 x double> %_p16, i64 1)
  %output18 = fmul double %w15, %return17
  %return20 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output14, double %output18, i64 1)
  %output22 = extractvalue { double, <2 x double> } %return20, 1
  store <2 x double> %output22, <2 x double>* %p
  br label %end

false7:                                           ; preds = %true
  %_p24 = load <2 x double>, <2 x double>* %_p
  %return25 = call double @"getcomp@FUI"(<2 x double> %_p24, i64 0)
  %return26 = call double @"sqrt@FF"(double %return25)
  %return28 = call double @"getcomp@FUI"(<2 x double> %_p24, i64 1)
  %return29 = call double @"sqrt@FF"(double %return28)
  %output30 = fsub double %return26, %return29
  %output31 = fmul double %c23, %output30
  %output32 = fadd double 1.000000e+00, %output31
  %output34 = fmul double %c23, 2.000000e+00
  %output37 = fmul double %output34, %return25
  %output40 = fmul double %output37, %return28
  %w41 = load double, double* %w
  %output44 = fmul double %output32, %output32
  %output47 = fmul double %output40, %output40
  %output48 = fadd double %output44, %output47
  %output49 = call double @"div@FF"(double %w41, double %output48)
  %output53 = fmul double %return25, %output32
  %output57 = fmul double %return28, %output40
  %output58 = fadd double %output53, %output57
  %output60 = fmul double %output58, %output49
  %tmp61 = load <2 x double>, <2 x double>* %p
  %return62 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp61, double %output60, i64 0)
  %output64 = extractvalue { double, <2 x double> } %return62, 1
  store <2 x double> %output64, <2 x double>* %p
  %_p65 = load <2 x double>, <2 x double>* %_p
  %return66 = call double @"getcomp@FUI"(<2 x double> %_p65, i64 1)
  %output68 = fmul double %return66, %output32
  %return70 = call double @"getcomp@FUI"(<2 x double> %_p65, i64 0)
  %output72 = fmul double %return70, %output40
  %output73 = fsub double %output68, %output72
  %output75 = fmul double %output73, %output49
  %return77 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output64, double %output75, i64 1)
  %output79 = extractvalue { double, <2 x double> } %return77, 1
  store <2 x double> %output79, <2 x double>* %p
  br label %end

true83:                                           ; preds = %false
  %return93 = call double @"getcomp@FUI"(<2 x double> %_p87, i64 1)
  %output94 = fmul double %c11, %return93
  %w95 = load double, double* %w
  %output98 = fmul double %output90, %output90
  %output101 = fmul double %output94, %output94
  %output102 = fadd double %output98, %output101
  %output103 = call double @"div@FF"(double %w95, double %output102)
  %output107 = fmul double %return88, %output90
  %output111 = fmul double %return93, %output94
  %output112 = fadd double %output107, %output111
  %output114 = fmul double %output112, %output103
  %tmp115 = load <2 x double>, <2 x double>* %p
  %return116 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp115, double %output114, i64 0)
  %output118 = extractvalue { double, <2 x double> } %return116, 1
  store <2 x double> %output118, <2 x double>* %p
  %_p119 = load <2 x double>, <2 x double>* %_p
  %return120 = call double @"getcomp@FUI"(<2 x double> %_p119, i64 1)
  %output122 = fmul double %return120, %output90
  %return124 = call double @"getcomp@FUI"(<2 x double> %_p119, i64 0)
  %output126 = fmul double %return124, %output94
  %output127 = fsub double %output122, %output126
  %output129 = fmul double %output127, %output103
  %return131 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output118, double %output129, i64 1)
  %output133 = extractvalue { double, <2 x double> } %return131, 1
  store <2 x double> %output133, <2 x double>* %p
  br label %end

false84:                                          ; preds = %false
  %return142 = call double @"sqrt@FF"(double %return88)
  %return144 = call double @"getcomp@FUI"(<2 x double> %_p87, i64 1)
  %return145 = call double @"sqrt@FF"(double %return144)
  %output146 = fsub double %return142, %return145
  %output147 = fmul double %c23, %output146
  %output148 = fadd double %output90, %output147
  %output152 = fmul double %c11, %return144
  %output154 = fmul double %c23, 2.000000e+00
  %output157 = fmul double %output154, %return88
  %output160 = fmul double %output157, %return144
  %output161 = fadd double %output152, %output160
  %w162 = load double, double* %w
  %output165 = fmul double %output148, %output148
  %output168 = fmul double %output161, %output161
  %output169 = fadd double %output165, %output168
  %output170 = call double @"div@FF"(double %w162, double %output169)
  %output174 = fmul double %return88, %output148
  %output178 = fmul double %return144, %output161
  %output179 = fadd double %output174, %output178
  %output181 = fmul double %output179, %output170
  %tmp182 = load <2 x double>, <2 x double>* %p
  %return183 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp182, double %output181, i64 0)
  %output185 = extractvalue { double, <2 x double> } %return183, 1
  store <2 x double> %output185, <2 x double>* %p
  %_p186 = load <2 x double>, <2 x double>* %_p
  %return187 = call double @"getcomp@FUI"(<2 x double> %_p186, i64 1)
  %output189 = fmul double %return187, %output148
  %return191 = call double @"getcomp@FUI"(<2 x double> %_p186, i64 0)
  %output193 = fmul double %return191, %output161
  %output194 = fsub double %output189, %output193
  %output196 = fmul double %output194, %output170
  %return198 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output185, double %output196, i64 1)
  %output200 = extractvalue { double, <2 x double> } %return198, 1
  store <2 x double> %output200, <2 x double>* %p
  br label %end
}

; Function Attrs: alwaysinline nounwind
define private void @"V_NGON@UUFFFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %pow, double* %sides, double* %corners, double* %circle) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %return = call double @"neg@FF"(double 5.000000e-01)
  %pow1 = load double, double* %pow
  %output = fmul double %return, %pow1
  %sides2 = load double, double* %sides
  %output3 = call double @"div@FF"(double 0x401921FB4D12D84A, double %sides2)
  %output5 = call double @"div@FF"(double 1.000000e+00, double %output3)
  %_p6 = load <2 x double>, <2 x double>* %_p
  %return7 = call double @"getcomp@FUI"(<2 x double> %_p6, i64 0)
  %return8 = fcmp oeq double %return7, 0.000000e+00
  %return9 = zext i1 %return8 to i64
  %return11 = call double @"getcomp@FUI"(<2 x double> %_p6, i64 1)
  %return12 = fcmp oeq double %return11, 0.000000e+00
  %return13 = zext i1 %return12 to i64
  %return14 = call i64 @"and@III"(i64 %return9, i64 %return13)
  %2 = icmp ne i64 %return14, 0
  br i1 %2, label %end, label %false

false:                                            ; preds = %__llvm_entry
  store <2 x double> %_p6, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %return17 = call double @"pow@FFF"(double %SUMSQ, double %output)
  br label %end

end:                                              ; preds = %__llvm_entry, %false
  %phi18 = phi double [ %return17, %false ], [ 0.000000e+00, %__llvm_entry ]
  %_p19 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p19, <2 x double>* %1
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %1)
  %output24 = fmul double %ATANYX, %output5
  %return25 = call double @"floor@FF"(double %output24)
  %output26 = fmul double %output3, %return25
  %output27 = fsub double %ATANYX, %output26
  %output30 = fmul double 5.000000e-01, %output3
  %return31 = fcmp ogt double %output27, %output30
  br i1 %return31, label %true33, label %end34

true33:                                           ; preds = %end
  %output37 = fsub double %output27, %output3
  br label %end34

end34:                                            ; preds = %true33, %end
  %phi.0 = phi double [ %output37, %true33 ], [ %output27, %end ]
  %corners38 = load double, double* %corners
  %return40 = call double @"cos@FF"(double %phi.0)
  %output41 = call double @"div@FF"(double 1.000000e+00, double %return40)
  %output42 = fsub double %output41, 1.000000e+00
  %output43 = fmul double %corners38, %output42
  %circle44 = load double, double* %circle
  %output45 = fadd double %output43, %circle44
  %w46 = load double, double* %w
  %output47 = fmul double %output45, %w46
  %output49 = fmul double %output47, %phi18
  %_p51 = load <2 x double>, <2 x double>* %_p
  %return52 = call double @"getcomp@FUI"(<2 x double> %_p51, i64 0)
  %output53 = fmul double %output49, %return52
  %tmp = load <2 x double>, <2 x double>* %p
  %return54 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output53, i64 0)
  %output56 = extractvalue { double, <2 x double> } %return54, 1
  store <2 x double> %output56, <2 x double>* %p
  %_p58 = load <2 x double>, <2 x double>* %_p
  %return59 = call double @"getcomp@FUI"(<2 x double> %_p58, i64 1)
  %output60 = fmul double %output49, %return59
  %return62 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output56, double %output60, i64 1)
  %output64 = extractvalue { double, <2 x double> } %return62, 1
  store <2 x double> %output64, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind readnone
declare i64 @"and@III"(i64, i64) #1

; Function Attrs: alwaysinline nounwind
define private void @"V_PDJ@UUFP"(<2 x double>* %p, <2 x double>* %_p, double* %w, <4 x double>* %pp) #0 {
__llvm_entry:
  %pp1 = load <4 x double>, <4 x double>* %pp
  %return = call double @"getcomp@FPI"(<4 x double> %pp1, i64 1)
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return3 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %output = fmul double %return, %return3
  %return4 = call double @"cos@FF"(double %output)
  %return6 = call double @"getcomp@FPI"(<4 x double> %pp1, i64 2)
  %output9 = fmul double %return6, %return3
  %return10 = call double @"sin@FF"(double %output9)
  %return12 = call double @"getcomp@FPI"(<4 x double> %pp1, i64 0)
  %return14 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  %output15 = fmul double %return12, %return14
  %return16 = call double @"sin@FF"(double %output15)
  %return18 = call double @"getcomp@FPI"(<4 x double> %pp1, i64 3)
  %output21 = fmul double %return18, %return14
  %return22 = call double @"cos@FF"(double %output21)
  %w23 = load double, double* %w
  %output26 = fsub double %return16, %return4
  %output27 = fmul double %w23, %output26
  %tmp = load <2 x double>, <2 x double>* %p
  %return28 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output27, i64 0)
  %output30 = extractvalue { double, <2 x double> } %return28, 1
  store <2 x double> %output30, <2 x double>* %p
  %w31 = load double, double* %w
  %output34 = fsub double %return10, %return22
  %output35 = fmul double %w31, %output34
  %return37 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output30, double %output35, i64 1)
  %output39 = extractvalue { double, <2 x double> } %return37, 1
  store <2 x double> %output39, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind readnone
declare double @"getcomp@FPI"(<4 x double>, i64) #1

; Function Attrs: alwaysinline nounwind
define private void @"V_BLOB@UUFFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %pp1, double* %pp2, double* %pp3) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %cast = call <2 x double> @"set@UF"(double %SQRT)
  %output = call <2 x double> @"div@UU"(<2 x double> %_p1, <2 x double> %cast)
  %_p4 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p4, <2 x double>* %1
  %SQRT5 = call double @"SQRT@FU"(<2 x double>* %1)
  %_p7 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p7, <2 x double>* %2
  %ATAN = call double @"ATAN@FU"(<2 x double>* %2)
  %pp18 = load double, double* %pp1
  %pp29 = load double, double* %pp2
  %output10 = fsub double %pp18, %pp29
  %pp314 = load double, double* %pp3
  %output16 = fmul double %pp314, %ATAN
  %return = call double @"sin@FF"(double %output16)
  %output17 = fmul double 5.000000e-01, %return
  %output18 = fadd double 5.000000e-01, %output17
  %output19 = fmul double %output10, %output18
  %output20 = fadd double %pp29, %output19
  %output21 = fmul double %SQRT5, %output20
  %w22 = load double, double* %w
  %return24 = call double @"getcomp@FUI"(<2 x double> %output, i64 0)
  %output25 = fmul double %w22, %return24
  %output27 = fmul double %output25, %output21
  %tmp = load <2 x double>, <2 x double>* %p
  %return28 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output27, i64 0)
  %output30 = extractvalue { double, <2 x double> } %return28, 1
  store <2 x double> %output30, <2 x double>* %p
  %w31 = load double, double* %w
  %return33 = call double @"getcomp@FUI"(<2 x double> %output, i64 1)
  %output34 = fmul double %w31, %return33
  %output36 = fmul double %output34, %output21
  %return38 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output30, double %output36, i64 1)
  %output40 = extractvalue { double, <2 x double> } %return38, 1
  store <2 x double> %output40, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_JULIAN@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %power, double* %jdist) #0 {
__llvm_entry:
  %sina = alloca double
  %cosa = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sina, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosa, !vex-initializer-store !3
  %power1 = load double, double* %power
  %jdist2 = load double, double* %jdist
  %output = call double @"div@FF"(double %jdist2, double %power1)
  %output4 = call double @"div@FF"(double %output, double 2.000000e+00)
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i64 0, i64 0))
  %output6 = fmul double %power1, %return
  %return7 = call double @"trunc@FF"(double %output6)
  %cast = fptosi double %return7 to i64
  %_p8 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p8, <2 x double>* %0
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %0)
  %cast10 = sitofp i64 %cast to double
  %output11 = fmul double 0x401921FB4D12D84A, %cast10
  %output12 = fadd double %ATANYX, %output11
  %power13 = load double, double* %power
  %output14 = call double @"div@FF"(double %output12, double %power13)
  %w15 = load double, double* %w
  %_p16 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p16, <2 x double>* %1
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %1)
  %return18 = call double @"pow@FFF"(double %SUMSQ, double %output4)
  %output19 = fmul double %w15, %return18
  store double %output14, double* %2
  call void @"sincos@FFF"(double* %2, double* %sina, double* %cosa)
  %cosa22 = load double, double* %cosa
  %output23 = fmul double %output19, %cosa22
  %tmp = load <2 x double>, <2 x double>* %p
  %return24 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output23, i64 0)
  %output26 = extractvalue { double, <2 x double> } %return24, 1
  store <2 x double> %output26, <2 x double>* %p
  %sina28 = load double, double* %sina
  %output29 = fmul double %output19, %sina28
  %return31 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output26, double %output29, i64 1)
  %output33 = extractvalue { double, <2 x double> } %return31, 1
  store <2 x double> %output33, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind readnone
declare double @"trunc@FF"(double) #1

; Function Attrs: alwaysinline nounwind
define private void @"V_JULIASCOPE@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %power, double* %jdist) #0 {
__llvm_entry:
  %sina = alloca double
  %cosa = alloca double
  %0 = alloca <2 x double>
  %1 = alloca double
  %2 = alloca <2 x double>
  store double 0.000000e+00, double* %sina, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosa, !vex-initializer-store !3
  %power1 = load double, double* %power
  %jdist2 = load double, double* %jdist
  %output = call double @"div@FF"(double %jdist2, double %power1)
  %output4 = call double @"div@FF"(double %output, double 2.000000e+00)
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i64 0, i64 0))
  %output6 = fmul double %power1, %return
  %return7 = call double @"trunc@FF"(double %output6)
  %cast = fptosi double %return7 to i64
  %return9 = and i64 %cast, 1
  %return10 = call i64 @"eq@III"(i64 %return9, i64 0)
  %3 = icmp ne i64 %return10, 0
  %cast12 = sitofp i64 %cast to double
  %output13 = fmul double 0x401921FB4D12D84A, %cast12
  %_p14 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p14, <2 x double>* %0
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %0)
  br i1 %3, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output15 = fadd double %output13, %ATANYX
  %power16 = load double, double* %power
  %output17 = call double @"div@FF"(double %output15, double %power16)
  br label %end

false:                                            ; preds = %__llvm_entry
  %output23 = fsub double %output13, %ATANYX
  %power24 = load double, double* %power
  %output25 = call double @"div@FF"(double %output23, double %power24)
  br label %end

end:                                              ; preds = %false, %true
  %phi = phi double [ %output17, %true ], [ %output25, %false ]
  store double %phi, double* %1
  call void @"sincos@FFF"(double* %1, double* %sina, double* %cosa)
  %w27 = load double, double* %w
  %_p28 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p28, <2 x double>* %2
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %2)
  %return30 = call double @"pow@FFF"(double %SUMSQ, double %output4)
  %output31 = fmul double %w27, %return30
  %cosa33 = load double, double* %cosa
  %output34 = fmul double %output31, %cosa33
  %tmp = load <2 x double>, <2 x double>* %p
  %return35 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output34, i64 0)
  %output37 = extractvalue { double, <2 x double> } %return35, 1
  store <2 x double> %output37, <2 x double>* %p
  %sina39 = load double, double* %sina
  %output40 = fmul double %output31, %sina39
  %return42 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output37, double %output40, i64 1)
  %output44 = extractvalue { double, <2 x double> } %return42, 1
  store <2 x double> %output44, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_GAUSSIAN@UF"(<2 x double>* %p, double* %w) #0 {
__llvm_entry:
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i64 0, i64 0))
  %output = fmul double %return, 2.000000e+00
  %output1 = fmul double %output, 0x400921FB4D12D84A
  %w2 = load double, double* %w
  %return3 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i64 0, i64 0))
  %return4 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i64 0, i64 0))
  %output5 = fadd double %return3, %return4
  %return6 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i64 0, i64 0))
  %output7 = fadd double %output5, %return6
  %return8 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i64 0, i64 0))
  %output9 = fadd double %output7, %return8
  %output10 = fsub double %output9, 2.000000e+00
  %output11 = fmul double %w2, %output10
  %return14 = call double @"cos@FF"(double %output1)
  %output15 = fmul double %output11, %return14
  %tmp = load <2 x double>, <2 x double>* %p
  %return16 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output15, i64 0)
  %output18 = extractvalue { double, <2 x double> } %return16, 1
  store <2 x double> %output18, <2 x double>* %p
  %return21 = call double @"sin@FF"(double %output1)
  %output22 = fmul double %output11, %return21
  %return24 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output18, double %output22, i64 1)
  %output26 = extractvalue { double, <2 x double> } %return24, 1
  store <2 x double> %output26, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_FAN2@UUFU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %fan2) #0 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %fan21 = load <2 x double>, <2 x double>* %fan2
  %return = call double @"getcomp@FUI"(<2 x double> %fan21, i64 1)
  %return3 = call double @"getcomp@FUI"(<2 x double> %fan21, i64 0)
  %output = fmul double %return3, %return3
  %output6 = fadd double %output, 1.000000e-10
  %output7 = fmul double 0x400921FB4D12D84A, %output6
  %output9 = fmul double 5.000000e-01, %output7
  %_p10 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p10, <2 x double>* %0
  %ATAN = call double @"ATAN@FU"(<2 x double>* %0)
  %w11 = load double, double* %w
  %_p12 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p12, <2 x double>* %1
  %SQRT = call double @"SQRT@FU"(<2 x double>* %1)
  %output13 = fmul double %w11, %SQRT
  %output16 = fadd double %ATAN, %return
  %output22 = call double @"div@FF"(double %output16, double %output7)
  %cast = fptosi double %output22 to i64
  %cast23 = sitofp i64 %cast to double
  %output24 = fmul double %output7, %cast23
  %output25 = fsub double %output16, %output24
  %return28 = fcmp ogt double %output25, %output9
  %output32 = fsub double %ATAN, %output9
  %output35 = fadd double %ATAN, %output9
  %phi = select i1 %return28, double %output32, double %output35
  store double %phi, double* %2
  call void @"sincos@FFF"(double* %2, double* %sa, double* %ca)
  %sa38 = load double, double* %sa
  %output39 = fmul double %output13, %sa38
  %tmp = load <2 x double>, <2 x double>* %p
  %return40 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output39, i64 0)
  %output42 = extractvalue { double, <2 x double> } %return40, 1
  store <2 x double> %output42, <2 x double>* %p
  %ca44 = load double, double* %ca
  %output45 = fmul double %output13, %ca44
  %return47 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output42, double %output45, i64 1)
  %output49 = extractvalue { double, <2 x double> } %return47, 1
  store <2 x double> %output49, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_RINGS2@UUFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %rings2val) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %cast = call <2 x double> @"set@UF"(double %SQRT)
  %output = call <2 x double> @"div@UU"(<2 x double> %_p1, <2 x double> %cast)
  %_p3 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p3, <2 x double>* %1
  %SQRT4 = call double @"SQRT@FU"(<2 x double>* %1)
  %rings2val5 = load double, double* %rings2val
  %output7 = fmul double %rings2val5, %rings2val5
  %return = call double @"neg@FF"(double 2.000000e+00)
  %output10 = fmul double %return, %output7
  %output13 = fadd double %SQRT4, %output7
  %output15 = fmul double 2.000000e+00, %output7
  %output16 = call double @"div@FF"(double %output13, double %output15)
  %cast17 = fptosi double %output16 to i64
  %cast18 = sitofp i64 %cast17 to double
  %output19 = fmul double %output10, %cast18
  %output22 = fsub double 1.000000e+00, %output7
  %output23 = fmul double %SQRT4, %output22
  %output24 = fadd double %output19, %output23
  %output25 = fadd double %SQRT4, %output24
  %w26 = load double, double* %w
  %return28 = call double @"getcomp@FUI"(<2 x double> %output, i64 0)
  %output29 = fmul double %w26, %return28
  %output31 = fmul double %output29, %output25
  %tmp = load <2 x double>, <2 x double>* %p
  %return32 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output31, i64 0)
  %output34 = extractvalue { double, <2 x double> } %return32, 1
  store <2 x double> %output34, <2 x double>* %p
  %w35 = load double, double* %w
  %return37 = call double @"getcomp@FUI"(<2 x double> %output, i64 1)
  %output38 = fmul double %w35, %return37
  %output40 = fmul double %output38, %output25
  %return42 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output34, double %output40, i64 1)
  %output44 = extractvalue { double, <2 x double> } %return42, 1
  store <2 x double> %output44, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_RECTANGLES@UUFU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %rect) #0 {
__llvm_entry:
  %rect1 = load <2 x double>, <2 x double>* %rect
  %return = call double @"getcomp@FUI"(<2 x double> %rect1, i64 0)
  %return2 = fcmp oeq double %return, 0.000000e+00
  %w4 = load double, double* %w
  %_p5 = load <2 x double>, <2 x double>* %_p
  %return6 = call double @"getcomp@FUI"(<2 x double> %_p5, i64 0)
  br i1 %return2, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output = fmul double %w4, %return6
  %tmp = load <2 x double>, <2 x double>* %p
  %return7 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output, i64 0)
  %output9 = extractvalue { double, <2 x double> } %return7, 1
  store <2 x double> %output9, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %output15 = call double @"div@FF"(double %return6, double %return)
  %return16 = call i64 @"floor@IF"(double %output15)
  %output17 = mul i64 2, %return16
  %output18 = add i64 %output17, 1
  %rect19 = load <2 x double>, <2 x double>* %rect
  %return20 = call double @"getcomp@FUI"(<2 x double> %rect19, i64 0)
  %cast = sitofp i64 %output18 to double
  %output21 = fmul double %cast, %return20
  %_p22 = load <2 x double>, <2 x double>* %_p
  %return23 = call double @"getcomp@FUI"(<2 x double> %_p22, i64 0)
  %output24 = fsub double %output21, %return23
  %output25 = fmul double %w4, %output24
  %tmp26 = load <2 x double>, <2 x double>* %p
  %return27 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp26, double %output25, i64 0)
  %output29 = extractvalue { double, <2 x double> } %return27, 1
  store <2 x double> %output29, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  %rect30 = load <2 x double>, <2 x double>* %rect
  %return31 = call double @"getcomp@FUI"(<2 x double> %rect30, i64 1)
  %return32 = fcmp oeq double %return31, 0.000000e+00
  %w37 = load double, double* %w
  %_p38 = load <2 x double>, <2 x double>* %_p
  %return39 = call double @"getcomp@FUI"(<2 x double> %_p38, i64 1)
  br i1 %return32, label %true34, label %false35

true34:                                           ; preds = %end
  %output40 = fmul double %w37, %return39
  %tmp41 = load <2 x double>, <2 x double>* %p
  %return42 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp41, double %output40, i64 1)
  %output44 = extractvalue { double, <2 x double> } %return42, 1
  store <2 x double> %output44, <2 x double>* %p
  br label %end36

false35:                                          ; preds = %end
  %output50 = call double @"div@FF"(double %return39, double %return31)
  %return51 = call i64 @"floor@IF"(double %output50)
  %output52 = mul i64 2, %return51
  %output53 = add i64 %output52, 1
  %rect54 = load <2 x double>, <2 x double>* %rect
  %return55 = call double @"getcomp@FUI"(<2 x double> %rect54, i64 1)
  %cast56 = sitofp i64 %output53 to double
  %output57 = fmul double %cast56, %return55
  %_p58 = load <2 x double>, <2 x double>* %_p
  %return59 = call double @"getcomp@FUI"(<2 x double> %_p58, i64 1)
  %output60 = fsub double %output57, %return59
  %output61 = fmul double %w37, %output60
  %tmp62 = load <2 x double>, <2 x double>* %p
  %return63 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp62, double %output61, i64 1)
  %output65 = extractvalue { double, <2 x double> } %return63, 1
  store <2 x double> %output65, <2 x double>* %p
  br label %end36

end36:                                            ; preds = %false35, %true34
  ret void
}

; Function Attrs: nounwind
declare i64 @"floor@IF"(double) #3

; Function Attrs: alwaysinline nounwind
define private void @"V_RADIALBLUR@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %spin, double* %zoom) #0 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %w1 = load double, double* %w
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i64 0, i64 0))
  %return2 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i64 0, i64 0))
  %output = fadd double %return, %return2
  %return3 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i64 0, i64 0))
  %output4 = fadd double %output, %return3
  %return5 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i64 0, i64 0))
  %output6 = fadd double %output4, %return5
  %output7 = fsub double %output6, 2.000000e+00
  %output8 = fmul double %w1, %output7
  %_p9 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p9, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %_p10 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p10, <2 x double>* %1
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %1)
  %spin11 = load double, double* %spin
  %output13 = fmul double %spin11, %output8
  %output14 = fadd double %ATANYX, %output13
  store double %output14, double* %2
  call void @"sincos@FFF"(double* %2, double* %sa, double* %ca)
  %zoom16 = load double, double* %zoom
  %output18 = fmul double %zoom16, %output8
  %output19 = fsub double %output18, 1.000000e+00
  %ca21 = load double, double* %ca
  %output22 = fmul double %SQRT, %ca21
  %_p24 = load <2 x double>, <2 x double>* %_p
  %return25 = call double @"getcomp@FUI"(<2 x double> %_p24, i64 0)
  %output26 = fmul double %output19, %return25
  %output27 = fadd double %output22, %output26
  %tmp = load <2 x double>, <2 x double>* %p
  %return28 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output27, i64 0)
  %output30 = extractvalue { double, <2 x double> } %return28, 1
  store <2 x double> %output30, <2 x double>* %p
  %sa32 = load double, double* %sa
  %output33 = fmul double %SQRT, %sa32
  %_p35 = load <2 x double>, <2 x double>* %_p
  %return36 = call double @"getcomp@FUI"(<2 x double> %_p35, i64 1)
  %output37 = fmul double %output19, %return36
  %output38 = fadd double %output33, %output37
  %return40 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output30, double %output38, i64 1)
  %output42 = extractvalue { double, <2 x double> } %return40, 1
  store <2 x double> %output42, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_PIE@UFFFF"(<2 x double>* %p, double* %w, double* %slices, double* %thickness, double* %rotation) #0 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i64 0, i64 0))
  %slices1 = load double, double* %slices
  %output = fmul double %return, %slices1
  %cast = fptosi double %output to i64
  %cast2 = sitofp i64 %cast to double
  %rotation3 = load double, double* %rotation
  %return5 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i64 0, i64 0))
  %thickness6 = load double, double* %thickness
  %output7 = fmul double %return5, %thickness6
  %output8 = fadd double %cast2, %output7
  %output9 = fmul double 0x401921FB4D12D84A, %output8
  %slices10 = load double, double* %slices
  %output11 = call double @"div@FF"(double %output9, double %slices10)
  %output12 = fadd double %rotation3, %output11
  %w13 = load double, double* %w
  %return14 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i64 0, i64 0))
  %output15 = fmul double %w13, %return14
  store double %output12, double* %0
  call void @"sincos@FFF"(double* %0, double* %sa, double* %ca)
  %ca18 = load double, double* %ca
  %output19 = fmul double %output15, %ca18
  %tmp = load <2 x double>, <2 x double>* %p
  %return20 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output19, i64 0)
  %output22 = extractvalue { double, <2 x double> } %return20, 1
  store <2 x double> %output22, <2 x double>* %p
  %sa24 = load double, double* %sa
  %output25 = fmul double %output15, %sa24
  %return27 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output22, double %output25, i64 1)
  %output29 = extractvalue { double, <2 x double> } %return27, 1
  store <2 x double> %output29, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_ARCH@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %sinr = alloca double
  %cosr = alloca double
  %0 = alloca double
  store double 0.000000e+00, double* %sinr, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosr, !vex-initializer-store !3
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i64 0, i64 0))
  %w1 = load double, double* %w
  %output = fmul double %return, %w1
  %output2 = fmul double %output, 0x400921FB4D12D84A
  store double %output2, double* %0
  call void @"sincos@FFF"(double* %0, double* %sinr, double* %cosr)
  %w4 = load double, double* %w
  %sinr5 = load double, double* %sinr
  %output6 = fmul double %w4, %sinr5
  %tmp = load <2 x double>, <2 x double>* %p
  %return7 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output6, i64 0)
  %output9 = extractvalue { double, <2 x double> } %return7, 1
  store <2 x double> %output9, <2 x double>* %p
  %w10 = load double, double* %w
  %sinr11 = load double, double* %sinr
  %output13 = fmul double %sinr11, %sinr11
  %output14 = fmul double %w10, %output13
  %cosr15 = load double, double* %cosr
  %output16 = call double @"div@FF"(double %output14, double %cosr15)
  %return18 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output9, double %output16, i64 1)
  %output20 = extractvalue { double, <2 x double> } %return18, 1
  store <2 x double> %output20, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_TANGENT@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %w1 = load double, double* %w
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %return3 = call double @"sin@FF"(double %return)
  %return5 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  %return6 = call double @"cos@FF"(double %return5)
  %output = call double @"div@FF"(double %return3, double %return6)
  %output7 = fmul double %w1, %output
  %tmp = load <2 x double>, <2 x double>* %p
  %return8 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output7, i64 0)
  %output10 = extractvalue { double, <2 x double> } %return8, 1
  store <2 x double> %output10, <2 x double>* %p
  %w11 = load double, double* %w
  %_p12 = load <2 x double>, <2 x double>* %_p
  %return13 = call double @"getcomp@FUI"(<2 x double> %_p12, i64 1)
  %return14 = call double @"tan@FF"(double %return13)
  %output15 = fmul double %w11, %return14
  %return17 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output10, double %output15, i64 1)
  %output19 = extractvalue { double, <2 x double> } %return17, 1
  store <2 x double> %output19, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SQUARE@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %w1 = load double, double* %w
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i64 0, i64 0))
  %output = fsub double %return, 5.000000e-01
  %output2 = fmul double %w1, %output
  %tmp = load <2 x double>, <2 x double>* %p
  %return3 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output2, i64 0)
  %output5 = extractvalue { double, <2 x double> } %return3, 1
  store <2 x double> %output5, <2 x double>* %p
  %w6 = load double, double* %w
  %return7 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i64 0, i64 0))
  %output8 = fsub double %return7, 5.000000e-01
  %output9 = fmul double %w6, %output8
  %tmp10 = load <2 x double>, <2 x double>* %p
  %return11 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp10, double %output9, i64 1)
  %output13 = extractvalue { double, <2 x double> } %return11, 1
  store <2 x double> %output13, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_RAYS@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %w1 = load double, double* %w
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i64 0, i64 0))
  %output = fmul double %w1, %return
  %output2 = fmul double %output, 0x400921FB4D12D84A
  %w3 = load double, double* %w
  %_p4 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p4, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %output5 = fadd double %SUMSQ, 1.000000e-10
  %output6 = call double @"div@FF"(double %w3, double %output5)
  %w7 = load double, double* %w
  %return9 = call double @"tan@FF"(double %output2)
  %output10 = fmul double %w7, %return9
  %output12 = fmul double %output10, %output6
  %_p14 = load <2 x double>, <2 x double>* %_p
  %return15 = call double @"getcomp@FUI"(<2 x double> %_p14, i64 0)
  %return16 = call double @"cos@FF"(double %return15)
  %output17 = fmul double %output12, %return16
  %tmp = load <2 x double>, <2 x double>* %p
  %return18 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output17, i64 0)
  %output20 = extractvalue { double, <2 x double> } %return18, 1
  store <2 x double> %output20, <2 x double>* %p
  %_p22 = load <2 x double>, <2 x double>* %_p
  %return23 = call double @"getcomp@FUI"(<2 x double> %_p22, i64 1)
  %return24 = call double @"sin@FF"(double %return23)
  %output25 = fmul double %output12, %return24
  %return27 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output20, double %output25, i64 1)
  %output29 = extractvalue { double, <2 x double> } %return27, 1
  store <2 x double> %output29, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_BLADE@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %sinr = alloca double
  %cosr = alloca double
  %0 = alloca <2 x double>
  %1 = alloca double
  store double 0.000000e+00, double* %sinr, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosr, !vex-initializer-store !3
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i64 0, i64 0))
  %w1 = load double, double* %w
  %output = fmul double %return, %w1
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %output3 = fmul double %output, %SQRT
  store double %output3, double* %1
  call void @"sincos@FFF"(double* %1, double* %sinr, double* %cosr)
  %w5 = load double, double* %w
  %_p6 = load <2 x double>, <2 x double>* %_p
  %return7 = call double @"getcomp@FUI"(<2 x double> %_p6, i64 0)
  %output8 = fmul double %w5, %return7
  %cosr9 = load double, double* %cosr
  %sinr10 = load double, double* %sinr
  %output11 = fadd double %cosr9, %sinr10
  %output12 = fmul double %output8, %output11
  %tmp = load <2 x double>, <2 x double>* %p
  %return13 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output12, i64 0)
  %output15 = extractvalue { double, <2 x double> } %return13, 1
  store <2 x double> %output15, <2 x double>* %p
  %w16 = load double, double* %w
  %_p17 = load <2 x double>, <2 x double>* %_p
  %return18 = call double @"getcomp@FUI"(<2 x double> %_p17, i64 0)
  %output19 = fmul double %w16, %return18
  %cosr20 = load double, double* %cosr
  %sinr21 = load double, double* %sinr
  %output22 = fsub double %cosr20, %sinr21
  %output23 = fmul double %output19, %output22
  %return25 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output15, double %output23, i64 1)
  %output27 = extractvalue { double, <2 x double> } %return25, 1
  store <2 x double> %output27, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SECANT2@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %w1 = load double, double* %w
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %output = fmul double %w1, %SQRT
  %return = call double @"cos@FF"(double %output)
  %output7 = call double @"div@FF"(double 1.000000e+00, double %return)
  %w8 = load double, double* %w
  %_p9 = load <2 x double>, <2 x double>* %_p
  %return10 = call double @"getcomp@FUI"(<2 x double> %_p9, i64 0)
  %output11 = fmul double %w8, %return10
  %tmp = load <2 x double>, <2 x double>* %p
  %return12 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output11, i64 0)
  %output14 = extractvalue { double, <2 x double> } %return12, 1
  store <2 x double> %output14, <2 x double>* %p
  %return16 = fcmp olt double %return, 0.000000e+00
  %w18 = load double, double* %w
  %output20 = fadd double %output7, 1.000000e+00
  %output21 = fmul double %w18, %output20
  %output24 = fsub double %output7, 1.000000e+00
  %output25 = fmul double %w18, %output24
  %phi = select i1 %return16, double %output21, double %output25
  %return27 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output14, double %phi, i64 1)
  %output29 = extractvalue { double, <2 x double> } %return27, 1
  store <2 x double> %output29, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_TWINTRIAN@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %sinr = alloca double
  %cosr = alloca double
  %0 = alloca <2 x double>
  %1 = alloca double
  store double 0.000000e+00, double* %sinr, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosr, !vex-initializer-store !3
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i64 0, i64 0))
  %w1 = load double, double* %w
  %output = fmul double %return, %w1
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %output3 = fmul double %output, %SQRT
  store double %output3, double* %1
  call void @"sincos@FFF"(double* %1, double* %sinr, double* %cosr)
  %sinr5 = load double, double* %sinr
  %output7 = fmul double %sinr5, %sinr5
  %return8 = call double @"log10@FF"(double %output7)
  %cosr9 = load double, double* %cosr
  %output10 = fadd double %return8, %cosr9
  %return12 = call i64 @"isfinite@IF"(double %output10)
  %return13 = call i64 @"not@II"(i64 %return12)
  %return15 = call i64 @"isnan@IF"(double %output10)
  %return16 = call i64 @"or@III"(i64 %return13, i64 %return15)
  %2 = icmp ne i64 %return16, 0
  br i1 %2, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %return17 = call double @"neg@FF"(double 3.000000e+01)
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %diff.0 = phi double [ %return17, %true ], [ %output10, %__llvm_entry ]
  %w18 = load double, double* %w
  %_p19 = load <2 x double>, <2 x double>* %_p
  %return20 = call double @"getcomp@FUI"(<2 x double> %_p19, i64 0)
  %output21 = fmul double %w18, %return20
  %output23 = fmul double %output21, %diff.0
  %tmp = load <2 x double>, <2 x double>* %p
  %return24 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output23, i64 0)
  %output26 = extractvalue { double, <2 x double> } %return24, 1
  store <2 x double> %output26, <2 x double>* %p
  %w27 = load double, double* %w
  %_p28 = load <2 x double>, <2 x double>* %_p
  %return29 = call double @"getcomp@FUI"(<2 x double> %_p28, i64 0)
  %output30 = fmul double %w27, %return29
  %sinr32 = load double, double* %sinr
  %output33 = fmul double %sinr32, 0x400921FB4D12D84A
  %output34 = fsub double %diff.0, %output33
  %output35 = fmul double %output30, %output34
  %return37 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output26, double %output35, i64 1)
  %output39 = extractvalue { double, <2 x double> } %return37, 1
  store <2 x double> %output39, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind readnone
declare double @"log10@FF"(double) #1

; Function Attrs: alwaysinline nounwind
define private void @"V_CROSS@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  %output = fmul double %return, %return
  %return5 = call double @"getcomp@FUI"(<2 x double> %_p1, i64 1)
  %output8 = fmul double %return5, %return5
  %output9 = fsub double %output, %output8
  %w10 = load double, double* %w
  %output13 = fmul double %output9, %output9
  %output14 = fadd double %output13, 1.000000e-10
  %output15 = call double @"div@FF"(double 1.000000e+00, double %output14)
  %return16 = call double @"sqrt@FF"(double %output15)
  %output17 = fmul double %w10, %return16
  %output21 = fmul double %return, %output17
  %tmp = load <2 x double>, <2 x double>* %p
  %return22 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output21, i64 0)
  %output24 = extractvalue { double, <2 x double> } %return22, 1
  store <2 x double> %output24, <2 x double>* %p
  %_p25 = load <2 x double>, <2 x double>* %_p
  %return26 = call double @"getcomp@FUI"(<2 x double> %_p25, i64 1)
  %output28 = fmul double %return26, %output17
  %return30 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output24, double %output28, i64 1)
  %output32 = extractvalue { double, <2 x double> } %return30, 1
  store <2 x double> %output32, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_DISC2@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %rot, double* %twist) #0 {
__llvm_entry:
  %sinr = alloca double
  %cosr = alloca double
  %disc2_sinadd = alloca double
  %disc2_cosadd = alloca double
  %0 = alloca double
  %1 = alloca double
  %2 = alloca <2 x double>
  store double 0.000000e+00, double* %sinr, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosr, !vex-initializer-store !3
  store double 0.000000e+00, double* %disc2_sinadd, !vex-initializer-store !3
  store double 0.000000e+00, double* %disc2_cosadd, !vex-initializer-store !3
  %rot1 = load double, double* %rot
  %output = fmul double %rot1, 0x400921FB4D12D84A
  %twist2 = load double, double* %twist
  store double %twist2, double* %0
  call void @"sincos@FFF"(double* %0, double* %disc2_sinadd, double* %disc2_cosadd)
  %disc2_cosadd3 = load double, double* %disc2_cosadd
  %output4 = fsub double %disc2_cosadd3, 1.000000e+00
  store double %output4, double* %disc2_cosadd
  %twist5 = load double, double* %twist
  %return = fcmp ogt double %twist5, 0x401921FB4D12D84A
  br i1 %return, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %output8 = fadd double 1.000000e+00, %twist5
  %output9 = fsub double %output8, 0x401921FB4D12D84A
  %output12 = fmul double %output4, %output9
  store double %output12, double* %disc2_cosadd
  %disc2_sinadd13 = load double, double* %disc2_sinadd
  %output15 = fmul double %disc2_sinadd13, %output9
  store double %output15, double* %disc2_sinadd
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %twist16 = load double, double* %twist
  %return17 = call i64 @"neg@II"(i64 2)
  %cast = sitofp i64 %return17 to double
  %output18 = fmul double %cast, 0x400921FB4D12D84A
  %return19 = fcmp olt double %twist16, %output18
  br i1 %return19, label %true21, label %end22

true21:                                           ; preds = %end
  %output24 = fadd double 1.000000e+00, %twist16
  %output25 = fadd double %output24, 0x401921FB4D12D84A
  %disc2_cosadd26 = load double, double* %disc2_cosadd
  %output28 = fmul double %disc2_cosadd26, %output25
  store double %output28, double* %disc2_cosadd
  %disc2_sinadd29 = load double, double* %disc2_sinadd
  %output31 = fmul double %disc2_sinadd29, %output25
  store double %output31, double* %disc2_sinadd
  br label %end22

end22:                                            ; preds = %true21, %end
  %_p33 = load <2 x double>, <2 x double>* %_p
  %return34 = call double @"getcomp@FUI"(<2 x double> %_p33, i64 0)
  %return36 = call double @"getcomp@FUI"(<2 x double> %_p33, i64 1)
  %output37 = fadd double %return34, %return36
  %output38 = fmul double %output, %output37
  store double %output38, double* %1
  call void @"sincos@FFF"(double* %1, double* %sinr, double* %cosr)
  %w40 = load double, double* %w
  %_p41 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p41, <2 x double>* %2
  %ATAN = call double @"ATAN@FU"(<2 x double>* %2)
  %output42 = fmul double %w40, %ATAN
  %output43 = call double @"div@FF"(double %output42, double 0x400921FB4D12D84A)
  %sinr44 = load double, double* %sinr
  %disc2_cosadd45 = load double, double* %disc2_cosadd
  %output46 = fadd double %sinr44, %disc2_cosadd45
  %output48 = fmul double %output46, %output43
  %tmp = load <2 x double>, <2 x double>* %p
  %return49 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output48, i64 0)
  %output51 = extractvalue { double, <2 x double> } %return49, 1
  store <2 x double> %output51, <2 x double>* %p
  %cosr52 = load double, double* %cosr
  %disc2_sinadd53 = load double, double* %disc2_sinadd
  %output54 = fadd double %cosr52, %disc2_sinadd53
  %output56 = fmul double %output54, %output43
  %return58 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output51, double %output56, i64 1)
  %output60 = extractvalue { double, <2 x double> } %return58, 1
  store <2 x double> %output60, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SUPERSHAPE@UUFFFFV"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %ss_rnd, double* %ss_m, double* %ss_holes, <3 x double>* %ss_n) #0 {
__llvm_entry:
  %st = alloca double
  %ct = alloca double
  %0 = alloca <2 x double>
  %1 = alloca double
  %2 = alloca <2 x double>
  store double 0.000000e+00, double* %st, !vex-initializer-store !3
  store double 0.000000e+00, double* %ct, !vex-initializer-store !3
  %ss_m1 = load double, double* %ss_m
  %output = call double @"div@FF"(double %ss_m1, double 4.000000e+00)
  %return = call double @"neg@FF"(double 1.000000e+00)
  %ss_n2 = load <3 x double>, <3 x double>* %ss_n
  %return3 = call double @"getcomp@FVI"(<3 x double> %ss_n2, i64 0)
  %output4 = call double @"div@FF"(double %return, double %return3)
  %_p6 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p6, <2 x double>* %0
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %0)
  %output7 = fmul double %output, %ATANYX
  %output8 = fadd double %output7, 7.853981e-01
  store double %output8, double* %1
  call void @"sincos@FFF"(double* %1, double* %st, double* %ct)
  %ct10 = load double, double* %ct
  %return11 = call double @"abs@FF"(double %ct10)
  %ss_n13 = load <3 x double>, <3 x double>* %ss_n
  %return14 = call double @"getcomp@FVI"(<3 x double> %ss_n13, i64 1)
  %return15 = call double @"pow@FFF"(double %return11, double %return14)
  %st16 = load double, double* %st
  %return17 = call double @"abs@FF"(double %st16)
  %ss_n19 = load <3 x double>, <3 x double>* %ss_n
  %return20 = call double @"getcomp@FVI"(<3 x double> %ss_n19, i64 2)
  %return21 = call double @"pow@FFF"(double %return17, double %return20)
  %_p22 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p22, <2 x double>* %2
  %SQRT23 = call double @"SQRT@FU"(<2 x double>* %2)
  %w24 = load double, double* %w
  %ss_rnd25 = load double, double* %ss_rnd
  %return26 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i64 0, i64 0))
  %output27 = fmul double %ss_rnd25, %return26
  %ss_rnd28 = load double, double* %ss_rnd
  %output29 = fsub double 1.000000e+00, %ss_rnd28
  %output31 = fmul double %output29, %SQRT23
  %output32 = fadd double %output27, %output31
  %ss_holes33 = load double, double* %ss_holes
  %output34 = fsub double %output32, %ss_holes33
  %output35 = fmul double %w24, %output34
  %output38 = fadd double %return15, %return21
  %return40 = call double @"pow@FFF"(double %output38, double %output4)
  %output41 = fmul double %output35, %return40
  %output43 = call double @"div@FF"(double %output41, double %SQRT23)
  %_p45 = load <2 x double>, <2 x double>* %_p
  %return46 = call double @"getcomp@FUI"(<2 x double> %_p45, i64 0)
  %output47 = fmul double %output43, %return46
  %tmp = load <2 x double>, <2 x double>* %p
  %return48 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output47, i64 0)
  %output50 = extractvalue { double, <2 x double> } %return48, 1
  store <2 x double> %output50, <2 x double>* %p
  %_p52 = load <2 x double>, <2 x double>* %_p
  %return53 = call double @"getcomp@FUI"(<2 x double> %_p52, i64 1)
  %output54 = fmul double %output43, %return53
  %return56 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output50, double %output54, i64 1)
  %output58 = extractvalue { double, <2 x double> } %return56, 1
  store <2 x double> %output58, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_FLOWER@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %petals, double* %holes) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %0)
  %w2 = load double, double* %w
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i64 0, i64 0))
  %holes3 = load double, double* %holes
  %output = fsub double %return, %holes3
  %output4 = fmul double %w2, %output
  %petals5 = load double, double* %petals
  %output7 = fmul double %petals5, %ATANYX
  %return8 = call double @"cos@FF"(double %output7)
  %output9 = fmul double %output4, %return8
  %_p10 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p10, <2 x double>* %1
  %SQRT = call double @"SQRT@FU"(<2 x double>* %1)
  %output11 = call double @"div@FF"(double %output9, double %SQRT)
  %_p13 = load <2 x double>, <2 x double>* %_p
  %return14 = call double @"getcomp@FUI"(<2 x double> %_p13, i64 0)
  %output15 = fmul double %output11, %return14
  %tmp = load <2 x double>, <2 x double>* %p
  %return16 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output15, i64 0)
  %output18 = extractvalue { double, <2 x double> } %return16, 1
  store <2 x double> %output18, <2 x double>* %p
  %_p20 = load <2 x double>, <2 x double>* %_p
  %return21 = call double @"getcomp@FUI"(<2 x double> %_p20, i64 1)
  %output22 = fmul double %output11, %return21
  %return24 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output18, double %output22, i64 1)
  %output26 = extractvalue { double, <2 x double> } %return24, 1
  store <2 x double> %output26, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_CONIC@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %eccentricity, double* %holes) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT2 = call double @"SQRT@FU"(<2 x double>* %0)
  %_p3 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p3, i64 0)
  %output = call double @"div@FF"(double %return, double %SQRT2)
  %w5 = load double, double* %w
  %return6 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i64 0, i64 0))
  %holes7 = load double, double* %holes
  %output8 = fsub double %return6, %holes7
  %output9 = fmul double %w5, %output8
  %eccentricity10 = load double, double* %eccentricity
  %output11 = fmul double %output9, %eccentricity10
  %output14 = fmul double %eccentricity10, %output
  %output15 = fadd double 1.000000e+00, %output14
  %output16 = call double @"div@FF"(double %output11, double %output15)
  %output18 = call double @"div@FF"(double %output16, double %SQRT2)
  %_p20 = load <2 x double>, <2 x double>* %_p
  %return21 = call double @"getcomp@FUI"(<2 x double> %_p20, i64 0)
  %output22 = fmul double %output18, %return21
  %tmp = load <2 x double>, <2 x double>* %p
  %return23 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output22, i64 0)
  %output25 = extractvalue { double, <2 x double> } %return23, 1
  store <2 x double> %output25, <2 x double>* %p
  %_p27 = load <2 x double>, <2 x double>* %_p
  %return28 = call double @"getcomp@FUI"(<2 x double> %_p27, i64 1)
  %output29 = fmul double %output18, %return28
  %return31 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output25, double %output29, i64 1)
  %output33 = extractvalue { double, <2 x double> } %return31, 1
  store <2 x double> %output33, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_PARABOLA@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %height, double* %width) #0 {
__llvm_entry:
  %sr = alloca double
  %cr = alloca double
  %0 = alloca <2 x double>
  %1 = alloca double
  store double 0.000000e+00, double* %sr, !vex-initializer-store !3
  store double 0.000000e+00, double* %cr, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  store double %SQRT, double* %1
  call void @"sincos@FFF"(double* %1, double* %sr, double* %cr)
  %height3 = load double, double* %height
  %w4 = load double, double* %w
  %output = fmul double %height3, %w4
  %sr5 = load double, double* %sr
  %output6 = fmul double %output, %sr5
  %output8 = fmul double %output6, %sr5
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i64 0, i64 0))
  %output9 = fmul double %output8, %return
  %tmp = load <2 x double>, <2 x double>* %p
  %return10 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output9, i64 0)
  %output12 = extractvalue { double, <2 x double> } %return10, 1
  store <2 x double> %output12, <2 x double>* %p
  %width13 = load double, double* %width
  %w14 = load double, double* %w
  %output15 = fmul double %width13, %w14
  %cr16 = load double, double* %cr
  %output17 = fmul double %output15, %cr16
  %return18 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i64 0, i64 0))
  %output19 = fmul double %output17, %return18
  %tmp20 = load <2 x double>, <2 x double>* %p
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp20, double %output19, i64 1)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_BENT2@UUFU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %bent2) #0 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  %return3 = call double @"getcomp@FUI"(<2 x double> %_p1, i64 1)
  %return5 = fcmp olt double %return, 0.000000e+00
  br i1 %return5, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %bent28 = load <2 x double>, <2 x double>* %bent2
  %return9 = call double @"getcomp@FUI"(<2 x double> %bent28, i64 0)
  %output = fmul double %return, %return9
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %nx.0 = phi double [ %output, %true ], [ %return, %__llvm_entry ]
  %return11 = fcmp olt double %return3, 0.000000e+00
  br i1 %return11, label %true13, label %end14

true13:                                           ; preds = %end
  %bent216 = load <2 x double>, <2 x double>* %bent2
  %return17 = call double @"getcomp@FUI"(<2 x double> %bent216, i64 1)
  %output18 = fmul double %return3, %return17
  br label %end14

end14:                                            ; preds = %true13, %end
  %ny.0 = phi double [ %output18, %true13 ], [ %return3, %end ]
  %w19 = load double, double* %w
  %output21 = fmul double %w19, %nx.0
  %tmp = load <2 x double>, <2 x double>* %p
  %return22 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output21, i64 0)
  %output24 = extractvalue { double, <2 x double> } %return22, 1
  store <2 x double> %output24, <2 x double>* %p
  %w25 = load double, double* %w
  %output27 = fmul double %w25, %ny.0
  %return29 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output24, double %output27, i64 1)
  %output31 = extractvalue { double, <2 x double> } %return29, 1
  store <2 x double> %output31, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_BIPOLAR@UUFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %shift) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca double
  %2 = alloca double
  %3 = alloca double
  %4 = alloca double
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %output = fadd double %SUMSQ, 1.000000e+00
  %_p3 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p3, i64 0)
  %output4 = fmul double 2.000000e+00, %return
  %return5 = call double @"neg@FF"(double 0x3FF921FB4D12D84A)
  %shift6 = load double, double* %shift
  %output7 = fmul double %return5, %shift6
  %return9 = call double @"getcomp@FUI"(<2 x double> %_p3, i64 1)
  %output10 = fmul double 2.000000e+00, %return9
  %output12 = fsub double %SUMSQ, 1.000000e+00
  %return13 = call double @"atan2@FFF"(double %output10, double %output12)
  %output14 = fmul double 5.000000e-01, %return13
  %output16 = fadd double %output14, %output7
  %return18 = fcmp ogt double %output16, 0x3FF921FB4D12D84A
  br i1 %return18, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output22 = fadd double %output16, 0x3FF921FB4D12D84A
  store double %output22, double* %1
  store double 0x400921FB4D12D84A, double* %2
  %fmod = call double @"fmod@FFF"(double* %1, double* %2)
  %output23 = fadd double %return5, %fmod
  br label %end

false:                                            ; preds = %__llvm_entry
  %return26 = fcmp olt double %output16, %return5
  br i1 %return26, label %true28, label %end

end:                                              ; preds = %false, %true28, %true
  %y.0 = phi double [ %output23, %true ], [ %output33, %true28 ], [ %output16, %false ]
  %w34 = load double, double* %w
  %output35 = fmul double %w34, 2.500000e-01
  %output36 = fmul double %output35, 0x3FE45F306DC9C883
  %output39 = fadd double %output, %output4
  %output42 = fsub double %output, %output4
  %output43 = call double @"div@FF"(double %output39, double %output42)
  %return44 = call double @"log@FF"(double %output43)
  %output45 = fmul double %output36, %return44
  %tmp = load <2 x double>, <2 x double>* %p
  %return46 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output45, i64 0)
  %output48 = extractvalue { double, <2 x double> } %return46, 1
  store <2 x double> %output48, <2 x double>* %p
  %w49 = load double, double* %w
  %output50 = fmul double %w49, 0x3FE45F306DC9C883
  %output52 = fmul double %output50, %y.0
  %return54 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output48, double %output52, i64 1)
  %output56 = extractvalue { double, <2 x double> } %return54, 1
  store <2 x double> %output56, <2 x double>* %p
  ret void

true28:                                           ; preds = %false
  %output31 = fsub double 0x3FF921FB4D12D84A, %output16
  store double %output31, double* %3
  store double 0x400921FB4D12D84A, double* %4
  %fmod32 = call double @"fmod@FFF"(double* %3, double* %4)
  %output33 = fsub double 0x3FF921FB4D12D84A, %fmod32
  br label %end
}

; Function Attrs: nounwind readnone
declare double @"log@FF"(double) #1

; Function Attrs: alwaysinline nounwind
define private void @"V_BOARDERS@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  %return2 = call double @"rint@FF"(double %return)
  %return4 = call double @"getcomp@FUI"(<2 x double> %_p1, i64 1)
  %return5 = call double @"rint@FF"(double %return4)
  %output = fsub double %return, %return2
  %output12 = fsub double %return4, %return5
  %return13 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i64 0, i64 0))
  %return14 = fcmp oge double %return13, 7.500000e-01
  br i1 %return14, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output17 = fmul double %output, 5.000000e-01
  %output19 = fadd double %output17, %return2
  %tmp = load <2 x double>, <2 x double>* %p
  %return20 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output19, i64 0)
  %output22 = extractvalue { double, <2 x double> } %return20, 1
  store <2 x double> %output22, <2 x double>* %p
  %output24 = fmul double %output12, 5.000000e-01
  %output26 = fadd double %output24, %return5
  %return28 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output22, double %output26, i64 1)
  %output30 = extractvalue { double, <2 x double> } %return28, 1
  store <2 x double> %output30, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %return32 = call double @"abs@FF"(double %output)
  %return34 = call double @"abs@FF"(double %output12)
  %return35 = fcmp oge double %return32, %return34
  br i1 %return35, label %true37, label %false38

end:                                              ; preds = %true101, %false102, %true43, %false44, %true
  ret void

true37:                                           ; preds = %false
  %return41 = fcmp oge double %output, 0.000000e+00
  %w46 = load double, double* %w
  %output48 = fmul double %output, 5.000000e-01
  %output50 = fadd double %output48, %return2
  br i1 %return41, label %true43, label %false44

false38:                                          ; preds = %false
  %return99 = fcmp oge double %output12, 0.000000e+00
  %w104 = load double, double* %w
  %output106 = fmul double %output12, 5.000000e-01
  %output108 = fadd double %output106, %return5
  br i1 %return99, label %true101, label %false102

true43:                                           ; preds = %true37
  %output51 = fadd double %output50, 2.500000e-01
  %output52 = fmul double %w46, %output51
  %tmp53 = load <2 x double>, <2 x double>* %p
  %return54 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp53, double %output52, i64 0)
  %output56 = extractvalue { double, <2 x double> } %return54, 1
  store <2 x double> %output56, <2 x double>* %p
  %w57 = load double, double* %w
  %output59 = fmul double %output12, 5.000000e-01
  %output61 = fadd double %output59, %return5
  %output63 = fmul double 2.500000e-01, %output12
  %output65 = call double @"div@FF"(double %output63, double %output)
  %output66 = fadd double %output61, %output65
  %output67 = fmul double %w57, %output66
  %return69 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output56, double %output67, i64 1)
  %output71 = extractvalue { double, <2 x double> } %return69, 1
  store <2 x double> %output71, <2 x double>* %p
  br label %end

false44:                                          ; preds = %true37
  %output77 = fsub double %output50, 2.500000e-01
  %output78 = fmul double %w46, %output77
  %tmp79 = load <2 x double>, <2 x double>* %p
  %return80 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp79, double %output78, i64 0)
  %output82 = extractvalue { double, <2 x double> } %return80, 1
  store <2 x double> %output82, <2 x double>* %p
  %w83 = load double, double* %w
  %output85 = fmul double %output12, 5.000000e-01
  %output87 = fadd double %output85, %return5
  %output89 = fmul double 2.500000e-01, %output12
  %output91 = call double @"div@FF"(double %output89, double %output)
  %output92 = fsub double %output87, %output91
  %output93 = fmul double %w83, %output92
  %return95 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output82, double %output93, i64 1)
  %output97 = extractvalue { double, <2 x double> } %return95, 1
  store <2 x double> %output97, <2 x double>* %p
  br label %end

true101:                                          ; preds = %false38
  %output109 = fadd double %output108, 2.500000e-01
  %output110 = fmul double %w104, %output109
  %tmp111 = load <2 x double>, <2 x double>* %p
  %return112 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp111, double %output110, i64 1)
  %output114 = extractvalue { double, <2 x double> } %return112, 1
  store <2 x double> %output114, <2 x double>* %p
  %w115 = load double, double* %w
  %output117 = fmul double %output, 5.000000e-01
  %output119 = fadd double %output117, %return2
  %output122 = call double @"div@FF"(double %output, double %output12)
  %output123 = fmul double %output122, 2.500000e-01
  %output124 = fadd double %output119, %output123
  %output125 = fmul double %w115, %output124
  %return127 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output114, double %output125, i64 0)
  %output129 = extractvalue { double, <2 x double> } %return127, 1
  store <2 x double> %output129, <2 x double>* %p
  br label %end

false102:                                         ; preds = %false38
  %output135 = fsub double %output108, 2.500000e-01
  %output136 = fmul double %w104, %output135
  %tmp137 = load <2 x double>, <2 x double>* %p
  %return138 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp137, double %output136, i64 1)
  %output140 = extractvalue { double, <2 x double> } %return138, 1
  store <2 x double> %output140, <2 x double>* %p
  %w141 = load double, double* %w
  %output143 = fmul double %output, 5.000000e-01
  %output145 = fadd double %output143, %return2
  %output148 = call double @"div@FF"(double %output, double %output12)
  %output149 = fmul double %output148, 2.500000e-01
  %output150 = fsub double %output145, %output149
  %output151 = fmul double %w141, %output150
  %return153 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output140, double %output151, i64 0)
  %output155 = extractvalue { double, <2 x double> } %return153, 1
  store <2 x double> %output155, <2 x double>* %p
  br label %end
}

; Function Attrs: nounwind readnone
declare double @"rint@FF"(double) #1

; Function Attrs: alwaysinline nounwind
define private void @"V_BUTTERFLY@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %w1 = load double, double* %w
  %output = fmul double %w1, 0x3FF4D8D7A58FA311
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  %output3 = fmul double %return, 2.000000e+00
  %return8 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %output9 = fmul double %return, %return8
  %return10 = call double @"abs@FF"(double %output9)
  %_p11 = load <2 x double>, <2 x double>* %_p
  %return12 = call double @"getcomp@FUI"(<2 x double> %_p11, i64 0)
  %output15 = fmul double %return12, %return12
  %output16 = fadd double 1.000000e-10, %output15
  %output19 = fmul double %output3, %output3
  %output20 = fadd double %output16, %output19
  %output21 = call double @"div@FF"(double %return10, double %output20)
  %return22 = call double @"sqrt@FF"(double %output21)
  %output23 = fmul double %output, %return22
  %output27 = fmul double %output23, %return12
  %tmp = load <2 x double>, <2 x double>* %p
  %return28 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output27, i64 0)
  %output30 = extractvalue { double, <2 x double> } %return28, 1
  store <2 x double> %output30, <2 x double>* %p
  %output33 = fmul double %output23, %output3
  %return35 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output30, double %output33, i64 1)
  %output37 = extractvalue { double, <2 x double> } %return35, 1
  store <2 x double> %output37, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_CELL@UUFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %size) #0 {
__llvm_entry:
  %size1 = load double, double* %size
  %output = call double @"div@FF"(double 1.000000e+00, double %size1)
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %output4 = fmul double %return, %output
  %return5 = call double @"floor@FF"(double %output4)
  %return7 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  %output9 = fmul double %return7, %output
  %return10 = call double @"floor@FF"(double %output9)
  %output15 = fmul double %return5, %size1
  %output16 = fsub double %return, %output15
  %output21 = fmul double %return10, %size1
  %output22 = fsub double %return7, %output21
  %return24 = fcmp oge double %return10, 0.000000e+00
  %return27 = fcmp oge double %return5, 0.000000e+00
  br i1 %return24, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output33 = fmul double %return10, 2.000000e+00
  br i1 %return27, label %true29, label %false30

false:                                            ; preds = %__llvm_entry
  %output49 = fmul double 2.000000e+00, %return10
  %output50 = fadd double %output49, 1.000000e+00
  %return51 = call double @"neg@FF"(double %output50)
  br i1 %return27, label %true45, label %false46

end:                                              ; preds = %true45, %false46, %true29, %false30
  %y.0 = phi double [ %output33, %true29 ], [ %output33, %false30 ], [ %return51, %true45 ], [ %return51, %false46 ]
  %x.0 = phi double [ %output35, %true29 ], [ %return41, %false30 ], [ %output53, %true45 ], [ %return61, %false46 ]
  %size64 = load double, double* %size
  %output65 = fmul double %x.0, %size64
  %output66 = fadd double %output16, %output65
  %tmp = load <2 x double>, <2 x double>* %p
  %return67 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output66, i64 0)
  %output69 = extractvalue { double, <2 x double> } %return67, 1
  store <2 x double> %output69, <2 x double>* %p
  %size72 = load double, double* %size
  %output73 = fmul double %y.0, %size72
  %output74 = fadd double %output22, %output73
  %return75 = call double @"neg@FF"(double %output74)
  %return77 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output69, double %return75, i64 1)
  %output79 = extractvalue { double, <2 x double> } %return77, 1
  store <2 x double> %output79, <2 x double>* %p
  ret void

true29:                                           ; preds = %true
  %output35 = fmul double %return5, 2.000000e+00
  br label %end

false30:                                          ; preds = %true
  %output39 = fmul double 2.000000e+00, %return5
  %output40 = fadd double %output39, 1.000000e+00
  %return41 = call double @"neg@FF"(double %output40)
  br label %end

true45:                                           ; preds = %false
  %output53 = fmul double %return5, 2.000000e+00
  br label %end

false46:                                          ; preds = %false
  %output59 = fmul double 2.000000e+00, %return5
  %output60 = fadd double %output59, 1.000000e+00
  %return61 = call double @"neg@FF"(double %output60)
  br label %end
}

; Function Attrs: alwaysinline nounwind
define private void @"V_CPOW@UUFFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %power, double* %pow_r, double* %pow_i) #0 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %0)
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %1
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %1)
  %return = call double @"log@FF"(double %SUMSQ)
  %output = fmul double 5.000000e-01, %return
  %power3 = load double, double* %power
  %output4 = call double @"div@FF"(double 0x401921FB4D12D84A, double %power3)
  %pow_r5 = load double, double* %pow_r
  %output7 = call double @"div@FF"(double %pow_r5, double %power3)
  %pow_i8 = load double, double* %pow_i
  %output10 = call double @"div@FF"(double %pow_i8, double %power3)
  %output13 = fmul double %output7, %ATANYX
  %output16 = fmul double %output10, %output
  %output17 = fadd double %output13, %output16
  %return20 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i64 0, i64 0))
  %output21 = fmul double %power3, %return20
  %return22 = call double @"floor@FF"(double %output21)
  %output23 = fmul double %output4, %return22
  %output24 = fadd double %output17, %output23
  %w25 = load double, double* %w
  %output28 = fmul double %output7, %output
  %output31 = fmul double %output10, %ATANYX
  %output32 = fsub double %output28, %output31
  %return33 = call double @"exp@FF"(double %output32)
  %output34 = fmul double %w25, %return33
  store double %output24, double* %2
  call void @"sincos@FFF"(double* %2, double* %sa, double* %ca)
  %ca37 = load double, double* %ca
  %output38 = fmul double %output34, %ca37
  %tmp = load <2 x double>, <2 x double>* %p
  %return39 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output38, i64 0)
  %output41 = extractvalue { double, <2 x double> } %return39, 1
  store <2 x double> %output41, <2 x double>* %p
  %sa43 = load double, double* %sa
  %output44 = fmul double %output34, %sa43
  %return46 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output41, double %output44, i64 1)
  %output48 = extractvalue { double, <2 x double> } %return46, 1
  store <2 x double> %output48, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_EDISC@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %snv = alloca double
  %csv = alloca double
  %0 = alloca <2 x double>
  %1 = alloca double
  store double 0.000000e+00, double* %snv, !vex-initializer-store !3
  store double 0.000000e+00, double* %csv, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %output = fmul double 2.000000e+00, %return
  %output5 = fadd double %SUMSQ, %output
  %return6 = call double @"sqrt@FF"(double %output5)
  %output9 = fsub double %SUMSQ, %output
  %return10 = call double @"sqrt@FF"(double %output9)
  %output13 = fadd double %return6, %return10
  %output14 = fmul double %output13, 5.000000e-01
  %output17 = fsub double %output14, 1.000000e+00
  %return18 = call double @"sqrt@FF"(double %output17)
  %output19 = fadd double %output14, %return18
  %return20 = call double @"log@FF"(double %output19)
  %output24 = call double @"div@FF"(double %return, double %output14)
  %return25 = call double @"acos@FF"(double %output24)
  %return26 = call double @"neg@FF"(double %return25)
  %w27 = load double, double* %w
  %output28 = call double @"div@FF"(double %w27, double 0x402724046ECF9681)
  store double %return20, double* %1
  call void @"sincos@FFF"(double* %1, double* %snv, double* %csv)
  %return31 = call double @"sinh@FF"(double %return26)
  %return33 = call double @"cosh@FF"(double %return26)
  %_p34 = load <2 x double>, <2 x double>* %_p
  %return35 = call double @"getcomp@FUI"(<2 x double> %_p34, i64 1)
  %return36 = fcmp ogt double %return35, 0.000000e+00
  br i1 %return36, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %snv38 = load double, double* %snv
  %return39 = call double @"neg@FF"(double %snv38)
  store double %return39, double* %snv
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %output42 = fmul double %output28, %return33
  %csv43 = load double, double* %csv
  %output44 = fmul double %output42, %csv43
  %tmp45 = load <2 x double>, <2 x double>* %p
  %return46 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp45, double %output44, i64 0)
  %output48 = extractvalue { double, <2 x double> } %return46, 1
  store <2 x double> %output48, <2 x double>* %p
  %output51 = fmul double %output28, %return31
  %snv52 = load double, double* %snv
  %output53 = fmul double %output51, %snv52
  %return55 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output48, double %output53, i64 1)
  %output57 = extractvalue { double, <2 x double> } %return55, 1
  store <2 x double> %output57, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind readnone
declare double @"acos@FF"(double) #1

; Function Attrs: alwaysinline nounwind
define private void @"V_ELLIPTIC@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %output = fadd double %SUMSQ, 1.000000e+00
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %output3 = fmul double 2.000000e+00, %return
  %output6 = fadd double %output, %output3
  %return7 = call double @"sqrt@FF"(double %output6)
  %output10 = fsub double %output, %output3
  %return11 = call double @"sqrt@FF"(double %output10)
  %output12 = fadd double %return7, %return11
  %output13 = fmul double 5.000000e-01, %output12
  %output17 = call double @"div@FF"(double %return, double %output13)
  %output20 = fmul double %output17, %output17
  %output21 = fsub double 1.000000e+00, %output20
  %output23 = fsub double %output13, 1.000000e+00
  %w24 = load double, double* %w
  %output25 = call double @"div@FF"(double %w24, double 0x3FF921FB4D12D84A)
  %return27 = fcmp olt double %output21, 0.000000e+00
  br i1 %return27, label %end, label %false

false:                                            ; preds = %__llvm_entry
  %return30 = call double @"sqrt@FF"(double %output21)
  br label %end

end:                                              ; preds = %__llvm_entry, %false
  %phi = phi double [ %return30, %false ], [ 0.000000e+00, %__llvm_entry ]
  %return32 = fcmp olt double %output23, 0.000000e+00
  br i1 %return32, label %end36, label %false35

false35:                                          ; preds = %end
  %return38 = call double @"sqrt@FF"(double %output23)
  br label %end36

end36:                                            ; preds = %end, %false35
  %phi39 = phi double [ %return38, %false35 ], [ 0.000000e+00, %end ]
  %return43 = call double @"atan2@FFF"(double %output17, double %phi)
  %output44 = fmul double %output25, %return43
  %tmp45 = load <2 x double>, <2 x double>* %p
  %return46 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp45, double %output44, i64 0)
  %output48 = extractvalue { double, <2 x double> } %return46, 1
  store <2 x double> %output48, <2 x double>* %p
  %_p49 = load <2 x double>, <2 x double>* %_p
  %return50 = call double @"getcomp@FUI"(<2 x double> %_p49, i64 1)
  %return51 = fcmp ogt double %return50, 0.000000e+00
  %output59 = fadd double %output13, %phi39
  %return60 = call double @"log@FF"(double %output59)
  br i1 %return51, label %true53, label %false54

true53:                                           ; preds = %end36
  %output61 = fmul double %output25, %return60
  br label %end55

false54:                                          ; preds = %end36
  %return67 = call double @"neg@FF"(double %return60)
  %output68 = fmul double %output25, %return67
  br label %end55

end55:                                            ; preds = %false54, %true53
  %phi69 = phi double [ %output61, %true53 ], [ %output68, %false54 ]
  %tmp70 = load <2 x double>, <2 x double>* %p
  %return71 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp70, double %phi69, i64 1)
  %output73 = extractvalue { double, <2 x double> } %return71, 1
  store <2 x double> %output73, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_NOISE@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %sinr = alloca double
  %cosr = alloca double
  %0 = alloca double
  store double 0.000000e+00, double* %sinr, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosr, !vex-initializer-store !3
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i64 0, i64 0))
  %output = fmul double %return, 2.000000e+00
  %output1 = fmul double %output, 0x400921FB4D12D84A
  store double %output1, double* %0
  call void @"sincos@FFF"(double* %0, double* %sinr, double* %cosr)
  %w3 = load double, double* %w
  %return4 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i64 0, i64 0))
  %output5 = fmul double %w3, %return4
  %_p6 = load <2 x double>, <2 x double>* %_p
  %return7 = call double @"getcomp@FUI"(<2 x double> %_p6, i64 0)
  %output9 = fmul double %return7, %output5
  %cosr10 = load double, double* %cosr
  %output11 = fmul double %output9, %cosr10
  %tmp = load <2 x double>, <2 x double>* %p
  %return12 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output11, i64 0)
  %output14 = extractvalue { double, <2 x double> } %return12, 1
  store <2 x double> %output14, <2 x double>* %p
  %_p15 = load <2 x double>, <2 x double>* %_p
  %return16 = call double @"getcomp@FUI"(<2 x double> %_p15, i64 1)
  %output18 = fmul double %return16, %output5
  %sinr19 = load double, double* %sinr
  %output20 = fmul double %output18, %sinr19
  %return22 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output14, double %output20, i64 1)
  %output24 = extractvalue { double, <2 x double> } %return22, 1
  store <2 x double> %output24, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_ESCHER@UUFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %beta) #0 {
__llvm_entry:
  %seb = alloca double
  %ceb = alloca double
  %sn = alloca double
  %cn = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  %3 = alloca double
  store double 0.000000e+00, double* %seb, !vex-initializer-store !3
  store double 0.000000e+00, double* %ceb, !vex-initializer-store !3
  store double 0.000000e+00, double* %sn, !vex-initializer-store !3
  store double 0.000000e+00, double* %cn, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %0)
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %1
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %1)
  %return = call double @"log@FF"(double %SUMSQ)
  %output = fmul double 5.000000e-01, %return
  %beta3 = load double, double* %beta
  store double %beta3, double* %2
  call void @"sincos@FFF"(double* %2, double* %seb, double* %ceb)
  %ceb4 = load double, double* %ceb
  %output5 = fadd double 1.000000e+00, %ceb4
  %output6 = fmul double 5.000000e-01, %output5
  %seb7 = load double, double* %seb
  %output8 = fmul double 5.000000e-01, %seb7
  %w9 = load double, double* %w
  %output12 = fmul double %output6, %output
  %output15 = fmul double %output8, %ATANYX
  %output16 = fsub double %output12, %output15
  %return17 = call double @"exp@FF"(double %output16)
  %output18 = fmul double %w9, %return17
  %output21 = fmul double %output6, %ATANYX
  %output24 = fmul double %output8, %output
  %output25 = fadd double %output21, %output24
  store double %output25, double* %3
  call void @"sincos@FFF"(double* %3, double* %sn, double* %cn)
  %cn28 = load double, double* %cn
  %output29 = fmul double %output18, %cn28
  %tmp = load <2 x double>, <2 x double>* %p
  %return30 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output29, i64 0)
  %output32 = extractvalue { double, <2 x double> } %return30, 1
  store <2 x double> %output32, <2 x double>* %p
  %sn34 = load double, double* %sn
  %output35 = fmul double %output18, %sn34
  %return37 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output32, double %output35, i64 1)
  %output39 = extractvalue { double, <2 x double> } %return37, 1
  store <2 x double> %output39, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_FOCI@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %sn = alloca double
  %cn = alloca double
  %0 = alloca double
  store double 0.000000e+00, double* %sn, !vex-initializer-store !3
  store double 0.000000e+00, double* %cn, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  %return2 = call double @"exp@FF"(double %return)
  %output = fmul double %return2, 5.000000e-01
  %output4 = call double @"div@FF"(double 2.500000e-01, double %output)
  %return6 = call double @"getcomp@FUI"(<2 x double> %_p1, i64 1)
  store double %return6, double* %0
  call void @"sincos@FFF"(double* %0, double* %sn, double* %cn)
  %w7 = load double, double* %w
  %output10 = fadd double %output, %output4
  %cn11 = load double, double* %cn
  %output12 = fsub double %output10, %cn11
  %output13 = call double @"div@FF"(double %w7, double %output12)
  %output17 = fsub double %output, %output4
  %output18 = fmul double %output13, %output17
  %tmp19 = load <2 x double>, <2 x double>* %p
  %return20 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp19, double %output18, i64 0)
  %output22 = extractvalue { double, <2 x double> } %return20, 1
  store <2 x double> %output22, <2 x double>* %p
  %sn24 = load double, double* %sn
  %output25 = fmul double %output13, %sn24
  %return27 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output22, double %output25, i64 1)
  %output29 = extractvalue { double, <2 x double> } %return27, 1
  store <2 x double> %output29, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_LAZYSUSAN@UUFFFFU"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %spin, double* %twist, double* %space, <2 x double>* %lazy) #0 {
__llvm_entry:
  %sina = alloca double
  %cosa = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sina, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosa, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  %lazy2 = load <2 x double>, <2 x double>* %lazy
  %return3 = call double @"getcomp@FUI"(<2 x double> %lazy2, i64 0)
  %output = fsub double %return, %return3
  %return5 = call double @"getcomp@FUI"(<2 x double> %_p1, i64 1)
  %return7 = call double @"getcomp@FUI"(<2 x double> %lazy2, i64 1)
  %output8 = fadd double %return5, %return7
  %return11 = call <2 x double> @"set@UFF"(double %output, double %output8)
  store <2 x double> %return11, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %w13 = load double, double* %w
  %return14 = fcmp olt double %SQRT, %w13
  br i1 %return14, label %true, label %false

true:                                             ; preds = %__llvm_entry
  store <2 x double> %return11, <2 x double>* %1
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %1)
  %spin19 = load double, double* %spin
  %output20 = fadd double %ATANYX, %spin19
  %twist21 = load double, double* %twist
  %w22 = load double, double* %w
  %output24 = fsub double %w22, %SQRT
  %output25 = fmul double %twist21, %output24
  %output26 = fadd double %output20, %output25
  store double %output26, double* %2
  call void @"sincos@FFF"(double* %2, double* %sina, double* %cosa)
  %w28 = load double, double* %w
  %output30 = fmul double %w28, %SQRT
  %cosa32 = load double, double* %cosa
  %output33 = fmul double %output30, %cosa32
  %lazy34 = load <2 x double>, <2 x double>* %lazy
  %return35 = call double @"getcomp@FUI"(<2 x double> %lazy34, i64 0)
  %output36 = fadd double %output33, %return35
  %tmp = load <2 x double>, <2 x double>* %p
  %return37 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output36, i64 0)
  %output39 = extractvalue { double, <2 x double> } %return37, 1
  store <2 x double> %output39, <2 x double>* %p
  %sina41 = load double, double* %sina
  %output42 = fmul double %output30, %sina41
  %lazy43 = load <2 x double>, <2 x double>* %lazy
  %return44 = call double @"getcomp@FUI"(<2 x double> %lazy43, i64 1)
  %output45 = fsub double %output42, %return44
  %return47 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output39, double %output45, i64 1)
  %output49 = extractvalue { double, <2 x double> } %return47, 1
  store <2 x double> %output49, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %space51 = load double, double* %space
  %output53 = call double @"div@FF"(double %space51, double %SQRT)
  %output54 = fadd double 1.000000e+00, %output53
  %output55 = fmul double %w13, %output54
  %output58 = fmul double %output55, %output
  %lazy59 = load <2 x double>, <2 x double>* %lazy
  %return60 = call double @"getcomp@FUI"(<2 x double> %lazy59, i64 0)
  %output61 = fadd double %output58, %return60
  %tmp62 = load <2 x double>, <2 x double>* %p
  %return63 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp62, double %output61, i64 0)
  %output65 = extractvalue { double, <2 x double> } %return63, 1
  store <2 x double> %output65, <2 x double>* %p
  %output68 = fmul double %output55, %output8
  %lazy69 = load <2 x double>, <2 x double>* %lazy
  %return70 = call double @"getcomp@FUI"(<2 x double> %lazy69, i64 1)
  %output71 = fsub double %output68, %return70
  %return73 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output65, double %output71, i64 1)
  %output75 = extractvalue { double, <2 x double> } %return73, 1
  store <2 x double> %output75, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_LOONIE@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %w3 = load double, double* %w
  %output = fmul double %w3, %w3
  %return = fcmp olt double %SUMSQ, %output
  br i1 %return, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output11 = call double @"div@FF"(double %output, double %SUMSQ)
  %output12 = fsub double %output11, 1.000000e+00
  %return13 = call double @"sqrt@FF"(double %output12)
  %output14 = fmul double %w3, %return13
  %_p16 = load <2 x double>, <2 x double>* %_p
  %return17 = call double @"getcomp@FUI"(<2 x double> %_p16, i64 0)
  %output18 = fmul double %output14, %return17
  %tmp = load <2 x double>, <2 x double>* %p
  %return19 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output18, i64 0)
  %output21 = extractvalue { double, <2 x double> } %return19, 1
  store <2 x double> %output21, <2 x double>* %p
  %_p23 = load <2 x double>, <2 x double>* %_p
  %return24 = call double @"getcomp@FUI"(<2 x double> %_p23, i64 1)
  %output25 = fmul double %output14, %return24
  %return27 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output21, double %output25, i64 1)
  %output29 = extractvalue { double, <2 x double> } %return27, 1
  store <2 x double> %output29, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %_p31 = load <2 x double>, <2 x double>* %_p
  %return32 = call double @"getcomp@FUI"(<2 x double> %_p31, i64 0)
  %output33 = fmul double %w3, %return32
  %tmp34 = load <2 x double>, <2 x double>* %p
  %return35 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp34, double %output33, i64 0)
  %output37 = extractvalue { double, <2 x double> } %return35, 1
  store <2 x double> %output37, <2 x double>* %p
  %w38 = load double, double* %w
  %_p39 = load <2 x double>, <2 x double>* %_p
  %return40 = call double @"getcomp@FUI"(<2 x double> %_p39, i64 1)
  %output41 = fmul double %w38, %return40
  %return43 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output37, double %output41, i64 1)
  %output45 = extractvalue { double, <2 x double> } %return43, 1
  store <2 x double> %output45, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_PREBLUR@UF"(<2 x double>* %p, double* %w) #0 {
__llvm_entry:
  %sinA = alloca double
  %cosA = alloca double
  %0 = alloca double
  store double 0.000000e+00, double* %sinA, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosA, !vex-initializer-store !3
  %w1 = load double, double* %w
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i64 0, i64 0))
  %return2 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i64 0, i64 0))
  %output = fadd double %return, %return2
  %return3 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i64 0, i64 0))
  %output4 = fadd double %output, %return3
  %return5 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i64 0, i64 0))
  %output6 = fadd double %output4, %return5
  %output7 = fsub double %output6, 2.000000e+00
  %output8 = fmul double %w1, %output7
  %return9 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i64 0, i64 0))
  %output10 = fmul double %return9, 2.000000e+00
  %output11 = fmul double %output10, 0x400921FB4D12D84A
  store double %output11, double* %0
  call void @"sincos@FFF"(double* %0, double* %sinA, double* %cosA)
  %p13 = load <2 x double>, <2 x double>* %p
  %return14 = call double @"getcomp@FUI"(<2 x double> %p13, i64 0)
  %cosA16 = load double, double* %cosA
  %output17 = fmul double %output8, %cosA16
  %output18 = fadd double %return14, %output17
  %return19 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %p13, double %output18, i64 0)
  %output21 = extractvalue { double, <2 x double> } %return19, 1
  store <2 x double> %output21, <2 x double>* %p
  %return23 = call double @"getcomp@FUI"(<2 x double> %output21, i64 1)
  %sinA25 = load double, double* %sinA
  %output26 = fmul double %output8, %sinA25
  %output27 = fadd double %return23, %output26
  %return29 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output21, double %output27, i64 1)
  %output31 = extractvalue { double, <2 x double> } %return29, 1
  store <2 x double> %output31, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_MODULUS@UUFU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %m) #0 {
__llvm_entry:
  %0 = alloca double
  %1 = alloca double
  %2 = alloca double
  %3 = alloca double
  %4 = alloca double
  %5 = alloca double
  %6 = alloca double
  %7 = alloca double
  %m1 = load <2 x double>, <2 x double>* %m
  %return = call double @"getcomp@FUI"(<2 x double> %m1, i64 0)
  %output = fmul double 2.000000e+00, %return
  %return3 = call double @"getcomp@FUI"(<2 x double> %m1, i64 1)
  %output4 = fmul double 2.000000e+00, %return3
  %_p5 = load <2 x double>, <2 x double>* %_p
  %return6 = call double @"getcomp@FUI"(<2 x double> %_p5, i64 0)
  %return9 = fcmp ogt double %return6, %return
  br i1 %return9, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %w11 = load double, double* %w
  %output18 = fadd double %return6, %return
  store double %output18, double* %0
  store double %output, double* %1
  %fmod = call double @"fmod@FFF"(double* %0, double* %1)
  %output20 = fadd double %return, %fmod
  %output21 = fmul double %w11, %output20
  %tmp = load <2 x double>, <2 x double>* %p
  %return22 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output21, i64 0)
  %output24 = extractvalue { double, <2 x double> } %return22, 1
  store <2 x double> %output24, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %p25 = load <2 x double>, <2 x double>* %p
  %return26 = call double @"getcomp@FUI"(<2 x double> %p25, i64 0)
  %return29 = fcmp olt double %return26, %return
  %w34 = load double, double* %w
  br i1 %return29, label %true31, label %false32

end:                                              ; preds = %true31, %false32, %true
  %_p58 = load <2 x double>, <2 x double>* %_p
  %return59 = call double @"getcomp@FUI"(<2 x double> %_p58, i64 1)
  %m60 = load <2 x double>, <2 x double>* %m
  %return61 = call double @"getcomp@FUI"(<2 x double> %m60, i64 1)
  %return62 = fcmp ogt double %return59, %return61
  br i1 %return62, label %true64, label %false65

true31:                                           ; preds = %false
  %output41 = fadd double %return, %return6
  store double %output41, double* %2
  store double %output, double* %3
  %fmod43 = call double @"fmod@FFF"(double* %2, double* %3)
  %output44 = fsub double %return, %fmod43
  %output45 = fmul double %w34, %output44
  %tmp46 = load <2 x double>, <2 x double>* %p
  %return47 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp46, double %output45, i64 0)
  %output49 = extractvalue { double, <2 x double> } %return47, 1
  store <2 x double> %output49, <2 x double>* %p
  br label %end

false32:                                          ; preds = %false
  %output53 = fmul double %w34, %return6
  %return55 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %p25, double %output53, i64 0)
  %output57 = extractvalue { double, <2 x double> } %return55, 1
  store <2 x double> %output57, <2 x double>* %p
  br label %end

true64:                                           ; preds = %end
  %w67 = load double, double* %w
  %output74 = fadd double %return59, %return61
  store double %output74, double* %4
  store double %output4, double* %5
  %fmod76 = call double @"fmod@FFF"(double* %4, double* %5)
  %output77 = fadd double %return61, %fmod76
  %output78 = fmul double %w67, %output77
  %tmp79 = load <2 x double>, <2 x double>* %p
  %return80 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp79, double %output78, i64 1)
  %output82 = extractvalue { double, <2 x double> } %return80, 1
  store <2 x double> %output82, <2 x double>* %p
  br label %end66

false65:                                          ; preds = %end
  %p83 = load <2 x double>, <2 x double>* %p
  %return84 = call double @"getcomp@FUI"(<2 x double> %p83, i64 0)
  %return86 = call double @"getcomp@FUI"(<2 x double> %m60, i64 0)
  %return87 = fcmp olt double %return84, %return86
  %w92 = load double, double* %w
  br i1 %return87, label %true89, label %false90

end66:                                            ; preds = %true89, %false90, %true64
  ret void

true89:                                           ; preds = %false65
  %output99 = fadd double %return61, %return59
  store double %output99, double* %6
  store double %output4, double* %7
  %fmod101 = call double @"fmod@FFF"(double* %6, double* %7)
  %output102 = fsub double %return61, %fmod101
  %output103 = fmul double %w92, %output102
  %tmp104 = load <2 x double>, <2 x double>* %p
  %return105 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp104, double %output103, i64 1)
  %output107 = extractvalue { double, <2 x double> } %return105, 1
  store <2 x double> %output107, <2 x double>* %p
  br label %end66

false90:                                          ; preds = %false65
  %output111 = fmul double %w92, %return59
  %return113 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %p83, double %output111, i64 1)
  %output115 = extractvalue { double, <2 x double> } %return113, 1
  store <2 x double> %output115, <2 x double>* %p
  br label %end66
}

; Function Attrs: alwaysinline nounwind
define private void @"V_OSCOPE@UUFFFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %freq, double* %amp, double* %damp, double* %sep) #0 {
__llvm_entry:
  %freq1 = load double, double* %freq
  %output = fmul double 0x401921FB4D12D84A, %freq1
  %damp2 = load double, double* %damp
  %return = fcmp oeq double %damp2, 0.000000e+00
  %amp4 = load double, double* %amp
  br i1 %return, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %_p6 = load <2 x double>, <2 x double>* %_p
  %return7 = call double @"getcomp@FUI"(<2 x double> %_p6, i64 0)
  %output8 = fmul double %output, %return7
  %return9 = call double @"cos@FF"(double %output8)
  %output10 = fmul double %amp4, %return9
  %sep11 = load double, double* %sep
  %output12 = fadd double %output10, %sep11
  br label %end

false:                                            ; preds = %__llvm_entry
  %_p14 = load <2 x double>, <2 x double>* %_p
  %return15 = call double @"getcomp@FUI"(<2 x double> %_p14, i64 0)
  %return16 = call double @"abs@FF"(double %return15)
  %return17 = call double @"neg@FF"(double %return16)
  %damp18 = load double, double* %damp
  %output19 = fmul double %return17, %damp18
  %return20 = call double @"exp@FF"(double %output19)
  %output21 = fmul double %amp4, %return20
  %_p23 = load <2 x double>, <2 x double>* %_p
  %return24 = call double @"getcomp@FUI"(<2 x double> %_p23, i64 0)
  %output25 = fmul double %output, %return24
  %return26 = call double @"cos@FF"(double %output25)
  %output27 = fmul double %output21, %return26
  %sep28 = load double, double* %sep
  %output29 = fadd double %output27, %sep28
  br label %end

end:                                              ; preds = %false, %true
  %tt.0 = phi double [ %output12, %true ], [ %output29, %false ]
  %_p30 = load <2 x double>, <2 x double>* %_p
  %return31 = call double @"getcomp@FUI"(<2 x double> %_p30, i64 1)
  %return32 = call double @"abs@FF"(double %return31)
  %return34 = fcmp ole double %return32, %tt.0
  %w39 = load double, double* %w
  %_p40 = load <2 x double>, <2 x double>* %_p
  %return41 = call double @"getcomp@FUI"(<2 x double> %_p40, i64 0)
  %output42 = fmul double %w39, %return41
  %tmp = load <2 x double>, <2 x double>* %p
  %return43 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output42, i64 0)
  %output45 = extractvalue { double, <2 x double> } %return43, 1
  store <2 x double> %output45, <2 x double>* %p
  %w46 = load double, double* %w
  %_p47 = load <2 x double>, <2 x double>* %_p
  %return48 = call double @"getcomp@FUI"(<2 x double> %_p47, i64 1)
  br i1 %return34, label %true36, label %false37

true36:                                           ; preds = %end
  %return49 = call double @"neg@FF"(double %return48)
  %output50 = fmul double %w46, %return49
  %return52 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output45, double %output50, i64 1)
  %output54 = extractvalue { double, <2 x double> } %return52, 1
  store <2 x double> %output54, <2 x double>* %p
  br label %end38

false37:                                          ; preds = %end
  %output66 = fmul double %w46, %return48
  %return68 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output45, double %output66, i64 1)
  %output70 = extractvalue { double, <2 x double> } %return68, 1
  store <2 x double> %output70, <2 x double>* %p
  br label %end38

end38:                                            ; preds = %false37, %true36
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_POLAR2@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %w1 = load double, double* %w
  %output = call double @"div@FF"(double %w1, double 0x400921FB4D12D84A)
  %_p3 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p3, <2 x double>* %0
  %ATAN = call double @"ATAN@FU"(<2 x double>* %0)
  %output4 = fmul double %output, %ATAN
  %tmp = load <2 x double>, <2 x double>* %p
  %return = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output4, i64 0)
  %output6 = extractvalue { double, <2 x double> } %return, 1
  store <2 x double> %output6, <2 x double>* %p
  %output8 = call double @"div@FF"(double %output, double 2.000000e+00)
  %_p9 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p9, <2 x double>* %1
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %1)
  %return10 = call double @"log@FF"(double %SUMSQ)
  %output11 = fmul double %output8, %return10
  %tmp12 = load <2 x double>, <2 x double>* %p
  %return13 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp12, double %output11, i64 1)
  %output15 = extractvalue { double, <2 x double> } %return13, 1
  store <2 x double> %output15, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_POPCORN2@UUFFU"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %pop2c, <2 x double>* %pop2) #0 {
__llvm_entry:
  %w1 = load double, double* %w
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %pop23 = load <2 x double>, <2 x double>* %pop2
  %return4 = call double @"getcomp@FUI"(<2 x double> %pop23, i64 0)
  %return6 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  %pop2c7 = load double, double* %pop2c
  %output = fmul double %return6, %pop2c7
  %return8 = call double @"tan@FF"(double %output)
  %return9 = call double @"sin@FF"(double %return8)
  %output10 = fmul double %return4, %return9
  %output11 = fadd double %return, %output10
  %output12 = fmul double %w1, %output11
  %tmp = load <2 x double>, <2 x double>* %p
  %return13 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output12, i64 0)
  %output15 = extractvalue { double, <2 x double> } %return13, 1
  store <2 x double> %output15, <2 x double>* %p
  %w16 = load double, double* %w
  %_p17 = load <2 x double>, <2 x double>* %_p
  %return18 = call double @"getcomp@FUI"(<2 x double> %_p17, i64 1)
  %pop219 = load <2 x double>, <2 x double>* %pop2
  %return20 = call double @"getcomp@FUI"(<2 x double> %pop219, i64 1)
  %return22 = call double @"getcomp@FUI"(<2 x double> %_p17, i64 0)
  %pop2c23 = load double, double* %pop2c
  %output24 = fmul double %return22, %pop2c23
  %return25 = call double @"tan@FF"(double %output24)
  %return26 = call double @"sin@FF"(double %return25)
  %output27 = fmul double %return20, %return26
  %output28 = fadd double %return18, %output27
  %output29 = fmul double %w16, %output28
  %return31 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output15, double %output29, i64 1)
  %output33 = extractvalue { double, <2 x double> } %return31, 1
  store <2 x double> %output33, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SCRY@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %1
  %SQRT = call double @"SQRT@FU"(<2 x double>* %1)
  %w4 = load double, double* %w
  %output = fadd double %w4, 1.000000e-10
  %output5 = call double @"div@FF"(double 1.000000e+00, double %output)
  %output6 = fadd double %SUMSQ, %output5
  %output7 = fmul double %SQRT, %output6
  %output8 = call double @"div@FF"(double 1.000000e+00, double %output7)
  %_p9 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p9, i64 0)
  %output11 = fmul double %return, %output8
  %tmp = load <2 x double>, <2 x double>* %p
  %return12 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output11, i64 0)
  %output14 = extractvalue { double, <2 x double> } %return12, 1
  store <2 x double> %output14, <2 x double>* %p
  %_p15 = load <2 x double>, <2 x double>* %_p
  %return16 = call double @"getcomp@FUI"(<2 x double> %_p15, i64 1)
  %output18 = fmul double %return16, %output8
  %return20 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output14, double %output18, i64 1)
  %output22 = extractvalue { double, <2 x double> } %return20, 1
  store <2 x double> %output22, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SEPARATION@UUFUU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %sep, <2 x double>* %ins) #0 {
__llvm_entry:
  %sep1 = load <2 x double>, <2 x double>* %sep
  %return = call double @"getcomp@FUI"(<2 x double> %sep1, i64 0)
  %output = fmul double %return, %return
  %return5 = call double @"getcomp@FUI"(<2 x double> %sep1, i64 1)
  %output8 = fmul double %return5, %return5
  %_p9 = load <2 x double>, <2 x double>* %_p
  %return10 = call double @"getcomp@FUI"(<2 x double> %_p9, i64 0)
  %return11 = fcmp ogt double %return10, 0.000000e+00
  %w13 = load double, double* %w
  %output18 = fmul double %return10, %return10
  %output20 = fadd double %output18, %output
  %return21 = call double @"sqrt@FF"(double %output20)
  %ins24 = load <2 x double>, <2 x double>* %ins
  %return25 = call double @"getcomp@FUI"(<2 x double> %ins24, i64 0)
  %output26 = fmul double %return10, %return25
  br i1 %return11, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output27 = fsub double %return21, %output26
  %output28 = fmul double %w13, %output27
  %tmp = load <2 x double>, <2 x double>* %p
  %return29 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output28, i64 0)
  %output31 = extractvalue { double, <2 x double> } %return29, 1
  store <2 x double> %output31, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %output46 = fadd double %return21, %output26
  %return47 = call double @"neg@FF"(double %output46)
  %output48 = fmul double %w13, %return47
  %tmp49 = load <2 x double>, <2 x double>* %p
  %return50 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp49, double %output48, i64 0)
  %output52 = extractvalue { double, <2 x double> } %return50, 1
  store <2 x double> %output52, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  %_p53 = load <2 x double>, <2 x double>* %_p
  %return54 = call double @"getcomp@FUI"(<2 x double> %_p53, i64 1)
  %return55 = fcmp ogt double %return54, 0.000000e+00
  %w60 = load double, double* %w
  %output65 = fmul double %return54, %return54
  %output67 = fadd double %output65, %output8
  %return68 = call double @"sqrt@FF"(double %output67)
  %ins71 = load <2 x double>, <2 x double>* %ins
  %return72 = call double @"getcomp@FUI"(<2 x double> %ins71, i64 1)
  %output73 = fmul double %return54, %return72
  br i1 %return55, label %true57, label %false58

true57:                                           ; preds = %end
  %output74 = fsub double %return68, %output73
  %output75 = fmul double %w60, %output74
  %tmp76 = load <2 x double>, <2 x double>* %p
  %return77 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp76, double %output75, i64 1)
  %output79 = extractvalue { double, <2 x double> } %return77, 1
  store <2 x double> %output79, <2 x double>* %p
  br label %end59

false58:                                          ; preds = %end
  %output94 = fadd double %return68, %output73
  %return95 = call double @"neg@FF"(double %output94)
  %output96 = fmul double %w60, %return95
  %tmp97 = load <2 x double>, <2 x double>* %p
  %return98 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp97, double %output96, i64 1)
  %output100 = extractvalue { double, <2 x double> } %return98, 1
  store <2 x double> %output100, <2 x double>* %p
  br label %end59

end59:                                            ; preds = %false58, %true57
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SPLIT@UUFU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %split) #0 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  %split2 = load <2 x double>, <2 x double>* %split
  %return3 = call double @"getcomp@FUI"(<2 x double> %split2, i64 0)
  %output = fmul double %return, %return3
  %output4 = fmul double %output, 0x400921FB4D12D84A
  %return5 = call double @"cos@FF"(double %output4)
  %return6 = fcmp oge double %return5, 0.000000e+00
  %w8 = load double, double* %w
  %return10 = call double @"getcomp@FUI"(<2 x double> %_p1, i64 1)
  br i1 %return6, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output11 = fmul double %w8, %return10
  %tmp = load <2 x double>, <2 x double>* %p
  %return12 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output11, i64 1)
  %output14 = extractvalue { double, <2 x double> } %return12, 1
  store <2 x double> %output14, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %return18 = call double @"neg@FF"(double %return10)
  %output19 = fmul double %w8, %return18
  %tmp20 = load <2 x double>, <2 x double>* %p
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp20, double %output19, i64 1)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  %_p24 = load <2 x double>, <2 x double>* %_p
  %return25 = call double @"getcomp@FUI"(<2 x double> %_p24, i64 1)
  %split26 = load <2 x double>, <2 x double>* %split
  %return27 = call double @"getcomp@FUI"(<2 x double> %split26, i64 1)
  %output28 = fmul double %return25, %return27
  %output29 = fmul double %output28, 0x400921FB4D12D84A
  %return30 = call double @"cos@FF"(double %output29)
  %return31 = fcmp oge double %return30, 0.000000e+00
  %w36 = load double, double* %w
  %return38 = call double @"getcomp@FUI"(<2 x double> %_p24, i64 0)
  br i1 %return31, label %true33, label %false34

true33:                                           ; preds = %end
  %output39 = fmul double %w36, %return38
  %tmp40 = load <2 x double>, <2 x double>* %p
  %return41 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp40, double %output39, i64 0)
  %output43 = extractvalue { double, <2 x double> } %return41, 1
  store <2 x double> %output43, <2 x double>* %p
  br label %end35

false34:                                          ; preds = %end
  %return47 = call double @"neg@FF"(double %return38)
  %output48 = fmul double %w36, %return47
  %tmp49 = load <2 x double>, <2 x double>* %p
  %return50 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp49, double %output48, i64 0)
  %output52 = extractvalue { double, <2 x double> } %return50, 1
  store <2 x double> %output52, <2 x double>* %p
  br label %end35

end35:                                            ; preds = %false34, %true33
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SPLITS@UUFU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %splits) #0 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  %return2 = fcmp oge double %return, 0.000000e+00
  %w4 = load double, double* %w
  %splits7 = load <2 x double>, <2 x double>* %splits
  %return8 = call double @"getcomp@FUI"(<2 x double> %splits7, i64 0)
  br i1 %return2, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output = fadd double %return, %return8
  %output9 = fmul double %w4, %output
  %tmp = load <2 x double>, <2 x double>* %p
  %return10 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output9, i64 0)
  %output12 = extractvalue { double, <2 x double> } %return10, 1
  store <2 x double> %output12, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %output18 = fsub double %return, %return8
  %output19 = fmul double %w4, %output18
  %tmp20 = load <2 x double>, <2 x double>* %p
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp20, double %output19, i64 0)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  %_p24 = load <2 x double>, <2 x double>* %_p
  %return25 = call double @"getcomp@FUI"(<2 x double> %_p24, i64 1)
  %return26 = fcmp oge double %return25, 0.000000e+00
  %w31 = load double, double* %w
  %splits34 = load <2 x double>, <2 x double>* %splits
  %return35 = call double @"getcomp@FUI"(<2 x double> %splits34, i64 1)
  br i1 %return26, label %true28, label %false29

true28:                                           ; preds = %end
  %output36 = fadd double %return25, %return35
  %output37 = fmul double %w31, %output36
  %tmp38 = load <2 x double>, <2 x double>* %p
  %return39 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp38, double %output37, i64 1)
  %output41 = extractvalue { double, <2 x double> } %return39, 1
  store <2 x double> %output41, <2 x double>* %p
  br label %end30

false29:                                          ; preds = %end
  %output47 = fsub double %return25, %return35
  %output48 = fmul double %w31, %output47
  %tmp49 = load <2 x double>, <2 x double>* %p
  %return50 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp49, double %output48, i64 1)
  %output52 = extractvalue { double, <2 x double> } %return50, 1
  store <2 x double> %output52, <2 x double>* %p
  br label %end30

end30:                                            ; preds = %false29, %true28
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_STRIPES@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %space, double* %warp) #0 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  %output = fadd double %return, 5.000000e-01
  %return2 = call double @"floor@FF"(double %output)
  %output6 = fsub double %return, %return2
  %w7 = load double, double* %w
  %space9 = load double, double* %space
  %output10 = fsub double 1.000000e+00, %space9
  %output11 = fmul double %output6, %output10
  %output13 = fadd double %output11, %return2
  %output14 = fmul double %w7, %output13
  %tmp = load <2 x double>, <2 x double>* %p
  %return15 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output14, i64 0)
  %output17 = extractvalue { double, <2 x double> } %return15, 1
  store <2 x double> %output17, <2 x double>* %p
  %w18 = load double, double* %w
  %_p19 = load <2 x double>, <2 x double>* %_p
  %return20 = call double @"getcomp@FUI"(<2 x double> %_p19, i64 1)
  %output23 = fmul double %output6, %output6
  %warp24 = load double, double* %warp
  %output25 = fmul double %output23, %warp24
  %output26 = fadd double %return20, %output25
  %output27 = fmul double %w18, %output26
  %return29 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output17, double %output27, i64 1)
  %output31 = extractvalue { double, <2 x double> } %return29, 1
  store <2 x double> %output31, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_WEDGE@UUFFFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %swirl, double* %angle, double* %hole, double* %count) #0 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %1
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %1)
  %swirl3 = load double, double* %swirl
  %output = fmul double %swirl3, %SQRT
  %output5 = fadd double %ATANYX, %output
  %count6 = load double, double* %count
  %output8 = fmul double %count6, %output5
  %output9 = fadd double %output8, 0x400921FB4D12D84A
  %output10 = fmul double %output9, 0x3FD45F306DC9C883
  %output11 = fmul double %output10, 5.000000e-01
  %return = call double @"floor@FF"(double %output11)
  %angle12 = load double, double* %angle
  %output14 = fmul double %angle12, %count6
  %output15 = fmul double %output14, 0x3FD45F306DC9C883
  %output16 = fmul double %output15, 5.000000e-01
  %output17 = fsub double 1.000000e+00, %output16
  %output20 = fmul double %output5, %output17
  %output23 = fmul double %return, %angle12
  %output24 = fadd double %output20, %output23
  store double %output24, double* %2
  call void @"sincos@FFF"(double* %2, double* %sa, double* %ca)
  %w26 = load double, double* %w
  %hole28 = load double, double* %hole
  %output29 = fadd double %SQRT, %hole28
  %output30 = fmul double %w26, %output29
  %ca32 = load double, double* %ca
  %output33 = fmul double %output30, %ca32
  %tmp = load <2 x double>, <2 x double>* %p
  %return34 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output33, i64 0)
  %output36 = extractvalue { double, <2 x double> } %return34, 1
  store <2 x double> %output36, <2 x double>* %p
  %sa38 = load double, double* %sa
  %output39 = fmul double %output30, %sa38
  %return41 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output36, double %output39, i64 1)
  %output43 = extractvalue { double, <2 x double> } %return41, 1
  store <2 x double> %output43, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_WEDGEJULIA@UUFFFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %power, double* %angle, double* %dist, double* %count) #0 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %angle1 = load double, double* %angle
  %count2 = load double, double* %count
  %output = fmul double %angle1, %count2
  %output3 = fmul double %output, 0x3FD45F306DC9C883
  %output4 = fmul double %output3, 5.000000e-01
  %output5 = fsub double 1.000000e+00, %output4
  %power6 = load double, double* %power
  %return = call double @"abs@FF"(double %power6)
  %dist7 = load double, double* %dist
  %power8 = load double, double* %power
  %output9 = call double @"div@FF"(double %dist7, double %power8)
  %output10 = call double @"div@FF"(double %output9, double 2.000000e+00)
  %w11 = load double, double* %w
  %_p12 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p12, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %return14 = call double @"pow@FFF"(double %SUMSQ, double %output10)
  %output15 = fmul double %w11, %return14
  %return17 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i64 0, i64 0))
  %output18 = fmul double %return, %return17
  %cast = fptosi double %output18 to i64
  %cast19 = sitofp i64 %cast to double
  %_p20 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p20, <2 x double>* %1
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %1)
  %output22 = fmul double 0x401921FB4D12D84A, %cast19
  %output23 = fadd double %ATANYX, %output22
  %power24 = load double, double* %power
  %output25 = call double @"div@FF"(double %output23, double %power24)
  %count26 = load double, double* %count
  %output28 = fmul double %count26, %output25
  %output29 = fadd double %output28, 0x400921FB4D12D84A
  %output30 = fmul double %output29, 0x3FD45F306DC9C883
  %output31 = fmul double %output30, 5.000000e-01
  %return32 = call double @"floor@FF"(double %output31)
  %output35 = fmul double %output25, %output5
  %angle37 = load double, double* %angle
  %output38 = fmul double %return32, %angle37
  %output39 = fadd double %output35, %output38
  store double %output39, double* %2
  call void @"sincos@FFF"(double* %2, double* %sa, double* %ca)
  %ca42 = load double, double* %ca
  %output43 = fmul double %output15, %ca42
  %tmp = load <2 x double>, <2 x double>* %p
  %return44 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output43, i64 0)
  %output46 = extractvalue { double, <2 x double> } %return44, 1
  store <2 x double> %output46, <2 x double>* %p
  %sa48 = load double, double* %sa
  %output49 = fmul double %output15, %sa48
  %return51 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output46, double %output49, i64 1)
  %output53 = extractvalue { double, <2 x double> } %return51, 1
  store <2 x double> %output53, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_WEDGESPH@UUFFFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %swirl, double* %angle, double* %hole, double* %count) #0 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %output = fadd double %SQRT, 1.000000e-10
  %output2 = call double @"div@FF"(double 1.000000e+00, double %output)
  %_p3 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p3, <2 x double>* %1
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %1)
  %swirl4 = load double, double* %swirl
  %output6 = fmul double %swirl4, %output2
  %output7 = fadd double %ATANYX, %output6
  %count8 = load double, double* %count
  %output10 = fmul double %count8, %output7
  %output11 = fadd double %output10, 0x400921FB4D12D84A
  %output12 = fmul double %output11, 0x3FD45F306DC9C883
  %output13 = fmul double %output12, 5.000000e-01
  %return = call double @"floor@FF"(double %output13)
  %angle14 = load double, double* %angle
  %output16 = fmul double %angle14, %count8
  %output17 = fmul double %output16, 0x3FD45F306DC9C883
  %output18 = fmul double %output17, 5.000000e-01
  %output19 = fsub double 1.000000e+00, %output18
  %output22 = fmul double %output7, %output19
  %output25 = fmul double %return, %angle14
  %output26 = fadd double %output22, %output25
  store double %output26, double* %2
  call void @"sincos@FFF"(double* %2, double* %sa, double* %ca)
  %w28 = load double, double* %w
  %hole30 = load double, double* %hole
  %output31 = fadd double %output2, %hole30
  %output32 = fmul double %w28, %output31
  %ca34 = load double, double* %ca
  %output35 = fmul double %output32, %ca34
  %tmp = load <2 x double>, <2 x double>* %p
  %return36 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output35, i64 0)
  %output38 = extractvalue { double, <2 x double> } %return36, 1
  store <2 x double> %output38, <2 x double>* %p
  %sa40 = load double, double* %sa
  %output41 = fmul double %output32, %sa40
  %return43 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output38, double %output41, i64 1)
  %output45 = extractvalue { double, <2 x double> } %return43, 1
  store <2 x double> %output45, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_WHORL@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %inside, double* %outside) #0 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %w3 = load double, double* %w
  %return = fcmp olt double %SQRT, %w3
  %_p5 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p5, <2 x double>* %1
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %1)
  br i1 %return, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %inside6 = load double, double* %inside
  %w7 = load double, double* %w
  %output = fsub double %w7, %SQRT
  %output9 = call double @"div@FF"(double %inside6, double %output)
  %output10 = fadd double %ATANYX, %output9
  br label %end

false:                                            ; preds = %__llvm_entry
  %outside13 = load double, double* %outside
  %w14 = load double, double* %w
  %output16 = fsub double %w14, %SQRT
  %output17 = call double @"div@FF"(double %outside13, double %output16)
  %output18 = fadd double %ATANYX, %output17
  br label %end

end:                                              ; preds = %false, %true
  %aa.0 = phi double [ %output10, %true ], [ %output18, %false ]
  store double %aa.0, double* %2
  call void @"sincos@FFF"(double* %2, double* %sa, double* %ca)
  %w20 = load double, double* %w
  %output22 = fmul double %w20, %SQRT
  %ca23 = load double, double* %ca
  %output24 = fmul double %output22, %ca23
  %tmp = load <2 x double>, <2 x double>* %p
  %return25 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output24, i64 0)
  %output27 = extractvalue { double, <2 x double> } %return25, 1
  store <2 x double> %output27, <2 x double>* %p
  %w28 = load double, double* %w
  %output30 = fmul double %w28, %SQRT
  %sa31 = load double, double* %sa
  %output32 = fmul double %output30, %sa31
  %return34 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output27, double %output32, i64 1)
  %output36 = extractvalue { double, <2 x double> } %return34, 1
  store <2 x double> %output36, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_WAVES2@UUFUU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %scl, <2 x double>* %freq) #0 {
__llvm_entry:
  %w1 = load double, double* %w
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %scl3 = load <2 x double>, <2 x double>* %scl
  %return4 = call double @"getcomp@FUI"(<2 x double> %scl3, i64 0)
  %return6 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  %freq7 = load <2 x double>, <2 x double>* %freq
  %return8 = call double @"getcomp@FUI"(<2 x double> %freq7, i64 0)
  %output = fmul double %return6, %return8
  %return9 = call double @"sin@FF"(double %output)
  %output10 = fmul double %return4, %return9
  %output11 = fadd double %return, %output10
  %output12 = fmul double %w1, %output11
  %tmp = load <2 x double>, <2 x double>* %p
  %return13 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output12, i64 0)
  %output15 = extractvalue { double, <2 x double> } %return13, 1
  store <2 x double> %output15, <2 x double>* %p
  %w16 = load double, double* %w
  %_p17 = load <2 x double>, <2 x double>* %_p
  %return18 = call double @"getcomp@FUI"(<2 x double> %_p17, i64 1)
  %scl19 = load <2 x double>, <2 x double>* %scl
  %return20 = call double @"getcomp@FUI"(<2 x double> %scl19, i64 1)
  %return22 = call double @"getcomp@FUI"(<2 x double> %_p17, i64 0)
  %freq23 = load <2 x double>, <2 x double>* %freq
  %return24 = call double @"getcomp@FUI"(<2 x double> %freq23, i64 1)
  %output25 = fmul double %return22, %return24
  %return26 = call double @"sin@FF"(double %output25)
  %output27 = fmul double %return20, %return26
  %output28 = fadd double %return18, %output27
  %output29 = fmul double %w16, %output28
  %return31 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output15, double %output29, i64 1)
  %output33 = extractvalue { double, <2 x double> } %return31, 1
  store <2 x double> %output33, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_COTHEEXP@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %expsin = alloca double
  %expcos = alloca double
  %0 = alloca double
  store double 0.000000e+00, double* %expsin, !vex-initializer-store !3
  store double 0.000000e+00, double* %expcos, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  %return2 = call double @"exp@FF"(double %return)
  %p3 = load <2 x double>, <2 x double>* %p
  %return4 = call double @"getcomp@FUI"(<2 x double> %p3, i64 1)
  store double %return4, double* %0
  call void @"sincos@FFF"(double* %0, double* %expsin, double* %expcos)
  %w5 = load double, double* %w
  %output = fmul double %w5, %return2
  %expcos7 = load double, double* %expcos
  %output8 = fmul double %output, %expcos7
  %tmp = load <2 x double>, <2 x double>* %p
  %return9 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output8, i64 0)
  %output11 = extractvalue { double, <2 x double> } %return9, 1
  store <2 x double> %output11, <2 x double>* %p
  %w12 = load double, double* %w
  %output14 = fmul double %w12, %return2
  %expsin15 = load double, double* %expsin
  %output16 = fmul double %output14, %expsin15
  %return18 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output11, double %output16, i64 1)
  %output20 = extractvalue { double, <2 x double> } %return18, 1
  store <2 x double> %output20, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_COTHELOG@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %w1 = load double, double* %w
  %output = fmul double %w1, 5.000000e-01
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %return = call double @"log@FF"(double %SUMSQ)
  %output3 = fmul double %output, %return
  %tmp = load <2 x double>, <2 x double>* %p
  %return4 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output3, i64 0)
  %output6 = extractvalue { double, <2 x double> } %return4, 1
  store <2 x double> %output6, <2 x double>* %p
  %w7 = load double, double* %w
  %_p8 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p8, <2 x double>* %1
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %1)
  %output9 = fmul double %w7, %ATANYX
  %tmp10 = load <2 x double>, <2 x double>* %p
  %return11 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp10, double %output9, i64 1)
  %output13 = extractvalue { double, <2 x double> } %return11, 1
  store <2 x double> %output13, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_COTHESIN@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %sinacos = alloca double
  %0 = alloca double
  %sinsin = alloca double
  store double 0.000000e+00, double* %sinsin, !vex-initializer-store !3
  store double 0.000000e+00, double* %sinacos, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  store double %return, double* %0
  call void @"sincos@FFF"(double* %0, double* %sinsin, double* %sinacos)
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return3 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  %return4 = call double @"sinh@FF"(double %return3)
  %return7 = call double @"cosh@FF"(double %return3)
  %w8 = load double, double* %w
  %sinsin9 = load double, double* %sinsin
  %output = fmul double %w8, %sinsin9
  %output11 = fmul double %output, %return7
  %tmp = load <2 x double>, <2 x double>* %p
  %return12 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output11, i64 0)
  %output14 = extractvalue { double, <2 x double> } %return12, 1
  store <2 x double> %output14, <2 x double>* %p
  %w15 = load double, double* %w
  %sinacos16 = load double, double* %sinacos
  %output17 = fmul double %w15, %sinacos16
  %output19 = fmul double %output17, %return4
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output14, double %output19, i64 1)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_COTHECOS@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %coscos = alloca double
  %0 = alloca double
  %cossin = alloca double
  store double 0.000000e+00, double* %cossin, !vex-initializer-store !3
  store double 0.000000e+00, double* %coscos, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  store double %return, double* %0
  call void @"sincos@FFF"(double* %0, double* %cossin, double* %coscos)
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return3 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  %return4 = call double @"sinh@FF"(double %return3)
  %return7 = call double @"cosh@FF"(double %return3)
  %w8 = load double, double* %w
  %coscos9 = load double, double* %coscos
  %output = fmul double %w8, %coscos9
  %output11 = fmul double %output, %return7
  %tmp = load <2 x double>, <2 x double>* %p
  %return12 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output11, i64 0)
  %output14 = extractvalue { double, <2 x double> } %return12, 1
  store <2 x double> %output14, <2 x double>* %p
  %w15 = load double, double* %w
  %cossin16 = load double, double* %cossin
  %output17 = fmul double %w15, %cossin16
  %output19 = fmul double %output17, %return4
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output14, double %output19, i64 1)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_COTHETAN@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %tancos = alloca double
  %0 = alloca double
  %tansin = alloca double
  store double 0.000000e+00, double* %tansin, !vex-initializer-store !3
  store double 0.000000e+00, double* %tancos, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  %output = fmul double 2.000000e+00, %return
  store double %output, double* %0
  call void @"sincos@FFF"(double* %0, double* %tansin, double* %tancos)
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return3 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  %output4 = fmul double 2.000000e+00, %return3
  %return5 = call double @"sinh@FF"(double %output4)
  %return9 = call double @"cosh@FF"(double %output4)
  %tancos10 = load double, double* %tancos
  %output12 = fadd double %tancos10, %return9
  %output13 = call double @"div@FF"(double 1.000000e+00, double %output12)
  %w14 = load double, double* %w
  %output16 = fmul double %w14, %output13
  %output18 = fmul double %output16, %return5
  %tmp = load <2 x double>, <2 x double>* %p
  %return19 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output18, i64 0)
  %output21 = extractvalue { double, <2 x double> } %return19, 1
  store <2 x double> %output21, <2 x double>* %p
  %w22 = load double, double* %w
  %output24 = fmul double %w22, %output13
  %output26 = fmul double %output24, %return9
  %return28 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output21, double %output26, i64 1)
  %output30 = extractvalue { double, <2 x double> } %return28, 1
  store <2 x double> %output30, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_COTHESEC@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %seccos = alloca double
  %0 = alloca double
  %secsin = alloca double
  store double 0.000000e+00, double* %secsin, !vex-initializer-store !3
  store double 0.000000e+00, double* %seccos, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  store double %return, double* %0
  call void @"sincos@FFF"(double* %0, double* %secsin, double* %seccos)
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return3 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  %return4 = call double @"sinh@FF"(double %return3)
  %return7 = call double @"cosh@FF"(double %return3)
  %return9 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %output = fmul double 2.000000e+00, %return9
  %return10 = call double @"cos@FF"(double %output)
  %output13 = fmul double 2.000000e+00, %return3
  %return14 = call double @"cosh@FF"(double %output13)
  %output15 = fadd double %return10, %return14
  %output16 = call double @"div@FF"(double 2.000000e+00, double %output15)
  %w17 = load double, double* %w
  %output19 = fmul double %w17, %output16
  %seccos20 = load double, double* %seccos
  %output21 = fmul double %output19, %seccos20
  %output23 = fmul double %output21, %return7
  %tmp = load <2 x double>, <2 x double>* %p
  %return24 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output23, i64 0)
  %output26 = extractvalue { double, <2 x double> } %return24, 1
  store <2 x double> %output26, <2 x double>* %p
  %w27 = load double, double* %w
  %output29 = fmul double %w27, %output16
  %secsin30 = load double, double* %secsin
  %output31 = fmul double %output29, %secsin30
  %output33 = fmul double %output31, %return4
  %return35 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output26, double %output33, i64 1)
  %output37 = extractvalue { double, <2 x double> } %return35, 1
  store <2 x double> %output37, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_COTHECSC@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %csccos = alloca double
  %0 = alloca double
  %cscsin = alloca double
  store double 0.000000e+00, double* %cscsin, !vex-initializer-store !3
  store double 0.000000e+00, double* %csccos, !vex-initializer-store !3
  %p1 = load <2 x double>, <2 x double>* %p
  %return = call double @"getcomp@FUI"(<2 x double> %p1, i64 0)
  store double %return, double* %0
  call void @"sincos@FFF"(double* %0, double* %cscsin, double* %csccos)
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return3 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  %return4 = call double @"sinh@FF"(double %return3)
  %return7 = call double @"cosh@FF"(double %return3)
  %output = fmul double 2.000000e+00, %return3
  %return10 = call double @"cosh@FF"(double %output)
  %return12 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %output13 = fmul double 2.000000e+00, %return12
  %return14 = call double @"cos@FF"(double %output13)
  %output15 = fsub double %return10, %return14
  %output16 = call double @"div@FF"(double 2.000000e+00, double %output15)
  %w17 = load double, double* %w
  %output19 = fmul double %w17, %output16
  %cscsin20 = load double, double* %cscsin
  %output21 = fmul double %output19, %cscsin20
  %output23 = fmul double %output21, %return7
  %tmp = load <2 x double>, <2 x double>* %p
  %return24 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output23, i64 0)
  %output26 = extractvalue { double, <2 x double> } %return24, 1
  store <2 x double> %output26, <2 x double>* %p
  %w27 = load double, double* %w
  %output29 = fmul double %w27, %output16
  %csccos30 = load double, double* %csccos
  %output31 = fmul double %output29, %csccos30
  %output33 = fmul double %output31, %return4
  %return35 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output26, double %output33, i64 1)
  %output37 = extractvalue { double, <2 x double> } %return35, 1
  store <2 x double> %output37, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_COTHECOT@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %cotcos = alloca double
  %0 = alloca double
  %cotsin = alloca double
  store double 0.000000e+00, double* %cotsin, !vex-initializer-store !3
  store double 0.000000e+00, double* %cotcos, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  %output = fmul double 2.000000e+00, %return
  store double %output, double* %0
  call void @"sincos@FFF"(double* %0, double* %cotsin, double* %cotcos)
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return3 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  %output4 = fmul double 2.000000e+00, %return3
  %return5 = call double @"sinh@FF"(double %output4)
  %return9 = call double @"cosh@FF"(double %output4)
  %cotcos11 = load double, double* %cotcos
  %output12 = fsub double %return9, %cotcos11
  %output13 = call double @"div@FF"(double 1.000000e+00, double %output12)
  %w14 = load double, double* %w
  %output16 = fmul double %w14, %output13
  %cotsin17 = load double, double* %cotsin
  %output18 = fmul double %output16, %cotsin17
  %tmp = load <2 x double>, <2 x double>* %p
  %return19 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output18, i64 0)
  %output21 = extractvalue { double, <2 x double> } %return19, 1
  store <2 x double> %output21, <2 x double>* %p
  %w22 = load double, double* %w
  %output24 = fmul double %w22, %output13
  %return25 = call i64 @"neg@II"(i64 1)
  %cast = sitofp i64 %return25 to double
  %output26 = fmul double %output24, %cast
  %output28 = fmul double %output26, %return5
  %return30 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output21, double %output28, i64 1)
  %output32 = extractvalue { double, <2 x double> } %return30, 1
  store <2 x double> %output32, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_COTHESINH@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %sinhcos = alloca double
  %0 = alloca double
  %sinhsin = alloca double
  store double 0.000000e+00, double* %sinhsin, !vex-initializer-store !3
  store double 0.000000e+00, double* %sinhcos, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 1)
  store double %return, double* %0
  call void @"sincos@FFF"(double* %0, double* %sinhsin, double* %sinhcos)
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return3 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %return4 = call double @"sinh@FF"(double %return3)
  %return7 = call double @"cosh@FF"(double %return3)
  %w8 = load double, double* %w
  %output = fmul double %w8, %return4
  %sinhcos10 = load double, double* %sinhcos
  %output11 = fmul double %output, %sinhcos10
  %tmp = load <2 x double>, <2 x double>* %p
  %return12 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output11, i64 0)
  %output14 = extractvalue { double, <2 x double> } %return12, 1
  store <2 x double> %output14, <2 x double>* %p
  %w15 = load double, double* %w
  %output17 = fmul double %w15, %return7
  %sinhsin18 = load double, double* %sinhsin
  %output19 = fmul double %output17, %sinhsin18
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output14, double %output19, i64 1)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_COTHECOSH@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %coshcos = alloca double
  %0 = alloca double
  %coshsin = alloca double
  store double 0.000000e+00, double* %coshsin, !vex-initializer-store !3
  store double 0.000000e+00, double* %coshcos, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 1)
  store double %return, double* %0
  call void @"sincos@FFF"(double* %0, double* %coshsin, double* %coshcos)
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return3 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %return4 = call double @"sinh@FF"(double %return3)
  %return7 = call double @"cosh@FF"(double %return3)
  %w8 = load double, double* %w
  %output = fmul double %w8, %return7
  %coshcos10 = load double, double* %coshcos
  %output11 = fmul double %output, %coshcos10
  %tmp = load <2 x double>, <2 x double>* %p
  %return12 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output11, i64 0)
  %output14 = extractvalue { double, <2 x double> } %return12, 1
  store <2 x double> %output14, <2 x double>* %p
  %w15 = load double, double* %w
  %output17 = fmul double %w15, %return4
  %coshsin18 = load double, double* %coshsin
  %output19 = fmul double %output17, %coshsin18
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output14, double %output19, i64 1)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_COTHETANH@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %tanhcos = alloca double
  %0 = alloca double
  %tanhsin = alloca double
  store double 0.000000e+00, double* %tanhsin, !vex-initializer-store !3
  store double 0.000000e+00, double* %tanhcos, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 1)
  %output = fmul double 2.000000e+00, %return
  store double %output, double* %0
  call void @"sincos@FFF"(double* %0, double* %tanhsin, double* %tanhcos)
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return3 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %return4 = call double @"sinh@FF"(double %return3)
  %return7 = call double @"cosh@FF"(double %return3)
  %tanhcos8 = load double, double* %tanhcos
  %output10 = fadd double %tanhcos8, %return7
  %output11 = call double @"div@FF"(double 1.000000e+00, double %output10)
  %w12 = load double, double* %w
  %output14 = fmul double %w12, %output11
  %output16 = fmul double %output14, %return4
  %tmp = load <2 x double>, <2 x double>* %p
  %return17 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output16, i64 0)
  %output19 = extractvalue { double, <2 x double> } %return17, 1
  store <2 x double> %output19, <2 x double>* %p
  %w20 = load double, double* %w
  %output22 = fmul double %w20, %output11
  %tanhsin23 = load double, double* %tanhsin
  %output24 = fmul double %output22, %tanhsin23
  %return26 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output19, double %output24, i64 1)
  %output28 = extractvalue { double, <2 x double> } %return26, 1
  store <2 x double> %output28, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_COTHESECH@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %sechcos = alloca double
  %0 = alloca double
  %sechsin = alloca double
  store double 0.000000e+00, double* %sechsin, !vex-initializer-store !3
  store double 0.000000e+00, double* %sechcos, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 1)
  store double %return, double* %0
  call void @"sincos@FFF"(double* %0, double* %sechsin, double* %sechcos)
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return3 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %return4 = call double @"sinh@FF"(double %return3)
  %return7 = call double @"cosh@FF"(double %return3)
  %return9 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  %output = fmul double 2.000000e+00, %return9
  %return10 = call double @"cos@FF"(double %output)
  %output13 = fmul double 2.000000e+00, %return3
  %return14 = call double @"cosh@FF"(double %output13)
  %output15 = fadd double %return10, %return14
  %output16 = call double @"div@FF"(double 2.000000e+00, double %output15)
  %w17 = load double, double* %w
  %output19 = fmul double %w17, %output16
  %sechcos20 = load double, double* %sechcos
  %output21 = fmul double %output19, %sechcos20
  %output23 = fmul double %output21, %return7
  %tmp = load <2 x double>, <2 x double>* %p
  %return24 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output23, i64 0)
  %output26 = extractvalue { double, <2 x double> } %return24, 1
  store <2 x double> %output26, <2 x double>* %p
  %w27 = load double, double* %w
  %output29 = fmul double %w27, %output16
  %sechsin30 = load double, double* %sechsin
  %output31 = fmul double %output29, %sechsin30
  %output33 = fmul double %output31, %return4
  %return35 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output26, double %output33, i64 1)
  %output37 = extractvalue { double, <2 x double> } %return35, 1
  store <2 x double> %output37, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_COTHECSCH@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %cschcos = alloca double
  %0 = alloca double
  %cschsin = alloca double
  store double 0.000000e+00, double* %cschsin, !vex-initializer-store !3
  store double 0.000000e+00, double* %cschcos, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 1)
  store double %return, double* %0
  call void @"sincos@FFF"(double* %0, double* %cschsin, double* %cschcos)
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return3 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %return4 = call double @"sinh@FF"(double %return3)
  %return7 = call double @"cosh@FF"(double %return3)
  %output = fmul double 2.000000e+00, %return3
  %return10 = call double @"cosh@FF"(double %output)
  %return12 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  %output13 = fmul double 2.000000e+00, %return12
  %return14 = call double @"cos@FF"(double %output13)
  %output15 = fsub double %return10, %return14
  %output16 = call double @"div@FF"(double 2.000000e+00, double %output15)
  %w17 = load double, double* %w
  %output19 = fmul double %w17, %output16
  %output21 = fmul double %output19, %return4
  %cschcos22 = load double, double* %cschcos
  %output23 = fmul double %output21, %cschcos22
  %tmp = load <2 x double>, <2 x double>* %p
  %return24 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output23, i64 0)
  %output26 = extractvalue { double, <2 x double> } %return24, 1
  store <2 x double> %output26, <2 x double>* %p
  %w27 = load double, double* %w
  %output29 = fmul double %w27, %output16
  %output31 = fmul double %output29, %return7
  %cschsin32 = load double, double* %cschsin
  %output33 = fmul double %output31, %cschsin32
  %return35 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output26, double %output33, i64 1)
  %output37 = extractvalue { double, <2 x double> } %return35, 1
  store <2 x double> %output37, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_COTHECOTH@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %cothcos = alloca double
  %0 = alloca double
  %cothsin = alloca double
  store double 0.000000e+00, double* %cothsin, !vex-initializer-store !3
  store double 0.000000e+00, double* %cothcos, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 1)
  %output = fmul double 2.000000e+00, %return
  store double %output, double* %0
  call void @"sincos@FFF"(double* %0, double* %cothsin, double* %cothcos)
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return3 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %output4 = fmul double 2.000000e+00, %return3
  %return5 = call double @"sinh@FF"(double %output4)
  %return9 = call double @"cosh@FF"(double %output4)
  %cothcos11 = load double, double* %cothcos
  %output12 = fsub double %return9, %cothcos11
  %output13 = call double @"div@FF"(double 1.000000e+00, double %output12)
  %w14 = load double, double* %w
  %output16 = fmul double %w14, %output13
  %output18 = fmul double %output16, %return5
  %tmp = load <2 x double>, <2 x double>* %p
  %return19 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output18, i64 0)
  %output21 = extractvalue { double, <2 x double> } %return19, 1
  store <2 x double> %output21, <2 x double>* %p
  %w22 = load double, double* %w
  %output24 = fmul double %w22, %output13
  %cothsin25 = load double, double* %cothsin
  %output26 = fmul double %output24, %cothsin25
  %return28 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output21, double %output26, i64 1)
  %output30 = extractvalue { double, <2 x double> } %return28, 1
  store <2 x double> %output30, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_AUGER@UUFFFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %freq, double* %scale, double* %sym, double* %ww) #0 {
__llvm_entry:
  %freq1 = load double, double* %freq
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %output = fmul double %freq1, %return
  %return3 = call double @"sin@FF"(double %output)
  %return6 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  %output7 = fmul double %freq1, %return6
  %return8 = call double @"sin@FF"(double %output7)
  %ww11 = load double, double* %ww
  %scale12 = load double, double* %scale
  %output14 = fmul double %scale12, %return3
  %output15 = call double @"div@FF"(double %output14, double 2.000000e+00)
  %return18 = call double @"abs@FF"(double %return6)
  %output20 = fmul double %return18, %return3
  %output21 = fadd double %output15, %output20
  %output22 = fmul double %ww11, %output21
  %output23 = fadd double %return6, %output22
  %_p24 = load <2 x double>, <2 x double>* %_p
  %return25 = call double @"getcomp@FUI"(<2 x double> %_p24, i64 0)
  %ww26 = load double, double* %ww
  %scale27 = load double, double* %scale
  %output29 = fmul double %scale27, %return8
  %output30 = call double @"div@FF"(double %output29, double 2.000000e+00)
  %return33 = call double @"abs@FF"(double %return25)
  %output35 = fmul double %return33, %return8
  %output36 = fadd double %output30, %output35
  %output37 = fmul double %ww26, %output36
  %output38 = fadd double %return25, %output37
  %w39 = load double, double* %w
  %_p40 = load <2 x double>, <2 x double>* %_p
  %return41 = call double @"getcomp@FUI"(<2 x double> %_p40, i64 0)
  %sym42 = load double, double* %sym
  %output46 = fmul double %output23, %return41
  %output47 = fmul double %sym42, %output46
  %output48 = fadd double %return41, %output47
  %output49 = fmul double %w39, %output48
  %tmp = load <2 x double>, <2 x double>* %p
  %return50 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output49, i64 0)
  %output52 = extractvalue { double, <2 x double> } %return50, 1
  store <2 x double> %output52, <2 x double>* %p
  %w53 = load double, double* %w
  %output55 = fmul double %w53, %output38
  %return57 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output52, double %output55, i64 1)
  %output59 = extractvalue { double, <2 x double> } %return57, 1
  store <2 x double> %output59, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_FLUX@UUFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %spread) #0 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  %w2 = load double, double* %w
  %output = fadd double %return, %w2
  %output6 = fsub double %return, %w2
  %spread8 = load double, double* %spread
  %output9 = fadd double 2.000000e+00, %spread8
  %output10 = fmul double %w2, %output9
  %return12 = call double @"getcomp@FUI"(<2 x double> %_p1, i64 1)
  %output15 = fmul double %return12, %return12
  %output18 = fmul double %output, %output
  %output19 = fadd double %output15, %output18
  %return20 = call double @"sqrt@FF"(double %output19)
  %output28 = fmul double %output6, %output6
  %output29 = fadd double %output15, %output28
  %return30 = call double @"sqrt@FF"(double %output29)
  %output31 = call double @"div@FF"(double %return20, double %return30)
  %return32 = call double @"sqrt@FF"(double %output31)
  %output33 = fmul double %output10, %return32
  %return37 = call double @"atan2@FFF"(double %return12, double %output6)
  %return41 = call double @"atan2@FFF"(double %return12, double %output)
  %output42 = fsub double %return37, %return41
  %output43 = fmul double %output42, 5.000000e-01
  %return46 = call double @"cos@FF"(double %output43)
  %output47 = fmul double %output33, %return46
  %tmp = load <2 x double>, <2 x double>* %p
  %return48 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output47, i64 0)
  %output50 = extractvalue { double, <2 x double> } %return48, 1
  store <2 x double> %output50, <2 x double>* %p
  %return53 = call double @"sin@FF"(double %output43)
  %output54 = fmul double %output33, %return53
  %return56 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output50, double %output54, i64 1)
  %output58 = extractvalue { double, <2 x double> } %return56, 1
  store <2 x double> %output58, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_MOBIUS@UUFPP"(<2 x double>* %p, <2 x double>* %_p, double* %w, <4 x double>* %re, <4 x double>* %im) #0 {
__llvm_entry:
  %re1 = load <4 x double>, <4 x double>* %re
  %return = call double @"getcomp@FPI"(<4 x double> %re1, i64 0)
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return3 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %output = fmul double %return, %return3
  %im4 = load <4 x double>, <4 x double>* %im
  %return5 = call double @"getcomp@FPI"(<4 x double> %im4, i64 0)
  %return7 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  %output8 = fmul double %return5, %return7
  %output9 = fsub double %output, %output8
  %return11 = call double @"getcomp@FPI"(<4 x double> %re1, i64 1)
  %output12 = fadd double %output9, %return11
  %output17 = fmul double %return, %return7
  %output22 = fmul double %return5, %return3
  %output23 = fadd double %output17, %output22
  %return25 = call double @"getcomp@FPI"(<4 x double> %im4, i64 1)
  %output26 = fadd double %output23, %return25
  %return28 = call double @"getcomp@FPI"(<4 x double> %re1, i64 2)
  %output31 = fmul double %return28, %return3
  %return33 = call double @"getcomp@FPI"(<4 x double> %im4, i64 2)
  %output36 = fmul double %return33, %return7
  %output37 = fsub double %output31, %output36
  %return39 = call double @"getcomp@FPI"(<4 x double> %re1, i64 3)
  %output40 = fadd double %output37, %return39
  %output45 = fmul double %return28, %return7
  %output50 = fmul double %return33, %return3
  %output51 = fadd double %output45, %output50
  %return53 = call double @"getcomp@FPI"(<4 x double> %im4, i64 3)
  %output54 = fadd double %output51, %return53
  %w55 = load double, double* %w
  %output58 = fmul double %output40, %output40
  %output61 = fmul double %output54, %output54
  %output62 = fadd double %output58, %output61
  %output63 = call double @"div@FF"(double %w55, double %output62)
  %output67 = fmul double %output12, %output40
  %output70 = fmul double %output26, %output54
  %output71 = fadd double %output67, %output70
  %output72 = fmul double %output63, %output71
  %tmp = load <2 x double>, <2 x double>* %p
  %return73 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output72, i64 0)
  %output75 = extractvalue { double, <2 x double> } %return73, 1
  store <2 x double> %output75, <2 x double>* %p
  %output79 = fmul double %output26, %output40
  %output82 = fmul double %output12, %output54
  %output83 = fsub double %output79, %output82
  %output84 = fmul double %output63, %output83
  %return86 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output75, double %output84, i64 1)
  %output88 = extractvalue { double, <2 x double> } %return86, 1
  store <2 x double> %output88, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_CURVE@UUFUU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %l, <2 x double>* %a) #0 {
__llvm_entry:
  %l1 = load <2 x double>, <2 x double>* %l
  %return = call double @"getcomp@FUI"(<2 x double> %l1, i64 0)
  %output = fmul double %return, %return
  %return5 = call double @"getcomp@FUI"(<2 x double> %l1, i64 1)
  %output8 = fmul double %return5, %return5
  %return10 = fcmp olt double %output, 1.000000e-20
  br i1 %return10, label %true, label %end

true:                                             ; preds = %__llvm_entry
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %return13 = fcmp olt double %output8, 1.000000e-20
  br i1 %return13, label %true15, label %end16

true15:                                           ; preds = %end
  br label %end16

end16:                                            ; preds = %true15, %end
  %w17 = load double, double* %w
  %_p18 = load <2 x double>, <2 x double>* %_p
  %return19 = call double @"getcomp@FUI"(<2 x double> %_p18, i64 0)
  %a20 = load <2 x double>, <2 x double>* %a
  %return21 = call double @"getcomp@FUI"(<2 x double> %a20, i64 0)
  %return23 = call double @"getcomp@FUI"(<2 x double> %_p18, i64 1)
  %output26 = fmul double %return23, %return23
  %l27 = load <2 x double>, <2 x double>* %l
  %return28 = call double @"getcomp@FUI"(<2 x double> %l27, i64 0)
  %output29 = call double @"div@FF"(double %output26, double %return28)
  %return30 = call double @"exp@FF"(double %output29)
  %output31 = fmul double %return21, %return30
  %output32 = fadd double %return19, %output31
  %output33 = fmul double %w17, %output32
  %tmp = load <2 x double>, <2 x double>* %p
  %return34 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output33, i64 0)
  %output36 = extractvalue { double, <2 x double> } %return34, 1
  store <2 x double> %output36, <2 x double>* %p
  %w37 = load double, double* %w
  %_p38 = load <2 x double>, <2 x double>* %_p
  %return39 = call double @"getcomp@FUI"(<2 x double> %_p38, i64 1)
  %a40 = load <2 x double>, <2 x double>* %a
  %return41 = call double @"getcomp@FUI"(<2 x double> %a40, i64 1)
  %return43 = call double @"getcomp@FUI"(<2 x double> %_p38, i64 0)
  %output46 = fmul double %return43, %return43
  %l47 = load <2 x double>, <2 x double>* %l
  %return48 = call double @"getcomp@FUI"(<2 x double> %l47, i64 1)
  %output49 = call double @"div@FF"(double %output46, double %return48)
  %return50 = call double @"exp@FF"(double %output49)
  %output51 = fmul double %return41, %return50
  %output52 = fadd double %return39, %output51
  %output53 = fmul double %w37, %output52
  %return55 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output36, double %output53, i64 1)
  %output57 = extractvalue { double, <2 x double> } %return55, 1
  store <2 x double> %output57, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_PERSPECTIVE@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %angle, double* %dist) #0 {
__llvm_entry:
  %angle1 = load double, double* %angle
  %output = fmul double %angle1, 0x400921FB4D12D84A
  %output2 = call double @"div@FF"(double %output, double 2.000000e+00)
  %return = call double @"sin@FF"(double %output2)
  %dist4 = load double, double* %dist
  %return6 = call double @"cos@FF"(double %output2)
  %output7 = fmul double %dist4, %return6
  %_p9 = load <2 x double>, <2 x double>* %_p
  %return10 = call double @"getcomp@FUI"(<2 x double> %_p9, i64 1)
  %output12 = fmul double %return10, %return
  %output13 = fsub double %dist4, %output12
  %output14 = call double @"div@FF"(double 1.000000e+00, double %output13)
  %w15 = load double, double* %w
  %output17 = fmul double %w15, %dist4
  %return19 = call double @"getcomp@FUI"(<2 x double> %_p9, i64 0)
  %output20 = fmul double %output17, %return19
  %output22 = fmul double %output20, %output14
  %tmp = load <2 x double>, <2 x double>* %p
  %return23 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output22, i64 0)
  %output25 = extractvalue { double, <2 x double> } %return23, 1
  store <2 x double> %output25, <2 x double>* %p
  %w26 = load double, double* %w
  %output28 = fmul double %w26, %output7
  %_p29 = load <2 x double>, <2 x double>* %_p
  %return30 = call double @"getcomp@FUI"(<2 x double> %_p29, i64 1)
  %output31 = fmul double %output28, %return30
  %output33 = fmul double %output31, %output14
  %return35 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output25, double %output33, i64 1)
  %output37 = extractvalue { double, <2 x double> } %return35, 1
  store <2 x double> %output37, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_BWRAPS@UUFFFFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %cellsize, double* %space, double* %gain, double* %innertwist, double* %outertwist) #0 {
__llvm_entry:
  %ss = alloca double
  %cc = alloca double
  %0 = alloca double
  store double 0.000000e+00, double* %ss, !vex-initializer-store !3
  store double 0.000000e+00, double* %cc, !vex-initializer-store !3
  %cellsize1 = load double, double* %cellsize
  %space2 = load double, double* %space
  %output = fmul double %space2, %space2
  %output4 = fadd double 1.000000e+00, %output
  %output5 = call double @"div@FF"(double %cellsize1, double %output4)
  %output6 = fmul double 5.000000e-01, %output5
  %gain7 = load double, double* %gain
  %return = call double @"sqrt@FF"(double %gain7)
  %output9 = call double @"div@FF"(double %return, double %cellsize1)
  %output10 = fadd double %output9, 1.000000e-06
  %output13 = fmul double %output10, %output6
  %return15 = fcmp ogt double %output13, 2.000000e+00
  br i1 %return15, label %end, label %false

false:                                            ; preds = %__llvm_entry
  %output21 = fmul double %output13, %output13
  %output22 = call double @"div@FF"(double %output21, double 4.000000e+00)
  %output23 = fadd double %output22, 1.000000e+00
  %output24 = call double @"div@FF"(double %output13, double %output23)
  br label %end

end:                                              ; preds = %__llvm_entry, %false
  %phi = phi double [ %output24, %false ], [ 1.000000e+00, %__llvm_entry ]
  %output27 = fmul double %output6, %output6
  %output30 = call double @"div@FF"(double %output6, double %phi)
  %_p31 = load <2 x double>, <2 x double>* %_p
  %return32 = call double @"getcomp@FUI"(<2 x double> %_p31, i64 0)
  %return34 = call double @"getcomp@FUI"(<2 x double> %_p31, i64 1)
  %cellsize35 = load double, double* %cellsize
  %return36 = fcmp oeq double %cellsize35, 0.000000e+00
  br i1 %return36, label %true38, label %false39

true38:                                           ; preds = %end
  %w41 = load double, double* %w
  %output43 = fmul double %w41, %return32
  %tmp = load <2 x double>, <2 x double>* %p
  %return44 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output43, i64 0)
  %output46 = extractvalue { double, <2 x double> } %return44, 1
  store <2 x double> %output46, <2 x double>* %p
  %w47 = load double, double* %w
  %output49 = fmul double %w47, %return34
  %return51 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output46, double %output49, i64 1)
  %output53 = extractvalue { double, <2 x double> } %return51, 1
  store <2 x double> %output53, <2 x double>* %p
  br label %end40

false39:                                          ; preds = %end
  %output56 = call double @"div@FF"(double %return32, double %cellsize35)
  %return57 = call double @"floor@FF"(double %output56)
  %output58 = fadd double %return57, 5.000000e-01
  %output60 = fmul double %output58, %cellsize35
  %output63 = call double @"div@FF"(double %return34, double %cellsize35)
  %return64 = call double @"floor@FF"(double %output63)
  %output65 = fadd double %return64, 5.000000e-01
  %output67 = fmul double %output65, %cellsize35
  %output70 = fsub double %return32, %output60
  %output73 = fsub double %return34, %output67
  %output76 = fmul double %output70, %output70
  %output79 = fmul double %output73, %output73
  %output80 = fadd double %output76, %output79
  %return82 = fcmp ogt double %output80, %output27
  br i1 %return82, label %true84, label %false85

end40:                                            ; preds = %true84, %false85, %true38
  ret void

true84:                                           ; preds = %false39
  %w87 = load double, double* %w
  %output89 = fmul double %w87, %return32
  %tmp90 = load <2 x double>, <2 x double>* %p
  %return91 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp90, double %output89, i64 0)
  %output93 = extractvalue { double, <2 x double> } %return91, 1
  store <2 x double> %output93, <2 x double>* %p
  %w94 = load double, double* %w
  %output96 = fmul double %w94, %return34
  %return98 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output93, double %output96, i64 1)
  %output100 = extractvalue { double, <2 x double> } %return98, 1
  store <2 x double> %output100, <2 x double>* %p
  br label %end40

false85:                                          ; preds = %false39
  %output103 = fmul double %output70, %output10
  %output106 = fmul double %output73, %output10
  %output110 = fmul double %output103, %output103
  %output113 = fmul double %output106, %output106
  %output114 = fadd double %output110, %output113
  %output115 = call double @"div@FF"(double %output114, double 4.000000e+00)
  %output116 = fadd double %output115, 1.000000e+00
  %output117 = call double @"div@FF"(double %output30, double %output116)
  %output120 = fmul double %output103, %output117
  %output123 = fmul double %output106, %output117
  %output126 = fmul double %output120, %output120
  %output129 = fmul double %output123, %output123
  %output130 = fadd double %output126, %output129
  %output132 = call double @"div@FF"(double %output130, double %output27)
  %innertwist133 = load double, double* %innertwist
  %output135 = fsub double 1.000000e+00, %output132
  %output136 = fmul double %innertwist133, %output135
  %outertwist137 = load double, double* %outertwist
  %output139 = fmul double %outertwist137, %output132
  %output140 = fadd double %output136, %output139
  store double %output140, double* %0
  call void @"sincos@FFF"(double* %0, double* %ss, double* %cc)
  %cc143 = load double, double* %cc
  %output145 = fmul double %cc143, %output120
  %output146 = fadd double %output60, %output145
  %ss147 = load double, double* %ss
  %output149 = fmul double %ss147, %output123
  %output150 = fadd double %output146, %output149
  %output154 = fmul double %ss147, %output120
  %output155 = fsub double %output67, %output154
  %output158 = fmul double %cc143, %output123
  %output159 = fadd double %output155, %output158
  %w160 = load double, double* %w
  %output162 = fmul double %w160, %output150
  %tmp163 = load <2 x double>, <2 x double>* %p
  %return164 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp163, double %output162, i64 0)
  %output166 = extractvalue { double, <2 x double> } %return164, 1
  store <2 x double> %output166, <2 x double>* %p
  %w167 = load double, double* %w
  %output169 = fmul double %w167, %output159
  %return171 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output166, double %output169, i64 1)
  %output173 = extractvalue { double, <2 x double> } %return171, 1
  store <2 x double> %output173, <2 x double>* %p
  br label %end40
}

; Function Attrs: alwaysinline nounwind
define private void @"V_HEMISPHERE@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %w1 = load double, double* %w
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %output = fadd double %SUMSQ, 1.000000e+00
  %return = call double @"sqrt@FF"(double %output)
  %output3 = call double @"div@FF"(double %w1, double %return)
  %_p4 = load <2 x double>, <2 x double>* %_p
  %return5 = call double @"getcomp@FUI"(<2 x double> %_p4, i64 0)
  %output7 = fmul double %return5, %output3
  %tmp = load <2 x double>, <2 x double>* %p
  %return8 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output7, i64 0)
  %output10 = extractvalue { double, <2 x double> } %return8, 1
  store <2 x double> %output10, <2 x double>* %p
  %_p11 = load <2 x double>, <2 x double>* %_p
  %return12 = call double @"getcomp@FUI"(<2 x double> %_p11, i64 1)
  %output14 = fmul double %return12, %output3
  %return16 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output10, double %output14, i64 1)
  %output18 = extractvalue { double, <2 x double> } %return16, 1
  store <2 x double> %output18, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_POLYNOMIAL@UUFUUU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %pow, <2 x double>* %lc, <2 x double>* %sc) #0 {
__llvm_entry:
  %0 = alloca double
  %1 = alloca double
  %w1 = load double, double* %w
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %return3 = call double @"abs@FF"(double %return)
  %output = fmul double %w1, %return3
  %pow4 = load <2 x double>, <2 x double>* %pow
  %return5 = call double @"getcomp@FUI"(<2 x double> %pow4, i64 0)
  %return6 = call double @"pow@FFF"(double %output, double %return5)
  %w7 = load double, double* %w
  %_p8 = load <2 x double>, <2 x double>* %_p
  %return9 = call double @"getcomp@FUI"(<2 x double> %_p8, i64 1)
  %return10 = call double @"abs@FF"(double %return9)
  %output11 = fmul double %w7, %return10
  %pow12 = load <2 x double>, <2 x double>* %pow
  %return13 = call double @"getcomp@FUI"(<2 x double> %pow12, i64 1)
  %return14 = call double @"pow@FFF"(double %output11, double %return13)
  %_p16 = load <2 x double>, <2 x double>* %_p
  %return17 = call double @"getcomp@FUI"(<2 x double> %_p16, i64 0)
  store double %return17, double* %0
  %sgn = call double @"sgn@FF"(double* %0)
  %output18 = fmul double %return6, %sgn
  %lc19 = load <2 x double>, <2 x double>* %lc
  %return20 = call double @"getcomp@FUI"(<2 x double> %lc19, i64 0)
  %_p21 = load <2 x double>, <2 x double>* %_p
  %return22 = call double @"getcomp@FUI"(<2 x double> %_p21, i64 0)
  %output23 = fmul double %return20, %return22
  %sc24 = load <2 x double>, <2 x double>* %sc
  %return25 = call double @"getcomp@FUI"(<2 x double> %sc24, i64 0)
  %output26 = fmul double %output23, %return25
  %output27 = fadd double %output18, %output26
  %tmp = load <2 x double>, <2 x double>* %p
  %return28 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output27, i64 0)
  %output30 = extractvalue { double, <2 x double> } %return28, 1
  store <2 x double> %output30, <2 x double>* %p
  %_p32 = load <2 x double>, <2 x double>* %_p
  %return33 = call double @"getcomp@FUI"(<2 x double> %_p32, i64 1)
  store double %return33, double* %1
  %sgn34 = call double @"sgn@FF"(double* %1)
  %output35 = fmul double %return14, %sgn34
  %lc36 = load <2 x double>, <2 x double>* %lc
  %return37 = call double @"getcomp@FUI"(<2 x double> %lc36, i64 1)
  %_p38 = load <2 x double>, <2 x double>* %_p
  %return39 = call double @"getcomp@FUI"(<2 x double> %_p38, i64 1)
  %output40 = fmul double %return37, %return39
  %sc41 = load <2 x double>, <2 x double>* %sc
  %return42 = call double @"getcomp@FUI"(<2 x double> %sc41, i64 1)
  %output43 = fmul double %output40, %return42
  %output44 = fadd double %output35, %output43
  %tmp45 = load <2 x double>, <2 x double>* %p
  %return46 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp45, double %output44, i64 1)
  %output48 = extractvalue { double, <2 x double> } %return46, 1
  store <2 x double> %output48, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private <2 x double> @"FLAME@UZ6gemPrmM51N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PIIUUUUF"(%gemPrm* %GMP, i64* %idx, i64* %type, <2 x double>* %pos, <2 x double>* %x, <2 x double>* %y, <2 x double>* %o, double* %w) #0 {
__llvm_entry:
  %_p = alloca <2 x double>
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca <2 x double>
  %3 = alloca <2 x double>
  %4 = alloca double
  %5 = alloca <2 x double>
  %6 = alloca double
  %7 = alloca <2 x double>
  %8 = alloca double
  %9 = alloca <2 x double>
  %10 = alloca double
  %11 = alloca <2 x double>
  %12 = alloca double
  %13 = alloca <2 x double>
  %14 = alloca double
  %15 = alloca <2 x double>
  %16 = alloca double
  %17 = alloca <2 x double>
  %18 = alloca double
  %19 = alloca <2 x double>
  %20 = alloca double
  %21 = alloca <2 x double>
  %22 = alloca double
  %23 = alloca <2 x double>
  %24 = alloca double
  %25 = alloca <2 x double>
  %26 = alloca double
  %27 = alloca <2 x double>
  %28 = alloca double
  %29 = alloca <2 x double>
  %30 = alloca double
  %31 = alloca <2 x double>
  %32 = alloca double
  %33 = alloca double
  %34 = alloca double
  %35 = alloca double
  %36 = alloca double
  %37 = alloca <2 x double>
  %38 = alloca double
  %39 = alloca <2 x double>
  %40 = alloca double
  %41 = alloca double
  %42 = alloca double
  %43 = alloca <2 x double>
  %44 = alloca double
  %45 = alloca <2 x double>
  %46 = alloca double
  %47 = alloca <2 x double>
  %48 = alloca double
  %49 = alloca <2 x double>
  %50 = alloca double
  %51 = alloca double
  %52 = alloca <2 x double>
  %53 = alloca double
  %54 = alloca double
  %55 = alloca <2 x double>
  %56 = alloca double
  %57 = alloca <2 x double>
  %58 = alloca double
  %59 = alloca <2 x double>
  %60 = alloca double
  %61 = alloca double
  %62 = alloca <2 x double>
  %63 = alloca double
  %64 = alloca double
  %65 = alloca double
  %66 = alloca <2 x double>
  %67 = alloca double
  %68 = alloca double
  %69 = alloca double
  %70 = alloca double
  %71 = alloca double
  %72 = alloca <2 x double>
  %73 = alloca double
  %74 = alloca <4 x double>
  %75 = alloca <2 x double>
  %76 = alloca double
  %77 = alloca double
  %78 = alloca double
  %79 = alloca double
  %80 = alloca <2 x double>
  %81 = alloca double
  %82 = alloca double
  %83 = alloca double
  %84 = alloca <2 x double>
  %85 = alloca double
  %86 = alloca double
  %87 = alloca double
  %88 = alloca double
  %89 = alloca <2 x double>
  %90 = alloca double
  %91 = alloca <2 x double>
  %92 = alloca <2 x double>
  %93 = alloca double
  %94 = alloca double
  %95 = alloca <2 x double>
  %96 = alloca double
  %97 = alloca <2 x double>
  %98 = alloca <2 x double>
  %99 = alloca double
  %100 = alloca double
  %101 = alloca double
  %102 = alloca double
  %103 = alloca double
  %104 = alloca double
  %105 = alloca double
  %106 = alloca <2 x double>
  %107 = alloca double
  %108 = alloca <2 x double>
  %109 = alloca double
  %110 = alloca <2 x double>
  %111 = alloca double
  %112 = alloca <2 x double>
  %113 = alloca double
  %114 = alloca <2 x double>
  %115 = alloca double
  %116 = alloca <2 x double>
  %117 = alloca double
  %118 = alloca <2 x double>
  %119 = alloca double
  %120 = alloca <2 x double>
  %121 = alloca double
  %122 = alloca <2 x double>
  %123 = alloca double
  %124 = alloca double
  %125 = alloca double
  %126 = alloca <2 x double>
  %127 = alloca double
  %128 = alloca double
  %129 = alloca double
  %130 = alloca double
  %131 = alloca <3 x double>
  %132 = alloca <2 x double>
  %133 = alloca double
  %134 = alloca double
  %135 = alloca double
  %136 = alloca <2 x double>
  %137 = alloca double
  %138 = alloca double
  %139 = alloca double
  %140 = alloca <2 x double>
  %141 = alloca double
  %142 = alloca double
  %143 = alloca double
  %144 = alloca <2 x double>
  %145 = alloca double
  %146 = alloca <2 x double>
  %147 = alloca <2 x double>
  %148 = alloca double
  %149 = alloca double
  %150 = alloca <2 x double>
  %151 = alloca double
  %152 = alloca <2 x double>
  %153 = alloca double
  %154 = alloca <2 x double>
  %155 = alloca double
  %156 = alloca double
  %157 = alloca <2 x double>
  %158 = alloca double
  %159 = alloca double
  %160 = alloca double
  %161 = alloca double
  %162 = alloca <2 x double>
  %163 = alloca double
  %164 = alloca <2 x double>
  %165 = alloca double
  %166 = alloca <2 x double>
  %167 = alloca double
  %168 = alloca <2 x double>
  %169 = alloca double
  %170 = alloca double
  %171 = alloca <2 x double>
  %172 = alloca double
  %173 = alloca <2 x double>
  %174 = alloca double
  %175 = alloca double
  %176 = alloca double
  %177 = alloca double
  %178 = alloca <2 x double>
  %179 = alloca <2 x double>
  %180 = alloca double
  %181 = alloca <2 x double>
  %182 = alloca double
  %183 = alloca <2 x double>
  %184 = alloca <2 x double>
  %185 = alloca double
  %186 = alloca double
  %187 = alloca double
  %188 = alloca double
  %189 = alloca double
  %190 = alloca <2 x double>
  %191 = alloca double
  %192 = alloca <2 x double>
  %193 = alloca double
  %194 = alloca double
  %195 = alloca <2 x double>
  %196 = alloca <2 x double>
  %197 = alloca double
  %198 = alloca <2 x double>
  %199 = alloca double
  %200 = alloca <2 x double>
  %201 = alloca <2 x double>
  %202 = alloca <2 x double>
  %203 = alloca double
  %204 = alloca <2 x double>
  %205 = alloca <2 x double>
  %206 = alloca double
  %207 = alloca <2 x double>
  %208 = alloca <2 x double>
  %209 = alloca double
  %210 = alloca double
  %211 = alloca double
  %212 = alloca <2 x double>
  %213 = alloca double
  %214 = alloca double
  %215 = alloca double
  %216 = alloca double
  %217 = alloca double
  %218 = alloca <2 x double>
  %219 = alloca double
  %220 = alloca double
  %221 = alloca double
  %222 = alloca double
  %223 = alloca double
  %224 = alloca <2 x double>
  %225 = alloca double
  %226 = alloca double
  %227 = alloca double
  %228 = alloca double
  %229 = alloca double
  %230 = alloca <2 x double>
  %231 = alloca double
  %232 = alloca double
  %233 = alloca double
  %234 = alloca <2 x double>
  %235 = alloca double
  %236 = alloca <2 x double>
  %237 = alloca <2 x double>
  %238 = alloca <2 x double>
  %239 = alloca double
  %240 = alloca <2 x double>
  %241 = alloca double
  %242 = alloca <2 x double>
  %243 = alloca double
  %244 = alloca <2 x double>
  %245 = alloca double
  %246 = alloca <2 x double>
  %247 = alloca double
  %248 = alloca <2 x double>
  %249 = alloca double
  %250 = alloca <2 x double>
  %251 = alloca double
  %252 = alloca <2 x double>
  %253 = alloca double
  %254 = alloca <2 x double>
  %255 = alloca double
  %256 = alloca <2 x double>
  %257 = alloca double
  %258 = alloca <2 x double>
  %259 = alloca double
  %260 = alloca <2 x double>
  %261 = alloca double
  %262 = alloca <2 x double>
  %263 = alloca double
  %264 = alloca <2 x double>
  %265 = alloca double
  %266 = alloca <2 x double>
  %267 = alloca double
  %268 = alloca double
  %269 = alloca double
  %270 = alloca double
  %271 = alloca double
  %272 = alloca <2 x double>
  %273 = alloca double
  %274 = alloca double
  %275 = alloca <2 x double>
  %276 = alloca double
  %277 = alloca <4 x double>
  %278 = alloca <4 x double>
  %279 = alloca <2 x double>
  %280 = alloca double
  %281 = alloca <2 x double>
  %282 = alloca <2 x double>
  %283 = alloca <2 x double>
  %284 = alloca double
  %285 = alloca double
  %286 = alloca double
  %287 = alloca <2 x double>
  %288 = alloca double
  %289 = alloca double
  %290 = alloca double
  %291 = alloca double
  %292 = alloca double
  %293 = alloca double
  %294 = alloca <2 x double>
  %295 = alloca double
  %296 = alloca <2 x double>
  %297 = alloca double
  %298 = alloca <2 x double>
  %299 = alloca <2 x double>
  %300 = alloca <2 x double>
  %p = alloca <2 x double>
  store <2 x double> zeroinitializer, <2 x double>* %p, !vex-initializer-store !3
  %pos1 = load <2 x double>, <2 x double>* %pos
  store <2 x double> %pos1, <2 x double>* %_p
  %x2 = load <2 x double>, <2 x double>* %x
  store <2 x double> %x2, <2 x double>* %0
  %y3 = load <2 x double>, <2 x double>* %y
  store <2 x double> %y3, <2 x double>* %1
  %o4 = load <2 x double>, <2 x double>* %o
  store <2 x double> %o4, <2 x double>* %2
  call void @"affine@UUUU"(<2 x double>* %_p, <2 x double>* %0, <2 x double>* %1, <2 x double>* %2)
  %type5 = load i64, i64* %type
  %return = call i64 @"not@II"(i64 %type5)
  %301 = icmp ne i64 %return, 0
  br i1 %301, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %_p6 = load <2 x double>, <2 x double>* %_p
  %w7 = load double, double* %w
  %cast = call <2 x double> @"set@UF"(double %w7)
  %output = call <2 x double> @"mul@UU"(<2 x double> %_p6, <2 x double> %cast)
  br label %UnifiedReturnBlock

false:                                            ; preds = %__llvm_entry
  %return9 = call i64 @"lt@III"(i64 %type5, i64 35)
  %302 = icmp ne i64 %return9, 0
  br i1 %302, label %true10, label %false11

true10:                                           ; preds = %false
  %return14 = call i64 @"lt@III"(i64 %type5, i64 18)
  %303 = icmp ne i64 %return14, 0
  br i1 %303, label %true15, label %false16

false11:                                          ; preds = %false
  %return358 = call i64 @"lt@III"(i64 %type5, i64 70)
  %304 = icmp ne i64 %return358, 0
  br i1 %304, label %true359, label %false360

end12:                                            ; preds = %false1157, %false972, %false360, %false750, %false505, %false341, %false149
  %_p1181 = load <2 x double>, <2 x double>* %_p
  br label %UnifiedReturnBlock

true15:                                           ; preds = %true10
  %return19 = call i64 @"eq@III"(i64 %type5, i64 1)
  %305 = icmp ne i64 %return19, 0
  br i1 %305, label %true20, label %false21

false16:                                          ; preds = %true10
  %return166 = call i64 @"eq@III"(i64 %type5, i64 18)
  %306 = icmp ne i64 %return166, 0
  br i1 %306, label %true167, label %false168

true20:                                           ; preds = %true15
  %_p23 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p23, <2 x double>* %3
  %w24 = load double, double* %w
  store double %w24, double* %4
  call void @"V_SINUSOIDAL@UUF"(<2 x double>* %p, <2 x double>* %3, double* %4)
  %p25 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false21:                                          ; preds = %true15
  %return27 = call i64 @"eq@III"(i64 %type5, i64 2)
  %307 = icmp ne i64 %return27, 0
  br i1 %307, label %true28, label %false29

true28:                                           ; preds = %false21
  %_p31 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p31, <2 x double>* %5
  %w32 = load double, double* %w
  store double %w32, double* %6
  call void @"V_SPHERICAL@UUF"(<2 x double>* %p, <2 x double>* %5, double* %6)
  %p33 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false29:                                          ; preds = %false21
  %return35 = call i64 @"eq@III"(i64 %type5, i64 3)
  %308 = icmp ne i64 %return35, 0
  br i1 %308, label %true36, label %false37

true36:                                           ; preds = %false29
  %_p39 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p39, <2 x double>* %7
  %w40 = load double, double* %w
  store double %w40, double* %8
  call void @"V_SWIRL@UUF"(<2 x double>* %p, <2 x double>* %7, double* %8)
  %p41 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false37:                                          ; preds = %false29
  %return43 = call i64 @"eq@III"(i64 %type5, i64 4)
  %309 = icmp ne i64 %return43, 0
  br i1 %309, label %true44, label %false45

true44:                                           ; preds = %false37
  %_p47 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p47, <2 x double>* %9
  %w48 = load double, double* %w
  store double %w48, double* %10
  call void @"V_HORSESHOE@UUF"(<2 x double>* %p, <2 x double>* %9, double* %10)
  %p49 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false45:                                          ; preds = %false37
  %return51 = call i64 @"eq@III"(i64 %type5, i64 5)
  %310 = icmp ne i64 %return51, 0
  br i1 %310, label %true52, label %false53

true52:                                           ; preds = %false45
  %_p55 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p55, <2 x double>* %11
  %w56 = load double, double* %w
  store double %w56, double* %12
  call void @"V_POLAR@UUF"(<2 x double>* %p, <2 x double>* %11, double* %12)
  %p57 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false53:                                          ; preds = %false45
  %return59 = call i64 @"eq@III"(i64 %type5, i64 6)
  %311 = icmp ne i64 %return59, 0
  br i1 %311, label %true60, label %false61

true60:                                           ; preds = %false53
  %_p63 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p63, <2 x double>* %13
  %w64 = load double, double* %w
  store double %w64, double* %14
  call void @"V_HANDKERCHIEF@UUF"(<2 x double>* %p, <2 x double>* %13, double* %14)
  %p65 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false61:                                          ; preds = %false53
  %return67 = call i64 @"eq@III"(i64 %type5, i64 7)
  %312 = icmp ne i64 %return67, 0
  br i1 %312, label %true68, label %false69

true68:                                           ; preds = %false61
  %_p71 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p71, <2 x double>* %15
  %w72 = load double, double* %w
  store double %w72, double* %16
  call void @"V_HEART@UUF"(<2 x double>* %p, <2 x double>* %15, double* %16)
  %p73 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false69:                                          ; preds = %false61
  %return75 = call i64 @"eq@III"(i64 %type5, i64 8)
  %313 = icmp ne i64 %return75, 0
  br i1 %313, label %true76, label %false77

true76:                                           ; preds = %false69
  %_p79 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p79, <2 x double>* %17
  %w80 = load double, double* %w
  store double %w80, double* %18
  call void @"V_DISC@UUF"(<2 x double>* %p, <2 x double>* %17, double* %18)
  %p81 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false77:                                          ; preds = %false69
  %return83 = call i64 @"eq@III"(i64 %type5, i64 9)
  %314 = icmp ne i64 %return83, 0
  br i1 %314, label %true84, label %false85

true84:                                           ; preds = %false77
  %_p87 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p87, <2 x double>* %19
  %w88 = load double, double* %w
  store double %w88, double* %20
  call void @"V_SPIRAL@UUF"(<2 x double>* %p, <2 x double>* %19, double* %20)
  %p89 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false85:                                          ; preds = %false77
  %return91 = call i64 @"eq@III"(i64 %type5, i64 10)
  %315 = icmp ne i64 %return91, 0
  br i1 %315, label %true92, label %false93

true92:                                           ; preds = %false85
  %_p95 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p95, <2 x double>* %21
  %w96 = load double, double* %w
  store double %w96, double* %22
  call void @"V_HIPERBOLIC@UUF"(<2 x double>* %p, <2 x double>* %21, double* %22)
  %p97 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false93:                                          ; preds = %false85
  %return99 = call i64 @"eq@III"(i64 %type5, i64 11)
  %316 = icmp ne i64 %return99, 0
  br i1 %316, label %true100, label %false101

true100:                                          ; preds = %false93
  %_p103 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p103, <2 x double>* %23
  %w104 = load double, double* %w
  store double %w104, double* %24
  call void @"V_DIAMOND@UUF"(<2 x double>* %p, <2 x double>* %23, double* %24)
  %p105 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false101:                                         ; preds = %false93
  %return107 = call i64 @"eq@III"(i64 %type5, i64 12)
  %317 = icmp ne i64 %return107, 0
  br i1 %317, label %true108, label %false109

true108:                                          ; preds = %false101
  %_p111 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p111, <2 x double>* %25
  %w112 = load double, double* %w
  store double %w112, double* %26
  call void @"V_EX@UUF"(<2 x double>* %p, <2 x double>* %25, double* %26)
  %p113 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false109:                                         ; preds = %false101
  %return115 = call i64 @"eq@III"(i64 %type5, i64 13)
  %318 = icmp ne i64 %return115, 0
  br i1 %318, label %true116, label %false117

true116:                                          ; preds = %false109
  %_p119 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p119, <2 x double>* %27
  %w120 = load double, double* %w
  store double %w120, double* %28
  call void @"V_JULIA@UUF"(<2 x double>* %p, <2 x double>* %27, double* %28)
  %p121 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false117:                                         ; preds = %false109
  %return123 = call i64 @"eq@III"(i64 %type5, i64 14)
  %319 = icmp ne i64 %return123, 0
  br i1 %319, label %true124, label %false125

true124:                                          ; preds = %false117
  %_p127 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p127, <2 x double>* %29
  %w128 = load double, double* %w
  store double %w128, double* %30
  call void @"V_BENT@UUF"(<2 x double>* %p, <2 x double>* %29, double* %30)
  %p129 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false125:                                         ; preds = %false117
  %return131 = call i64 @"eq@III"(i64 %type5, i64 15)
  %320 = icmp ne i64 %return131, 0
  br i1 %320, label %true132, label %false133

true132:                                          ; preds = %false125
  %_p135 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p135, <2 x double>* %31
  %w136 = load double, double* %w
  store double %w136, double* %32
  %o137 = load <2 x double>, <2 x double>* %o
  %return138 = call double @"getcomp@FUI"(<2 x double> %o137, i64 0)
  store double %return138, double* %33
  %x139 = load <2 x double>, <2 x double>* %x
  %return140 = call double @"getcomp@FUI"(<2 x double> %x139, i64 1)
  store double %return140, double* %34
  %y141 = load <2 x double>, <2 x double>* %y
  %return142 = call double @"getcomp@FUI"(<2 x double> %y141, i64 1)
  store double %return142, double* %35
  %o143 = load <2 x double>, <2 x double>* %o
  %return144 = call double @"getcomp@FUI"(<2 x double> %o143, i64 1)
  store double %return144, double* %36
  call void @"V_WAVES@UUFFFFF"(<2 x double>* %p, <2 x double>* %31, double* %32, double* %33, double* %34, double* %35, double* %36)
  %p145 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false133:                                         ; preds = %false125
  %return147 = call i64 @"eq@III"(i64 %type5, i64 16)
  %321 = icmp ne i64 %return147, 0
  br i1 %321, label %true148, label %false149

true148:                                          ; preds = %false133
  %_p151 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p151, <2 x double>* %37
  %w152 = load double, double* %w
  store double %w152, double* %38
  call void @"V_FISHEYE@UUF"(<2 x double>* %p, <2 x double>* %37, double* %38)
  %p153 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false149:                                         ; preds = %false133
  %return155 = call i64 @"eq@III"(i64 %type5, i64 17)
  %322 = icmp ne i64 %return155, 0
  br i1 %322, label %true156, label %end12

true156:                                          ; preds = %false149
  %_p158 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p158, <2 x double>* %39
  %w159 = load double, double* %w
  store double %w159, double* %40
  %o160 = load <2 x double>, <2 x double>* %o
  %return161 = call double @"getcomp@FUI"(<2 x double> %o160, i64 0)
  store double %return161, double* %41
  %o162 = load <2 x double>, <2 x double>* %o
  %return163 = call double @"getcomp@FUI"(<2 x double> %o162, i64 1)
  store double %return163, double* %42
  call void @"V_POPCORN@UUFFF"(<2 x double>* %p, <2 x double>* %39, double* %40, double* %41, double* %42)
  %p164 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true167:                                          ; preds = %false16
  %_p170 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p170, <2 x double>* %43
  %w171 = load double, double* %w
  store double %w171, double* %44
  call void @"V_EXPONENTIAL@UUF"(<2 x double>* %p, <2 x double>* %43, double* %44)
  %p172 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false168:                                         ; preds = %false16
  %return174 = call i64 @"eq@III"(i64 %type5, i64 19)
  %323 = icmp ne i64 %return174, 0
  br i1 %323, label %true175, label %false176

true175:                                          ; preds = %false168
  %_p178 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p178, <2 x double>* %45
  %w179 = load double, double* %w
  store double %w179, double* %46
  call void @"V_POWER@UUF"(<2 x double>* %p, <2 x double>* %45, double* %46)
  %p180 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false176:                                         ; preds = %false168
  %return182 = call i64 @"eq@III"(i64 %type5, i64 20)
  %324 = icmp ne i64 %return182, 0
  br i1 %324, label %true183, label %false184

true183:                                          ; preds = %false176
  %_p186 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p186, <2 x double>* %47
  %w187 = load double, double* %w
  store double %w187, double* %48
  call void @"V_COSINE@UUF"(<2 x double>* %p, <2 x double>* %47, double* %48)
  %p188 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false184:                                         ; preds = %false176
  %return190 = call i64 @"eq@III"(i64 %type5, i64 21)
  %325 = icmp ne i64 %return190, 0
  br i1 %325, label %true191, label %false192

true191:                                          ; preds = %false184
  %_p194 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p194, <2 x double>* %49
  %w195 = load double, double* %w
  store double %w195, double* %50
  %o196 = load <2 x double>, <2 x double>* %o
  %return197 = call double @"getcomp@FUI"(<2 x double> %o196, i64 0)
  store double %return197, double* %51
  call void @"V_RINGS@UUFF"(<2 x double>* %p, <2 x double>* %49, double* %50, double* %51)
  %p198 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false192:                                         ; preds = %false184
  %return200 = call i64 @"eq@III"(i64 %type5, i64 22)
  %326 = icmp ne i64 %return200, 0
  br i1 %326, label %true201, label %false202

true201:                                          ; preds = %false192
  %_p204 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p204, <2 x double>* %52
  %w205 = load double, double* %w
  store double %w205, double* %53
  %o206 = load <2 x double>, <2 x double>* %o
  %return207 = call double @"getcomp@FUI"(<2 x double> %o206, i64 0)
  store double %return207, double* %54
  call void @"V_FAN@UUFF"(<2 x double>* %p, <2 x double>* %52, double* %53, double* %54)
  %p208 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false202:                                         ; preds = %false192
  %return210 = call i64 @"eq@III"(i64 %type5, i64 23)
  %327 = icmp ne i64 %return210, 0
  br i1 %327, label %true211, label %false212

true211:                                          ; preds = %false202
  %_p214 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p214, <2 x double>* %55
  %w215 = load double, double* %w
  store double %w215, double* %56
  call void @"V_BUBBLE@UUF"(<2 x double>* %p, <2 x double>* %55, double* %56)
  %p216 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false212:                                         ; preds = %false202
  %return218 = call i64 @"eq@III"(i64 %type5, i64 24)
  %328 = icmp ne i64 %return218, 0
  br i1 %328, label %true219, label %false220

true219:                                          ; preds = %false212
  %_p222 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p222, <2 x double>* %57
  %w223 = load double, double* %w
  store double %w223, double* %58
  call void @"V_CYLINDER@UUF"(<2 x double>* %p, <2 x double>* %57, double* %58)
  %p224 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false220:                                         ; preds = %false212
  %return226 = call i64 @"eq@III"(i64 %type5, i64 25)
  %329 = icmp ne i64 %return226, 0
  br i1 %329, label %true227, label %false228

true227:                                          ; preds = %false220
  %_p230 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p230, <2 x double>* %59
  %w231 = load double, double* %w
  store double %w231, double* %60
  call void @"V_EYEFISH@UUF"(<2 x double>* %p, <2 x double>* %59, double* %60)
  %p232 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false228:                                         ; preds = %false220
  %return234 = call i64 @"eq@III"(i64 %type5, i64 26)
  %330 = icmp ne i64 %return234, 0
  br i1 %330, label %true235, label %false236

true235:                                          ; preds = %false228
  %w238 = load double, double* %w
  store double %w238, double* %61
  call void @"V_BLUR@UF"(<2 x double>* %p, double* %61)
  %p239 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false236:                                         ; preds = %false228
  %return241 = call i64 @"eq@III"(i64 %type5, i64 27)
  %331 = icmp ne i64 %return241, 0
  br i1 %331, label %true242, label %false243

true242:                                          ; preds = %false236
  %GMP245 = load %gemPrm, %gemPrm* %GMP
  %curl_c246 = extractvalue %gemPrm %GMP245, 13
  %idx247 = load i64, i64* %idx
  %return248 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %curl_c246, i64 %idx247)
  %_p249 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p249, <2 x double>* %62
  %w250 = load double, double* %w
  store double %w250, double* %63
  %return252 = call double @"getcomp@FUI"(<2 x double> %return248, i64 0)
  store double %return252, double* %64
  %return254 = call double @"getcomp@FUI"(<2 x double> %return248, i64 1)
  store double %return254, double* %65
  call void @"V_CURL@UUFFF"(<2 x double>* %p, <2 x double>* %62, double* %63, double* %64, double* %65)
  %p255 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false243:                                         ; preds = %false236
  %return257 = call i64 @"eq@III"(i64 %type5, i64 28)
  %332 = icmp ne i64 %return257, 0
  br i1 %332, label %true258, label %false259

true258:                                          ; preds = %false243
  %GMP261 = load %gemPrm, %gemPrm* %GMP
  %ngon262 = extractvalue %gemPrm %GMP261, 42
  %idx263 = load i64, i64* %idx
  %return264 = call <4 x double> @"getcomp@P[PI"(<4 x double>* %ngon262, i64 %idx263)
  %_p265 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p265, <2 x double>* %66
  %w266 = load double, double* %w
  store double %w266, double* %67
  %return268 = call double @"getcomp@FPI"(<4 x double> %return264, i64 0)
  store double %return268, double* %68
  %return270 = call double @"getcomp@FPI"(<4 x double> %return264, i64 1)
  store double %return270, double* %69
  %return272 = call double @"getcomp@FPI"(<4 x double> %return264, i64 2)
  store double %return272, double* %70
  %return274 = call double @"getcomp@FPI"(<4 x double> %return264, i64 3)
  store double %return274, double* %71
  call void @"V_NGON@UUFFFFF"(<2 x double>* %p, <2 x double>* %66, double* %67, double* %68, double* %69, double* %70, double* %71)
  %p275 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false259:                                         ; preds = %false243
  %return277 = call i64 @"eq@III"(i64 %type5, i64 29)
  %333 = icmp ne i64 %return277, 0
  br i1 %333, label %true278, label %false279

true278:                                          ; preds = %false259
  %GMP281 = load %gemPrm, %gemPrm* %GMP
  %pdj_w = extractvalue %gemPrm %GMP281, 43
  %idx282 = load i64, i64* %idx
  %return283 = call <4 x double> @"getcomp@P[PI"(<4 x double>* %pdj_w, i64 %idx282)
  %_p284 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p284, <2 x double>* %72
  %w285 = load double, double* %w
  store double %w285, double* %73
  store <4 x double> %return283, <4 x double>* %74
  call void @"V_PDJ@UUFP"(<2 x double>* %p, <2 x double>* %72, double* %73, <4 x double>* %74)
  %p287 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false279:                                         ; preds = %false259
  %return289 = call i64 @"eq@III"(i64 %type5, i64 30)
  %334 = icmp ne i64 %return289, 0
  br i1 %334, label %true290, label %false291

true290:                                          ; preds = %false279
  %GMP293 = load %gemPrm, %gemPrm* %GMP
  %blob294 = extractvalue %gemPrm %GMP293, 6
  %idx295 = load i64, i64* %idx
  %return296 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %blob294, i64 %idx295)
  %_p297 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p297, <2 x double>* %75
  %w298 = load double, double* %w
  store double %w298, double* %76
  %return300 = call double @"getcomp@FVI"(<3 x double> %return296, i64 1)
  store double %return300, double* %77
  %return302 = call double @"getcomp@FVI"(<3 x double> %return296, i64 0)
  store double %return302, double* %78
  %return304 = call double @"getcomp@FVI"(<3 x double> %return296, i64 2)
  store double %return304, double* %79
  call void @"V_BLOB@UUFFFF"(<2 x double>* %p, <2 x double>* %75, double* %76, double* %77, double* %78, double* %79)
  %p305 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false291:                                         ; preds = %false279
  %return307 = call i64 @"eq@III"(i64 %type5, i64 31)
  %335 = icmp ne i64 %return307, 0
  br i1 %335, label %true308, label %false309

true308:                                          ; preds = %false291
  %GMP311 = load %gemPrm, %gemPrm* %GMP
  %julian312 = extractvalue %gemPrm %GMP311, 32
  %idx313 = load i64, i64* %idx
  %return314 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %julian312, i64 %idx313)
  %_p315 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p315, <2 x double>* %80
  %w316 = load double, double* %w
  store double %w316, double* %81
  %return318 = call double @"getcomp@FUI"(<2 x double> %return314, i64 0)
  store double %return318, double* %82
  %return320 = call double @"getcomp@FUI"(<2 x double> %return314, i64 1)
  store double %return320, double* %83
  call void @"V_JULIAN@UUFFF"(<2 x double>* %p, <2 x double>* %80, double* %81, double* %82, double* %83)
  %p321 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false309:                                         ; preds = %false291
  %return323 = call i64 @"eq@III"(i64 %type5, i64 32)
  %336 = icmp ne i64 %return323, 0
  br i1 %336, label %true324, label %false325

true324:                                          ; preds = %false309
  %GMP327 = load %gemPrm, %gemPrm* %GMP
  %juliascope328 = extractvalue %gemPrm %GMP327, 33
  %idx329 = load i64, i64* %idx
  %return330 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %juliascope328, i64 %idx329)
  %_p331 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p331, <2 x double>* %84
  %w332 = load double, double* %w
  store double %w332, double* %85
  %return334 = call double @"getcomp@FUI"(<2 x double> %return330, i64 0)
  store double %return334, double* %86
  %return336 = call double @"getcomp@FUI"(<2 x double> %return330, i64 1)
  store double %return336, double* %87
  call void @"V_JULIASCOPE@UUFFF"(<2 x double>* %p, <2 x double>* %84, double* %85, double* %86, double* %87)
  %p337 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false325:                                         ; preds = %false309
  %return339 = call i64 @"eq@III"(i64 %type5, i64 33)
  %337 = icmp ne i64 %return339, 0
  br i1 %337, label %true340, label %false341

true340:                                          ; preds = %false325
  %w343 = load double, double* %w
  store double %w343, double* %88
  call void @"V_GAUSSIAN@UF"(<2 x double>* %p, double* %88)
  %p344 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false341:                                         ; preds = %false325
  %return346 = call i64 @"eq@III"(i64 %type5, i64 34)
  %338 = icmp ne i64 %return346, 0
  br i1 %338, label %true347, label %end12

true347:                                          ; preds = %false341
  %GMP349 = load %gemPrm, %gemPrm* %GMP
  %fan2350 = extractvalue %gemPrm %GMP349, 15
  %idx351 = load i64, i64* %idx
  %return352 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %fan2350, i64 %idx351)
  %_p353 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p353, <2 x double>* %89
  %w354 = load double, double* %w
  store double %w354, double* %90
  store <2 x double> %return352, <2 x double>* %91
  call void @"V_FAN2@UUFU"(<2 x double>* %p, <2 x double>* %89, double* %90, <2 x double>* %91)
  %p356 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true359:                                          ; preds = %false11
  %return363 = call i64 @"lt@III"(i64 %type5, i64 50)
  %339 = icmp ne i64 %return363, 0
  br i1 %339, label %true364, label %false365

false360:                                         ; preds = %false11
  %return771 = call i64 @"lt@III"(i64 %type5, i64 102)
  %340 = icmp ne i64 %return771, 0
  br i1 %340, label %true772, label %end12

true364:                                          ; preds = %true359
  %return368 = call i64 @"eq@III"(i64 %type5, i64 35)
  %341 = icmp ne i64 %return368, 0
  br i1 %341, label %true369, label %false370

false365:                                         ; preds = %true359
  %return539 = call i64 @"eq@III"(i64 %type5, i64 50)
  %342 = icmp ne i64 %return539, 0
  br i1 %342, label %true540, label %false541

true369:                                          ; preds = %true364
  %GMP372 = load %gemPrm, %gemPrm* %GMP
  %rings2_val = extractvalue %gemPrm %GMP372, 0
  %idx373 = load i64, i64* %idx
  %return374 = call double @"getcomp@F[FI"(double* %rings2_val, i64 %idx373)
  %_p375 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p375, <2 x double>* %92
  %w376 = load double, double* %w
  store double %w376, double* %93
  store double %return374, double* %94
  call void @"V_RINGS2@UUFF"(<2 x double>* %p, <2 x double>* %92, double* %93, double* %94)
  %p378 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false370:                                         ; preds = %true364
  %return380 = call i64 @"eq@III"(i64 %type5, i64 36)
  %343 = icmp ne i64 %return380, 0
  br i1 %343, label %true381, label %false382

true381:                                          ; preds = %false370
  %GMP384 = load %gemPrm, %gemPrm* %GMP
  %rectangles = extractvalue %gemPrm %GMP384, 16
  %idx385 = load i64, i64* %idx
  %return386 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %rectangles, i64 %idx385)
  %_p387 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p387, <2 x double>* %95
  %w388 = load double, double* %w
  store double %w388, double* %96
  store <2 x double> %return386, <2 x double>* %97
  call void @"V_RECTANGLES@UUFU"(<2 x double>* %p, <2 x double>* %95, double* %96, <2 x double>* %97)
  %p390 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false382:                                         ; preds = %false370
  %return392 = call i64 @"eq@III"(i64 %type5, i64 37)
  %344 = icmp ne i64 %return392, 0
  br i1 %344, label %true393, label %false394

true393:                                          ; preds = %false382
  %GMP396 = load %gemPrm, %gemPrm* %GMP
  %radialblur397 = extractvalue %gemPrm %GMP396, 34
  %idx398 = load i64, i64* %idx
  %return399 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %radialblur397, i64 %idx398)
  %_p400 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p400, <2 x double>* %98
  %w401 = load double, double* %w
  store double %w401, double* %99
  %return403 = call double @"getcomp@FUI"(<2 x double> %return399, i64 0)
  store double %return403, double* %100
  %return405 = call double @"getcomp@FUI"(<2 x double> %return399, i64 1)
  store double %return405, double* %101
  call void @"V_RADIALBLUR@UUFFF"(<2 x double>* %p, <2 x double>* %98, double* %99, double* %100, double* %101)
  %p406 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false394:                                         ; preds = %false382
  %return408 = call i64 @"eq@III"(i64 %type5, i64 38)
  %345 = icmp ne i64 %return408, 0
  br i1 %345, label %true409, label %false410

true409:                                          ; preds = %false394
  %GMP412 = load %gemPrm, %gemPrm* %GMP
  %pie413 = extractvalue %gemPrm %GMP412, 7
  %idx414 = load i64, i64* %idx
  %return415 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %pie413, i64 %idx414)
  %w416 = load double, double* %w
  store double %w416, double* %102
  %return418 = call double @"getcomp@FVI"(<3 x double> %return415, i64 0)
  store double %return418, double* %103
  %return420 = call double @"getcomp@FVI"(<3 x double> %return415, i64 1)
  store double %return420, double* %104
  %return422 = call double @"getcomp@FVI"(<3 x double> %return415, i64 2)
  store double %return422, double* %105
  call void @"V_PIE@UFFFF"(<2 x double>* %p, double* %102, double* %103, double* %104, double* %105)
  %p423 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false410:                                         ; preds = %false394
  %return425 = call i64 @"eq@III"(i64 %type5, i64 39)
  %346 = icmp ne i64 %return425, 0
  br i1 %346, label %true426, label %false427

true426:                                          ; preds = %false410
  %w429 = load double, double* %w
  store double %w429, double* %107
  call void @"V_ARCH@UUF"(<2 x double>* %p, <2 x double>* %106, double* %107)
  %p430 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false427:                                         ; preds = %false410
  %return432 = call i64 @"eq@III"(i64 %type5, i64 40)
  %347 = icmp ne i64 %return432, 0
  br i1 %347, label %true433, label %false434

true433:                                          ; preds = %false427
  %_p436 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p436, <2 x double>* %108
  %w437 = load double, double* %w
  store double %w437, double* %109
  call void @"V_TANGENT@UUF"(<2 x double>* %p, <2 x double>* %108, double* %109)
  %p438 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false434:                                         ; preds = %false427
  %return440 = call i64 @"eq@III"(i64 %type5, i64 41)
  %348 = icmp ne i64 %return440, 0
  br i1 %348, label %true441, label %false442

true441:                                          ; preds = %false434
  %w444 = load double, double* %w
  store double %w444, double* %111
  call void @"V_SQUARE@UUF"(<2 x double>* %p, <2 x double>* %110, double* %111)
  %p445 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false442:                                         ; preds = %false434
  %return447 = call i64 @"eq@III"(i64 %type5, i64 42)
  %349 = icmp ne i64 %return447, 0
  br i1 %349, label %true448, label %false449

true448:                                          ; preds = %false442
  %_p451 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p451, <2 x double>* %112
  %w452 = load double, double* %w
  store double %w452, double* %113
  call void @"V_RAYS@UUF"(<2 x double>* %p, <2 x double>* %112, double* %113)
  %p453 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false449:                                         ; preds = %false442
  %return455 = call i64 @"eq@III"(i64 %type5, i64 43)
  %350 = icmp ne i64 %return455, 0
  br i1 %350, label %true456, label %false457

true456:                                          ; preds = %false449
  %_p459 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p459, <2 x double>* %114
  %w460 = load double, double* %w
  store double %w460, double* %115
  call void @"V_BLADE@UUF"(<2 x double>* %p, <2 x double>* %114, double* %115)
  %p461 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false457:                                         ; preds = %false449
  %return463 = call i64 @"eq@III"(i64 %type5, i64 44)
  %351 = icmp ne i64 %return463, 0
  br i1 %351, label %true464, label %false465

true464:                                          ; preds = %false457
  %_p467 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p467, <2 x double>* %116
  %w468 = load double, double* %w
  store double %w468, double* %117
  call void @"V_SECANT2@UUF"(<2 x double>* %p, <2 x double>* %116, double* %117)
  %p469 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false465:                                         ; preds = %false457
  %return471 = call i64 @"eq@III"(i64 %type5, i64 45)
  %352 = icmp ne i64 %return471, 0
  br i1 %352, label %true472, label %false473

true472:                                          ; preds = %false465
  %_p475 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p475, <2 x double>* %118
  %w476 = load double, double* %w
  store double %w476, double* %119
  call void @"V_TWINTRIAN@UUF"(<2 x double>* %p, <2 x double>* %118, double* %119)
  %p477 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false473:                                         ; preds = %false465
  %return479 = call i64 @"eq@III"(i64 %type5, i64 46)
  %353 = icmp ne i64 %return479, 0
  br i1 %353, label %true480, label %false481

true480:                                          ; preds = %false473
  %_p483 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p483, <2 x double>* %120
  %w484 = load double, double* %w
  store double %w484, double* %121
  call void @"V_CROSS@UUF"(<2 x double>* %p, <2 x double>* %120, double* %121)
  %p485 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false481:                                         ; preds = %false473
  %return487 = call i64 @"eq@III"(i64 %type5, i64 47)
  %354 = icmp ne i64 %return487, 0
  br i1 %354, label %true488, label %false489

true488:                                          ; preds = %false481
  %GMP491 = load %gemPrm, %gemPrm* %GMP
  %disc2492 = extractvalue %gemPrm %GMP491, 35
  %idx493 = load i64, i64* %idx
  %return494 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %disc2492, i64 %idx493)
  %_p495 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p495, <2 x double>* %122
  %w496 = load double, double* %w
  store double %w496, double* %123
  %return498 = call double @"getcomp@FUI"(<2 x double> %return494, i64 0)
  store double %return498, double* %124
  %return500 = call double @"getcomp@FUI"(<2 x double> %return494, i64 1)
  store double %return500, double* %125
  call void @"V_DISC2@UUFFF"(<2 x double>* %p, <2 x double>* %122, double* %123, double* %124, double* %125)
  %p501 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false489:                                         ; preds = %false481
  %return503 = call i64 @"eq@III"(i64 %type5, i64 48)
  %355 = icmp ne i64 %return503, 0
  br i1 %355, label %true504, label %false505

true504:                                          ; preds = %false489
  %GMP507 = load %gemPrm, %gemPrm* %GMP
  %supershape = extractvalue %gemPrm %GMP507, 8
  %idx508 = load i64, i64* %idx
  %return509 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %supershape, i64 %idx508)
  %supershape_n = extractvalue %gemPrm %GMP507, 9
  %return512 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %supershape_n, i64 %idx508)
  %_p513 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p513, <2 x double>* %126
  %w514 = load double, double* %w
  store double %w514, double* %127
  %return516 = call double @"getcomp@FVI"(<3 x double> %return509, i64 1)
  store double %return516, double* %128
  %return518 = call double @"getcomp@FVI"(<3 x double> %return509, i64 0)
  store double %return518, double* %129
  %return520 = call double @"getcomp@FVI"(<3 x double> %return509, i64 2)
  store double %return520, double* %130
  store <3 x double> %return512, <3 x double>* %131
  call void @"V_SUPERSHAPE@UUFFFFV"(<2 x double>* %p, <2 x double>* %126, double* %127, double* %128, double* %129, double* %130, <3 x double>* %131)
  %p522 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false505:                                         ; preds = %false489
  %return524 = call i64 @"eq@III"(i64 %type5, i64 49)
  %356 = icmp ne i64 %return524, 0
  br i1 %356, label %true525, label %end12

true525:                                          ; preds = %false505
  %GMP527 = load %gemPrm, %gemPrm* %GMP
  %flower528 = extractvalue %gemPrm %GMP527, 36
  %idx529 = load i64, i64* %idx
  %return530 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %flower528, i64 %idx529)
  %_p531 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p531, <2 x double>* %132
  %w532 = load double, double* %w
  store double %w532, double* %133
  %return534 = call double @"getcomp@FUI"(<2 x double> %return530, i64 0)
  store double %return534, double* %134
  %return536 = call double @"getcomp@FUI"(<2 x double> %return530, i64 1)
  store double %return536, double* %135
  call void @"V_FLOWER@UUFFF"(<2 x double>* %p, <2 x double>* %132, double* %133, double* %134, double* %135)
  %p537 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true540:                                          ; preds = %false365
  %GMP543 = load %gemPrm, %gemPrm* %GMP
  %conic544 = extractvalue %gemPrm %GMP543, 37
  %idx545 = load i64, i64* %idx
  %return546 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %conic544, i64 %idx545)
  %_p547 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p547, <2 x double>* %136
  %w548 = load double, double* %w
  store double %w548, double* %137
  %return550 = call double @"getcomp@FUI"(<2 x double> %return546, i64 0)
  store double %return550, double* %138
  %return552 = call double @"getcomp@FUI"(<2 x double> %return546, i64 1)
  store double %return552, double* %139
  call void @"V_CONIC@UUFFF"(<2 x double>* %p, <2 x double>* %136, double* %137, double* %138, double* %139)
  %p553 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false541:                                         ; preds = %false365
  %return555 = call i64 @"eq@III"(i64 %type5, i64 51)
  %357 = icmp ne i64 %return555, 0
  br i1 %357, label %true556, label %false557

true556:                                          ; preds = %false541
  %GMP559 = load %gemPrm, %gemPrm* %GMP
  %parabola560 = extractvalue %gemPrm %GMP559, 14
  %idx561 = load i64, i64* %idx
  %return562 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %parabola560, i64 %idx561)
  %_p563 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p563, <2 x double>* %140
  %w564 = load double, double* %w
  store double %w564, double* %141
  %return566 = call double @"getcomp@FUI"(<2 x double> %return562, i64 0)
  store double %return566, double* %142
  %return568 = call double @"getcomp@FUI"(<2 x double> %return562, i64 1)
  store double %return568, double* %143
  call void @"V_PARABOLA@UUFFF"(<2 x double>* %p, <2 x double>* %140, double* %141, double* %142, double* %143)
  %p569 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false557:                                         ; preds = %false541
  %return571 = call i64 @"eq@III"(i64 %type5, i64 52)
  %358 = icmp ne i64 %return571, 0
  br i1 %358, label %true572, label %false573

true572:                                          ; preds = %false557
  %GMP575 = load %gemPrm, %gemPrm* %GMP
  %bent2576 = extractvalue %gemPrm %GMP575, 17
  %idx577 = load i64, i64* %idx
  %return578 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %bent2576, i64 %idx577)
  %_p579 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p579, <2 x double>* %144
  %w580 = load double, double* %w
  store double %w580, double* %145
  store <2 x double> %return578, <2 x double>* %146
  call void @"V_BENT2@UUFU"(<2 x double>* %p, <2 x double>* %144, double* %145, <2 x double>* %146)
  %p582 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false573:                                         ; preds = %false557
  %return584 = call i64 @"eq@III"(i64 %type5, i64 53)
  %359 = icmp ne i64 %return584, 0
  br i1 %359, label %true585, label %false586

true585:                                          ; preds = %false573
  %GMP588 = load %gemPrm, %gemPrm* %GMP
  %bipolar_shift = extractvalue %gemPrm %GMP588, 1
  %idx589 = load i64, i64* %idx
  %return590 = call double @"getcomp@F[FI"(double* %bipolar_shift, i64 %idx589)
  %_p591 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p591, <2 x double>* %147
  %w592 = load double, double* %w
  store double %w592, double* %148
  store double %return590, double* %149
  call void @"V_BIPOLAR@UUFF"(<2 x double>* %p, <2 x double>* %147, double* %148, double* %149)
  %p594 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false586:                                         ; preds = %false573
  %return596 = call i64 @"eq@III"(i64 %type5, i64 54)
  %360 = icmp ne i64 %return596, 0
  br i1 %360, label %true597, label %false598

true597:                                          ; preds = %false586
  %_p600 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p600, <2 x double>* %150
  %w601 = load double, double* %w
  store double %w601, double* %151
  call void @"V_BOARDERS@UUF"(<2 x double>* %p, <2 x double>* %150, double* %151)
  %p602 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false598:                                         ; preds = %false586
  %return604 = call i64 @"eq@III"(i64 %type5, i64 55)
  %361 = icmp ne i64 %return604, 0
  br i1 %361, label %true605, label %false606

true605:                                          ; preds = %false598
  %_p608 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p608, <2 x double>* %152
  %w609 = load double, double* %w
  store double %w609, double* %153
  call void @"V_BUTTERFLY@UUF"(<2 x double>* %p, <2 x double>* %152, double* %153)
  %p610 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false606:                                         ; preds = %false598
  %return612 = call i64 @"eq@III"(i64 %type5, i64 56)
  %362 = icmp ne i64 %return612, 0
  br i1 %362, label %true613, label %false614

true613:                                          ; preds = %false606
  %GMP616 = load %gemPrm, %gemPrm* %GMP
  %cell_size = extractvalue %gemPrm %GMP616, 2
  %idx617 = load i64, i64* %idx
  %return618 = call double @"getcomp@F[FI"(double* %cell_size, i64 %idx617)
  %_p619 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p619, <2 x double>* %154
  store double %return618, double* %156
  call void @"V_CELL@UUFF"(<2 x double>* %p, <2 x double>* %154, double* %155, double* %156)
  %p621 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false614:                                         ; preds = %false606
  %return623 = call i64 @"eq@III"(i64 %type5, i64 57)
  %363 = icmp ne i64 %return623, 0
  br i1 %363, label %true624, label %false625

true624:                                          ; preds = %false614
  %GMP627 = load %gemPrm, %gemPrm* %GMP
  %cpow628 = extractvalue %gemPrm %GMP627, 10
  %idx629 = load i64, i64* %idx
  %return630 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %cpow628, i64 %idx629)
  %_p631 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p631, <2 x double>* %157
  %w632 = load double, double* %w
  store double %w632, double* %158
  %return634 = call double @"getcomp@FVI"(<3 x double> %return630, i64 0)
  store double %return634, double* %159
  %return636 = call double @"getcomp@FVI"(<3 x double> %return630, i64 1)
  store double %return636, double* %160
  %return638 = call double @"getcomp@FVI"(<3 x double> %return630, i64 2)
  store double %return638, double* %161
  call void @"V_CPOW@UUFFFF"(<2 x double>* %p, <2 x double>* %157, double* %158, double* %159, double* %160, double* %161)
  %p639 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false625:                                         ; preds = %false614
  %return641 = call i64 @"eq@III"(i64 %type5, i64 58)
  %364 = icmp ne i64 %return641, 0
  br i1 %364, label %true642, label %false643

true642:                                          ; preds = %false625
  %_p645 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p645, <2 x double>* %162
  %w646 = load double, double* %w
  store double %w646, double* %163
  call void @"V_EDISC@UUF"(<2 x double>* %p, <2 x double>* %162, double* %163)
  %p647 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false643:                                         ; preds = %false625
  %return649 = call i64 @"eq@III"(i64 %type5, i64 59)
  %365 = icmp ne i64 %return649, 0
  br i1 %365, label %true650, label %false651

true650:                                          ; preds = %false643
  %_p653 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p653, <2 x double>* %164
  %w654 = load double, double* %w
  store double %w654, double* %165
  call void @"V_ELLIPTIC@UUF"(<2 x double>* %p, <2 x double>* %164, double* %165)
  %p655 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false651:                                         ; preds = %false643
  %return657 = call i64 @"eq@III"(i64 %type5, i64 60)
  %366 = icmp ne i64 %return657, 0
  br i1 %366, label %true658, label %false659

true658:                                          ; preds = %false651
  %_p661 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p661, <2 x double>* %166
  %w662 = load double, double* %w
  store double %w662, double* %167
  call void @"V_NOISE@UUF"(<2 x double>* %p, <2 x double>* %166, double* %167)
  %p663 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false659:                                         ; preds = %false651
  %return665 = call i64 @"eq@III"(i64 %type5, i64 61)
  %367 = icmp ne i64 %return665, 0
  br i1 %367, label %true666, label %false667

true666:                                          ; preds = %false659
  %GMP669 = load %gemPrm, %gemPrm* %GMP
  %escher_beta = extractvalue %gemPrm %GMP669, 3
  %idx670 = load i64, i64* %idx
  %return671 = call double @"getcomp@F[FI"(double* %escher_beta, i64 %idx670)
  %_p672 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p672, <2 x double>* %168
  %w673 = load double, double* %w
  store double %w673, double* %169
  store double %return671, double* %170
  call void @"V_ESCHER@UUFF"(<2 x double>* %p, <2 x double>* %168, double* %169, double* %170)
  %p675 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false667:                                         ; preds = %false659
  %return677 = call i64 @"eq@III"(i64 %type5, i64 62)
  %368 = icmp ne i64 %return677, 0
  br i1 %368, label %true678, label %false679

true678:                                          ; preds = %false667
  %_p681 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p681, <2 x double>* %171
  %w682 = load double, double* %w
  store double %w682, double* %172
  call void @"V_FOCI@UUF"(<2 x double>* %p, <2 x double>* %171, double* %172)
  %p683 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false679:                                         ; preds = %false667
  %return685 = call i64 @"eq@III"(i64 %type5, i64 63)
  %369 = icmp ne i64 %return685, 0
  br i1 %369, label %true686, label %false687

true686:                                          ; preds = %false679
  %GMP689 = load %gemPrm, %gemPrm* %GMP
  %lazysusan690 = extractvalue %gemPrm %GMP689, 11
  %idx691 = load i64, i64* %idx
  %return692 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %lazysusan690, i64 %idx691)
  %lazysusanxyz694 = extractvalue %gemPrm %GMP689, 18
  %return696 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %lazysusanxyz694, i64 %idx691)
  %_p697 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p697, <2 x double>* %173
  %w698 = load double, double* %w
  store double %w698, double* %174
  %return700 = call double @"getcomp@FVI"(<3 x double> %return692, i64 0)
  store double %return700, double* %175
  %return702 = call double @"getcomp@FVI"(<3 x double> %return692, i64 1)
  store double %return702, double* %176
  %return704 = call double @"getcomp@FVI"(<3 x double> %return692, i64 2)
  store double %return704, double* %177
  store <2 x double> %return696, <2 x double>* %178
  call void @"V_LAZYSUSAN@UUFFFFU"(<2 x double>* %p, <2 x double>* %173, double* %174, double* %175, double* %176, double* %177, <2 x double>* %178)
  %p706 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false687:                                         ; preds = %false679
  %return708 = call i64 @"eq@III"(i64 %type5, i64 64)
  %370 = icmp ne i64 %return708, 0
  br i1 %370, label %true709, label %false710

true709:                                          ; preds = %false687
  %_p712 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p712, <2 x double>* %179
  %w713 = load double, double* %w
  store double %w713, double* %180
  call void @"V_LOONIE@UUF"(<2 x double>* %p, <2 x double>* %179, double* %180)
  %p714 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false710:                                         ; preds = %false687
  %return716 = call i64 @"eq@III"(i64 %type5, i64 66)
  %371 = icmp ne i64 %return716, 0
  br i1 %371, label %true717, label %false718

true717:                                          ; preds = %false710
  %GMP720 = load %gemPrm, %gemPrm* %GMP
  %modulus = extractvalue %gemPrm %GMP720, 19
  %idx721 = load i64, i64* %idx
  %return722 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %modulus, i64 %idx721)
  %_p723 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p723, <2 x double>* %181
  %w724 = load double, double* %w
  store double %w724, double* %182
  store <2 x double> %return722, <2 x double>* %183
  call void @"V_MODULUS@UUFU"(<2 x double>* %p, <2 x double>* %181, double* %182, <2 x double>* %183)
  %p726 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false718:                                         ; preds = %false710
  %return728 = call i64 @"eq@III"(i64 %type5, i64 67)
  %372 = icmp ne i64 %return728, 0
  br i1 %372, label %true729, label %false730

true729:                                          ; preds = %false718
  %GMP732 = load %gemPrm, %gemPrm* %GMP
  %oscope733 = extractvalue %gemPrm %GMP732, 44
  %idx734 = load i64, i64* %idx
  %return735 = call <4 x double> @"getcomp@P[PI"(<4 x double>* %oscope733, i64 %idx734)
  %_p736 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p736, <2 x double>* %184
  %w737 = load double, double* %w
  store double %w737, double* %185
  %return739 = call double @"getcomp@FPI"(<4 x double> %return735, i64 0)
  store double %return739, double* %186
  %return741 = call double @"getcomp@FPI"(<4 x double> %return735, i64 1)
  store double %return741, double* %187
  %return743 = call double @"getcomp@FPI"(<4 x double> %return735, i64 2)
  store double %return743, double* %188
  %return745 = call double @"getcomp@FPI"(<4 x double> %return735, i64 3)
  store double %return745, double* %189
  call void @"V_OSCOPE@UUFFFFF"(<2 x double>* %p, <2 x double>* %184, double* %185, double* %186, double* %187, double* %188, double* %189)
  %p746 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false730:                                         ; preds = %false718
  %return748 = call i64 @"eq@III"(i64 %type5, i64 68)
  %373 = icmp ne i64 %return748, 0
  br i1 %373, label %true749, label %false750

true749:                                          ; preds = %false730
  %_p752 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p752, <2 x double>* %190
  %w753 = load double, double* %w
  store double %w753, double* %191
  call void @"V_POLAR2@UUF"(<2 x double>* %p, <2 x double>* %190, double* %191)
  %p754 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false750:                                         ; preds = %false730
  %return756 = call i64 @"eq@III"(i64 %type5, i64 69)
  %374 = icmp ne i64 %return756, 0
  br i1 %374, label %true757, label %end12

true757:                                          ; preds = %false750
  %GMP759 = load %gemPrm, %gemPrm* %GMP
  %popcorn2_c = extractvalue %gemPrm %GMP759, 4
  %idx760 = load i64, i64* %idx
  %return761 = call double @"getcomp@F[FI"(double* %popcorn2_c, i64 %idx760)
  %popcorn2 = extractvalue %gemPrm %GMP759, 20
  %return764 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %popcorn2, i64 %idx760)
  %_p765 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p765, <2 x double>* %192
  %w766 = load double, double* %w
  store double %w766, double* %193
  store double %return761, double* %194
  store <2 x double> %return764, <2 x double>* %195
  call void @"V_POPCORN2@UUFFU"(<2 x double>* %p, <2 x double>* %192, double* %193, double* %194, <2 x double>* %195)
  %p769 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true772:                                          ; preds = %false360
  %return775 = call i64 @"lt@III"(i64 %type5, i64 86)
  %375 = icmp ne i64 %return775, 0
  br i1 %375, label %true776, label %false777

true776:                                          ; preds = %true772
  %return780 = call i64 @"eq@III"(i64 %type5, i64 70)
  %376 = icmp ne i64 %return780, 0
  br i1 %376, label %true781, label %false782

false777:                                         ; preds = %true772
  %return985 = call i64 @"eq@III"(i64 %type5, i64 86)
  %377 = icmp ne i64 %return985, 0
  br i1 %377, label %true986, label %false987

true781:                                          ; preds = %true776
  %_p784 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p784, <2 x double>* %196
  %w785 = load double, double* %w
  store double %w785, double* %197
  call void @"V_SCRY@UUF"(<2 x double>* %p, <2 x double>* %196, double* %197)
  %p786 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false782:                                         ; preds = %true776
  %return788 = call i64 @"eq@III"(i64 %type5, i64 71)
  %378 = icmp ne i64 %return788, 0
  br i1 %378, label %true789, label %false790

true789:                                          ; preds = %false782
  %GMP792 = load %gemPrm, %gemPrm* %GMP
  %separation = extractvalue %gemPrm %GMP792, 21
  %idx793 = load i64, i64* %idx
  %return794 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %separation, i64 %idx793)
  %separation_inside = extractvalue %gemPrm %GMP792, 22
  %return797 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %separation_inside, i64 %idx793)
  %_p798 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p798, <2 x double>* %198
  %w799 = load double, double* %w
  store double %w799, double* %199
  store <2 x double> %return794, <2 x double>* %200
  store <2 x double> %return797, <2 x double>* %201
  call void @"V_SEPARATION@UUFUU"(<2 x double>* %p, <2 x double>* %198, double* %199, <2 x double>* %200, <2 x double>* %201)
  %p802 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false790:                                         ; preds = %false782
  %return804 = call i64 @"eq@III"(i64 %type5, i64 72)
  %379 = icmp ne i64 %return804, 0
  br i1 %379, label %true805, label %false806

true805:                                          ; preds = %false790
  %GMP808 = load %gemPrm, %gemPrm* %GMP
  %split809 = extractvalue %gemPrm %GMP808, 23
  %idx810 = load i64, i64* %idx
  %return811 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %split809, i64 %idx810)
  %_p812 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p812, <2 x double>* %202
  %w813 = load double, double* %w
  store double %w813, double* %203
  store <2 x double> %return811, <2 x double>* %204
  call void @"V_SPLIT@UUFU"(<2 x double>* %p, <2 x double>* %202, double* %203, <2 x double>* %204)
  %p815 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false806:                                         ; preds = %false790
  %return817 = call i64 @"eq@III"(i64 %type5, i64 73)
  %380 = icmp ne i64 %return817, 0
  br i1 %380, label %true818, label %false819

true818:                                          ; preds = %false806
  %GMP821 = load %gemPrm, %gemPrm* %GMP
  %splits822 = extractvalue %gemPrm %GMP821, 24
  %idx823 = load i64, i64* %idx
  %return824 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %splits822, i64 %idx823)
  %_p825 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p825, <2 x double>* %205
  %w826 = load double, double* %w
  store double %w826, double* %206
  store <2 x double> %return824, <2 x double>* %207
  call void @"V_SPLITS@UUFU"(<2 x double>* %p, <2 x double>* %205, double* %206, <2 x double>* %207)
  %p828 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false819:                                         ; preds = %false806
  %return830 = call i64 @"eq@III"(i64 %type5, i64 74)
  %381 = icmp ne i64 %return830, 0
  br i1 %381, label %true831, label %false832

true831:                                          ; preds = %false819
  %GMP834 = load %gemPrm, %gemPrm* %GMP
  %stripes835 = extractvalue %gemPrm %GMP834, 38
  %idx836 = load i64, i64* %idx
  %return837 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %stripes835, i64 %idx836)
  %_p838 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p838, <2 x double>* %208
  %w839 = load double, double* %w
  store double %w839, double* %209
  %return841 = call double @"getcomp@FUI"(<2 x double> %return837, i64 0)
  store double %return841, double* %210
  %return843 = call double @"getcomp@FUI"(<2 x double> %return837, i64 1)
  store double %return843, double* %211
  call void @"V_STRIPES@UUFFF"(<2 x double>* %p, <2 x double>* %208, double* %209, double* %210, double* %211)
  %p844 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false832:                                         ; preds = %false819
  %return846 = call i64 @"eq@III"(i64 %type5, i64 75)
  %382 = icmp ne i64 %return846, 0
  br i1 %382, label %true847, label %false848

true847:                                          ; preds = %false832
  %GMP850 = load %gemPrm, %gemPrm* %GMP
  %wedge851 = extractvalue %gemPrm %GMP850, 45
  %idx852 = load i64, i64* %idx
  %return853 = call <4 x double> @"getcomp@P[PI"(<4 x double>* %wedge851, i64 %idx852)
  %_p854 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p854, <2 x double>* %212
  %w855 = load double, double* %w
  store double %w855, double* %213
  %return857 = call double @"getcomp@FPI"(<4 x double> %return853, i64 0)
  store double %return857, double* %214
  %return859 = call double @"getcomp@FPI"(<4 x double> %return853, i64 1)
  store double %return859, double* %215
  %return861 = call double @"getcomp@FPI"(<4 x double> %return853, i64 2)
  store double %return861, double* %216
  %return863 = call double @"getcomp@FPI"(<4 x double> %return853, i64 3)
  store double %return863, double* %217
  call void @"V_WEDGE@UUFFFFF"(<2 x double>* %p, <2 x double>* %212, double* %213, double* %214, double* %215, double* %216, double* %217)
  %p864 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false848:                                         ; preds = %false832
  %return866 = call i64 @"eq@III"(i64 %type5, i64 76)
  %383 = icmp ne i64 %return866, 0
  br i1 %383, label %true867, label %false868

true867:                                          ; preds = %false848
  %GMP870 = load %gemPrm, %gemPrm* %GMP
  %wedgejulia871 = extractvalue %gemPrm %GMP870, 46
  %idx872 = load i64, i64* %idx
  %return873 = call <4 x double> @"getcomp@P[PI"(<4 x double>* %wedgejulia871, i64 %idx872)
  %_p874 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p874, <2 x double>* %218
  %w875 = load double, double* %w
  store double %w875, double* %219
  %return877 = call double @"getcomp@FPI"(<4 x double> %return873, i64 0)
  store double %return877, double* %220
  %return879 = call double @"getcomp@FPI"(<4 x double> %return873, i64 1)
  store double %return879, double* %221
  %return881 = call double @"getcomp@FPI"(<4 x double> %return873, i64 2)
  store double %return881, double* %222
  %return883 = call double @"getcomp@FPI"(<4 x double> %return873, i64 3)
  store double %return883, double* %223
  call void @"V_WEDGEJULIA@UUFFFFF"(<2 x double>* %p, <2 x double>* %218, double* %219, double* %220, double* %221, double* %222, double* %223)
  %p884 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false868:                                         ; preds = %false848
  %return886 = call i64 @"eq@III"(i64 %type5, i64 77)
  %384 = icmp ne i64 %return886, 0
  br i1 %384, label %true887, label %false888

true887:                                          ; preds = %false868
  %GMP890 = load %gemPrm, %gemPrm* %GMP
  %wedgesph891 = extractvalue %gemPrm %GMP890, 47
  %idx892 = load i64, i64* %idx
  %return893 = call <4 x double> @"getcomp@P[PI"(<4 x double>* %wedgesph891, i64 %idx892)
  %_p894 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p894, <2 x double>* %224
  %w895 = load double, double* %w
  store double %w895, double* %225
  %return897 = call double @"getcomp@FPI"(<4 x double> %return893, i64 0)
  store double %return897, double* %226
  %return899 = call double @"getcomp@FPI"(<4 x double> %return893, i64 1)
  store double %return899, double* %227
  %return901 = call double @"getcomp@FPI"(<4 x double> %return893, i64 2)
  store double %return901, double* %228
  %return903 = call double @"getcomp@FPI"(<4 x double> %return893, i64 3)
  store double %return903, double* %229
  call void @"V_WEDGESPH@UUFFFFF"(<2 x double>* %p, <2 x double>* %224, double* %225, double* %226, double* %227, double* %228, double* %229)
  %p904 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false888:                                         ; preds = %false868
  %return906 = call i64 @"eq@III"(i64 %type5, i64 78)
  %385 = icmp ne i64 %return906, 0
  br i1 %385, label %true907, label %false908

true907:                                          ; preds = %false888
  %GMP910 = load %gemPrm, %gemPrm* %GMP
  %whorl911 = extractvalue %gemPrm %GMP910, 39
  %idx912 = load i64, i64* %idx
  %return913 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %whorl911, i64 %idx912)
  %_p914 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p914, <2 x double>* %230
  %w915 = load double, double* %w
  store double %w915, double* %231
  %return917 = call double @"getcomp@FUI"(<2 x double> %return913, i64 0)
  store double %return917, double* %232
  %return919 = call double @"getcomp@FUI"(<2 x double> %return913, i64 1)
  store double %return919, double* %233
  call void @"V_WHORL@UUFFF"(<2 x double>* %p, <2 x double>* %230, double* %231, double* %232, double* %233)
  %p920 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false908:                                         ; preds = %false888
  %return922 = call i64 @"eq@III"(i64 %type5, i64 79)
  %386 = icmp ne i64 %return922, 0
  br i1 %386, label %true923, label %false924

true923:                                          ; preds = %false908
  %GMP926 = load %gemPrm, %gemPrm* %GMP
  %waves2_scale = extractvalue %gemPrm %GMP926, 25
  %idx927 = load i64, i64* %idx
  %return928 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %waves2_scale, i64 %idx927)
  %waves2_freq = extractvalue %gemPrm %GMP926, 26
  %return931 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %waves2_freq, i64 %idx927)
  %_p932 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p932, <2 x double>* %234
  %w933 = load double, double* %w
  store double %w933, double* %235
  store <2 x double> %return928, <2 x double>* %236
  store <2 x double> %return931, <2 x double>* %237
  call void @"V_WAVES2@UUFUU"(<2 x double>* %p, <2 x double>* %234, double* %235, <2 x double>* %236, <2 x double>* %237)
  %p936 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false924:                                         ; preds = %false908
  %return938 = call i64 @"eq@III"(i64 %type5, i64 80)
  %387 = icmp ne i64 %return938, 0
  br i1 %387, label %true939, label %false940

true939:                                          ; preds = %false924
  %_p942 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p942, <2 x double>* %238
  %w943 = load double, double* %w
  store double %w943, double* %239
  call void @"V_COTHEEXP@UUF"(<2 x double>* %p, <2 x double>* %238, double* %239)
  %p944 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false940:                                         ; preds = %false924
  %return946 = call i64 @"eq@III"(i64 %type5, i64 81)
  %388 = icmp ne i64 %return946, 0
  br i1 %388, label %true947, label %false948

true947:                                          ; preds = %false940
  %_p950 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p950, <2 x double>* %240
  %w951 = load double, double* %w
  store double %w951, double* %241
  call void @"V_COTHELOG@UUF"(<2 x double>* %p, <2 x double>* %240, double* %241)
  %p952 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false948:                                         ; preds = %false940
  %return954 = call i64 @"eq@III"(i64 %type5, i64 82)
  %389 = icmp ne i64 %return954, 0
  br i1 %389, label %true955, label %false956

true955:                                          ; preds = %false948
  %_p958 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p958, <2 x double>* %242
  %w959 = load double, double* %w
  store double %w959, double* %243
  call void @"V_COTHESIN@UUF"(<2 x double>* %p, <2 x double>* %242, double* %243)
  %p960 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false956:                                         ; preds = %false948
  %return962 = call i64 @"eq@III"(i64 %type5, i64 83)
  %390 = icmp ne i64 %return962, 0
  br i1 %390, label %true963, label %false964

true963:                                          ; preds = %false956
  %_p966 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p966, <2 x double>* %244
  %w967 = load double, double* %w
  store double %w967, double* %245
  call void @"V_COTHECOS@UUF"(<2 x double>* %p, <2 x double>* %244, double* %245)
  %p968 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false964:                                         ; preds = %false956
  %return970 = call i64 @"eq@III"(i64 %type5, i64 84)
  %391 = icmp ne i64 %return970, 0
  br i1 %391, label %true971, label %false972

true971:                                          ; preds = %false964
  %_p974 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p974, <2 x double>* %246
  %w975 = load double, double* %w
  store double %w975, double* %247
  call void @"V_COTHETAN@UUF"(<2 x double>* %p, <2 x double>* %246, double* %247)
  %p976 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false972:                                         ; preds = %false964
  %return978 = call i64 @"eq@III"(i64 %type5, i64 85)
  %392 = icmp ne i64 %return978, 0
  br i1 %392, label %true979, label %end12

true979:                                          ; preds = %false972
  %_p981 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p981, <2 x double>* %248
  %w982 = load double, double* %w
  store double %w982, double* %249
  call void @"V_COTHESEC@UUF"(<2 x double>* %p, <2 x double>* %248, double* %249)
  %p983 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true986:                                          ; preds = %false777
  %_p989 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p989, <2 x double>* %250
  %w990 = load double, double* %w
  store double %w990, double* %251
  call void @"V_COTHECSC@UUF"(<2 x double>* %p, <2 x double>* %250, double* %251)
  %p991 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false987:                                         ; preds = %false777
  %return993 = call i64 @"eq@III"(i64 %type5, i64 87)
  %393 = icmp ne i64 %return993, 0
  br i1 %393, label %true994, label %false995

true994:                                          ; preds = %false987
  %_p997 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p997, <2 x double>* %252
  %w998 = load double, double* %w
  store double %w998, double* %253
  call void @"V_COTHECOT@UUF"(<2 x double>* %p, <2 x double>* %252, double* %253)
  %p999 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false995:                                         ; preds = %false987
  %return1001 = call i64 @"eq@III"(i64 %type5, i64 88)
  %394 = icmp ne i64 %return1001, 0
  br i1 %394, label %true1002, label %false1003

true1002:                                         ; preds = %false995
  %_p1005 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1005, <2 x double>* %254
  %w1006 = load double, double* %w
  store double %w1006, double* %255
  call void @"V_COTHESINH@UUF"(<2 x double>* %p, <2 x double>* %254, double* %255)
  %p1007 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1003:                                        ; preds = %false995
  %return1009 = call i64 @"eq@III"(i64 %type5, i64 89)
  %395 = icmp ne i64 %return1009, 0
  br i1 %395, label %true1010, label %false1011

true1010:                                         ; preds = %false1003
  %_p1013 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1013, <2 x double>* %256
  %w1014 = load double, double* %w
  store double %w1014, double* %257
  call void @"V_COTHECOSH@UUF"(<2 x double>* %p, <2 x double>* %256, double* %257)
  %p1015 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1011:                                        ; preds = %false1003
  %return1017 = call i64 @"eq@III"(i64 %type5, i64 90)
  %396 = icmp ne i64 %return1017, 0
  br i1 %396, label %true1018, label %false1019

true1018:                                         ; preds = %false1011
  %_p1021 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1021, <2 x double>* %258
  %w1022 = load double, double* %w
  store double %w1022, double* %259
  call void @"V_COTHETANH@UUF"(<2 x double>* %p, <2 x double>* %258, double* %259)
  %p1023 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1019:                                        ; preds = %false1011
  %return1025 = call i64 @"eq@III"(i64 %type5, i64 91)
  %397 = icmp ne i64 %return1025, 0
  br i1 %397, label %true1026, label %false1027

true1026:                                         ; preds = %false1019
  %_p1029 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1029, <2 x double>* %260
  %w1030 = load double, double* %w
  store double %w1030, double* %261
  call void @"V_COTHESECH@UUF"(<2 x double>* %p, <2 x double>* %260, double* %261)
  %p1031 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1027:                                        ; preds = %false1019
  %return1033 = call i64 @"eq@III"(i64 %type5, i64 92)
  %398 = icmp ne i64 %return1033, 0
  br i1 %398, label %true1034, label %false1035

true1034:                                         ; preds = %false1027
  %_p1037 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1037, <2 x double>* %262
  %w1038 = load double, double* %w
  store double %w1038, double* %263
  call void @"V_COTHECSCH@UUF"(<2 x double>* %p, <2 x double>* %262, double* %263)
  %p1039 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1035:                                        ; preds = %false1027
  %return1041 = call i64 @"eq@III"(i64 %type5, i64 93)
  %399 = icmp ne i64 %return1041, 0
  br i1 %399, label %true1042, label %false1043

true1042:                                         ; preds = %false1035
  %_p1045 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1045, <2 x double>* %264
  %w1046 = load double, double* %w
  store double %w1046, double* %265
  call void @"V_COTHECOTH@UUF"(<2 x double>* %p, <2 x double>* %264, double* %265)
  %p1047 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1043:                                        ; preds = %false1035
  %return1049 = call i64 @"eq@III"(i64 %type5, i64 94)
  %400 = icmp ne i64 %return1049, 0
  br i1 %400, label %true1050, label %false1051

true1050:                                         ; preds = %false1043
  %GMP1053 = load %gemPrm, %gemPrm* %GMP
  %auger1054 = extractvalue %gemPrm %GMP1053, 48
  %idx1055 = load i64, i64* %idx
  %return1056 = call <4 x double> @"getcomp@P[PI"(<4 x double>* %auger1054, i64 %idx1055)
  %_p1057 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1057, <2 x double>* %266
  %w1058 = load double, double* %w
  store double %w1058, double* %267
  %return1060 = call double @"getcomp@FPI"(<4 x double> %return1056, i64 0)
  store double %return1060, double* %268
  %return1062 = call double @"getcomp@FPI"(<4 x double> %return1056, i64 1)
  store double %return1062, double* %269
  %return1064 = call double @"getcomp@FPI"(<4 x double> %return1056, i64 2)
  store double %return1064, double* %270
  %return1066 = call double @"getcomp@FPI"(<4 x double> %return1056, i64 3)
  store double %return1066, double* %271
  call void @"V_AUGER@UUFFFFF"(<2 x double>* %p, <2 x double>* %266, double* %267, double* %268, double* %269, double* %270, double* %271)
  %p1067 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1051:                                        ; preds = %false1043
  %return1069 = call i64 @"eq@III"(i64 %type5, i64 95)
  %401 = icmp ne i64 %return1069, 0
  br i1 %401, label %true1070, label %false1071

true1070:                                         ; preds = %false1051
  %GMP1073 = load %gemPrm, %gemPrm* %GMP
  %flux_spread = extractvalue %gemPrm %GMP1073, 5
  %idx1074 = load i64, i64* %idx
  %return1075 = call double @"getcomp@F[FI"(double* %flux_spread, i64 %idx1074)
  %_p1076 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1076, <2 x double>* %272
  %w1077 = load double, double* %w
  store double %w1077, double* %273
  store double %return1075, double* %274
  call void @"V_FLUX@UUFF"(<2 x double>* %p, <2 x double>* %272, double* %273, double* %274)
  %p1079 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1071:                                        ; preds = %false1051
  %return1081 = call i64 @"eq@III"(i64 %type5, i64 96)
  %402 = icmp ne i64 %return1081, 0
  br i1 %402, label %true1082, label %false1083

true1082:                                         ; preds = %false1071
  %GMP1085 = load %gemPrm, %gemPrm* %GMP
  %mobius_re = extractvalue %gemPrm %GMP1085, 49
  %idx1086 = load i64, i64* %idx
  %return1087 = call <4 x double> @"getcomp@P[PI"(<4 x double>* %mobius_re, i64 %idx1086)
  %mobius_im = extractvalue %gemPrm %GMP1085, 50
  %return1090 = call <4 x double> @"getcomp@P[PI"(<4 x double>* %mobius_im, i64 %idx1086)
  %_p1091 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1091, <2 x double>* %275
  %w1092 = load double, double* %w
  store double %w1092, double* %276
  store <4 x double> %return1087, <4 x double>* %277
  store <4 x double> %return1090, <4 x double>* %278
  call void @"V_MOBIUS@UUFPP"(<2 x double>* %p, <2 x double>* %275, double* %276, <4 x double>* %277, <4 x double>* %278)
  %p1095 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1083:                                        ; preds = %false1071
  %return1097 = call i64 @"eq@III"(i64 %type5, i64 97)
  %403 = icmp ne i64 %return1097, 0
  br i1 %403, label %true1098, label %false1099

true1098:                                         ; preds = %false1083
  %GMP1101 = load %gemPrm, %gemPrm* %GMP
  %curve_lenght = extractvalue %gemPrm %GMP1101, 27
  %idx1102 = load i64, i64* %idx
  %return1103 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %curve_lenght, i64 %idx1102)
  %curve_amp = extractvalue %gemPrm %GMP1101, 28
  %return1106 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %curve_amp, i64 %idx1102)
  %_p1107 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1107, <2 x double>* %279
  %w1108 = load double, double* %w
  store double %w1108, double* %280
  store <2 x double> %return1103, <2 x double>* %281
  store <2 x double> %return1106, <2 x double>* %282
  call void @"V_CURVE@UUFUU"(<2 x double>* %p, <2 x double>* %279, double* %280, <2 x double>* %281, <2 x double>* %282)
  %p1111 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1099:                                        ; preds = %false1083
  %return1113 = call i64 @"eq@III"(i64 %type5, i64 98)
  %404 = icmp ne i64 %return1113, 0
  br i1 %404, label %true1114, label %false1115

true1114:                                         ; preds = %false1099
  %GMP1117 = load %gemPrm, %gemPrm* %GMP
  %persp1118 = extractvalue %gemPrm %GMP1117, 40
  %idx1119 = load i64, i64* %idx
  %return1120 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %persp1118, i64 %idx1119)
  %_p1121 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1121, <2 x double>* %283
  %w1122 = load double, double* %w
  store double %w1122, double* %284
  %return1124 = call double @"getcomp@FUI"(<2 x double> %return1120, i64 0)
  store double %return1124, double* %285
  %return1126 = call double @"getcomp@FUI"(<2 x double> %return1120, i64 1)
  store double %return1126, double* %286
  call void @"V_PERSPECTIVE@UUFFF"(<2 x double>* %p, <2 x double>* %283, double* %284, double* %285, double* %286)
  %p1127 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1115:                                        ; preds = %false1099
  %return1129 = call i64 @"eq@III"(i64 %type5, i64 99)
  %405 = icmp ne i64 %return1129, 0
  br i1 %405, label %true1130, label %false1131

true1130:                                         ; preds = %false1115
  %GMP1133 = load %gemPrm, %gemPrm* %GMP
  %bwraps1134 = extractvalue %gemPrm %GMP1133, 12
  %idx1135 = load i64, i64* %idx
  %return1136 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %bwraps1134, i64 %idx1135)
  %bwrapstwist1138 = extractvalue %gemPrm %GMP1133, 41
  %return1140 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %bwrapstwist1138, i64 %idx1135)
  %_p1141 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1141, <2 x double>* %287
  %w1142 = load double, double* %w
  store double %w1142, double* %288
  %return1144 = call double @"getcomp@FVI"(<3 x double> %return1136, i64 0)
  store double %return1144, double* %289
  %return1146 = call double @"getcomp@FVI"(<3 x double> %return1136, i64 1)
  store double %return1146, double* %290
  %return1148 = call double @"getcomp@FVI"(<3 x double> %return1136, i64 2)
  store double %return1148, double* %291
  %return1150 = call double @"getcomp@FUI"(<2 x double> %return1140, i64 0)
  store double %return1150, double* %292
  %return1152 = call double @"getcomp@FUI"(<2 x double> %return1140, i64 1)
  store double %return1152, double* %293
  call void @"V_BWRAPS@UUFFFFFF"(<2 x double>* %p, <2 x double>* %287, double* %288, double* %289, double* %290, double* %291, double* %292, double* %293)
  %p1153 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1131:                                        ; preds = %false1115
  %return1155 = call i64 @"eq@III"(i64 %type5, i64 100)
  %406 = icmp ne i64 %return1155, 0
  br i1 %406, label %true1156, label %false1157

true1156:                                         ; preds = %false1131
  %_p1159 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1159, <2 x double>* %294
  %w1160 = load double, double* %w
  store double %w1160, double* %295
  call void @"V_HEMISPHERE@UUF"(<2 x double>* %p, <2 x double>* %294, double* %295)
  %p1161 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1157:                                        ; preds = %false1131
  %return1163 = call i64 @"eq@III"(i64 %type5, i64 101)
  %407 = icmp ne i64 %return1163, 0
  br i1 %407, label %true1164, label %end12

true1164:                                         ; preds = %false1157
  %GMP1166 = load %gemPrm, %gemPrm* %GMP
  %polynomial_pow = extractvalue %gemPrm %GMP1166, 29
  %idx1167 = load i64, i64* %idx
  %return1168 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %polynomial_pow, i64 %idx1167)
  %polynomial_lc = extractvalue %gemPrm %GMP1166, 30
  %return1171 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %polynomial_lc, i64 %idx1167)
  %polynomial_sc = extractvalue %gemPrm %GMP1166, 31
  %return1174 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %polynomial_sc, i64 %idx1167)
  %_p1175 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1175, <2 x double>* %296
  %w1176 = load double, double* %w
  store double %w1176, double* %297
  store <2 x double> %return1168, <2 x double>* %298
  store <2 x double> %return1171, <2 x double>* %299
  store <2 x double> %return1174, <2 x double>* %300
  call void @"V_POLYNOMIAL@UUFUUU"(<2 x double>* %p, <2 x double>* %296, double* %297, <2 x double>* %298, <2 x double>* %299, <2 x double>* %300)
  %p1180 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %true1164, %true1156, %true1130, %true1114, %true1098, %true1082, %true1070, %true1050, %true1042, %true1034, %true1026, %true1018, %true1010, %true1002, %true994, %true986, %true979, %true971, %true963, %true955, %true947, %true939, %true923, %true907, %true887, %true867, %true847, %true831, %true818, %true805, %true789, %true781, %true757, %true749, %true729, %true717, %true709, %true686, %true678, %true666, %true658, %true650, %true642, %true624, %true613, %true605, %true597, %true585, %true572, %true556, %true540, %true525, %true504, %true488, %true480, %true472, %true464, %true456, %true448, %true441, %true433, %true426, %true409, %true393, %true381, %true369, %true347, %true340, %true324, %true308, %true290, %true278, %true258, %true242, %true235, %true227, %true219, %true211, %true201, %true191, %true183, %true175, %true167, %true156, %true148, %true132, %true124, %true116, %true108, %true100, %true92, %true84, %true76, %true68, %true60, %true52, %true44, %true36, %true28, %true20, %end12, %true
  %UnifiedRetVal = phi <2 x double> [ %output, %true ], [ %_p1181, %end12 ], [ %p25, %true20 ], [ %p33, %true28 ], [ %p41, %true36 ], [ %p49, %true44 ], [ %p57, %true52 ], [ %p65, %true60 ], [ %p73, %true68 ], [ %p81, %true76 ], [ %p89, %true84 ], [ %p97, %true92 ], [ %p105, %true100 ], [ %p113, %true108 ], [ %p121, %true116 ], [ %p129, %true124 ], [ %p145, %true132 ], [ %p153, %true148 ], [ %p164, %true156 ], [ %p172, %true167 ], [ %p180, %true175 ], [ %p188, %true183 ], [ %p198, %true191 ], [ %p208, %true201 ], [ %p216, %true211 ], [ %p224, %true219 ], [ %p232, %true227 ], [ %p239, %true235 ], [ %p255, %true242 ], [ %p275, %true258 ], [ %p287, %true278 ], [ %p305, %true290 ], [ %p321, %true308 ], [ %p337, %true324 ], [ %p344, %true340 ], [ %p356, %true347 ], [ %p378, %true369 ], [ %p390, %true381 ], [ %p406, %true393 ], [ %p423, %true409 ], [ %p430, %true426 ], [ %p438, %true433 ], [ %p445, %true441 ], [ %p453, %true448 ], [ %p461, %true456 ], [ %p469, %true464 ], [ %p477, %true472 ], [ %p485, %true480 ], [ %p501, %true488 ], [ %p522, %true504 ], [ %p537, %true525 ], [ %p553, %true540 ], [ %p569, %true556 ], [ %p582, %true572 ], [ %p594, %true585 ], [ %p602, %true597 ], [ %p610, %true605 ], [ %p621, %true613 ], [ %p639, %true624 ], [ %p647, %true642 ], [ %p655, %true650 ], [ %p663, %true658 ], [ %p675, %true666 ], [ %p683, %true678 ], [ %p706, %true686 ], [ %p714, %true709 ], [ %p726, %true717 ], [ %p746, %true729 ], [ %p754, %true749 ], [ %p769, %true757 ], [ %p786, %true781 ], [ %p802, %true789 ], [ %p815, %true805 ], [ %p828, %true818 ], [ %p844, %true831 ], [ %p864, %true847 ], [ %p884, %true867 ], [ %p904, %true887 ], [ %p920, %true907 ], [ %p936, %true923 ], [ %p944, %true939 ], [ %p952, %true947 ], [ %p960, %true955 ], [ %p968, %true963 ], [ %p976, %true971 ], [ %p983, %true979 ], [ %p991, %true986 ], [ %p999, %true994 ], [ %p1007, %true1002 ], [ %p1015, %true1010 ], [ %p1023, %true1018 ], [ %p1031, %true1026 ], [ %p1039, %true1034 ], [ %p1047, %true1042 ], [ %p1067, %true1050 ], [ %p1079, %true1070 ], [ %p1095, %true1082 ], [ %p1111, %true1098 ], [ %p1127, %true1114 ], [ %p1153, %true1130 ], [ %p1161, %true1156 ], [ %p1180, %true1164 ]
  ret <2 x double> %UnifiedRetVal
}

; Function Attrs: nounwind readnone
declare <2 x double> @"mul@UU"(<2 x double>, <2 x double>) #1

; Function Attrs: nounwind readnone
declare <2 x double> @"getcomp@U[UI"(<2 x double>*, i64) #1

; Function Attrs: nounwind readnone
declare <4 x double> @"getcomp@P[PI"(<4 x double>*, i64) #1

; Function Attrs: nounwind readnone
declare <3 x double> @"getcomp@V[VI"(<3 x double>*, i64) #1

; Function Attrs: alwaysinline nounwind
define private <2 x double> @"FLAMEPP@UIUUUUF"(i64* %type, <2 x double>* %pos, <2 x double>* %x, <2 x double>* %y, <2 x double>* %o, double* %w) #0 {
__llvm_entry:
  %_p = alloca <2 x double>
  %0 = alloca double
  %1 = alloca <2 x double>
  %2 = alloca double
  %3 = alloca <2 x double>
  %4 = alloca double
  %5 = alloca <2 x double>
  %6 = alloca double
  %7 = alloca <2 x double>
  %8 = alloca double
  %9 = alloca <2 x double>
  %10 = alloca double
  %11 = alloca <2 x double>
  %12 = alloca double
  %13 = alloca <2 x double>
  %14 = alloca double
  %15 = alloca <2 x double>
  %16 = alloca double
  %17 = alloca <2 x double>
  %18 = alloca double
  %19 = alloca <2 x double>
  %20 = alloca double
  %21 = alloca <2 x double>
  %22 = alloca double
  %23 = alloca <2 x double>
  %24 = alloca double
  %25 = alloca <2 x double>
  %26 = alloca double
  %27 = alloca <2 x double>
  %28 = alloca double
  %29 = alloca <2 x double>
  %30 = alloca double
  %31 = alloca double
  %32 = alloca double
  %33 = alloca double
  %34 = alloca double
  %35 = alloca <2 x double>
  %36 = alloca double
  %37 = alloca <2 x double>
  %38 = alloca double
  %39 = alloca double
  %40 = alloca double
  %41 = alloca <2 x double>
  %42 = alloca double
  %43 = alloca <2 x double>
  %44 = alloca double
  %45 = alloca <2 x double>
  %46 = alloca double
  %47 = alloca <2 x double>
  %48 = alloca double
  %49 = alloca double
  %50 = alloca <2 x double>
  %51 = alloca double
  %52 = alloca double
  %53 = alloca <2 x double>
  %54 = alloca double
  %55 = alloca <2 x double>
  %56 = alloca double
  %57 = alloca <2 x double>
  %58 = alloca double
  %59 = alloca double
  %60 = alloca double
  %61 = alloca <2 x double>
  %62 = alloca double
  %63 = alloca <2 x double>
  %64 = alloca double
  %65 = alloca <2 x double>
  %66 = alloca double
  %67 = alloca <2 x double>
  %68 = alloca double
  %69 = alloca <2 x double>
  %70 = alloca double
  %71 = alloca <2 x double>
  %72 = alloca double
  %73 = alloca <2 x double>
  %74 = alloca double
  %75 = alloca <2 x double>
  %76 = alloca double
  %77 = alloca <2 x double>
  %78 = alloca double
  %79 = alloca <2 x double>
  %80 = alloca double
  %81 = alloca <2 x double>
  %82 = alloca double
  %83 = alloca <2 x double>
  %84 = alloca double
  %85 = alloca <2 x double>
  %86 = alloca double
  %87 = alloca <2 x double>
  %88 = alloca double
  %89 = alloca <2 x double>
  %90 = alloca double
  %91 = alloca <2 x double>
  %92 = alloca double
  %93 = alloca <2 x double>
  %94 = alloca double
  %95 = alloca <2 x double>
  %96 = alloca double
  %97 = alloca <2 x double>
  %98 = alloca double
  %99 = alloca <2 x double>
  %100 = alloca double
  %101 = alloca <2 x double>
  %102 = alloca double
  %103 = alloca <2 x double>
  %104 = alloca double
  %105 = alloca <2 x double>
  %106 = alloca double
  %107 = alloca <2 x double>
  %108 = alloca double
  %109 = alloca <2 x double>
  %110 = alloca double
  %111 = alloca <2 x double>
  %112 = alloca double
  %113 = alloca <2 x double>
  %114 = alloca double
  %115 = alloca <2 x double>
  %116 = alloca double
  %117 = alloca <2 x double>
  %118 = alloca double
  %119 = alloca <2 x double>
  %120 = alloca double
  %121 = alloca <2 x double>
  %122 = alloca double
  %123 = alloca <2 x double>
  %124 = alloca double
  %p = alloca <2 x double>
  store <2 x double> zeroinitializer, <2 x double>* %p, !vex-initializer-store !3
  %pos1 = load <2 x double>, <2 x double>* %pos
  store <2 x double> %pos1, <2 x double>* %_p
  %type2 = load i64, i64* %type
  %return = call i64 @"not@II"(i64 %type2)
  %125 = icmp ne i64 %return, 0
  br i1 %125, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %w3 = load double, double* %w
  store double %w3, double* %0
  call void @"V_PREBLUR@UF"(<2 x double>* %_p, double* %0)
  %_p4 = load <2 x double>, <2 x double>* %_p
  br label %UnifiedReturnBlock

false:                                            ; preds = %__llvm_entry
  %return6 = call i64 @"lt@III"(i64 %type2, i64 21)
  %126 = icmp ne i64 %return6, 0
  br i1 %126, label %true7, label %false8

true7:                                            ; preds = %false
  %return11 = call i64 @"lt@III"(i64 %type2, i64 11)
  %127 = icmp ne i64 %return11, 0
  br i1 %127, label %true12, label %false13

false8:                                           ; preds = %false
  %return186 = call i64 @"lt@III"(i64 %type2, i64 62)
  %128 = icmp ne i64 %return186, 0
  br i1 %128, label %true187, label %false188

end9:                                             ; preds = %false499, %false429, %false188, %false341, %false263, %false173, %false82
  %_p511 = load <2 x double>, <2 x double>* %_p
  br label %UnifiedReturnBlock

true12:                                           ; preds = %true7
  %return16 = call i64 @"eq@III"(i64 %type2, i64 1)
  %129 = icmp ne i64 %return16, 0
  br i1 %129, label %true17, label %false18

false13:                                          ; preds = %true7
  %return95 = call i64 @"eq@III"(i64 %type2, i64 11)
  %130 = icmp ne i64 %return95, 0
  br i1 %130, label %true96, label %false97

true17:                                           ; preds = %true12
  store <2 x double> %pos1, <2 x double>* %1
  %w21 = load double, double* %w
  store double %w21, double* %2
  call void @"V_SINUSOIDAL@UUF"(<2 x double>* %p, <2 x double>* %1, double* %2)
  %p22 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false18:                                          ; preds = %true12
  %return24 = call i64 @"eq@III"(i64 %type2, i64 2)
  %131 = icmp ne i64 %return24, 0
  br i1 %131, label %true25, label %false26

true25:                                           ; preds = %false18
  store <2 x double> %pos1, <2 x double>* %3
  %w29 = load double, double* %w
  store double %w29, double* %4
  call void @"V_SPHERICAL@UUF"(<2 x double>* %p, <2 x double>* %3, double* %4)
  %p30 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false26:                                          ; preds = %false18
  %return32 = call i64 @"eq@III"(i64 %type2, i64 3)
  %132 = icmp ne i64 %return32, 0
  br i1 %132, label %true33, label %false34

true33:                                           ; preds = %false26
  store <2 x double> %pos1, <2 x double>* %5
  %w37 = load double, double* %w
  store double %w37, double* %6
  call void @"V_SWIRL@UUF"(<2 x double>* %p, <2 x double>* %5, double* %6)
  %p38 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false34:                                          ; preds = %false26
  %return40 = call i64 @"eq@III"(i64 %type2, i64 4)
  %133 = icmp ne i64 %return40, 0
  br i1 %133, label %true41, label %false42

true41:                                           ; preds = %false34
  store <2 x double> %pos1, <2 x double>* %7
  %w45 = load double, double* %w
  store double %w45, double* %8
  call void @"V_HORSESHOE@UUF"(<2 x double>* %p, <2 x double>* %7, double* %8)
  %p46 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false42:                                          ; preds = %false34
  %return48 = call i64 @"eq@III"(i64 %type2, i64 5)
  %134 = icmp ne i64 %return48, 0
  br i1 %134, label %true49, label %false50

true49:                                           ; preds = %false42
  store <2 x double> %pos1, <2 x double>* %9
  %w53 = load double, double* %w
  store double %w53, double* %10
  call void @"V_POLAR@UUF"(<2 x double>* %p, <2 x double>* %9, double* %10)
  %p54 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false50:                                          ; preds = %false42
  %return56 = call i64 @"eq@III"(i64 %type2, i64 6)
  %135 = icmp ne i64 %return56, 0
  br i1 %135, label %true57, label %false58

true57:                                           ; preds = %false50
  store <2 x double> %pos1, <2 x double>* %11
  %w61 = load double, double* %w
  store double %w61, double* %12
  call void @"V_HANDKERCHIEF@UUF"(<2 x double>* %p, <2 x double>* %11, double* %12)
  %p62 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false58:                                          ; preds = %false50
  %return64 = call i64 @"eq@III"(i64 %type2, i64 7)
  %136 = icmp ne i64 %return64, 0
  br i1 %136, label %true65, label %false66

true65:                                           ; preds = %false58
  store <2 x double> %pos1, <2 x double>* %13
  %w69 = load double, double* %w
  store double %w69, double* %14
  call void @"V_HEART@UUF"(<2 x double>* %p, <2 x double>* %13, double* %14)
  %p70 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false66:                                          ; preds = %false58
  %return72 = call i64 @"eq@III"(i64 %type2, i64 8)
  %137 = icmp ne i64 %return72, 0
  br i1 %137, label %true73, label %false74

true73:                                           ; preds = %false66
  store <2 x double> %pos1, <2 x double>* %15
  %w77 = load double, double* %w
  store double %w77, double* %16
  call void @"V_DISC@UUF"(<2 x double>* %p, <2 x double>* %15, double* %16)
  %p78 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false74:                                          ; preds = %false66
  %return80 = call i64 @"eq@III"(i64 %type2, i64 9)
  %138 = icmp ne i64 %return80, 0
  br i1 %138, label %true81, label %false82

true81:                                           ; preds = %false74
  store <2 x double> %pos1, <2 x double>* %17
  %w85 = load double, double* %w
  store double %w85, double* %18
  call void @"V_SPIRAL@UUF"(<2 x double>* %p, <2 x double>* %17, double* %18)
  %p86 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false82:                                          ; preds = %false74
  %return88 = call i64 @"eq@III"(i64 %type2, i64 10)
  %139 = icmp ne i64 %return88, 0
  br i1 %139, label %true89, label %end9

true89:                                           ; preds = %false82
  store <2 x double> %pos1, <2 x double>* %19
  %w92 = load double, double* %w
  store double %w92, double* %20
  call void @"V_HIPERBOLIC@UUF"(<2 x double>* %p, <2 x double>* %19, double* %20)
  %p93 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true96:                                           ; preds = %false13
  store <2 x double> %pos1, <2 x double>* %21
  %w100 = load double, double* %w
  store double %w100, double* %22
  call void @"V_DIAMOND@UUF"(<2 x double>* %p, <2 x double>* %21, double* %22)
  %p101 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false97:                                          ; preds = %false13
  %return103 = call i64 @"eq@III"(i64 %type2, i64 12)
  %140 = icmp ne i64 %return103, 0
  br i1 %140, label %true104, label %false105

true104:                                          ; preds = %false97
  store <2 x double> %pos1, <2 x double>* %23
  %w108 = load double, double* %w
  store double %w108, double* %24
  call void @"V_EX@UUF"(<2 x double>* %p, <2 x double>* %23, double* %24)
  %p109 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false105:                                         ; preds = %false97
  %return111 = call i64 @"eq@III"(i64 %type2, i64 13)
  %141 = icmp ne i64 %return111, 0
  br i1 %141, label %true112, label %false113

true112:                                          ; preds = %false105
  store <2 x double> %pos1, <2 x double>* %25
  %w116 = load double, double* %w
  store double %w116, double* %26
  call void @"V_JULIA@UUF"(<2 x double>* %p, <2 x double>* %25, double* %26)
  %p117 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false113:                                         ; preds = %false105
  %return119 = call i64 @"eq@III"(i64 %type2, i64 14)
  %142 = icmp ne i64 %return119, 0
  br i1 %142, label %true120, label %false121

true120:                                          ; preds = %false113
  store <2 x double> %pos1, <2 x double>* %27
  %w124 = load double, double* %w
  store double %w124, double* %28
  call void @"V_BENT@UUF"(<2 x double>* %p, <2 x double>* %27, double* %28)
  %p125 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false121:                                         ; preds = %false113
  %return127 = call i64 @"eq@III"(i64 %type2, i64 15)
  %143 = icmp ne i64 %return127, 0
  br i1 %143, label %true128, label %false129

true128:                                          ; preds = %false121
  store <2 x double> %pos1, <2 x double>* %29
  %w132 = load double, double* %w
  store double %w132, double* %30
  %o133 = load <2 x double>, <2 x double>* %o
  %return134 = call double @"getcomp@FUI"(<2 x double> %o133, i64 0)
  store double %return134, double* %31
  %x135 = load <2 x double>, <2 x double>* %x
  %return136 = call double @"getcomp@FUI"(<2 x double> %x135, i64 1)
  store double %return136, double* %32
  %y137 = load <2 x double>, <2 x double>* %y
  %return138 = call double @"getcomp@FUI"(<2 x double> %y137, i64 1)
  store double %return138, double* %33
  %o139 = load <2 x double>, <2 x double>* %o
  %return140 = call double @"getcomp@FUI"(<2 x double> %o139, i64 1)
  store double %return140, double* %34
  call void @"V_WAVES@UUFFFFF"(<2 x double>* %p, <2 x double>* %29, double* %30, double* %31, double* %32, double* %33, double* %34)
  %p141 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false129:                                         ; preds = %false121
  %return143 = call i64 @"eq@III"(i64 %type2, i64 16)
  %144 = icmp ne i64 %return143, 0
  br i1 %144, label %true144, label %false145

true144:                                          ; preds = %false129
  store <2 x double> %pos1, <2 x double>* %35
  %w148 = load double, double* %w
  store double %w148, double* %36
  call void @"V_FISHEYE@UUF"(<2 x double>* %p, <2 x double>* %35, double* %36)
  %p149 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false145:                                         ; preds = %false129
  %return151 = call i64 @"eq@III"(i64 %type2, i64 17)
  %145 = icmp ne i64 %return151, 0
  br i1 %145, label %true152, label %false153

true152:                                          ; preds = %false145
  store <2 x double> %pos1, <2 x double>* %37
  %w156 = load double, double* %w
  store double %w156, double* %38
  %o157 = load <2 x double>, <2 x double>* %o
  %return158 = call double @"getcomp@FUI"(<2 x double> %o157, i64 0)
  store double %return158, double* %39
  %o159 = load <2 x double>, <2 x double>* %o
  %return160 = call double @"getcomp@FUI"(<2 x double> %o159, i64 1)
  store double %return160, double* %40
  call void @"V_POPCORN@UUFFF"(<2 x double>* %p, <2 x double>* %37, double* %38, double* %39, double* %40)
  %p161 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false153:                                         ; preds = %false145
  %return163 = call i64 @"eq@III"(i64 %type2, i64 18)
  %146 = icmp ne i64 %return163, 0
  br i1 %146, label %true164, label %false165

true164:                                          ; preds = %false153
  store <2 x double> %pos1, <2 x double>* %41
  %w168 = load double, double* %w
  store double %w168, double* %42
  call void @"V_EXPONENTIAL@UUF"(<2 x double>* %p, <2 x double>* %41, double* %42)
  %p169 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false165:                                         ; preds = %false153
  %return171 = call i64 @"eq@III"(i64 %type2, i64 19)
  %147 = icmp ne i64 %return171, 0
  br i1 %147, label %true172, label %false173

true172:                                          ; preds = %false165
  store <2 x double> %pos1, <2 x double>* %43
  %w176 = load double, double* %w
  store double %w176, double* %44
  call void @"V_POWER@UUF"(<2 x double>* %p, <2 x double>* %43, double* %44)
  %p177 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false173:                                         ; preds = %false165
  %return179 = call i64 @"eq@III"(i64 %type2, i64 20)
  %148 = icmp ne i64 %return179, 0
  br i1 %148, label %true180, label %end9

true180:                                          ; preds = %false173
  store <2 x double> %pos1, <2 x double>* %45
  %w183 = load double, double* %w
  store double %w183, double* %46
  call void @"V_COSINE@UUF"(<2 x double>* %p, <2 x double>* %45, double* %46)
  %p184 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true187:                                          ; preds = %false8
  %return191 = call i64 @"lt@III"(i64 %type2, i64 42)
  %149 = icmp ne i64 %return191, 0
  br i1 %149, label %true192, label %false193

false188:                                         ; preds = %false8
  %return354 = call i64 @"lt@III"(i64 %type2, i64 101)
  %150 = icmp ne i64 %return354, 0
  br i1 %150, label %true355, label %end9

true192:                                          ; preds = %true187
  %return196 = call i64 @"eq@III"(i64 %type2, i64 21)
  %151 = icmp ne i64 %return196, 0
  br i1 %151, label %true197, label %false198

false193:                                         ; preds = %true187
  %return275 = call i64 @"eq@III"(i64 %type2, i64 42)
  %152 = icmp ne i64 %return275, 0
  br i1 %152, label %true276, label %false277

true197:                                          ; preds = %true192
  store <2 x double> %pos1, <2 x double>* %47
  %w201 = load double, double* %w
  store double %w201, double* %48
  %o202 = load <2 x double>, <2 x double>* %o
  %return203 = call double @"getcomp@FUI"(<2 x double> %o202, i64 0)
  store double %return203, double* %49
  call void @"V_RINGS@UUFF"(<2 x double>* %p, <2 x double>* %47, double* %48, double* %49)
  %p204 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false198:                                         ; preds = %true192
  %return206 = call i64 @"eq@III"(i64 %type2, i64 22)
  %153 = icmp ne i64 %return206, 0
  br i1 %153, label %true207, label %false208

true207:                                          ; preds = %false198
  store <2 x double> %pos1, <2 x double>* %50
  %w211 = load double, double* %w
  store double %w211, double* %51
  %o212 = load <2 x double>, <2 x double>* %o
  %return213 = call double @"getcomp@FUI"(<2 x double> %o212, i64 0)
  store double %return213, double* %52
  call void @"V_FAN@UUFF"(<2 x double>* %p, <2 x double>* %50, double* %51, double* %52)
  %p214 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false208:                                         ; preds = %false198
  %return216 = call i64 @"eq@III"(i64 %type2, i64 23)
  %154 = icmp ne i64 %return216, 0
  br i1 %154, label %true217, label %false218

true217:                                          ; preds = %false208
  store <2 x double> %pos1, <2 x double>* %53
  %w221 = load double, double* %w
  store double %w221, double* %54
  call void @"V_BUBBLE@UUF"(<2 x double>* %p, <2 x double>* %53, double* %54)
  %p222 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false218:                                         ; preds = %false208
  %return224 = call i64 @"eq@III"(i64 %type2, i64 24)
  %155 = icmp ne i64 %return224, 0
  br i1 %155, label %true225, label %false226

true225:                                          ; preds = %false218
  store <2 x double> %pos1, <2 x double>* %55
  %w229 = load double, double* %w
  store double %w229, double* %56
  call void @"V_CYLINDER@UUF"(<2 x double>* %p, <2 x double>* %55, double* %56)
  %p230 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false226:                                         ; preds = %false218
  %return232 = call i64 @"eq@III"(i64 %type2, i64 25)
  %156 = icmp ne i64 %return232, 0
  br i1 %156, label %true233, label %false234

true233:                                          ; preds = %false226
  store <2 x double> %pos1, <2 x double>* %57
  %w237 = load double, double* %w
  store double %w237, double* %58
  call void @"V_EYEFISH@UUF"(<2 x double>* %p, <2 x double>* %57, double* %58)
  %p238 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false234:                                         ; preds = %false226
  %return240 = call i64 @"eq@III"(i64 %type2, i64 26)
  %157 = icmp ne i64 %return240, 0
  br i1 %157, label %true241, label %false242

true241:                                          ; preds = %false234
  %w244 = load double, double* %w
  store double %w244, double* %59
  call void @"V_BLUR@UF"(<2 x double>* %p, double* %59)
  %p245 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false242:                                         ; preds = %false234
  %return247 = call i64 @"eq@III"(i64 %type2, i64 33)
  %158 = icmp ne i64 %return247, 0
  br i1 %158, label %true248, label %false249

true248:                                          ; preds = %false242
  %w251 = load double, double* %w
  store double %w251, double* %60
  call void @"V_GAUSSIAN@UF"(<2 x double>* %p, double* %60)
  %p252 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false249:                                         ; preds = %false242
  %return254 = call i64 @"eq@III"(i64 %type2, i64 39)
  %159 = icmp ne i64 %return254, 0
  br i1 %159, label %true255, label %false256

true255:                                          ; preds = %false249
  %w258 = load double, double* %w
  store double %w258, double* %62
  call void @"V_ARCH@UUF"(<2 x double>* %p, <2 x double>* %61, double* %62)
  %p259 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false256:                                         ; preds = %false249
  %return261 = call i64 @"eq@III"(i64 %type2, i64 40)
  %160 = icmp ne i64 %return261, 0
  br i1 %160, label %true262, label %false263

true262:                                          ; preds = %false256
  store <2 x double> %pos1, <2 x double>* %63
  %w266 = load double, double* %w
  store double %w266, double* %64
  call void @"V_TANGENT@UUF"(<2 x double>* %p, <2 x double>* %63, double* %64)
  %p267 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false263:                                         ; preds = %false256
  %return269 = call i64 @"eq@III"(i64 %type2, i64 41)
  %161 = icmp ne i64 %return269, 0
  br i1 %161, label %true270, label %end9

true270:                                          ; preds = %false263
  %w272 = load double, double* %w
  store double %w272, double* %66
  call void @"V_SQUARE@UUF"(<2 x double>* %p, <2 x double>* %65, double* %66)
  %p273 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true276:                                          ; preds = %false193
  store <2 x double> %pos1, <2 x double>* %67
  %w280 = load double, double* %w
  store double %w280, double* %68
  call void @"V_RAYS@UUF"(<2 x double>* %p, <2 x double>* %67, double* %68)
  %p281 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false277:                                         ; preds = %false193
  %return283 = call i64 @"eq@III"(i64 %type2, i64 43)
  %162 = icmp ne i64 %return283, 0
  br i1 %162, label %true284, label %false285

true284:                                          ; preds = %false277
  store <2 x double> %pos1, <2 x double>* %69
  %w288 = load double, double* %w
  store double %w288, double* %70
  call void @"V_BLADE@UUF"(<2 x double>* %p, <2 x double>* %69, double* %70)
  %p289 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false285:                                         ; preds = %false277
  %return291 = call i64 @"eq@III"(i64 %type2, i64 44)
  %163 = icmp ne i64 %return291, 0
  br i1 %163, label %true292, label %false293

true292:                                          ; preds = %false285
  store <2 x double> %pos1, <2 x double>* %71
  %w296 = load double, double* %w
  store double %w296, double* %72
  call void @"V_SECANT2@UUF"(<2 x double>* %p, <2 x double>* %71, double* %72)
  %p297 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false293:                                         ; preds = %false285
  %return299 = call i64 @"eq@III"(i64 %type2, i64 45)
  %164 = icmp ne i64 %return299, 0
  br i1 %164, label %true300, label %false301

true300:                                          ; preds = %false293
  store <2 x double> %pos1, <2 x double>* %73
  %w304 = load double, double* %w
  store double %w304, double* %74
  call void @"V_TWINTRIAN@UUF"(<2 x double>* %p, <2 x double>* %73, double* %74)
  %p305 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false301:                                         ; preds = %false293
  %return307 = call i64 @"eq@III"(i64 %type2, i64 46)
  %165 = icmp ne i64 %return307, 0
  br i1 %165, label %true308, label %false309

true308:                                          ; preds = %false301
  store <2 x double> %pos1, <2 x double>* %75
  %w312 = load double, double* %w
  store double %w312, double* %76
  call void @"V_CROSS@UUF"(<2 x double>* %p, <2 x double>* %75, double* %76)
  %p313 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false309:                                         ; preds = %false301
  %return315 = call i64 @"eq@III"(i64 %type2, i64 54)
  %166 = icmp ne i64 %return315, 0
  br i1 %166, label %true316, label %false317

true316:                                          ; preds = %false309
  store <2 x double> %pos1, <2 x double>* %77
  %w320 = load double, double* %w
  store double %w320, double* %78
  call void @"V_BOARDERS@UUF"(<2 x double>* %p, <2 x double>* %77, double* %78)
  %p321 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false317:                                         ; preds = %false309
  %return323 = call i64 @"eq@III"(i64 %type2, i64 55)
  %167 = icmp ne i64 %return323, 0
  br i1 %167, label %true324, label %false325

true324:                                          ; preds = %false317
  store <2 x double> %pos1, <2 x double>* %79
  %w328 = load double, double* %w
  store double %w328, double* %80
  call void @"V_BUTTERFLY@UUF"(<2 x double>* %p, <2 x double>* %79, double* %80)
  %p329 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false325:                                         ; preds = %false317
  %return331 = call i64 @"eq@III"(i64 %type2, i64 58)
  %168 = icmp ne i64 %return331, 0
  br i1 %168, label %true332, label %false333

true332:                                          ; preds = %false325
  store <2 x double> %pos1, <2 x double>* %81
  %w336 = load double, double* %w
  store double %w336, double* %82
  call void @"V_EDISC@UUF"(<2 x double>* %p, <2 x double>* %81, double* %82)
  %p337 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false333:                                         ; preds = %false325
  %return339 = call i64 @"eq@III"(i64 %type2, i64 59)
  %169 = icmp ne i64 %return339, 0
  br i1 %169, label %true340, label %false341

true340:                                          ; preds = %false333
  store <2 x double> %pos1, <2 x double>* %83
  %w344 = load double, double* %w
  store double %w344, double* %84
  call void @"V_ELLIPTIC@UUF"(<2 x double>* %p, <2 x double>* %83, double* %84)
  %p345 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false341:                                         ; preds = %false333
  %return347 = call i64 @"eq@III"(i64 %type2, i64 60)
  %170 = icmp ne i64 %return347, 0
  br i1 %170, label %true348, label %end9

true348:                                          ; preds = %false341
  store <2 x double> %pos1, <2 x double>* %85
  %w351 = load double, double* %w
  store double %w351, double* %86
  call void @"V_NOISE@UUF"(<2 x double>* %p, <2 x double>* %85, double* %86)
  %p352 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true355:                                          ; preds = %false188
  %return358 = call i64 @"lt@III"(i64 %type2, i64 86)
  %171 = icmp ne i64 %return358, 0
  br i1 %171, label %true359, label %false360

true359:                                          ; preds = %true355
  %return363 = call i64 @"eq@III"(i64 %type2, i64 62)
  %172 = icmp ne i64 %return363, 0
  br i1 %172, label %true364, label %false365

false360:                                         ; preds = %true355
  %return442 = call i64 @"eq@III"(i64 %type2, i64 86)
  %173 = icmp ne i64 %return442, 0
  br i1 %173, label %true443, label %end444

true364:                                          ; preds = %true359
  store <2 x double> %pos1, <2 x double>* %87
  %w368 = load double, double* %w
  store double %w368, double* %88
  call void @"V_FOCI@UUF"(<2 x double>* %p, <2 x double>* %87, double* %88)
  %p369 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false365:                                         ; preds = %true359
  %return371 = call i64 @"eq@III"(i64 %type2, i64 64)
  %174 = icmp ne i64 %return371, 0
  br i1 %174, label %true372, label %false373

true372:                                          ; preds = %false365
  store <2 x double> %pos1, <2 x double>* %89
  %w376 = load double, double* %w
  store double %w376, double* %90
  call void @"V_LOONIE@UUF"(<2 x double>* %p, <2 x double>* %89, double* %90)
  %p377 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false373:                                         ; preds = %false365
  %return379 = call i64 @"eq@III"(i64 %type2, i64 68)
  %175 = icmp ne i64 %return379, 0
  br i1 %175, label %true380, label %false381

true380:                                          ; preds = %false373
  store <2 x double> %pos1, <2 x double>* %91
  %w384 = load double, double* %w
  store double %w384, double* %92
  call void @"V_POLAR2@UUF"(<2 x double>* %p, <2 x double>* %91, double* %92)
  %p385 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false381:                                         ; preds = %false373
  %return387 = call i64 @"eq@III"(i64 %type2, i64 70)
  %176 = icmp ne i64 %return387, 0
  br i1 %176, label %true388, label %false389

true388:                                          ; preds = %false381
  store <2 x double> %pos1, <2 x double>* %93
  %w392 = load double, double* %w
  store double %w392, double* %94
  call void @"V_SCRY@UUF"(<2 x double>* %p, <2 x double>* %93, double* %94)
  %p393 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false389:                                         ; preds = %false381
  %return395 = call i64 @"eq@III"(i64 %type2, i64 80)
  %177 = icmp ne i64 %return395, 0
  br i1 %177, label %true396, label %false397

true396:                                          ; preds = %false389
  store <2 x double> %pos1, <2 x double>* %95
  %w400 = load double, double* %w
  store double %w400, double* %96
  call void @"V_COTHEEXP@UUF"(<2 x double>* %p, <2 x double>* %95, double* %96)
  %p401 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false397:                                         ; preds = %false389
  %return403 = call i64 @"eq@III"(i64 %type2, i64 81)
  %178 = icmp ne i64 %return403, 0
  br i1 %178, label %true404, label %false405

true404:                                          ; preds = %false397
  store <2 x double> %pos1, <2 x double>* %97
  %w408 = load double, double* %w
  store double %w408, double* %98
  call void @"V_COTHELOG@UUF"(<2 x double>* %p, <2 x double>* %97, double* %98)
  %p409 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false405:                                         ; preds = %false397
  %return411 = call i64 @"eq@III"(i64 %type2, i64 82)
  %179 = icmp ne i64 %return411, 0
  br i1 %179, label %true412, label %false413

true412:                                          ; preds = %false405
  store <2 x double> %pos1, <2 x double>* %99
  %w416 = load double, double* %w
  store double %w416, double* %100
  call void @"V_COTHESIN@UUF"(<2 x double>* %p, <2 x double>* %99, double* %100)
  %p417 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false413:                                         ; preds = %false405
  %return419 = call i64 @"eq@III"(i64 %type2, i64 83)
  %180 = icmp ne i64 %return419, 0
  br i1 %180, label %true420, label %false421

true420:                                          ; preds = %false413
  store <2 x double> %pos1, <2 x double>* %101
  %w424 = load double, double* %w
  store double %w424, double* %102
  call void @"V_COTHECOS@UUF"(<2 x double>* %p, <2 x double>* %101, double* %102)
  %p425 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false421:                                         ; preds = %false413
  %return427 = call i64 @"eq@III"(i64 %type2, i64 84)
  %181 = icmp ne i64 %return427, 0
  br i1 %181, label %true428, label %false429

true428:                                          ; preds = %false421
  store <2 x double> %pos1, <2 x double>* %103
  %w432 = load double, double* %w
  store double %w432, double* %104
  call void @"V_COTHETAN@UUF"(<2 x double>* %p, <2 x double>* %103, double* %104)
  %p433 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false429:                                         ; preds = %false421
  %return435 = call i64 @"eq@III"(i64 %type2, i64 85)
  %182 = icmp ne i64 %return435, 0
  br i1 %182, label %true436, label %end9

true436:                                          ; preds = %false429
  store <2 x double> %pos1, <2 x double>* %105
  %w439 = load double, double* %w
  store double %w439, double* %106
  call void @"V_COTHESEC@UUF"(<2 x double>* %p, <2 x double>* %105, double* %106)
  %p440 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true443:                                          ; preds = %false360
  store <2 x double> %pos1, <2 x double>* %107
  %w446 = load double, double* %w
  store double %w446, double* %108
  call void @"V_COTHECSC@UUF"(<2 x double>* %p, <2 x double>* %107, double* %108)
  %p447 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

end444:                                           ; preds = %false360
  %return449 = call i64 @"eq@III"(i64 %type2, i64 87)
  %183 = icmp ne i64 %return449, 0
  br i1 %183, label %true450, label %false451

true450:                                          ; preds = %end444
  store <2 x double> %pos1, <2 x double>* %109
  %w454 = load double, double* %w
  store double %w454, double* %110
  call void @"V_COTHECOT@UUF"(<2 x double>* %p, <2 x double>* %109, double* %110)
  %p455 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false451:                                         ; preds = %end444
  %return457 = call i64 @"eq@III"(i64 %type2, i64 88)
  %184 = icmp ne i64 %return457, 0
  br i1 %184, label %true458, label %false459

true458:                                          ; preds = %false451
  store <2 x double> %pos1, <2 x double>* %111
  %w462 = load double, double* %w
  store double %w462, double* %112
  call void @"V_COTHESINH@UUF"(<2 x double>* %p, <2 x double>* %111, double* %112)
  %p463 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false459:                                         ; preds = %false451
  %return465 = call i64 @"eq@III"(i64 %type2, i64 89)
  %185 = icmp ne i64 %return465, 0
  br i1 %185, label %true466, label %false467

true466:                                          ; preds = %false459
  store <2 x double> %pos1, <2 x double>* %113
  %w470 = load double, double* %w
  store double %w470, double* %114
  call void @"V_COTHECOSH@UUF"(<2 x double>* %p, <2 x double>* %113, double* %114)
  %p471 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false467:                                         ; preds = %false459
  %return473 = call i64 @"eq@III"(i64 %type2, i64 90)
  %186 = icmp ne i64 %return473, 0
  br i1 %186, label %true474, label %false475

true474:                                          ; preds = %false467
  store <2 x double> %pos1, <2 x double>* %115
  %w478 = load double, double* %w
  store double %w478, double* %116
  call void @"V_COTHETANH@UUF"(<2 x double>* %p, <2 x double>* %115, double* %116)
  %p479 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false475:                                         ; preds = %false467
  %return481 = call i64 @"eq@III"(i64 %type2, i64 91)
  %187 = icmp ne i64 %return481, 0
  br i1 %187, label %true482, label %false483

true482:                                          ; preds = %false475
  store <2 x double> %pos1, <2 x double>* %117
  %w486 = load double, double* %w
  store double %w486, double* %118
  call void @"V_COTHESECH@UUF"(<2 x double>* %p, <2 x double>* %117, double* %118)
  %p487 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false483:                                         ; preds = %false475
  %return489 = call i64 @"eq@III"(i64 %type2, i64 92)
  %188 = icmp ne i64 %return489, 0
  br i1 %188, label %true490, label %false491

true490:                                          ; preds = %false483
  store <2 x double> %pos1, <2 x double>* %119
  %w494 = load double, double* %w
  store double %w494, double* %120
  call void @"V_COTHECSCH@UUF"(<2 x double>* %p, <2 x double>* %119, double* %120)
  %p495 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false491:                                         ; preds = %false483
  %return497 = call i64 @"eq@III"(i64 %type2, i64 93)
  %189 = icmp ne i64 %return497, 0
  br i1 %189, label %true498, label %false499

true498:                                          ; preds = %false491
  store <2 x double> %pos1, <2 x double>* %121
  %w502 = load double, double* %w
  store double %w502, double* %122
  call void @"V_COTHECOTH@UUF"(<2 x double>* %p, <2 x double>* %121, double* %122)
  %p503 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false499:                                         ; preds = %false491
  %return505 = call i64 @"eq@III"(i64 %type2, i64 100)
  %190 = icmp ne i64 %return505, 0
  br i1 %190, label %true506, label %end9

true506:                                          ; preds = %false499
  store <2 x double> %pos1, <2 x double>* %123
  %w509 = load double, double* %w
  store double %w509, double* %124
  call void @"V_HEMISPHERE@UUF"(<2 x double>* %p, <2 x double>* %123, double* %124)
  %p510 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %true506, %true498, %true490, %true482, %true474, %true466, %true458, %true450, %true443, %true436, %true428, %true420, %true412, %true404, %true396, %true388, %true380, %true372, %true364, %true348, %true340, %true332, %true324, %true316, %true308, %true300, %true292, %true284, %true276, %true270, %true262, %true255, %true248, %true241, %true233, %true225, %true217, %true207, %true197, %true180, %true172, %true164, %true152, %true144, %true128, %true120, %true112, %true104, %true96, %true89, %true81, %true73, %true65, %true57, %true49, %true41, %true33, %true25, %true17, %end9, %true
  %UnifiedRetVal = phi <2 x double> [ %_p4, %true ], [ %_p511, %end9 ], [ %p22, %true17 ], [ %p30, %true25 ], [ %p38, %true33 ], [ %p46, %true41 ], [ %p54, %true49 ], [ %p62, %true57 ], [ %p70, %true65 ], [ %p78, %true73 ], [ %p86, %true81 ], [ %p93, %true89 ], [ %p101, %true96 ], [ %p109, %true104 ], [ %p117, %true112 ], [ %p125, %true120 ], [ %p141, %true128 ], [ %p149, %true144 ], [ %p161, %true152 ], [ %p169, %true164 ], [ %p177, %true172 ], [ %p184, %true180 ], [ %p204, %true197 ], [ %p214, %true207 ], [ %p222, %true217 ], [ %p230, %true225 ], [ %p238, %true233 ], [ %p245, %true241 ], [ %p252, %true248 ], [ %p259, %true255 ], [ %p267, %true262 ], [ %p273, %true270 ], [ %p281, %true276 ], [ %p289, %true284 ], [ %p297, %true292 ], [ %p305, %true300 ], [ %p313, %true308 ], [ %p321, %true316 ], [ %p329, %true324 ], [ %p337, %true332 ], [ %p345, %true340 ], [ %p352, %true348 ], [ %p369, %true364 ], [ %p377, %true372 ], [ %p385, %true380 ], [ %p393, %true388 ], [ %p401, %true396 ], [ %p409, %true404 ], [ %p417, %true412 ], [ %p425, %true420 ], [ %p433, %true428 ], [ %p440, %true436 ], [ %p447, %true443 ], [ %p455, %true450 ], [ %p463, %true458 ], [ %p471, %true466 ], [ %p479, %true474 ], [ %p487, %true482 ], [ %p495, %true490 ], [ %p503, %true498 ], [ %p510, %true506 ]
  ret <2 x double> %UnifiedRetVal
}

; Function Attrs: alwaysinline nounwind
define private <2 x double> @"FLAMEFF@UZ6gemPrmM51N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PIIUUUUF"(%gemPrm* %GMP, i64* %ftype, i64* %type, <2 x double>* %pos, <2 x double>* %x, <2 x double>* %y, <2 x double>* %o, double* %w) #0 {
__llvm_entry:
  %_p = alloca <2 x double>
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca <2 x double>
  %3 = alloca <2 x double>
  %4 = alloca double
  %5 = alloca <2 x double>
  %6 = alloca double
  %7 = alloca <2 x double>
  %8 = alloca double
  %9 = alloca <2 x double>
  %10 = alloca double
  %11 = alloca <2 x double>
  %12 = alloca double
  %13 = alloca <2 x double>
  %14 = alloca double
  %15 = alloca <2 x double>
  %16 = alloca double
  %17 = alloca <2 x double>
  %18 = alloca double
  %19 = alloca <2 x double>
  %20 = alloca double
  %21 = alloca <2 x double>
  %22 = alloca double
  %23 = alloca <2 x double>
  %24 = alloca double
  %25 = alloca <2 x double>
  %26 = alloca double
  %27 = alloca <2 x double>
  %28 = alloca double
  %29 = alloca <2 x double>
  %30 = alloca double
  %31 = alloca <2 x double>
  %32 = alloca double
  %33 = alloca double
  %34 = alloca double
  %35 = alloca double
  %36 = alloca double
  %37 = alloca <2 x double>
  %38 = alloca double
  %39 = alloca <2 x double>
  %40 = alloca double
  %41 = alloca double
  %42 = alloca double
  %43 = alloca <2 x double>
  %44 = alloca double
  %45 = alloca <2 x double>
  %46 = alloca double
  %47 = alloca <2 x double>
  %48 = alloca double
  %49 = alloca <2 x double>
  %50 = alloca double
  %51 = alloca double
  %52 = alloca <2 x double>
  %53 = alloca double
  %54 = alloca double
  %55 = alloca <2 x double>
  %56 = alloca double
  %57 = alloca <2 x double>
  %58 = alloca double
  %59 = alloca <2 x double>
  %60 = alloca double
  %61 = alloca double
  %62 = alloca i64
  %63 = alloca <2 x double>
  %64 = alloca double
  %65 = alloca double
  %66 = alloca double
  %67 = alloca i64
  %68 = alloca <2 x double>
  %69 = alloca double
  %70 = alloca double
  %71 = alloca double
  %72 = alloca double
  %73 = alloca double
  %74 = alloca i64
  %75 = alloca <2 x double>
  %76 = alloca double
  %77 = alloca <4 x double>
  %78 = alloca i64
  %79 = alloca <2 x double>
  %80 = alloca double
  %81 = alloca double
  %82 = alloca double
  %83 = alloca double
  %84 = alloca i64
  %85 = alloca <2 x double>
  %86 = alloca double
  %87 = alloca double
  %88 = alloca double
  %89 = alloca i64
  %90 = alloca <2 x double>
  %91 = alloca double
  %92 = alloca double
  %93 = alloca double
  %94 = alloca double
  %95 = alloca i64
  %96 = alloca <2 x double>
  %97 = alloca double
  %98 = alloca <2 x double>
  %99 = alloca i64
  %100 = alloca <2 x double>
  %101 = alloca double
  %102 = alloca double
  %103 = alloca i64
  %104 = alloca <2 x double>
  %105 = alloca double
  %106 = alloca <2 x double>
  %107 = alloca i64
  %108 = alloca <2 x double>
  %109 = alloca double
  %110 = alloca double
  %111 = alloca double
  %112 = alloca i64
  %113 = alloca double
  %114 = alloca double
  %115 = alloca double
  %116 = alloca double
  %117 = alloca <2 x double>
  %118 = alloca double
  %119 = alloca <2 x double>
  %120 = alloca double
  %121 = alloca <2 x double>
  %122 = alloca double
  %123 = alloca <2 x double>
  %124 = alloca double
  %125 = alloca <2 x double>
  %126 = alloca double
  %127 = alloca <2 x double>
  %128 = alloca double
  %129 = alloca <2 x double>
  %130 = alloca double
  %131 = alloca <2 x double>
  %132 = alloca double
  %133 = alloca i64
  %134 = alloca <2 x double>
  %135 = alloca double
  %136 = alloca double
  %137 = alloca double
  %138 = alloca i64
  %139 = alloca i64
  %140 = alloca <2 x double>
  %141 = alloca double
  %142 = alloca double
  %143 = alloca double
  %144 = alloca double
  %145 = alloca <3 x double>
  %146 = alloca i64
  %147 = alloca <2 x double>
  %148 = alloca double
  %149 = alloca double
  %150 = alloca double
  %151 = alloca i64
  %152 = alloca <2 x double>
  %153 = alloca double
  %154 = alloca double
  %155 = alloca double
  %156 = alloca i64
  %157 = alloca <2 x double>
  %158 = alloca double
  %159 = alloca double
  %160 = alloca double
  %161 = alloca i64
  %162 = alloca <2 x double>
  %163 = alloca double
  %164 = alloca <2 x double>
  %165 = alloca i64
  %166 = alloca <2 x double>
  %167 = alloca double
  %168 = alloca double
  %169 = alloca <2 x double>
  %170 = alloca double
  %171 = alloca <2 x double>
  %172 = alloca double
  %173 = alloca i64
  %174 = alloca <2 x double>
  %175 = alloca double
  %176 = alloca double
  %177 = alloca i64
  %178 = alloca <2 x double>
  %179 = alloca double
  %180 = alloca double
  %181 = alloca double
  %182 = alloca double
  %183 = alloca <2 x double>
  %184 = alloca double
  %185 = alloca <2 x double>
  %186 = alloca double
  %187 = alloca <2 x double>
  %188 = alloca double
  %189 = alloca i64
  %190 = alloca <2 x double>
  %191 = alloca double
  %192 = alloca double
  %193 = alloca <2 x double>
  %194 = alloca double
  %195 = alloca i64
  %196 = alloca i64
  %197 = alloca <2 x double>
  %198 = alloca double
  %199 = alloca double
  %200 = alloca double
  %201 = alloca double
  %202 = alloca <2 x double>
  %203 = alloca <2 x double>
  %204 = alloca double
  %205 = alloca i64
  %206 = alloca <2 x double>
  %207 = alloca double
  %208 = alloca <2 x double>
  %209 = alloca i64
  %210 = alloca <2 x double>
  %211 = alloca double
  %212 = alloca double
  %213 = alloca double
  %214 = alloca double
  %215 = alloca double
  %216 = alloca <2 x double>
  %217 = alloca double
  %218 = alloca i64
  %219 = alloca i64
  %220 = alloca <2 x double>
  %221 = alloca double
  %222 = alloca double
  %223 = alloca <2 x double>
  %224 = alloca <2 x double>
  %225 = alloca double
  %226 = alloca i64
  %227 = alloca i64
  %228 = alloca <2 x double>
  %229 = alloca double
  %230 = alloca <2 x double>
  %231 = alloca <2 x double>
  %232 = alloca i64
  %233 = alloca <2 x double>
  %234 = alloca double
  %235 = alloca <2 x double>
  %236 = alloca i64
  %237 = alloca <2 x double>
  %238 = alloca double
  %239 = alloca <2 x double>
  %240 = alloca i64
  %241 = alloca <2 x double>
  %242 = alloca double
  %243 = alloca double
  %244 = alloca double
  %245 = alloca i64
  %246 = alloca <2 x double>
  %247 = alloca double
  %248 = alloca double
  %249 = alloca double
  %250 = alloca double
  %251 = alloca double
  %252 = alloca i64
  %253 = alloca <2 x double>
  %254 = alloca double
  %255 = alloca double
  %256 = alloca double
  %257 = alloca double
  %258 = alloca double
  %259 = alloca i64
  %260 = alloca <2 x double>
  %261 = alloca double
  %262 = alloca double
  %263 = alloca double
  %264 = alloca double
  %265 = alloca double
  %266 = alloca i64
  %267 = alloca <2 x double>
  %268 = alloca double
  %269 = alloca double
  %270 = alloca double
  %271 = alloca i64
  %272 = alloca i64
  %273 = alloca <2 x double>
  %274 = alloca double
  %275 = alloca <2 x double>
  %276 = alloca <2 x double>
  %277 = alloca <2 x double>
  %278 = alloca double
  %279 = alloca <2 x double>
  %280 = alloca double
  %281 = alloca <2 x double>
  %282 = alloca double
  %283 = alloca <2 x double>
  %284 = alloca double
  %285 = alloca <2 x double>
  %286 = alloca double
  %287 = alloca <2 x double>
  %288 = alloca double
  %289 = alloca <2 x double>
  %290 = alloca double
  %291 = alloca <2 x double>
  %292 = alloca double
  %293 = alloca <2 x double>
  %294 = alloca double
  %295 = alloca <2 x double>
  %296 = alloca double
  %297 = alloca <2 x double>
  %298 = alloca double
  %299 = alloca <2 x double>
  %300 = alloca double
  %301 = alloca <2 x double>
  %302 = alloca double
  %303 = alloca <2 x double>
  %304 = alloca double
  %305 = alloca i64
  %306 = alloca <2 x double>
  %307 = alloca double
  %308 = alloca double
  %309 = alloca double
  %310 = alloca double
  %311 = alloca double
  %312 = alloca i64
  %313 = alloca <2 x double>
  %314 = alloca double
  %315 = alloca double
  %316 = alloca i64
  %317 = alloca i64
  %318 = alloca <2 x double>
  %319 = alloca double
  %320 = alloca <4 x double>
  %321 = alloca <4 x double>
  %322 = alloca i64
  %323 = alloca i64
  %324 = alloca <2 x double>
  %325 = alloca double
  %326 = alloca <2 x double>
  %327 = alloca <2 x double>
  %328 = alloca i64
  %329 = alloca <2 x double>
  %330 = alloca double
  %331 = alloca double
  %332 = alloca double
  %333 = alloca i64
  %334 = alloca i64
  %335 = alloca <2 x double>
  %336 = alloca double
  %337 = alloca double
  %338 = alloca double
  %339 = alloca double
  %340 = alloca double
  %341 = alloca double
  %342 = alloca <2 x double>
  %343 = alloca double
  %344 = alloca i64
  %345 = alloca i64
  %346 = alloca i64
  %347 = alloca <2 x double>
  %348 = alloca double
  %349 = alloca <2 x double>
  %350 = alloca <2 x double>
  %351 = alloca <2 x double>
  %p = alloca <2 x double>
  store <2 x double> zeroinitializer, <2 x double>* %p, !vex-initializer-store !3
  %pos1 = load <2 x double>, <2 x double>* %pos
  store <2 x double> %pos1, <2 x double>* %_p
  %x2 = load <2 x double>, <2 x double>* %x
  store <2 x double> %x2, <2 x double>* %0
  %y3 = load <2 x double>, <2 x double>* %y
  store <2 x double> %y3, <2 x double>* %1
  %o4 = load <2 x double>, <2 x double>* %o
  store <2 x double> %o4, <2 x double>* %2
  call void @"affine@UUUU"(<2 x double>* %_p, <2 x double>* %0, <2 x double>* %1, <2 x double>* %2)
  %type5 = load i64, i64* %type
  %return = call i64 @"not@II"(i64 %type5)
  %352 = icmp ne i64 %return, 0
  br i1 %352, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %_p6 = load <2 x double>, <2 x double>* %_p
  %w7 = load double, double* %w
  %cast = call <2 x double> @"set@UF"(double %w7)
  %output = call <2 x double> @"mul@UU"(<2 x double> %_p6, <2 x double> %cast)
  br label %UnifiedReturnBlock

false:                                            ; preds = %__llvm_entry
  %return9 = call i64 @"lt@III"(i64 %type5, i64 35)
  %353 = icmp ne i64 %return9, 0
  br i1 %353, label %true10, label %false11

true10:                                           ; preds = %false
  %return14 = call i64 @"lt@III"(i64 %type5, i64 18)
  %354 = icmp ne i64 %return14, 0
  br i1 %354, label %true15, label %false16

false11:                                          ; preds = %false
  %return358 = call i64 @"lt@III"(i64 %type5, i64 70)
  %355 = icmp ne i64 %return358, 0
  br i1 %355, label %true359, label %false360

end12:                                            ; preds = %false1176, %false986, %false360, %false758, %false507, %false341, %false149
  %_p1203 = load <2 x double>, <2 x double>* %_p
  br label %UnifiedReturnBlock

true15:                                           ; preds = %true10
  %return19 = call i64 @"eq@III"(i64 %type5, i64 1)
  %356 = icmp ne i64 %return19, 0
  br i1 %356, label %true20, label %false21

false16:                                          ; preds = %true10
  %return166 = call i64 @"eq@III"(i64 %type5, i64 18)
  %357 = icmp ne i64 %return166, 0
  br i1 %357, label %true167, label %false168

true20:                                           ; preds = %true15
  %_p23 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p23, <2 x double>* %3
  %w24 = load double, double* %w
  store double %w24, double* %4
  call void @"V_SINUSOIDAL@UUF"(<2 x double>* %p, <2 x double>* %3, double* %4)
  %p25 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false21:                                          ; preds = %true15
  %return27 = call i64 @"eq@III"(i64 %type5, i64 2)
  %358 = icmp ne i64 %return27, 0
  br i1 %358, label %true28, label %false29

true28:                                           ; preds = %false21
  %_p31 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p31, <2 x double>* %5
  %w32 = load double, double* %w
  store double %w32, double* %6
  call void @"V_SPHERICAL@UUF"(<2 x double>* %p, <2 x double>* %5, double* %6)
  %p33 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false29:                                          ; preds = %false21
  %return35 = call i64 @"eq@III"(i64 %type5, i64 3)
  %359 = icmp ne i64 %return35, 0
  br i1 %359, label %true36, label %false37

true36:                                           ; preds = %false29
  %_p39 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p39, <2 x double>* %7
  %w40 = load double, double* %w
  store double %w40, double* %8
  call void @"V_SWIRL@UUF"(<2 x double>* %p, <2 x double>* %7, double* %8)
  %p41 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false37:                                          ; preds = %false29
  %return43 = call i64 @"eq@III"(i64 %type5, i64 4)
  %360 = icmp ne i64 %return43, 0
  br i1 %360, label %true44, label %false45

true44:                                           ; preds = %false37
  %_p47 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p47, <2 x double>* %9
  %w48 = load double, double* %w
  store double %w48, double* %10
  call void @"V_HORSESHOE@UUF"(<2 x double>* %p, <2 x double>* %9, double* %10)
  %p49 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false45:                                          ; preds = %false37
  %return51 = call i64 @"eq@III"(i64 %type5, i64 5)
  %361 = icmp ne i64 %return51, 0
  br i1 %361, label %true52, label %false53

true52:                                           ; preds = %false45
  %_p55 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p55, <2 x double>* %11
  %w56 = load double, double* %w
  store double %w56, double* %12
  call void @"V_POLAR@UUF"(<2 x double>* %p, <2 x double>* %11, double* %12)
  %p57 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false53:                                          ; preds = %false45
  %return59 = call i64 @"eq@III"(i64 %type5, i64 6)
  %362 = icmp ne i64 %return59, 0
  br i1 %362, label %true60, label %false61

true60:                                           ; preds = %false53
  %_p63 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p63, <2 x double>* %13
  %w64 = load double, double* %w
  store double %w64, double* %14
  call void @"V_HANDKERCHIEF@UUF"(<2 x double>* %p, <2 x double>* %13, double* %14)
  %p65 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false61:                                          ; preds = %false53
  %return67 = call i64 @"eq@III"(i64 %type5, i64 7)
  %363 = icmp ne i64 %return67, 0
  br i1 %363, label %true68, label %false69

true68:                                           ; preds = %false61
  %_p71 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p71, <2 x double>* %15
  %w72 = load double, double* %w
  store double %w72, double* %16
  call void @"V_HEART@UUF"(<2 x double>* %p, <2 x double>* %15, double* %16)
  %p73 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false69:                                          ; preds = %false61
  %return75 = call i64 @"eq@III"(i64 %type5, i64 8)
  %364 = icmp ne i64 %return75, 0
  br i1 %364, label %true76, label %false77

true76:                                           ; preds = %false69
  %_p79 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p79, <2 x double>* %17
  %w80 = load double, double* %w
  store double %w80, double* %18
  call void @"V_DISC@UUF"(<2 x double>* %p, <2 x double>* %17, double* %18)
  %p81 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false77:                                          ; preds = %false69
  %return83 = call i64 @"eq@III"(i64 %type5, i64 9)
  %365 = icmp ne i64 %return83, 0
  br i1 %365, label %true84, label %false85

true84:                                           ; preds = %false77
  %_p87 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p87, <2 x double>* %19
  %w88 = load double, double* %w
  store double %w88, double* %20
  call void @"V_SPIRAL@UUF"(<2 x double>* %p, <2 x double>* %19, double* %20)
  %p89 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false85:                                          ; preds = %false77
  %return91 = call i64 @"eq@III"(i64 %type5, i64 10)
  %366 = icmp ne i64 %return91, 0
  br i1 %366, label %true92, label %false93

true92:                                           ; preds = %false85
  %_p95 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p95, <2 x double>* %21
  %w96 = load double, double* %w
  store double %w96, double* %22
  call void @"V_HIPERBOLIC@UUF"(<2 x double>* %p, <2 x double>* %21, double* %22)
  %p97 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false93:                                          ; preds = %false85
  %return99 = call i64 @"eq@III"(i64 %type5, i64 11)
  %367 = icmp ne i64 %return99, 0
  br i1 %367, label %true100, label %false101

true100:                                          ; preds = %false93
  %_p103 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p103, <2 x double>* %23
  %w104 = load double, double* %w
  store double %w104, double* %24
  call void @"V_DIAMOND@UUF"(<2 x double>* %p, <2 x double>* %23, double* %24)
  %p105 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false101:                                         ; preds = %false93
  %return107 = call i64 @"eq@III"(i64 %type5, i64 12)
  %368 = icmp ne i64 %return107, 0
  br i1 %368, label %true108, label %false109

true108:                                          ; preds = %false101
  %_p111 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p111, <2 x double>* %25
  %w112 = load double, double* %w
  store double %w112, double* %26
  call void @"V_EX@UUF"(<2 x double>* %p, <2 x double>* %25, double* %26)
  %p113 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false109:                                         ; preds = %false101
  %return115 = call i64 @"eq@III"(i64 %type5, i64 13)
  %369 = icmp ne i64 %return115, 0
  br i1 %369, label %true116, label %false117

true116:                                          ; preds = %false109
  %_p119 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p119, <2 x double>* %27
  %w120 = load double, double* %w
  store double %w120, double* %28
  call void @"V_JULIA@UUF"(<2 x double>* %p, <2 x double>* %27, double* %28)
  %p121 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false117:                                         ; preds = %false109
  %return123 = call i64 @"eq@III"(i64 %type5, i64 14)
  %370 = icmp ne i64 %return123, 0
  br i1 %370, label %true124, label %false125

true124:                                          ; preds = %false117
  %_p127 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p127, <2 x double>* %29
  %w128 = load double, double* %w
  store double %w128, double* %30
  call void @"V_BENT@UUF"(<2 x double>* %p, <2 x double>* %29, double* %30)
  %p129 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false125:                                         ; preds = %false117
  %return131 = call i64 @"eq@III"(i64 %type5, i64 15)
  %371 = icmp ne i64 %return131, 0
  br i1 %371, label %true132, label %false133

true132:                                          ; preds = %false125
  %_p135 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p135, <2 x double>* %31
  %w136 = load double, double* %w
  store double %w136, double* %32
  %o137 = load <2 x double>, <2 x double>* %o
  %return138 = call double @"getcomp@FUI"(<2 x double> %o137, i64 0)
  store double %return138, double* %33
  %x139 = load <2 x double>, <2 x double>* %x
  %return140 = call double @"getcomp@FUI"(<2 x double> %x139, i64 1)
  store double %return140, double* %34
  %y141 = load <2 x double>, <2 x double>* %y
  %return142 = call double @"getcomp@FUI"(<2 x double> %y141, i64 1)
  store double %return142, double* %35
  %o143 = load <2 x double>, <2 x double>* %o
  %return144 = call double @"getcomp@FUI"(<2 x double> %o143, i64 1)
  store double %return144, double* %36
  call void @"V_WAVES@UUFFFFF"(<2 x double>* %p, <2 x double>* %31, double* %32, double* %33, double* %34, double* %35, double* %36)
  %p145 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false133:                                         ; preds = %false125
  %return147 = call i64 @"eq@III"(i64 %type5, i64 16)
  %372 = icmp ne i64 %return147, 0
  br i1 %372, label %true148, label %false149

true148:                                          ; preds = %false133
  %_p151 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p151, <2 x double>* %37
  %w152 = load double, double* %w
  store double %w152, double* %38
  call void @"V_FISHEYE@UUF"(<2 x double>* %p, <2 x double>* %37, double* %38)
  %p153 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false149:                                         ; preds = %false133
  %return155 = call i64 @"eq@III"(i64 %type5, i64 17)
  %373 = icmp ne i64 %return155, 0
  br i1 %373, label %true156, label %end12

true156:                                          ; preds = %false149
  %_p158 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p158, <2 x double>* %39
  %w159 = load double, double* %w
  store double %w159, double* %40
  %o160 = load <2 x double>, <2 x double>* %o
  %return161 = call double @"getcomp@FUI"(<2 x double> %o160, i64 0)
  store double %return161, double* %41
  %o162 = load <2 x double>, <2 x double>* %o
  %return163 = call double @"getcomp@FUI"(<2 x double> %o162, i64 1)
  store double %return163, double* %42
  call void @"V_POPCORN@UUFFF"(<2 x double>* %p, <2 x double>* %39, double* %40, double* %41, double* %42)
  %p164 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true167:                                          ; preds = %false16
  %_p170 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p170, <2 x double>* %43
  %w171 = load double, double* %w
  store double %w171, double* %44
  call void @"V_EXPONENTIAL@UUF"(<2 x double>* %p, <2 x double>* %43, double* %44)
  %p172 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false168:                                         ; preds = %false16
  %return174 = call i64 @"eq@III"(i64 %type5, i64 19)
  %374 = icmp ne i64 %return174, 0
  br i1 %374, label %true175, label %false176

true175:                                          ; preds = %false168
  %_p178 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p178, <2 x double>* %45
  %w179 = load double, double* %w
  store double %w179, double* %46
  call void @"V_POWER@UUF"(<2 x double>* %p, <2 x double>* %45, double* %46)
  %p180 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false176:                                         ; preds = %false168
  %return182 = call i64 @"eq@III"(i64 %type5, i64 20)
  %375 = icmp ne i64 %return182, 0
  br i1 %375, label %true183, label %false184

true183:                                          ; preds = %false176
  %_p186 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p186, <2 x double>* %47
  %w187 = load double, double* %w
  store double %w187, double* %48
  call void @"V_COSINE@UUF"(<2 x double>* %p, <2 x double>* %47, double* %48)
  %p188 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false184:                                         ; preds = %false176
  %return190 = call i64 @"eq@III"(i64 %type5, i64 21)
  %376 = icmp ne i64 %return190, 0
  br i1 %376, label %true191, label %false192

true191:                                          ; preds = %false184
  %_p194 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p194, <2 x double>* %49
  %w195 = load double, double* %w
  store double %w195, double* %50
  %o196 = load <2 x double>, <2 x double>* %o
  %return197 = call double @"getcomp@FUI"(<2 x double> %o196, i64 0)
  store double %return197, double* %51
  call void @"V_RINGS@UUFF"(<2 x double>* %p, <2 x double>* %49, double* %50, double* %51)
  %p198 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false192:                                         ; preds = %false184
  %return200 = call i64 @"eq@III"(i64 %type5, i64 22)
  %377 = icmp ne i64 %return200, 0
  br i1 %377, label %true201, label %false202

true201:                                          ; preds = %false192
  %_p204 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p204, <2 x double>* %52
  %w205 = load double, double* %w
  store double %w205, double* %53
  %o206 = load <2 x double>, <2 x double>* %o
  %return207 = call double @"getcomp@FUI"(<2 x double> %o206, i64 0)
  store double %return207, double* %54
  call void @"V_FAN@UUFF"(<2 x double>* %p, <2 x double>* %52, double* %53, double* %54)
  %p208 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false202:                                         ; preds = %false192
  %return210 = call i64 @"eq@III"(i64 %type5, i64 23)
  %378 = icmp ne i64 %return210, 0
  br i1 %378, label %true211, label %false212

true211:                                          ; preds = %false202
  %_p214 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p214, <2 x double>* %55
  %w215 = load double, double* %w
  store double %w215, double* %56
  call void @"V_BUBBLE@UUF"(<2 x double>* %p, <2 x double>* %55, double* %56)
  %p216 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false212:                                         ; preds = %false202
  %return218 = call i64 @"eq@III"(i64 %type5, i64 24)
  %379 = icmp ne i64 %return218, 0
  br i1 %379, label %true219, label %false220

true219:                                          ; preds = %false212
  %_p222 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p222, <2 x double>* %57
  %w223 = load double, double* %w
  store double %w223, double* %58
  call void @"V_CYLINDER@UUF"(<2 x double>* %p, <2 x double>* %57, double* %58)
  %p224 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false220:                                         ; preds = %false212
  %return226 = call i64 @"eq@III"(i64 %type5, i64 25)
  %380 = icmp ne i64 %return226, 0
  br i1 %380, label %true227, label %false228

true227:                                          ; preds = %false220
  %_p230 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p230, <2 x double>* %59
  %w231 = load double, double* %w
  store double %w231, double* %60
  call void @"V_EYEFISH@UUF"(<2 x double>* %p, <2 x double>* %59, double* %60)
  %p232 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false228:                                         ; preds = %false220
  %return234 = call i64 @"eq@III"(i64 %type5, i64 26)
  %381 = icmp ne i64 %return234, 0
  br i1 %381, label %true235, label %false236

true235:                                          ; preds = %false228
  %w238 = load double, double* %w
  store double %w238, double* %61
  call void @"V_BLUR@UF"(<2 x double>* %p, double* %61)
  %p239 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false236:                                         ; preds = %false228
  %return241 = call i64 @"eq@III"(i64 %type5, i64 27)
  %382 = icmp ne i64 %return241, 0
  br i1 %382, label %true242, label %false243

true242:                                          ; preds = %false236
  %ftype245 = load i64, i64* %ftype
  store i64 %ftype245, i64* %62
  %PRX = call i8* @"PRX@SI"(i64* %62)
  %return246 = call i8* @"concat@SSS"(i8* %PRX, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @113, i64 0, i64 0))
  %return247 = call <2 x double> @"chu@US"(i8* %return246)
  %_p248 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p248, <2 x double>* %63
  %w249 = load double, double* %w
  store double %w249, double* %64
  %return251 = call double @"getcomp@FUI"(<2 x double> %return247, i64 0)
  store double %return251, double* %65
  %return253 = call double @"getcomp@FUI"(<2 x double> %return247, i64 1)
  store double %return253, double* %66
  call void @"V_CURL@UUFFF"(<2 x double>* %p, <2 x double>* %63, double* %64, double* %65, double* %66)
  %p254 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false243:                                         ; preds = %false236
  %return256 = call i64 @"eq@III"(i64 %type5, i64 28)
  %383 = icmp ne i64 %return256, 0
  br i1 %383, label %true257, label %false258

true257:                                          ; preds = %false243
  %ftype260 = load i64, i64* %ftype
  store i64 %ftype260, i64* %67
  %PRX261 = call i8* @"PRX@SI"(i64* %67)
  %return262 = call i8* @"concat@SSS"(i8* %PRX261, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @114, i64 0, i64 0))
  %return263 = call <4 x double> @"chp@PS"(i8* %return262)
  %_p264 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p264, <2 x double>* %68
  %w265 = load double, double* %w
  store double %w265, double* %69
  %return267 = call double @"getcomp@FPI"(<4 x double> %return263, i64 0)
  store double %return267, double* %70
  %return269 = call double @"getcomp@FPI"(<4 x double> %return263, i64 1)
  store double %return269, double* %71
  %return271 = call double @"getcomp@FPI"(<4 x double> %return263, i64 2)
  store double %return271, double* %72
  %return273 = call double @"getcomp@FPI"(<4 x double> %return263, i64 3)
  store double %return273, double* %73
  call void @"V_NGON@UUFFFFF"(<2 x double>* %p, <2 x double>* %68, double* %69, double* %70, double* %71, double* %72, double* %73)
  %p274 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false258:                                         ; preds = %false243
  %return276 = call i64 @"eq@III"(i64 %type5, i64 29)
  %384 = icmp ne i64 %return276, 0
  br i1 %384, label %true277, label %false278

true277:                                          ; preds = %false258
  %ftype280 = load i64, i64* %ftype
  store i64 %ftype280, i64* %74
  %PRX281 = call i8* @"PRX@SI"(i64* %74)
  %return282 = call i8* @"concat@SSS"(i8* %PRX281, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @115, i64 0, i64 0))
  %return283 = call <4 x double> @"chp@PS"(i8* %return282)
  %_p284 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p284, <2 x double>* %75
  %w285 = load double, double* %w
  store double %w285, double* %76
  store <4 x double> %return283, <4 x double>* %77
  call void @"V_PDJ@UUFP"(<2 x double>* %p, <2 x double>* %75, double* %76, <4 x double>* %77)
  %p287 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false278:                                         ; preds = %false258
  %return289 = call i64 @"eq@III"(i64 %type5, i64 30)
  %385 = icmp ne i64 %return289, 0
  br i1 %385, label %true290, label %false291

true290:                                          ; preds = %false278
  %ftype293 = load i64, i64* %ftype
  store i64 %ftype293, i64* %78
  %PRX294 = call i8* @"PRX@SI"(i64* %78)
  %return295 = call i8* @"concat@SSS"(i8* %PRX294, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @116, i64 0, i64 0))
  %return296 = call <3 x double> @"chv@VS"(i8* %return295)
  %_p297 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p297, <2 x double>* %79
  %w298 = load double, double* %w
  store double %w298, double* %80
  %return300 = call double @"getcomp@FVI"(<3 x double> %return296, i64 1)
  store double %return300, double* %81
  %return302 = call double @"getcomp@FVI"(<3 x double> %return296, i64 0)
  store double %return302, double* %82
  %return304 = call double @"getcomp@FVI"(<3 x double> %return296, i64 2)
  store double %return304, double* %83
  call void @"V_BLOB@UUFFFF"(<2 x double>* %p, <2 x double>* %79, double* %80, double* %81, double* %82, double* %83)
  %p305 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false291:                                         ; preds = %false278
  %return307 = call i64 @"eq@III"(i64 %type5, i64 31)
  %386 = icmp ne i64 %return307, 0
  br i1 %386, label %true308, label %false309

true308:                                          ; preds = %false291
  %ftype311 = load i64, i64* %ftype
  store i64 %ftype311, i64* %84
  %PRX312 = call i8* @"PRX@SI"(i64* %84)
  %return313 = call i8* @"concat@SSS"(i8* %PRX312, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @117, i64 0, i64 0))
  %return314 = call <2 x double> @"chu@US"(i8* %return313)
  %_p315 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p315, <2 x double>* %85
  %w316 = load double, double* %w
  store double %w316, double* %86
  %return318 = call double @"getcomp@FUI"(<2 x double> %return314, i64 0)
  store double %return318, double* %87
  %return320 = call double @"getcomp@FUI"(<2 x double> %return314, i64 1)
  store double %return320, double* %88
  call void @"V_JULIAN@UUFFF"(<2 x double>* %p, <2 x double>* %85, double* %86, double* %87, double* %88)
  %p321 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false309:                                         ; preds = %false291
  %return323 = call i64 @"eq@III"(i64 %type5, i64 32)
  %387 = icmp ne i64 %return323, 0
  br i1 %387, label %true324, label %false325

true324:                                          ; preds = %false309
  %ftype327 = load i64, i64* %ftype
  store i64 %ftype327, i64* %89
  %PRX328 = call i8* @"PRX@SI"(i64* %89)
  %return329 = call i8* @"concat@SSS"(i8* %PRX328, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @118, i64 0, i64 0))
  %return330 = call <2 x double> @"chu@US"(i8* %return329)
  %_p331 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p331, <2 x double>* %90
  %w332 = load double, double* %w
  store double %w332, double* %91
  %return334 = call double @"getcomp@FUI"(<2 x double> %return330, i64 0)
  store double %return334, double* %92
  %return336 = call double @"getcomp@FUI"(<2 x double> %return330, i64 1)
  store double %return336, double* %93
  call void @"V_JULIASCOPE@UUFFF"(<2 x double>* %p, <2 x double>* %90, double* %91, double* %92, double* %93)
  %p337 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false325:                                         ; preds = %false309
  %return339 = call i64 @"eq@III"(i64 %type5, i64 33)
  %388 = icmp ne i64 %return339, 0
  br i1 %388, label %true340, label %false341

true340:                                          ; preds = %false325
  %w343 = load double, double* %w
  store double %w343, double* %94
  call void @"V_GAUSSIAN@UF"(<2 x double>* %p, double* %94)
  %p344 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false341:                                         ; preds = %false325
  %return346 = call i64 @"eq@III"(i64 %type5, i64 34)
  %389 = icmp ne i64 %return346, 0
  br i1 %389, label %true347, label %end12

true347:                                          ; preds = %false341
  %ftype349 = load i64, i64* %ftype
  store i64 %ftype349, i64* %95
  %PRX350 = call i8* @"PRX@SI"(i64* %95)
  %return351 = call i8* @"concat@SSS"(i8* %PRX350, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @119, i64 0, i64 0))
  %return352 = call <2 x double> @"chu@US"(i8* %return351)
  %_p353 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p353, <2 x double>* %96
  %w354 = load double, double* %w
  store double %w354, double* %97
  store <2 x double> %return352, <2 x double>* %98
  call void @"V_FAN2@UUFU"(<2 x double>* %p, <2 x double>* %96, double* %97, <2 x double>* %98)
  %p356 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true359:                                          ; preds = %false11
  %return363 = call i64 @"lt@III"(i64 %type5, i64 50)
  %390 = icmp ne i64 %return363, 0
  br i1 %390, label %true364, label %false365

false360:                                         ; preds = %false11
  %return781 = call i64 @"lt@III"(i64 %type5, i64 102)
  %391 = icmp ne i64 %return781, 0
  br i1 %391, label %true782, label %end12

true364:                                          ; preds = %true359
  %return368 = call i64 @"eq@III"(i64 %type5, i64 35)
  %392 = icmp ne i64 %return368, 0
  br i1 %392, label %true369, label %false370

false365:                                         ; preds = %true359
  %return543 = call i64 @"eq@III"(i64 %type5, i64 50)
  %393 = icmp ne i64 %return543, 0
  br i1 %393, label %true544, label %false545

true369:                                          ; preds = %true364
  %ftype372 = load i64, i64* %ftype
  store i64 %ftype372, i64* %99
  %PRX373 = call i8* @"PRX@SI"(i64* %99)
  %return374 = call i8* @"concat@SSS"(i8* %PRX373, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @120, i64 0, i64 0))
  %return375 = call double @"chf@FS"(i8* %return374)
  %_p376 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p376, <2 x double>* %100
  %w377 = load double, double* %w
  store double %w377, double* %101
  store double %return375, double* %102
  call void @"V_RINGS2@UUFF"(<2 x double>* %p, <2 x double>* %100, double* %101, double* %102)
  %p379 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false370:                                         ; preds = %true364
  %return381 = call i64 @"eq@III"(i64 %type5, i64 36)
  %394 = icmp ne i64 %return381, 0
  br i1 %394, label %true382, label %false383

true382:                                          ; preds = %false370
  %ftype385 = load i64, i64* %ftype
  store i64 %ftype385, i64* %103
  %PRX386 = call i8* @"PRX@SI"(i64* %103)
  %return387 = call i8* @"concat@SSS"(i8* %PRX386, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @121, i64 0, i64 0))
  %return388 = call <2 x double> @"chu@US"(i8* %return387)
  %_p389 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p389, <2 x double>* %104
  %w390 = load double, double* %w
  store double %w390, double* %105
  store <2 x double> %return388, <2 x double>* %106
  call void @"V_RECTANGLES@UUFU"(<2 x double>* %p, <2 x double>* %104, double* %105, <2 x double>* %106)
  %p392 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false383:                                         ; preds = %false370
  %return394 = call i64 @"eq@III"(i64 %type5, i64 37)
  %395 = icmp ne i64 %return394, 0
  br i1 %395, label %true395, label %false396

true395:                                          ; preds = %false383
  %ftype398 = load i64, i64* %ftype
  store i64 %ftype398, i64* %107
  %PRX399 = call i8* @"PRX@SI"(i64* %107)
  %return400 = call i8* @"concat@SSS"(i8* %PRX399, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @122, i64 0, i64 0))
  %return401 = call <2 x double> @"chu@US"(i8* %return400)
  %_p402 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p402, <2 x double>* %108
  %w403 = load double, double* %w
  store double %w403, double* %109
  %return405 = call double @"getcomp@FUI"(<2 x double> %return401, i64 0)
  store double %return405, double* %110
  %return407 = call double @"getcomp@FUI"(<2 x double> %return401, i64 1)
  store double %return407, double* %111
  call void @"V_RADIALBLUR@UUFFF"(<2 x double>* %p, <2 x double>* %108, double* %109, double* %110, double* %111)
  %p408 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false396:                                         ; preds = %false383
  %return410 = call i64 @"eq@III"(i64 %type5, i64 38)
  %396 = icmp ne i64 %return410, 0
  br i1 %396, label %true411, label %false412

true411:                                          ; preds = %false396
  %ftype414 = load i64, i64* %ftype
  store i64 %ftype414, i64* %112
  %PRX415 = call i8* @"PRX@SI"(i64* %112)
  %return416 = call i8* @"concat@SSS"(i8* %PRX415, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @123, i64 0, i64 0))
  %return417 = call <3 x double> @"chv@VS"(i8* %return416)
  %w418 = load double, double* %w
  store double %w418, double* %113
  %return420 = call double @"getcomp@FVI"(<3 x double> %return417, i64 0)
  store double %return420, double* %114
  %return422 = call double @"getcomp@FVI"(<3 x double> %return417, i64 1)
  store double %return422, double* %115
  %return424 = call double @"getcomp@FVI"(<3 x double> %return417, i64 2)
  store double %return424, double* %116
  call void @"V_PIE@UFFFF"(<2 x double>* %p, double* %113, double* %114, double* %115, double* %116)
  %p425 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false412:                                         ; preds = %false396
  %return427 = call i64 @"eq@III"(i64 %type5, i64 39)
  %397 = icmp ne i64 %return427, 0
  br i1 %397, label %true428, label %false429

true428:                                          ; preds = %false412
  %w431 = load double, double* %w
  store double %w431, double* %118
  call void @"V_ARCH@UUF"(<2 x double>* %p, <2 x double>* %117, double* %118)
  %p432 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false429:                                         ; preds = %false412
  %return434 = call i64 @"eq@III"(i64 %type5, i64 40)
  %398 = icmp ne i64 %return434, 0
  br i1 %398, label %true435, label %false436

true435:                                          ; preds = %false429
  %_p438 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p438, <2 x double>* %119
  %w439 = load double, double* %w
  store double %w439, double* %120
  call void @"V_TANGENT@UUF"(<2 x double>* %p, <2 x double>* %119, double* %120)
  %p440 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false436:                                         ; preds = %false429
  %return442 = call i64 @"eq@III"(i64 %type5, i64 41)
  %399 = icmp ne i64 %return442, 0
  br i1 %399, label %true443, label %false444

true443:                                          ; preds = %false436
  %w446 = load double, double* %w
  store double %w446, double* %122
  call void @"V_SQUARE@UUF"(<2 x double>* %p, <2 x double>* %121, double* %122)
  %p447 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false444:                                         ; preds = %false436
  %return449 = call i64 @"eq@III"(i64 %type5, i64 42)
  %400 = icmp ne i64 %return449, 0
  br i1 %400, label %true450, label %false451

true450:                                          ; preds = %false444
  %_p453 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p453, <2 x double>* %123
  %w454 = load double, double* %w
  store double %w454, double* %124
  call void @"V_RAYS@UUF"(<2 x double>* %p, <2 x double>* %123, double* %124)
  %p455 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false451:                                         ; preds = %false444
  %return457 = call i64 @"eq@III"(i64 %type5, i64 43)
  %401 = icmp ne i64 %return457, 0
  br i1 %401, label %true458, label %false459

true458:                                          ; preds = %false451
  %_p461 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p461, <2 x double>* %125
  %w462 = load double, double* %w
  store double %w462, double* %126
  call void @"V_BLADE@UUF"(<2 x double>* %p, <2 x double>* %125, double* %126)
  %p463 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false459:                                         ; preds = %false451
  %return465 = call i64 @"eq@III"(i64 %type5, i64 44)
  %402 = icmp ne i64 %return465, 0
  br i1 %402, label %true466, label %false467

true466:                                          ; preds = %false459
  %_p469 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p469, <2 x double>* %127
  %w470 = load double, double* %w
  store double %w470, double* %128
  call void @"V_SECANT2@UUF"(<2 x double>* %p, <2 x double>* %127, double* %128)
  %p471 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false467:                                         ; preds = %false459
  %return473 = call i64 @"eq@III"(i64 %type5, i64 45)
  %403 = icmp ne i64 %return473, 0
  br i1 %403, label %true474, label %false475

true474:                                          ; preds = %false467
  %_p477 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p477, <2 x double>* %129
  %w478 = load double, double* %w
  store double %w478, double* %130
  call void @"V_TWINTRIAN@UUF"(<2 x double>* %p, <2 x double>* %129, double* %130)
  %p479 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false475:                                         ; preds = %false467
  %return481 = call i64 @"eq@III"(i64 %type5, i64 46)
  %404 = icmp ne i64 %return481, 0
  br i1 %404, label %true482, label %false483

true482:                                          ; preds = %false475
  %_p485 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p485, <2 x double>* %131
  %w486 = load double, double* %w
  store double %w486, double* %132
  call void @"V_CROSS@UUF"(<2 x double>* %p, <2 x double>* %131, double* %132)
  %p487 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false483:                                         ; preds = %false475
  %return489 = call i64 @"eq@III"(i64 %type5, i64 47)
  %405 = icmp ne i64 %return489, 0
  br i1 %405, label %true490, label %false491

true490:                                          ; preds = %false483
  %ftype493 = load i64, i64* %ftype
  store i64 %ftype493, i64* %133
  %PRX494 = call i8* @"PRX@SI"(i64* %133)
  %return495 = call i8* @"concat@SSS"(i8* %PRX494, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @124, i64 0, i64 0))
  %return496 = call <2 x double> @"chu@US"(i8* %return495)
  %_p497 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p497, <2 x double>* %134
  %w498 = load double, double* %w
  store double %w498, double* %135
  %return500 = call double @"getcomp@FUI"(<2 x double> %return496, i64 0)
  store double %return500, double* %136
  %return502 = call double @"getcomp@FUI"(<2 x double> %return496, i64 1)
  store double %return502, double* %137
  call void @"V_DISC2@UUFFF"(<2 x double>* %p, <2 x double>* %134, double* %135, double* %136, double* %137)
  %p503 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false491:                                         ; preds = %false483
  %return505 = call i64 @"eq@III"(i64 %type5, i64 48)
  %406 = icmp ne i64 %return505, 0
  br i1 %406, label %true506, label %false507

true506:                                          ; preds = %false491
  %ftype509 = load i64, i64* %ftype
  store i64 %ftype509, i64* %138
  %PRX510 = call i8* @"PRX@SI"(i64* %138)
  %return511 = call i8* @"concat@SSS"(i8* %PRX510, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @125, i64 0, i64 0))
  %return512 = call <3 x double> @"chv@VS"(i8* %return511)
  %ftype513 = load i64, i64* %ftype
  store i64 %ftype513, i64* %139
  %PRX514 = call i8* @"PRX@SI"(i64* %139)
  %return515 = call i8* @"concat@SSS"(i8* %PRX514, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @126, i64 0, i64 0))
  %return516 = call <3 x double> @"chv@VS"(i8* %return515)
  %_p517 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p517, <2 x double>* %140
  %w518 = load double, double* %w
  store double %w518, double* %141
  %return520 = call double @"getcomp@FVI"(<3 x double> %return512, i64 1)
  store double %return520, double* %142
  %return522 = call double @"getcomp@FVI"(<3 x double> %return512, i64 0)
  store double %return522, double* %143
  %return524 = call double @"getcomp@FVI"(<3 x double> %return512, i64 2)
  store double %return524, double* %144
  store <3 x double> %return516, <3 x double>* %145
  call void @"V_SUPERSHAPE@UUFFFFV"(<2 x double>* %p, <2 x double>* %140, double* %141, double* %142, double* %143, double* %144, <3 x double>* %145)
  %p526 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false507:                                         ; preds = %false491
  %return528 = call i64 @"eq@III"(i64 %type5, i64 49)
  %407 = icmp ne i64 %return528, 0
  br i1 %407, label %true529, label %end12

true529:                                          ; preds = %false507
  %ftype531 = load i64, i64* %ftype
  store i64 %ftype531, i64* %146
  %PRX532 = call i8* @"PRX@SI"(i64* %146)
  %return533 = call i8* @"concat@SSS"(i8* %PRX532, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @127, i64 0, i64 0))
  %return534 = call <2 x double> @"chu@US"(i8* %return533)
  %_p535 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p535, <2 x double>* %147
  %w536 = load double, double* %w
  store double %w536, double* %148
  %return538 = call double @"getcomp@FUI"(<2 x double> %return534, i64 0)
  store double %return538, double* %149
  %return540 = call double @"getcomp@FUI"(<2 x double> %return534, i64 1)
  store double %return540, double* %150
  call void @"V_FLOWER@UUFFF"(<2 x double>* %p, <2 x double>* %147, double* %148, double* %149, double* %150)
  %p541 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true544:                                          ; preds = %false365
  %ftype547 = load i64, i64* %ftype
  store i64 %ftype547, i64* %151
  %PRX548 = call i8* @"PRX@SI"(i64* %151)
  %return549 = call i8* @"concat@SSS"(i8* %PRX548, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @128, i64 0, i64 0))
  %return550 = call <2 x double> @"chu@US"(i8* %return549)
  %_p551 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p551, <2 x double>* %152
  %w552 = load double, double* %w
  store double %w552, double* %153
  %return554 = call double @"getcomp@FUI"(<2 x double> %return550, i64 0)
  store double %return554, double* %154
  %return556 = call double @"getcomp@FUI"(<2 x double> %return550, i64 1)
  store double %return556, double* %155
  call void @"V_CONIC@UUFFF"(<2 x double>* %p, <2 x double>* %152, double* %153, double* %154, double* %155)
  %p557 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false545:                                         ; preds = %false365
  %return559 = call i64 @"eq@III"(i64 %type5, i64 51)
  %408 = icmp ne i64 %return559, 0
  br i1 %408, label %true560, label %false561

true560:                                          ; preds = %false545
  %ftype563 = load i64, i64* %ftype
  store i64 %ftype563, i64* %156
  %PRX564 = call i8* @"PRX@SI"(i64* %156)
  %return565 = call i8* @"concat@SSS"(i8* %PRX564, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @129, i64 0, i64 0))
  %return566 = call <2 x double> @"chu@US"(i8* %return565)
  %_p567 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p567, <2 x double>* %157
  %w568 = load double, double* %w
  store double %w568, double* %158
  %return570 = call double @"getcomp@FUI"(<2 x double> %return566, i64 0)
  store double %return570, double* %159
  %return572 = call double @"getcomp@FUI"(<2 x double> %return566, i64 1)
  store double %return572, double* %160
  call void @"V_PARABOLA@UUFFF"(<2 x double>* %p, <2 x double>* %157, double* %158, double* %159, double* %160)
  %p573 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false561:                                         ; preds = %false545
  %return575 = call i64 @"eq@III"(i64 %type5, i64 52)
  %409 = icmp ne i64 %return575, 0
  br i1 %409, label %true576, label %false577

true576:                                          ; preds = %false561
  %ftype579 = load i64, i64* %ftype
  store i64 %ftype579, i64* %161
  %PRX580 = call i8* @"PRX@SI"(i64* %161)
  %return581 = call i8* @"concat@SSS"(i8* %PRX580, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @130, i64 0, i64 0))
  %return582 = call <2 x double> @"chu@US"(i8* %return581)
  %_p583 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p583, <2 x double>* %162
  %w584 = load double, double* %w
  store double %w584, double* %163
  store <2 x double> %return582, <2 x double>* %164
  call void @"V_BENT2@UUFU"(<2 x double>* %p, <2 x double>* %162, double* %163, <2 x double>* %164)
  %p586 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false577:                                         ; preds = %false561
  %return588 = call i64 @"eq@III"(i64 %type5, i64 53)
  %410 = icmp ne i64 %return588, 0
  br i1 %410, label %true589, label %false590

true589:                                          ; preds = %false577
  %ftype592 = load i64, i64* %ftype
  store i64 %ftype592, i64* %165
  %PRX593 = call i8* @"PRX@SI"(i64* %165)
  %return594 = call i8* @"concat@SSS"(i8* %PRX593, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @131, i64 0, i64 0))
  %return595 = call double @"chf@FS"(i8* %return594)
  %_p596 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p596, <2 x double>* %166
  %w597 = load double, double* %w
  store double %w597, double* %167
  store double %return595, double* %168
  call void @"V_BIPOLAR@UUFF"(<2 x double>* %p, <2 x double>* %166, double* %167, double* %168)
  %p599 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false590:                                         ; preds = %false577
  %return601 = call i64 @"eq@III"(i64 %type5, i64 54)
  %411 = icmp ne i64 %return601, 0
  br i1 %411, label %true602, label %false603

true602:                                          ; preds = %false590
  %_p605 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p605, <2 x double>* %169
  %w606 = load double, double* %w
  store double %w606, double* %170
  call void @"V_BOARDERS@UUF"(<2 x double>* %p, <2 x double>* %169, double* %170)
  %p607 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false603:                                         ; preds = %false590
  %return609 = call i64 @"eq@III"(i64 %type5, i64 55)
  %412 = icmp ne i64 %return609, 0
  br i1 %412, label %true610, label %false611

true610:                                          ; preds = %false603
  %_p613 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p613, <2 x double>* %171
  %w614 = load double, double* %w
  store double %w614, double* %172
  call void @"V_BUTTERFLY@UUF"(<2 x double>* %p, <2 x double>* %171, double* %172)
  %p615 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false611:                                         ; preds = %false603
  %return617 = call i64 @"eq@III"(i64 %type5, i64 56)
  %413 = icmp ne i64 %return617, 0
  br i1 %413, label %true618, label %false619

true618:                                          ; preds = %false611
  %ftype621 = load i64, i64* %ftype
  store i64 %ftype621, i64* %173
  %PRX622 = call i8* @"PRX@SI"(i64* %173)
  %return623 = call i8* @"concat@SSS"(i8* %PRX622, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @132, i64 0, i64 0))
  %return624 = call double @"chf@FS"(i8* %return623)
  %_p625 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p625, <2 x double>* %174
  store double %return624, double* %176
  call void @"V_CELL@UUFF"(<2 x double>* %p, <2 x double>* %174, double* %175, double* %176)
  %p627 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false619:                                         ; preds = %false611
  %return629 = call i64 @"eq@III"(i64 %type5, i64 57)
  %414 = icmp ne i64 %return629, 0
  br i1 %414, label %true630, label %false631

true630:                                          ; preds = %false619
  %ftype633 = load i64, i64* %ftype
  store i64 %ftype633, i64* %177
  %PRX634 = call i8* @"PRX@SI"(i64* %177)
  %return635 = call i8* @"concat@SSS"(i8* %PRX634, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @133, i64 0, i64 0))
  %return636 = call <3 x double> @"chv@VS"(i8* %return635)
  %_p637 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p637, <2 x double>* %178
  %w638 = load double, double* %w
  store double %w638, double* %179
  %return640 = call double @"getcomp@FVI"(<3 x double> %return636, i64 0)
  store double %return640, double* %180
  %return642 = call double @"getcomp@FVI"(<3 x double> %return636, i64 1)
  store double %return642, double* %181
  %return644 = call double @"getcomp@FVI"(<3 x double> %return636, i64 2)
  store double %return644, double* %182
  call void @"V_CPOW@UUFFFF"(<2 x double>* %p, <2 x double>* %178, double* %179, double* %180, double* %181, double* %182)
  %p645 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false631:                                         ; preds = %false619
  %return647 = call i64 @"eq@III"(i64 %type5, i64 58)
  %415 = icmp ne i64 %return647, 0
  br i1 %415, label %true648, label %false649

true648:                                          ; preds = %false631
  %_p651 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p651, <2 x double>* %183
  %w652 = load double, double* %w
  store double %w652, double* %184
  call void @"V_EDISC@UUF"(<2 x double>* %p, <2 x double>* %183, double* %184)
  %p653 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false649:                                         ; preds = %false631
  %return655 = call i64 @"eq@III"(i64 %type5, i64 59)
  %416 = icmp ne i64 %return655, 0
  br i1 %416, label %true656, label %false657

true656:                                          ; preds = %false649
  %_p659 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p659, <2 x double>* %185
  %w660 = load double, double* %w
  store double %w660, double* %186
  call void @"V_ELLIPTIC@UUF"(<2 x double>* %p, <2 x double>* %185, double* %186)
  %p661 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false657:                                         ; preds = %false649
  %return663 = call i64 @"eq@III"(i64 %type5, i64 60)
  %417 = icmp ne i64 %return663, 0
  br i1 %417, label %true664, label %false665

true664:                                          ; preds = %false657
  %_p667 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p667, <2 x double>* %187
  %w668 = load double, double* %w
  store double %w668, double* %188
  call void @"V_NOISE@UUF"(<2 x double>* %p, <2 x double>* %187, double* %188)
  %p669 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false665:                                         ; preds = %false657
  %return671 = call i64 @"eq@III"(i64 %type5, i64 61)
  %418 = icmp ne i64 %return671, 0
  br i1 %418, label %true672, label %false673

true672:                                          ; preds = %false665
  %ftype675 = load i64, i64* %ftype
  store i64 %ftype675, i64* %189
  %PRX676 = call i8* @"PRX@SI"(i64* %189)
  %return677 = call i8* @"concat@SSS"(i8* %PRX676, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @134, i64 0, i64 0))
  %return678 = call double @"chf@FS"(i8* %return677)
  %_p679 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p679, <2 x double>* %190
  %w680 = load double, double* %w
  store double %w680, double* %191
  store double %return678, double* %192
  call void @"V_ESCHER@UUFF"(<2 x double>* %p, <2 x double>* %190, double* %191, double* %192)
  %p682 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false673:                                         ; preds = %false665
  %return684 = call i64 @"eq@III"(i64 %type5, i64 62)
  %419 = icmp ne i64 %return684, 0
  br i1 %419, label %true685, label %false686

true685:                                          ; preds = %false673
  %_p688 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p688, <2 x double>* %193
  %w689 = load double, double* %w
  store double %w689, double* %194
  call void @"V_FOCI@UUF"(<2 x double>* %p, <2 x double>* %193, double* %194)
  %p690 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false686:                                         ; preds = %false673
  %return692 = call i64 @"eq@III"(i64 %type5, i64 63)
  %420 = icmp ne i64 %return692, 0
  br i1 %420, label %true693, label %false694

true693:                                          ; preds = %false686
  %ftype696 = load i64, i64* %ftype
  store i64 %ftype696, i64* %195
  %PRX697 = call i8* @"PRX@SI"(i64* %195)
  %return698 = call i8* @"concat@SSS"(i8* %PRX697, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @135, i64 0, i64 0))
  %return699 = call <3 x double> @"chv@VS"(i8* %return698)
  %ftype700 = load i64, i64* %ftype
  store i64 %ftype700, i64* %196
  %PRX701 = call i8* @"PRX@SI"(i64* %196)
  %return702 = call i8* @"concat@SSS"(i8* %PRX701, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @136, i64 0, i64 0))
  %return703 = call <2 x double> @"chu@US"(i8* %return702)
  %_p704 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p704, <2 x double>* %197
  %w705 = load double, double* %w
  store double %w705, double* %198
  %return707 = call double @"getcomp@FVI"(<3 x double> %return699, i64 0)
  store double %return707, double* %199
  %return709 = call double @"getcomp@FVI"(<3 x double> %return699, i64 1)
  store double %return709, double* %200
  %return711 = call double @"getcomp@FVI"(<3 x double> %return699, i64 2)
  store double %return711, double* %201
  store <2 x double> %return703, <2 x double>* %202
  call void @"V_LAZYSUSAN@UUFFFFU"(<2 x double>* %p, <2 x double>* %197, double* %198, double* %199, double* %200, double* %201, <2 x double>* %202)
  %p713 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false694:                                         ; preds = %false686
  %return715 = call i64 @"eq@III"(i64 %type5, i64 64)
  %421 = icmp ne i64 %return715, 0
  br i1 %421, label %true716, label %false717

true716:                                          ; preds = %false694
  %_p719 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p719, <2 x double>* %203
  %w720 = load double, double* %w
  store double %w720, double* %204
  call void @"V_LOONIE@UUF"(<2 x double>* %p, <2 x double>* %203, double* %204)
  %p721 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false717:                                         ; preds = %false694
  %return723 = call i64 @"eq@III"(i64 %type5, i64 66)
  %422 = icmp ne i64 %return723, 0
  br i1 %422, label %true724, label %false725

true724:                                          ; preds = %false717
  %ftype727 = load i64, i64* %ftype
  store i64 %ftype727, i64* %205
  %PRX728 = call i8* @"PRX@SI"(i64* %205)
  %return729 = call i8* @"concat@SSS"(i8* %PRX728, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @137, i64 0, i64 0))
  %return730 = call <2 x double> @"chu@US"(i8* %return729)
  %_p731 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p731, <2 x double>* %206
  %w732 = load double, double* %w
  store double %w732, double* %207
  store <2 x double> %return730, <2 x double>* %208
  call void @"V_MODULUS@UUFU"(<2 x double>* %p, <2 x double>* %206, double* %207, <2 x double>* %208)
  %p734 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false725:                                         ; preds = %false717
  %return736 = call i64 @"eq@III"(i64 %type5, i64 67)
  %423 = icmp ne i64 %return736, 0
  br i1 %423, label %true737, label %false738

true737:                                          ; preds = %false725
  %ftype740 = load i64, i64* %ftype
  store i64 %ftype740, i64* %209
  %PRX741 = call i8* @"PRX@SI"(i64* %209)
  %return742 = call i8* @"concat@SSS"(i8* %PRX741, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @138, i64 0, i64 0))
  %return743 = call <4 x double> @"chp@PS"(i8* %return742)
  %_p744 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p744, <2 x double>* %210
  %w745 = load double, double* %w
  store double %w745, double* %211
  %return747 = call double @"getcomp@FPI"(<4 x double> %return743, i64 0)
  store double %return747, double* %212
  %return749 = call double @"getcomp@FPI"(<4 x double> %return743, i64 1)
  store double %return749, double* %213
  %return751 = call double @"getcomp@FPI"(<4 x double> %return743, i64 2)
  store double %return751, double* %214
  %return753 = call double @"getcomp@FPI"(<4 x double> %return743, i64 3)
  store double %return753, double* %215
  call void @"V_OSCOPE@UUFFFFF"(<2 x double>* %p, <2 x double>* %210, double* %211, double* %212, double* %213, double* %214, double* %215)
  %p754 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false738:                                         ; preds = %false725
  %return756 = call i64 @"eq@III"(i64 %type5, i64 68)
  %424 = icmp ne i64 %return756, 0
  br i1 %424, label %true757, label %false758

true757:                                          ; preds = %false738
  %_p760 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p760, <2 x double>* %216
  %w761 = load double, double* %w
  store double %w761, double* %217
  call void @"V_POLAR2@UUF"(<2 x double>* %p, <2 x double>* %216, double* %217)
  %p762 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false758:                                         ; preds = %false738
  %return764 = call i64 @"eq@III"(i64 %type5, i64 69)
  %425 = icmp ne i64 %return764, 0
  br i1 %425, label %true765, label %end12

true765:                                          ; preds = %false758
  %ftype767 = load i64, i64* %ftype
  store i64 %ftype767, i64* %218
  %PRX768 = call i8* @"PRX@SI"(i64* %218)
  %return769 = call i8* @"concat@SSS"(i8* %PRX768, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @139, i64 0, i64 0))
  %return770 = call double @"chf@FS"(i8* %return769)
  %ftype771 = load i64, i64* %ftype
  store i64 %ftype771, i64* %219
  %PRX772 = call i8* @"PRX@SI"(i64* %219)
  %return773 = call i8* @"concat@SSS"(i8* %PRX772, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @140, i64 0, i64 0))
  %return774 = call <2 x double> @"chu@US"(i8* %return773)
  %_p775 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p775, <2 x double>* %220
  %w776 = load double, double* %w
  store double %w776, double* %221
  store double %return770, double* %222
  store <2 x double> %return774, <2 x double>* %223
  call void @"V_POPCORN2@UUFFU"(<2 x double>* %p, <2 x double>* %220, double* %221, double* %222, <2 x double>* %223)
  %p779 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true782:                                          ; preds = %false360
  %return785 = call i64 @"lt@III"(i64 %type5, i64 86)
  %426 = icmp ne i64 %return785, 0
  br i1 %426, label %true786, label %false787

true786:                                          ; preds = %true782
  %return790 = call i64 @"eq@III"(i64 %type5, i64 70)
  %427 = icmp ne i64 %return790, 0
  br i1 %427, label %true791, label %false792

false787:                                         ; preds = %true782
  %return999 = call i64 @"eq@III"(i64 %type5, i64 86)
  %428 = icmp ne i64 %return999, 0
  br i1 %428, label %true1000, label %false1001

true791:                                          ; preds = %true786
  %_p794 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p794, <2 x double>* %224
  %w795 = load double, double* %w
  store double %w795, double* %225
  call void @"V_SCRY@UUF"(<2 x double>* %p, <2 x double>* %224, double* %225)
  %p796 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false792:                                         ; preds = %true786
  %return798 = call i64 @"eq@III"(i64 %type5, i64 71)
  %429 = icmp ne i64 %return798, 0
  br i1 %429, label %true799, label %false800

true799:                                          ; preds = %false792
  %ftype802 = load i64, i64* %ftype
  store i64 %ftype802, i64* %226
  %PRX803 = call i8* @"PRX@SI"(i64* %226)
  %return804 = call i8* @"concat@SSS"(i8* %PRX803, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @141, i64 0, i64 0))
  %return805 = call <2 x double> @"chu@US"(i8* %return804)
  %ftype806 = load i64, i64* %ftype
  store i64 %ftype806, i64* %227
  %PRX807 = call i8* @"PRX@SI"(i64* %227)
  %return808 = call i8* @"concat@SSS"(i8* %PRX807, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @142, i64 0, i64 0))
  %return809 = call <2 x double> @"chu@US"(i8* %return808)
  %_p810 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p810, <2 x double>* %228
  %w811 = load double, double* %w
  store double %w811, double* %229
  store <2 x double> %return805, <2 x double>* %230
  store <2 x double> %return809, <2 x double>* %231
  call void @"V_SEPARATION@UUFUU"(<2 x double>* %p, <2 x double>* %228, double* %229, <2 x double>* %230, <2 x double>* %231)
  %p814 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false800:                                         ; preds = %false792
  %return816 = call i64 @"eq@III"(i64 %type5, i64 72)
  %430 = icmp ne i64 %return816, 0
  br i1 %430, label %true817, label %false818

true817:                                          ; preds = %false800
  %ftype820 = load i64, i64* %ftype
  store i64 %ftype820, i64* %232
  %PRX821 = call i8* @"PRX@SI"(i64* %232)
  %return822 = call i8* @"concat@SSS"(i8* %PRX821, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @143, i64 0, i64 0))
  %return823 = call <2 x double> @"chu@US"(i8* %return822)
  %_p824 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p824, <2 x double>* %233
  %w825 = load double, double* %w
  store double %w825, double* %234
  store <2 x double> %return823, <2 x double>* %235
  call void @"V_SPLIT@UUFU"(<2 x double>* %p, <2 x double>* %233, double* %234, <2 x double>* %235)
  %p827 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false818:                                         ; preds = %false800
  %return829 = call i64 @"eq@III"(i64 %type5, i64 73)
  %431 = icmp ne i64 %return829, 0
  br i1 %431, label %true830, label %false831

true830:                                          ; preds = %false818
  %ftype833 = load i64, i64* %ftype
  store i64 %ftype833, i64* %236
  %PRX834 = call i8* @"PRX@SI"(i64* %236)
  %return835 = call i8* @"concat@SSS"(i8* %PRX834, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @144, i64 0, i64 0))
  %return836 = call <2 x double> @"chu@US"(i8* %return835)
  %_p837 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p837, <2 x double>* %237
  %w838 = load double, double* %w
  store double %w838, double* %238
  store <2 x double> %return836, <2 x double>* %239
  call void @"V_SPLITS@UUFU"(<2 x double>* %p, <2 x double>* %237, double* %238, <2 x double>* %239)
  %p840 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false831:                                         ; preds = %false818
  %return842 = call i64 @"eq@III"(i64 %type5, i64 74)
  %432 = icmp ne i64 %return842, 0
  br i1 %432, label %true843, label %false844

true843:                                          ; preds = %false831
  %ftype846 = load i64, i64* %ftype
  store i64 %ftype846, i64* %240
  %PRX847 = call i8* @"PRX@SI"(i64* %240)
  %return848 = call i8* @"concat@SSS"(i8* %PRX847, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @145, i64 0, i64 0))
  %return849 = call <2 x double> @"chu@US"(i8* %return848)
  %_p850 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p850, <2 x double>* %241
  %w851 = load double, double* %w
  store double %w851, double* %242
  %return853 = call double @"getcomp@FUI"(<2 x double> %return849, i64 0)
  store double %return853, double* %243
  %return855 = call double @"getcomp@FUI"(<2 x double> %return849, i64 1)
  store double %return855, double* %244
  call void @"V_STRIPES@UUFFF"(<2 x double>* %p, <2 x double>* %241, double* %242, double* %243, double* %244)
  %p856 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false844:                                         ; preds = %false831
  %return858 = call i64 @"eq@III"(i64 %type5, i64 75)
  %433 = icmp ne i64 %return858, 0
  br i1 %433, label %true859, label %false860

true859:                                          ; preds = %false844
  %ftype862 = load i64, i64* %ftype
  store i64 %ftype862, i64* %245
  %PRX863 = call i8* @"PRX@SI"(i64* %245)
  %return864 = call i8* @"concat@SSS"(i8* %PRX863, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @146, i64 0, i64 0))
  %return865 = call <4 x double> @"chp@PS"(i8* %return864)
  %_p866 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p866, <2 x double>* %246
  %w867 = load double, double* %w
  store double %w867, double* %247
  %return869 = call double @"getcomp@FPI"(<4 x double> %return865, i64 0)
  store double %return869, double* %248
  %return871 = call double @"getcomp@FPI"(<4 x double> %return865, i64 1)
  store double %return871, double* %249
  %return873 = call double @"getcomp@FPI"(<4 x double> %return865, i64 2)
  store double %return873, double* %250
  %return875 = call double @"getcomp@FPI"(<4 x double> %return865, i64 3)
  store double %return875, double* %251
  call void @"V_WEDGE@UUFFFFF"(<2 x double>* %p, <2 x double>* %246, double* %247, double* %248, double* %249, double* %250, double* %251)
  %p876 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false860:                                         ; preds = %false844
  %return878 = call i64 @"eq@III"(i64 %type5, i64 76)
  %434 = icmp ne i64 %return878, 0
  br i1 %434, label %true879, label %false880

true879:                                          ; preds = %false860
  %ftype882 = load i64, i64* %ftype
  store i64 %ftype882, i64* %252
  %PRX883 = call i8* @"PRX@SI"(i64* %252)
  %return884 = call i8* @"concat@SSS"(i8* %PRX883, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @147, i64 0, i64 0))
  %return885 = call <4 x double> @"chp@PS"(i8* %return884)
  %_p886 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p886, <2 x double>* %253
  %w887 = load double, double* %w
  store double %w887, double* %254
  %return889 = call double @"getcomp@FPI"(<4 x double> %return885, i64 0)
  store double %return889, double* %255
  %return891 = call double @"getcomp@FPI"(<4 x double> %return885, i64 1)
  store double %return891, double* %256
  %return893 = call double @"getcomp@FPI"(<4 x double> %return885, i64 2)
  store double %return893, double* %257
  %return895 = call double @"getcomp@FPI"(<4 x double> %return885, i64 3)
  store double %return895, double* %258
  call void @"V_WEDGEJULIA@UUFFFFF"(<2 x double>* %p, <2 x double>* %253, double* %254, double* %255, double* %256, double* %257, double* %258)
  %p896 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false880:                                         ; preds = %false860
  %return898 = call i64 @"eq@III"(i64 %type5, i64 77)
  %435 = icmp ne i64 %return898, 0
  br i1 %435, label %true899, label %false900

true899:                                          ; preds = %false880
  %ftype902 = load i64, i64* %ftype
  store i64 %ftype902, i64* %259
  %PRX903 = call i8* @"PRX@SI"(i64* %259)
  %return904 = call i8* @"concat@SSS"(i8* %PRX903, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @148, i64 0, i64 0))
  %return905 = call <4 x double> @"chp@PS"(i8* %return904)
  %_p906 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p906, <2 x double>* %260
  %w907 = load double, double* %w
  store double %w907, double* %261
  %return909 = call double @"getcomp@FPI"(<4 x double> %return905, i64 0)
  store double %return909, double* %262
  %return911 = call double @"getcomp@FPI"(<4 x double> %return905, i64 1)
  store double %return911, double* %263
  %return913 = call double @"getcomp@FPI"(<4 x double> %return905, i64 2)
  store double %return913, double* %264
  %return915 = call double @"getcomp@FPI"(<4 x double> %return905, i64 3)
  store double %return915, double* %265
  call void @"V_WEDGESPH@UUFFFFF"(<2 x double>* %p, <2 x double>* %260, double* %261, double* %262, double* %263, double* %264, double* %265)
  %p916 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false900:                                         ; preds = %false880
  %return918 = call i64 @"eq@III"(i64 %type5, i64 78)
  %436 = icmp ne i64 %return918, 0
  br i1 %436, label %true919, label %false920

true919:                                          ; preds = %false900
  %ftype922 = load i64, i64* %ftype
  store i64 %ftype922, i64* %266
  %PRX923 = call i8* @"PRX@SI"(i64* %266)
  %return924 = call i8* @"concat@SSS"(i8* %PRX923, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @149, i64 0, i64 0))
  %return925 = call <2 x double> @"chu@US"(i8* %return924)
  %_p926 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p926, <2 x double>* %267
  %w927 = load double, double* %w
  store double %w927, double* %268
  %return929 = call double @"getcomp@FUI"(<2 x double> %return925, i64 0)
  store double %return929, double* %269
  %return931 = call double @"getcomp@FUI"(<2 x double> %return925, i64 1)
  store double %return931, double* %270
  call void @"V_WHORL@UUFFF"(<2 x double>* %p, <2 x double>* %267, double* %268, double* %269, double* %270)
  %p932 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false920:                                         ; preds = %false900
  %return934 = call i64 @"eq@III"(i64 %type5, i64 79)
  %437 = icmp ne i64 %return934, 0
  br i1 %437, label %true935, label %false936

true935:                                          ; preds = %false920
  %ftype938 = load i64, i64* %ftype
  store i64 %ftype938, i64* %271
  %PRX939 = call i8* @"PRX@SI"(i64* %271)
  %return940 = call i8* @"concat@SSS"(i8* %PRX939, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @150, i64 0, i64 0))
  %return941 = call <2 x double> @"chu@US"(i8* %return940)
  %ftype942 = load i64, i64* %ftype
  store i64 %ftype942, i64* %272
  %PRX943 = call i8* @"PRX@SI"(i64* %272)
  %return944 = call i8* @"concat@SSS"(i8* %PRX943, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @151, i64 0, i64 0))
  %return945 = call <2 x double> @"chu@US"(i8* %return944)
  %_p946 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p946, <2 x double>* %273
  %w947 = load double, double* %w
  store double %w947, double* %274
  store <2 x double> %return941, <2 x double>* %275
  store <2 x double> %return945, <2 x double>* %276
  call void @"V_WAVES2@UUFUU"(<2 x double>* %p, <2 x double>* %273, double* %274, <2 x double>* %275, <2 x double>* %276)
  %p950 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false936:                                         ; preds = %false920
  %return952 = call i64 @"eq@III"(i64 %type5, i64 80)
  %438 = icmp ne i64 %return952, 0
  br i1 %438, label %true953, label %false954

true953:                                          ; preds = %false936
  %_p956 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p956, <2 x double>* %277
  %w957 = load double, double* %w
  store double %w957, double* %278
  call void @"V_COTHEEXP@UUF"(<2 x double>* %p, <2 x double>* %277, double* %278)
  %p958 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false954:                                         ; preds = %false936
  %return960 = call i64 @"eq@III"(i64 %type5, i64 81)
  %439 = icmp ne i64 %return960, 0
  br i1 %439, label %true961, label %false962

true961:                                          ; preds = %false954
  %_p964 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p964, <2 x double>* %279
  %w965 = load double, double* %w
  store double %w965, double* %280
  call void @"V_COTHELOG@UUF"(<2 x double>* %p, <2 x double>* %279, double* %280)
  %p966 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false962:                                         ; preds = %false954
  %return968 = call i64 @"eq@III"(i64 %type5, i64 82)
  %440 = icmp ne i64 %return968, 0
  br i1 %440, label %true969, label %false970

true969:                                          ; preds = %false962
  %_p972 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p972, <2 x double>* %281
  %w973 = load double, double* %w
  store double %w973, double* %282
  call void @"V_COTHESIN@UUF"(<2 x double>* %p, <2 x double>* %281, double* %282)
  %p974 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false970:                                         ; preds = %false962
  %return976 = call i64 @"eq@III"(i64 %type5, i64 83)
  %441 = icmp ne i64 %return976, 0
  br i1 %441, label %true977, label %false978

true977:                                          ; preds = %false970
  %_p980 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p980, <2 x double>* %283
  %w981 = load double, double* %w
  store double %w981, double* %284
  call void @"V_COTHECOS@UUF"(<2 x double>* %p, <2 x double>* %283, double* %284)
  %p982 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false978:                                         ; preds = %false970
  %return984 = call i64 @"eq@III"(i64 %type5, i64 84)
  %442 = icmp ne i64 %return984, 0
  br i1 %442, label %true985, label %false986

true985:                                          ; preds = %false978
  %_p988 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p988, <2 x double>* %285
  %w989 = load double, double* %w
  store double %w989, double* %286
  call void @"V_COTHETAN@UUF"(<2 x double>* %p, <2 x double>* %285, double* %286)
  %p990 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false986:                                         ; preds = %false978
  %return992 = call i64 @"eq@III"(i64 %type5, i64 85)
  %443 = icmp ne i64 %return992, 0
  br i1 %443, label %true993, label %end12

true993:                                          ; preds = %false986
  %_p995 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p995, <2 x double>* %287
  %w996 = load double, double* %w
  store double %w996, double* %288
  call void @"V_COTHESEC@UUF"(<2 x double>* %p, <2 x double>* %287, double* %288)
  %p997 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true1000:                                         ; preds = %false787
  %_p1003 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1003, <2 x double>* %289
  %w1004 = load double, double* %w
  store double %w1004, double* %290
  call void @"V_COTHECSC@UUF"(<2 x double>* %p, <2 x double>* %289, double* %290)
  %p1005 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1001:                                        ; preds = %false787
  %return1007 = call i64 @"eq@III"(i64 %type5, i64 87)
  %444 = icmp ne i64 %return1007, 0
  br i1 %444, label %true1008, label %false1009

true1008:                                         ; preds = %false1001
  %_p1011 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1011, <2 x double>* %291
  %w1012 = load double, double* %w
  store double %w1012, double* %292
  call void @"V_COTHECOT@UUF"(<2 x double>* %p, <2 x double>* %291, double* %292)
  %p1013 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1009:                                        ; preds = %false1001
  %return1015 = call i64 @"eq@III"(i64 %type5, i64 88)
  %445 = icmp ne i64 %return1015, 0
  br i1 %445, label %true1016, label %false1017

true1016:                                         ; preds = %false1009
  %_p1019 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1019, <2 x double>* %293
  %w1020 = load double, double* %w
  store double %w1020, double* %294
  call void @"V_COTHESINH@UUF"(<2 x double>* %p, <2 x double>* %293, double* %294)
  %p1021 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1017:                                        ; preds = %false1009
  %return1023 = call i64 @"eq@III"(i64 %type5, i64 89)
  %446 = icmp ne i64 %return1023, 0
  br i1 %446, label %true1024, label %false1025

true1024:                                         ; preds = %false1017
  %_p1027 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1027, <2 x double>* %295
  %w1028 = load double, double* %w
  store double %w1028, double* %296
  call void @"V_COTHECOSH@UUF"(<2 x double>* %p, <2 x double>* %295, double* %296)
  %p1029 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1025:                                        ; preds = %false1017
  %return1031 = call i64 @"eq@III"(i64 %type5, i64 90)
  %447 = icmp ne i64 %return1031, 0
  br i1 %447, label %true1032, label %false1033

true1032:                                         ; preds = %false1025
  %_p1035 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1035, <2 x double>* %297
  %w1036 = load double, double* %w
  store double %w1036, double* %298
  call void @"V_COTHETANH@UUF"(<2 x double>* %p, <2 x double>* %297, double* %298)
  %p1037 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1033:                                        ; preds = %false1025
  %return1039 = call i64 @"eq@III"(i64 %type5, i64 91)
  %448 = icmp ne i64 %return1039, 0
  br i1 %448, label %true1040, label %false1041

true1040:                                         ; preds = %false1033
  %_p1043 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1043, <2 x double>* %299
  %w1044 = load double, double* %w
  store double %w1044, double* %300
  call void @"V_COTHESECH@UUF"(<2 x double>* %p, <2 x double>* %299, double* %300)
  %p1045 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1041:                                        ; preds = %false1033
  %return1047 = call i64 @"eq@III"(i64 %type5, i64 92)
  %449 = icmp ne i64 %return1047, 0
  br i1 %449, label %true1048, label %false1049

true1048:                                         ; preds = %false1041
  %_p1051 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1051, <2 x double>* %301
  %w1052 = load double, double* %w
  store double %w1052, double* %302
  call void @"V_COTHECSCH@UUF"(<2 x double>* %p, <2 x double>* %301, double* %302)
  %p1053 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1049:                                        ; preds = %false1041
  %return1055 = call i64 @"eq@III"(i64 %type5, i64 93)
  %450 = icmp ne i64 %return1055, 0
  br i1 %450, label %true1056, label %false1057

true1056:                                         ; preds = %false1049
  %_p1059 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1059, <2 x double>* %303
  %w1060 = load double, double* %w
  store double %w1060, double* %304
  call void @"V_COTHECOTH@UUF"(<2 x double>* %p, <2 x double>* %303, double* %304)
  %p1061 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1057:                                        ; preds = %false1049
  %return1063 = call i64 @"eq@III"(i64 %type5, i64 94)
  %451 = icmp ne i64 %return1063, 0
  br i1 %451, label %true1064, label %false1065

true1064:                                         ; preds = %false1057
  %ftype1067 = load i64, i64* %ftype
  store i64 %ftype1067, i64* %305
  %PRX1068 = call i8* @"PRX@SI"(i64* %305)
  %return1069 = call i8* @"concat@SSS"(i8* %PRX1068, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @152, i64 0, i64 0))
  %return1070 = call <4 x double> @"chp@PS"(i8* %return1069)
  %_p1071 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1071, <2 x double>* %306
  %w1072 = load double, double* %w
  store double %w1072, double* %307
  %return1074 = call double @"getcomp@FPI"(<4 x double> %return1070, i64 0)
  store double %return1074, double* %308
  %return1076 = call double @"getcomp@FPI"(<4 x double> %return1070, i64 1)
  store double %return1076, double* %309
  %return1078 = call double @"getcomp@FPI"(<4 x double> %return1070, i64 2)
  store double %return1078, double* %310
  %return1080 = call double @"getcomp@FPI"(<4 x double> %return1070, i64 3)
  store double %return1080, double* %311
  call void @"V_AUGER@UUFFFFF"(<2 x double>* %p, <2 x double>* %306, double* %307, double* %308, double* %309, double* %310, double* %311)
  %p1081 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1065:                                        ; preds = %false1057
  %return1083 = call i64 @"eq@III"(i64 %type5, i64 95)
  %452 = icmp ne i64 %return1083, 0
  br i1 %452, label %true1084, label %false1085

true1084:                                         ; preds = %false1065
  %ftype1087 = load i64, i64* %ftype
  store i64 %ftype1087, i64* %312
  %PRX1088 = call i8* @"PRX@SI"(i64* %312)
  %return1089 = call i8* @"concat@SSS"(i8* %PRX1088, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @153, i64 0, i64 0))
  %return1090 = call double @"chf@FS"(i8* %return1089)
  %_p1091 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1091, <2 x double>* %313
  %w1092 = load double, double* %w
  store double %w1092, double* %314
  store double %return1090, double* %315
  call void @"V_FLUX@UUFF"(<2 x double>* %p, <2 x double>* %313, double* %314, double* %315)
  %p1094 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1085:                                        ; preds = %false1065
  %return1096 = call i64 @"eq@III"(i64 %type5, i64 96)
  %453 = icmp ne i64 %return1096, 0
  br i1 %453, label %true1097, label %false1098

true1097:                                         ; preds = %false1085
  %ftype1100 = load i64, i64* %ftype
  store i64 %ftype1100, i64* %316
  %PRX1101 = call i8* @"PRX@SI"(i64* %316)
  %return1102 = call i8* @"concat@SSS"(i8* %PRX1101, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @154, i64 0, i64 0))
  %return1103 = call <4 x double> @"chp@PS"(i8* %return1102)
  %ftype1104 = load i64, i64* %ftype
  store i64 %ftype1104, i64* %317
  %PRX1105 = call i8* @"PRX@SI"(i64* %317)
  %return1106 = call i8* @"concat@SSS"(i8* %PRX1105, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @155, i64 0, i64 0))
  %return1107 = call <4 x double> @"chp@PS"(i8* %return1106)
  %_p1108 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1108, <2 x double>* %318
  %w1109 = load double, double* %w
  store double %w1109, double* %319
  store <4 x double> %return1103, <4 x double>* %320
  store <4 x double> %return1107, <4 x double>* %321
  call void @"V_MOBIUS@UUFPP"(<2 x double>* %p, <2 x double>* %318, double* %319, <4 x double>* %320, <4 x double>* %321)
  %p1112 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1098:                                        ; preds = %false1085
  %return1114 = call i64 @"eq@III"(i64 %type5, i64 97)
  %454 = icmp ne i64 %return1114, 0
  br i1 %454, label %true1115, label %false1116

true1115:                                         ; preds = %false1098
  %ftype1118 = load i64, i64* %ftype
  store i64 %ftype1118, i64* %322
  %PRX1119 = call i8* @"PRX@SI"(i64* %322)
  %return1120 = call i8* @"concat@SSS"(i8* %PRX1119, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @156, i64 0, i64 0))
  %return1121 = call <2 x double> @"chu@US"(i8* %return1120)
  %ftype1122 = load i64, i64* %ftype
  store i64 %ftype1122, i64* %323
  %PRX1123 = call i8* @"PRX@SI"(i64* %323)
  %return1124 = call i8* @"concat@SSS"(i8* %PRX1123, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @157, i64 0, i64 0))
  %return1125 = call <2 x double> @"chu@US"(i8* %return1124)
  %_p1126 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1126, <2 x double>* %324
  %w1127 = load double, double* %w
  store double %w1127, double* %325
  store <2 x double> %return1121, <2 x double>* %326
  store <2 x double> %return1125, <2 x double>* %327
  call void @"V_CURVE@UUFUU"(<2 x double>* %p, <2 x double>* %324, double* %325, <2 x double>* %326, <2 x double>* %327)
  %p1130 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1116:                                        ; preds = %false1098
  %return1132 = call i64 @"eq@III"(i64 %type5, i64 98)
  %455 = icmp ne i64 %return1132, 0
  br i1 %455, label %true1133, label %false1134

true1133:                                         ; preds = %false1116
  %ftype1136 = load i64, i64* %ftype
  store i64 %ftype1136, i64* %328
  %PRX1137 = call i8* @"PRX@SI"(i64* %328)
  %return1138 = call i8* @"concat@SSS"(i8* %PRX1137, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @158, i64 0, i64 0))
  %return1139 = call <2 x double> @"chu@US"(i8* %return1138)
  %_p1140 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1140, <2 x double>* %329
  %w1141 = load double, double* %w
  store double %w1141, double* %330
  %return1143 = call double @"getcomp@FUI"(<2 x double> %return1139, i64 0)
  store double %return1143, double* %331
  %return1145 = call double @"getcomp@FUI"(<2 x double> %return1139, i64 1)
  store double %return1145, double* %332
  call void @"V_PERSPECTIVE@UUFFF"(<2 x double>* %p, <2 x double>* %329, double* %330, double* %331, double* %332)
  %p1146 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1134:                                        ; preds = %false1116
  %return1148 = call i64 @"eq@III"(i64 %type5, i64 99)
  %456 = icmp ne i64 %return1148, 0
  br i1 %456, label %true1149, label %false1150

true1149:                                         ; preds = %false1134
  %ftype1152 = load i64, i64* %ftype
  store i64 %ftype1152, i64* %333
  %PRX1153 = call i8* @"PRX@SI"(i64* %333)
  %return1154 = call i8* @"concat@SSS"(i8* %PRX1153, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @159, i64 0, i64 0))
  %return1155 = call <3 x double> @"chv@VS"(i8* %return1154)
  %ftype1156 = load i64, i64* %ftype
  store i64 %ftype1156, i64* %334
  %PRX1157 = call i8* @"PRX@SI"(i64* %334)
  %return1158 = call i8* @"concat@SSS"(i8* %PRX1157, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @160, i64 0, i64 0))
  %return1159 = call <2 x double> @"chu@US"(i8* %return1158)
  %_p1160 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1160, <2 x double>* %335
  %w1161 = load double, double* %w
  store double %w1161, double* %336
  %return1163 = call double @"getcomp@FVI"(<3 x double> %return1155, i64 0)
  store double %return1163, double* %337
  %return1165 = call double @"getcomp@FVI"(<3 x double> %return1155, i64 1)
  store double %return1165, double* %338
  %return1167 = call double @"getcomp@FVI"(<3 x double> %return1155, i64 2)
  store double %return1167, double* %339
  %return1169 = call double @"getcomp@FUI"(<2 x double> %return1159, i64 0)
  store double %return1169, double* %340
  %return1171 = call double @"getcomp@FUI"(<2 x double> %return1159, i64 1)
  store double %return1171, double* %341
  call void @"V_BWRAPS@UUFFFFFF"(<2 x double>* %p, <2 x double>* %335, double* %336, double* %337, double* %338, double* %339, double* %340, double* %341)
  %p1172 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1150:                                        ; preds = %false1134
  %return1174 = call i64 @"eq@III"(i64 %type5, i64 100)
  %457 = icmp ne i64 %return1174, 0
  br i1 %457, label %true1175, label %false1176

true1175:                                         ; preds = %false1150
  %_p1178 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1178, <2 x double>* %342
  %w1179 = load double, double* %w
  store double %w1179, double* %343
  call void @"V_HEMISPHERE@UUF"(<2 x double>* %p, <2 x double>* %342, double* %343)
  %p1180 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1176:                                        ; preds = %false1150
  %return1182 = call i64 @"eq@III"(i64 %type5, i64 101)
  %458 = icmp ne i64 %return1182, 0
  br i1 %458, label %true1183, label %end12

true1183:                                         ; preds = %false1176
  %ftype1185 = load i64, i64* %ftype
  store i64 %ftype1185, i64* %344
  %PRX1186 = call i8* @"PRX@SI"(i64* %344)
  %return1187 = call i8* @"concat@SSS"(i8* %PRX1186, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @161, i64 0, i64 0))
  %return1188 = call <2 x double> @"chu@US"(i8* %return1187)
  %ftype1189 = load i64, i64* %ftype
  store i64 %ftype1189, i64* %345
  %PRX1190 = call i8* @"PRX@SI"(i64* %345)
  %return1191 = call i8* @"concat@SSS"(i8* %PRX1190, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @162, i64 0, i64 0))
  %return1192 = call <2 x double> @"chu@US"(i8* %return1191)
  %ftype1193 = load i64, i64* %ftype
  store i64 %ftype1193, i64* %346
  %PRX1194 = call i8* @"PRX@SI"(i64* %346)
  %return1195 = call i8* @"concat@SSS"(i8* %PRX1194, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @163, i64 0, i64 0))
  %return1196 = call <2 x double> @"chu@US"(i8* %return1195)
  %_p1197 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1197, <2 x double>* %347
  %w1198 = load double, double* %w
  store double %w1198, double* %348
  store <2 x double> %return1188, <2 x double>* %349
  store <2 x double> %return1192, <2 x double>* %350
  store <2 x double> %return1196, <2 x double>* %351
  call void @"V_POLYNOMIAL@UUFUUU"(<2 x double>* %p, <2 x double>* %347, double* %348, <2 x double>* %349, <2 x double>* %350, <2 x double>* %351)
  %p1202 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %true1183, %true1175, %true1149, %true1133, %true1115, %true1097, %true1084, %true1064, %true1056, %true1048, %true1040, %true1032, %true1024, %true1016, %true1008, %true1000, %true993, %true985, %true977, %true969, %true961, %true953, %true935, %true919, %true899, %true879, %true859, %true843, %true830, %true817, %true799, %true791, %true765, %true757, %true737, %true724, %true716, %true693, %true685, %true672, %true664, %true656, %true648, %true630, %true618, %true610, %true602, %true589, %true576, %true560, %true544, %true529, %true506, %true490, %true482, %true474, %true466, %true458, %true450, %true443, %true435, %true428, %true411, %true395, %true382, %true369, %true347, %true340, %true324, %true308, %true290, %true277, %true257, %true242, %true235, %true227, %true219, %true211, %true201, %true191, %true183, %true175, %true167, %true156, %true148, %true132, %true124, %true116, %true108, %true100, %true92, %true84, %true76, %true68, %true60, %true52, %true44, %true36, %true28, %true20, %end12, %true
  %UnifiedRetVal = phi <2 x double> [ %output, %true ], [ %_p1203, %end12 ], [ %p25, %true20 ], [ %p33, %true28 ], [ %p41, %true36 ], [ %p49, %true44 ], [ %p57, %true52 ], [ %p65, %true60 ], [ %p73, %true68 ], [ %p81, %true76 ], [ %p89, %true84 ], [ %p97, %true92 ], [ %p105, %true100 ], [ %p113, %true108 ], [ %p121, %true116 ], [ %p129, %true124 ], [ %p145, %true132 ], [ %p153, %true148 ], [ %p164, %true156 ], [ %p172, %true167 ], [ %p180, %true175 ], [ %p188, %true183 ], [ %p198, %true191 ], [ %p208, %true201 ], [ %p216, %true211 ], [ %p224, %true219 ], [ %p232, %true227 ], [ %p239, %true235 ], [ %p254, %true242 ], [ %p274, %true257 ], [ %p287, %true277 ], [ %p305, %true290 ], [ %p321, %true308 ], [ %p337, %true324 ], [ %p344, %true340 ], [ %p356, %true347 ], [ %p379, %true369 ], [ %p392, %true382 ], [ %p408, %true395 ], [ %p425, %true411 ], [ %p432, %true428 ], [ %p440, %true435 ], [ %p447, %true443 ], [ %p455, %true450 ], [ %p463, %true458 ], [ %p471, %true466 ], [ %p479, %true474 ], [ %p487, %true482 ], [ %p503, %true490 ], [ %p526, %true506 ], [ %p541, %true529 ], [ %p557, %true544 ], [ %p573, %true560 ], [ %p586, %true576 ], [ %p599, %true589 ], [ %p607, %true602 ], [ %p615, %true610 ], [ %p627, %true618 ], [ %p645, %true630 ], [ %p653, %true648 ], [ %p661, %true656 ], [ %p669, %true664 ], [ %p682, %true672 ], [ %p690, %true685 ], [ %p713, %true693 ], [ %p721, %true716 ], [ %p734, %true724 ], [ %p754, %true737 ], [ %p762, %true757 ], [ %p779, %true765 ], [ %p796, %true791 ], [ %p814, %true799 ], [ %p827, %true817 ], [ %p840, %true830 ], [ %p856, %true843 ], [ %p876, %true859 ], [ %p896, %true879 ], [ %p916, %true899 ], [ %p932, %true919 ], [ %p950, %true935 ], [ %p958, %true953 ], [ %p966, %true961 ], [ %p974, %true969 ], [ %p982, %true977 ], [ %p990, %true985 ], [ %p997, %true993 ], [ %p1005, %true1000 ], [ %p1013, %true1008 ], [ %p1021, %true1016 ], [ %p1029, %true1024 ], [ %p1037, %true1032 ], [ %p1045, %true1040 ], [ %p1053, %true1048 ], [ %p1061, %true1056 ], [ %p1081, %true1064 ], [ %p1094, %true1084 ], [ %p1112, %true1097 ], [ %p1130, %true1115 ], [ %p1146, %true1133 ], [ %p1172, %true1149 ], [ %p1180, %true1175 ], [ %p1202, %true1183 ]
  ret <2 x double> %UnifiedRetVal
}

; Function Attrs: alwaysinline nounwind
define private void @"_TheFractalFlameAlgorithm@I[II[FFFFV"(i64* %_bound_ptnum, i64** %_bound_VACTIVE, i64* %_bound_XAOS, double** %_bound_XAOS_TO, double* %_bound_pscale, double* %_bound_COORD, double* %_bound_Alpha, <3 x double>* %_bound_P) #0 {
__llvm_entry:
  %__tmp = alloca <2 x double>
  %SYS = alloca %gemSYS
  %GEM = alloca %gem
  %0 = alloca i64*
  %1 = alloca %gemSYS
  %v1GMP = alloca %gemPrm
  %v2GMP = alloca %gemPrm
  %v3GMP = alloca %gemPrm
  %v4GMP = alloca %gemPrm
  %p1GMP = alloca %gemPrm
  %2 = alloca i8**
  %3 = alloca i64*
  %4 = alloca double*
  %5 = alloca i8**
  %6 = alloca i64*
  %7 = alloca double*
  %8 = alloca i8**
  %9 = alloca i64*
  %10 = alloca double*
  %11 = alloca i8**
  %12 = alloca i64*
  %13 = alloca double*
  %14 = alloca i8**
  %15 = alloca i64*
  %16 = alloca double*
  %__mem = alloca <2 x double>
  %17 = alloca i64
  %18 = alloca <2 x double>
  %19 = alloca <2 x double>
  %20 = alloca <2 x double>
  %21 = alloca <2 x double>
  %22 = alloca double
  %23 = alloca %gemPrm
  %24 = alloca i64
  %25 = alloca i64
  %26 = alloca <2 x double>
  %27 = alloca <2 x double>
  %28 = alloca <2 x double>
  %29 = alloca <2 x double>
  %30 = alloca double
  %31 = alloca %gemPrm
  %32 = alloca i64
  %33 = alloca i64
  %34 = alloca <2 x double>
  %35 = alloca <2 x double>
  %36 = alloca <2 x double>
  %37 = alloca <2 x double>
  %38 = alloca double
  %39 = alloca %gemPrm
  %40 = alloca i64
  %41 = alloca i64
  %42 = alloca <2 x double>
  %43 = alloca <2 x double>
  %44 = alloca <2 x double>
  %45 = alloca <2 x double>
  %46 = alloca double
  %47 = alloca %gemPrm
  %48 = alloca i64
  %49 = alloca i64
  %50 = alloca <2 x double>
  %51 = alloca <2 x double>
  %52 = alloca <2 x double>
  %53 = alloca <2 x double>
  %54 = alloca double
  %55 = alloca %gemPrm
  %56 = alloca i64
  %57 = alloca i64
  %58 = alloca <2 x double>
  %59 = alloca <2 x double>
  %60 = alloca <2 x double>
  %61 = alloca <2 x double>
  %62 = alloca double
  %63 = alloca <2 x double>
  %64 = alloca <2 x double>
  %65 = alloca <2 x double>
  %66 = alloca i64
  %67 = alloca <2 x double>
  %68 = alloca double
  %69 = alloca %gemPrm
  %70 = alloca i64
  %71 = alloca i64
  %72 = alloca <2 x double>
  %73 = alloca <2 x double>
  %74 = alloca <2 x double>
  %75 = alloca <2 x double>
  %76 = alloca double
  %77 = alloca %gemPrm
  %78 = alloca i64
  %79 = alloca i64
  %80 = alloca <2 x double>
  %81 = alloca <2 x double>
  %82 = alloca <2 x double>
  %83 = alloca <2 x double>
  %84 = alloca double
  %85 = alloca %gemPrm
  %86 = alloca i64
  %87 = alloca i64
  %88 = alloca <2 x double>
  %89 = alloca <2 x double>
  %90 = alloca <2 x double>
  %91 = alloca <2 x double>
  %92 = alloca double
  %93 = alloca %gemPrm
  %94 = alloca i64
  %95 = alloca i64
  %96 = alloca <2 x double>
  %97 = alloca <2 x double>
  %98 = alloca <2 x double>
  %99 = alloca <2 x double>
  %100 = alloca double
  %101 = alloca <2 x double>
  %102 = alloca <2 x double>
  %103 = alloca <2 x double>
  %104 = alloca i64
  store <2 x double> zeroinitializer, <2 x double>* %__tmp, !vex-initializer-store !3
  %SYS1 = call %gemSYS @"gemSYS@Z6gemSYSM10N3TMGIN2FFIN3PFFIN3RIPIN3SYMIN6iter_fIN4iterIN8sym_modeIN2MBIN6mb_modF"()
  %SYS1.fca.0.extract = extractvalue %gemSYS %SYS1, 0
  %SYS1.fca.0.gep = getelementptr inbounds %gemSYS, %gemSYS* %SYS, i32 0, i32 0
  store i64 %SYS1.fca.0.extract, i64* %SYS1.fca.0.gep
  %SYS1.fca.1.extract = extractvalue %gemSYS %SYS1, 1
  %SYS1.fca.1.gep = getelementptr inbounds %gemSYS, %gemSYS* %SYS, i32 0, i32 1
  store i64 %SYS1.fca.1.extract, i64* %SYS1.fca.1.gep
  %SYS1.fca.2.extract = extractvalue %gemSYS %SYS1, 2
  %SYS1.fca.2.gep = getelementptr inbounds %gemSYS, %gemSYS* %SYS, i32 0, i32 2
  store i64 %SYS1.fca.2.extract, i64* %SYS1.fca.2.gep
  %SYS1.fca.3.extract = extractvalue %gemSYS %SYS1, 3
  %SYS1.fca.3.gep = getelementptr inbounds %gemSYS, %gemSYS* %SYS, i32 0, i32 3
  store i64 %SYS1.fca.3.extract, i64* %SYS1.fca.3.gep
  %SYS1.fca.4.extract = extractvalue %gemSYS %SYS1, 4
  %SYS1.fca.4.gep = getelementptr inbounds %gemSYS, %gemSYS* %SYS, i32 0, i32 4
  store i64 %SYS1.fca.4.extract, i64* %SYS1.fca.4.gep
  %SYS1.fca.5.extract = extractvalue %gemSYS %SYS1, 5
  %SYS1.fca.5.gep = getelementptr inbounds %gemSYS, %gemSYS* %SYS, i32 0, i32 5
  store i64 %SYS1.fca.5.extract, i64* %SYS1.fca.5.gep
  %SYS1.fca.6.extract = extractvalue %gemSYS %SYS1, 6
  %SYS1.fca.6.gep = getelementptr inbounds %gemSYS, %gemSYS* %SYS, i32 0, i32 6
  store i64 %SYS1.fca.6.extract, i64* %SYS1.fca.6.gep
  %SYS1.fca.7.extract = extractvalue %gemSYS %SYS1, 7
  %SYS1.fca.7.gep = getelementptr inbounds %gemSYS, %gemSYS* %SYS, i32 0, i32 7
  store i64 %SYS1.fca.7.extract, i64* %SYS1.fca.7.gep
  %SYS1.fca.8.extract = extractvalue %gemSYS %SYS1, 8
  %SYS1.fca.8.gep = getelementptr inbounds %gemSYS, %gemSYS* %SYS, i32 0, i32 8
  store i64 %SYS1.fca.8.extract, i64* %SYS1.fca.8.gep
  %SYS1.fca.9.extract = extractvalue %gemSYS %SYS1, 9
  %SYS1.fca.9.gep = getelementptr inbounds %gemSYS, %gemSYS* %SYS, i32 0, i32 9
  store double %SYS1.fca.9.extract, double* %SYS1.fca.9.gep
  call void @"gemSYSBuild@Z6gemSYSM10N3TMGIN2FFIN3PFFIN3RIPIN3SYMIN6iter_fIN4iterIN8sym_modeIN2MBIN6mb_modF"(%gemSYS* %SYS)
  %GEM2 = call %gem @"gem@Z3gemM38N6v1type[IN6v2type[IN6v3type[IN6v4type[IN6p1type[IN7pp1type[IN5POSTL[IN8ffv1typeIN8ffv2typeIN8ffv3typeIN8ffp1typeIN3v1w[FN3v2w[FN3v3w[FN3v4w[FN3p1w[FN4pp1w[FN3CLR[FN8ONEMINUS[FN5ALPHA[FN5ffv1wFN5ffv2wFN5ffv3wFN5ffp1wFN3grtFN1x[UN1y[UN1o[UN2px[UN2py[UN2po[UN2fxUN2fyUN2foUN3pfxUN3pfyUN3pfoUN4sIDX[S"()
  %GEM2.fca.0.extract = extractvalue %gem %GEM2, 0
  %GEM2.fca.0.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 0
  store i64* %GEM2.fca.0.extract, i64** %GEM2.fca.0.gep
  %GEM2.fca.1.extract = extractvalue %gem %GEM2, 1
  %GEM2.fca.1.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 1
  store i64* %GEM2.fca.1.extract, i64** %GEM2.fca.1.gep
  %GEM2.fca.2.extract = extractvalue %gem %GEM2, 2
  %GEM2.fca.2.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 2
  store i64* %GEM2.fca.2.extract, i64** %GEM2.fca.2.gep
  %GEM2.fca.3.extract = extractvalue %gem %GEM2, 3
  %GEM2.fca.3.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 3
  store i64* %GEM2.fca.3.extract, i64** %GEM2.fca.3.gep
  %GEM2.fca.4.extract = extractvalue %gem %GEM2, 4
  %GEM2.fca.4.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 4
  store i64* %GEM2.fca.4.extract, i64** %GEM2.fca.4.gep
  %GEM2.fca.5.extract = extractvalue %gem %GEM2, 5
  %GEM2.fca.5.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 5
  store i64* %GEM2.fca.5.extract, i64** %GEM2.fca.5.gep
  %GEM2.fca.6.extract = extractvalue %gem %GEM2, 6
  %GEM2.fca.6.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 6
  store i64* %GEM2.fca.6.extract, i64** %GEM2.fca.6.gep
  %GEM2.fca.7.extract = extractvalue %gem %GEM2, 7
  %GEM2.fca.7.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 7
  store i64 %GEM2.fca.7.extract, i64* %GEM2.fca.7.gep
  %GEM2.fca.8.extract = extractvalue %gem %GEM2, 8
  %GEM2.fca.8.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 8
  store i64 %GEM2.fca.8.extract, i64* %GEM2.fca.8.gep
  %GEM2.fca.9.extract = extractvalue %gem %GEM2, 9
  %GEM2.fca.9.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 9
  store i64 %GEM2.fca.9.extract, i64* %GEM2.fca.9.gep
  %GEM2.fca.10.extract = extractvalue %gem %GEM2, 10
  %GEM2.fca.10.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 10
  store i64 %GEM2.fca.10.extract, i64* %GEM2.fca.10.gep
  %GEM2.fca.11.extract = extractvalue %gem %GEM2, 11
  %GEM2.fca.11.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 11
  store double* %GEM2.fca.11.extract, double** %GEM2.fca.11.gep
  %GEM2.fca.12.extract = extractvalue %gem %GEM2, 12
  %GEM2.fca.12.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 12
  store double* %GEM2.fca.12.extract, double** %GEM2.fca.12.gep
  %GEM2.fca.13.extract = extractvalue %gem %GEM2, 13
  %GEM2.fca.13.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 13
  store double* %GEM2.fca.13.extract, double** %GEM2.fca.13.gep
  %GEM2.fca.14.extract = extractvalue %gem %GEM2, 14
  %GEM2.fca.14.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 14
  store double* %GEM2.fca.14.extract, double** %GEM2.fca.14.gep
  %GEM2.fca.15.extract = extractvalue %gem %GEM2, 15
  %GEM2.fca.15.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 15
  store double* %GEM2.fca.15.extract, double** %GEM2.fca.15.gep
  %GEM2.fca.16.extract = extractvalue %gem %GEM2, 16
  %GEM2.fca.16.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 16
  store double* %GEM2.fca.16.extract, double** %GEM2.fca.16.gep
  %GEM2.fca.17.extract = extractvalue %gem %GEM2, 17
  %GEM2.fca.17.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 17
  store double* %GEM2.fca.17.extract, double** %GEM2.fca.17.gep
  %GEM2.fca.18.extract = extractvalue %gem %GEM2, 18
  %GEM2.fca.18.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 18
  store double* %GEM2.fca.18.extract, double** %GEM2.fca.18.gep
  %GEM2.fca.19.extract = extractvalue %gem %GEM2, 19
  %GEM2.fca.19.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 19
  store double* %GEM2.fca.19.extract, double** %GEM2.fca.19.gep
  %GEM2.fca.20.extract = extractvalue %gem %GEM2, 20
  %GEM2.fca.20.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 20
  store double %GEM2.fca.20.extract, double* %GEM2.fca.20.gep
  %GEM2.fca.21.extract = extractvalue %gem %GEM2, 21
  %GEM2.fca.21.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 21
  store double %GEM2.fca.21.extract, double* %GEM2.fca.21.gep
  %GEM2.fca.22.extract = extractvalue %gem %GEM2, 22
  %GEM2.fca.22.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 22
  store double %GEM2.fca.22.extract, double* %GEM2.fca.22.gep
  %GEM2.fca.23.extract = extractvalue %gem %GEM2, 23
  %GEM2.fca.23.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 23
  store double %GEM2.fca.23.extract, double* %GEM2.fca.23.gep
  %GEM2.fca.24.extract = extractvalue %gem %GEM2, 24
  %GEM2.fca.24.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 24
  store double %GEM2.fca.24.extract, double* %GEM2.fca.24.gep
  %GEM2.fca.25.extract = extractvalue %gem %GEM2, 25
  %GEM2.fca.25.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 25
  store <2 x double>* %GEM2.fca.25.extract, <2 x double>** %GEM2.fca.25.gep
  %GEM2.fca.26.extract = extractvalue %gem %GEM2, 26
  %GEM2.fca.26.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 26
  store <2 x double>* %GEM2.fca.26.extract, <2 x double>** %GEM2.fca.26.gep
  %GEM2.fca.27.extract = extractvalue %gem %GEM2, 27
  %GEM2.fca.27.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 27
  store <2 x double>* %GEM2.fca.27.extract, <2 x double>** %GEM2.fca.27.gep
  %GEM2.fca.28.extract = extractvalue %gem %GEM2, 28
  %GEM2.fca.28.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 28
  store <2 x double>* %GEM2.fca.28.extract, <2 x double>** %GEM2.fca.28.gep
  %GEM2.fca.29.extract = extractvalue %gem %GEM2, 29
  %GEM2.fca.29.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 29
  store <2 x double>* %GEM2.fca.29.extract, <2 x double>** %GEM2.fca.29.gep
  %GEM2.fca.30.extract = extractvalue %gem %GEM2, 30
  %GEM2.fca.30.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 30
  store <2 x double>* %GEM2.fca.30.extract, <2 x double>** %GEM2.fca.30.gep
  %GEM2.fca.31.extract = extractvalue %gem %GEM2, 31
  %GEM2.fca.31.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 31
  store <2 x double> %GEM2.fca.31.extract, <2 x double>* %GEM2.fca.31.gep
  %GEM2.fca.32.extract = extractvalue %gem %GEM2, 32
  %GEM2.fca.32.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 32
  store <2 x double> %GEM2.fca.32.extract, <2 x double>* %GEM2.fca.32.gep
  %GEM2.fca.33.extract = extractvalue %gem %GEM2, 33
  %GEM2.fca.33.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 33
  store <2 x double> %GEM2.fca.33.extract, <2 x double>* %GEM2.fca.33.gep
  %GEM2.fca.34.extract = extractvalue %gem %GEM2, 34
  %GEM2.fca.34.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 34
  store <2 x double> %GEM2.fca.34.extract, <2 x double>* %GEM2.fca.34.gep
  %GEM2.fca.35.extract = extractvalue %gem %GEM2, 35
  %GEM2.fca.35.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 35
  store <2 x double> %GEM2.fca.35.extract, <2 x double>* %GEM2.fca.35.gep
  %GEM2.fca.36.extract = extractvalue %gem %GEM2, 36
  %GEM2.fca.36.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 36
  store <2 x double> %GEM2.fca.36.extract, <2 x double>* %GEM2.fca.36.gep
  %GEM2.fca.37.extract = extractvalue %gem %GEM2, 37
  %GEM2.fca.37.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 37
  store i8** %GEM2.fca.37.extract, i8*** %GEM2.fca.37.gep
  %_bound_VACTIVE3 = load i64*, i64** %_bound_VACTIVE
  store i64* %_bound_VACTIVE3, i64** %0
  %SYS4.fca.0.load = load i64, i64* %SYS1.fca.0.gep
  %SYS4.fca.0.insert = insertvalue %gemSYS undef, i64 %SYS4.fca.0.load, 0
  %SYS4.fca.1.load = load i64, i64* %SYS1.fca.1.gep
  %SYS4.fca.1.insert = insertvalue %gemSYS %SYS4.fca.0.insert, i64 %SYS4.fca.1.load, 1
  %SYS4.fca.2.load = load i64, i64* %SYS1.fca.2.gep
  %SYS4.fca.2.insert = insertvalue %gemSYS %SYS4.fca.1.insert, i64 %SYS4.fca.2.load, 2
  %SYS4.fca.3.load = load i64, i64* %SYS1.fca.3.gep
  %SYS4.fca.3.insert = insertvalue %gemSYS %SYS4.fca.2.insert, i64 %SYS4.fca.3.load, 3
  %SYS4.fca.4.load = load i64, i64* %SYS1.fca.4.gep
  %SYS4.fca.4.insert = insertvalue %gemSYS %SYS4.fca.3.insert, i64 %SYS4.fca.4.load, 4
  %SYS4.fca.5.load = load i64, i64* %SYS1.fca.5.gep
  %SYS4.fca.5.insert = insertvalue %gemSYS %SYS4.fca.4.insert, i64 %SYS4.fca.5.load, 5
  %SYS4.fca.6.load = load i64, i64* %SYS1.fca.6.gep
  %SYS4.fca.6.insert = insertvalue %gemSYS %SYS4.fca.5.insert, i64 %SYS4.fca.6.load, 6
  %SYS4.fca.7.load = load i64, i64* %SYS1.fca.7.gep
  %SYS4.fca.7.insert = insertvalue %gemSYS %SYS4.fca.6.insert, i64 %SYS4.fca.7.load, 7
  %SYS4.fca.8.load = load i64, i64* %SYS1.fca.8.gep
  %SYS4.fca.8.insert = insertvalue %gemSYS %SYS4.fca.7.insert, i64 %SYS4.fca.8.load, 8
  %SYS4.fca.9.load = load double, double* %SYS1.fca.9.gep
  %SYS4.fca.0.gep = getelementptr inbounds %gemSYS, %gemSYS* %1, i32 0, i32 0
  store i64 %SYS4.fca.0.load, i64* %SYS4.fca.0.gep
  %SYS4.fca.1.gep = getelementptr inbounds %gemSYS, %gemSYS* %1, i32 0, i32 1
  store i64 %SYS4.fca.1.load, i64* %SYS4.fca.1.gep
  %SYS4.fca.2.gep = getelementptr inbounds %gemSYS, %gemSYS* %1, i32 0, i32 2
  store i64 %SYS4.fca.2.load, i64* %SYS4.fca.2.gep
  %SYS4.fca.3.gep = getelementptr inbounds %gemSYS, %gemSYS* %1, i32 0, i32 3
  store i64 %SYS4.fca.3.load, i64* %SYS4.fca.3.gep
  %SYS4.fca.4.gep = getelementptr inbounds %gemSYS, %gemSYS* %1, i32 0, i32 4
  store i64 %SYS4.fca.4.load, i64* %SYS4.fca.4.gep
  %SYS4.fca.5.gep = getelementptr inbounds %gemSYS, %gemSYS* %1, i32 0, i32 5
  store i64 %SYS4.fca.5.load, i64* %SYS4.fca.5.gep
  %SYS4.fca.6.gep = getelementptr inbounds %gemSYS, %gemSYS* %1, i32 0, i32 6
  store i64 %SYS4.fca.6.load, i64* %SYS4.fca.6.gep
  %SYS4.fca.7.gep = getelementptr inbounds %gemSYS, %gemSYS* %1, i32 0, i32 7
  store i64 %SYS4.fca.7.load, i64* %SYS4.fca.7.gep
  %SYS4.fca.8.gep = getelementptr inbounds %gemSYS, %gemSYS* %1, i32 0, i32 8
  store i64 %SYS4.fca.8.load, i64* %SYS4.fca.8.gep
  %SYS4.fca.9.gep = getelementptr inbounds %gemSYS, %gemSYS* %1, i32 0, i32 9
  store double %SYS4.fca.9.load, double* %SYS4.fca.9.gep
  call void @"gemBuild@Z3gemM38N6v1type[IN6v2type[IN6v3type[IN6v4type[IN6p1type[IN7pp1type[IN5POSTL[IN8ffv1typeIN8ffv2typeIN8ffv3typeIN8ffp1typeIN3v1w[FN3v2w[FN3v3w[FN3v4w[FN3p1w[FN4pp1w[FN3CLR[FN8ONEMINUS[FN5ALPHA[FN5ffv1wFN5ffv2wFN5ffv3wFN5ffp1wFN3grtFN1x[UN1y[UN1o[UN2px[UN2py[UN2po[UN2fxUN2fyUN2foUN3pfxUN3pfyUN3pfoUN4sIDX[S[IZ6gemSYSM10N3TMGIN2FFIN3PFFIN3RIPIN3SYMIN6iter_fIN4iterIN8sym_modeIN2MBIN6mb_modF"(%gem* %GEM, i64** %0, %gemSYS* %1)
  %SYS5.fca.0.load = load i64, i64* %SYS1.fca.0.gep
  %SYS5.fca.0.insert = insertvalue %gemSYS undef, i64 %SYS5.fca.0.load, 0
  %SYS5.fca.1.load = load i64, i64* %SYS1.fca.1.gep
  %SYS5.fca.1.insert = insertvalue %gemSYS %SYS5.fca.0.insert, i64 %SYS5.fca.1.load, 1
  %SYS5.fca.2.load = load i64, i64* %SYS1.fca.2.gep
  %SYS5.fca.2.insert = insertvalue %gemSYS %SYS5.fca.1.insert, i64 %SYS5.fca.2.load, 2
  %SYS5.fca.3.load = load i64, i64* %SYS1.fca.3.gep
  %SYS5.fca.3.insert = insertvalue %gemSYS %SYS5.fca.2.insert, i64 %SYS5.fca.3.load, 3
  %SYS5.fca.4.load = load i64, i64* %SYS1.fca.4.gep
  %SYS5.fca.4.insert = insertvalue %gemSYS %SYS5.fca.3.insert, i64 %SYS5.fca.4.load, 4
  %SYS5.fca.5.load = load i64, i64* %SYS1.fca.5.gep
  %SYS5.fca.5.insert = insertvalue %gemSYS %SYS5.fca.4.insert, i64 %SYS5.fca.5.load, 5
  %SYS5.fca.6.load = load i64, i64* %SYS1.fca.6.gep
  %SYS5.fca.6.insert = insertvalue %gemSYS %SYS5.fca.5.insert, i64 %SYS5.fca.6.load, 6
  %SYS5.fca.7.load = load i64, i64* %SYS1.fca.7.gep
  %SYS5.fca.7.insert = insertvalue %gemSYS %SYS5.fca.6.insert, i64 %SYS5.fca.7.load, 7
  %SYS5.fca.8.load = load i64, i64* %SYS1.fca.8.gep
  %SYS5.fca.8.insert = insertvalue %gemSYS %SYS5.fca.7.insert, i64 %SYS5.fca.8.load, 8
  %SYS5.fca.9.load = load double, double* %SYS1.fca.9.gep
  %GEM7.fca.0.load = load i64*, i64** %GEM2.fca.0.gep
  %GEM7.fca.0.insert = insertvalue %gem undef, i64* %GEM7.fca.0.load, 0
  %GEM7.fca.1.load = load i64*, i64** %GEM2.fca.1.gep
  %GEM7.fca.1.insert = insertvalue %gem %GEM7.fca.0.insert, i64* %GEM7.fca.1.load, 1
  %GEM7.fca.2.load = load i64*, i64** %GEM2.fca.2.gep
  %GEM7.fca.2.insert = insertvalue %gem %GEM7.fca.1.insert, i64* %GEM7.fca.2.load, 2
  %GEM7.fca.3.load = load i64*, i64** %GEM2.fca.3.gep
  %GEM7.fca.3.insert = insertvalue %gem %GEM7.fca.2.insert, i64* %GEM7.fca.3.load, 3
  %GEM7.fca.4.load = load i64*, i64** %GEM2.fca.4.gep
  %GEM7.fca.4.insert = insertvalue %gem %GEM7.fca.3.insert, i64* %GEM7.fca.4.load, 4
  %GEM7.fca.5.load = load i64*, i64** %GEM2.fca.5.gep
  %GEM7.fca.5.insert = insertvalue %gem %GEM7.fca.4.insert, i64* %GEM7.fca.5.load, 5
  %GEM7.fca.6.load = load i64*, i64** %GEM2.fca.6.gep
  %GEM7.fca.6.insert = insertvalue %gem %GEM7.fca.5.insert, i64* %GEM7.fca.6.load, 6
  %GEM7.fca.7.load = load i64, i64* %GEM2.fca.7.gep
  %GEM7.fca.7.insert = insertvalue %gem %GEM7.fca.6.insert, i64 %GEM7.fca.7.load, 7
  %GEM7.fca.8.load = load i64, i64* %GEM2.fca.8.gep
  %GEM7.fca.8.insert = insertvalue %gem %GEM7.fca.7.insert, i64 %GEM7.fca.8.load, 8
  %GEM7.fca.9.load = load i64, i64* %GEM2.fca.9.gep
  %GEM7.fca.9.insert = insertvalue %gem %GEM7.fca.8.insert, i64 %GEM7.fca.9.load, 9
  %GEM7.fca.10.load = load i64, i64* %GEM2.fca.10.gep
  %GEM7.fca.10.insert = insertvalue %gem %GEM7.fca.9.insert, i64 %GEM7.fca.10.load, 10
  %GEM7.fca.11.load = load double*, double** %GEM2.fca.11.gep
  %GEM7.fca.11.insert = insertvalue %gem %GEM7.fca.10.insert, double* %GEM7.fca.11.load, 11
  %GEM7.fca.12.load = load double*, double** %GEM2.fca.12.gep
  %GEM7.fca.12.insert = insertvalue %gem %GEM7.fca.11.insert, double* %GEM7.fca.12.load, 12
  %GEM7.fca.13.load = load double*, double** %GEM2.fca.13.gep
  %GEM7.fca.13.insert = insertvalue %gem %GEM7.fca.12.insert, double* %GEM7.fca.13.load, 13
  %GEM7.fca.14.load = load double*, double** %GEM2.fca.14.gep
  %GEM7.fca.14.insert = insertvalue %gem %GEM7.fca.13.insert, double* %GEM7.fca.14.load, 14
  %GEM7.fca.15.load = load double*, double** %GEM2.fca.15.gep
  %GEM7.fca.15.insert = insertvalue %gem %GEM7.fca.14.insert, double* %GEM7.fca.15.load, 15
  %GEM7.fca.16.load = load double*, double** %GEM2.fca.16.gep
  %GEM7.fca.16.insert = insertvalue %gem %GEM7.fca.15.insert, double* %GEM7.fca.16.load, 16
  %GEM7.fca.17.load = load double*, double** %GEM2.fca.17.gep
  %GEM7.fca.17.insert = insertvalue %gem %GEM7.fca.16.insert, double* %GEM7.fca.17.load, 17
  %GEM7.fca.18.load = load double*, double** %GEM2.fca.18.gep
  %GEM7.fca.18.insert = insertvalue %gem %GEM7.fca.17.insert, double* %GEM7.fca.18.load, 18
  %GEM7.fca.19.load = load double*, double** %GEM2.fca.19.gep
  %GEM7.fca.19.insert = insertvalue %gem %GEM7.fca.18.insert, double* %GEM7.fca.19.load, 19
  %GEM7.fca.20.load = load double, double* %GEM2.fca.20.gep
  %GEM7.fca.20.insert = insertvalue %gem %GEM7.fca.19.insert, double %GEM7.fca.20.load, 20
  %GEM7.fca.21.load = load double, double* %GEM2.fca.21.gep
  %GEM7.fca.21.insert = insertvalue %gem %GEM7.fca.20.insert, double %GEM7.fca.21.load, 21
  %GEM7.fca.22.load = load double, double* %GEM2.fca.22.gep
  %GEM7.fca.22.insert = insertvalue %gem %GEM7.fca.21.insert, double %GEM7.fca.22.load, 22
  %GEM7.fca.23.load = load double, double* %GEM2.fca.23.gep
  %GEM7.fca.23.insert = insertvalue %gem %GEM7.fca.22.insert, double %GEM7.fca.23.load, 23
  %GEM7.fca.24.load = load double, double* %GEM2.fca.24.gep
  %GEM7.fca.24.insert = insertvalue %gem %GEM7.fca.23.insert, double %GEM7.fca.24.load, 24
  %GEM7.fca.25.load = load <2 x double>*, <2 x double>** %GEM2.fca.25.gep
  %GEM7.fca.25.insert = insertvalue %gem %GEM7.fca.24.insert, <2 x double>* %GEM7.fca.25.load, 25
  %GEM7.fca.26.load = load <2 x double>*, <2 x double>** %GEM2.fca.26.gep
  %GEM7.fca.26.insert = insertvalue %gem %GEM7.fca.25.insert, <2 x double>* %GEM7.fca.26.load, 26
  %GEM7.fca.27.load = load <2 x double>*, <2 x double>** %GEM2.fca.27.gep
  %GEM7.fca.27.insert = insertvalue %gem %GEM7.fca.26.insert, <2 x double>* %GEM7.fca.27.load, 27
  %GEM7.fca.28.load = load <2 x double>*, <2 x double>** %GEM2.fca.28.gep
  %GEM7.fca.28.insert = insertvalue %gem %GEM7.fca.27.insert, <2 x double>* %GEM7.fca.28.load, 28
  %GEM7.fca.29.load = load <2 x double>*, <2 x double>** %GEM2.fca.29.gep
  %GEM7.fca.29.insert = insertvalue %gem %GEM7.fca.28.insert, <2 x double>* %GEM7.fca.29.load, 29
  %GEM7.fca.30.load = load <2 x double>*, <2 x double>** %GEM2.fca.30.gep
  %GEM7.fca.30.insert = insertvalue %gem %GEM7.fca.29.insert, <2 x double>* %GEM7.fca.30.load, 30
  %GEM7.fca.31.load = load <2 x double>, <2 x double>* %GEM2.fca.31.gep
  %GEM7.fca.31.insert = insertvalue %gem %GEM7.fca.30.insert, <2 x double> %GEM7.fca.31.load, 31
  %GEM7.fca.32.load = load <2 x double>, <2 x double>* %GEM2.fca.32.gep
  %GEM7.fca.32.insert = insertvalue %gem %GEM7.fca.31.insert, <2 x double> %GEM7.fca.32.load, 32
  %GEM7.fca.33.load = load <2 x double>, <2 x double>* %GEM2.fca.33.gep
  %GEM7.fca.33.insert = insertvalue %gem %GEM7.fca.32.insert, <2 x double> %GEM7.fca.33.load, 33
  %GEM7.fca.34.load = load <2 x double>, <2 x double>* %GEM2.fca.34.gep
  %GEM7.fca.34.insert = insertvalue %gem %GEM7.fca.33.insert, <2 x double> %GEM7.fca.34.load, 34
  %GEM7.fca.35.load = load <2 x double>, <2 x double>* %GEM2.fca.35.gep
  %GEM7.fca.35.insert = insertvalue %gem %GEM7.fca.34.insert, <2 x double> %GEM7.fca.35.load, 35
  %GEM7.fca.36.load = load <2 x double>, <2 x double>* %GEM2.fca.36.gep
  %GEM7.fca.36.insert = insertvalue %gem %GEM7.fca.35.insert, <2 x double> %GEM7.fca.36.load, 36
  %GEM7.fca.37.load = load i8**, i8*** %GEM2.fca.37.gep
  %v1GMP71 = call %gemPrm @"gemPrm@Z6gemPrmM51N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[P"()
  %v1GMP71.fca.0.extract = extractvalue %gemPrm %v1GMP71, 0
  %v1GMP71.fca.0.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 0
  store double* %v1GMP71.fca.0.extract, double** %v1GMP71.fca.0.gep
  %v1GMP71.fca.1.extract = extractvalue %gemPrm %v1GMP71, 1
  %v1GMP71.fca.1.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 1
  store double* %v1GMP71.fca.1.extract, double** %v1GMP71.fca.1.gep
  %v1GMP71.fca.2.extract = extractvalue %gemPrm %v1GMP71, 2
  %v1GMP71.fca.2.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 2
  store double* %v1GMP71.fca.2.extract, double** %v1GMP71.fca.2.gep
  %v1GMP71.fca.3.extract = extractvalue %gemPrm %v1GMP71, 3
  %v1GMP71.fca.3.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 3
  store double* %v1GMP71.fca.3.extract, double** %v1GMP71.fca.3.gep
  %v1GMP71.fca.4.extract = extractvalue %gemPrm %v1GMP71, 4
  %v1GMP71.fca.4.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 4
  store double* %v1GMP71.fca.4.extract, double** %v1GMP71.fca.4.gep
  %v1GMP71.fca.5.extract = extractvalue %gemPrm %v1GMP71, 5
  %v1GMP71.fca.5.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 5
  store double* %v1GMP71.fca.5.extract, double** %v1GMP71.fca.5.gep
  %v1GMP71.fca.6.extract = extractvalue %gemPrm %v1GMP71, 6
  %v1GMP71.fca.6.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 6
  store <3 x double>* %v1GMP71.fca.6.extract, <3 x double>** %v1GMP71.fca.6.gep
  %v1GMP71.fca.7.extract = extractvalue %gemPrm %v1GMP71, 7
  %v1GMP71.fca.7.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 7
  store <3 x double>* %v1GMP71.fca.7.extract, <3 x double>** %v1GMP71.fca.7.gep
  %v1GMP71.fca.8.extract = extractvalue %gemPrm %v1GMP71, 8
  %v1GMP71.fca.8.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 8
  store <3 x double>* %v1GMP71.fca.8.extract, <3 x double>** %v1GMP71.fca.8.gep
  %v1GMP71.fca.9.extract = extractvalue %gemPrm %v1GMP71, 9
  %v1GMP71.fca.9.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 9
  store <3 x double>* %v1GMP71.fca.9.extract, <3 x double>** %v1GMP71.fca.9.gep
  %v1GMP71.fca.10.extract = extractvalue %gemPrm %v1GMP71, 10
  %v1GMP71.fca.10.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 10
  store <3 x double>* %v1GMP71.fca.10.extract, <3 x double>** %v1GMP71.fca.10.gep
  %v1GMP71.fca.11.extract = extractvalue %gemPrm %v1GMP71, 11
  %v1GMP71.fca.11.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 11
  store <3 x double>* %v1GMP71.fca.11.extract, <3 x double>** %v1GMP71.fca.11.gep
  %v1GMP71.fca.12.extract = extractvalue %gemPrm %v1GMP71, 12
  %v1GMP71.fca.12.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 12
  store <3 x double>* %v1GMP71.fca.12.extract, <3 x double>** %v1GMP71.fca.12.gep
  %v1GMP71.fca.13.extract = extractvalue %gemPrm %v1GMP71, 13
  %v1GMP71.fca.13.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 13
  store <2 x double>* %v1GMP71.fca.13.extract, <2 x double>** %v1GMP71.fca.13.gep
  %v1GMP71.fca.14.extract = extractvalue %gemPrm %v1GMP71, 14
  %v1GMP71.fca.14.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 14
  store <2 x double>* %v1GMP71.fca.14.extract, <2 x double>** %v1GMP71.fca.14.gep
  %v1GMP71.fca.15.extract = extractvalue %gemPrm %v1GMP71, 15
  %v1GMP71.fca.15.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 15
  store <2 x double>* %v1GMP71.fca.15.extract, <2 x double>** %v1GMP71.fca.15.gep
  %v1GMP71.fca.16.extract = extractvalue %gemPrm %v1GMP71, 16
  %v1GMP71.fca.16.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 16
  store <2 x double>* %v1GMP71.fca.16.extract, <2 x double>** %v1GMP71.fca.16.gep
  %v1GMP71.fca.17.extract = extractvalue %gemPrm %v1GMP71, 17
  %v1GMP71.fca.17.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 17
  store <2 x double>* %v1GMP71.fca.17.extract, <2 x double>** %v1GMP71.fca.17.gep
  %v1GMP71.fca.18.extract = extractvalue %gemPrm %v1GMP71, 18
  %v1GMP71.fca.18.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 18
  store <2 x double>* %v1GMP71.fca.18.extract, <2 x double>** %v1GMP71.fca.18.gep
  %v1GMP71.fca.19.extract = extractvalue %gemPrm %v1GMP71, 19
  %v1GMP71.fca.19.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 19
  store <2 x double>* %v1GMP71.fca.19.extract, <2 x double>** %v1GMP71.fca.19.gep
  %v1GMP71.fca.20.extract = extractvalue %gemPrm %v1GMP71, 20
  %v1GMP71.fca.20.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 20
  store <2 x double>* %v1GMP71.fca.20.extract, <2 x double>** %v1GMP71.fca.20.gep
  %v1GMP71.fca.21.extract = extractvalue %gemPrm %v1GMP71, 21
  %v1GMP71.fca.21.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 21
  store <2 x double>* %v1GMP71.fca.21.extract, <2 x double>** %v1GMP71.fca.21.gep
  %v1GMP71.fca.22.extract = extractvalue %gemPrm %v1GMP71, 22
  %v1GMP71.fca.22.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 22
  store <2 x double>* %v1GMP71.fca.22.extract, <2 x double>** %v1GMP71.fca.22.gep
  %v1GMP71.fca.23.extract = extractvalue %gemPrm %v1GMP71, 23
  %v1GMP71.fca.23.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 23
  store <2 x double>* %v1GMP71.fca.23.extract, <2 x double>** %v1GMP71.fca.23.gep
  %v1GMP71.fca.24.extract = extractvalue %gemPrm %v1GMP71, 24
  %v1GMP71.fca.24.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 24
  store <2 x double>* %v1GMP71.fca.24.extract, <2 x double>** %v1GMP71.fca.24.gep
  %v1GMP71.fca.25.extract = extractvalue %gemPrm %v1GMP71, 25
  %v1GMP71.fca.25.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 25
  store <2 x double>* %v1GMP71.fca.25.extract, <2 x double>** %v1GMP71.fca.25.gep
  %v1GMP71.fca.26.extract = extractvalue %gemPrm %v1GMP71, 26
  %v1GMP71.fca.26.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 26
  store <2 x double>* %v1GMP71.fca.26.extract, <2 x double>** %v1GMP71.fca.26.gep
  %v1GMP71.fca.27.extract = extractvalue %gemPrm %v1GMP71, 27
  %v1GMP71.fca.27.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 27
  store <2 x double>* %v1GMP71.fca.27.extract, <2 x double>** %v1GMP71.fca.27.gep
  %v1GMP71.fca.28.extract = extractvalue %gemPrm %v1GMP71, 28
  %v1GMP71.fca.28.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 28
  store <2 x double>* %v1GMP71.fca.28.extract, <2 x double>** %v1GMP71.fca.28.gep
  %v1GMP71.fca.29.extract = extractvalue %gemPrm %v1GMP71, 29
  %v1GMP71.fca.29.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 29
  store <2 x double>* %v1GMP71.fca.29.extract, <2 x double>** %v1GMP71.fca.29.gep
  %v1GMP71.fca.30.extract = extractvalue %gemPrm %v1GMP71, 30
  %v1GMP71.fca.30.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 30
  store <2 x double>* %v1GMP71.fca.30.extract, <2 x double>** %v1GMP71.fca.30.gep
  %v1GMP71.fca.31.extract = extractvalue %gemPrm %v1GMP71, 31
  %v1GMP71.fca.31.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 31
  store <2 x double>* %v1GMP71.fca.31.extract, <2 x double>** %v1GMP71.fca.31.gep
  %v1GMP71.fca.32.extract = extractvalue %gemPrm %v1GMP71, 32
  %v1GMP71.fca.32.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 32
  store <2 x double>* %v1GMP71.fca.32.extract, <2 x double>** %v1GMP71.fca.32.gep
  %v1GMP71.fca.33.extract = extractvalue %gemPrm %v1GMP71, 33
  %v1GMP71.fca.33.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 33
  store <2 x double>* %v1GMP71.fca.33.extract, <2 x double>** %v1GMP71.fca.33.gep
  %v1GMP71.fca.34.extract = extractvalue %gemPrm %v1GMP71, 34
  %v1GMP71.fca.34.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 34
  store <2 x double>* %v1GMP71.fca.34.extract, <2 x double>** %v1GMP71.fca.34.gep
  %v1GMP71.fca.35.extract = extractvalue %gemPrm %v1GMP71, 35
  %v1GMP71.fca.35.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 35
  store <2 x double>* %v1GMP71.fca.35.extract, <2 x double>** %v1GMP71.fca.35.gep
  %v1GMP71.fca.36.extract = extractvalue %gemPrm %v1GMP71, 36
  %v1GMP71.fca.36.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 36
  store <2 x double>* %v1GMP71.fca.36.extract, <2 x double>** %v1GMP71.fca.36.gep
  %v1GMP71.fca.37.extract = extractvalue %gemPrm %v1GMP71, 37
  %v1GMP71.fca.37.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 37
  store <2 x double>* %v1GMP71.fca.37.extract, <2 x double>** %v1GMP71.fca.37.gep
  %v1GMP71.fca.38.extract = extractvalue %gemPrm %v1GMP71, 38
  %v1GMP71.fca.38.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 38
  store <2 x double>* %v1GMP71.fca.38.extract, <2 x double>** %v1GMP71.fca.38.gep
  %v1GMP71.fca.39.extract = extractvalue %gemPrm %v1GMP71, 39
  %v1GMP71.fca.39.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 39
  store <2 x double>* %v1GMP71.fca.39.extract, <2 x double>** %v1GMP71.fca.39.gep
  %v1GMP71.fca.40.extract = extractvalue %gemPrm %v1GMP71, 40
  %v1GMP71.fca.40.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 40
  store <2 x double>* %v1GMP71.fca.40.extract, <2 x double>** %v1GMP71.fca.40.gep
  %v1GMP71.fca.41.extract = extractvalue %gemPrm %v1GMP71, 41
  %v1GMP71.fca.41.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 41
  store <2 x double>* %v1GMP71.fca.41.extract, <2 x double>** %v1GMP71.fca.41.gep
  %v1GMP71.fca.42.extract = extractvalue %gemPrm %v1GMP71, 42
  %v1GMP71.fca.42.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 42
  store <4 x double>* %v1GMP71.fca.42.extract, <4 x double>** %v1GMP71.fca.42.gep
  %v1GMP71.fca.43.extract = extractvalue %gemPrm %v1GMP71, 43
  %v1GMP71.fca.43.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 43
  store <4 x double>* %v1GMP71.fca.43.extract, <4 x double>** %v1GMP71.fca.43.gep
  %v1GMP71.fca.44.extract = extractvalue %gemPrm %v1GMP71, 44
  %v1GMP71.fca.44.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 44
  store <4 x double>* %v1GMP71.fca.44.extract, <4 x double>** %v1GMP71.fca.44.gep
  %v1GMP71.fca.45.extract = extractvalue %gemPrm %v1GMP71, 45
  %v1GMP71.fca.45.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 45
  store <4 x double>* %v1GMP71.fca.45.extract, <4 x double>** %v1GMP71.fca.45.gep
  %v1GMP71.fca.46.extract = extractvalue %gemPrm %v1GMP71, 46
  %v1GMP71.fca.46.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 46
  store <4 x double>* %v1GMP71.fca.46.extract, <4 x double>** %v1GMP71.fca.46.gep
  %v1GMP71.fca.47.extract = extractvalue %gemPrm %v1GMP71, 47
  %v1GMP71.fca.47.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 47
  store <4 x double>* %v1GMP71.fca.47.extract, <4 x double>** %v1GMP71.fca.47.gep
  %v1GMP71.fca.48.extract = extractvalue %gemPrm %v1GMP71, 48
  %v1GMP71.fca.48.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 48
  store <4 x double>* %v1GMP71.fca.48.extract, <4 x double>** %v1GMP71.fca.48.gep
  %v1GMP71.fca.49.extract = extractvalue %gemPrm %v1GMP71, 49
  %v1GMP71.fca.49.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 49
  store <4 x double>* %v1GMP71.fca.49.extract, <4 x double>** %v1GMP71.fca.49.gep
  %v1GMP71.fca.50.extract = extractvalue %gemPrm %v1GMP71, 50
  %v1GMP71.fca.50.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 50
  store <4 x double>* %v1GMP71.fca.50.extract, <4 x double>** %v1GMP71.fca.50.gep
  %v2GMP72 = call %gemPrm @"gemPrm@Z6gemPrmM51N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[P"()
  %v2GMP72.fca.0.extract = extractvalue %gemPrm %v2GMP72, 0
  %v2GMP72.fca.0.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 0
  store double* %v2GMP72.fca.0.extract, double** %v2GMP72.fca.0.gep
  %v2GMP72.fca.1.extract = extractvalue %gemPrm %v2GMP72, 1
  %v2GMP72.fca.1.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 1
  store double* %v2GMP72.fca.1.extract, double** %v2GMP72.fca.1.gep
  %v2GMP72.fca.2.extract = extractvalue %gemPrm %v2GMP72, 2
  %v2GMP72.fca.2.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 2
  store double* %v2GMP72.fca.2.extract, double** %v2GMP72.fca.2.gep
  %v2GMP72.fca.3.extract = extractvalue %gemPrm %v2GMP72, 3
  %v2GMP72.fca.3.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 3
  store double* %v2GMP72.fca.3.extract, double** %v2GMP72.fca.3.gep
  %v2GMP72.fca.4.extract = extractvalue %gemPrm %v2GMP72, 4
  %v2GMP72.fca.4.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 4
  store double* %v2GMP72.fca.4.extract, double** %v2GMP72.fca.4.gep
  %v2GMP72.fca.5.extract = extractvalue %gemPrm %v2GMP72, 5
  %v2GMP72.fca.5.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 5
  store double* %v2GMP72.fca.5.extract, double** %v2GMP72.fca.5.gep
  %v2GMP72.fca.6.extract = extractvalue %gemPrm %v2GMP72, 6
  %v2GMP72.fca.6.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 6
  store <3 x double>* %v2GMP72.fca.6.extract, <3 x double>** %v2GMP72.fca.6.gep
  %v2GMP72.fca.7.extract = extractvalue %gemPrm %v2GMP72, 7
  %v2GMP72.fca.7.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 7
  store <3 x double>* %v2GMP72.fca.7.extract, <3 x double>** %v2GMP72.fca.7.gep
  %v2GMP72.fca.8.extract = extractvalue %gemPrm %v2GMP72, 8
  %v2GMP72.fca.8.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 8
  store <3 x double>* %v2GMP72.fca.8.extract, <3 x double>** %v2GMP72.fca.8.gep
  %v2GMP72.fca.9.extract = extractvalue %gemPrm %v2GMP72, 9
  %v2GMP72.fca.9.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 9
  store <3 x double>* %v2GMP72.fca.9.extract, <3 x double>** %v2GMP72.fca.9.gep
  %v2GMP72.fca.10.extract = extractvalue %gemPrm %v2GMP72, 10
  %v2GMP72.fca.10.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 10
  store <3 x double>* %v2GMP72.fca.10.extract, <3 x double>** %v2GMP72.fca.10.gep
  %v2GMP72.fca.11.extract = extractvalue %gemPrm %v2GMP72, 11
  %v2GMP72.fca.11.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 11
  store <3 x double>* %v2GMP72.fca.11.extract, <3 x double>** %v2GMP72.fca.11.gep
  %v2GMP72.fca.12.extract = extractvalue %gemPrm %v2GMP72, 12
  %v2GMP72.fca.12.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 12
  store <3 x double>* %v2GMP72.fca.12.extract, <3 x double>** %v2GMP72.fca.12.gep
  %v2GMP72.fca.13.extract = extractvalue %gemPrm %v2GMP72, 13
  %v2GMP72.fca.13.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 13
  store <2 x double>* %v2GMP72.fca.13.extract, <2 x double>** %v2GMP72.fca.13.gep
  %v2GMP72.fca.14.extract = extractvalue %gemPrm %v2GMP72, 14
  %v2GMP72.fca.14.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 14
  store <2 x double>* %v2GMP72.fca.14.extract, <2 x double>** %v2GMP72.fca.14.gep
  %v2GMP72.fca.15.extract = extractvalue %gemPrm %v2GMP72, 15
  %v2GMP72.fca.15.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 15
  store <2 x double>* %v2GMP72.fca.15.extract, <2 x double>** %v2GMP72.fca.15.gep
  %v2GMP72.fca.16.extract = extractvalue %gemPrm %v2GMP72, 16
  %v2GMP72.fca.16.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 16
  store <2 x double>* %v2GMP72.fca.16.extract, <2 x double>** %v2GMP72.fca.16.gep
  %v2GMP72.fca.17.extract = extractvalue %gemPrm %v2GMP72, 17
  %v2GMP72.fca.17.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 17
  store <2 x double>* %v2GMP72.fca.17.extract, <2 x double>** %v2GMP72.fca.17.gep
  %v2GMP72.fca.18.extract = extractvalue %gemPrm %v2GMP72, 18
  %v2GMP72.fca.18.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 18
  store <2 x double>* %v2GMP72.fca.18.extract, <2 x double>** %v2GMP72.fca.18.gep
  %v2GMP72.fca.19.extract = extractvalue %gemPrm %v2GMP72, 19
  %v2GMP72.fca.19.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 19
  store <2 x double>* %v2GMP72.fca.19.extract, <2 x double>** %v2GMP72.fca.19.gep
  %v2GMP72.fca.20.extract = extractvalue %gemPrm %v2GMP72, 20
  %v2GMP72.fca.20.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 20
  store <2 x double>* %v2GMP72.fca.20.extract, <2 x double>** %v2GMP72.fca.20.gep
  %v2GMP72.fca.21.extract = extractvalue %gemPrm %v2GMP72, 21
  %v2GMP72.fca.21.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 21
  store <2 x double>* %v2GMP72.fca.21.extract, <2 x double>** %v2GMP72.fca.21.gep
  %v2GMP72.fca.22.extract = extractvalue %gemPrm %v2GMP72, 22
  %v2GMP72.fca.22.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 22
  store <2 x double>* %v2GMP72.fca.22.extract, <2 x double>** %v2GMP72.fca.22.gep
  %v2GMP72.fca.23.extract = extractvalue %gemPrm %v2GMP72, 23
  %v2GMP72.fca.23.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 23
  store <2 x double>* %v2GMP72.fca.23.extract, <2 x double>** %v2GMP72.fca.23.gep
  %v2GMP72.fca.24.extract = extractvalue %gemPrm %v2GMP72, 24
  %v2GMP72.fca.24.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 24
  store <2 x double>* %v2GMP72.fca.24.extract, <2 x double>** %v2GMP72.fca.24.gep
  %v2GMP72.fca.25.extract = extractvalue %gemPrm %v2GMP72, 25
  %v2GMP72.fca.25.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 25
  store <2 x double>* %v2GMP72.fca.25.extract, <2 x double>** %v2GMP72.fca.25.gep
  %v2GMP72.fca.26.extract = extractvalue %gemPrm %v2GMP72, 26
  %v2GMP72.fca.26.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 26
  store <2 x double>* %v2GMP72.fca.26.extract, <2 x double>** %v2GMP72.fca.26.gep
  %v2GMP72.fca.27.extract = extractvalue %gemPrm %v2GMP72, 27
  %v2GMP72.fca.27.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 27
  store <2 x double>* %v2GMP72.fca.27.extract, <2 x double>** %v2GMP72.fca.27.gep
  %v2GMP72.fca.28.extract = extractvalue %gemPrm %v2GMP72, 28
  %v2GMP72.fca.28.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 28
  store <2 x double>* %v2GMP72.fca.28.extract, <2 x double>** %v2GMP72.fca.28.gep
  %v2GMP72.fca.29.extract = extractvalue %gemPrm %v2GMP72, 29
  %v2GMP72.fca.29.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 29
  store <2 x double>* %v2GMP72.fca.29.extract, <2 x double>** %v2GMP72.fca.29.gep
  %v2GMP72.fca.30.extract = extractvalue %gemPrm %v2GMP72, 30
  %v2GMP72.fca.30.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 30
  store <2 x double>* %v2GMP72.fca.30.extract, <2 x double>** %v2GMP72.fca.30.gep
  %v2GMP72.fca.31.extract = extractvalue %gemPrm %v2GMP72, 31
  %v2GMP72.fca.31.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 31
  store <2 x double>* %v2GMP72.fca.31.extract, <2 x double>** %v2GMP72.fca.31.gep
  %v2GMP72.fca.32.extract = extractvalue %gemPrm %v2GMP72, 32
  %v2GMP72.fca.32.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 32
  store <2 x double>* %v2GMP72.fca.32.extract, <2 x double>** %v2GMP72.fca.32.gep
  %v2GMP72.fca.33.extract = extractvalue %gemPrm %v2GMP72, 33
  %v2GMP72.fca.33.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 33
  store <2 x double>* %v2GMP72.fca.33.extract, <2 x double>** %v2GMP72.fca.33.gep
  %v2GMP72.fca.34.extract = extractvalue %gemPrm %v2GMP72, 34
  %v2GMP72.fca.34.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 34
  store <2 x double>* %v2GMP72.fca.34.extract, <2 x double>** %v2GMP72.fca.34.gep
  %v2GMP72.fca.35.extract = extractvalue %gemPrm %v2GMP72, 35
  %v2GMP72.fca.35.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 35
  store <2 x double>* %v2GMP72.fca.35.extract, <2 x double>** %v2GMP72.fca.35.gep
  %v2GMP72.fca.36.extract = extractvalue %gemPrm %v2GMP72, 36
  %v2GMP72.fca.36.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 36
  store <2 x double>* %v2GMP72.fca.36.extract, <2 x double>** %v2GMP72.fca.36.gep
  %v2GMP72.fca.37.extract = extractvalue %gemPrm %v2GMP72, 37
  %v2GMP72.fca.37.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 37
  store <2 x double>* %v2GMP72.fca.37.extract, <2 x double>** %v2GMP72.fca.37.gep
  %v2GMP72.fca.38.extract = extractvalue %gemPrm %v2GMP72, 38
  %v2GMP72.fca.38.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 38
  store <2 x double>* %v2GMP72.fca.38.extract, <2 x double>** %v2GMP72.fca.38.gep
  %v2GMP72.fca.39.extract = extractvalue %gemPrm %v2GMP72, 39
  %v2GMP72.fca.39.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 39
  store <2 x double>* %v2GMP72.fca.39.extract, <2 x double>** %v2GMP72.fca.39.gep
  %v2GMP72.fca.40.extract = extractvalue %gemPrm %v2GMP72, 40
  %v2GMP72.fca.40.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 40
  store <2 x double>* %v2GMP72.fca.40.extract, <2 x double>** %v2GMP72.fca.40.gep
  %v2GMP72.fca.41.extract = extractvalue %gemPrm %v2GMP72, 41
  %v2GMP72.fca.41.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 41
  store <2 x double>* %v2GMP72.fca.41.extract, <2 x double>** %v2GMP72.fca.41.gep
  %v2GMP72.fca.42.extract = extractvalue %gemPrm %v2GMP72, 42
  %v2GMP72.fca.42.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 42
  store <4 x double>* %v2GMP72.fca.42.extract, <4 x double>** %v2GMP72.fca.42.gep
  %v2GMP72.fca.43.extract = extractvalue %gemPrm %v2GMP72, 43
  %v2GMP72.fca.43.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 43
  store <4 x double>* %v2GMP72.fca.43.extract, <4 x double>** %v2GMP72.fca.43.gep
  %v2GMP72.fca.44.extract = extractvalue %gemPrm %v2GMP72, 44
  %v2GMP72.fca.44.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 44
  store <4 x double>* %v2GMP72.fca.44.extract, <4 x double>** %v2GMP72.fca.44.gep
  %v2GMP72.fca.45.extract = extractvalue %gemPrm %v2GMP72, 45
  %v2GMP72.fca.45.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 45
  store <4 x double>* %v2GMP72.fca.45.extract, <4 x double>** %v2GMP72.fca.45.gep
  %v2GMP72.fca.46.extract = extractvalue %gemPrm %v2GMP72, 46
  %v2GMP72.fca.46.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 46
  store <4 x double>* %v2GMP72.fca.46.extract, <4 x double>** %v2GMP72.fca.46.gep
  %v2GMP72.fca.47.extract = extractvalue %gemPrm %v2GMP72, 47
  %v2GMP72.fca.47.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 47
  store <4 x double>* %v2GMP72.fca.47.extract, <4 x double>** %v2GMP72.fca.47.gep
  %v2GMP72.fca.48.extract = extractvalue %gemPrm %v2GMP72, 48
  %v2GMP72.fca.48.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 48
  store <4 x double>* %v2GMP72.fca.48.extract, <4 x double>** %v2GMP72.fca.48.gep
  %v2GMP72.fca.49.extract = extractvalue %gemPrm %v2GMP72, 49
  %v2GMP72.fca.49.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 49
  store <4 x double>* %v2GMP72.fca.49.extract, <4 x double>** %v2GMP72.fca.49.gep
  %v2GMP72.fca.50.extract = extractvalue %gemPrm %v2GMP72, 50
  %v2GMP72.fca.50.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 50
  store <4 x double>* %v2GMP72.fca.50.extract, <4 x double>** %v2GMP72.fca.50.gep
  %v3GMP73 = call %gemPrm @"gemPrm@Z6gemPrmM51N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[P"()
  %v3GMP73.fca.0.extract = extractvalue %gemPrm %v3GMP73, 0
  %v3GMP73.fca.0.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 0
  store double* %v3GMP73.fca.0.extract, double** %v3GMP73.fca.0.gep
  %v3GMP73.fca.1.extract = extractvalue %gemPrm %v3GMP73, 1
  %v3GMP73.fca.1.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 1
  store double* %v3GMP73.fca.1.extract, double** %v3GMP73.fca.1.gep
  %v3GMP73.fca.2.extract = extractvalue %gemPrm %v3GMP73, 2
  %v3GMP73.fca.2.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 2
  store double* %v3GMP73.fca.2.extract, double** %v3GMP73.fca.2.gep
  %v3GMP73.fca.3.extract = extractvalue %gemPrm %v3GMP73, 3
  %v3GMP73.fca.3.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 3
  store double* %v3GMP73.fca.3.extract, double** %v3GMP73.fca.3.gep
  %v3GMP73.fca.4.extract = extractvalue %gemPrm %v3GMP73, 4
  %v3GMP73.fca.4.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 4
  store double* %v3GMP73.fca.4.extract, double** %v3GMP73.fca.4.gep
  %v3GMP73.fca.5.extract = extractvalue %gemPrm %v3GMP73, 5
  %v3GMP73.fca.5.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 5
  store double* %v3GMP73.fca.5.extract, double** %v3GMP73.fca.5.gep
  %v3GMP73.fca.6.extract = extractvalue %gemPrm %v3GMP73, 6
  %v3GMP73.fca.6.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 6
  store <3 x double>* %v3GMP73.fca.6.extract, <3 x double>** %v3GMP73.fca.6.gep
  %v3GMP73.fca.7.extract = extractvalue %gemPrm %v3GMP73, 7
  %v3GMP73.fca.7.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 7
  store <3 x double>* %v3GMP73.fca.7.extract, <3 x double>** %v3GMP73.fca.7.gep
  %v3GMP73.fca.8.extract = extractvalue %gemPrm %v3GMP73, 8
  %v3GMP73.fca.8.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 8
  store <3 x double>* %v3GMP73.fca.8.extract, <3 x double>** %v3GMP73.fca.8.gep
  %v3GMP73.fca.9.extract = extractvalue %gemPrm %v3GMP73, 9
  %v3GMP73.fca.9.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 9
  store <3 x double>* %v3GMP73.fca.9.extract, <3 x double>** %v3GMP73.fca.9.gep
  %v3GMP73.fca.10.extract = extractvalue %gemPrm %v3GMP73, 10
  %v3GMP73.fca.10.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 10
  store <3 x double>* %v3GMP73.fca.10.extract, <3 x double>** %v3GMP73.fca.10.gep
  %v3GMP73.fca.11.extract = extractvalue %gemPrm %v3GMP73, 11
  %v3GMP73.fca.11.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 11
  store <3 x double>* %v3GMP73.fca.11.extract, <3 x double>** %v3GMP73.fca.11.gep
  %v3GMP73.fca.12.extract = extractvalue %gemPrm %v3GMP73, 12
  %v3GMP73.fca.12.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 12
  store <3 x double>* %v3GMP73.fca.12.extract, <3 x double>** %v3GMP73.fca.12.gep
  %v3GMP73.fca.13.extract = extractvalue %gemPrm %v3GMP73, 13
  %v3GMP73.fca.13.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 13
  store <2 x double>* %v3GMP73.fca.13.extract, <2 x double>** %v3GMP73.fca.13.gep
  %v3GMP73.fca.14.extract = extractvalue %gemPrm %v3GMP73, 14
  %v3GMP73.fca.14.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 14
  store <2 x double>* %v3GMP73.fca.14.extract, <2 x double>** %v3GMP73.fca.14.gep
  %v3GMP73.fca.15.extract = extractvalue %gemPrm %v3GMP73, 15
  %v3GMP73.fca.15.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 15
  store <2 x double>* %v3GMP73.fca.15.extract, <2 x double>** %v3GMP73.fca.15.gep
  %v3GMP73.fca.16.extract = extractvalue %gemPrm %v3GMP73, 16
  %v3GMP73.fca.16.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 16
  store <2 x double>* %v3GMP73.fca.16.extract, <2 x double>** %v3GMP73.fca.16.gep
  %v3GMP73.fca.17.extract = extractvalue %gemPrm %v3GMP73, 17
  %v3GMP73.fca.17.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 17
  store <2 x double>* %v3GMP73.fca.17.extract, <2 x double>** %v3GMP73.fca.17.gep
  %v3GMP73.fca.18.extract = extractvalue %gemPrm %v3GMP73, 18
  %v3GMP73.fca.18.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 18
  store <2 x double>* %v3GMP73.fca.18.extract, <2 x double>** %v3GMP73.fca.18.gep
  %v3GMP73.fca.19.extract = extractvalue %gemPrm %v3GMP73, 19
  %v3GMP73.fca.19.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 19
  store <2 x double>* %v3GMP73.fca.19.extract, <2 x double>** %v3GMP73.fca.19.gep
  %v3GMP73.fca.20.extract = extractvalue %gemPrm %v3GMP73, 20
  %v3GMP73.fca.20.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 20
  store <2 x double>* %v3GMP73.fca.20.extract, <2 x double>** %v3GMP73.fca.20.gep
  %v3GMP73.fca.21.extract = extractvalue %gemPrm %v3GMP73, 21
  %v3GMP73.fca.21.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 21
  store <2 x double>* %v3GMP73.fca.21.extract, <2 x double>** %v3GMP73.fca.21.gep
  %v3GMP73.fca.22.extract = extractvalue %gemPrm %v3GMP73, 22
  %v3GMP73.fca.22.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 22
  store <2 x double>* %v3GMP73.fca.22.extract, <2 x double>** %v3GMP73.fca.22.gep
  %v3GMP73.fca.23.extract = extractvalue %gemPrm %v3GMP73, 23
  %v3GMP73.fca.23.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 23
  store <2 x double>* %v3GMP73.fca.23.extract, <2 x double>** %v3GMP73.fca.23.gep
  %v3GMP73.fca.24.extract = extractvalue %gemPrm %v3GMP73, 24
  %v3GMP73.fca.24.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 24
  store <2 x double>* %v3GMP73.fca.24.extract, <2 x double>** %v3GMP73.fca.24.gep
  %v3GMP73.fca.25.extract = extractvalue %gemPrm %v3GMP73, 25
  %v3GMP73.fca.25.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 25
  store <2 x double>* %v3GMP73.fca.25.extract, <2 x double>** %v3GMP73.fca.25.gep
  %v3GMP73.fca.26.extract = extractvalue %gemPrm %v3GMP73, 26
  %v3GMP73.fca.26.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 26
  store <2 x double>* %v3GMP73.fca.26.extract, <2 x double>** %v3GMP73.fca.26.gep
  %v3GMP73.fca.27.extract = extractvalue %gemPrm %v3GMP73, 27
  %v3GMP73.fca.27.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 27
  store <2 x double>* %v3GMP73.fca.27.extract, <2 x double>** %v3GMP73.fca.27.gep
  %v3GMP73.fca.28.extract = extractvalue %gemPrm %v3GMP73, 28
  %v3GMP73.fca.28.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 28
  store <2 x double>* %v3GMP73.fca.28.extract, <2 x double>** %v3GMP73.fca.28.gep
  %v3GMP73.fca.29.extract = extractvalue %gemPrm %v3GMP73, 29
  %v3GMP73.fca.29.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 29
  store <2 x double>* %v3GMP73.fca.29.extract, <2 x double>** %v3GMP73.fca.29.gep
  %v3GMP73.fca.30.extract = extractvalue %gemPrm %v3GMP73, 30
  %v3GMP73.fca.30.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 30
  store <2 x double>* %v3GMP73.fca.30.extract, <2 x double>** %v3GMP73.fca.30.gep
  %v3GMP73.fca.31.extract = extractvalue %gemPrm %v3GMP73, 31
  %v3GMP73.fca.31.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 31
  store <2 x double>* %v3GMP73.fca.31.extract, <2 x double>** %v3GMP73.fca.31.gep
  %v3GMP73.fca.32.extract = extractvalue %gemPrm %v3GMP73, 32
  %v3GMP73.fca.32.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 32
  store <2 x double>* %v3GMP73.fca.32.extract, <2 x double>** %v3GMP73.fca.32.gep
  %v3GMP73.fca.33.extract = extractvalue %gemPrm %v3GMP73, 33
  %v3GMP73.fca.33.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 33
  store <2 x double>* %v3GMP73.fca.33.extract, <2 x double>** %v3GMP73.fca.33.gep
  %v3GMP73.fca.34.extract = extractvalue %gemPrm %v3GMP73, 34
  %v3GMP73.fca.34.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 34
  store <2 x double>* %v3GMP73.fca.34.extract, <2 x double>** %v3GMP73.fca.34.gep
  %v3GMP73.fca.35.extract = extractvalue %gemPrm %v3GMP73, 35
  %v3GMP73.fca.35.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 35
  store <2 x double>* %v3GMP73.fca.35.extract, <2 x double>** %v3GMP73.fca.35.gep
  %v3GMP73.fca.36.extract = extractvalue %gemPrm %v3GMP73, 36
  %v3GMP73.fca.36.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 36
  store <2 x double>* %v3GMP73.fca.36.extract, <2 x double>** %v3GMP73.fca.36.gep
  %v3GMP73.fca.37.extract = extractvalue %gemPrm %v3GMP73, 37
  %v3GMP73.fca.37.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 37
  store <2 x double>* %v3GMP73.fca.37.extract, <2 x double>** %v3GMP73.fca.37.gep
  %v3GMP73.fca.38.extract = extractvalue %gemPrm %v3GMP73, 38
  %v3GMP73.fca.38.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 38
  store <2 x double>* %v3GMP73.fca.38.extract, <2 x double>** %v3GMP73.fca.38.gep
  %v3GMP73.fca.39.extract = extractvalue %gemPrm %v3GMP73, 39
  %v3GMP73.fca.39.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 39
  store <2 x double>* %v3GMP73.fca.39.extract, <2 x double>** %v3GMP73.fca.39.gep
  %v3GMP73.fca.40.extract = extractvalue %gemPrm %v3GMP73, 40
  %v3GMP73.fca.40.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 40
  store <2 x double>* %v3GMP73.fca.40.extract, <2 x double>** %v3GMP73.fca.40.gep
  %v3GMP73.fca.41.extract = extractvalue %gemPrm %v3GMP73, 41
  %v3GMP73.fca.41.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 41
  store <2 x double>* %v3GMP73.fca.41.extract, <2 x double>** %v3GMP73.fca.41.gep
  %v3GMP73.fca.42.extract = extractvalue %gemPrm %v3GMP73, 42
  %v3GMP73.fca.42.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 42
  store <4 x double>* %v3GMP73.fca.42.extract, <4 x double>** %v3GMP73.fca.42.gep
  %v3GMP73.fca.43.extract = extractvalue %gemPrm %v3GMP73, 43
  %v3GMP73.fca.43.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 43
  store <4 x double>* %v3GMP73.fca.43.extract, <4 x double>** %v3GMP73.fca.43.gep
  %v3GMP73.fca.44.extract = extractvalue %gemPrm %v3GMP73, 44
  %v3GMP73.fca.44.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 44
  store <4 x double>* %v3GMP73.fca.44.extract, <4 x double>** %v3GMP73.fca.44.gep
  %v3GMP73.fca.45.extract = extractvalue %gemPrm %v3GMP73, 45
  %v3GMP73.fca.45.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 45
  store <4 x double>* %v3GMP73.fca.45.extract, <4 x double>** %v3GMP73.fca.45.gep
  %v3GMP73.fca.46.extract = extractvalue %gemPrm %v3GMP73, 46
  %v3GMP73.fca.46.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 46
  store <4 x double>* %v3GMP73.fca.46.extract, <4 x double>** %v3GMP73.fca.46.gep
  %v3GMP73.fca.47.extract = extractvalue %gemPrm %v3GMP73, 47
  %v3GMP73.fca.47.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 47
  store <4 x double>* %v3GMP73.fca.47.extract, <4 x double>** %v3GMP73.fca.47.gep
  %v3GMP73.fca.48.extract = extractvalue %gemPrm %v3GMP73, 48
  %v3GMP73.fca.48.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 48
  store <4 x double>* %v3GMP73.fca.48.extract, <4 x double>** %v3GMP73.fca.48.gep
  %v3GMP73.fca.49.extract = extractvalue %gemPrm %v3GMP73, 49
  %v3GMP73.fca.49.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 49
  store <4 x double>* %v3GMP73.fca.49.extract, <4 x double>** %v3GMP73.fca.49.gep
  %v3GMP73.fca.50.extract = extractvalue %gemPrm %v3GMP73, 50
  %v3GMP73.fca.50.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 50
  store <4 x double>* %v3GMP73.fca.50.extract, <4 x double>** %v3GMP73.fca.50.gep
  %v4GMP74 = call %gemPrm @"gemPrm@Z6gemPrmM51N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[P"()
  %v4GMP74.fca.0.extract = extractvalue %gemPrm %v4GMP74, 0
  %v4GMP74.fca.0.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 0
  store double* %v4GMP74.fca.0.extract, double** %v4GMP74.fca.0.gep
  %v4GMP74.fca.1.extract = extractvalue %gemPrm %v4GMP74, 1
  %v4GMP74.fca.1.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 1
  store double* %v4GMP74.fca.1.extract, double** %v4GMP74.fca.1.gep
  %v4GMP74.fca.2.extract = extractvalue %gemPrm %v4GMP74, 2
  %v4GMP74.fca.2.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 2
  store double* %v4GMP74.fca.2.extract, double** %v4GMP74.fca.2.gep
  %v4GMP74.fca.3.extract = extractvalue %gemPrm %v4GMP74, 3
  %v4GMP74.fca.3.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 3
  store double* %v4GMP74.fca.3.extract, double** %v4GMP74.fca.3.gep
  %v4GMP74.fca.4.extract = extractvalue %gemPrm %v4GMP74, 4
  %v4GMP74.fca.4.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 4
  store double* %v4GMP74.fca.4.extract, double** %v4GMP74.fca.4.gep
  %v4GMP74.fca.5.extract = extractvalue %gemPrm %v4GMP74, 5
  %v4GMP74.fca.5.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 5
  store double* %v4GMP74.fca.5.extract, double** %v4GMP74.fca.5.gep
  %v4GMP74.fca.6.extract = extractvalue %gemPrm %v4GMP74, 6
  %v4GMP74.fca.6.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 6
  store <3 x double>* %v4GMP74.fca.6.extract, <3 x double>** %v4GMP74.fca.6.gep
  %v4GMP74.fca.7.extract = extractvalue %gemPrm %v4GMP74, 7
  %v4GMP74.fca.7.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 7
  store <3 x double>* %v4GMP74.fca.7.extract, <3 x double>** %v4GMP74.fca.7.gep
  %v4GMP74.fca.8.extract = extractvalue %gemPrm %v4GMP74, 8
  %v4GMP74.fca.8.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 8
  store <3 x double>* %v4GMP74.fca.8.extract, <3 x double>** %v4GMP74.fca.8.gep
  %v4GMP74.fca.9.extract = extractvalue %gemPrm %v4GMP74, 9
  %v4GMP74.fca.9.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 9
  store <3 x double>* %v4GMP74.fca.9.extract, <3 x double>** %v4GMP74.fca.9.gep
  %v4GMP74.fca.10.extract = extractvalue %gemPrm %v4GMP74, 10
  %v4GMP74.fca.10.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 10
  store <3 x double>* %v4GMP74.fca.10.extract, <3 x double>** %v4GMP74.fca.10.gep
  %v4GMP74.fca.11.extract = extractvalue %gemPrm %v4GMP74, 11
  %v4GMP74.fca.11.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 11
  store <3 x double>* %v4GMP74.fca.11.extract, <3 x double>** %v4GMP74.fca.11.gep
  %v4GMP74.fca.12.extract = extractvalue %gemPrm %v4GMP74, 12
  %v4GMP74.fca.12.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 12
  store <3 x double>* %v4GMP74.fca.12.extract, <3 x double>** %v4GMP74.fca.12.gep
  %v4GMP74.fca.13.extract = extractvalue %gemPrm %v4GMP74, 13
  %v4GMP74.fca.13.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 13
  store <2 x double>* %v4GMP74.fca.13.extract, <2 x double>** %v4GMP74.fca.13.gep
  %v4GMP74.fca.14.extract = extractvalue %gemPrm %v4GMP74, 14
  %v4GMP74.fca.14.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 14
  store <2 x double>* %v4GMP74.fca.14.extract, <2 x double>** %v4GMP74.fca.14.gep
  %v4GMP74.fca.15.extract = extractvalue %gemPrm %v4GMP74, 15
  %v4GMP74.fca.15.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 15
  store <2 x double>* %v4GMP74.fca.15.extract, <2 x double>** %v4GMP74.fca.15.gep
  %v4GMP74.fca.16.extract = extractvalue %gemPrm %v4GMP74, 16
  %v4GMP74.fca.16.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 16
  store <2 x double>* %v4GMP74.fca.16.extract, <2 x double>** %v4GMP74.fca.16.gep
  %v4GMP74.fca.17.extract = extractvalue %gemPrm %v4GMP74, 17
  %v4GMP74.fca.17.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 17
  store <2 x double>* %v4GMP74.fca.17.extract, <2 x double>** %v4GMP74.fca.17.gep
  %v4GMP74.fca.18.extract = extractvalue %gemPrm %v4GMP74, 18
  %v4GMP74.fca.18.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 18
  store <2 x double>* %v4GMP74.fca.18.extract, <2 x double>** %v4GMP74.fca.18.gep
  %v4GMP74.fca.19.extract = extractvalue %gemPrm %v4GMP74, 19
  %v4GMP74.fca.19.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 19
  store <2 x double>* %v4GMP74.fca.19.extract, <2 x double>** %v4GMP74.fca.19.gep
  %v4GMP74.fca.20.extract = extractvalue %gemPrm %v4GMP74, 20
  %v4GMP74.fca.20.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 20
  store <2 x double>* %v4GMP74.fca.20.extract, <2 x double>** %v4GMP74.fca.20.gep
  %v4GMP74.fca.21.extract = extractvalue %gemPrm %v4GMP74, 21
  %v4GMP74.fca.21.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 21
  store <2 x double>* %v4GMP74.fca.21.extract, <2 x double>** %v4GMP74.fca.21.gep
  %v4GMP74.fca.22.extract = extractvalue %gemPrm %v4GMP74, 22
  %v4GMP74.fca.22.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 22
  store <2 x double>* %v4GMP74.fca.22.extract, <2 x double>** %v4GMP74.fca.22.gep
  %v4GMP74.fca.23.extract = extractvalue %gemPrm %v4GMP74, 23
  %v4GMP74.fca.23.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 23
  store <2 x double>* %v4GMP74.fca.23.extract, <2 x double>** %v4GMP74.fca.23.gep
  %v4GMP74.fca.24.extract = extractvalue %gemPrm %v4GMP74, 24
  %v4GMP74.fca.24.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 24
  store <2 x double>* %v4GMP74.fca.24.extract, <2 x double>** %v4GMP74.fca.24.gep
  %v4GMP74.fca.25.extract = extractvalue %gemPrm %v4GMP74, 25
  %v4GMP74.fca.25.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 25
  store <2 x double>* %v4GMP74.fca.25.extract, <2 x double>** %v4GMP74.fca.25.gep
  %v4GMP74.fca.26.extract = extractvalue %gemPrm %v4GMP74, 26
  %v4GMP74.fca.26.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 26
  store <2 x double>* %v4GMP74.fca.26.extract, <2 x double>** %v4GMP74.fca.26.gep
  %v4GMP74.fca.27.extract = extractvalue %gemPrm %v4GMP74, 27
  %v4GMP74.fca.27.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 27
  store <2 x double>* %v4GMP74.fca.27.extract, <2 x double>** %v4GMP74.fca.27.gep
  %v4GMP74.fca.28.extract = extractvalue %gemPrm %v4GMP74, 28
  %v4GMP74.fca.28.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 28
  store <2 x double>* %v4GMP74.fca.28.extract, <2 x double>** %v4GMP74.fca.28.gep
  %v4GMP74.fca.29.extract = extractvalue %gemPrm %v4GMP74, 29
  %v4GMP74.fca.29.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 29
  store <2 x double>* %v4GMP74.fca.29.extract, <2 x double>** %v4GMP74.fca.29.gep
  %v4GMP74.fca.30.extract = extractvalue %gemPrm %v4GMP74, 30
  %v4GMP74.fca.30.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 30
  store <2 x double>* %v4GMP74.fca.30.extract, <2 x double>** %v4GMP74.fca.30.gep
  %v4GMP74.fca.31.extract = extractvalue %gemPrm %v4GMP74, 31
  %v4GMP74.fca.31.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 31
  store <2 x double>* %v4GMP74.fca.31.extract, <2 x double>** %v4GMP74.fca.31.gep
  %v4GMP74.fca.32.extract = extractvalue %gemPrm %v4GMP74, 32
  %v4GMP74.fca.32.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 32
  store <2 x double>* %v4GMP74.fca.32.extract, <2 x double>** %v4GMP74.fca.32.gep
  %v4GMP74.fca.33.extract = extractvalue %gemPrm %v4GMP74, 33
  %v4GMP74.fca.33.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 33
  store <2 x double>* %v4GMP74.fca.33.extract, <2 x double>** %v4GMP74.fca.33.gep
  %v4GMP74.fca.34.extract = extractvalue %gemPrm %v4GMP74, 34
  %v4GMP74.fca.34.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 34
  store <2 x double>* %v4GMP74.fca.34.extract, <2 x double>** %v4GMP74.fca.34.gep
  %v4GMP74.fca.35.extract = extractvalue %gemPrm %v4GMP74, 35
  %v4GMP74.fca.35.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 35
  store <2 x double>* %v4GMP74.fca.35.extract, <2 x double>** %v4GMP74.fca.35.gep
  %v4GMP74.fca.36.extract = extractvalue %gemPrm %v4GMP74, 36
  %v4GMP74.fca.36.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 36
  store <2 x double>* %v4GMP74.fca.36.extract, <2 x double>** %v4GMP74.fca.36.gep
  %v4GMP74.fca.37.extract = extractvalue %gemPrm %v4GMP74, 37
  %v4GMP74.fca.37.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 37
  store <2 x double>* %v4GMP74.fca.37.extract, <2 x double>** %v4GMP74.fca.37.gep
  %v4GMP74.fca.38.extract = extractvalue %gemPrm %v4GMP74, 38
  %v4GMP74.fca.38.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 38
  store <2 x double>* %v4GMP74.fca.38.extract, <2 x double>** %v4GMP74.fca.38.gep
  %v4GMP74.fca.39.extract = extractvalue %gemPrm %v4GMP74, 39
  %v4GMP74.fca.39.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 39
  store <2 x double>* %v4GMP74.fca.39.extract, <2 x double>** %v4GMP74.fca.39.gep
  %v4GMP74.fca.40.extract = extractvalue %gemPrm %v4GMP74, 40
  %v4GMP74.fca.40.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 40
  store <2 x double>* %v4GMP74.fca.40.extract, <2 x double>** %v4GMP74.fca.40.gep
  %v4GMP74.fca.41.extract = extractvalue %gemPrm %v4GMP74, 41
  %v4GMP74.fca.41.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 41
  store <2 x double>* %v4GMP74.fca.41.extract, <2 x double>** %v4GMP74.fca.41.gep
  %v4GMP74.fca.42.extract = extractvalue %gemPrm %v4GMP74, 42
  %v4GMP74.fca.42.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 42
  store <4 x double>* %v4GMP74.fca.42.extract, <4 x double>** %v4GMP74.fca.42.gep
  %v4GMP74.fca.43.extract = extractvalue %gemPrm %v4GMP74, 43
  %v4GMP74.fca.43.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 43
  store <4 x double>* %v4GMP74.fca.43.extract, <4 x double>** %v4GMP74.fca.43.gep
  %v4GMP74.fca.44.extract = extractvalue %gemPrm %v4GMP74, 44
  %v4GMP74.fca.44.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 44
  store <4 x double>* %v4GMP74.fca.44.extract, <4 x double>** %v4GMP74.fca.44.gep
  %v4GMP74.fca.45.extract = extractvalue %gemPrm %v4GMP74, 45
  %v4GMP74.fca.45.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 45
  store <4 x double>* %v4GMP74.fca.45.extract, <4 x double>** %v4GMP74.fca.45.gep
  %v4GMP74.fca.46.extract = extractvalue %gemPrm %v4GMP74, 46
  %v4GMP74.fca.46.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 46
  store <4 x double>* %v4GMP74.fca.46.extract, <4 x double>** %v4GMP74.fca.46.gep
  %v4GMP74.fca.47.extract = extractvalue %gemPrm %v4GMP74, 47
  %v4GMP74.fca.47.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 47
  store <4 x double>* %v4GMP74.fca.47.extract, <4 x double>** %v4GMP74.fca.47.gep
  %v4GMP74.fca.48.extract = extractvalue %gemPrm %v4GMP74, 48
  %v4GMP74.fca.48.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 48
  store <4 x double>* %v4GMP74.fca.48.extract, <4 x double>** %v4GMP74.fca.48.gep
  %v4GMP74.fca.49.extract = extractvalue %gemPrm %v4GMP74, 49
  %v4GMP74.fca.49.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 49
  store <4 x double>* %v4GMP74.fca.49.extract, <4 x double>** %v4GMP74.fca.49.gep
  %v4GMP74.fca.50.extract = extractvalue %gemPrm %v4GMP74, 50
  %v4GMP74.fca.50.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 50
  store <4 x double>* %v4GMP74.fca.50.extract, <4 x double>** %v4GMP74.fca.50.gep
  %p1GMP75 = call %gemPrm @"gemPrm@Z6gemPrmM51N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[P"()
  %p1GMP75.fca.0.extract = extractvalue %gemPrm %p1GMP75, 0
  %p1GMP75.fca.0.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 0
  store double* %p1GMP75.fca.0.extract, double** %p1GMP75.fca.0.gep
  %p1GMP75.fca.1.extract = extractvalue %gemPrm %p1GMP75, 1
  %p1GMP75.fca.1.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 1
  store double* %p1GMP75.fca.1.extract, double** %p1GMP75.fca.1.gep
  %p1GMP75.fca.2.extract = extractvalue %gemPrm %p1GMP75, 2
  %p1GMP75.fca.2.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 2
  store double* %p1GMP75.fca.2.extract, double** %p1GMP75.fca.2.gep
  %p1GMP75.fca.3.extract = extractvalue %gemPrm %p1GMP75, 3
  %p1GMP75.fca.3.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 3
  store double* %p1GMP75.fca.3.extract, double** %p1GMP75.fca.3.gep
  %p1GMP75.fca.4.extract = extractvalue %gemPrm %p1GMP75, 4
  %p1GMP75.fca.4.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 4
  store double* %p1GMP75.fca.4.extract, double** %p1GMP75.fca.4.gep
  %p1GMP75.fca.5.extract = extractvalue %gemPrm %p1GMP75, 5
  %p1GMP75.fca.5.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 5
  store double* %p1GMP75.fca.5.extract, double** %p1GMP75.fca.5.gep
  %p1GMP75.fca.6.extract = extractvalue %gemPrm %p1GMP75, 6
  %p1GMP75.fca.6.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 6
  store <3 x double>* %p1GMP75.fca.6.extract, <3 x double>** %p1GMP75.fca.6.gep
  %p1GMP75.fca.7.extract = extractvalue %gemPrm %p1GMP75, 7
  %p1GMP75.fca.7.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 7
  store <3 x double>* %p1GMP75.fca.7.extract, <3 x double>** %p1GMP75.fca.7.gep
  %p1GMP75.fca.8.extract = extractvalue %gemPrm %p1GMP75, 8
  %p1GMP75.fca.8.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 8
  store <3 x double>* %p1GMP75.fca.8.extract, <3 x double>** %p1GMP75.fca.8.gep
  %p1GMP75.fca.9.extract = extractvalue %gemPrm %p1GMP75, 9
  %p1GMP75.fca.9.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 9
  store <3 x double>* %p1GMP75.fca.9.extract, <3 x double>** %p1GMP75.fca.9.gep
  %p1GMP75.fca.10.extract = extractvalue %gemPrm %p1GMP75, 10
  %p1GMP75.fca.10.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 10
  store <3 x double>* %p1GMP75.fca.10.extract, <3 x double>** %p1GMP75.fca.10.gep
  %p1GMP75.fca.11.extract = extractvalue %gemPrm %p1GMP75, 11
  %p1GMP75.fca.11.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 11
  store <3 x double>* %p1GMP75.fca.11.extract, <3 x double>** %p1GMP75.fca.11.gep
  %p1GMP75.fca.12.extract = extractvalue %gemPrm %p1GMP75, 12
  %p1GMP75.fca.12.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 12
  store <3 x double>* %p1GMP75.fca.12.extract, <3 x double>** %p1GMP75.fca.12.gep
  %p1GMP75.fca.13.extract = extractvalue %gemPrm %p1GMP75, 13
  %p1GMP75.fca.13.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 13
  store <2 x double>* %p1GMP75.fca.13.extract, <2 x double>** %p1GMP75.fca.13.gep
  %p1GMP75.fca.14.extract = extractvalue %gemPrm %p1GMP75, 14
  %p1GMP75.fca.14.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 14
  store <2 x double>* %p1GMP75.fca.14.extract, <2 x double>** %p1GMP75.fca.14.gep
  %p1GMP75.fca.15.extract = extractvalue %gemPrm %p1GMP75, 15
  %p1GMP75.fca.15.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 15
  store <2 x double>* %p1GMP75.fca.15.extract, <2 x double>** %p1GMP75.fca.15.gep
  %p1GMP75.fca.16.extract = extractvalue %gemPrm %p1GMP75, 16
  %p1GMP75.fca.16.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 16
  store <2 x double>* %p1GMP75.fca.16.extract, <2 x double>** %p1GMP75.fca.16.gep
  %p1GMP75.fca.17.extract = extractvalue %gemPrm %p1GMP75, 17
  %p1GMP75.fca.17.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 17
  store <2 x double>* %p1GMP75.fca.17.extract, <2 x double>** %p1GMP75.fca.17.gep
  %p1GMP75.fca.18.extract = extractvalue %gemPrm %p1GMP75, 18
  %p1GMP75.fca.18.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 18
  store <2 x double>* %p1GMP75.fca.18.extract, <2 x double>** %p1GMP75.fca.18.gep
  %p1GMP75.fca.19.extract = extractvalue %gemPrm %p1GMP75, 19
  %p1GMP75.fca.19.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 19
  store <2 x double>* %p1GMP75.fca.19.extract, <2 x double>** %p1GMP75.fca.19.gep
  %p1GMP75.fca.20.extract = extractvalue %gemPrm %p1GMP75, 20
  %p1GMP75.fca.20.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 20
  store <2 x double>* %p1GMP75.fca.20.extract, <2 x double>** %p1GMP75.fca.20.gep
  %p1GMP75.fca.21.extract = extractvalue %gemPrm %p1GMP75, 21
  %p1GMP75.fca.21.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 21
  store <2 x double>* %p1GMP75.fca.21.extract, <2 x double>** %p1GMP75.fca.21.gep
  %p1GMP75.fca.22.extract = extractvalue %gemPrm %p1GMP75, 22
  %p1GMP75.fca.22.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 22
  store <2 x double>* %p1GMP75.fca.22.extract, <2 x double>** %p1GMP75.fca.22.gep
  %p1GMP75.fca.23.extract = extractvalue %gemPrm %p1GMP75, 23
  %p1GMP75.fca.23.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 23
  store <2 x double>* %p1GMP75.fca.23.extract, <2 x double>** %p1GMP75.fca.23.gep
  %p1GMP75.fca.24.extract = extractvalue %gemPrm %p1GMP75, 24
  %p1GMP75.fca.24.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 24
  store <2 x double>* %p1GMP75.fca.24.extract, <2 x double>** %p1GMP75.fca.24.gep
  %p1GMP75.fca.25.extract = extractvalue %gemPrm %p1GMP75, 25
  %p1GMP75.fca.25.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 25
  store <2 x double>* %p1GMP75.fca.25.extract, <2 x double>** %p1GMP75.fca.25.gep
  %p1GMP75.fca.26.extract = extractvalue %gemPrm %p1GMP75, 26
  %p1GMP75.fca.26.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 26
  store <2 x double>* %p1GMP75.fca.26.extract, <2 x double>** %p1GMP75.fca.26.gep
  %p1GMP75.fca.27.extract = extractvalue %gemPrm %p1GMP75, 27
  %p1GMP75.fca.27.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 27
  store <2 x double>* %p1GMP75.fca.27.extract, <2 x double>** %p1GMP75.fca.27.gep
  %p1GMP75.fca.28.extract = extractvalue %gemPrm %p1GMP75, 28
  %p1GMP75.fca.28.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 28
  store <2 x double>* %p1GMP75.fca.28.extract, <2 x double>** %p1GMP75.fca.28.gep
  %p1GMP75.fca.29.extract = extractvalue %gemPrm %p1GMP75, 29
  %p1GMP75.fca.29.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 29
  store <2 x double>* %p1GMP75.fca.29.extract, <2 x double>** %p1GMP75.fca.29.gep
  %p1GMP75.fca.30.extract = extractvalue %gemPrm %p1GMP75, 30
  %p1GMP75.fca.30.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 30
  store <2 x double>* %p1GMP75.fca.30.extract, <2 x double>** %p1GMP75.fca.30.gep
  %p1GMP75.fca.31.extract = extractvalue %gemPrm %p1GMP75, 31
  %p1GMP75.fca.31.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 31
  store <2 x double>* %p1GMP75.fca.31.extract, <2 x double>** %p1GMP75.fca.31.gep
  %p1GMP75.fca.32.extract = extractvalue %gemPrm %p1GMP75, 32
  %p1GMP75.fca.32.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 32
  store <2 x double>* %p1GMP75.fca.32.extract, <2 x double>** %p1GMP75.fca.32.gep
  %p1GMP75.fca.33.extract = extractvalue %gemPrm %p1GMP75, 33
  %p1GMP75.fca.33.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 33
  store <2 x double>* %p1GMP75.fca.33.extract, <2 x double>** %p1GMP75.fca.33.gep
  %p1GMP75.fca.34.extract = extractvalue %gemPrm %p1GMP75, 34
  %p1GMP75.fca.34.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 34
  store <2 x double>* %p1GMP75.fca.34.extract, <2 x double>** %p1GMP75.fca.34.gep
  %p1GMP75.fca.35.extract = extractvalue %gemPrm %p1GMP75, 35
  %p1GMP75.fca.35.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 35
  store <2 x double>* %p1GMP75.fca.35.extract, <2 x double>** %p1GMP75.fca.35.gep
  %p1GMP75.fca.36.extract = extractvalue %gemPrm %p1GMP75, 36
  %p1GMP75.fca.36.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 36
  store <2 x double>* %p1GMP75.fca.36.extract, <2 x double>** %p1GMP75.fca.36.gep
  %p1GMP75.fca.37.extract = extractvalue %gemPrm %p1GMP75, 37
  %p1GMP75.fca.37.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 37
  store <2 x double>* %p1GMP75.fca.37.extract, <2 x double>** %p1GMP75.fca.37.gep
  %p1GMP75.fca.38.extract = extractvalue %gemPrm %p1GMP75, 38
  %p1GMP75.fca.38.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 38
  store <2 x double>* %p1GMP75.fca.38.extract, <2 x double>** %p1GMP75.fca.38.gep
  %p1GMP75.fca.39.extract = extractvalue %gemPrm %p1GMP75, 39
  %p1GMP75.fca.39.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 39
  store <2 x double>* %p1GMP75.fca.39.extract, <2 x double>** %p1GMP75.fca.39.gep
  %p1GMP75.fca.40.extract = extractvalue %gemPrm %p1GMP75, 40
  %p1GMP75.fca.40.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 40
  store <2 x double>* %p1GMP75.fca.40.extract, <2 x double>** %p1GMP75.fca.40.gep
  %p1GMP75.fca.41.extract = extractvalue %gemPrm %p1GMP75, 41
  %p1GMP75.fca.41.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 41
  store <2 x double>* %p1GMP75.fca.41.extract, <2 x double>** %p1GMP75.fca.41.gep
  %p1GMP75.fca.42.extract = extractvalue %gemPrm %p1GMP75, 42
  %p1GMP75.fca.42.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 42
  store <4 x double>* %p1GMP75.fca.42.extract, <4 x double>** %p1GMP75.fca.42.gep
  %p1GMP75.fca.43.extract = extractvalue %gemPrm %p1GMP75, 43
  %p1GMP75.fca.43.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 43
  store <4 x double>* %p1GMP75.fca.43.extract, <4 x double>** %p1GMP75.fca.43.gep
  %p1GMP75.fca.44.extract = extractvalue %gemPrm %p1GMP75, 44
  %p1GMP75.fca.44.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 44
  store <4 x double>* %p1GMP75.fca.44.extract, <4 x double>** %p1GMP75.fca.44.gep
  %p1GMP75.fca.45.extract = extractvalue %gemPrm %p1GMP75, 45
  %p1GMP75.fca.45.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 45
  store <4 x double>* %p1GMP75.fca.45.extract, <4 x double>** %p1GMP75.fca.45.gep
  %p1GMP75.fca.46.extract = extractvalue %gemPrm %p1GMP75, 46
  %p1GMP75.fca.46.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 46
  store <4 x double>* %p1GMP75.fca.46.extract, <4 x double>** %p1GMP75.fca.46.gep
  %p1GMP75.fca.47.extract = extractvalue %gemPrm %p1GMP75, 47
  %p1GMP75.fca.47.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 47
  store <4 x double>* %p1GMP75.fca.47.extract, <4 x double>** %p1GMP75.fca.47.gep
  %p1GMP75.fca.48.extract = extractvalue %gemPrm %p1GMP75, 48
  %p1GMP75.fca.48.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 48
  store <4 x double>* %p1GMP75.fca.48.extract, <4 x double>** %p1GMP75.fca.48.gep
  %p1GMP75.fca.49.extract = extractvalue %gemPrm %p1GMP75, 49
  %p1GMP75.fca.49.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 49
  store <4 x double>* %p1GMP75.fca.49.extract, <4 x double>** %p1GMP75.fca.49.gep
  %p1GMP75.fca.50.extract = extractvalue %gemPrm %p1GMP75, 50
  %p1GMP75.fca.50.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 50
  store <4 x double>* %p1GMP75.fca.50.extract, <4 x double>** %p1GMP75.fca.50.gep
  store i8** %GEM7.fca.37.load, i8*** %2
  store i64* %GEM7.fca.0.load, i64** %3
  store double* %GEM7.fca.11.load, double** %4
  call void @"gemPrmBuild@Z6gemPrmM51N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[P[S[I[F"(%gemPrm* %v1GMP, i8*** %2, i64** %3, double** %4)
  store i8** %GEM7.fca.37.load, i8*** %5
  store i64* %GEM7.fca.1.load, i64** %6
  store double* %GEM7.fca.12.load, double** %7
  call void @"gemPrmBuild@Z6gemPrmM51N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[P[S[I[F"(%gemPrm* %v2GMP, i8*** %5, i64** %6, double** %7)
  store i8** %GEM7.fca.37.load, i8*** %8
  store i64* %GEM7.fca.2.load, i64** %9
  store double* %GEM7.fca.13.load, double** %10
  call void @"gemPrmBuild@Z6gemPrmM51N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[P[S[I[F"(%gemPrm* %v3GMP, i8*** %8, i64** %9, double** %10)
  store i8** %GEM7.fca.37.load, i8*** %11
  store i64* %GEM7.fca.3.load, i64** %12
  store double* %GEM7.fca.14.load, double** %13
  call void @"gemPrmBuild@Z6gemPrmM51N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[P[S[I[F"(%gemPrm* %v4GMP, i8*** %11, i64** %12, double** %13)
  store i8** %GEM7.fca.37.load, i8*** %14
  store i64* %GEM7.fca.4.load, i64** %15
  store double* %GEM7.fca.15.load, double** %16
  call void @"gemPrmBuild@Z6gemPrmM51N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[P[S[I[F"(%gemPrm* %p1GMP, i8*** %14, i64** %15, double** %16)
  %_bound_XAOS91 = load i64, i64* %_bound_XAOS
  %_bound_XAOS_TO92 = load double*, double** %_bound_XAOS_TO
  %105 = icmp ne i64 %_bound_XAOS91, 0
  br i1 %105, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %return = call i64 @"len@I[S"(i8** %GEM7.fca.37.load)
  %return95 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i64 0, i64 0))
  %cast = sitofp i64 %return to double
  %output = fmul double %return95, %cast
  %cast97 = fptosi double %output to i64
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %n.0 = phi i64 [ %return, %true ], [ 0, %__llvm_entry ]
  %idx.0 = phi i64 [ %cast97, %true ], [ 0, %__llvm_entry ]
  %biunit = call <2 x double> @"biunit@U"()
  store <2 x double> %biunit, <2 x double>* %__mem
  br label %cond

cond:                                             ; preds = %end283, %end
  %CLR.0 = phi double [ 0.000000e+00, %end ], [ %output301, %end283 ]
  %PREV_CLR.0 = phi double [ 0.000000e+00, %end ], [ %output301, %end283 ]
  %i.0 = phi i64 [ 0, %end ], [ %output304, %end283 ]
  %idx.1 = phi i64 [ %idx.0, %end ], [ %idx.2, %end283 ]
  %return100 = call i64 @"lt@III"(i64 %i.0, i64 %SYS5.fca.6.load)
  %106 = icmp ne i64 %return100, 0
  br i1 %106, label %body, label %end101

body:                                             ; preds = %cond
  %cast103 = call <2 x double> @"set@UI"(i64 0)
  store <2 x double> %cast103, <2 x double>* %__tmp
  br i1 %105, label %true105, label %false

end101:                                           ; preds = %cond
  %107 = icmp ne i64 %SYS5.fca.1.load, 0
  br i1 %107, label %true306, label %end307

true105:                                          ; preds = %body
  %output109 = mul i64 %idx.1, %n.0
  %output114 = add i64 %output109, %n.0
  %return115 = call double* @"slice@[F[FIIIIII"(double* %_bound_XAOS_TO92, i64 1, i64 %output109, i64 1, i64 %output114, i64 0, i64 0)
  %return117 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i64 0, i64 0))
  %return118 = call i64 @"sample_cdf@[FFI"(double* %return115, double %return117)
  br label %end106

false:                                            ; preds = %body
  %return120 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i64 0, i64 0))
  %output121 = fmul double %return120, 4.096000e+03
  %cast122 = fptosi double %output121 to i64
  %return123 = call double @"getcomp@F[FI"(double* %_bound_XAOS_TO92, i64 %cast122)
  %cast124 = fptosi double %return123 to i64
  br label %end106

end106:                                           ; preds = %false, %true105
  %idx.2 = phi i64 [ %return118, %true105 ], [ %cast124, %false ]
  %return127 = call double @"getcomp@F[FI"(double* %GEM7.fca.16.load, i64 %idx.2)
  %return128 = fcmp ogt double %return127, 0.000000e+00
  br i1 %return128, label %true130, label %end131

true130:                                          ; preds = %end106
  %return134 = call i64 @"getcomp@I[II"(i64* %GEM7.fca.5.load, i64 %idx.2)
  store i64 %return134, i64* %17
  %__mem135 = load <2 x double>, <2 x double>* %__mem
  store <2 x double> %__mem135, <2 x double>* %18
  store <2 x double> <double 1.000000e+00, double 0.000000e+00>, <2 x double>* %19
  store <2 x double> <double 0.000000e+00, double 1.000000e+00>, <2 x double>* %20
  store <2 x double> zeroinitializer, <2 x double>* %21
  store double %return127, double* %22
  %FLAMEPP = call <2 x double> @"FLAMEPP@UIUUUUF"(i64* %17, <2 x double>* %18, <2 x double>* %19, <2 x double>* %20, <2 x double>* %21, double* %22)
  store <2 x double> %FLAMEPP, <2 x double>* %__mem
  br label %end131

end131:                                           ; preds = %true130, %end106
  %return141 = call double @"getcomp@F[FI"(double* %GEM7.fca.11.load, i64 %idx.2)
  %return142 = fcmp one double %return141, 0.000000e+00
  br i1 %return142, label %true144, label %end145

true144:                                          ; preds = %end131
  %__tmp146 = load <2 x double>, <2 x double>* %__tmp
  %v1GMP147.fca.0.load = load double*, double** %v1GMP71.fca.0.gep
  %v1GMP147.fca.0.insert = insertvalue %gemPrm undef, double* %v1GMP147.fca.0.load, 0
  %v1GMP147.fca.1.load = load double*, double** %v1GMP71.fca.1.gep
  %v1GMP147.fca.1.insert = insertvalue %gemPrm %v1GMP147.fca.0.insert, double* %v1GMP147.fca.1.load, 1
  %v1GMP147.fca.2.load = load double*, double** %v1GMP71.fca.2.gep
  %v1GMP147.fca.2.insert = insertvalue %gemPrm %v1GMP147.fca.1.insert, double* %v1GMP147.fca.2.load, 2
  %v1GMP147.fca.3.load = load double*, double** %v1GMP71.fca.3.gep
  %v1GMP147.fca.3.insert = insertvalue %gemPrm %v1GMP147.fca.2.insert, double* %v1GMP147.fca.3.load, 3
  %v1GMP147.fca.4.load = load double*, double** %v1GMP71.fca.4.gep
  %v1GMP147.fca.4.insert = insertvalue %gemPrm %v1GMP147.fca.3.insert, double* %v1GMP147.fca.4.load, 4
  %v1GMP147.fca.5.load = load double*, double** %v1GMP71.fca.5.gep
  %v1GMP147.fca.5.insert = insertvalue %gemPrm %v1GMP147.fca.4.insert, double* %v1GMP147.fca.5.load, 5
  %v1GMP147.fca.6.load = load <3 x double>*, <3 x double>** %v1GMP71.fca.6.gep
  %v1GMP147.fca.6.insert = insertvalue %gemPrm %v1GMP147.fca.5.insert, <3 x double>* %v1GMP147.fca.6.load, 6
  %v1GMP147.fca.7.load = load <3 x double>*, <3 x double>** %v1GMP71.fca.7.gep
  %v1GMP147.fca.7.insert = insertvalue %gemPrm %v1GMP147.fca.6.insert, <3 x double>* %v1GMP147.fca.7.load, 7
  %v1GMP147.fca.8.load = load <3 x double>*, <3 x double>** %v1GMP71.fca.8.gep
  %v1GMP147.fca.8.insert = insertvalue %gemPrm %v1GMP147.fca.7.insert, <3 x double>* %v1GMP147.fca.8.load, 8
  %v1GMP147.fca.9.load = load <3 x double>*, <3 x double>** %v1GMP71.fca.9.gep
  %v1GMP147.fca.9.insert = insertvalue %gemPrm %v1GMP147.fca.8.insert, <3 x double>* %v1GMP147.fca.9.load, 9
  %v1GMP147.fca.10.load = load <3 x double>*, <3 x double>** %v1GMP71.fca.10.gep
  %v1GMP147.fca.10.insert = insertvalue %gemPrm %v1GMP147.fca.9.insert, <3 x double>* %v1GMP147.fca.10.load, 10
  %v1GMP147.fca.11.load = load <3 x double>*, <3 x double>** %v1GMP71.fca.11.gep
  %v1GMP147.fca.11.insert = insertvalue %gemPrm %v1GMP147.fca.10.insert, <3 x double>* %v1GMP147.fca.11.load, 11
  %v1GMP147.fca.12.load = load <3 x double>*, <3 x double>** %v1GMP71.fca.12.gep
  %v1GMP147.fca.12.insert = insertvalue %gemPrm %v1GMP147.fca.11.insert, <3 x double>* %v1GMP147.fca.12.load, 12
  %v1GMP147.fca.13.load = load <2 x double>*, <2 x double>** %v1GMP71.fca.13.gep
  %v1GMP147.fca.13.insert = insertvalue %gemPrm %v1GMP147.fca.12.insert, <2 x double>* %v1GMP147.fca.13.load, 13
  %v1GMP147.fca.14.load = load <2 x double>*, <2 x double>** %v1GMP71.fca.14.gep
  %v1GMP147.fca.14.insert = insertvalue %gemPrm %v1GMP147.fca.13.insert, <2 x double>* %v1GMP147.fca.14.load, 14
  %v1GMP147.fca.15.load = load <2 x double>*, <2 x double>** %v1GMP71.fca.15.gep
  %v1GMP147.fca.15.insert = insertvalue %gemPrm %v1GMP147.fca.14.insert, <2 x double>* %v1GMP147.fca.15.load, 15
  %v1GMP147.fca.16.load = load <2 x double>*, <2 x double>** %v1GMP71.fca.16.gep
  %v1GMP147.fca.16.insert = insertvalue %gemPrm %v1GMP147.fca.15.insert, <2 x double>* %v1GMP147.fca.16.load, 16
  %v1GMP147.fca.17.load = load <2 x double>*, <2 x double>** %v1GMP71.fca.17.gep
  %v1GMP147.fca.17.insert = insertvalue %gemPrm %v1GMP147.fca.16.insert, <2 x double>* %v1GMP147.fca.17.load, 17
  %v1GMP147.fca.18.load = load <2 x double>*, <2 x double>** %v1GMP71.fca.18.gep
  %v1GMP147.fca.18.insert = insertvalue %gemPrm %v1GMP147.fca.17.insert, <2 x double>* %v1GMP147.fca.18.load, 18
  %v1GMP147.fca.19.load = load <2 x double>*, <2 x double>** %v1GMP71.fca.19.gep
  %v1GMP147.fca.19.insert = insertvalue %gemPrm %v1GMP147.fca.18.insert, <2 x double>* %v1GMP147.fca.19.load, 19
  %v1GMP147.fca.20.load = load <2 x double>*, <2 x double>** %v1GMP71.fca.20.gep
  %v1GMP147.fca.20.insert = insertvalue %gemPrm %v1GMP147.fca.19.insert, <2 x double>* %v1GMP147.fca.20.load, 20
  %v1GMP147.fca.21.load = load <2 x double>*, <2 x double>** %v1GMP71.fca.21.gep
  %v1GMP147.fca.21.insert = insertvalue %gemPrm %v1GMP147.fca.20.insert, <2 x double>* %v1GMP147.fca.21.load, 21
  %v1GMP147.fca.22.load = load <2 x double>*, <2 x double>** %v1GMP71.fca.22.gep
  %v1GMP147.fca.22.insert = insertvalue %gemPrm %v1GMP147.fca.21.insert, <2 x double>* %v1GMP147.fca.22.load, 22
  %v1GMP147.fca.23.load = load <2 x double>*, <2 x double>** %v1GMP71.fca.23.gep
  %v1GMP147.fca.23.insert = insertvalue %gemPrm %v1GMP147.fca.22.insert, <2 x double>* %v1GMP147.fca.23.load, 23
  %v1GMP147.fca.24.load = load <2 x double>*, <2 x double>** %v1GMP71.fca.24.gep
  %v1GMP147.fca.24.insert = insertvalue %gemPrm %v1GMP147.fca.23.insert, <2 x double>* %v1GMP147.fca.24.load, 24
  %v1GMP147.fca.25.load = load <2 x double>*, <2 x double>** %v1GMP71.fca.25.gep
  %v1GMP147.fca.25.insert = insertvalue %gemPrm %v1GMP147.fca.24.insert, <2 x double>* %v1GMP147.fca.25.load, 25
  %v1GMP147.fca.26.load = load <2 x double>*, <2 x double>** %v1GMP71.fca.26.gep
  %v1GMP147.fca.26.insert = insertvalue %gemPrm %v1GMP147.fca.25.insert, <2 x double>* %v1GMP147.fca.26.load, 26
  %v1GMP147.fca.27.load = load <2 x double>*, <2 x double>** %v1GMP71.fca.27.gep
  %v1GMP147.fca.27.insert = insertvalue %gemPrm %v1GMP147.fca.26.insert, <2 x double>* %v1GMP147.fca.27.load, 27
  %v1GMP147.fca.28.load = load <2 x double>*, <2 x double>** %v1GMP71.fca.28.gep
  %v1GMP147.fca.28.insert = insertvalue %gemPrm %v1GMP147.fca.27.insert, <2 x double>* %v1GMP147.fca.28.load, 28
  %v1GMP147.fca.29.load = load <2 x double>*, <2 x double>** %v1GMP71.fca.29.gep
  %v1GMP147.fca.29.insert = insertvalue %gemPrm %v1GMP147.fca.28.insert, <2 x double>* %v1GMP147.fca.29.load, 29
  %v1GMP147.fca.30.load = load <2 x double>*, <2 x double>** %v1GMP71.fca.30.gep
  %v1GMP147.fca.30.insert = insertvalue %gemPrm %v1GMP147.fca.29.insert, <2 x double>* %v1GMP147.fca.30.load, 30
  %v1GMP147.fca.31.load = load <2 x double>*, <2 x double>** %v1GMP71.fca.31.gep
  %v1GMP147.fca.31.insert = insertvalue %gemPrm %v1GMP147.fca.30.insert, <2 x double>* %v1GMP147.fca.31.load, 31
  %v1GMP147.fca.32.load = load <2 x double>*, <2 x double>** %v1GMP71.fca.32.gep
  %v1GMP147.fca.32.insert = insertvalue %gemPrm %v1GMP147.fca.31.insert, <2 x double>* %v1GMP147.fca.32.load, 32
  %v1GMP147.fca.33.load = load <2 x double>*, <2 x double>** %v1GMP71.fca.33.gep
  %v1GMP147.fca.33.insert = insertvalue %gemPrm %v1GMP147.fca.32.insert, <2 x double>* %v1GMP147.fca.33.load, 33
  %v1GMP147.fca.34.load = load <2 x double>*, <2 x double>** %v1GMP71.fca.34.gep
  %v1GMP147.fca.34.insert = insertvalue %gemPrm %v1GMP147.fca.33.insert, <2 x double>* %v1GMP147.fca.34.load, 34
  %v1GMP147.fca.35.load = load <2 x double>*, <2 x double>** %v1GMP71.fca.35.gep
  %v1GMP147.fca.35.insert = insertvalue %gemPrm %v1GMP147.fca.34.insert, <2 x double>* %v1GMP147.fca.35.load, 35
  %v1GMP147.fca.36.load = load <2 x double>*, <2 x double>** %v1GMP71.fca.36.gep
  %v1GMP147.fca.36.insert = insertvalue %gemPrm %v1GMP147.fca.35.insert, <2 x double>* %v1GMP147.fca.36.load, 36
  %v1GMP147.fca.37.load = load <2 x double>*, <2 x double>** %v1GMP71.fca.37.gep
  %v1GMP147.fca.37.insert = insertvalue %gemPrm %v1GMP147.fca.36.insert, <2 x double>* %v1GMP147.fca.37.load, 37
  %v1GMP147.fca.38.load = load <2 x double>*, <2 x double>** %v1GMP71.fca.38.gep
  %v1GMP147.fca.38.insert = insertvalue %gemPrm %v1GMP147.fca.37.insert, <2 x double>* %v1GMP147.fca.38.load, 38
  %v1GMP147.fca.39.load = load <2 x double>*, <2 x double>** %v1GMP71.fca.39.gep
  %v1GMP147.fca.39.insert = insertvalue %gemPrm %v1GMP147.fca.38.insert, <2 x double>* %v1GMP147.fca.39.load, 39
  %v1GMP147.fca.40.load = load <2 x double>*, <2 x double>** %v1GMP71.fca.40.gep
  %v1GMP147.fca.40.insert = insertvalue %gemPrm %v1GMP147.fca.39.insert, <2 x double>* %v1GMP147.fca.40.load, 40
  %v1GMP147.fca.41.load = load <2 x double>*, <2 x double>** %v1GMP71.fca.41.gep
  %v1GMP147.fca.41.insert = insertvalue %gemPrm %v1GMP147.fca.40.insert, <2 x double>* %v1GMP147.fca.41.load, 41
  %v1GMP147.fca.42.load = load <4 x double>*, <4 x double>** %v1GMP71.fca.42.gep
  %v1GMP147.fca.42.insert = insertvalue %gemPrm %v1GMP147.fca.41.insert, <4 x double>* %v1GMP147.fca.42.load, 42
  %v1GMP147.fca.43.load = load <4 x double>*, <4 x double>** %v1GMP71.fca.43.gep
  %v1GMP147.fca.43.insert = insertvalue %gemPrm %v1GMP147.fca.42.insert, <4 x double>* %v1GMP147.fca.43.load, 43
  %v1GMP147.fca.44.load = load <4 x double>*, <4 x double>** %v1GMP71.fca.44.gep
  %v1GMP147.fca.44.insert = insertvalue %gemPrm %v1GMP147.fca.43.insert, <4 x double>* %v1GMP147.fca.44.load, 44
  %v1GMP147.fca.45.load = load <4 x double>*, <4 x double>** %v1GMP71.fca.45.gep
  %v1GMP147.fca.45.insert = insertvalue %gemPrm %v1GMP147.fca.44.insert, <4 x double>* %v1GMP147.fca.45.load, 45
  %v1GMP147.fca.46.load = load <4 x double>*, <4 x double>** %v1GMP71.fca.46.gep
  %v1GMP147.fca.46.insert = insertvalue %gemPrm %v1GMP147.fca.45.insert, <4 x double>* %v1GMP147.fca.46.load, 46
  %v1GMP147.fca.47.load = load <4 x double>*, <4 x double>** %v1GMP71.fca.47.gep
  %v1GMP147.fca.47.insert = insertvalue %gemPrm %v1GMP147.fca.46.insert, <4 x double>* %v1GMP147.fca.47.load, 47
  %v1GMP147.fca.48.load = load <4 x double>*, <4 x double>** %v1GMP71.fca.48.gep
  %v1GMP147.fca.48.insert = insertvalue %gemPrm %v1GMP147.fca.47.insert, <4 x double>* %v1GMP147.fca.48.load, 48
  %v1GMP147.fca.49.load = load <4 x double>*, <4 x double>** %v1GMP71.fca.49.gep
  %v1GMP147.fca.49.insert = insertvalue %gemPrm %v1GMP147.fca.48.insert, <4 x double>* %v1GMP147.fca.49.load, 49
  %v1GMP147.fca.50.load = load <4 x double>*, <4 x double>** %v1GMP71.fca.50.gep
  %v1GMP147.fca.0.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 0
  store double* %v1GMP147.fca.0.load, double** %v1GMP147.fca.0.gep
  %v1GMP147.fca.1.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 1
  store double* %v1GMP147.fca.1.load, double** %v1GMP147.fca.1.gep
  %v1GMP147.fca.2.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 2
  store double* %v1GMP147.fca.2.load, double** %v1GMP147.fca.2.gep
  %v1GMP147.fca.3.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 3
  store double* %v1GMP147.fca.3.load, double** %v1GMP147.fca.3.gep
  %v1GMP147.fca.4.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 4
  store double* %v1GMP147.fca.4.load, double** %v1GMP147.fca.4.gep
  %v1GMP147.fca.5.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 5
  store double* %v1GMP147.fca.5.load, double** %v1GMP147.fca.5.gep
  %v1GMP147.fca.6.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 6
  store <3 x double>* %v1GMP147.fca.6.load, <3 x double>** %v1GMP147.fca.6.gep
  %v1GMP147.fca.7.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 7
  store <3 x double>* %v1GMP147.fca.7.load, <3 x double>** %v1GMP147.fca.7.gep
  %v1GMP147.fca.8.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 8
  store <3 x double>* %v1GMP147.fca.8.load, <3 x double>** %v1GMP147.fca.8.gep
  %v1GMP147.fca.9.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 9
  store <3 x double>* %v1GMP147.fca.9.load, <3 x double>** %v1GMP147.fca.9.gep
  %v1GMP147.fca.10.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 10
  store <3 x double>* %v1GMP147.fca.10.load, <3 x double>** %v1GMP147.fca.10.gep
  %v1GMP147.fca.11.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 11
  store <3 x double>* %v1GMP147.fca.11.load, <3 x double>** %v1GMP147.fca.11.gep
  %v1GMP147.fca.12.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 12
  store <3 x double>* %v1GMP147.fca.12.load, <3 x double>** %v1GMP147.fca.12.gep
  %v1GMP147.fca.13.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 13
  store <2 x double>* %v1GMP147.fca.13.load, <2 x double>** %v1GMP147.fca.13.gep
  %v1GMP147.fca.14.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 14
  store <2 x double>* %v1GMP147.fca.14.load, <2 x double>** %v1GMP147.fca.14.gep
  %v1GMP147.fca.15.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 15
  store <2 x double>* %v1GMP147.fca.15.load, <2 x double>** %v1GMP147.fca.15.gep
  %v1GMP147.fca.16.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 16
  store <2 x double>* %v1GMP147.fca.16.load, <2 x double>** %v1GMP147.fca.16.gep
  %v1GMP147.fca.17.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 17
  store <2 x double>* %v1GMP147.fca.17.load, <2 x double>** %v1GMP147.fca.17.gep
  %v1GMP147.fca.18.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 18
  store <2 x double>* %v1GMP147.fca.18.load, <2 x double>** %v1GMP147.fca.18.gep
  %v1GMP147.fca.19.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 19
  store <2 x double>* %v1GMP147.fca.19.load, <2 x double>** %v1GMP147.fca.19.gep
  %v1GMP147.fca.20.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 20
  store <2 x double>* %v1GMP147.fca.20.load, <2 x double>** %v1GMP147.fca.20.gep
  %v1GMP147.fca.21.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 21
  store <2 x double>* %v1GMP147.fca.21.load, <2 x double>** %v1GMP147.fca.21.gep
  %v1GMP147.fca.22.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 22
  store <2 x double>* %v1GMP147.fca.22.load, <2 x double>** %v1GMP147.fca.22.gep
  %v1GMP147.fca.23.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 23
  store <2 x double>* %v1GMP147.fca.23.load, <2 x double>** %v1GMP147.fca.23.gep
  %v1GMP147.fca.24.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 24
  store <2 x double>* %v1GMP147.fca.24.load, <2 x double>** %v1GMP147.fca.24.gep
  %v1GMP147.fca.25.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 25
  store <2 x double>* %v1GMP147.fca.25.load, <2 x double>** %v1GMP147.fca.25.gep
  %v1GMP147.fca.26.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 26
  store <2 x double>* %v1GMP147.fca.26.load, <2 x double>** %v1GMP147.fca.26.gep
  %v1GMP147.fca.27.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 27
  store <2 x double>* %v1GMP147.fca.27.load, <2 x double>** %v1GMP147.fca.27.gep
  %v1GMP147.fca.28.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 28
  store <2 x double>* %v1GMP147.fca.28.load, <2 x double>** %v1GMP147.fca.28.gep
  %v1GMP147.fca.29.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 29
  store <2 x double>* %v1GMP147.fca.29.load, <2 x double>** %v1GMP147.fca.29.gep
  %v1GMP147.fca.30.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 30
  store <2 x double>* %v1GMP147.fca.30.load, <2 x double>** %v1GMP147.fca.30.gep
  %v1GMP147.fca.31.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 31
  store <2 x double>* %v1GMP147.fca.31.load, <2 x double>** %v1GMP147.fca.31.gep
  %v1GMP147.fca.32.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 32
  store <2 x double>* %v1GMP147.fca.32.load, <2 x double>** %v1GMP147.fca.32.gep
  %v1GMP147.fca.33.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 33
  store <2 x double>* %v1GMP147.fca.33.load, <2 x double>** %v1GMP147.fca.33.gep
  %v1GMP147.fca.34.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 34
  store <2 x double>* %v1GMP147.fca.34.load, <2 x double>** %v1GMP147.fca.34.gep
  %v1GMP147.fca.35.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 35
  store <2 x double>* %v1GMP147.fca.35.load, <2 x double>** %v1GMP147.fca.35.gep
  %v1GMP147.fca.36.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 36
  store <2 x double>* %v1GMP147.fca.36.load, <2 x double>** %v1GMP147.fca.36.gep
  %v1GMP147.fca.37.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 37
  store <2 x double>* %v1GMP147.fca.37.load, <2 x double>** %v1GMP147.fca.37.gep
  %v1GMP147.fca.38.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 38
  store <2 x double>* %v1GMP147.fca.38.load, <2 x double>** %v1GMP147.fca.38.gep
  %v1GMP147.fca.39.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 39
  store <2 x double>* %v1GMP147.fca.39.load, <2 x double>** %v1GMP147.fca.39.gep
  %v1GMP147.fca.40.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 40
  store <2 x double>* %v1GMP147.fca.40.load, <2 x double>** %v1GMP147.fca.40.gep
  %v1GMP147.fca.41.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 41
  store <2 x double>* %v1GMP147.fca.41.load, <2 x double>** %v1GMP147.fca.41.gep
  %v1GMP147.fca.42.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 42
  store <4 x double>* %v1GMP147.fca.42.load, <4 x double>** %v1GMP147.fca.42.gep
  %v1GMP147.fca.43.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 43
  store <4 x double>* %v1GMP147.fca.43.load, <4 x double>** %v1GMP147.fca.43.gep
  %v1GMP147.fca.44.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 44
  store <4 x double>* %v1GMP147.fca.44.load, <4 x double>** %v1GMP147.fca.44.gep
  %v1GMP147.fca.45.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 45
  store <4 x double>* %v1GMP147.fca.45.load, <4 x double>** %v1GMP147.fca.45.gep
  %v1GMP147.fca.46.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 46
  store <4 x double>* %v1GMP147.fca.46.load, <4 x double>** %v1GMP147.fca.46.gep
  %v1GMP147.fca.47.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 47
  store <4 x double>* %v1GMP147.fca.47.load, <4 x double>** %v1GMP147.fca.47.gep
  %v1GMP147.fca.48.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 48
  store <4 x double>* %v1GMP147.fca.48.load, <4 x double>** %v1GMP147.fca.48.gep
  %v1GMP147.fca.49.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 49
  store <4 x double>* %v1GMP147.fca.49.load, <4 x double>** %v1GMP147.fca.49.gep
  %v1GMP147.fca.50.gep = getelementptr inbounds %gemPrm, %gemPrm* %23, i32 0, i32 50
  store <4 x double>* %v1GMP147.fca.50.load, <4 x double>** %v1GMP147.fca.50.gep
  store i64 %idx.2, i64* %24
  %return151 = call i64 @"getcomp@I[II"(i64* %GEM7.fca.0.load, i64 %idx.2)
  store i64 %return151, i64* %25
  %__mem152 = load <2 x double>, <2 x double>* %__mem
  store <2 x double> %__mem152, <2 x double>* %26
  %return155 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM7.fca.25.load, i64 %idx.2)
  store <2 x double> %return155, <2 x double>* %27
  %return158 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM7.fca.26.load, i64 %idx.2)
  store <2 x double> %return158, <2 x double>* %28
  %return161 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM7.fca.27.load, i64 %idx.2)
  store <2 x double> %return161, <2 x double>* %29
  store double %return141, double* %30
  %FLAME = call <2 x double> @"FLAME@UZ6gemPrmM51N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PIIUUUUF"(%gemPrm* %23, i64* %24, i64* %25, <2 x double>* %26, <2 x double>* %27, <2 x double>* %28, <2 x double>* %29, double* %30)
  %output165 = call <2 x double> @"add@UU"(<2 x double> %__tmp146, <2 x double> %FLAME)
  store <2 x double> %output165, <2 x double>* %__tmp
  br label %end145

end145:                                           ; preds = %true144, %end131
  %return168 = call double @"getcomp@F[FI"(double* %GEM7.fca.12.load, i64 %idx.2)
  %return169 = fcmp one double %return168, 0.000000e+00
  br i1 %return169, label %true171, label %end172

true171:                                          ; preds = %end145
  %__tmp173 = load <2 x double>, <2 x double>* %__tmp
  %v2GMP174.fca.0.load = load double*, double** %v2GMP72.fca.0.gep
  %v2GMP174.fca.0.insert = insertvalue %gemPrm undef, double* %v2GMP174.fca.0.load, 0
  %v2GMP174.fca.1.load = load double*, double** %v2GMP72.fca.1.gep
  %v2GMP174.fca.1.insert = insertvalue %gemPrm %v2GMP174.fca.0.insert, double* %v2GMP174.fca.1.load, 1
  %v2GMP174.fca.2.load = load double*, double** %v2GMP72.fca.2.gep
  %v2GMP174.fca.2.insert = insertvalue %gemPrm %v2GMP174.fca.1.insert, double* %v2GMP174.fca.2.load, 2
  %v2GMP174.fca.3.load = load double*, double** %v2GMP72.fca.3.gep
  %v2GMP174.fca.3.insert = insertvalue %gemPrm %v2GMP174.fca.2.insert, double* %v2GMP174.fca.3.load, 3
  %v2GMP174.fca.4.load = load double*, double** %v2GMP72.fca.4.gep
  %v2GMP174.fca.4.insert = insertvalue %gemPrm %v2GMP174.fca.3.insert, double* %v2GMP174.fca.4.load, 4
  %v2GMP174.fca.5.load = load double*, double** %v2GMP72.fca.5.gep
  %v2GMP174.fca.5.insert = insertvalue %gemPrm %v2GMP174.fca.4.insert, double* %v2GMP174.fca.5.load, 5
  %v2GMP174.fca.6.load = load <3 x double>*, <3 x double>** %v2GMP72.fca.6.gep
  %v2GMP174.fca.6.insert = insertvalue %gemPrm %v2GMP174.fca.5.insert, <3 x double>* %v2GMP174.fca.6.load, 6
  %v2GMP174.fca.7.load = load <3 x double>*, <3 x double>** %v2GMP72.fca.7.gep
  %v2GMP174.fca.7.insert = insertvalue %gemPrm %v2GMP174.fca.6.insert, <3 x double>* %v2GMP174.fca.7.load, 7
  %v2GMP174.fca.8.load = load <3 x double>*, <3 x double>** %v2GMP72.fca.8.gep
  %v2GMP174.fca.8.insert = insertvalue %gemPrm %v2GMP174.fca.7.insert, <3 x double>* %v2GMP174.fca.8.load, 8
  %v2GMP174.fca.9.load = load <3 x double>*, <3 x double>** %v2GMP72.fca.9.gep
  %v2GMP174.fca.9.insert = insertvalue %gemPrm %v2GMP174.fca.8.insert, <3 x double>* %v2GMP174.fca.9.load, 9
  %v2GMP174.fca.10.load = load <3 x double>*, <3 x double>** %v2GMP72.fca.10.gep
  %v2GMP174.fca.10.insert = insertvalue %gemPrm %v2GMP174.fca.9.insert, <3 x double>* %v2GMP174.fca.10.load, 10
  %v2GMP174.fca.11.load = load <3 x double>*, <3 x double>** %v2GMP72.fca.11.gep
  %v2GMP174.fca.11.insert = insertvalue %gemPrm %v2GMP174.fca.10.insert, <3 x double>* %v2GMP174.fca.11.load, 11
  %v2GMP174.fca.12.load = load <3 x double>*, <3 x double>** %v2GMP72.fca.12.gep
  %v2GMP174.fca.12.insert = insertvalue %gemPrm %v2GMP174.fca.11.insert, <3 x double>* %v2GMP174.fca.12.load, 12
  %v2GMP174.fca.13.load = load <2 x double>*, <2 x double>** %v2GMP72.fca.13.gep
  %v2GMP174.fca.13.insert = insertvalue %gemPrm %v2GMP174.fca.12.insert, <2 x double>* %v2GMP174.fca.13.load, 13
  %v2GMP174.fca.14.load = load <2 x double>*, <2 x double>** %v2GMP72.fca.14.gep
  %v2GMP174.fca.14.insert = insertvalue %gemPrm %v2GMP174.fca.13.insert, <2 x double>* %v2GMP174.fca.14.load, 14
  %v2GMP174.fca.15.load = load <2 x double>*, <2 x double>** %v2GMP72.fca.15.gep
  %v2GMP174.fca.15.insert = insertvalue %gemPrm %v2GMP174.fca.14.insert, <2 x double>* %v2GMP174.fca.15.load, 15
  %v2GMP174.fca.16.load = load <2 x double>*, <2 x double>** %v2GMP72.fca.16.gep
  %v2GMP174.fca.16.insert = insertvalue %gemPrm %v2GMP174.fca.15.insert, <2 x double>* %v2GMP174.fca.16.load, 16
  %v2GMP174.fca.17.load = load <2 x double>*, <2 x double>** %v2GMP72.fca.17.gep
  %v2GMP174.fca.17.insert = insertvalue %gemPrm %v2GMP174.fca.16.insert, <2 x double>* %v2GMP174.fca.17.load, 17
  %v2GMP174.fca.18.load = load <2 x double>*, <2 x double>** %v2GMP72.fca.18.gep
  %v2GMP174.fca.18.insert = insertvalue %gemPrm %v2GMP174.fca.17.insert, <2 x double>* %v2GMP174.fca.18.load, 18
  %v2GMP174.fca.19.load = load <2 x double>*, <2 x double>** %v2GMP72.fca.19.gep
  %v2GMP174.fca.19.insert = insertvalue %gemPrm %v2GMP174.fca.18.insert, <2 x double>* %v2GMP174.fca.19.load, 19
  %v2GMP174.fca.20.load = load <2 x double>*, <2 x double>** %v2GMP72.fca.20.gep
  %v2GMP174.fca.20.insert = insertvalue %gemPrm %v2GMP174.fca.19.insert, <2 x double>* %v2GMP174.fca.20.load, 20
  %v2GMP174.fca.21.load = load <2 x double>*, <2 x double>** %v2GMP72.fca.21.gep
  %v2GMP174.fca.21.insert = insertvalue %gemPrm %v2GMP174.fca.20.insert, <2 x double>* %v2GMP174.fca.21.load, 21
  %v2GMP174.fca.22.load = load <2 x double>*, <2 x double>** %v2GMP72.fca.22.gep
  %v2GMP174.fca.22.insert = insertvalue %gemPrm %v2GMP174.fca.21.insert, <2 x double>* %v2GMP174.fca.22.load, 22
  %v2GMP174.fca.23.load = load <2 x double>*, <2 x double>** %v2GMP72.fca.23.gep
  %v2GMP174.fca.23.insert = insertvalue %gemPrm %v2GMP174.fca.22.insert, <2 x double>* %v2GMP174.fca.23.load, 23
  %v2GMP174.fca.24.load = load <2 x double>*, <2 x double>** %v2GMP72.fca.24.gep
  %v2GMP174.fca.24.insert = insertvalue %gemPrm %v2GMP174.fca.23.insert, <2 x double>* %v2GMP174.fca.24.load, 24
  %v2GMP174.fca.25.load = load <2 x double>*, <2 x double>** %v2GMP72.fca.25.gep
  %v2GMP174.fca.25.insert = insertvalue %gemPrm %v2GMP174.fca.24.insert, <2 x double>* %v2GMP174.fca.25.load, 25
  %v2GMP174.fca.26.load = load <2 x double>*, <2 x double>** %v2GMP72.fca.26.gep
  %v2GMP174.fca.26.insert = insertvalue %gemPrm %v2GMP174.fca.25.insert, <2 x double>* %v2GMP174.fca.26.load, 26
  %v2GMP174.fca.27.load = load <2 x double>*, <2 x double>** %v2GMP72.fca.27.gep
  %v2GMP174.fca.27.insert = insertvalue %gemPrm %v2GMP174.fca.26.insert, <2 x double>* %v2GMP174.fca.27.load, 27
  %v2GMP174.fca.28.load = load <2 x double>*, <2 x double>** %v2GMP72.fca.28.gep
  %v2GMP174.fca.28.insert = insertvalue %gemPrm %v2GMP174.fca.27.insert, <2 x double>* %v2GMP174.fca.28.load, 28
  %v2GMP174.fca.29.load = load <2 x double>*, <2 x double>** %v2GMP72.fca.29.gep
  %v2GMP174.fca.29.insert = insertvalue %gemPrm %v2GMP174.fca.28.insert, <2 x double>* %v2GMP174.fca.29.load, 29
  %v2GMP174.fca.30.load = load <2 x double>*, <2 x double>** %v2GMP72.fca.30.gep
  %v2GMP174.fca.30.insert = insertvalue %gemPrm %v2GMP174.fca.29.insert, <2 x double>* %v2GMP174.fca.30.load, 30
  %v2GMP174.fca.31.load = load <2 x double>*, <2 x double>** %v2GMP72.fca.31.gep
  %v2GMP174.fca.31.insert = insertvalue %gemPrm %v2GMP174.fca.30.insert, <2 x double>* %v2GMP174.fca.31.load, 31
  %v2GMP174.fca.32.load = load <2 x double>*, <2 x double>** %v2GMP72.fca.32.gep
  %v2GMP174.fca.32.insert = insertvalue %gemPrm %v2GMP174.fca.31.insert, <2 x double>* %v2GMP174.fca.32.load, 32
  %v2GMP174.fca.33.load = load <2 x double>*, <2 x double>** %v2GMP72.fca.33.gep
  %v2GMP174.fca.33.insert = insertvalue %gemPrm %v2GMP174.fca.32.insert, <2 x double>* %v2GMP174.fca.33.load, 33
  %v2GMP174.fca.34.load = load <2 x double>*, <2 x double>** %v2GMP72.fca.34.gep
  %v2GMP174.fca.34.insert = insertvalue %gemPrm %v2GMP174.fca.33.insert, <2 x double>* %v2GMP174.fca.34.load, 34
  %v2GMP174.fca.35.load = load <2 x double>*, <2 x double>** %v2GMP72.fca.35.gep
  %v2GMP174.fca.35.insert = insertvalue %gemPrm %v2GMP174.fca.34.insert, <2 x double>* %v2GMP174.fca.35.load, 35
  %v2GMP174.fca.36.load = load <2 x double>*, <2 x double>** %v2GMP72.fca.36.gep
  %v2GMP174.fca.36.insert = insertvalue %gemPrm %v2GMP174.fca.35.insert, <2 x double>* %v2GMP174.fca.36.load, 36
  %v2GMP174.fca.37.load = load <2 x double>*, <2 x double>** %v2GMP72.fca.37.gep
  %v2GMP174.fca.37.insert = insertvalue %gemPrm %v2GMP174.fca.36.insert, <2 x double>* %v2GMP174.fca.37.load, 37
  %v2GMP174.fca.38.load = load <2 x double>*, <2 x double>** %v2GMP72.fca.38.gep
  %v2GMP174.fca.38.insert = insertvalue %gemPrm %v2GMP174.fca.37.insert, <2 x double>* %v2GMP174.fca.38.load, 38
  %v2GMP174.fca.39.load = load <2 x double>*, <2 x double>** %v2GMP72.fca.39.gep
  %v2GMP174.fca.39.insert = insertvalue %gemPrm %v2GMP174.fca.38.insert, <2 x double>* %v2GMP174.fca.39.load, 39
  %v2GMP174.fca.40.load = load <2 x double>*, <2 x double>** %v2GMP72.fca.40.gep
  %v2GMP174.fca.40.insert = insertvalue %gemPrm %v2GMP174.fca.39.insert, <2 x double>* %v2GMP174.fca.40.load, 40
  %v2GMP174.fca.41.load = load <2 x double>*, <2 x double>** %v2GMP72.fca.41.gep
  %v2GMP174.fca.41.insert = insertvalue %gemPrm %v2GMP174.fca.40.insert, <2 x double>* %v2GMP174.fca.41.load, 41
  %v2GMP174.fca.42.load = load <4 x double>*, <4 x double>** %v2GMP72.fca.42.gep
  %v2GMP174.fca.42.insert = insertvalue %gemPrm %v2GMP174.fca.41.insert, <4 x double>* %v2GMP174.fca.42.load, 42
  %v2GMP174.fca.43.load = load <4 x double>*, <4 x double>** %v2GMP72.fca.43.gep
  %v2GMP174.fca.43.insert = insertvalue %gemPrm %v2GMP174.fca.42.insert, <4 x double>* %v2GMP174.fca.43.load, 43
  %v2GMP174.fca.44.load = load <4 x double>*, <4 x double>** %v2GMP72.fca.44.gep
  %v2GMP174.fca.44.insert = insertvalue %gemPrm %v2GMP174.fca.43.insert, <4 x double>* %v2GMP174.fca.44.load, 44
  %v2GMP174.fca.45.load = load <4 x double>*, <4 x double>** %v2GMP72.fca.45.gep
  %v2GMP174.fca.45.insert = insertvalue %gemPrm %v2GMP174.fca.44.insert, <4 x double>* %v2GMP174.fca.45.load, 45
  %v2GMP174.fca.46.load = load <4 x double>*, <4 x double>** %v2GMP72.fca.46.gep
  %v2GMP174.fca.46.insert = insertvalue %gemPrm %v2GMP174.fca.45.insert, <4 x double>* %v2GMP174.fca.46.load, 46
  %v2GMP174.fca.47.load = load <4 x double>*, <4 x double>** %v2GMP72.fca.47.gep
  %v2GMP174.fca.47.insert = insertvalue %gemPrm %v2GMP174.fca.46.insert, <4 x double>* %v2GMP174.fca.47.load, 47
  %v2GMP174.fca.48.load = load <4 x double>*, <4 x double>** %v2GMP72.fca.48.gep
  %v2GMP174.fca.48.insert = insertvalue %gemPrm %v2GMP174.fca.47.insert, <4 x double>* %v2GMP174.fca.48.load, 48
  %v2GMP174.fca.49.load = load <4 x double>*, <4 x double>** %v2GMP72.fca.49.gep
  %v2GMP174.fca.49.insert = insertvalue %gemPrm %v2GMP174.fca.48.insert, <4 x double>* %v2GMP174.fca.49.load, 49
  %v2GMP174.fca.50.load = load <4 x double>*, <4 x double>** %v2GMP72.fca.50.gep
  %v2GMP174.fca.0.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 0
  store double* %v2GMP174.fca.0.load, double** %v2GMP174.fca.0.gep
  %v2GMP174.fca.1.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 1
  store double* %v2GMP174.fca.1.load, double** %v2GMP174.fca.1.gep
  %v2GMP174.fca.2.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 2
  store double* %v2GMP174.fca.2.load, double** %v2GMP174.fca.2.gep
  %v2GMP174.fca.3.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 3
  store double* %v2GMP174.fca.3.load, double** %v2GMP174.fca.3.gep
  %v2GMP174.fca.4.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 4
  store double* %v2GMP174.fca.4.load, double** %v2GMP174.fca.4.gep
  %v2GMP174.fca.5.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 5
  store double* %v2GMP174.fca.5.load, double** %v2GMP174.fca.5.gep
  %v2GMP174.fca.6.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 6
  store <3 x double>* %v2GMP174.fca.6.load, <3 x double>** %v2GMP174.fca.6.gep
  %v2GMP174.fca.7.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 7
  store <3 x double>* %v2GMP174.fca.7.load, <3 x double>** %v2GMP174.fca.7.gep
  %v2GMP174.fca.8.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 8
  store <3 x double>* %v2GMP174.fca.8.load, <3 x double>** %v2GMP174.fca.8.gep
  %v2GMP174.fca.9.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 9
  store <3 x double>* %v2GMP174.fca.9.load, <3 x double>** %v2GMP174.fca.9.gep
  %v2GMP174.fca.10.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 10
  store <3 x double>* %v2GMP174.fca.10.load, <3 x double>** %v2GMP174.fca.10.gep
  %v2GMP174.fca.11.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 11
  store <3 x double>* %v2GMP174.fca.11.load, <3 x double>** %v2GMP174.fca.11.gep
  %v2GMP174.fca.12.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 12
  store <3 x double>* %v2GMP174.fca.12.load, <3 x double>** %v2GMP174.fca.12.gep
  %v2GMP174.fca.13.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 13
  store <2 x double>* %v2GMP174.fca.13.load, <2 x double>** %v2GMP174.fca.13.gep
  %v2GMP174.fca.14.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 14
  store <2 x double>* %v2GMP174.fca.14.load, <2 x double>** %v2GMP174.fca.14.gep
  %v2GMP174.fca.15.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 15
  store <2 x double>* %v2GMP174.fca.15.load, <2 x double>** %v2GMP174.fca.15.gep
  %v2GMP174.fca.16.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 16
  store <2 x double>* %v2GMP174.fca.16.load, <2 x double>** %v2GMP174.fca.16.gep
  %v2GMP174.fca.17.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 17
  store <2 x double>* %v2GMP174.fca.17.load, <2 x double>** %v2GMP174.fca.17.gep
  %v2GMP174.fca.18.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 18
  store <2 x double>* %v2GMP174.fca.18.load, <2 x double>** %v2GMP174.fca.18.gep
  %v2GMP174.fca.19.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 19
  store <2 x double>* %v2GMP174.fca.19.load, <2 x double>** %v2GMP174.fca.19.gep
  %v2GMP174.fca.20.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 20
  store <2 x double>* %v2GMP174.fca.20.load, <2 x double>** %v2GMP174.fca.20.gep
  %v2GMP174.fca.21.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 21
  store <2 x double>* %v2GMP174.fca.21.load, <2 x double>** %v2GMP174.fca.21.gep
  %v2GMP174.fca.22.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 22
  store <2 x double>* %v2GMP174.fca.22.load, <2 x double>** %v2GMP174.fca.22.gep
  %v2GMP174.fca.23.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 23
  store <2 x double>* %v2GMP174.fca.23.load, <2 x double>** %v2GMP174.fca.23.gep
  %v2GMP174.fca.24.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 24
  store <2 x double>* %v2GMP174.fca.24.load, <2 x double>** %v2GMP174.fca.24.gep
  %v2GMP174.fca.25.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 25
  store <2 x double>* %v2GMP174.fca.25.load, <2 x double>** %v2GMP174.fca.25.gep
  %v2GMP174.fca.26.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 26
  store <2 x double>* %v2GMP174.fca.26.load, <2 x double>** %v2GMP174.fca.26.gep
  %v2GMP174.fca.27.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 27
  store <2 x double>* %v2GMP174.fca.27.load, <2 x double>** %v2GMP174.fca.27.gep
  %v2GMP174.fca.28.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 28
  store <2 x double>* %v2GMP174.fca.28.load, <2 x double>** %v2GMP174.fca.28.gep
  %v2GMP174.fca.29.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 29
  store <2 x double>* %v2GMP174.fca.29.load, <2 x double>** %v2GMP174.fca.29.gep
  %v2GMP174.fca.30.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 30
  store <2 x double>* %v2GMP174.fca.30.load, <2 x double>** %v2GMP174.fca.30.gep
  %v2GMP174.fca.31.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 31
  store <2 x double>* %v2GMP174.fca.31.load, <2 x double>** %v2GMP174.fca.31.gep
  %v2GMP174.fca.32.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 32
  store <2 x double>* %v2GMP174.fca.32.load, <2 x double>** %v2GMP174.fca.32.gep
  %v2GMP174.fca.33.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 33
  store <2 x double>* %v2GMP174.fca.33.load, <2 x double>** %v2GMP174.fca.33.gep
  %v2GMP174.fca.34.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 34
  store <2 x double>* %v2GMP174.fca.34.load, <2 x double>** %v2GMP174.fca.34.gep
  %v2GMP174.fca.35.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 35
  store <2 x double>* %v2GMP174.fca.35.load, <2 x double>** %v2GMP174.fca.35.gep
  %v2GMP174.fca.36.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 36
  store <2 x double>* %v2GMP174.fca.36.load, <2 x double>** %v2GMP174.fca.36.gep
  %v2GMP174.fca.37.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 37
  store <2 x double>* %v2GMP174.fca.37.load, <2 x double>** %v2GMP174.fca.37.gep
  %v2GMP174.fca.38.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 38
  store <2 x double>* %v2GMP174.fca.38.load, <2 x double>** %v2GMP174.fca.38.gep
  %v2GMP174.fca.39.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 39
  store <2 x double>* %v2GMP174.fca.39.load, <2 x double>** %v2GMP174.fca.39.gep
  %v2GMP174.fca.40.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 40
  store <2 x double>* %v2GMP174.fca.40.load, <2 x double>** %v2GMP174.fca.40.gep
  %v2GMP174.fca.41.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 41
  store <2 x double>* %v2GMP174.fca.41.load, <2 x double>** %v2GMP174.fca.41.gep
  %v2GMP174.fca.42.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 42
  store <4 x double>* %v2GMP174.fca.42.load, <4 x double>** %v2GMP174.fca.42.gep
  %v2GMP174.fca.43.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 43
  store <4 x double>* %v2GMP174.fca.43.load, <4 x double>** %v2GMP174.fca.43.gep
  %v2GMP174.fca.44.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 44
  store <4 x double>* %v2GMP174.fca.44.load, <4 x double>** %v2GMP174.fca.44.gep
  %v2GMP174.fca.45.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 45
  store <4 x double>* %v2GMP174.fca.45.load, <4 x double>** %v2GMP174.fca.45.gep
  %v2GMP174.fca.46.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 46
  store <4 x double>* %v2GMP174.fca.46.load, <4 x double>** %v2GMP174.fca.46.gep
  %v2GMP174.fca.47.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 47
  store <4 x double>* %v2GMP174.fca.47.load, <4 x double>** %v2GMP174.fca.47.gep
  %v2GMP174.fca.48.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 48
  store <4 x double>* %v2GMP174.fca.48.load, <4 x double>** %v2GMP174.fca.48.gep
  %v2GMP174.fca.49.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 49
  store <4 x double>* %v2GMP174.fca.49.load, <4 x double>** %v2GMP174.fca.49.gep
  %v2GMP174.fca.50.gep = getelementptr inbounds %gemPrm, %gemPrm* %31, i32 0, i32 50
  store <4 x double>* %v2GMP174.fca.50.load, <4 x double>** %v2GMP174.fca.50.gep
  store i64 %idx.2, i64* %32
  %return178 = call i64 @"getcomp@I[II"(i64* %GEM7.fca.1.load, i64 %idx.2)
  store i64 %return178, i64* %33
  %__mem179 = load <2 x double>, <2 x double>* %__mem
  store <2 x double> %__mem179, <2 x double>* %34
  %return182 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM7.fca.25.load, i64 %idx.2)
  store <2 x double> %return182, <2 x double>* %35
  %return185 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM7.fca.26.load, i64 %idx.2)
  store <2 x double> %return185, <2 x double>* %36
  %return188 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM7.fca.27.load, i64 %idx.2)
  store <2 x double> %return188, <2 x double>* %37
  store double %return168, double* %38
  %FLAME192 = call <2 x double> @"FLAME@UZ6gemPrmM51N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PIIUUUUF"(%gemPrm* %31, i64* %32, i64* %33, <2 x double>* %34, <2 x double>* %35, <2 x double>* %36, <2 x double>* %37, double* %38)
  %output193 = call <2 x double> @"add@UU"(<2 x double> %__tmp173, <2 x double> %FLAME192)
  store <2 x double> %output193, <2 x double>* %__tmp
  br label %end172

end172:                                           ; preds = %true171, %end145
  %return196 = call double @"getcomp@F[FI"(double* %GEM7.fca.13.load, i64 %idx.2)
  %return197 = fcmp one double %return196, 0.000000e+00
  br i1 %return197, label %true199, label %end200

true199:                                          ; preds = %end172
  %__tmp201 = load <2 x double>, <2 x double>* %__tmp
  %v3GMP202.fca.0.load = load double*, double** %v3GMP73.fca.0.gep
  %v3GMP202.fca.0.insert = insertvalue %gemPrm undef, double* %v3GMP202.fca.0.load, 0
  %v3GMP202.fca.1.load = load double*, double** %v3GMP73.fca.1.gep
  %v3GMP202.fca.1.insert = insertvalue %gemPrm %v3GMP202.fca.0.insert, double* %v3GMP202.fca.1.load, 1
  %v3GMP202.fca.2.load = load double*, double** %v3GMP73.fca.2.gep
  %v3GMP202.fca.2.insert = insertvalue %gemPrm %v3GMP202.fca.1.insert, double* %v3GMP202.fca.2.load, 2
  %v3GMP202.fca.3.load = load double*, double** %v3GMP73.fca.3.gep
  %v3GMP202.fca.3.insert = insertvalue %gemPrm %v3GMP202.fca.2.insert, double* %v3GMP202.fca.3.load, 3
  %v3GMP202.fca.4.load = load double*, double** %v3GMP73.fca.4.gep
  %v3GMP202.fca.4.insert = insertvalue %gemPrm %v3GMP202.fca.3.insert, double* %v3GMP202.fca.4.load, 4
  %v3GMP202.fca.5.load = load double*, double** %v3GMP73.fca.5.gep
  %v3GMP202.fca.5.insert = insertvalue %gemPrm %v3GMP202.fca.4.insert, double* %v3GMP202.fca.5.load, 5
  %v3GMP202.fca.6.load = load <3 x double>*, <3 x double>** %v3GMP73.fca.6.gep
  %v3GMP202.fca.6.insert = insertvalue %gemPrm %v3GMP202.fca.5.insert, <3 x double>* %v3GMP202.fca.6.load, 6
  %v3GMP202.fca.7.load = load <3 x double>*, <3 x double>** %v3GMP73.fca.7.gep
  %v3GMP202.fca.7.insert = insertvalue %gemPrm %v3GMP202.fca.6.insert, <3 x double>* %v3GMP202.fca.7.load, 7
  %v3GMP202.fca.8.load = load <3 x double>*, <3 x double>** %v3GMP73.fca.8.gep
  %v3GMP202.fca.8.insert = insertvalue %gemPrm %v3GMP202.fca.7.insert, <3 x double>* %v3GMP202.fca.8.load, 8
  %v3GMP202.fca.9.load = load <3 x double>*, <3 x double>** %v3GMP73.fca.9.gep
  %v3GMP202.fca.9.insert = insertvalue %gemPrm %v3GMP202.fca.8.insert, <3 x double>* %v3GMP202.fca.9.load, 9
  %v3GMP202.fca.10.load = load <3 x double>*, <3 x double>** %v3GMP73.fca.10.gep
  %v3GMP202.fca.10.insert = insertvalue %gemPrm %v3GMP202.fca.9.insert, <3 x double>* %v3GMP202.fca.10.load, 10
  %v3GMP202.fca.11.load = load <3 x double>*, <3 x double>** %v3GMP73.fca.11.gep
  %v3GMP202.fca.11.insert = insertvalue %gemPrm %v3GMP202.fca.10.insert, <3 x double>* %v3GMP202.fca.11.load, 11
  %v3GMP202.fca.12.load = load <3 x double>*, <3 x double>** %v3GMP73.fca.12.gep
  %v3GMP202.fca.12.insert = insertvalue %gemPrm %v3GMP202.fca.11.insert, <3 x double>* %v3GMP202.fca.12.load, 12
  %v3GMP202.fca.13.load = load <2 x double>*, <2 x double>** %v3GMP73.fca.13.gep
  %v3GMP202.fca.13.insert = insertvalue %gemPrm %v3GMP202.fca.12.insert, <2 x double>* %v3GMP202.fca.13.load, 13
  %v3GMP202.fca.14.load = load <2 x double>*, <2 x double>** %v3GMP73.fca.14.gep
  %v3GMP202.fca.14.insert = insertvalue %gemPrm %v3GMP202.fca.13.insert, <2 x double>* %v3GMP202.fca.14.load, 14
  %v3GMP202.fca.15.load = load <2 x double>*, <2 x double>** %v3GMP73.fca.15.gep
  %v3GMP202.fca.15.insert = insertvalue %gemPrm %v3GMP202.fca.14.insert, <2 x double>* %v3GMP202.fca.15.load, 15
  %v3GMP202.fca.16.load = load <2 x double>*, <2 x double>** %v3GMP73.fca.16.gep
  %v3GMP202.fca.16.insert = insertvalue %gemPrm %v3GMP202.fca.15.insert, <2 x double>* %v3GMP202.fca.16.load, 16
  %v3GMP202.fca.17.load = load <2 x double>*, <2 x double>** %v3GMP73.fca.17.gep
  %v3GMP202.fca.17.insert = insertvalue %gemPrm %v3GMP202.fca.16.insert, <2 x double>* %v3GMP202.fca.17.load, 17
  %v3GMP202.fca.18.load = load <2 x double>*, <2 x double>** %v3GMP73.fca.18.gep
  %v3GMP202.fca.18.insert = insertvalue %gemPrm %v3GMP202.fca.17.insert, <2 x double>* %v3GMP202.fca.18.load, 18
  %v3GMP202.fca.19.load = load <2 x double>*, <2 x double>** %v3GMP73.fca.19.gep
  %v3GMP202.fca.19.insert = insertvalue %gemPrm %v3GMP202.fca.18.insert, <2 x double>* %v3GMP202.fca.19.load, 19
  %v3GMP202.fca.20.load = load <2 x double>*, <2 x double>** %v3GMP73.fca.20.gep
  %v3GMP202.fca.20.insert = insertvalue %gemPrm %v3GMP202.fca.19.insert, <2 x double>* %v3GMP202.fca.20.load, 20
  %v3GMP202.fca.21.load = load <2 x double>*, <2 x double>** %v3GMP73.fca.21.gep
  %v3GMP202.fca.21.insert = insertvalue %gemPrm %v3GMP202.fca.20.insert, <2 x double>* %v3GMP202.fca.21.load, 21
  %v3GMP202.fca.22.load = load <2 x double>*, <2 x double>** %v3GMP73.fca.22.gep
  %v3GMP202.fca.22.insert = insertvalue %gemPrm %v3GMP202.fca.21.insert, <2 x double>* %v3GMP202.fca.22.load, 22
  %v3GMP202.fca.23.load = load <2 x double>*, <2 x double>** %v3GMP73.fca.23.gep
  %v3GMP202.fca.23.insert = insertvalue %gemPrm %v3GMP202.fca.22.insert, <2 x double>* %v3GMP202.fca.23.load, 23
  %v3GMP202.fca.24.load = load <2 x double>*, <2 x double>** %v3GMP73.fca.24.gep
  %v3GMP202.fca.24.insert = insertvalue %gemPrm %v3GMP202.fca.23.insert, <2 x double>* %v3GMP202.fca.24.load, 24
  %v3GMP202.fca.25.load = load <2 x double>*, <2 x double>** %v3GMP73.fca.25.gep
  %v3GMP202.fca.25.insert = insertvalue %gemPrm %v3GMP202.fca.24.insert, <2 x double>* %v3GMP202.fca.25.load, 25
  %v3GMP202.fca.26.load = load <2 x double>*, <2 x double>** %v3GMP73.fca.26.gep
  %v3GMP202.fca.26.insert = insertvalue %gemPrm %v3GMP202.fca.25.insert, <2 x double>* %v3GMP202.fca.26.load, 26
  %v3GMP202.fca.27.load = load <2 x double>*, <2 x double>** %v3GMP73.fca.27.gep
  %v3GMP202.fca.27.insert = insertvalue %gemPrm %v3GMP202.fca.26.insert, <2 x double>* %v3GMP202.fca.27.load, 27
  %v3GMP202.fca.28.load = load <2 x double>*, <2 x double>** %v3GMP73.fca.28.gep
  %v3GMP202.fca.28.insert = insertvalue %gemPrm %v3GMP202.fca.27.insert, <2 x double>* %v3GMP202.fca.28.load, 28
  %v3GMP202.fca.29.load = load <2 x double>*, <2 x double>** %v3GMP73.fca.29.gep
  %v3GMP202.fca.29.insert = insertvalue %gemPrm %v3GMP202.fca.28.insert, <2 x double>* %v3GMP202.fca.29.load, 29
  %v3GMP202.fca.30.load = load <2 x double>*, <2 x double>** %v3GMP73.fca.30.gep
  %v3GMP202.fca.30.insert = insertvalue %gemPrm %v3GMP202.fca.29.insert, <2 x double>* %v3GMP202.fca.30.load, 30
  %v3GMP202.fca.31.load = load <2 x double>*, <2 x double>** %v3GMP73.fca.31.gep
  %v3GMP202.fca.31.insert = insertvalue %gemPrm %v3GMP202.fca.30.insert, <2 x double>* %v3GMP202.fca.31.load, 31
  %v3GMP202.fca.32.load = load <2 x double>*, <2 x double>** %v3GMP73.fca.32.gep
  %v3GMP202.fca.32.insert = insertvalue %gemPrm %v3GMP202.fca.31.insert, <2 x double>* %v3GMP202.fca.32.load, 32
  %v3GMP202.fca.33.load = load <2 x double>*, <2 x double>** %v3GMP73.fca.33.gep
  %v3GMP202.fca.33.insert = insertvalue %gemPrm %v3GMP202.fca.32.insert, <2 x double>* %v3GMP202.fca.33.load, 33
  %v3GMP202.fca.34.load = load <2 x double>*, <2 x double>** %v3GMP73.fca.34.gep
  %v3GMP202.fca.34.insert = insertvalue %gemPrm %v3GMP202.fca.33.insert, <2 x double>* %v3GMP202.fca.34.load, 34
  %v3GMP202.fca.35.load = load <2 x double>*, <2 x double>** %v3GMP73.fca.35.gep
  %v3GMP202.fca.35.insert = insertvalue %gemPrm %v3GMP202.fca.34.insert, <2 x double>* %v3GMP202.fca.35.load, 35
  %v3GMP202.fca.36.load = load <2 x double>*, <2 x double>** %v3GMP73.fca.36.gep
  %v3GMP202.fca.36.insert = insertvalue %gemPrm %v3GMP202.fca.35.insert, <2 x double>* %v3GMP202.fca.36.load, 36
  %v3GMP202.fca.37.load = load <2 x double>*, <2 x double>** %v3GMP73.fca.37.gep
  %v3GMP202.fca.37.insert = insertvalue %gemPrm %v3GMP202.fca.36.insert, <2 x double>* %v3GMP202.fca.37.load, 37
  %v3GMP202.fca.38.load = load <2 x double>*, <2 x double>** %v3GMP73.fca.38.gep
  %v3GMP202.fca.38.insert = insertvalue %gemPrm %v3GMP202.fca.37.insert, <2 x double>* %v3GMP202.fca.38.load, 38
  %v3GMP202.fca.39.load = load <2 x double>*, <2 x double>** %v3GMP73.fca.39.gep
  %v3GMP202.fca.39.insert = insertvalue %gemPrm %v3GMP202.fca.38.insert, <2 x double>* %v3GMP202.fca.39.load, 39
  %v3GMP202.fca.40.load = load <2 x double>*, <2 x double>** %v3GMP73.fca.40.gep
  %v3GMP202.fca.40.insert = insertvalue %gemPrm %v3GMP202.fca.39.insert, <2 x double>* %v3GMP202.fca.40.load, 40
  %v3GMP202.fca.41.load = load <2 x double>*, <2 x double>** %v3GMP73.fca.41.gep
  %v3GMP202.fca.41.insert = insertvalue %gemPrm %v3GMP202.fca.40.insert, <2 x double>* %v3GMP202.fca.41.load, 41
  %v3GMP202.fca.42.load = load <4 x double>*, <4 x double>** %v3GMP73.fca.42.gep
  %v3GMP202.fca.42.insert = insertvalue %gemPrm %v3GMP202.fca.41.insert, <4 x double>* %v3GMP202.fca.42.load, 42
  %v3GMP202.fca.43.load = load <4 x double>*, <4 x double>** %v3GMP73.fca.43.gep
  %v3GMP202.fca.43.insert = insertvalue %gemPrm %v3GMP202.fca.42.insert, <4 x double>* %v3GMP202.fca.43.load, 43
  %v3GMP202.fca.44.load = load <4 x double>*, <4 x double>** %v3GMP73.fca.44.gep
  %v3GMP202.fca.44.insert = insertvalue %gemPrm %v3GMP202.fca.43.insert, <4 x double>* %v3GMP202.fca.44.load, 44
  %v3GMP202.fca.45.load = load <4 x double>*, <4 x double>** %v3GMP73.fca.45.gep
  %v3GMP202.fca.45.insert = insertvalue %gemPrm %v3GMP202.fca.44.insert, <4 x double>* %v3GMP202.fca.45.load, 45
  %v3GMP202.fca.46.load = load <4 x double>*, <4 x double>** %v3GMP73.fca.46.gep
  %v3GMP202.fca.46.insert = insertvalue %gemPrm %v3GMP202.fca.45.insert, <4 x double>* %v3GMP202.fca.46.load, 46
  %v3GMP202.fca.47.load = load <4 x double>*, <4 x double>** %v3GMP73.fca.47.gep
  %v3GMP202.fca.47.insert = insertvalue %gemPrm %v3GMP202.fca.46.insert, <4 x double>* %v3GMP202.fca.47.load, 47
  %v3GMP202.fca.48.load = load <4 x double>*, <4 x double>** %v3GMP73.fca.48.gep
  %v3GMP202.fca.48.insert = insertvalue %gemPrm %v3GMP202.fca.47.insert, <4 x double>* %v3GMP202.fca.48.load, 48
  %v3GMP202.fca.49.load = load <4 x double>*, <4 x double>** %v3GMP73.fca.49.gep
  %v3GMP202.fca.49.insert = insertvalue %gemPrm %v3GMP202.fca.48.insert, <4 x double>* %v3GMP202.fca.49.load, 49
  %v3GMP202.fca.50.load = load <4 x double>*, <4 x double>** %v3GMP73.fca.50.gep
  %v3GMP202.fca.0.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 0
  store double* %v3GMP202.fca.0.load, double** %v3GMP202.fca.0.gep
  %v3GMP202.fca.1.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 1
  store double* %v3GMP202.fca.1.load, double** %v3GMP202.fca.1.gep
  %v3GMP202.fca.2.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 2
  store double* %v3GMP202.fca.2.load, double** %v3GMP202.fca.2.gep
  %v3GMP202.fca.3.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 3
  store double* %v3GMP202.fca.3.load, double** %v3GMP202.fca.3.gep
  %v3GMP202.fca.4.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 4
  store double* %v3GMP202.fca.4.load, double** %v3GMP202.fca.4.gep
  %v3GMP202.fca.5.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 5
  store double* %v3GMP202.fca.5.load, double** %v3GMP202.fca.5.gep
  %v3GMP202.fca.6.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 6
  store <3 x double>* %v3GMP202.fca.6.load, <3 x double>** %v3GMP202.fca.6.gep
  %v3GMP202.fca.7.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 7
  store <3 x double>* %v3GMP202.fca.7.load, <3 x double>** %v3GMP202.fca.7.gep
  %v3GMP202.fca.8.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 8
  store <3 x double>* %v3GMP202.fca.8.load, <3 x double>** %v3GMP202.fca.8.gep
  %v3GMP202.fca.9.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 9
  store <3 x double>* %v3GMP202.fca.9.load, <3 x double>** %v3GMP202.fca.9.gep
  %v3GMP202.fca.10.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 10
  store <3 x double>* %v3GMP202.fca.10.load, <3 x double>** %v3GMP202.fca.10.gep
  %v3GMP202.fca.11.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 11
  store <3 x double>* %v3GMP202.fca.11.load, <3 x double>** %v3GMP202.fca.11.gep
  %v3GMP202.fca.12.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 12
  store <3 x double>* %v3GMP202.fca.12.load, <3 x double>** %v3GMP202.fca.12.gep
  %v3GMP202.fca.13.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 13
  store <2 x double>* %v3GMP202.fca.13.load, <2 x double>** %v3GMP202.fca.13.gep
  %v3GMP202.fca.14.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 14
  store <2 x double>* %v3GMP202.fca.14.load, <2 x double>** %v3GMP202.fca.14.gep
  %v3GMP202.fca.15.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 15
  store <2 x double>* %v3GMP202.fca.15.load, <2 x double>** %v3GMP202.fca.15.gep
  %v3GMP202.fca.16.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 16
  store <2 x double>* %v3GMP202.fca.16.load, <2 x double>** %v3GMP202.fca.16.gep
  %v3GMP202.fca.17.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 17
  store <2 x double>* %v3GMP202.fca.17.load, <2 x double>** %v3GMP202.fca.17.gep
  %v3GMP202.fca.18.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 18
  store <2 x double>* %v3GMP202.fca.18.load, <2 x double>** %v3GMP202.fca.18.gep
  %v3GMP202.fca.19.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 19
  store <2 x double>* %v3GMP202.fca.19.load, <2 x double>** %v3GMP202.fca.19.gep
  %v3GMP202.fca.20.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 20
  store <2 x double>* %v3GMP202.fca.20.load, <2 x double>** %v3GMP202.fca.20.gep
  %v3GMP202.fca.21.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 21
  store <2 x double>* %v3GMP202.fca.21.load, <2 x double>** %v3GMP202.fca.21.gep
  %v3GMP202.fca.22.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 22
  store <2 x double>* %v3GMP202.fca.22.load, <2 x double>** %v3GMP202.fca.22.gep
  %v3GMP202.fca.23.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 23
  store <2 x double>* %v3GMP202.fca.23.load, <2 x double>** %v3GMP202.fca.23.gep
  %v3GMP202.fca.24.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 24
  store <2 x double>* %v3GMP202.fca.24.load, <2 x double>** %v3GMP202.fca.24.gep
  %v3GMP202.fca.25.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 25
  store <2 x double>* %v3GMP202.fca.25.load, <2 x double>** %v3GMP202.fca.25.gep
  %v3GMP202.fca.26.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 26
  store <2 x double>* %v3GMP202.fca.26.load, <2 x double>** %v3GMP202.fca.26.gep
  %v3GMP202.fca.27.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 27
  store <2 x double>* %v3GMP202.fca.27.load, <2 x double>** %v3GMP202.fca.27.gep
  %v3GMP202.fca.28.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 28
  store <2 x double>* %v3GMP202.fca.28.load, <2 x double>** %v3GMP202.fca.28.gep
  %v3GMP202.fca.29.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 29
  store <2 x double>* %v3GMP202.fca.29.load, <2 x double>** %v3GMP202.fca.29.gep
  %v3GMP202.fca.30.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 30
  store <2 x double>* %v3GMP202.fca.30.load, <2 x double>** %v3GMP202.fca.30.gep
  %v3GMP202.fca.31.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 31
  store <2 x double>* %v3GMP202.fca.31.load, <2 x double>** %v3GMP202.fca.31.gep
  %v3GMP202.fca.32.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 32
  store <2 x double>* %v3GMP202.fca.32.load, <2 x double>** %v3GMP202.fca.32.gep
  %v3GMP202.fca.33.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 33
  store <2 x double>* %v3GMP202.fca.33.load, <2 x double>** %v3GMP202.fca.33.gep
  %v3GMP202.fca.34.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 34
  store <2 x double>* %v3GMP202.fca.34.load, <2 x double>** %v3GMP202.fca.34.gep
  %v3GMP202.fca.35.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 35
  store <2 x double>* %v3GMP202.fca.35.load, <2 x double>** %v3GMP202.fca.35.gep
  %v3GMP202.fca.36.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 36
  store <2 x double>* %v3GMP202.fca.36.load, <2 x double>** %v3GMP202.fca.36.gep
  %v3GMP202.fca.37.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 37
  store <2 x double>* %v3GMP202.fca.37.load, <2 x double>** %v3GMP202.fca.37.gep
  %v3GMP202.fca.38.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 38
  store <2 x double>* %v3GMP202.fca.38.load, <2 x double>** %v3GMP202.fca.38.gep
  %v3GMP202.fca.39.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 39
  store <2 x double>* %v3GMP202.fca.39.load, <2 x double>** %v3GMP202.fca.39.gep
  %v3GMP202.fca.40.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 40
  store <2 x double>* %v3GMP202.fca.40.load, <2 x double>** %v3GMP202.fca.40.gep
  %v3GMP202.fca.41.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 41
  store <2 x double>* %v3GMP202.fca.41.load, <2 x double>** %v3GMP202.fca.41.gep
  %v3GMP202.fca.42.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 42
  store <4 x double>* %v3GMP202.fca.42.load, <4 x double>** %v3GMP202.fca.42.gep
  %v3GMP202.fca.43.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 43
  store <4 x double>* %v3GMP202.fca.43.load, <4 x double>** %v3GMP202.fca.43.gep
  %v3GMP202.fca.44.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 44
  store <4 x double>* %v3GMP202.fca.44.load, <4 x double>** %v3GMP202.fca.44.gep
  %v3GMP202.fca.45.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 45
  store <4 x double>* %v3GMP202.fca.45.load, <4 x double>** %v3GMP202.fca.45.gep
  %v3GMP202.fca.46.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 46
  store <4 x double>* %v3GMP202.fca.46.load, <4 x double>** %v3GMP202.fca.46.gep
  %v3GMP202.fca.47.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 47
  store <4 x double>* %v3GMP202.fca.47.load, <4 x double>** %v3GMP202.fca.47.gep
  %v3GMP202.fca.48.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 48
  store <4 x double>* %v3GMP202.fca.48.load, <4 x double>** %v3GMP202.fca.48.gep
  %v3GMP202.fca.49.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 49
  store <4 x double>* %v3GMP202.fca.49.load, <4 x double>** %v3GMP202.fca.49.gep
  %v3GMP202.fca.50.gep = getelementptr inbounds %gemPrm, %gemPrm* %39, i32 0, i32 50
  store <4 x double>* %v3GMP202.fca.50.load, <4 x double>** %v3GMP202.fca.50.gep
  store i64 %idx.2, i64* %40
  %return206 = call i64 @"getcomp@I[II"(i64* %GEM7.fca.2.load, i64 %idx.2)
  store i64 %return206, i64* %41
  %__mem207 = load <2 x double>, <2 x double>* %__mem
  store <2 x double> %__mem207, <2 x double>* %42
  %return210 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM7.fca.25.load, i64 %idx.2)
  store <2 x double> %return210, <2 x double>* %43
  %return213 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM7.fca.26.load, i64 %idx.2)
  store <2 x double> %return213, <2 x double>* %44
  %return216 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM7.fca.27.load, i64 %idx.2)
  store <2 x double> %return216, <2 x double>* %45
  store double %return196, double* %46
  %FLAME220 = call <2 x double> @"FLAME@UZ6gemPrmM51N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PIIUUUUF"(%gemPrm* %39, i64* %40, i64* %41, <2 x double>* %42, <2 x double>* %43, <2 x double>* %44, <2 x double>* %45, double* %46)
  %output221 = call <2 x double> @"add@UU"(<2 x double> %__tmp201, <2 x double> %FLAME220)
  store <2 x double> %output221, <2 x double>* %__tmp
  br label %end200

end200:                                           ; preds = %true199, %end172
  %return224 = call double @"getcomp@F[FI"(double* %GEM7.fca.14.load, i64 %idx.2)
  %return225 = fcmp one double %return224, 0.000000e+00
  br i1 %return225, label %true227, label %end228

true227:                                          ; preds = %end200
  %__tmp229 = load <2 x double>, <2 x double>* %__tmp
  %v4GMP230.fca.0.load = load double*, double** %v4GMP74.fca.0.gep
  %v4GMP230.fca.0.insert = insertvalue %gemPrm undef, double* %v4GMP230.fca.0.load, 0
  %v4GMP230.fca.1.load = load double*, double** %v4GMP74.fca.1.gep
  %v4GMP230.fca.1.insert = insertvalue %gemPrm %v4GMP230.fca.0.insert, double* %v4GMP230.fca.1.load, 1
  %v4GMP230.fca.2.load = load double*, double** %v4GMP74.fca.2.gep
  %v4GMP230.fca.2.insert = insertvalue %gemPrm %v4GMP230.fca.1.insert, double* %v4GMP230.fca.2.load, 2
  %v4GMP230.fca.3.load = load double*, double** %v4GMP74.fca.3.gep
  %v4GMP230.fca.3.insert = insertvalue %gemPrm %v4GMP230.fca.2.insert, double* %v4GMP230.fca.3.load, 3
  %v4GMP230.fca.4.load = load double*, double** %v4GMP74.fca.4.gep
  %v4GMP230.fca.4.insert = insertvalue %gemPrm %v4GMP230.fca.3.insert, double* %v4GMP230.fca.4.load, 4
  %v4GMP230.fca.5.load = load double*, double** %v4GMP74.fca.5.gep
  %v4GMP230.fca.5.insert = insertvalue %gemPrm %v4GMP230.fca.4.insert, double* %v4GMP230.fca.5.load, 5
  %v4GMP230.fca.6.load = load <3 x double>*, <3 x double>** %v4GMP74.fca.6.gep
  %v4GMP230.fca.6.insert = insertvalue %gemPrm %v4GMP230.fca.5.insert, <3 x double>* %v4GMP230.fca.6.load, 6
  %v4GMP230.fca.7.load = load <3 x double>*, <3 x double>** %v4GMP74.fca.7.gep
  %v4GMP230.fca.7.insert = insertvalue %gemPrm %v4GMP230.fca.6.insert, <3 x double>* %v4GMP230.fca.7.load, 7
  %v4GMP230.fca.8.load = load <3 x double>*, <3 x double>** %v4GMP74.fca.8.gep
  %v4GMP230.fca.8.insert = insertvalue %gemPrm %v4GMP230.fca.7.insert, <3 x double>* %v4GMP230.fca.8.load, 8
  %v4GMP230.fca.9.load = load <3 x double>*, <3 x double>** %v4GMP74.fca.9.gep
  %v4GMP230.fca.9.insert = insertvalue %gemPrm %v4GMP230.fca.8.insert, <3 x double>* %v4GMP230.fca.9.load, 9
  %v4GMP230.fca.10.load = load <3 x double>*, <3 x double>** %v4GMP74.fca.10.gep
  %v4GMP230.fca.10.insert = insertvalue %gemPrm %v4GMP230.fca.9.insert, <3 x double>* %v4GMP230.fca.10.load, 10
  %v4GMP230.fca.11.load = load <3 x double>*, <3 x double>** %v4GMP74.fca.11.gep
  %v4GMP230.fca.11.insert = insertvalue %gemPrm %v4GMP230.fca.10.insert, <3 x double>* %v4GMP230.fca.11.load, 11
  %v4GMP230.fca.12.load = load <3 x double>*, <3 x double>** %v4GMP74.fca.12.gep
  %v4GMP230.fca.12.insert = insertvalue %gemPrm %v4GMP230.fca.11.insert, <3 x double>* %v4GMP230.fca.12.load, 12
  %v4GMP230.fca.13.load = load <2 x double>*, <2 x double>** %v4GMP74.fca.13.gep
  %v4GMP230.fca.13.insert = insertvalue %gemPrm %v4GMP230.fca.12.insert, <2 x double>* %v4GMP230.fca.13.load, 13
  %v4GMP230.fca.14.load = load <2 x double>*, <2 x double>** %v4GMP74.fca.14.gep
  %v4GMP230.fca.14.insert = insertvalue %gemPrm %v4GMP230.fca.13.insert, <2 x double>* %v4GMP230.fca.14.load, 14
  %v4GMP230.fca.15.load = load <2 x double>*, <2 x double>** %v4GMP74.fca.15.gep
  %v4GMP230.fca.15.insert = insertvalue %gemPrm %v4GMP230.fca.14.insert, <2 x double>* %v4GMP230.fca.15.load, 15
  %v4GMP230.fca.16.load = load <2 x double>*, <2 x double>** %v4GMP74.fca.16.gep
  %v4GMP230.fca.16.insert = insertvalue %gemPrm %v4GMP230.fca.15.insert, <2 x double>* %v4GMP230.fca.16.load, 16
  %v4GMP230.fca.17.load = load <2 x double>*, <2 x double>** %v4GMP74.fca.17.gep
  %v4GMP230.fca.17.insert = insertvalue %gemPrm %v4GMP230.fca.16.insert, <2 x double>* %v4GMP230.fca.17.load, 17
  %v4GMP230.fca.18.load = load <2 x double>*, <2 x double>** %v4GMP74.fca.18.gep
  %v4GMP230.fca.18.insert = insertvalue %gemPrm %v4GMP230.fca.17.insert, <2 x double>* %v4GMP230.fca.18.load, 18
  %v4GMP230.fca.19.load = load <2 x double>*, <2 x double>** %v4GMP74.fca.19.gep
  %v4GMP230.fca.19.insert = insertvalue %gemPrm %v4GMP230.fca.18.insert, <2 x double>* %v4GMP230.fca.19.load, 19
  %v4GMP230.fca.20.load = load <2 x double>*, <2 x double>** %v4GMP74.fca.20.gep
  %v4GMP230.fca.20.insert = insertvalue %gemPrm %v4GMP230.fca.19.insert, <2 x double>* %v4GMP230.fca.20.load, 20
  %v4GMP230.fca.21.load = load <2 x double>*, <2 x double>** %v4GMP74.fca.21.gep
  %v4GMP230.fca.21.insert = insertvalue %gemPrm %v4GMP230.fca.20.insert, <2 x double>* %v4GMP230.fca.21.load, 21
  %v4GMP230.fca.22.load = load <2 x double>*, <2 x double>** %v4GMP74.fca.22.gep
  %v4GMP230.fca.22.insert = insertvalue %gemPrm %v4GMP230.fca.21.insert, <2 x double>* %v4GMP230.fca.22.load, 22
  %v4GMP230.fca.23.load = load <2 x double>*, <2 x double>** %v4GMP74.fca.23.gep
  %v4GMP230.fca.23.insert = insertvalue %gemPrm %v4GMP230.fca.22.insert, <2 x double>* %v4GMP230.fca.23.load, 23
  %v4GMP230.fca.24.load = load <2 x double>*, <2 x double>** %v4GMP74.fca.24.gep
  %v4GMP230.fca.24.insert = insertvalue %gemPrm %v4GMP230.fca.23.insert, <2 x double>* %v4GMP230.fca.24.load, 24
  %v4GMP230.fca.25.load = load <2 x double>*, <2 x double>** %v4GMP74.fca.25.gep
  %v4GMP230.fca.25.insert = insertvalue %gemPrm %v4GMP230.fca.24.insert, <2 x double>* %v4GMP230.fca.25.load, 25
  %v4GMP230.fca.26.load = load <2 x double>*, <2 x double>** %v4GMP74.fca.26.gep
  %v4GMP230.fca.26.insert = insertvalue %gemPrm %v4GMP230.fca.25.insert, <2 x double>* %v4GMP230.fca.26.load, 26
  %v4GMP230.fca.27.load = load <2 x double>*, <2 x double>** %v4GMP74.fca.27.gep
  %v4GMP230.fca.27.insert = insertvalue %gemPrm %v4GMP230.fca.26.insert, <2 x double>* %v4GMP230.fca.27.load, 27
  %v4GMP230.fca.28.load = load <2 x double>*, <2 x double>** %v4GMP74.fca.28.gep
  %v4GMP230.fca.28.insert = insertvalue %gemPrm %v4GMP230.fca.27.insert, <2 x double>* %v4GMP230.fca.28.load, 28
  %v4GMP230.fca.29.load = load <2 x double>*, <2 x double>** %v4GMP74.fca.29.gep
  %v4GMP230.fca.29.insert = insertvalue %gemPrm %v4GMP230.fca.28.insert, <2 x double>* %v4GMP230.fca.29.load, 29
  %v4GMP230.fca.30.load = load <2 x double>*, <2 x double>** %v4GMP74.fca.30.gep
  %v4GMP230.fca.30.insert = insertvalue %gemPrm %v4GMP230.fca.29.insert, <2 x double>* %v4GMP230.fca.30.load, 30
  %v4GMP230.fca.31.load = load <2 x double>*, <2 x double>** %v4GMP74.fca.31.gep
  %v4GMP230.fca.31.insert = insertvalue %gemPrm %v4GMP230.fca.30.insert, <2 x double>* %v4GMP230.fca.31.load, 31
  %v4GMP230.fca.32.load = load <2 x double>*, <2 x double>** %v4GMP74.fca.32.gep
  %v4GMP230.fca.32.insert = insertvalue %gemPrm %v4GMP230.fca.31.insert, <2 x double>* %v4GMP230.fca.32.load, 32
  %v4GMP230.fca.33.load = load <2 x double>*, <2 x double>** %v4GMP74.fca.33.gep
  %v4GMP230.fca.33.insert = insertvalue %gemPrm %v4GMP230.fca.32.insert, <2 x double>* %v4GMP230.fca.33.load, 33
  %v4GMP230.fca.34.load = load <2 x double>*, <2 x double>** %v4GMP74.fca.34.gep
  %v4GMP230.fca.34.insert = insertvalue %gemPrm %v4GMP230.fca.33.insert, <2 x double>* %v4GMP230.fca.34.load, 34
  %v4GMP230.fca.35.load = load <2 x double>*, <2 x double>** %v4GMP74.fca.35.gep
  %v4GMP230.fca.35.insert = insertvalue %gemPrm %v4GMP230.fca.34.insert, <2 x double>* %v4GMP230.fca.35.load, 35
  %v4GMP230.fca.36.load = load <2 x double>*, <2 x double>** %v4GMP74.fca.36.gep
  %v4GMP230.fca.36.insert = insertvalue %gemPrm %v4GMP230.fca.35.insert, <2 x double>* %v4GMP230.fca.36.load, 36
  %v4GMP230.fca.37.load = load <2 x double>*, <2 x double>** %v4GMP74.fca.37.gep
  %v4GMP230.fca.37.insert = insertvalue %gemPrm %v4GMP230.fca.36.insert, <2 x double>* %v4GMP230.fca.37.load, 37
  %v4GMP230.fca.38.load = load <2 x double>*, <2 x double>** %v4GMP74.fca.38.gep
  %v4GMP230.fca.38.insert = insertvalue %gemPrm %v4GMP230.fca.37.insert, <2 x double>* %v4GMP230.fca.38.load, 38
  %v4GMP230.fca.39.load = load <2 x double>*, <2 x double>** %v4GMP74.fca.39.gep
  %v4GMP230.fca.39.insert = insertvalue %gemPrm %v4GMP230.fca.38.insert, <2 x double>* %v4GMP230.fca.39.load, 39
  %v4GMP230.fca.40.load = load <2 x double>*, <2 x double>** %v4GMP74.fca.40.gep
  %v4GMP230.fca.40.insert = insertvalue %gemPrm %v4GMP230.fca.39.insert, <2 x double>* %v4GMP230.fca.40.load, 40
  %v4GMP230.fca.41.load = load <2 x double>*, <2 x double>** %v4GMP74.fca.41.gep
  %v4GMP230.fca.41.insert = insertvalue %gemPrm %v4GMP230.fca.40.insert, <2 x double>* %v4GMP230.fca.41.load, 41
  %v4GMP230.fca.42.load = load <4 x double>*, <4 x double>** %v4GMP74.fca.42.gep
  %v4GMP230.fca.42.insert = insertvalue %gemPrm %v4GMP230.fca.41.insert, <4 x double>* %v4GMP230.fca.42.load, 42
  %v4GMP230.fca.43.load = load <4 x double>*, <4 x double>** %v4GMP74.fca.43.gep
  %v4GMP230.fca.43.insert = insertvalue %gemPrm %v4GMP230.fca.42.insert, <4 x double>* %v4GMP230.fca.43.load, 43
  %v4GMP230.fca.44.load = load <4 x double>*, <4 x double>** %v4GMP74.fca.44.gep
  %v4GMP230.fca.44.insert = insertvalue %gemPrm %v4GMP230.fca.43.insert, <4 x double>* %v4GMP230.fca.44.load, 44
  %v4GMP230.fca.45.load = load <4 x double>*, <4 x double>** %v4GMP74.fca.45.gep
  %v4GMP230.fca.45.insert = insertvalue %gemPrm %v4GMP230.fca.44.insert, <4 x double>* %v4GMP230.fca.45.load, 45
  %v4GMP230.fca.46.load = load <4 x double>*, <4 x double>** %v4GMP74.fca.46.gep
  %v4GMP230.fca.46.insert = insertvalue %gemPrm %v4GMP230.fca.45.insert, <4 x double>* %v4GMP230.fca.46.load, 46
  %v4GMP230.fca.47.load = load <4 x double>*, <4 x double>** %v4GMP74.fca.47.gep
  %v4GMP230.fca.47.insert = insertvalue %gemPrm %v4GMP230.fca.46.insert, <4 x double>* %v4GMP230.fca.47.load, 47
  %v4GMP230.fca.48.load = load <4 x double>*, <4 x double>** %v4GMP74.fca.48.gep
  %v4GMP230.fca.48.insert = insertvalue %gemPrm %v4GMP230.fca.47.insert, <4 x double>* %v4GMP230.fca.48.load, 48
  %v4GMP230.fca.49.load = load <4 x double>*, <4 x double>** %v4GMP74.fca.49.gep
  %v4GMP230.fca.49.insert = insertvalue %gemPrm %v4GMP230.fca.48.insert, <4 x double>* %v4GMP230.fca.49.load, 49
  %v4GMP230.fca.50.load = load <4 x double>*, <4 x double>** %v4GMP74.fca.50.gep
  %v4GMP230.fca.0.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 0
  store double* %v4GMP230.fca.0.load, double** %v4GMP230.fca.0.gep
  %v4GMP230.fca.1.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 1
  store double* %v4GMP230.fca.1.load, double** %v4GMP230.fca.1.gep
  %v4GMP230.fca.2.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 2
  store double* %v4GMP230.fca.2.load, double** %v4GMP230.fca.2.gep
  %v4GMP230.fca.3.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 3
  store double* %v4GMP230.fca.3.load, double** %v4GMP230.fca.3.gep
  %v4GMP230.fca.4.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 4
  store double* %v4GMP230.fca.4.load, double** %v4GMP230.fca.4.gep
  %v4GMP230.fca.5.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 5
  store double* %v4GMP230.fca.5.load, double** %v4GMP230.fca.5.gep
  %v4GMP230.fca.6.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 6
  store <3 x double>* %v4GMP230.fca.6.load, <3 x double>** %v4GMP230.fca.6.gep
  %v4GMP230.fca.7.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 7
  store <3 x double>* %v4GMP230.fca.7.load, <3 x double>** %v4GMP230.fca.7.gep
  %v4GMP230.fca.8.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 8
  store <3 x double>* %v4GMP230.fca.8.load, <3 x double>** %v4GMP230.fca.8.gep
  %v4GMP230.fca.9.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 9
  store <3 x double>* %v4GMP230.fca.9.load, <3 x double>** %v4GMP230.fca.9.gep
  %v4GMP230.fca.10.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 10
  store <3 x double>* %v4GMP230.fca.10.load, <3 x double>** %v4GMP230.fca.10.gep
  %v4GMP230.fca.11.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 11
  store <3 x double>* %v4GMP230.fca.11.load, <3 x double>** %v4GMP230.fca.11.gep
  %v4GMP230.fca.12.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 12
  store <3 x double>* %v4GMP230.fca.12.load, <3 x double>** %v4GMP230.fca.12.gep
  %v4GMP230.fca.13.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 13
  store <2 x double>* %v4GMP230.fca.13.load, <2 x double>** %v4GMP230.fca.13.gep
  %v4GMP230.fca.14.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 14
  store <2 x double>* %v4GMP230.fca.14.load, <2 x double>** %v4GMP230.fca.14.gep
  %v4GMP230.fca.15.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 15
  store <2 x double>* %v4GMP230.fca.15.load, <2 x double>** %v4GMP230.fca.15.gep
  %v4GMP230.fca.16.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 16
  store <2 x double>* %v4GMP230.fca.16.load, <2 x double>** %v4GMP230.fca.16.gep
  %v4GMP230.fca.17.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 17
  store <2 x double>* %v4GMP230.fca.17.load, <2 x double>** %v4GMP230.fca.17.gep
  %v4GMP230.fca.18.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 18
  store <2 x double>* %v4GMP230.fca.18.load, <2 x double>** %v4GMP230.fca.18.gep
  %v4GMP230.fca.19.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 19
  store <2 x double>* %v4GMP230.fca.19.load, <2 x double>** %v4GMP230.fca.19.gep
  %v4GMP230.fca.20.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 20
  store <2 x double>* %v4GMP230.fca.20.load, <2 x double>** %v4GMP230.fca.20.gep
  %v4GMP230.fca.21.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 21
  store <2 x double>* %v4GMP230.fca.21.load, <2 x double>** %v4GMP230.fca.21.gep
  %v4GMP230.fca.22.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 22
  store <2 x double>* %v4GMP230.fca.22.load, <2 x double>** %v4GMP230.fca.22.gep
  %v4GMP230.fca.23.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 23
  store <2 x double>* %v4GMP230.fca.23.load, <2 x double>** %v4GMP230.fca.23.gep
  %v4GMP230.fca.24.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 24
  store <2 x double>* %v4GMP230.fca.24.load, <2 x double>** %v4GMP230.fca.24.gep
  %v4GMP230.fca.25.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 25
  store <2 x double>* %v4GMP230.fca.25.load, <2 x double>** %v4GMP230.fca.25.gep
  %v4GMP230.fca.26.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 26
  store <2 x double>* %v4GMP230.fca.26.load, <2 x double>** %v4GMP230.fca.26.gep
  %v4GMP230.fca.27.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 27
  store <2 x double>* %v4GMP230.fca.27.load, <2 x double>** %v4GMP230.fca.27.gep
  %v4GMP230.fca.28.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 28
  store <2 x double>* %v4GMP230.fca.28.load, <2 x double>** %v4GMP230.fca.28.gep
  %v4GMP230.fca.29.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 29
  store <2 x double>* %v4GMP230.fca.29.load, <2 x double>** %v4GMP230.fca.29.gep
  %v4GMP230.fca.30.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 30
  store <2 x double>* %v4GMP230.fca.30.load, <2 x double>** %v4GMP230.fca.30.gep
  %v4GMP230.fca.31.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 31
  store <2 x double>* %v4GMP230.fca.31.load, <2 x double>** %v4GMP230.fca.31.gep
  %v4GMP230.fca.32.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 32
  store <2 x double>* %v4GMP230.fca.32.load, <2 x double>** %v4GMP230.fca.32.gep
  %v4GMP230.fca.33.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 33
  store <2 x double>* %v4GMP230.fca.33.load, <2 x double>** %v4GMP230.fca.33.gep
  %v4GMP230.fca.34.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 34
  store <2 x double>* %v4GMP230.fca.34.load, <2 x double>** %v4GMP230.fca.34.gep
  %v4GMP230.fca.35.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 35
  store <2 x double>* %v4GMP230.fca.35.load, <2 x double>** %v4GMP230.fca.35.gep
  %v4GMP230.fca.36.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 36
  store <2 x double>* %v4GMP230.fca.36.load, <2 x double>** %v4GMP230.fca.36.gep
  %v4GMP230.fca.37.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 37
  store <2 x double>* %v4GMP230.fca.37.load, <2 x double>** %v4GMP230.fca.37.gep
  %v4GMP230.fca.38.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 38
  store <2 x double>* %v4GMP230.fca.38.load, <2 x double>** %v4GMP230.fca.38.gep
  %v4GMP230.fca.39.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 39
  store <2 x double>* %v4GMP230.fca.39.load, <2 x double>** %v4GMP230.fca.39.gep
  %v4GMP230.fca.40.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 40
  store <2 x double>* %v4GMP230.fca.40.load, <2 x double>** %v4GMP230.fca.40.gep
  %v4GMP230.fca.41.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 41
  store <2 x double>* %v4GMP230.fca.41.load, <2 x double>** %v4GMP230.fca.41.gep
  %v4GMP230.fca.42.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 42
  store <4 x double>* %v4GMP230.fca.42.load, <4 x double>** %v4GMP230.fca.42.gep
  %v4GMP230.fca.43.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 43
  store <4 x double>* %v4GMP230.fca.43.load, <4 x double>** %v4GMP230.fca.43.gep
  %v4GMP230.fca.44.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 44
  store <4 x double>* %v4GMP230.fca.44.load, <4 x double>** %v4GMP230.fca.44.gep
  %v4GMP230.fca.45.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 45
  store <4 x double>* %v4GMP230.fca.45.load, <4 x double>** %v4GMP230.fca.45.gep
  %v4GMP230.fca.46.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 46
  store <4 x double>* %v4GMP230.fca.46.load, <4 x double>** %v4GMP230.fca.46.gep
  %v4GMP230.fca.47.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 47
  store <4 x double>* %v4GMP230.fca.47.load, <4 x double>** %v4GMP230.fca.47.gep
  %v4GMP230.fca.48.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 48
  store <4 x double>* %v4GMP230.fca.48.load, <4 x double>** %v4GMP230.fca.48.gep
  %v4GMP230.fca.49.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 49
  store <4 x double>* %v4GMP230.fca.49.load, <4 x double>** %v4GMP230.fca.49.gep
  %v4GMP230.fca.50.gep = getelementptr inbounds %gemPrm, %gemPrm* %47, i32 0, i32 50
  store <4 x double>* %v4GMP230.fca.50.load, <4 x double>** %v4GMP230.fca.50.gep
  store i64 %idx.2, i64* %48
  %return234 = call i64 @"getcomp@I[II"(i64* %GEM7.fca.3.load, i64 %idx.2)
  store i64 %return234, i64* %49
  %__mem235 = load <2 x double>, <2 x double>* %__mem
  store <2 x double> %__mem235, <2 x double>* %50
  %return238 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM7.fca.25.load, i64 %idx.2)
  store <2 x double> %return238, <2 x double>* %51
  %return241 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM7.fca.26.load, i64 %idx.2)
  store <2 x double> %return241, <2 x double>* %52
  %return244 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM7.fca.27.load, i64 %idx.2)
  store <2 x double> %return244, <2 x double>* %53
  store double %return224, double* %54
  %FLAME248 = call <2 x double> @"FLAME@UZ6gemPrmM51N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PIIUUUUF"(%gemPrm* %47, i64* %48, i64* %49, <2 x double>* %50, <2 x double>* %51, <2 x double>* %52, <2 x double>* %53, double* %54)
  %output249 = call <2 x double> @"add@UU"(<2 x double> %__tmp229, <2 x double> %FLAME248)
  store <2 x double> %output249, <2 x double>* %__tmp
  br label %end228

end228:                                           ; preds = %true227, %end200
  %return252 = call double @"getcomp@F[FI"(double* %GEM7.fca.15.load, i64 %idx.2)
  %return253 = fcmp one double %return252, 0.000000e+00
  br i1 %return253, label %true255, label %end256

true255:                                          ; preds = %end228
  %p1GMP257.fca.0.load = load double*, double** %p1GMP75.fca.0.gep
  %p1GMP257.fca.0.insert = insertvalue %gemPrm undef, double* %p1GMP257.fca.0.load, 0
  %p1GMP257.fca.1.load = load double*, double** %p1GMP75.fca.1.gep
  %p1GMP257.fca.1.insert = insertvalue %gemPrm %p1GMP257.fca.0.insert, double* %p1GMP257.fca.1.load, 1
  %p1GMP257.fca.2.load = load double*, double** %p1GMP75.fca.2.gep
  %p1GMP257.fca.2.insert = insertvalue %gemPrm %p1GMP257.fca.1.insert, double* %p1GMP257.fca.2.load, 2
  %p1GMP257.fca.3.load = load double*, double** %p1GMP75.fca.3.gep
  %p1GMP257.fca.3.insert = insertvalue %gemPrm %p1GMP257.fca.2.insert, double* %p1GMP257.fca.3.load, 3
  %p1GMP257.fca.4.load = load double*, double** %p1GMP75.fca.4.gep
  %p1GMP257.fca.4.insert = insertvalue %gemPrm %p1GMP257.fca.3.insert, double* %p1GMP257.fca.4.load, 4
  %p1GMP257.fca.5.load = load double*, double** %p1GMP75.fca.5.gep
  %p1GMP257.fca.5.insert = insertvalue %gemPrm %p1GMP257.fca.4.insert, double* %p1GMP257.fca.5.load, 5
  %p1GMP257.fca.6.load = load <3 x double>*, <3 x double>** %p1GMP75.fca.6.gep
  %p1GMP257.fca.6.insert = insertvalue %gemPrm %p1GMP257.fca.5.insert, <3 x double>* %p1GMP257.fca.6.load, 6
  %p1GMP257.fca.7.load = load <3 x double>*, <3 x double>** %p1GMP75.fca.7.gep
  %p1GMP257.fca.7.insert = insertvalue %gemPrm %p1GMP257.fca.6.insert, <3 x double>* %p1GMP257.fca.7.load, 7
  %p1GMP257.fca.8.load = load <3 x double>*, <3 x double>** %p1GMP75.fca.8.gep
  %p1GMP257.fca.8.insert = insertvalue %gemPrm %p1GMP257.fca.7.insert, <3 x double>* %p1GMP257.fca.8.load, 8
  %p1GMP257.fca.9.load = load <3 x double>*, <3 x double>** %p1GMP75.fca.9.gep
  %p1GMP257.fca.9.insert = insertvalue %gemPrm %p1GMP257.fca.8.insert, <3 x double>* %p1GMP257.fca.9.load, 9
  %p1GMP257.fca.10.load = load <3 x double>*, <3 x double>** %p1GMP75.fca.10.gep
  %p1GMP257.fca.10.insert = insertvalue %gemPrm %p1GMP257.fca.9.insert, <3 x double>* %p1GMP257.fca.10.load, 10
  %p1GMP257.fca.11.load = load <3 x double>*, <3 x double>** %p1GMP75.fca.11.gep
  %p1GMP257.fca.11.insert = insertvalue %gemPrm %p1GMP257.fca.10.insert, <3 x double>* %p1GMP257.fca.11.load, 11
  %p1GMP257.fca.12.load = load <3 x double>*, <3 x double>** %p1GMP75.fca.12.gep
  %p1GMP257.fca.12.insert = insertvalue %gemPrm %p1GMP257.fca.11.insert, <3 x double>* %p1GMP257.fca.12.load, 12
  %p1GMP257.fca.13.load = load <2 x double>*, <2 x double>** %p1GMP75.fca.13.gep
  %p1GMP257.fca.13.insert = insertvalue %gemPrm %p1GMP257.fca.12.insert, <2 x double>* %p1GMP257.fca.13.load, 13
  %p1GMP257.fca.14.load = load <2 x double>*, <2 x double>** %p1GMP75.fca.14.gep
  %p1GMP257.fca.14.insert = insertvalue %gemPrm %p1GMP257.fca.13.insert, <2 x double>* %p1GMP257.fca.14.load, 14
  %p1GMP257.fca.15.load = load <2 x double>*, <2 x double>** %p1GMP75.fca.15.gep
  %p1GMP257.fca.15.insert = insertvalue %gemPrm %p1GMP257.fca.14.insert, <2 x double>* %p1GMP257.fca.15.load, 15
  %p1GMP257.fca.16.load = load <2 x double>*, <2 x double>** %p1GMP75.fca.16.gep
  %p1GMP257.fca.16.insert = insertvalue %gemPrm %p1GMP257.fca.15.insert, <2 x double>* %p1GMP257.fca.16.load, 16
  %p1GMP257.fca.17.load = load <2 x double>*, <2 x double>** %p1GMP75.fca.17.gep
  %p1GMP257.fca.17.insert = insertvalue %gemPrm %p1GMP257.fca.16.insert, <2 x double>* %p1GMP257.fca.17.load, 17
  %p1GMP257.fca.18.load = load <2 x double>*, <2 x double>** %p1GMP75.fca.18.gep
  %p1GMP257.fca.18.insert = insertvalue %gemPrm %p1GMP257.fca.17.insert, <2 x double>* %p1GMP257.fca.18.load, 18
  %p1GMP257.fca.19.load = load <2 x double>*, <2 x double>** %p1GMP75.fca.19.gep
  %p1GMP257.fca.19.insert = insertvalue %gemPrm %p1GMP257.fca.18.insert, <2 x double>* %p1GMP257.fca.19.load, 19
  %p1GMP257.fca.20.load = load <2 x double>*, <2 x double>** %p1GMP75.fca.20.gep
  %p1GMP257.fca.20.insert = insertvalue %gemPrm %p1GMP257.fca.19.insert, <2 x double>* %p1GMP257.fca.20.load, 20
  %p1GMP257.fca.21.load = load <2 x double>*, <2 x double>** %p1GMP75.fca.21.gep
  %p1GMP257.fca.21.insert = insertvalue %gemPrm %p1GMP257.fca.20.insert, <2 x double>* %p1GMP257.fca.21.load, 21
  %p1GMP257.fca.22.load = load <2 x double>*, <2 x double>** %p1GMP75.fca.22.gep
  %p1GMP257.fca.22.insert = insertvalue %gemPrm %p1GMP257.fca.21.insert, <2 x double>* %p1GMP257.fca.22.load, 22
  %p1GMP257.fca.23.load = load <2 x double>*, <2 x double>** %p1GMP75.fca.23.gep
  %p1GMP257.fca.23.insert = insertvalue %gemPrm %p1GMP257.fca.22.insert, <2 x double>* %p1GMP257.fca.23.load, 23
  %p1GMP257.fca.24.load = load <2 x double>*, <2 x double>** %p1GMP75.fca.24.gep
  %p1GMP257.fca.24.insert = insertvalue %gemPrm %p1GMP257.fca.23.insert, <2 x double>* %p1GMP257.fca.24.load, 24
  %p1GMP257.fca.25.load = load <2 x double>*, <2 x double>** %p1GMP75.fca.25.gep
  %p1GMP257.fca.25.insert = insertvalue %gemPrm %p1GMP257.fca.24.insert, <2 x double>* %p1GMP257.fca.25.load, 25
  %p1GMP257.fca.26.load = load <2 x double>*, <2 x double>** %p1GMP75.fca.26.gep
  %p1GMP257.fca.26.insert = insertvalue %gemPrm %p1GMP257.fca.25.insert, <2 x double>* %p1GMP257.fca.26.load, 26
  %p1GMP257.fca.27.load = load <2 x double>*, <2 x double>** %p1GMP75.fca.27.gep
  %p1GMP257.fca.27.insert = insertvalue %gemPrm %p1GMP257.fca.26.insert, <2 x double>* %p1GMP257.fca.27.load, 27
  %p1GMP257.fca.28.load = load <2 x double>*, <2 x double>** %p1GMP75.fca.28.gep
  %p1GMP257.fca.28.insert = insertvalue %gemPrm %p1GMP257.fca.27.insert, <2 x double>* %p1GMP257.fca.28.load, 28
  %p1GMP257.fca.29.load = load <2 x double>*, <2 x double>** %p1GMP75.fca.29.gep
  %p1GMP257.fca.29.insert = insertvalue %gemPrm %p1GMP257.fca.28.insert, <2 x double>* %p1GMP257.fca.29.load, 29
  %p1GMP257.fca.30.load = load <2 x double>*, <2 x double>** %p1GMP75.fca.30.gep
  %p1GMP257.fca.30.insert = insertvalue %gemPrm %p1GMP257.fca.29.insert, <2 x double>* %p1GMP257.fca.30.load, 30
  %p1GMP257.fca.31.load = load <2 x double>*, <2 x double>** %p1GMP75.fca.31.gep
  %p1GMP257.fca.31.insert = insertvalue %gemPrm %p1GMP257.fca.30.insert, <2 x double>* %p1GMP257.fca.31.load, 31
  %p1GMP257.fca.32.load = load <2 x double>*, <2 x double>** %p1GMP75.fca.32.gep
  %p1GMP257.fca.32.insert = insertvalue %gemPrm %p1GMP257.fca.31.insert, <2 x double>* %p1GMP257.fca.32.load, 32
  %p1GMP257.fca.33.load = load <2 x double>*, <2 x double>** %p1GMP75.fca.33.gep
  %p1GMP257.fca.33.insert = insertvalue %gemPrm %p1GMP257.fca.32.insert, <2 x double>* %p1GMP257.fca.33.load, 33
  %p1GMP257.fca.34.load = load <2 x double>*, <2 x double>** %p1GMP75.fca.34.gep
  %p1GMP257.fca.34.insert = insertvalue %gemPrm %p1GMP257.fca.33.insert, <2 x double>* %p1GMP257.fca.34.load, 34
  %p1GMP257.fca.35.load = load <2 x double>*, <2 x double>** %p1GMP75.fca.35.gep
  %p1GMP257.fca.35.insert = insertvalue %gemPrm %p1GMP257.fca.34.insert, <2 x double>* %p1GMP257.fca.35.load, 35
  %p1GMP257.fca.36.load = load <2 x double>*, <2 x double>** %p1GMP75.fca.36.gep
  %p1GMP257.fca.36.insert = insertvalue %gemPrm %p1GMP257.fca.35.insert, <2 x double>* %p1GMP257.fca.36.load, 36
  %p1GMP257.fca.37.load = load <2 x double>*, <2 x double>** %p1GMP75.fca.37.gep
  %p1GMP257.fca.37.insert = insertvalue %gemPrm %p1GMP257.fca.36.insert, <2 x double>* %p1GMP257.fca.37.load, 37
  %p1GMP257.fca.38.load = load <2 x double>*, <2 x double>** %p1GMP75.fca.38.gep
  %p1GMP257.fca.38.insert = insertvalue %gemPrm %p1GMP257.fca.37.insert, <2 x double>* %p1GMP257.fca.38.load, 38
  %p1GMP257.fca.39.load = load <2 x double>*, <2 x double>** %p1GMP75.fca.39.gep
  %p1GMP257.fca.39.insert = insertvalue %gemPrm %p1GMP257.fca.38.insert, <2 x double>* %p1GMP257.fca.39.load, 39
  %p1GMP257.fca.40.load = load <2 x double>*, <2 x double>** %p1GMP75.fca.40.gep
  %p1GMP257.fca.40.insert = insertvalue %gemPrm %p1GMP257.fca.39.insert, <2 x double>* %p1GMP257.fca.40.load, 40
  %p1GMP257.fca.41.load = load <2 x double>*, <2 x double>** %p1GMP75.fca.41.gep
  %p1GMP257.fca.41.insert = insertvalue %gemPrm %p1GMP257.fca.40.insert, <2 x double>* %p1GMP257.fca.41.load, 41
  %p1GMP257.fca.42.load = load <4 x double>*, <4 x double>** %p1GMP75.fca.42.gep
  %p1GMP257.fca.42.insert = insertvalue %gemPrm %p1GMP257.fca.41.insert, <4 x double>* %p1GMP257.fca.42.load, 42
  %p1GMP257.fca.43.load = load <4 x double>*, <4 x double>** %p1GMP75.fca.43.gep
  %p1GMP257.fca.43.insert = insertvalue %gemPrm %p1GMP257.fca.42.insert, <4 x double>* %p1GMP257.fca.43.load, 43
  %p1GMP257.fca.44.load = load <4 x double>*, <4 x double>** %p1GMP75.fca.44.gep
  %p1GMP257.fca.44.insert = insertvalue %gemPrm %p1GMP257.fca.43.insert, <4 x double>* %p1GMP257.fca.44.load, 44
  %p1GMP257.fca.45.load = load <4 x double>*, <4 x double>** %p1GMP75.fca.45.gep
  %p1GMP257.fca.45.insert = insertvalue %gemPrm %p1GMP257.fca.44.insert, <4 x double>* %p1GMP257.fca.45.load, 45
  %p1GMP257.fca.46.load = load <4 x double>*, <4 x double>** %p1GMP75.fca.46.gep
  %p1GMP257.fca.46.insert = insertvalue %gemPrm %p1GMP257.fca.45.insert, <4 x double>* %p1GMP257.fca.46.load, 46
  %p1GMP257.fca.47.load = load <4 x double>*, <4 x double>** %p1GMP75.fca.47.gep
  %p1GMP257.fca.47.insert = insertvalue %gemPrm %p1GMP257.fca.46.insert, <4 x double>* %p1GMP257.fca.47.load, 47
  %p1GMP257.fca.48.load = load <4 x double>*, <4 x double>** %p1GMP75.fca.48.gep
  %p1GMP257.fca.48.insert = insertvalue %gemPrm %p1GMP257.fca.47.insert, <4 x double>* %p1GMP257.fca.48.load, 48
  %p1GMP257.fca.49.load = load <4 x double>*, <4 x double>** %p1GMP75.fca.49.gep
  %p1GMP257.fca.49.insert = insertvalue %gemPrm %p1GMP257.fca.48.insert, <4 x double>* %p1GMP257.fca.49.load, 49
  %p1GMP257.fca.50.load = load <4 x double>*, <4 x double>** %p1GMP75.fca.50.gep
  %p1GMP257.fca.0.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 0
  store double* %p1GMP257.fca.0.load, double** %p1GMP257.fca.0.gep
  %p1GMP257.fca.1.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 1
  store double* %p1GMP257.fca.1.load, double** %p1GMP257.fca.1.gep
  %p1GMP257.fca.2.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 2
  store double* %p1GMP257.fca.2.load, double** %p1GMP257.fca.2.gep
  %p1GMP257.fca.3.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 3
  store double* %p1GMP257.fca.3.load, double** %p1GMP257.fca.3.gep
  %p1GMP257.fca.4.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 4
  store double* %p1GMP257.fca.4.load, double** %p1GMP257.fca.4.gep
  %p1GMP257.fca.5.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 5
  store double* %p1GMP257.fca.5.load, double** %p1GMP257.fca.5.gep
  %p1GMP257.fca.6.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 6
  store <3 x double>* %p1GMP257.fca.6.load, <3 x double>** %p1GMP257.fca.6.gep
  %p1GMP257.fca.7.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 7
  store <3 x double>* %p1GMP257.fca.7.load, <3 x double>** %p1GMP257.fca.7.gep
  %p1GMP257.fca.8.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 8
  store <3 x double>* %p1GMP257.fca.8.load, <3 x double>** %p1GMP257.fca.8.gep
  %p1GMP257.fca.9.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 9
  store <3 x double>* %p1GMP257.fca.9.load, <3 x double>** %p1GMP257.fca.9.gep
  %p1GMP257.fca.10.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 10
  store <3 x double>* %p1GMP257.fca.10.load, <3 x double>** %p1GMP257.fca.10.gep
  %p1GMP257.fca.11.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 11
  store <3 x double>* %p1GMP257.fca.11.load, <3 x double>** %p1GMP257.fca.11.gep
  %p1GMP257.fca.12.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 12
  store <3 x double>* %p1GMP257.fca.12.load, <3 x double>** %p1GMP257.fca.12.gep
  %p1GMP257.fca.13.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 13
  store <2 x double>* %p1GMP257.fca.13.load, <2 x double>** %p1GMP257.fca.13.gep
  %p1GMP257.fca.14.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 14
  store <2 x double>* %p1GMP257.fca.14.load, <2 x double>** %p1GMP257.fca.14.gep
  %p1GMP257.fca.15.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 15
  store <2 x double>* %p1GMP257.fca.15.load, <2 x double>** %p1GMP257.fca.15.gep
  %p1GMP257.fca.16.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 16
  store <2 x double>* %p1GMP257.fca.16.load, <2 x double>** %p1GMP257.fca.16.gep
  %p1GMP257.fca.17.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 17
  store <2 x double>* %p1GMP257.fca.17.load, <2 x double>** %p1GMP257.fca.17.gep
  %p1GMP257.fca.18.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 18
  store <2 x double>* %p1GMP257.fca.18.load, <2 x double>** %p1GMP257.fca.18.gep
  %p1GMP257.fca.19.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 19
  store <2 x double>* %p1GMP257.fca.19.load, <2 x double>** %p1GMP257.fca.19.gep
  %p1GMP257.fca.20.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 20
  store <2 x double>* %p1GMP257.fca.20.load, <2 x double>** %p1GMP257.fca.20.gep
  %p1GMP257.fca.21.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 21
  store <2 x double>* %p1GMP257.fca.21.load, <2 x double>** %p1GMP257.fca.21.gep
  %p1GMP257.fca.22.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 22
  store <2 x double>* %p1GMP257.fca.22.load, <2 x double>** %p1GMP257.fca.22.gep
  %p1GMP257.fca.23.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 23
  store <2 x double>* %p1GMP257.fca.23.load, <2 x double>** %p1GMP257.fca.23.gep
  %p1GMP257.fca.24.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 24
  store <2 x double>* %p1GMP257.fca.24.load, <2 x double>** %p1GMP257.fca.24.gep
  %p1GMP257.fca.25.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 25
  store <2 x double>* %p1GMP257.fca.25.load, <2 x double>** %p1GMP257.fca.25.gep
  %p1GMP257.fca.26.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 26
  store <2 x double>* %p1GMP257.fca.26.load, <2 x double>** %p1GMP257.fca.26.gep
  %p1GMP257.fca.27.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 27
  store <2 x double>* %p1GMP257.fca.27.load, <2 x double>** %p1GMP257.fca.27.gep
  %p1GMP257.fca.28.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 28
  store <2 x double>* %p1GMP257.fca.28.load, <2 x double>** %p1GMP257.fca.28.gep
  %p1GMP257.fca.29.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 29
  store <2 x double>* %p1GMP257.fca.29.load, <2 x double>** %p1GMP257.fca.29.gep
  %p1GMP257.fca.30.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 30
  store <2 x double>* %p1GMP257.fca.30.load, <2 x double>** %p1GMP257.fca.30.gep
  %p1GMP257.fca.31.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 31
  store <2 x double>* %p1GMP257.fca.31.load, <2 x double>** %p1GMP257.fca.31.gep
  %p1GMP257.fca.32.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 32
  store <2 x double>* %p1GMP257.fca.32.load, <2 x double>** %p1GMP257.fca.32.gep
  %p1GMP257.fca.33.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 33
  store <2 x double>* %p1GMP257.fca.33.load, <2 x double>** %p1GMP257.fca.33.gep
  %p1GMP257.fca.34.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 34
  store <2 x double>* %p1GMP257.fca.34.load, <2 x double>** %p1GMP257.fca.34.gep
  %p1GMP257.fca.35.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 35
  store <2 x double>* %p1GMP257.fca.35.load, <2 x double>** %p1GMP257.fca.35.gep
  %p1GMP257.fca.36.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 36
  store <2 x double>* %p1GMP257.fca.36.load, <2 x double>** %p1GMP257.fca.36.gep
  %p1GMP257.fca.37.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 37
  store <2 x double>* %p1GMP257.fca.37.load, <2 x double>** %p1GMP257.fca.37.gep
  %p1GMP257.fca.38.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 38
  store <2 x double>* %p1GMP257.fca.38.load, <2 x double>** %p1GMP257.fca.38.gep
  %p1GMP257.fca.39.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 39
  store <2 x double>* %p1GMP257.fca.39.load, <2 x double>** %p1GMP257.fca.39.gep
  %p1GMP257.fca.40.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 40
  store <2 x double>* %p1GMP257.fca.40.load, <2 x double>** %p1GMP257.fca.40.gep
  %p1GMP257.fca.41.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 41
  store <2 x double>* %p1GMP257.fca.41.load, <2 x double>** %p1GMP257.fca.41.gep
  %p1GMP257.fca.42.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 42
  store <4 x double>* %p1GMP257.fca.42.load, <4 x double>** %p1GMP257.fca.42.gep
  %p1GMP257.fca.43.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 43
  store <4 x double>* %p1GMP257.fca.43.load, <4 x double>** %p1GMP257.fca.43.gep
  %p1GMP257.fca.44.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 44
  store <4 x double>* %p1GMP257.fca.44.load, <4 x double>** %p1GMP257.fca.44.gep
  %p1GMP257.fca.45.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 45
  store <4 x double>* %p1GMP257.fca.45.load, <4 x double>** %p1GMP257.fca.45.gep
  %p1GMP257.fca.46.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 46
  store <4 x double>* %p1GMP257.fca.46.load, <4 x double>** %p1GMP257.fca.46.gep
  %p1GMP257.fca.47.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 47
  store <4 x double>* %p1GMP257.fca.47.load, <4 x double>** %p1GMP257.fca.47.gep
  %p1GMP257.fca.48.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 48
  store <4 x double>* %p1GMP257.fca.48.load, <4 x double>** %p1GMP257.fca.48.gep
  %p1GMP257.fca.49.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 49
  store <4 x double>* %p1GMP257.fca.49.load, <4 x double>** %p1GMP257.fca.49.gep
  %p1GMP257.fca.50.gep = getelementptr inbounds %gemPrm, %gemPrm* %55, i32 0, i32 50
  store <4 x double>* %p1GMP257.fca.50.load, <4 x double>** %p1GMP257.fca.50.gep
  store i64 %idx.2, i64* %56
  %return261 = call i64 @"getcomp@I[II"(i64* %GEM7.fca.4.load, i64 %idx.2)
  store i64 %return261, i64* %57
  %__tmp262 = load <2 x double>, <2 x double>* %__tmp
  store <2 x double> %__tmp262, <2 x double>* %58
  store <2 x double> <double 1.000000e+00, double 0.000000e+00>, <2 x double>* %59
  store <2 x double> <double 0.000000e+00, double 1.000000e+00>, <2 x double>* %60
  store <2 x double> zeroinitializer, <2 x double>* %61
  store double %return252, double* %62
  %FLAME266 = call <2 x double> @"FLAME@UZ6gemPrmM51N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PIIUUUUF"(%gemPrm* %55, i64* %56, i64* %57, <2 x double>* %58, <2 x double>* %59, <2 x double>* %60, <2 x double>* %61, double* %62)
  store <2 x double> %FLAME266, <2 x double>* %__tmp
  br label %end256

end256:                                           ; preds = %true255, %end228
  %return269 = call i64 @"getcomp@I[II"(i64* %GEM7.fca.6.load, i64 %idx.2)
  %108 = icmp ne i64 %return269, 0
  br i1 %108, label %true270, label %end271

true270:                                          ; preds = %end256
  %return274 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM7.fca.28.load, i64 %idx.2)
  store <2 x double> %return274, <2 x double>* %63
  %return277 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM7.fca.29.load, i64 %idx.2)
  store <2 x double> %return277, <2 x double>* %64
  %return280 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM7.fca.30.load, i64 %idx.2)
  store <2 x double> %return280, <2 x double>* %65
  call void @"affine@UUUU"(<2 x double>* %__tmp, <2 x double>* %63, <2 x double>* %64, <2 x double>* %65)
  br label %end271

end271:                                           ; preds = %true270, %end256
  %109 = icmp ne i64 %SYS5.fca.0.load, 0
  br i1 %109, label %true282, label %end283

true282:                                          ; preds = %end271
  %__tmp284 = load <2 x double>, <2 x double>* %__tmp
  %cast285 = call <3 x double> @"set@VI"(i64 0)
  %return287 = call <3 x double> @"set@VFFF"(double 0.000000e+00, double 0.000000e+00, double %GEM7.fca.24.load)
  %cast288 = call <3 x double> @"set@VI"(i64 1)
  %return290 = call <16 x double> @"maketransform@4IIVVVV"(i64 0, i64 0, <3 x double> %cast285, <3 x double> %return287, <3 x double> %cast288, <3 x double> %cast285)
  %cast291 = call <4 x double> @"set@24"(<16 x double> %return290)
  %output292 = call <2 x double> @"mul@U2"(<2 x double> %__tmp284, <4 x double> %cast291)
  store <2 x double> %output292, <2 x double>* %__tmp
  br label %end283

end283:                                           ; preds = %true282, %end271
  %return295 = call double @"getcomp@F[FI"(double* %GEM7.fca.17.load, i64 %idx.2)
  %return298 = call double @"getcomp@F[FI"(double* %GEM7.fca.18.load, i64 %idx.2)
  %output300 = fmul double %return298, %PREV_CLR.0
  %output301 = fadd double %return295, %output300
  %__tmp302 = load <2 x double>, <2 x double>* %__tmp
  store <2 x double> %__tmp302, <2 x double>* %__mem
  %output304 = add i64 %i.0, 1
  br label %cond

true306:                                          ; preds = %end101
  %GEM308.fca.0.load = load i64*, i64** %GEM2.fca.0.gep
  %GEM308.fca.0.insert = insertvalue %gem undef, i64* %GEM308.fca.0.load, 0
  %GEM308.fca.1.load = load i64*, i64** %GEM2.fca.1.gep
  %GEM308.fca.1.insert = insertvalue %gem %GEM308.fca.0.insert, i64* %GEM308.fca.1.load, 1
  %GEM308.fca.2.load = load i64*, i64** %GEM2.fca.2.gep
  %GEM308.fca.2.insert = insertvalue %gem %GEM308.fca.1.insert, i64* %GEM308.fca.2.load, 2
  %GEM308.fca.3.load = load i64*, i64** %GEM2.fca.3.gep
  %GEM308.fca.3.insert = insertvalue %gem %GEM308.fca.2.insert, i64* %GEM308.fca.3.load, 3
  %GEM308.fca.4.load = load i64*, i64** %GEM2.fca.4.gep
  %GEM308.fca.4.insert = insertvalue %gem %GEM308.fca.3.insert, i64* %GEM308.fca.4.load, 4
  %GEM308.fca.5.load = load i64*, i64** %GEM2.fca.5.gep
  %GEM308.fca.5.insert = insertvalue %gem %GEM308.fca.4.insert, i64* %GEM308.fca.5.load, 5
  %GEM308.fca.6.load = load i64*, i64** %GEM2.fca.6.gep
  %GEM308.fca.6.insert = insertvalue %gem %GEM308.fca.5.insert, i64* %GEM308.fca.6.load, 6
  %GEM308.fca.7.load = load i64, i64* %GEM2.fca.7.gep
  %GEM308.fca.7.insert = insertvalue %gem %GEM308.fca.6.insert, i64 %GEM308.fca.7.load, 7
  %GEM308.fca.8.load = load i64, i64* %GEM2.fca.8.gep
  %GEM308.fca.8.insert = insertvalue %gem %GEM308.fca.7.insert, i64 %GEM308.fca.8.load, 8
  %GEM308.fca.9.load = load i64, i64* %GEM2.fca.9.gep
  %GEM308.fca.9.insert = insertvalue %gem %GEM308.fca.8.insert, i64 %GEM308.fca.9.load, 9
  %GEM308.fca.10.load = load i64, i64* %GEM2.fca.10.gep
  %GEM308.fca.10.insert = insertvalue %gem %GEM308.fca.9.insert, i64 %GEM308.fca.10.load, 10
  %GEM308.fca.11.load = load double*, double** %GEM2.fca.11.gep
  %GEM308.fca.11.insert = insertvalue %gem %GEM308.fca.10.insert, double* %GEM308.fca.11.load, 11
  %GEM308.fca.12.load = load double*, double** %GEM2.fca.12.gep
  %GEM308.fca.12.insert = insertvalue %gem %GEM308.fca.11.insert, double* %GEM308.fca.12.load, 12
  %GEM308.fca.13.load = load double*, double** %GEM2.fca.13.gep
  %GEM308.fca.13.insert = insertvalue %gem %GEM308.fca.12.insert, double* %GEM308.fca.13.load, 13
  %GEM308.fca.14.load = load double*, double** %GEM2.fca.14.gep
  %GEM308.fca.14.insert = insertvalue %gem %GEM308.fca.13.insert, double* %GEM308.fca.14.load, 14
  %GEM308.fca.15.load = load double*, double** %GEM2.fca.15.gep
  %GEM308.fca.15.insert = insertvalue %gem %GEM308.fca.14.insert, double* %GEM308.fca.15.load, 15
  %GEM308.fca.16.load = load double*, double** %GEM2.fca.16.gep
  %GEM308.fca.16.insert = insertvalue %gem %GEM308.fca.15.insert, double* %GEM308.fca.16.load, 16
  %GEM308.fca.17.load = load double*, double** %GEM2.fca.17.gep
  %GEM308.fca.17.insert = insertvalue %gem %GEM308.fca.16.insert, double* %GEM308.fca.17.load, 17
  %GEM308.fca.18.load = load double*, double** %GEM2.fca.18.gep
  %GEM308.fca.18.insert = insertvalue %gem %GEM308.fca.17.insert, double* %GEM308.fca.18.load, 18
  %GEM308.fca.19.load = load double*, double** %GEM2.fca.19.gep
  %GEM308.fca.19.insert = insertvalue %gem %GEM308.fca.18.insert, double* %GEM308.fca.19.load, 19
  %GEM308.fca.20.load = load double, double* %GEM2.fca.20.gep
  %GEM308.fca.20.insert = insertvalue %gem %GEM308.fca.19.insert, double %GEM308.fca.20.load, 20
  %GEM308.fca.21.load = load double, double* %GEM2.fca.21.gep
  %GEM308.fca.21.insert = insertvalue %gem %GEM308.fca.20.insert, double %GEM308.fca.21.load, 21
  %GEM308.fca.22.load = load double, double* %GEM2.fca.22.gep
  %GEM308.fca.22.insert = insertvalue %gem %GEM308.fca.21.insert, double %GEM308.fca.22.load, 22
  %GEM308.fca.23.load = load double, double* %GEM2.fca.23.gep
  %GEM308.fca.23.insert = insertvalue %gem %GEM308.fca.22.insert, double %GEM308.fca.23.load, 23
  %GEM308.fca.24.load = load double, double* %GEM2.fca.24.gep
  %GEM308.fca.24.insert = insertvalue %gem %GEM308.fca.23.insert, double %GEM308.fca.24.load, 24
  %GEM308.fca.25.load = load <2 x double>*, <2 x double>** %GEM2.fca.25.gep
  %GEM308.fca.25.insert = insertvalue %gem %GEM308.fca.24.insert, <2 x double>* %GEM308.fca.25.load, 25
  %GEM308.fca.26.load = load <2 x double>*, <2 x double>** %GEM2.fca.26.gep
  %GEM308.fca.26.insert = insertvalue %gem %GEM308.fca.25.insert, <2 x double>* %GEM308.fca.26.load, 26
  %GEM308.fca.27.load = load <2 x double>*, <2 x double>** %GEM2.fca.27.gep
  %GEM308.fca.27.insert = insertvalue %gem %GEM308.fca.26.insert, <2 x double>* %GEM308.fca.27.load, 27
  %GEM308.fca.28.load = load <2 x double>*, <2 x double>** %GEM2.fca.28.gep
  %GEM308.fca.28.insert = insertvalue %gem %GEM308.fca.27.insert, <2 x double>* %GEM308.fca.28.load, 28
  %GEM308.fca.29.load = load <2 x double>*, <2 x double>** %GEM2.fca.29.gep
  %GEM308.fca.29.insert = insertvalue %gem %GEM308.fca.28.insert, <2 x double>* %GEM308.fca.29.load, 29
  %GEM308.fca.30.load = load <2 x double>*, <2 x double>** %GEM2.fca.30.gep
  %GEM308.fca.30.insert = insertvalue %gem %GEM308.fca.29.insert, <2 x double>* %GEM308.fca.30.load, 30
  %GEM308.fca.31.load = load <2 x double>, <2 x double>* %GEM2.fca.31.gep
  %GEM308.fca.31.insert = insertvalue %gem %GEM308.fca.30.insert, <2 x double> %GEM308.fca.31.load, 31
  %GEM308.fca.32.load = load <2 x double>, <2 x double>* %GEM2.fca.32.gep
  %GEM308.fca.32.insert = insertvalue %gem %GEM308.fca.31.insert, <2 x double> %GEM308.fca.32.load, 32
  %GEM308.fca.33.load = load <2 x double>, <2 x double>* %GEM2.fca.33.gep
  %GEM308.fca.33.insert = insertvalue %gem %GEM308.fca.32.insert, <2 x double> %GEM308.fca.33.load, 33
  %GEM308.fca.34.load = load <2 x double>, <2 x double>* %GEM2.fca.34.gep
  %GEM308.fca.34.insert = insertvalue %gem %GEM308.fca.33.insert, <2 x double> %GEM308.fca.34.load, 34
  %GEM308.fca.35.load = load <2 x double>, <2 x double>* %GEM2.fca.35.gep
  %GEM308.fca.35.insert = insertvalue %gem %GEM308.fca.34.insert, <2 x double> %GEM308.fca.35.load, 35
  %GEM308.fca.36.load = load <2 x double>, <2 x double>* %GEM2.fca.36.gep
  %GEM308.fca.36.insert = insertvalue %gem %GEM308.fca.35.insert, <2 x double> %GEM308.fca.36.load, 36
  %GEM308.fca.37.load = load i8**, i8*** %GEM2.fca.37.gep
  %cast336 = call <2 x double> @"set@UI"(i64 0)
  store <2 x double> %cast336, <2 x double>* %__tmp
  %return338 = fcmp one double %GEM308.fca.20.load, 0.000000e+00
  br i1 %return338, label %true340, label %end341

end307:                                           ; preds = %end389, %end101
  %return396 = call double @"getcomp@F[FI"(double* %GEM7.fca.19.load, i64 %idx.1)
  store i64 %SYS5.fca.3.load, i64* %66
  %__mem398 = load <2 x double>, <2 x double>* %__mem
  store <2 x double> %__mem398, <2 x double>* %67
  store double %return396, double* %68
  %chkNAN_v = call i64 @"chkNAN_v@IIUF"(i64* %66, <2 x double>* %67, double* %68)
  %110 = icmp ne i64 %chkNAN_v, 0
  br i1 %110, label %true400, label %false401

true340:                                          ; preds = %true306
  store i64 1, i64* %70
  store i64 %GEM308.fca.7.load, i64* %71
  %__mem344 = load <2 x double>, <2 x double>* %__mem
  store <2 x double> %__mem344, <2 x double>* %72
  store <2 x double> %GEM308.fca.31.load, <2 x double>* %73
  store <2 x double> %GEM308.fca.32.load, <2 x double>* %74
  store <2 x double> %GEM308.fca.33.load, <2 x double>* %75
  store double %GEM308.fca.20.load, double* %76
  %FLAMEFF = call <2 x double> @"FLAMEFF@UZ6gemPrmM51N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PIIUUUUF"(%gemPrm* %69, i64* %70, i64* %71, <2 x double>* %72, <2 x double>* %73, <2 x double>* %74, <2 x double>* %75, double* %76)
  %output349 = call <2 x double> @"add@UU"(<2 x double> %cast336, <2 x double> %FLAMEFF)
  store <2 x double> %output349, <2 x double>* %__tmp
  br label %end341

end341:                                           ; preds = %true340, %true306
  %return351 = fcmp one double %GEM308.fca.21.load, 0.000000e+00
  br i1 %return351, label %true353, label %end354

true353:                                          ; preds = %end341
  %__tmp355 = load <2 x double>, <2 x double>* %__tmp
  store i64 1, i64* %78
  store i64 %GEM308.fca.8.load, i64* %79
  %__mem357 = load <2 x double>, <2 x double>* %__mem
  store <2 x double> %__mem357, <2 x double>* %80
  store <2 x double> %GEM308.fca.31.load, <2 x double>* %81
  store <2 x double> %GEM308.fca.32.load, <2 x double>* %82
  store <2 x double> %GEM308.fca.33.load, <2 x double>* %83
  store double %GEM308.fca.21.load, double* %84
  %FLAMEFF362 = call <2 x double> @"FLAMEFF@UZ6gemPrmM51N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PIIUUUUF"(%gemPrm* %77, i64* %78, i64* %79, <2 x double>* %80, <2 x double>* %81, <2 x double>* %82, <2 x double>* %83, double* %84)
  %output363 = call <2 x double> @"add@UU"(<2 x double> %__tmp355, <2 x double> %FLAMEFF362)
  store <2 x double> %output363, <2 x double>* %__tmp
  br label %end354

end354:                                           ; preds = %true353, %end341
  %return365 = fcmp one double %GEM308.fca.22.load, 0.000000e+00
  br i1 %return365, label %true367, label %end368

true367:                                          ; preds = %end354
  %__tmp369 = load <2 x double>, <2 x double>* %__tmp
  store i64 1, i64* %86
  store i64 %GEM308.fca.9.load, i64* %87
  %__mem371 = load <2 x double>, <2 x double>* %__mem
  store <2 x double> %__mem371, <2 x double>* %88
  store <2 x double> %GEM308.fca.31.load, <2 x double>* %89
  store <2 x double> %GEM308.fca.32.load, <2 x double>* %90
  store <2 x double> %GEM308.fca.33.load, <2 x double>* %91
  store double %GEM308.fca.22.load, double* %92
  %FLAMEFF376 = call <2 x double> @"FLAMEFF@UZ6gemPrmM51N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PIIUUUUF"(%gemPrm* %85, i64* %86, i64* %87, <2 x double>* %88, <2 x double>* %89, <2 x double>* %90, <2 x double>* %91, double* %92)
  %output377 = call <2 x double> @"add@UU"(<2 x double> %__tmp369, <2 x double> %FLAMEFF376)
  store <2 x double> %output377, <2 x double>* %__tmp
  br label %end368

end368:                                           ; preds = %true367, %end354
  %return379 = fcmp one double %GEM308.fca.23.load, 0.000000e+00
  br i1 %return379, label %true381, label %end382

true381:                                          ; preds = %end368
  store i64 2, i64* %94
  store i64 %GEM308.fca.10.load, i64* %95
  %__tmp384 = load <2 x double>, <2 x double>* %__tmp
  store <2 x double> %__tmp384, <2 x double>* %96
  store <2 x double> <double 1.000000e+00, double 0.000000e+00>, <2 x double>* %97
  store <2 x double> <double 0.000000e+00, double 1.000000e+00>, <2 x double>* %98
  store <2 x double> zeroinitializer, <2 x double>* %99
  store double %GEM308.fca.23.load, double* %100
  %FLAMEFF386 = call <2 x double> @"FLAMEFF@UZ6gemPrmM51N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PIIUUUUF"(%gemPrm* %93, i64* %94, i64* %95, <2 x double>* %96, <2 x double>* %97, <2 x double>* %98, <2 x double>* %99, double* %100)
  store <2 x double> %FLAMEFF386, <2 x double>* %__tmp
  br label %end382

end382:                                           ; preds = %true381, %end368
  %111 = icmp ne i64 %SYS5.fca.2.load, 0
  br i1 %111, label %true388, label %end389

true388:                                          ; preds = %end382
  store <2 x double> %GEM308.fca.34.load, <2 x double>* %101
  store <2 x double> %GEM308.fca.35.load, <2 x double>* %102
  store <2 x double> %GEM308.fca.36.load, <2 x double>* %103
  call void @"affine@UUUU"(<2 x double>* %__tmp, <2 x double>* %101, <2 x double>* %102, <2 x double>* %103)
  br label %end389

end389:                                           ; preds = %true388, %end382
  %__tmp393 = load <2 x double>, <2 x double>* %__tmp
  store <2 x double> %__tmp393, <2 x double>* %__mem
  br label %end307

true400:                                          ; preds = %end307
  %_bound_ptnum403 = load i64, i64* %_bound_ptnum
  %return404 = call i64 @"removepoint@III"(i64 0, i64 %_bound_ptnum403)
  br label %end402

false401:                                         ; preds = %end307
  %112 = icmp ne i64 %SYS5.fca.4.load, 0
  br i1 %112, label %true406, label %end407

end402:                                           ; preds = %end411, %true400
  ret void

true406:                                          ; preds = %false401
  store i64 %SYS5.fca.7.load, i64* %104
  call void @"V_SYM@UI"(<2 x double>* %__mem, i64* %104)
  br label %end407

end407:                                           ; preds = %true406, %false401
  %113 = icmp ne i64 %SYS5.fca.8.load, 0
  br i1 %113, label %true410, label %end411

true410:                                          ; preds = %end407
  %output414 = fmul double 1.000000e-03, %SYS5.fca.9.load
  %_bound_ptnum415 = load i64, i64* %_bound_ptnum
  %return417 = call i64 @"setpointattrib@IISIFS"(i64 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @164, i64 0, i64 0), i64 %_bound_ptnum415, double %SYS5.fca.9.load, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @165, i64 0, i64 0))
  br label %end411

end411:                                           ; preds = %true410, %end407
  %pscl.0 = phi double [ %output414, %true410 ], [ 1.000000e-03, %end407 ]
  %__mem418 = load <2 x double>, <2 x double>* %__mem
  %cast419 = call <3 x double> @"set@VU"(<2 x double> %__mem418)
  store <3 x double> %cast419, <3 x double>* %_bound_P
  store double %CLR.0, double* %_bound_COORD
  %output423 = fmul double %pscl.0, %return396
  store double %output423, double* %_bound_pscale
  store double %return396, double* %_bound_Alpha
  br label %end402
}

; Function Attrs: nounwind readnone
declare i64 @"len@I[S"(i8**) #1

; Function Attrs: nounwind readnone
declare <2 x double> @"set@UI"(i64) #1

; Function Attrs: nounwind
declare double* @"slice@[F[FIIIIII"(double*, i64, i64, i64, i64, i64, i64) #3

; Function Attrs: alwaysinline
define private i64 @"sample_cdf@[FFI"(double* %rw01, double %rw12) #2 {
__llvm_entry:
  %rw24 = call { i64, double, double } @"sample_cdf@[FFIFF"(double* %rw01, double %rw12)
  %rw25 = extractvalue { i64, double, double } %rw24, 0
  ret i64 %rw25
}

; Function Attrs: nounwind readnone
declare { i64, double, double } @"sample_cdf@[FFIFF"(double*, double) #1

; Function Attrs: nounwind readnone
declare <2 x double> @"add@UU"(<2 x double>, <2 x double>) #1

; Function Attrs: nounwind
declare i64 @"removepoint@III"(i64, i64) #3

; Function Attrs: nounwind
declare i64 @"setpointattrib@IISIFS"(i64, i8*, i64, double, i8*) #3

; Function Attrs: nounwind readnone
declare <3 x double> @"set@VU"(<2 x double>) #1

; Function Attrs: nounwind
define void @TheFractalFlameAlgorithm(i64 %ptnum, i64* %VACTIVE, i64 %XAOS, double* %XAOS_TO, double %pscale, double %COORD, double %Alpha, <3 x double> %P) #3 {
__llvm_entry:
  %"<pscale>" = alloca double
  %"<COORD>" = alloca double
  %"<Alpha>" = alloca double
  %"<P>" = alloca <3 x double>
  %0 = alloca i64
  %1 = alloca i64*
  %2 = alloca i64
  %3 = alloca double*
  store double %pscale, double* %"<pscale>"
  store double %COORD, double* %"<COORD>"
  store double %Alpha, double* %"<Alpha>"
  store <3 x double> %P, <3 x double>* %"<P>"
  store i64 %ptnum, i64* %0
  store i64* %VACTIVE, i64** %1
  store i64 %XAOS, i64* %2
  store double* %XAOS_TO, double** %3
  call void @"_TheFractalFlameAlgorithm@I[II[FFFFV"(i64* %0, i64** %1, i64* %2, double** %3, double* %"<pscale>", double* %"<COORD>", double* %"<Alpha>", <3 x double>* %"<P>")
  %gvalue = call i64 @"_export@ISI"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @166, i64 0, i64 0), i64 %ptnum) #4
  %evalue5 = load double, double* %"<pscale>"
  %gvalue6 = call double @"_export@FSF"(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @167, i64 0, i64 0), double %evalue5) #4
  %evalue7 = load double, double* %"<COORD>"
  %gvalue8 = call double @"_export@FSF"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @168, i64 0, i64 0), double %evalue7) #4
  %evalue9 = load double, double* %"<Alpha>"
  %gvalue10 = call double @"_export@FSF"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @169, i64 0, i64 0), double %evalue9) #4
  %evalue11 = load <3 x double>, <3 x double>* %"<P>"
  %gvalue12 = call <3 x double> @"_export@VSV"(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @170, i64 0, i64 0), <3 x double> %evalue11) #4
  store i64 %gvalue, i64* @ptnum
  store double %gvalue6, double* @pscale
  store double %gvalue8, double* @COORD
  store double %gvalue10, double* @Alpha
  store <3 x double> %gvalue12, <3 x double>* @P
  ret void
}

declare i64 @"_export@ISI"(i8*, i64)

declare double @"_export@FSF"(i8*, double)

declare <3 x double> @"_export@VSV"(i8*, <3 x double>)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @TheFractalFlameAlgorithm(i64 0, i64* getelementptr inbounds ([0 x i64], [0 x i64]* @54, i64 0, i64 0), i64 0, double* getelementptr inbounds ([0 x double], [0 x double]* @55, i64 0, i64 0), double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, <3 x double> zeroinitializer)
  ret void
}

attributes #0 = { alwaysinline nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
attributes #3 = { nounwind }
attributes #4 = { nounwind readonly }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"19.0.531"}
!2 = !{!"64"}
!3 = !{!""}

;_code_end
