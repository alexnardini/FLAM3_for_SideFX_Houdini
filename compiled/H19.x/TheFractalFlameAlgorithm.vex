;_name	FLAM3
; ModuleID = 'FLAM3'
source_filename = "FLAM3"

%gem = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64*, i64*, i64*, i64*, i64*, i64*, i64*, i64*, i64, i64, i64, i64, i64, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double, double, double, double, double, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>, <2 x double>, <2 x double>, <2 x double>, <2 x double>, <2 x double>, <4 x double>, double }
%gemPrm = type { double*, double*, double*, double*, double*, double*, <3 x double>*, <3 x double>*, <3 x double>*, <3 x double>*, <3 x double>*, <3 x double>*, <3 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <4 x double>*, <4 x double>*, <4 x double>*, <4 x double>*, <4 x double>*, <4 x double>*, <4 x double>*, <4 x double>*, <4 x double>*, <3 x double>* }

@0 = private constant [8 x i8] c"twister\00"
@1 = private constant [14 x i8] c"../dotmglobal\00"
@2 = private constant [16 x i8] c"../dofinalflame\00"
@3 = private constant [14 x i8] c"../_dofpost_2\00"
@4 = private constant [16 x i8] c"../delinvalidpt\00"
@5 = private constant [12 x i8] c"../symmetry\00"
@6 = private constant [8 x i8] c"../domb\00"
@7 = private constant [8 x i8] c"../iter\00"
@8 = private constant [14 x i8] c"../rotational\00"
@9 = private constant [11 x i8] c"Tstep_mult\00"
@10 = private constant [8 x i8] c"../clr_\00"
@11 = private constant [13 x i8] c"../clrspeed_\00"
@12 = private constant [10 x i8] c"../alpha_\00"
@13 = private constant [18 x i8] c"../preblurweight_\00"
@14 = private constant [15 x i8] c"../pre1weight_\00"
@15 = private constant [13 x i8] c"../pre1type_\00"
@16 = private constant [15 x i8] c"../pre2weight_\00"
@17 = private constant [13 x i8] c"../pre2type_\00"
@18 = private constant [13 x i8] c"../v1weight_\00"
@19 = private constant [11 x i8] c"../v1type_\00"
@20 = private constant [13 x i8] c"../v2weight_\00"
@21 = private constant [11 x i8] c"../v2type_\00"
@22 = private constant [13 x i8] c"../v3weight_\00"
@23 = private constant [11 x i8] c"../v3type_\00"
@24 = private constant [13 x i8] c"../v4weight_\00"
@25 = private constant [11 x i8] c"../v4type_\00"
@26 = private constant [13 x i8] c"../p1weight_\00"
@27 = private constant [11 x i8] c"../p1type_\00"
@28 = private constant [6 x i8] c"../x_\00"
@29 = private constant [6 x i8] c"../y_\00"
@30 = private constant [8 x i8] c"../ang_\00"
@31 = private constant [6 x i8] c"../o_\00"
@32 = private constant [11 x i8] c"../dopost_\00"
@33 = private constant [7 x i8] c"../px_\00"
@34 = private constant [7 x i8] c"../py_\00"
@35 = private constant [9 x i8] c"../pang_\00"
@36 = private constant [7 x i8] c"../po_\00"
@37 = private constant [7 x i8] c"../frt\00"
@38 = private constant [14 x i8] c"../ffv1weight\00"
@39 = private constant [12 x i8] c"../ffv1type\00"
@40 = private constant [14 x i8] c"../ffv2weight\00"
@41 = private constant [12 x i8] c"../ffv2type\00"
@42 = private constant [14 x i8] c"../ffv3weight\00"
@43 = private constant [12 x i8] c"../ffv3type\00"
@44 = private constant [14 x i8] c"../ffp1weight\00"
@45 = private constant [12 x i8] c"../ffp1type\00"
@46 = private constant [14 x i8] c"../ffp2weight\00"
@47 = private constant [12 x i8] c"../ffp2type\00"
@48 = private constant [9 x i8] c"../_fx_2\00"
@49 = private constant [9 x i8] c"../_fy_2\00"
@50 = private constant [10 x i8] c"../_ang_2\00"
@51 = private constant [9 x i8] c"../_fo_2\00"
@52 = private constant [10 x i8] c"../_pfx_2\00"
@53 = private constant [10 x i8] c"../_pfy_2\00"
@54 = private constant [11 x i8] c"../_pang_2\00"
@55 = private constant [10 x i8] c"../_pfo_2\00"
@56 = private constant [0 x i64] zeroinitializer
@57 = private constant [0 x double] zeroinitializer
@58 = private constant [0 x <2 x double>] zeroinitializer
@59 = private constant [20 x double] [double 2.700000e+01, double 2.800000e+01, double 2.900000e+01, double 3.000000e+01, double 3.100000e+01, double 3.200000e+01, double 3.400000e+01, double 3.500000e+01, double 3.600000e+01, double 3.700000e+01, double 3.800000e+01, double 4.700000e+01, double 4.800000e+01, double 4.900000e+01, double 5.000000e+01, double 5.100000e+01, double 5.200000e+01, double 5.300000e+01, double 5.600000e+01, double 5.700000e+01]
@60 = private constant [10 x i8] c"../curlc_\00"
@61 = private constant [9 x i8] c"../ngon_\00"
@62 = private constant [9 x i8] c"../pdjw_\00"
@63 = private constant [9 x i8] c"../blob_\00"
@64 = private constant [11 x i8] c"../julian_\00"
@65 = private constant [15 x i8] c"../juliascope_\00"
@66 = private constant [9 x i8] c"../fan2_\00"
@67 = private constant [14 x i8] c"../rings2val_\00"
@68 = private constant [15 x i8] c"../rectangles_\00"
@69 = private constant [15 x i8] c"../radialblur_\00"
@70 = private constant [8 x i8] c"../pie_\00"
@71 = private constant [10 x i8] c"../disc2_\00"
@72 = private constant [15 x i8] c"../supershape_\00"
@73 = private constant [16 x i8] c"../supershapen_\00"
@74 = private constant [11 x i8] c"../flower_\00"
@75 = private constant [10 x i8] c"../conic_\00"
@76 = private constant [13 x i8] c"../parabola_\00"
@77 = private constant [12 x i8] c"../bent2xy_\00"
@78 = private constant [17 x i8] c"../bipolarshift_\00"
@79 = private constant [13 x i8] c"../cellsize_\00"
@80 = private constant [9 x i8] c"../cpow_\00"
@81 = private constant [21 x double] [double 6.100000e+01, double 6.300000e+01, double 6.600000e+01, double 6.700000e+01, double 6.900000e+01, double 7.100000e+01, double 7.200000e+01, double 7.300000e+01, double 7.400000e+01, double 7.500000e+01, double 7.600000e+01, double 7.700000e+01, double 7.800000e+01, double 7.900000e+01, double 9.400000e+01, double 9.500000e+01, double 9.600000e+01, double 9.700000e+01, double 9.800000e+01, double 9.900000e+01, double 1.010000e+02]
@82 = private constant [15 x i8] c"../escherbeta_\00"
@83 = private constant [17 x i8] c"../lazysusanxyz_\00"
@84 = private constant [14 x i8] c"../lazysusan_\00"
@85 = private constant [15 x i8] c"../modulusXYZ_\00"
@86 = private constant [11 x i8] c"../oscope_\00"
@87 = private constant [16 x i8] c"../popcorn2xyz_\00"
@88 = private constant [14 x i8] c"../popcorn2c_\00"
@89 = private constant [18 x i8] c"../separationxyz_\00"
@90 = private constant [24 x i8] c"../separationinsidexyz_\00"
@91 = private constant [13 x i8] c"../splitxyz_\00"
@92 = private constant [14 x i8] c"../splitsxyz_\00"
@93 = private constant [12 x i8] c"../stripes_\00"
@94 = private constant [10 x i8] c"../wedge_\00"
@95 = private constant [15 x i8] c"../wedgejulia_\00"
@96 = private constant [13 x i8] c"../wedgesph_\00"
@97 = private constant [10 x i8] c"../whorl_\00"
@98 = private constant [19 x i8] c"../waves2scalexyz_\00"
@99 = private constant [18 x i8] c"../waves2freqxyz_\00"
@100 = private constant [10 x i8] c"../auger_\00"
@101 = private constant [15 x i8] c"../fluxspread_\00"
@102 = private constant [13 x i8] c"../mobiusre_\00"
@103 = private constant [13 x i8] c"../mobiusim_\00"
@104 = private constant [19 x i8] c"../curvexyzlenght_\00"
@105 = private constant [16 x i8] c"../curvexyzamp_\00"
@106 = private constant [10 x i8] c"../persp_\00"
@107 = private constant [11 x i8] c"../bwraps_\00"
@108 = private constant [16 x i8] c"../bwrapstwist_\00"
@109 = private constant [18 x i8] c"../polynomialpow_\00"
@110 = private constant [17 x i8] c"../polynomiallc_\00"
@111 = private constant [17 x i8] c"../polynomialsc_\00"
@112 = private constant [0 x <3 x double>] zeroinitializer
@113 = private constant [0 x <4 x double>] zeroinitializer
@114 = private constant [8 x i8] c"curlc_2\00"
@115 = private constant [7 x i8] c"ngon_2\00"
@116 = private constant [7 x i8] c"pdjw_2\00"
@117 = private constant [7 x i8] c"blob_2\00"
@118 = private constant [9 x i8] c"julian_2\00"
@119 = private constant [13 x i8] c"juliascope_2\00"
@120 = private constant [7 x i8] c"fan2_2\00"
@121 = private constant [12 x i8] c"rings2val_2\00"
@122 = private constant [13 x i8] c"rectangles_2\00"
@123 = private constant [13 x i8] c"radialblur_2\00"
@124 = private constant [6 x i8] c"pie_2\00"
@125 = private constant [8 x i8] c"disc2_2\00"
@126 = private constant [13 x i8] c"supershape_2\00"
@127 = private constant [14 x i8] c"supershapen_2\00"
@128 = private constant [9 x i8] c"flower_2\00"
@129 = private constant [8 x i8] c"conic_2\00"
@130 = private constant [11 x i8] c"parabola_2\00"
@131 = private constant [10 x i8] c"bent2xy_2\00"
@132 = private constant [15 x i8] c"bipolarshift_2\00"
@133 = private constant [11 x i8] c"cellsize_2\00"
@134 = private constant [7 x i8] c"cpow_2\00"
@135 = private constant [13 x i8] c"escherbeta_2\00"
@136 = private constant [12 x i8] c"lazysusan_2\00"
@137 = private constant [15 x i8] c"lazysusanxyz_2\00"
@138 = private constant [13 x i8] c"modulusXYZ_2\00"
@139 = private constant [9 x i8] c"oscope_2\00"
@140 = private constant [12 x i8] c"popcorn2c_2\00"
@141 = private constant [14 x i8] c"popcorn2xyz_2\00"
@142 = private constant [16 x i8] c"separationxyz_2\00"
@143 = private constant [22 x i8] c"separationinsidexyz_2\00"
@144 = private constant [11 x i8] c"splitxyz_2\00"
@145 = private constant [12 x i8] c"splitsxyz_2\00"
@146 = private constant [10 x i8] c"stripes_2\00"
@147 = private constant [8 x i8] c"wedge_2\00"
@148 = private constant [13 x i8] c"wedgejulia_2\00"
@149 = private constant [11 x i8] c"wedgesph_2\00"
@150 = private constant [8 x i8] c"whorl_2\00"
@151 = private constant [17 x i8] c"waves2scalexyz_2\00"
@152 = private constant [16 x i8] c"waves2freqxyz_2\00"
@153 = private constant [8 x i8] c"auger_2\00"
@154 = private constant [13 x i8] c"fluxspread_2\00"
@155 = private constant [11 x i8] c"mobiusre_2\00"
@156 = private constant [11 x i8] c"mobiusim_2\00"
@157 = private constant [17 x i8] c"curvexyzlenght_2\00"
@158 = private constant [14 x i8] c"curvexyzamp_2\00"
@159 = private constant [8 x i8] c"persp_2\00"
@160 = private constant [9 x i8] c"bwraps_2\00"
@161 = private constant [14 x i8] c"bwrapstwist_2\00"
@162 = private constant [16 x i8] c"polynomialpow_2\00"
@163 = private constant [15 x i8] c"polynomiallc_2\00"
@164 = private constant [15 x i8] c"polynomialsc_2\00"
@165 = private constant [0 x i8*] zeroinitializer
@166 = private constant [5 x i8] c"../_\00"
@167 = private constant [7 x i8] c"../_p1\00"
@168 = private constant [7 x i8] c"mb_mod\00"
@169 = private constant [4 x i8] c"set\00"
@ptnum = external global i64
@pscale = external global double
@clr = external global double
@Alpha = external global double
@P = external global <3 x double>
@170 = private constant [6 x i8] c"ptnum\00"
@171 = private constant [7 x i8] c"pscale\00"
@172 = private constant [4 x i8] c"clr\00"
@173 = private constant [6 x i8] c"Alpha\00"
@174 = private constant [2 x i8] c"P\00"

; Function Attrs: alwaysinline nounwind
define private i64 @"XAOS@II[FF"(i64* %idx, double** %XST, double* %res) #0 {
__llvm_entry:
  %res1 = load double, double* %res
  %return = fcmp olt double %res1, 1.500000e+01
  br i1 %return, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %return4 = fcmp oeq double %res1, 2.000000e+00
  br i1 %return4, label %true6, label %false7

false:                                            ; preds = %__llvm_entry
  %return1002 = fcmp olt double %res1, 2.100000e+01
  br i1 %return1002, label %true1004, label %end

end:                                              ; preds = %false1990, %false1901, %false1640, %false1802, %false1722, %false1622, %false1542, %false1451, %false1380, %false1289, %false1218, %false1136, %false1074, %false, %false987, %false753, %false857, %false735, %false622, %false518, %false423, %false337, %false260, %false192, %true155, %false133, %false83, %false42
  %idx2004 = load i64, i64* %idx
  br label %UnifiedReturnBlock

true6:                                            ; preds = %true
  %idx9 = load i64, i64* %idx
  %return10 = call i64 @"eq@III"(i64 %idx9, i64 0)
  %0 = icmp ne i64 %return10, 0
  %XST14 = load double*, double** %XST
  br i1 %0, label %true11, label %false12

false7:                                           ; preds = %true
  %return25 = fcmp oeq double %res1, 3.000000e+00
  br i1 %return25, label %true27, label %false28

true11:                                           ; preds = %true6
  %return15 = call double* @"slice@[F[FIIIIII"(double* %XST14, i64 1, i64 0, i64 1, i64 2, i64 0, i64 0)
  %return16 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return17 = call i64 @"sample_cdf@[FFI"(double* %return15, double %return16)
  store i64 %return17, i64* %idx
  br label %UnifiedReturnBlock

false12:                                          ; preds = %true6
  %return20 = call double* @"slice@[F[FIIIIII"(double* %XST14, i64 1, i64 2, i64 1, i64 4, i64 0, i64 0)
  %return21 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return22 = call i64 @"sample_cdf@[FFI"(double* %return20, double %return21)
  store i64 %return22, i64* %idx
  br label %UnifiedReturnBlock

true27:                                           ; preds = %false7
  %idx30 = load i64, i64* %idx
  %return31 = call i64 @"eq@III"(i64 %idx30, i64 0)
  %1 = icmp ne i64 %return31, 0
  br i1 %1, label %true32, label %false33

false28:                                          ; preds = %false7
  %return57 = fcmp oeq double %res1, 4.000000e+00
  br i1 %return57, label %true59, label %false60

true32:                                           ; preds = %true27
  %XST35 = load double*, double** %XST
  %return36 = call double* @"slice@[F[FIIIIII"(double* %XST35, i64 1, i64 0, i64 1, i64 3, i64 0, i64 0)
  %return37 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return38 = call i64 @"sample_cdf@[FFI"(double* %return36, double %return37)
  br label %UnifiedReturnBlock

false33:                                          ; preds = %true27
  %return40 = call i64 @"eq@III"(i64 %idx30, i64 1)
  %2 = icmp ne i64 %return40, 0
  br i1 %2, label %true41, label %false42

true41:                                           ; preds = %false33
  %XST44 = load double*, double** %XST
  %return45 = call double* @"slice@[F[FIIIIII"(double* %XST44, i64 1, i64 3, i64 1, i64 6, i64 0, i64 0)
  %return46 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return47 = call i64 @"sample_cdf@[FFI"(double* %return45, double %return46)
  br label %UnifiedReturnBlock

false42:                                          ; preds = %false33
  %return49 = call i64 @"eq@III"(i64 %idx30, i64 2)
  %3 = icmp ne i64 %return49, 0
  br i1 %3, label %true50, label %end

true50:                                           ; preds = %false42
  %XST52 = load double*, double** %XST
  %return53 = call double* @"slice@[F[FIIIIII"(double* %XST52, i64 1, i64 6, i64 1, i64 9, i64 0, i64 0)
  %return54 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return55 = call i64 @"sample_cdf@[FFI"(double* %return53, double %return54)
  br label %UnifiedReturnBlock

true59:                                           ; preds = %false28
  %idx62 = load i64, i64* %idx
  %return63 = call i64 @"eq@III"(i64 %idx62, i64 0)
  %4 = icmp ne i64 %return63, 0
  br i1 %4, label %true64, label %false65

false60:                                          ; preds = %false28
  %return98 = fcmp oeq double %res1, 5.000000e+00
  br i1 %return98, label %true100, label %false101

true64:                                           ; preds = %true59
  %XST67 = load double*, double** %XST
  %return68 = call double* @"slice@[F[FIIIIII"(double* %XST67, i64 1, i64 0, i64 1, i64 4, i64 0, i64 0)
  %return69 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return70 = call i64 @"sample_cdf@[FFI"(double* %return68, double %return69)
  br label %UnifiedReturnBlock

false65:                                          ; preds = %true59
  %return72 = call i64 @"eq@III"(i64 %idx62, i64 1)
  %5 = icmp ne i64 %return72, 0
  br i1 %5, label %true73, label %false74

true73:                                           ; preds = %false65
  %XST76 = load double*, double** %XST
  %return77 = call double* @"slice@[F[FIIIIII"(double* %XST76, i64 1, i64 4, i64 1, i64 8, i64 0, i64 0)
  %return78 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return79 = call i64 @"sample_cdf@[FFI"(double* %return77, double %return78)
  br label %UnifiedReturnBlock

false74:                                          ; preds = %false65
  %return81 = call i64 @"eq@III"(i64 %idx62, i64 2)
  %6 = icmp ne i64 %return81, 0
  br i1 %6, label %true82, label %false83

true82:                                           ; preds = %false74
  %XST85 = load double*, double** %XST
  %return86 = call double* @"slice@[F[FIIIIII"(double* %XST85, i64 1, i64 8, i64 1, i64 12, i64 0, i64 0)
  %return87 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return88 = call i64 @"sample_cdf@[FFI"(double* %return86, double %return87)
  br label %UnifiedReturnBlock

false83:                                          ; preds = %false74
  %return90 = call i64 @"eq@III"(i64 %idx62, i64 3)
  %7 = icmp ne i64 %return90, 0
  br i1 %7, label %true91, label %end

true91:                                           ; preds = %false83
  %XST93 = load double*, double** %XST
  %return94 = call double* @"slice@[F[FIIIIII"(double* %XST93, i64 1, i64 12, i64 1, i64 16, i64 0, i64 0)
  %return95 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return96 = call i64 @"sample_cdf@[FFI"(double* %return94, double %return95)
  br label %UnifiedReturnBlock

true100:                                          ; preds = %false60
  %idx103 = load i64, i64* %idx
  %return104 = call i64 @"eq@III"(i64 %idx103, i64 0)
  %8 = icmp ne i64 %return104, 0
  br i1 %8, label %true105, label %false106

false101:                                         ; preds = %false60
  %return148 = fcmp oeq double %res1, 6.000000e+00
  br i1 %return148, label %true150, label %false151

true105:                                          ; preds = %true100
  %XST108 = load double*, double** %XST
  %return109 = call double* @"slice@[F[FIIIIII"(double* %XST108, i64 1, i64 0, i64 1, i64 5, i64 0, i64 0)
  %return110 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return111 = call i64 @"sample_cdf@[FFI"(double* %return109, double %return110)
  br label %UnifiedReturnBlock

false106:                                         ; preds = %true100
  %return113 = call i64 @"eq@III"(i64 %idx103, i64 1)
  %9 = icmp ne i64 %return113, 0
  br i1 %9, label %true114, label %false115

true114:                                          ; preds = %false106
  %XST117 = load double*, double** %XST
  %return118 = call double* @"slice@[F[FIIIIII"(double* %XST117, i64 1, i64 5, i64 1, i64 10, i64 0, i64 0)
  %return119 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return120 = call i64 @"sample_cdf@[FFI"(double* %return118, double %return119)
  br label %UnifiedReturnBlock

false115:                                         ; preds = %false106
  %return122 = call i64 @"eq@III"(i64 %idx103, i64 2)
  %10 = icmp ne i64 %return122, 0
  br i1 %10, label %true123, label %false124

true123:                                          ; preds = %false115
  %XST126 = load double*, double** %XST
  %return127 = call double* @"slice@[F[FIIIIII"(double* %XST126, i64 1, i64 10, i64 1, i64 15, i64 0, i64 0)
  %return128 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return129 = call i64 @"sample_cdf@[FFI"(double* %return127, double %return128)
  br label %UnifiedReturnBlock

false124:                                         ; preds = %false115
  %return131 = call i64 @"eq@III"(i64 %idx103, i64 3)
  %11 = icmp ne i64 %return131, 0
  br i1 %11, label %true132, label %false133

true132:                                          ; preds = %false124
  %XST135 = load double*, double** %XST
  %return136 = call double* @"slice@[F[FIIIIII"(double* %XST135, i64 1, i64 15, i64 1, i64 20, i64 0, i64 0)
  %return137 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return138 = call i64 @"sample_cdf@[FFI"(double* %return136, double %return137)
  br label %UnifiedReturnBlock

false133:                                         ; preds = %false124
  %return140 = call i64 @"eq@III"(i64 %idx103, i64 4)
  %12 = icmp ne i64 %return140, 0
  br i1 %12, label %true141, label %end

true141:                                          ; preds = %false133
  %XST143 = load double*, double** %XST
  %return144 = call double* @"slice@[F[FIIIIII"(double* %XST143, i64 1, i64 20, i64 1, i64 25, i64 0, i64 0)
  %return145 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return146 = call i64 @"sample_cdf@[FFI"(double* %return144, double %return145)
  br label %UnifiedReturnBlock

true150:                                          ; preds = %false101
  %idx153 = load i64, i64* %idx
  %return154 = call i64 @"eq@III"(i64 %idx153, i64 0)
  %13 = icmp ne i64 %return154, 0
  br i1 %13, label %true155, label %false156

false151:                                         ; preds = %false101
  %return207 = fcmp oeq double %res1, 7.000000e+00
  br i1 %return207, label %true209, label %false210

true155:                                          ; preds = %true150
  %XST158 = load double*, double** %XST
  %return159 = call double* @"slice@[F[FIIIIII"(double* %XST158, i64 1, i64 0, i64 1, i64 6, i64 0, i64 0)
  %return160 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return161 = call i64 @"sample_cdf@[FFI"(double* %return159, double %return160)
  store i64 %return161, i64* %idx
  br label %end

false156:                                         ; preds = %true150
  %return163 = call i64 @"eq@III"(i64 %idx153, i64 1)
  %14 = icmp ne i64 %return163, 0
  br i1 %14, label %true164, label %false165

true164:                                          ; preds = %false156
  %XST167 = load double*, double** %XST
  %return168 = call double* @"slice@[F[FIIIIII"(double* %XST167, i64 1, i64 6, i64 1, i64 12, i64 0, i64 0)
  %return169 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return170 = call i64 @"sample_cdf@[FFI"(double* %return168, double %return169)
  br label %UnifiedReturnBlock

false165:                                         ; preds = %false156
  %return172 = call i64 @"eq@III"(i64 %idx153, i64 2)
  %15 = icmp ne i64 %return172, 0
  br i1 %15, label %true173, label %false174

true173:                                          ; preds = %false165
  %XST176 = load double*, double** %XST
  %return177 = call double* @"slice@[F[FIIIIII"(double* %XST176, i64 1, i64 12, i64 1, i64 18, i64 0, i64 0)
  %return178 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return179 = call i64 @"sample_cdf@[FFI"(double* %return177, double %return178)
  br label %UnifiedReturnBlock

false174:                                         ; preds = %false165
  %return181 = call i64 @"eq@III"(i64 %idx153, i64 3)
  %16 = icmp ne i64 %return181, 0
  br i1 %16, label %true182, label %false183

true182:                                          ; preds = %false174
  %XST185 = load double*, double** %XST
  %return186 = call double* @"slice@[F[FIIIIII"(double* %XST185, i64 1, i64 18, i64 1, i64 24, i64 0, i64 0)
  %return187 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return188 = call i64 @"sample_cdf@[FFI"(double* %return186, double %return187)
  br label %UnifiedReturnBlock

false183:                                         ; preds = %false174
  %return190 = call i64 @"eq@III"(i64 %idx153, i64 4)
  %17 = icmp ne i64 %return190, 0
  br i1 %17, label %true191, label %false192

true191:                                          ; preds = %false183
  %XST194 = load double*, double** %XST
  %return195 = call double* @"slice@[F[FIIIIII"(double* %XST194, i64 1, i64 24, i64 1, i64 30, i64 0, i64 0)
  %return196 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return197 = call i64 @"sample_cdf@[FFI"(double* %return195, double %return196)
  br label %UnifiedReturnBlock

false192:                                         ; preds = %false183
  %return199 = call i64 @"eq@III"(i64 %idx153, i64 5)
  %18 = icmp ne i64 %return199, 0
  br i1 %18, label %true200, label %end

true200:                                          ; preds = %false192
  %XST202 = load double*, double** %XST
  %return203 = call double* @"slice@[F[FIIIIII"(double* %XST202, i64 1, i64 30, i64 1, i64 36, i64 0, i64 0)
  %return204 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return205 = call i64 @"sample_cdf@[FFI"(double* %return203, double %return204)
  br label %UnifiedReturnBlock

true209:                                          ; preds = %false151
  %idx212 = load i64, i64* %idx
  %return213 = call i64 @"eq@III"(i64 %idx212, i64 0)
  %19 = icmp ne i64 %return213, 0
  br i1 %19, label %true214, label %false215

false210:                                         ; preds = %false151
  %return275 = fcmp oeq double %res1, 8.000000e+00
  br i1 %return275, label %true277, label %false278

true214:                                          ; preds = %true209
  %XST217 = load double*, double** %XST
  %return218 = call double* @"slice@[F[FIIIIII"(double* %XST217, i64 1, i64 0, i64 1, i64 7, i64 0, i64 0)
  %return219 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return220 = call i64 @"sample_cdf@[FFI"(double* %return218, double %return219)
  br label %UnifiedReturnBlock

false215:                                         ; preds = %true209
  %return222 = call i64 @"eq@III"(i64 %idx212, i64 1)
  %20 = icmp ne i64 %return222, 0
  br i1 %20, label %true223, label %false224

true223:                                          ; preds = %false215
  %XST226 = load double*, double** %XST
  %return227 = call double* @"slice@[F[FIIIIII"(double* %XST226, i64 1, i64 7, i64 1, i64 14, i64 0, i64 0)
  %return228 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return229 = call i64 @"sample_cdf@[FFI"(double* %return227, double %return228)
  br label %UnifiedReturnBlock

false224:                                         ; preds = %false215
  %return231 = call i64 @"eq@III"(i64 %idx212, i64 2)
  %21 = icmp ne i64 %return231, 0
  br i1 %21, label %true232, label %false233

true232:                                          ; preds = %false224
  %XST235 = load double*, double** %XST
  %return236 = call double* @"slice@[F[FIIIIII"(double* %XST235, i64 1, i64 14, i64 1, i64 21, i64 0, i64 0)
  %return237 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return238 = call i64 @"sample_cdf@[FFI"(double* %return236, double %return237)
  br label %UnifiedReturnBlock

false233:                                         ; preds = %false224
  %return240 = call i64 @"eq@III"(i64 %idx212, i64 3)
  %22 = icmp ne i64 %return240, 0
  br i1 %22, label %true241, label %false242

true241:                                          ; preds = %false233
  %XST244 = load double*, double** %XST
  %return245 = call double* @"slice@[F[FIIIIII"(double* %XST244, i64 1, i64 21, i64 1, i64 28, i64 0, i64 0)
  %return246 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return247 = call i64 @"sample_cdf@[FFI"(double* %return245, double %return246)
  br label %UnifiedReturnBlock

false242:                                         ; preds = %false233
  %return249 = call i64 @"eq@III"(i64 %idx212, i64 4)
  %23 = icmp ne i64 %return249, 0
  br i1 %23, label %true250, label %false251

true250:                                          ; preds = %false242
  %XST253 = load double*, double** %XST
  %return254 = call double* @"slice@[F[FIIIIII"(double* %XST253, i64 1, i64 28, i64 1, i64 35, i64 0, i64 0)
  %return255 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return256 = call i64 @"sample_cdf@[FFI"(double* %return254, double %return255)
  br label %UnifiedReturnBlock

false251:                                         ; preds = %false242
  %return258 = call i64 @"eq@III"(i64 %idx212, i64 5)
  %24 = icmp ne i64 %return258, 0
  br i1 %24, label %true259, label %false260

true259:                                          ; preds = %false251
  %XST262 = load double*, double** %XST
  %return263 = call double* @"slice@[F[FIIIIII"(double* %XST262, i64 1, i64 35, i64 1, i64 42, i64 0, i64 0)
  %return264 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return265 = call i64 @"sample_cdf@[FFI"(double* %return263, double %return264)
  br label %UnifiedReturnBlock

false260:                                         ; preds = %false251
  %return267 = call i64 @"eq@III"(i64 %idx212, i64 6)
  %25 = icmp ne i64 %return267, 0
  br i1 %25, label %true268, label %end

true268:                                          ; preds = %false260
  %XST270 = load double*, double** %XST
  %return271 = call double* @"slice@[F[FIIIIII"(double* %XST270, i64 1, i64 42, i64 1, i64 49, i64 0, i64 0)
  %return272 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return273 = call i64 @"sample_cdf@[FFI"(double* %return271, double %return272)
  br label %UnifiedReturnBlock

true277:                                          ; preds = %false210
  %idx280 = load i64, i64* %idx
  %return281 = call i64 @"eq@III"(i64 %idx280, i64 0)
  %26 = icmp ne i64 %return281, 0
  br i1 %26, label %true282, label %false283

false278:                                         ; preds = %false210
  %return352 = fcmp oeq double %res1, 9.000000e+00
  br i1 %return352, label %true354, label %false355

true282:                                          ; preds = %true277
  %XST285 = load double*, double** %XST
  %return286 = call double* @"slice@[F[FIIIIII"(double* %XST285, i64 1, i64 0, i64 1, i64 8, i64 0, i64 0)
  %return287 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return288 = call i64 @"sample_cdf@[FFI"(double* %return286, double %return287)
  br label %UnifiedReturnBlock

false283:                                         ; preds = %true277
  %return290 = call i64 @"eq@III"(i64 %idx280, i64 1)
  %27 = icmp ne i64 %return290, 0
  br i1 %27, label %true291, label %false292

true291:                                          ; preds = %false283
  %XST294 = load double*, double** %XST
  %return295 = call double* @"slice@[F[FIIIIII"(double* %XST294, i64 1, i64 8, i64 1, i64 16, i64 0, i64 0)
  %return296 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return297 = call i64 @"sample_cdf@[FFI"(double* %return295, double %return296)
  br label %UnifiedReturnBlock

false292:                                         ; preds = %false283
  %return299 = call i64 @"eq@III"(i64 %idx280, i64 2)
  %28 = icmp ne i64 %return299, 0
  br i1 %28, label %true300, label %false301

true300:                                          ; preds = %false292
  %XST303 = load double*, double** %XST
  %return304 = call double* @"slice@[F[FIIIIII"(double* %XST303, i64 1, i64 16, i64 1, i64 24, i64 0, i64 0)
  %return305 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return306 = call i64 @"sample_cdf@[FFI"(double* %return304, double %return305)
  br label %UnifiedReturnBlock

false301:                                         ; preds = %false292
  %return308 = call i64 @"eq@III"(i64 %idx280, i64 3)
  %29 = icmp ne i64 %return308, 0
  br i1 %29, label %true309, label %false310

true309:                                          ; preds = %false301
  %XST312 = load double*, double** %XST
  %return313 = call double* @"slice@[F[FIIIIII"(double* %XST312, i64 1, i64 24, i64 1, i64 32, i64 0, i64 0)
  %return314 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return315 = call i64 @"sample_cdf@[FFI"(double* %return313, double %return314)
  br label %UnifiedReturnBlock

false310:                                         ; preds = %false301
  %return317 = call i64 @"eq@III"(i64 %idx280, i64 4)
  %30 = icmp ne i64 %return317, 0
  br i1 %30, label %true318, label %false319

true318:                                          ; preds = %false310
  %XST321 = load double*, double** %XST
  %return322 = call double* @"slice@[F[FIIIIII"(double* %XST321, i64 1, i64 32, i64 1, i64 40, i64 0, i64 0)
  %return323 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return324 = call i64 @"sample_cdf@[FFI"(double* %return322, double %return323)
  br label %UnifiedReturnBlock

false319:                                         ; preds = %false310
  %return326 = call i64 @"eq@III"(i64 %idx280, i64 5)
  %31 = icmp ne i64 %return326, 0
  br i1 %31, label %true327, label %false328

true327:                                          ; preds = %false319
  %XST330 = load double*, double** %XST
  %return331 = call double* @"slice@[F[FIIIIII"(double* %XST330, i64 1, i64 40, i64 1, i64 48, i64 0, i64 0)
  %return332 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return333 = call i64 @"sample_cdf@[FFI"(double* %return331, double %return332)
  br label %UnifiedReturnBlock

false328:                                         ; preds = %false319
  %return335 = call i64 @"eq@III"(i64 %idx280, i64 6)
  %32 = icmp ne i64 %return335, 0
  br i1 %32, label %true336, label %false337

true336:                                          ; preds = %false328
  %XST339 = load double*, double** %XST
  %return340 = call double* @"slice@[F[FIIIIII"(double* %XST339, i64 1, i64 48, i64 1, i64 56, i64 0, i64 0)
  %return341 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return342 = call i64 @"sample_cdf@[FFI"(double* %return340, double %return341)
  br label %UnifiedReturnBlock

false337:                                         ; preds = %false328
  %return344 = call i64 @"eq@III"(i64 %idx280, i64 7)
  %33 = icmp ne i64 %return344, 0
  br i1 %33, label %true345, label %end

true345:                                          ; preds = %false337
  %XST347 = load double*, double** %XST
  %return348 = call double* @"slice@[F[FIIIIII"(double* %XST347, i64 1, i64 56, i64 1, i64 64, i64 0, i64 0)
  %return349 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return350 = call i64 @"sample_cdf@[FFI"(double* %return348, double %return349)
  br label %UnifiedReturnBlock

true354:                                          ; preds = %false278
  %idx357 = load i64, i64* %idx
  %return358 = call i64 @"eq@III"(i64 %idx357, i64 0)
  %34 = icmp ne i64 %return358, 0
  br i1 %34, label %true359, label %false360

false355:                                         ; preds = %false278
  %return438 = fcmp oeq double %res1, 1.000000e+01
  br i1 %return438, label %true440, label %false441

true359:                                          ; preds = %true354
  %XST362 = load double*, double** %XST
  %return363 = call double* @"slice@[F[FIIIIII"(double* %XST362, i64 1, i64 0, i64 1, i64 9, i64 0, i64 0)
  %return364 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return365 = call i64 @"sample_cdf@[FFI"(double* %return363, double %return364)
  br label %UnifiedReturnBlock

false360:                                         ; preds = %true354
  %return367 = call i64 @"eq@III"(i64 %idx357, i64 1)
  %35 = icmp ne i64 %return367, 0
  br i1 %35, label %true368, label %false369

true368:                                          ; preds = %false360
  %XST371 = load double*, double** %XST
  %return372 = call double* @"slice@[F[FIIIIII"(double* %XST371, i64 1, i64 9, i64 1, i64 18, i64 0, i64 0)
  %return373 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return374 = call i64 @"sample_cdf@[FFI"(double* %return372, double %return373)
  br label %UnifiedReturnBlock

false369:                                         ; preds = %false360
  %return376 = call i64 @"eq@III"(i64 %idx357, i64 2)
  %36 = icmp ne i64 %return376, 0
  br i1 %36, label %true377, label %false378

true377:                                          ; preds = %false369
  %XST380 = load double*, double** %XST
  %return381 = call double* @"slice@[F[FIIIIII"(double* %XST380, i64 1, i64 18, i64 1, i64 27, i64 0, i64 0)
  %return382 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return383 = call i64 @"sample_cdf@[FFI"(double* %return381, double %return382)
  br label %UnifiedReturnBlock

false378:                                         ; preds = %false369
  %return385 = call i64 @"eq@III"(i64 %idx357, i64 3)
  %37 = icmp ne i64 %return385, 0
  br i1 %37, label %true386, label %false387

true386:                                          ; preds = %false378
  %XST389 = load double*, double** %XST
  %return390 = call double* @"slice@[F[FIIIIII"(double* %XST389, i64 1, i64 27, i64 1, i64 36, i64 0, i64 0)
  %return391 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return392 = call i64 @"sample_cdf@[FFI"(double* %return390, double %return391)
  br label %UnifiedReturnBlock

false387:                                         ; preds = %false378
  %return394 = call i64 @"eq@III"(i64 %idx357, i64 4)
  %38 = icmp ne i64 %return394, 0
  br i1 %38, label %true395, label %false396

true395:                                          ; preds = %false387
  %XST398 = load double*, double** %XST
  %return399 = call double* @"slice@[F[FIIIIII"(double* %XST398, i64 1, i64 36, i64 1, i64 45, i64 0, i64 0)
  %return400 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return401 = call i64 @"sample_cdf@[FFI"(double* %return399, double %return400)
  br label %UnifiedReturnBlock

false396:                                         ; preds = %false387
  %return403 = call i64 @"eq@III"(i64 %idx357, i64 5)
  %39 = icmp ne i64 %return403, 0
  br i1 %39, label %true404, label %false405

true404:                                          ; preds = %false396
  %XST407 = load double*, double** %XST
  %return408 = call double* @"slice@[F[FIIIIII"(double* %XST407, i64 1, i64 45, i64 1, i64 54, i64 0, i64 0)
  %return409 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return410 = call i64 @"sample_cdf@[FFI"(double* %return408, double %return409)
  br label %UnifiedReturnBlock

false405:                                         ; preds = %false396
  %return412 = call i64 @"eq@III"(i64 %idx357, i64 6)
  %40 = icmp ne i64 %return412, 0
  br i1 %40, label %true413, label %false414

true413:                                          ; preds = %false405
  %XST416 = load double*, double** %XST
  %return417 = call double* @"slice@[F[FIIIIII"(double* %XST416, i64 1, i64 54, i64 1, i64 63, i64 0, i64 0)
  %return418 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return419 = call i64 @"sample_cdf@[FFI"(double* %return417, double %return418)
  br label %UnifiedReturnBlock

false414:                                         ; preds = %false405
  %return421 = call i64 @"eq@III"(i64 %idx357, i64 7)
  %41 = icmp ne i64 %return421, 0
  br i1 %41, label %true422, label %false423

true422:                                          ; preds = %false414
  %XST425 = load double*, double** %XST
  %return426 = call double* @"slice@[F[FIIIIII"(double* %XST425, i64 1, i64 63, i64 1, i64 72, i64 0, i64 0)
  %return427 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return428 = call i64 @"sample_cdf@[FFI"(double* %return426, double %return427)
  br label %UnifiedReturnBlock

false423:                                         ; preds = %false414
  %return430 = call i64 @"eq@III"(i64 %idx357, i64 8)
  %42 = icmp ne i64 %return430, 0
  br i1 %42, label %true431, label %end

true431:                                          ; preds = %false423
  %XST433 = load double*, double** %XST
  %return434 = call double* @"slice@[F[FIIIIII"(double* %XST433, i64 1, i64 72, i64 1, i64 81, i64 0, i64 0)
  %return435 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return436 = call i64 @"sample_cdf@[FFI"(double* %return434, double %return435)
  br label %UnifiedReturnBlock

true440:                                          ; preds = %false355
  %idx443 = load i64, i64* %idx
  %return444 = call i64 @"eq@III"(i64 %idx443, i64 0)
  %43 = icmp ne i64 %return444, 0
  br i1 %43, label %true445, label %false446

false441:                                         ; preds = %false355
  %return533 = fcmp oeq double %res1, 1.100000e+01
  br i1 %return533, label %true535, label %false536

true445:                                          ; preds = %true440
  %XST448 = load double*, double** %XST
  %return449 = call double* @"slice@[F[FIIIIII"(double* %XST448, i64 1, i64 0, i64 1, i64 10, i64 0, i64 0)
  %return450 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return451 = call i64 @"sample_cdf@[FFI"(double* %return449, double %return450)
  br label %UnifiedReturnBlock

false446:                                         ; preds = %true440
  %return453 = call i64 @"eq@III"(i64 %idx443, i64 1)
  %44 = icmp ne i64 %return453, 0
  br i1 %44, label %true454, label %false455

true454:                                          ; preds = %false446
  %XST457 = load double*, double** %XST
  %return458 = call double* @"slice@[F[FIIIIII"(double* %XST457, i64 1, i64 10, i64 1, i64 20, i64 0, i64 0)
  %return459 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return460 = call i64 @"sample_cdf@[FFI"(double* %return458, double %return459)
  br label %UnifiedReturnBlock

false455:                                         ; preds = %false446
  %return462 = call i64 @"eq@III"(i64 %idx443, i64 2)
  %45 = icmp ne i64 %return462, 0
  br i1 %45, label %true463, label %false464

true463:                                          ; preds = %false455
  %XST466 = load double*, double** %XST
  %return467 = call double* @"slice@[F[FIIIIII"(double* %XST466, i64 1, i64 20, i64 1, i64 30, i64 0, i64 0)
  %return468 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return469 = call i64 @"sample_cdf@[FFI"(double* %return467, double %return468)
  br label %UnifiedReturnBlock

false464:                                         ; preds = %false455
  %return471 = call i64 @"eq@III"(i64 %idx443, i64 3)
  %46 = icmp ne i64 %return471, 0
  br i1 %46, label %true472, label %false473

true472:                                          ; preds = %false464
  %XST475 = load double*, double** %XST
  %return476 = call double* @"slice@[F[FIIIIII"(double* %XST475, i64 1, i64 30, i64 1, i64 40, i64 0, i64 0)
  %return477 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return478 = call i64 @"sample_cdf@[FFI"(double* %return476, double %return477)
  br label %UnifiedReturnBlock

false473:                                         ; preds = %false464
  %return480 = call i64 @"eq@III"(i64 %idx443, i64 4)
  %47 = icmp ne i64 %return480, 0
  br i1 %47, label %true481, label %false482

true481:                                          ; preds = %false473
  %XST484 = load double*, double** %XST
  %return485 = call double* @"slice@[F[FIIIIII"(double* %XST484, i64 1, i64 40, i64 1, i64 50, i64 0, i64 0)
  %return486 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return487 = call i64 @"sample_cdf@[FFI"(double* %return485, double %return486)
  br label %UnifiedReturnBlock

false482:                                         ; preds = %false473
  %return489 = call i64 @"eq@III"(i64 %idx443, i64 5)
  %48 = icmp ne i64 %return489, 0
  br i1 %48, label %true490, label %false491

true490:                                          ; preds = %false482
  %XST493 = load double*, double** %XST
  %return494 = call double* @"slice@[F[FIIIIII"(double* %XST493, i64 1, i64 50, i64 1, i64 60, i64 0, i64 0)
  %return495 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return496 = call i64 @"sample_cdf@[FFI"(double* %return494, double %return495)
  br label %UnifiedReturnBlock

false491:                                         ; preds = %false482
  %return498 = call i64 @"eq@III"(i64 %idx443, i64 6)
  %49 = icmp ne i64 %return498, 0
  br i1 %49, label %true499, label %false500

true499:                                          ; preds = %false491
  %XST502 = load double*, double** %XST
  %return503 = call double* @"slice@[F[FIIIIII"(double* %XST502, i64 1, i64 60, i64 1, i64 70, i64 0, i64 0)
  %return504 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return505 = call i64 @"sample_cdf@[FFI"(double* %return503, double %return504)
  br label %UnifiedReturnBlock

false500:                                         ; preds = %false491
  %return507 = call i64 @"eq@III"(i64 %idx443, i64 7)
  %50 = icmp ne i64 %return507, 0
  br i1 %50, label %true508, label %false509

true508:                                          ; preds = %false500
  %XST511 = load double*, double** %XST
  %return512 = call double* @"slice@[F[FIIIIII"(double* %XST511, i64 1, i64 70, i64 1, i64 80, i64 0, i64 0)
  %return513 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return514 = call i64 @"sample_cdf@[FFI"(double* %return512, double %return513)
  br label %UnifiedReturnBlock

false509:                                         ; preds = %false500
  %return516 = call i64 @"eq@III"(i64 %idx443, i64 8)
  %51 = icmp ne i64 %return516, 0
  br i1 %51, label %true517, label %false518

true517:                                          ; preds = %false509
  %XST520 = load double*, double** %XST
  %return521 = call double* @"slice@[F[FIIIIII"(double* %XST520, i64 1, i64 80, i64 1, i64 90, i64 0, i64 0)
  %return522 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return523 = call i64 @"sample_cdf@[FFI"(double* %return521, double %return522)
  br label %UnifiedReturnBlock

false518:                                         ; preds = %false509
  %return525 = call i64 @"eq@III"(i64 %idx443, i64 9)
  %52 = icmp ne i64 %return525, 0
  br i1 %52, label %true526, label %end

true526:                                          ; preds = %false518
  %XST528 = load double*, double** %XST
  %return529 = call double* @"slice@[F[FIIIIII"(double* %XST528, i64 1, i64 90, i64 1, i64 100, i64 0, i64 0)
  %return530 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return531 = call i64 @"sample_cdf@[FFI"(double* %return529, double %return530)
  br label %UnifiedReturnBlock

true535:                                          ; preds = %false441
  %idx538 = load i64, i64* %idx
  %return539 = call i64 @"eq@III"(i64 %idx538, i64 0)
  %53 = icmp ne i64 %return539, 0
  br i1 %53, label %true540, label %false541

false536:                                         ; preds = %false441
  %return637 = fcmp oeq double %res1, 1.200000e+01
  br i1 %return637, label %true639, label %false640

true540:                                          ; preds = %true535
  %XST543 = load double*, double** %XST
  %return544 = call double* @"slice@[F[FIIIIII"(double* %XST543, i64 1, i64 0, i64 1, i64 11, i64 0, i64 0)
  %return545 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return546 = call i64 @"sample_cdf@[FFI"(double* %return544, double %return545)
  br label %UnifiedReturnBlock

false541:                                         ; preds = %true535
  %return548 = call i64 @"eq@III"(i64 %idx538, i64 1)
  %54 = icmp ne i64 %return548, 0
  br i1 %54, label %true549, label %false550

true549:                                          ; preds = %false541
  %XST552 = load double*, double** %XST
  %return553 = call double* @"slice@[F[FIIIIII"(double* %XST552, i64 1, i64 11, i64 1, i64 22, i64 0, i64 0)
  %return554 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return555 = call i64 @"sample_cdf@[FFI"(double* %return553, double %return554)
  br label %UnifiedReturnBlock

false550:                                         ; preds = %false541
  %return557 = call i64 @"eq@III"(i64 %idx538, i64 2)
  %55 = icmp ne i64 %return557, 0
  br i1 %55, label %true558, label %false559

true558:                                          ; preds = %false550
  %XST561 = load double*, double** %XST
  %return562 = call double* @"slice@[F[FIIIIII"(double* %XST561, i64 1, i64 22, i64 1, i64 33, i64 0, i64 0)
  %return563 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return564 = call i64 @"sample_cdf@[FFI"(double* %return562, double %return563)
  br label %UnifiedReturnBlock

false559:                                         ; preds = %false550
  %return566 = call i64 @"eq@III"(i64 %idx538, i64 3)
  %56 = icmp ne i64 %return566, 0
  br i1 %56, label %true567, label %false568

true567:                                          ; preds = %false559
  %XST570 = load double*, double** %XST
  %return571 = call double* @"slice@[F[FIIIIII"(double* %XST570, i64 1, i64 33, i64 1, i64 44, i64 0, i64 0)
  %return572 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return573 = call i64 @"sample_cdf@[FFI"(double* %return571, double %return572)
  br label %UnifiedReturnBlock

false568:                                         ; preds = %false559
  %return575 = call i64 @"eq@III"(i64 %idx538, i64 4)
  %57 = icmp ne i64 %return575, 0
  br i1 %57, label %true576, label %false577

true576:                                          ; preds = %false568
  %XST579 = load double*, double** %XST
  %return580 = call double* @"slice@[F[FIIIIII"(double* %XST579, i64 1, i64 44, i64 1, i64 55, i64 0, i64 0)
  %return581 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return582 = call i64 @"sample_cdf@[FFI"(double* %return580, double %return581)
  br label %UnifiedReturnBlock

false577:                                         ; preds = %false568
  %return584 = call i64 @"eq@III"(i64 %idx538, i64 5)
  %58 = icmp ne i64 %return584, 0
  br i1 %58, label %true585, label %false586

true585:                                          ; preds = %false577
  %XST588 = load double*, double** %XST
  %return589 = call double* @"slice@[F[FIIIIII"(double* %XST588, i64 1, i64 55, i64 1, i64 66, i64 0, i64 0)
  %return590 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return591 = call i64 @"sample_cdf@[FFI"(double* %return589, double %return590)
  br label %UnifiedReturnBlock

false586:                                         ; preds = %false577
  %return593 = call i64 @"eq@III"(i64 %idx538, i64 6)
  %59 = icmp ne i64 %return593, 0
  br i1 %59, label %true594, label %false595

true594:                                          ; preds = %false586
  %XST597 = load double*, double** %XST
  %return598 = call double* @"slice@[F[FIIIIII"(double* %XST597, i64 1, i64 66, i64 1, i64 77, i64 0, i64 0)
  %return599 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return600 = call i64 @"sample_cdf@[FFI"(double* %return598, double %return599)
  br label %UnifiedReturnBlock

false595:                                         ; preds = %false586
  %return602 = call i64 @"eq@III"(i64 %idx538, i64 7)
  %60 = icmp ne i64 %return602, 0
  br i1 %60, label %true603, label %false604

true603:                                          ; preds = %false595
  %XST606 = load double*, double** %XST
  %return607 = call double* @"slice@[F[FIIIIII"(double* %XST606, i64 1, i64 77, i64 1, i64 88, i64 0, i64 0)
  %return608 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return609 = call i64 @"sample_cdf@[FFI"(double* %return607, double %return608)
  br label %UnifiedReturnBlock

false604:                                         ; preds = %false595
  %return611 = call i64 @"eq@III"(i64 %idx538, i64 8)
  %61 = icmp ne i64 %return611, 0
  br i1 %61, label %true612, label %false613

true612:                                          ; preds = %false604
  %XST615 = load double*, double** %XST
  %return616 = call double* @"slice@[F[FIIIIII"(double* %XST615, i64 1, i64 88, i64 1, i64 99, i64 0, i64 0)
  %return617 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return618 = call i64 @"sample_cdf@[FFI"(double* %return616, double %return617)
  br label %UnifiedReturnBlock

false613:                                         ; preds = %false604
  %return620 = call i64 @"eq@III"(i64 %idx538, i64 9)
  %62 = icmp ne i64 %return620, 0
  br i1 %62, label %true621, label %false622

true621:                                          ; preds = %false613
  %XST624 = load double*, double** %XST
  %return625 = call double* @"slice@[F[FIIIIII"(double* %XST624, i64 1, i64 99, i64 1, i64 110, i64 0, i64 0)
  %return626 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return627 = call i64 @"sample_cdf@[FFI"(double* %return625, double %return626)
  br label %UnifiedReturnBlock

false622:                                         ; preds = %false613
  %return629 = call i64 @"eq@III"(i64 %idx538, i64 10)
  %63 = icmp ne i64 %return629, 0
  br i1 %63, label %true630, label %end

true630:                                          ; preds = %false622
  %XST632 = load double*, double** %XST
  %return633 = call double* @"slice@[F[FIIIIII"(double* %XST632, i64 1, i64 110, i64 1, i64 121, i64 0, i64 0)
  %return634 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return635 = call i64 @"sample_cdf@[FFI"(double* %return633, double %return634)
  br label %UnifiedReturnBlock

true639:                                          ; preds = %false536
  %idx642 = load i64, i64* %idx
  %return643 = call i64 @"eq@III"(i64 %idx642, i64 0)
  %64 = icmp ne i64 %return643, 0
  br i1 %64, label %true644, label %false645

false640:                                         ; preds = %false536
  %return750 = fcmp oeq double %res1, 1.300000e+01
  br i1 %return750, label %true752, label %false753

true644:                                          ; preds = %true639
  %XST647 = load double*, double** %XST
  %return648 = call double* @"slice@[F[FIIIIII"(double* %XST647, i64 1, i64 0, i64 1, i64 12, i64 0, i64 0)
  %return649 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return650 = call i64 @"sample_cdf@[FFI"(double* %return648, double %return649)
  br label %UnifiedReturnBlock

false645:                                         ; preds = %true639
  %return652 = call i64 @"eq@III"(i64 %idx642, i64 1)
  %65 = icmp ne i64 %return652, 0
  br i1 %65, label %true653, label %false654

true653:                                          ; preds = %false645
  %XST656 = load double*, double** %XST
  %return657 = call double* @"slice@[F[FIIIIII"(double* %XST656, i64 1, i64 12, i64 1, i64 24, i64 0, i64 0)
  %return658 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return659 = call i64 @"sample_cdf@[FFI"(double* %return657, double %return658)
  br label %UnifiedReturnBlock

false654:                                         ; preds = %false645
  %return661 = call i64 @"eq@III"(i64 %idx642, i64 2)
  %66 = icmp ne i64 %return661, 0
  br i1 %66, label %true662, label %false663

true662:                                          ; preds = %false654
  %XST665 = load double*, double** %XST
  %return666 = call double* @"slice@[F[FIIIIII"(double* %XST665, i64 1, i64 24, i64 1, i64 36, i64 0, i64 0)
  %return667 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return668 = call i64 @"sample_cdf@[FFI"(double* %return666, double %return667)
  br label %UnifiedReturnBlock

false663:                                         ; preds = %false654
  %return670 = call i64 @"eq@III"(i64 %idx642, i64 3)
  %67 = icmp ne i64 %return670, 0
  br i1 %67, label %true671, label %false672

true671:                                          ; preds = %false663
  %XST674 = load double*, double** %XST
  %return675 = call double* @"slice@[F[FIIIIII"(double* %XST674, i64 1, i64 36, i64 1, i64 48, i64 0, i64 0)
  %return676 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return677 = call i64 @"sample_cdf@[FFI"(double* %return675, double %return676)
  br label %UnifiedReturnBlock

false672:                                         ; preds = %false663
  %return679 = call i64 @"eq@III"(i64 %idx642, i64 4)
  %68 = icmp ne i64 %return679, 0
  br i1 %68, label %true680, label %false681

true680:                                          ; preds = %false672
  %XST683 = load double*, double** %XST
  %return684 = call double* @"slice@[F[FIIIIII"(double* %XST683, i64 1, i64 48, i64 1, i64 60, i64 0, i64 0)
  %return685 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return686 = call i64 @"sample_cdf@[FFI"(double* %return684, double %return685)
  br label %UnifiedReturnBlock

false681:                                         ; preds = %false672
  %return688 = call i64 @"eq@III"(i64 %idx642, i64 5)
  %69 = icmp ne i64 %return688, 0
  br i1 %69, label %true689, label %false690

true689:                                          ; preds = %false681
  %XST692 = load double*, double** %XST
  %return693 = call double* @"slice@[F[FIIIIII"(double* %XST692, i64 1, i64 60, i64 1, i64 72, i64 0, i64 0)
  %return694 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return695 = call i64 @"sample_cdf@[FFI"(double* %return693, double %return694)
  br label %UnifiedReturnBlock

false690:                                         ; preds = %false681
  %return697 = call i64 @"eq@III"(i64 %idx642, i64 6)
  %70 = icmp ne i64 %return697, 0
  br i1 %70, label %true698, label %false699

true698:                                          ; preds = %false690
  %XST701 = load double*, double** %XST
  %return702 = call double* @"slice@[F[FIIIIII"(double* %XST701, i64 1, i64 72, i64 1, i64 84, i64 0, i64 0)
  %return703 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return704 = call i64 @"sample_cdf@[FFI"(double* %return702, double %return703)
  br label %UnifiedReturnBlock

false699:                                         ; preds = %false690
  %return706 = call i64 @"eq@III"(i64 %idx642, i64 7)
  %71 = icmp ne i64 %return706, 0
  br i1 %71, label %true707, label %false708

true707:                                          ; preds = %false699
  %XST710 = load double*, double** %XST
  %return711 = call double* @"slice@[F[FIIIIII"(double* %XST710, i64 1, i64 84, i64 1, i64 96, i64 0, i64 0)
  %return712 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return713 = call i64 @"sample_cdf@[FFI"(double* %return711, double %return712)
  br label %UnifiedReturnBlock

false708:                                         ; preds = %false699
  %return715 = call i64 @"eq@III"(i64 %idx642, i64 8)
  %72 = icmp ne i64 %return715, 0
  br i1 %72, label %true716, label %false717

true716:                                          ; preds = %false708
  %XST719 = load double*, double** %XST
  %return720 = call double* @"slice@[F[FIIIIII"(double* %XST719, i64 1, i64 96, i64 1, i64 108, i64 0, i64 0)
  %return721 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return722 = call i64 @"sample_cdf@[FFI"(double* %return720, double %return721)
  br label %UnifiedReturnBlock

false717:                                         ; preds = %false708
  %return724 = call i64 @"eq@III"(i64 %idx642, i64 9)
  %73 = icmp ne i64 %return724, 0
  br i1 %73, label %true725, label %false726

true725:                                          ; preds = %false717
  %XST728 = load double*, double** %XST
  %return729 = call double* @"slice@[F[FIIIIII"(double* %XST728, i64 1, i64 108, i64 1, i64 120, i64 0, i64 0)
  %return730 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return731 = call i64 @"sample_cdf@[FFI"(double* %return729, double %return730)
  br label %UnifiedReturnBlock

false726:                                         ; preds = %false717
  %return733 = call i64 @"eq@III"(i64 %idx642, i64 10)
  %74 = icmp ne i64 %return733, 0
  br i1 %74, label %true734, label %false735

true734:                                          ; preds = %false726
  %XST737 = load double*, double** %XST
  %return738 = call double* @"slice@[F[FIIIIII"(double* %XST737, i64 1, i64 120, i64 1, i64 132, i64 0, i64 0)
  %return739 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return740 = call i64 @"sample_cdf@[FFI"(double* %return738, double %return739)
  br label %UnifiedReturnBlock

false735:                                         ; preds = %false726
  %return742 = call i64 @"eq@III"(i64 %idx642, i64 11)
  %75 = icmp ne i64 %return742, 0
  br i1 %75, label %true743, label %end

true743:                                          ; preds = %false735
  %XST745 = load double*, double** %XST
  %return746 = call double* @"slice@[F[FIIIIII"(double* %XST745, i64 1, i64 132, i64 1, i64 144, i64 0, i64 0)
  %return747 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return748 = call i64 @"sample_cdf@[FFI"(double* %return746, double %return747)
  br label %UnifiedReturnBlock

true752:                                          ; preds = %false640
  %idx755 = load i64, i64* %idx
  %return756 = call i64 @"eq@III"(i64 %idx755, i64 0)
  %76 = icmp ne i64 %return756, 0
  br i1 %76, label %true757, label %false758

false753:                                         ; preds = %false640
  %return872 = fcmp oeq double %res1, 1.400000e+01
  br i1 %return872, label %true874, label %end

true757:                                          ; preds = %true752
  %XST760 = load double*, double** %XST
  %return761 = call double* @"slice@[F[FIIIIII"(double* %XST760, i64 1, i64 0, i64 1, i64 13, i64 0, i64 0)
  %return762 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return763 = call i64 @"sample_cdf@[FFI"(double* %return761, double %return762)
  br label %UnifiedReturnBlock

false758:                                         ; preds = %true752
  %return765 = call i64 @"eq@III"(i64 %idx755, i64 1)
  %77 = icmp ne i64 %return765, 0
  br i1 %77, label %true766, label %false767

true766:                                          ; preds = %false758
  %XST769 = load double*, double** %XST
  %return770 = call double* @"slice@[F[FIIIIII"(double* %XST769, i64 1, i64 13, i64 1, i64 26, i64 0, i64 0)
  %return771 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return772 = call i64 @"sample_cdf@[FFI"(double* %return770, double %return771)
  br label %UnifiedReturnBlock

false767:                                         ; preds = %false758
  %return774 = call i64 @"eq@III"(i64 %idx755, i64 2)
  %78 = icmp ne i64 %return774, 0
  br i1 %78, label %true775, label %false776

true775:                                          ; preds = %false767
  %XST778 = load double*, double** %XST
  %return779 = call double* @"slice@[F[FIIIIII"(double* %XST778, i64 1, i64 26, i64 1, i64 39, i64 0, i64 0)
  %return780 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return781 = call i64 @"sample_cdf@[FFI"(double* %return779, double %return780)
  br label %UnifiedReturnBlock

false776:                                         ; preds = %false767
  %return783 = call i64 @"eq@III"(i64 %idx755, i64 3)
  %79 = icmp ne i64 %return783, 0
  br i1 %79, label %true784, label %false785

true784:                                          ; preds = %false776
  %XST787 = load double*, double** %XST
  %return788 = call double* @"slice@[F[FIIIIII"(double* %XST787, i64 1, i64 39, i64 1, i64 52, i64 0, i64 0)
  %return789 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return790 = call i64 @"sample_cdf@[FFI"(double* %return788, double %return789)
  br label %UnifiedReturnBlock

false785:                                         ; preds = %false776
  %return792 = call i64 @"eq@III"(i64 %idx755, i64 4)
  %80 = icmp ne i64 %return792, 0
  br i1 %80, label %true793, label %false794

true793:                                          ; preds = %false785
  %XST796 = load double*, double** %XST
  %return797 = call double* @"slice@[F[FIIIIII"(double* %XST796, i64 1, i64 52, i64 1, i64 65, i64 0, i64 0)
  %return798 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return799 = call i64 @"sample_cdf@[FFI"(double* %return797, double %return798)
  br label %UnifiedReturnBlock

false794:                                         ; preds = %false785
  %return801 = call i64 @"eq@III"(i64 %idx755, i64 5)
  %81 = icmp ne i64 %return801, 0
  br i1 %81, label %true802, label %false803

true802:                                          ; preds = %false794
  %XST805 = load double*, double** %XST
  %return806 = call double* @"slice@[F[FIIIIII"(double* %XST805, i64 1, i64 65, i64 1, i64 78, i64 0, i64 0)
  %return807 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return808 = call i64 @"sample_cdf@[FFI"(double* %return806, double %return807)
  br label %UnifiedReturnBlock

false803:                                         ; preds = %false794
  %return810 = call i64 @"eq@III"(i64 %idx755, i64 6)
  %82 = icmp ne i64 %return810, 0
  br i1 %82, label %true811, label %false812

true811:                                          ; preds = %false803
  %XST814 = load double*, double** %XST
  %return815 = call double* @"slice@[F[FIIIIII"(double* %XST814, i64 1, i64 78, i64 1, i64 91, i64 0, i64 0)
  %return816 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return817 = call i64 @"sample_cdf@[FFI"(double* %return815, double %return816)
  br label %UnifiedReturnBlock

false812:                                         ; preds = %false803
  %return819 = call i64 @"eq@III"(i64 %idx755, i64 7)
  %83 = icmp ne i64 %return819, 0
  br i1 %83, label %true820, label %false821

true820:                                          ; preds = %false812
  %XST823 = load double*, double** %XST
  %return824 = call double* @"slice@[F[FIIIIII"(double* %XST823, i64 1, i64 91, i64 1, i64 104, i64 0, i64 0)
  %return825 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return826 = call i64 @"sample_cdf@[FFI"(double* %return824, double %return825)
  br label %UnifiedReturnBlock

false821:                                         ; preds = %false812
  %return828 = call i64 @"eq@III"(i64 %idx755, i64 8)
  %84 = icmp ne i64 %return828, 0
  br i1 %84, label %true829, label %false830

true829:                                          ; preds = %false821
  %XST832 = load double*, double** %XST
  %return833 = call double* @"slice@[F[FIIIIII"(double* %XST832, i64 1, i64 104, i64 1, i64 117, i64 0, i64 0)
  %return834 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return835 = call i64 @"sample_cdf@[FFI"(double* %return833, double %return834)
  br label %UnifiedReturnBlock

false830:                                         ; preds = %false821
  %return837 = call i64 @"eq@III"(i64 %idx755, i64 9)
  %85 = icmp ne i64 %return837, 0
  br i1 %85, label %true838, label %false839

true838:                                          ; preds = %false830
  %XST841 = load double*, double** %XST
  %return842 = call double* @"slice@[F[FIIIIII"(double* %XST841, i64 1, i64 117, i64 1, i64 130, i64 0, i64 0)
  %return843 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return844 = call i64 @"sample_cdf@[FFI"(double* %return842, double %return843)
  br label %UnifiedReturnBlock

false839:                                         ; preds = %false830
  %return846 = call i64 @"eq@III"(i64 %idx755, i64 10)
  %86 = icmp ne i64 %return846, 0
  br i1 %86, label %true847, label %false848

true847:                                          ; preds = %false839
  %XST850 = load double*, double** %XST
  %return851 = call double* @"slice@[F[FIIIIII"(double* %XST850, i64 1, i64 130, i64 1, i64 143, i64 0, i64 0)
  %return852 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return853 = call i64 @"sample_cdf@[FFI"(double* %return851, double %return852)
  br label %UnifiedReturnBlock

false848:                                         ; preds = %false839
  %return855 = call i64 @"eq@III"(i64 %idx755, i64 11)
  %87 = icmp ne i64 %return855, 0
  br i1 %87, label %true856, label %false857

true856:                                          ; preds = %false848
  %XST859 = load double*, double** %XST
  %return860 = call double* @"slice@[F[FIIIIII"(double* %XST859, i64 1, i64 143, i64 1, i64 156, i64 0, i64 0)
  %return861 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return862 = call i64 @"sample_cdf@[FFI"(double* %return860, double %return861)
  br label %UnifiedReturnBlock

false857:                                         ; preds = %false848
  %return864 = call i64 @"eq@III"(i64 %idx755, i64 12)
  %88 = icmp ne i64 %return864, 0
  br i1 %88, label %true865, label %end

true865:                                          ; preds = %false857
  %XST867 = load double*, double** %XST
  %return868 = call double* @"slice@[F[FIIIIII"(double* %XST867, i64 1, i64 156, i64 1, i64 169, i64 0, i64 0)
  %return869 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return870 = call i64 @"sample_cdf@[FFI"(double* %return868, double %return869)
  br label %UnifiedReturnBlock

true874:                                          ; preds = %false753
  %idx876 = load i64, i64* %idx
  %return877 = call i64 @"eq@III"(i64 %idx876, i64 0)
  %89 = icmp ne i64 %return877, 0
  br i1 %89, label %true878, label %false879

true878:                                          ; preds = %true874
  %XST881 = load double*, double** %XST
  %return882 = call double* @"slice@[F[FIIIIII"(double* %XST881, i64 1, i64 0, i64 1, i64 14, i64 0, i64 0)
  %return883 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return884 = call i64 @"sample_cdf@[FFI"(double* %return882, double %return883)
  br label %UnifiedReturnBlock

false879:                                         ; preds = %true874
  %return886 = call i64 @"eq@III"(i64 %idx876, i64 1)
  %90 = icmp ne i64 %return886, 0
  br i1 %90, label %true887, label %false888

true887:                                          ; preds = %false879
  %XST890 = load double*, double** %XST
  %return891 = call double* @"slice@[F[FIIIIII"(double* %XST890, i64 1, i64 14, i64 1, i64 28, i64 0, i64 0)
  %return892 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return893 = call i64 @"sample_cdf@[FFI"(double* %return891, double %return892)
  br label %UnifiedReturnBlock

false888:                                         ; preds = %false879
  %return895 = call i64 @"eq@III"(i64 %idx876, i64 2)
  %91 = icmp ne i64 %return895, 0
  br i1 %91, label %true896, label %false897

true896:                                          ; preds = %false888
  %XST899 = load double*, double** %XST
  %return900 = call double* @"slice@[F[FIIIIII"(double* %XST899, i64 1, i64 28, i64 1, i64 42, i64 0, i64 0)
  %return901 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return902 = call i64 @"sample_cdf@[FFI"(double* %return900, double %return901)
  br label %UnifiedReturnBlock

false897:                                         ; preds = %false888
  %return904 = call i64 @"eq@III"(i64 %idx876, i64 3)
  %92 = icmp ne i64 %return904, 0
  br i1 %92, label %true905, label %false906

true905:                                          ; preds = %false897
  %XST908 = load double*, double** %XST
  %return909 = call double* @"slice@[F[FIIIIII"(double* %XST908, i64 1, i64 42, i64 1, i64 56, i64 0, i64 0)
  %return910 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return911 = call i64 @"sample_cdf@[FFI"(double* %return909, double %return910)
  br label %UnifiedReturnBlock

false906:                                         ; preds = %false897
  %return913 = call i64 @"eq@III"(i64 %idx876, i64 4)
  %93 = icmp ne i64 %return913, 0
  br i1 %93, label %true914, label %false915

true914:                                          ; preds = %false906
  %XST917 = load double*, double** %XST
  %return918 = call double* @"slice@[F[FIIIIII"(double* %XST917, i64 1, i64 56, i64 1, i64 70, i64 0, i64 0)
  %return919 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return920 = call i64 @"sample_cdf@[FFI"(double* %return918, double %return919)
  br label %UnifiedReturnBlock

false915:                                         ; preds = %false906
  %return922 = call i64 @"eq@III"(i64 %idx876, i64 5)
  %94 = icmp ne i64 %return922, 0
  br i1 %94, label %true923, label %false924

true923:                                          ; preds = %false915
  %XST926 = load double*, double** %XST
  %return927 = call double* @"slice@[F[FIIIIII"(double* %XST926, i64 1, i64 70, i64 1, i64 84, i64 0, i64 0)
  %return928 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return929 = call i64 @"sample_cdf@[FFI"(double* %return927, double %return928)
  br label %UnifiedReturnBlock

false924:                                         ; preds = %false915
  %return931 = call i64 @"eq@III"(i64 %idx876, i64 6)
  %95 = icmp ne i64 %return931, 0
  br i1 %95, label %true932, label %false933

true932:                                          ; preds = %false924
  %XST935 = load double*, double** %XST
  %return936 = call double* @"slice@[F[FIIIIII"(double* %XST935, i64 1, i64 84, i64 1, i64 98, i64 0, i64 0)
  %return937 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return938 = call i64 @"sample_cdf@[FFI"(double* %return936, double %return937)
  br label %UnifiedReturnBlock

false933:                                         ; preds = %false924
  %return940 = call i64 @"eq@III"(i64 %idx876, i64 7)
  %96 = icmp ne i64 %return940, 0
  br i1 %96, label %true941, label %false942

true941:                                          ; preds = %false933
  %XST944 = load double*, double** %XST
  %return945 = call double* @"slice@[F[FIIIIII"(double* %XST944, i64 1, i64 98, i64 1, i64 112, i64 0, i64 0)
  %return946 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return947 = call i64 @"sample_cdf@[FFI"(double* %return945, double %return946)
  br label %UnifiedReturnBlock

false942:                                         ; preds = %false933
  %return949 = call i64 @"eq@III"(i64 %idx876, i64 8)
  %97 = icmp ne i64 %return949, 0
  br i1 %97, label %true950, label %false951

true950:                                          ; preds = %false942
  %XST953 = load double*, double** %XST
  %return954 = call double* @"slice@[F[FIIIIII"(double* %XST953, i64 1, i64 112, i64 1, i64 126, i64 0, i64 0)
  %return955 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return956 = call i64 @"sample_cdf@[FFI"(double* %return954, double %return955)
  br label %UnifiedReturnBlock

false951:                                         ; preds = %false942
  %return958 = call i64 @"eq@III"(i64 %idx876, i64 9)
  %98 = icmp ne i64 %return958, 0
  br i1 %98, label %true959, label %false960

true959:                                          ; preds = %false951
  %XST962 = load double*, double** %XST
  %return963 = call double* @"slice@[F[FIIIIII"(double* %XST962, i64 1, i64 126, i64 1, i64 140, i64 0, i64 0)
  %return964 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return965 = call i64 @"sample_cdf@[FFI"(double* %return963, double %return964)
  br label %UnifiedReturnBlock

false960:                                         ; preds = %false951
  %return967 = call i64 @"eq@III"(i64 %idx876, i64 10)
  %99 = icmp ne i64 %return967, 0
  br i1 %99, label %true968, label %false969

true968:                                          ; preds = %false960
  %XST971 = load double*, double** %XST
  %return972 = call double* @"slice@[F[FIIIIII"(double* %XST971, i64 1, i64 140, i64 1, i64 154, i64 0, i64 0)
  %return973 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return974 = call i64 @"sample_cdf@[FFI"(double* %return972, double %return973)
  br label %UnifiedReturnBlock

false969:                                         ; preds = %false960
  %return976 = call i64 @"eq@III"(i64 %idx876, i64 11)
  %100 = icmp ne i64 %return976, 0
  br i1 %100, label %true977, label %false978

true977:                                          ; preds = %false969
  %XST980 = load double*, double** %XST
  %return981 = call double* @"slice@[F[FIIIIII"(double* %XST980, i64 1, i64 154, i64 1, i64 168, i64 0, i64 0)
  %return982 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return983 = call i64 @"sample_cdf@[FFI"(double* %return981, double %return982)
  br label %UnifiedReturnBlock

false978:                                         ; preds = %false969
  %return985 = call i64 @"eq@III"(i64 %idx876, i64 12)
  %101 = icmp ne i64 %return985, 0
  br i1 %101, label %true986, label %false987

true986:                                          ; preds = %false978
  %XST989 = load double*, double** %XST
  %return990 = call double* @"slice@[F[FIIIIII"(double* %XST989, i64 1, i64 168, i64 1, i64 182, i64 0, i64 0)
  %return991 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return992 = call i64 @"sample_cdf@[FFI"(double* %return990, double %return991)
  br label %UnifiedReturnBlock

false987:                                         ; preds = %false978
  %return994 = call i64 @"eq@III"(i64 %idx876, i64 13)
  %102 = icmp ne i64 %return994, 0
  br i1 %102, label %true995, label %end

true995:                                          ; preds = %false987
  %XST997 = load double*, double** %XST
  %return998 = call double* @"slice@[F[FIIIIII"(double* %XST997, i64 1, i64 182, i64 1, i64 196, i64 0, i64 0)
  %return999 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1000 = call i64 @"sample_cdf@[FFI"(double* %return998, double %return999)
  br label %UnifiedReturnBlock

true1004:                                         ; preds = %false
  %return1007 = fcmp oeq double %res1, 1.500000e+01
  br i1 %return1007, label %true1009, label %false1010

true1009:                                         ; preds = %true1004
  %idx1012 = load i64, i64* %idx
  %return1013 = call i64 @"lt@III"(i64 %idx1012, i64 8)
  %103 = icmp ne i64 %return1013, 0
  br i1 %103, label %true1014, label %false1015

false1010:                                        ; preds = %true1004
  %return1151 = fcmp oeq double %res1, 1.600000e+01
  br i1 %return1151, label %true1153, label %false1154

true1014:                                         ; preds = %true1009
  %return1018 = call i64 @"eq@III"(i64 %idx1012, i64 0)
  %104 = icmp ne i64 %return1018, 0
  br i1 %104, label %true1019, label %false1020

false1015:                                        ; preds = %true1009
  %return1089 = call i64 @"eq@III"(i64 %idx1012, i64 8)
  %105 = icmp ne i64 %return1089, 0
  br i1 %105, label %true1090, label %false1091

true1019:                                         ; preds = %true1014
  %XST1022 = load double*, double** %XST
  %return1023 = call double* @"slice@[F[FIIIIII"(double* %XST1022, i64 1, i64 0, i64 1, i64 15, i64 0, i64 0)
  %return1024 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1025 = call i64 @"sample_cdf@[FFI"(double* %return1023, double %return1024)
  br label %UnifiedReturnBlock

false1020:                                        ; preds = %true1014
  %return1027 = call i64 @"eq@III"(i64 %idx1012, i64 1)
  %106 = icmp ne i64 %return1027, 0
  br i1 %106, label %true1028, label %false1029

true1028:                                         ; preds = %false1020
  %XST1031 = load double*, double** %XST
  %return1032 = call double* @"slice@[F[FIIIIII"(double* %XST1031, i64 1, i64 15, i64 1, i64 30, i64 0, i64 0)
  %return1033 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1034 = call i64 @"sample_cdf@[FFI"(double* %return1032, double %return1033)
  br label %UnifiedReturnBlock

false1029:                                        ; preds = %false1020
  %return1036 = call i64 @"eq@III"(i64 %idx1012, i64 2)
  %107 = icmp ne i64 %return1036, 0
  br i1 %107, label %true1037, label %false1038

true1037:                                         ; preds = %false1029
  %XST1040 = load double*, double** %XST
  %return1041 = call double* @"slice@[F[FIIIIII"(double* %XST1040, i64 1, i64 30, i64 1, i64 45, i64 0, i64 0)
  %return1042 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1043 = call i64 @"sample_cdf@[FFI"(double* %return1041, double %return1042)
  br label %UnifiedReturnBlock

false1038:                                        ; preds = %false1029
  %return1045 = call i64 @"eq@III"(i64 %idx1012, i64 3)
  %108 = icmp ne i64 %return1045, 0
  br i1 %108, label %true1046, label %false1047

true1046:                                         ; preds = %false1038
  %XST1049 = load double*, double** %XST
  %return1050 = call double* @"slice@[F[FIIIIII"(double* %XST1049, i64 1, i64 45, i64 1, i64 60, i64 0, i64 0)
  %return1051 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1052 = call i64 @"sample_cdf@[FFI"(double* %return1050, double %return1051)
  br label %UnifiedReturnBlock

false1047:                                        ; preds = %false1038
  %return1054 = call i64 @"eq@III"(i64 %idx1012, i64 4)
  %109 = icmp ne i64 %return1054, 0
  br i1 %109, label %true1055, label %false1056

true1055:                                         ; preds = %false1047
  %XST1058 = load double*, double** %XST
  %return1059 = call double* @"slice@[F[FIIIIII"(double* %XST1058, i64 1, i64 60, i64 1, i64 75, i64 0, i64 0)
  %return1060 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1061 = call i64 @"sample_cdf@[FFI"(double* %return1059, double %return1060)
  br label %UnifiedReturnBlock

false1056:                                        ; preds = %false1047
  %return1063 = call i64 @"eq@III"(i64 %idx1012, i64 5)
  %110 = icmp ne i64 %return1063, 0
  br i1 %110, label %true1064, label %false1065

true1064:                                         ; preds = %false1056
  %XST1067 = load double*, double** %XST
  %return1068 = call double* @"slice@[F[FIIIIII"(double* %XST1067, i64 1, i64 75, i64 1, i64 90, i64 0, i64 0)
  %return1069 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1070 = call i64 @"sample_cdf@[FFI"(double* %return1068, double %return1069)
  br label %UnifiedReturnBlock

false1065:                                        ; preds = %false1056
  %return1072 = call i64 @"eq@III"(i64 %idx1012, i64 6)
  %111 = icmp ne i64 %return1072, 0
  br i1 %111, label %true1073, label %false1074

true1073:                                         ; preds = %false1065
  %XST1076 = load double*, double** %XST
  %return1077 = call double* @"slice@[F[FIIIIII"(double* %XST1076, i64 1, i64 90, i64 1, i64 105, i64 0, i64 0)
  %return1078 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1079 = call i64 @"sample_cdf@[FFI"(double* %return1077, double %return1078)
  br label %UnifiedReturnBlock

false1074:                                        ; preds = %false1065
  %return1081 = call i64 @"eq@III"(i64 %idx1012, i64 7)
  %112 = icmp ne i64 %return1081, 0
  br i1 %112, label %true1082, label %end

true1082:                                         ; preds = %false1074
  %XST1084 = load double*, double** %XST
  %return1085 = call double* @"slice@[F[FIIIIII"(double* %XST1084, i64 1, i64 105, i64 1, i64 120, i64 0, i64 0)
  %return1086 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1087 = call i64 @"sample_cdf@[FFI"(double* %return1085, double %return1086)
  br label %UnifiedReturnBlock

true1090:                                         ; preds = %false1015
  %XST1093 = load double*, double** %XST
  %return1094 = call double* @"slice@[F[FIIIIII"(double* %XST1093, i64 1, i64 120, i64 1, i64 135, i64 0, i64 0)
  %return1095 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1096 = call i64 @"sample_cdf@[FFI"(double* %return1094, double %return1095)
  br label %UnifiedReturnBlock

false1091:                                        ; preds = %false1015
  %return1098 = call i64 @"eq@III"(i64 %idx1012, i64 9)
  %113 = icmp ne i64 %return1098, 0
  br i1 %113, label %true1099, label %false1100

true1099:                                         ; preds = %false1091
  %XST1102 = load double*, double** %XST
  %return1103 = call double* @"slice@[F[FIIIIII"(double* %XST1102, i64 1, i64 135, i64 1, i64 150, i64 0, i64 0)
  %return1104 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1105 = call i64 @"sample_cdf@[FFI"(double* %return1103, double %return1104)
  br label %UnifiedReturnBlock

false1100:                                        ; preds = %false1091
  %return1107 = call i64 @"eq@III"(i64 %idx1012, i64 10)
  %114 = icmp ne i64 %return1107, 0
  br i1 %114, label %true1108, label %false1109

true1108:                                         ; preds = %false1100
  %XST1111 = load double*, double** %XST
  %return1112 = call double* @"slice@[F[FIIIIII"(double* %XST1111, i64 1, i64 150, i64 1, i64 165, i64 0, i64 0)
  %return1113 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1114 = call i64 @"sample_cdf@[FFI"(double* %return1112, double %return1113)
  br label %UnifiedReturnBlock

false1109:                                        ; preds = %false1100
  %return1116 = call i64 @"eq@III"(i64 %idx1012, i64 11)
  %115 = icmp ne i64 %return1116, 0
  br i1 %115, label %true1117, label %false1118

true1117:                                         ; preds = %false1109
  %XST1120 = load double*, double** %XST
  %return1121 = call double* @"slice@[F[FIIIIII"(double* %XST1120, i64 1, i64 165, i64 1, i64 180, i64 0, i64 0)
  %return1122 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1123 = call i64 @"sample_cdf@[FFI"(double* %return1121, double %return1122)
  br label %UnifiedReturnBlock

false1118:                                        ; preds = %false1109
  %return1125 = call i64 @"eq@III"(i64 %idx1012, i64 12)
  %116 = icmp ne i64 %return1125, 0
  br i1 %116, label %true1126, label %false1127

true1126:                                         ; preds = %false1118
  %XST1129 = load double*, double** %XST
  %return1130 = call double* @"slice@[F[FIIIIII"(double* %XST1129, i64 1, i64 180, i64 1, i64 195, i64 0, i64 0)
  %return1131 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1132 = call i64 @"sample_cdf@[FFI"(double* %return1130, double %return1131)
  br label %UnifiedReturnBlock

false1127:                                        ; preds = %false1118
  %return1134 = call i64 @"eq@III"(i64 %idx1012, i64 13)
  %117 = icmp ne i64 %return1134, 0
  br i1 %117, label %true1135, label %false1136

true1135:                                         ; preds = %false1127
  %XST1138 = load double*, double** %XST
  %return1139 = call double* @"slice@[F[FIIIIII"(double* %XST1138, i64 1, i64 195, i64 1, i64 210, i64 0, i64 0)
  %return1140 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1141 = call i64 @"sample_cdf@[FFI"(double* %return1139, double %return1140)
  br label %UnifiedReturnBlock

false1136:                                        ; preds = %false1127
  %return1143 = call i64 @"eq@III"(i64 %idx1012, i64 14)
  %118 = icmp ne i64 %return1143, 0
  br i1 %118, label %true1144, label %end

true1144:                                         ; preds = %false1136
  %XST1146 = load double*, double** %XST
  %return1147 = call double* @"slice@[F[FIIIIII"(double* %XST1146, i64 1, i64 210, i64 1, i64 225, i64 0, i64 0)
  %return1148 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1149 = call i64 @"sample_cdf@[FFI"(double* %return1147, double %return1148)
  br label %UnifiedReturnBlock

true1153:                                         ; preds = %false1010
  %idx1156 = load i64, i64* %idx
  %return1157 = call i64 @"lt@III"(i64 %idx1156, i64 8)
  %119 = icmp ne i64 %return1157, 0
  br i1 %119, label %true1158, label %false1159

false1154:                                        ; preds = %false1010
  %return1304 = fcmp oeq double %res1, 1.700000e+01
  br i1 %return1304, label %true1306, label %false1307

true1158:                                         ; preds = %true1153
  %return1162 = call i64 @"eq@III"(i64 %idx1156, i64 0)
  %120 = icmp ne i64 %return1162, 0
  br i1 %120, label %true1163, label %false1164

false1159:                                        ; preds = %true1153
  %return1233 = call i64 @"eq@III"(i64 %idx1156, i64 8)
  %121 = icmp ne i64 %return1233, 0
  br i1 %121, label %true1234, label %false1235

true1163:                                         ; preds = %true1158
  %XST1166 = load double*, double** %XST
  %return1167 = call double* @"slice@[F[FIIIIII"(double* %XST1166, i64 1, i64 0, i64 1, i64 16, i64 0, i64 0)
  %return1168 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1169 = call i64 @"sample_cdf@[FFI"(double* %return1167, double %return1168)
  br label %UnifiedReturnBlock

false1164:                                        ; preds = %true1158
  %return1171 = call i64 @"eq@III"(i64 %idx1156, i64 1)
  %122 = icmp ne i64 %return1171, 0
  br i1 %122, label %true1172, label %false1173

true1172:                                         ; preds = %false1164
  %XST1175 = load double*, double** %XST
  %return1176 = call double* @"slice@[F[FIIIIII"(double* %XST1175, i64 1, i64 16, i64 1, i64 32, i64 0, i64 0)
  %return1177 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1178 = call i64 @"sample_cdf@[FFI"(double* %return1176, double %return1177)
  br label %UnifiedReturnBlock

false1173:                                        ; preds = %false1164
  %return1180 = call i64 @"eq@III"(i64 %idx1156, i64 2)
  %123 = icmp ne i64 %return1180, 0
  br i1 %123, label %true1181, label %false1182

true1181:                                         ; preds = %false1173
  %XST1184 = load double*, double** %XST
  %return1185 = call double* @"slice@[F[FIIIIII"(double* %XST1184, i64 1, i64 32, i64 1, i64 48, i64 0, i64 0)
  %return1186 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1187 = call i64 @"sample_cdf@[FFI"(double* %return1185, double %return1186)
  br label %UnifiedReturnBlock

false1182:                                        ; preds = %false1173
  %return1189 = call i64 @"eq@III"(i64 %idx1156, i64 3)
  %124 = icmp ne i64 %return1189, 0
  br i1 %124, label %true1190, label %false1191

true1190:                                         ; preds = %false1182
  %XST1193 = load double*, double** %XST
  %return1194 = call double* @"slice@[F[FIIIIII"(double* %XST1193, i64 1, i64 48, i64 1, i64 64, i64 0, i64 0)
  %return1195 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1196 = call i64 @"sample_cdf@[FFI"(double* %return1194, double %return1195)
  br label %UnifiedReturnBlock

false1191:                                        ; preds = %false1182
  %return1198 = call i64 @"eq@III"(i64 %idx1156, i64 4)
  %125 = icmp ne i64 %return1198, 0
  br i1 %125, label %true1199, label %false1200

true1199:                                         ; preds = %false1191
  %XST1202 = load double*, double** %XST
  %return1203 = call double* @"slice@[F[FIIIIII"(double* %XST1202, i64 1, i64 64, i64 1, i64 80, i64 0, i64 0)
  %return1204 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1205 = call i64 @"sample_cdf@[FFI"(double* %return1203, double %return1204)
  br label %UnifiedReturnBlock

false1200:                                        ; preds = %false1191
  %return1207 = call i64 @"eq@III"(i64 %idx1156, i64 5)
  %126 = icmp ne i64 %return1207, 0
  br i1 %126, label %true1208, label %false1209

true1208:                                         ; preds = %false1200
  %XST1211 = load double*, double** %XST
  %return1212 = call double* @"slice@[F[FIIIIII"(double* %XST1211, i64 1, i64 80, i64 1, i64 96, i64 0, i64 0)
  %return1213 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1214 = call i64 @"sample_cdf@[FFI"(double* %return1212, double %return1213)
  br label %UnifiedReturnBlock

false1209:                                        ; preds = %false1200
  %return1216 = call i64 @"eq@III"(i64 %idx1156, i64 6)
  %127 = icmp ne i64 %return1216, 0
  br i1 %127, label %true1217, label %false1218

true1217:                                         ; preds = %false1209
  %XST1220 = load double*, double** %XST
  %return1221 = call double* @"slice@[F[FIIIIII"(double* %XST1220, i64 1, i64 96, i64 1, i64 112, i64 0, i64 0)
  %return1222 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1223 = call i64 @"sample_cdf@[FFI"(double* %return1221, double %return1222)
  br label %UnifiedReturnBlock

false1218:                                        ; preds = %false1209
  %return1225 = call i64 @"eq@III"(i64 %idx1156, i64 7)
  %128 = icmp ne i64 %return1225, 0
  br i1 %128, label %true1226, label %end

true1226:                                         ; preds = %false1218
  %XST1228 = load double*, double** %XST
  %return1229 = call double* @"slice@[F[FIIIIII"(double* %XST1228, i64 1, i64 112, i64 1, i64 128, i64 0, i64 0)
  %return1230 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1231 = call i64 @"sample_cdf@[FFI"(double* %return1229, double %return1230)
  br label %UnifiedReturnBlock

true1234:                                         ; preds = %false1159
  %XST1237 = load double*, double** %XST
  %return1238 = call double* @"slice@[F[FIIIIII"(double* %XST1237, i64 1, i64 128, i64 1, i64 144, i64 0, i64 0)
  %return1239 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1240 = call i64 @"sample_cdf@[FFI"(double* %return1238, double %return1239)
  br label %UnifiedReturnBlock

false1235:                                        ; preds = %false1159
  %return1242 = call i64 @"eq@III"(i64 %idx1156, i64 9)
  %129 = icmp ne i64 %return1242, 0
  br i1 %129, label %true1243, label %false1244

true1243:                                         ; preds = %false1235
  %XST1246 = load double*, double** %XST
  %return1247 = call double* @"slice@[F[FIIIIII"(double* %XST1246, i64 1, i64 144, i64 1, i64 160, i64 0, i64 0)
  %return1248 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1249 = call i64 @"sample_cdf@[FFI"(double* %return1247, double %return1248)
  br label %UnifiedReturnBlock

false1244:                                        ; preds = %false1235
  %return1251 = call i64 @"eq@III"(i64 %idx1156, i64 10)
  %130 = icmp ne i64 %return1251, 0
  br i1 %130, label %true1252, label %false1253

true1252:                                         ; preds = %false1244
  %XST1255 = load double*, double** %XST
  %return1256 = call double* @"slice@[F[FIIIIII"(double* %XST1255, i64 1, i64 160, i64 1, i64 176, i64 0, i64 0)
  %return1257 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1258 = call i64 @"sample_cdf@[FFI"(double* %return1256, double %return1257)
  br label %UnifiedReturnBlock

false1253:                                        ; preds = %false1244
  %return1260 = call i64 @"eq@III"(i64 %idx1156, i64 11)
  %131 = icmp ne i64 %return1260, 0
  br i1 %131, label %true1261, label %false1262

true1261:                                         ; preds = %false1253
  %XST1264 = load double*, double** %XST
  %return1265 = call double* @"slice@[F[FIIIIII"(double* %XST1264, i64 1, i64 176, i64 1, i64 192, i64 0, i64 0)
  %return1266 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1267 = call i64 @"sample_cdf@[FFI"(double* %return1265, double %return1266)
  br label %UnifiedReturnBlock

false1262:                                        ; preds = %false1253
  %return1269 = call i64 @"eq@III"(i64 %idx1156, i64 12)
  %132 = icmp ne i64 %return1269, 0
  br i1 %132, label %true1270, label %false1271

true1270:                                         ; preds = %false1262
  %XST1273 = load double*, double** %XST
  %return1274 = call double* @"slice@[F[FIIIIII"(double* %XST1273, i64 1, i64 192, i64 1, i64 208, i64 0, i64 0)
  %return1275 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1276 = call i64 @"sample_cdf@[FFI"(double* %return1274, double %return1275)
  br label %UnifiedReturnBlock

false1271:                                        ; preds = %false1262
  %return1278 = call i64 @"eq@III"(i64 %idx1156, i64 13)
  %133 = icmp ne i64 %return1278, 0
  br i1 %133, label %true1279, label %false1280

true1279:                                         ; preds = %false1271
  %XST1282 = load double*, double** %XST
  %return1283 = call double* @"slice@[F[FIIIIII"(double* %XST1282, i64 1, i64 208, i64 1, i64 224, i64 0, i64 0)
  %return1284 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1285 = call i64 @"sample_cdf@[FFI"(double* %return1283, double %return1284)
  br label %UnifiedReturnBlock

false1280:                                        ; preds = %false1271
  %return1287 = call i64 @"eq@III"(i64 %idx1156, i64 14)
  %134 = icmp ne i64 %return1287, 0
  br i1 %134, label %true1288, label %false1289

true1288:                                         ; preds = %false1280
  %XST1291 = load double*, double** %XST
  %return1292 = call double* @"slice@[F[FIIIIII"(double* %XST1291, i64 1, i64 224, i64 1, i64 240, i64 0, i64 0)
  %return1293 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1294 = call i64 @"sample_cdf@[FFI"(double* %return1292, double %return1293)
  br label %UnifiedReturnBlock

false1289:                                        ; preds = %false1280
  %return1296 = call i64 @"eq@III"(i64 %idx1156, i64 15)
  %135 = icmp ne i64 %return1296, 0
  br i1 %135, label %true1297, label %end

true1297:                                         ; preds = %false1289
  %XST1299 = load double*, double** %XST
  %return1300 = call double* @"slice@[F[FIIIIII"(double* %XST1299, i64 1, i64 240, i64 1, i64 256, i64 0, i64 0)
  %return1301 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1302 = call i64 @"sample_cdf@[FFI"(double* %return1300, double %return1301)
  br label %UnifiedReturnBlock

true1306:                                         ; preds = %false1154
  %idx1309 = load i64, i64* %idx
  %return1310 = call i64 @"lt@III"(i64 %idx1309, i64 9)
  %136 = icmp ne i64 %return1310, 0
  br i1 %136, label %true1311, label %false1312

false1307:                                        ; preds = %false1154
  %return1466 = fcmp oeq double %res1, 1.800000e+01
  br i1 %return1466, label %true1468, label %false1469

true1311:                                         ; preds = %true1306
  %return1315 = call i64 @"eq@III"(i64 %idx1309, i64 0)
  %137 = icmp ne i64 %return1315, 0
  br i1 %137, label %true1316, label %false1317

false1312:                                        ; preds = %true1306
  %return1395 = call i64 @"eq@III"(i64 %idx1309, i64 9)
  %138 = icmp ne i64 %return1395, 0
  br i1 %138, label %true1396, label %false1397

true1316:                                         ; preds = %true1311
  %XST1319 = load double*, double** %XST
  %return1320 = call double* @"slice@[F[FIIIIII"(double* %XST1319, i64 1, i64 0, i64 1, i64 17, i64 0, i64 0)
  %return1321 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1322 = call i64 @"sample_cdf@[FFI"(double* %return1320, double %return1321)
  br label %UnifiedReturnBlock

false1317:                                        ; preds = %true1311
  %return1324 = call i64 @"eq@III"(i64 %idx1309, i64 1)
  %139 = icmp ne i64 %return1324, 0
  br i1 %139, label %true1325, label %false1326

true1325:                                         ; preds = %false1317
  %XST1328 = load double*, double** %XST
  %return1329 = call double* @"slice@[F[FIIIIII"(double* %XST1328, i64 1, i64 17, i64 1, i64 34, i64 0, i64 0)
  %return1330 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1331 = call i64 @"sample_cdf@[FFI"(double* %return1329, double %return1330)
  br label %UnifiedReturnBlock

false1326:                                        ; preds = %false1317
  %return1333 = call i64 @"eq@III"(i64 %idx1309, i64 2)
  %140 = icmp ne i64 %return1333, 0
  br i1 %140, label %true1334, label %false1335

true1334:                                         ; preds = %false1326
  %XST1337 = load double*, double** %XST
  %return1338 = call double* @"slice@[F[FIIIIII"(double* %XST1337, i64 1, i64 34, i64 1, i64 51, i64 0, i64 0)
  %return1339 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1340 = call i64 @"sample_cdf@[FFI"(double* %return1338, double %return1339)
  br label %UnifiedReturnBlock

false1335:                                        ; preds = %false1326
  %return1342 = call i64 @"eq@III"(i64 %idx1309, i64 3)
  %141 = icmp ne i64 %return1342, 0
  br i1 %141, label %true1343, label %false1344

true1343:                                         ; preds = %false1335
  %XST1346 = load double*, double** %XST
  %return1347 = call double* @"slice@[F[FIIIIII"(double* %XST1346, i64 1, i64 51, i64 1, i64 68, i64 0, i64 0)
  %return1348 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1349 = call i64 @"sample_cdf@[FFI"(double* %return1347, double %return1348)
  br label %UnifiedReturnBlock

false1344:                                        ; preds = %false1335
  %return1351 = call i64 @"eq@III"(i64 %idx1309, i64 4)
  %142 = icmp ne i64 %return1351, 0
  br i1 %142, label %true1352, label %false1353

true1352:                                         ; preds = %false1344
  %XST1355 = load double*, double** %XST
  %return1356 = call double* @"slice@[F[FIIIIII"(double* %XST1355, i64 1, i64 68, i64 1, i64 85, i64 0, i64 0)
  %return1357 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1358 = call i64 @"sample_cdf@[FFI"(double* %return1356, double %return1357)
  br label %UnifiedReturnBlock

false1353:                                        ; preds = %false1344
  %return1360 = call i64 @"eq@III"(i64 %idx1309, i64 5)
  %143 = icmp ne i64 %return1360, 0
  br i1 %143, label %true1361, label %false1362

true1361:                                         ; preds = %false1353
  %XST1364 = load double*, double** %XST
  %return1365 = call double* @"slice@[F[FIIIIII"(double* %XST1364, i64 1, i64 85, i64 1, i64 102, i64 0, i64 0)
  %return1366 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1367 = call i64 @"sample_cdf@[FFI"(double* %return1365, double %return1366)
  br label %UnifiedReturnBlock

false1362:                                        ; preds = %false1353
  %return1369 = call i64 @"eq@III"(i64 %idx1309, i64 6)
  %144 = icmp ne i64 %return1369, 0
  br i1 %144, label %true1370, label %false1371

true1370:                                         ; preds = %false1362
  %XST1373 = load double*, double** %XST
  %return1374 = call double* @"slice@[F[FIIIIII"(double* %XST1373, i64 1, i64 102, i64 1, i64 119, i64 0, i64 0)
  %return1375 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1376 = call i64 @"sample_cdf@[FFI"(double* %return1374, double %return1375)
  br label %UnifiedReturnBlock

false1371:                                        ; preds = %false1362
  %return1378 = call i64 @"eq@III"(i64 %idx1309, i64 7)
  %145 = icmp ne i64 %return1378, 0
  br i1 %145, label %true1379, label %false1380

true1379:                                         ; preds = %false1371
  %XST1382 = load double*, double** %XST
  %return1383 = call double* @"slice@[F[FIIIIII"(double* %XST1382, i64 1, i64 119, i64 1, i64 136, i64 0, i64 0)
  %return1384 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1385 = call i64 @"sample_cdf@[FFI"(double* %return1383, double %return1384)
  br label %UnifiedReturnBlock

false1380:                                        ; preds = %false1371
  %return1387 = call i64 @"eq@III"(i64 %idx1309, i64 8)
  %146 = icmp ne i64 %return1387, 0
  br i1 %146, label %true1388, label %end

true1388:                                         ; preds = %false1380
  %XST1390 = load double*, double** %XST
  %return1391 = call double* @"slice@[F[FIIIIII"(double* %XST1390, i64 1, i64 136, i64 1, i64 153, i64 0, i64 0)
  %return1392 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1393 = call i64 @"sample_cdf@[FFI"(double* %return1391, double %return1392)
  br label %UnifiedReturnBlock

true1396:                                         ; preds = %false1312
  %XST1399 = load double*, double** %XST
  %return1400 = call double* @"slice@[F[FIIIIII"(double* %XST1399, i64 1, i64 153, i64 1, i64 170, i64 0, i64 0)
  %return1401 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1402 = call i64 @"sample_cdf@[FFI"(double* %return1400, double %return1401)
  br label %UnifiedReturnBlock

false1397:                                        ; preds = %false1312
  %return1404 = call i64 @"eq@III"(i64 %idx1309, i64 10)
  %147 = icmp ne i64 %return1404, 0
  br i1 %147, label %true1405, label %false1406

true1405:                                         ; preds = %false1397
  %XST1408 = load double*, double** %XST
  %return1409 = call double* @"slice@[F[FIIIIII"(double* %XST1408, i64 1, i64 170, i64 1, i64 187, i64 0, i64 0)
  %return1410 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1411 = call i64 @"sample_cdf@[FFI"(double* %return1409, double %return1410)
  br label %UnifiedReturnBlock

false1406:                                        ; preds = %false1397
  %return1413 = call i64 @"eq@III"(i64 %idx1309, i64 11)
  %148 = icmp ne i64 %return1413, 0
  br i1 %148, label %true1414, label %false1415

true1414:                                         ; preds = %false1406
  %XST1417 = load double*, double** %XST
  %return1418 = call double* @"slice@[F[FIIIIII"(double* %XST1417, i64 1, i64 187, i64 1, i64 204, i64 0, i64 0)
  %return1419 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1420 = call i64 @"sample_cdf@[FFI"(double* %return1418, double %return1419)
  br label %UnifiedReturnBlock

false1415:                                        ; preds = %false1406
  %return1422 = call i64 @"eq@III"(i64 %idx1309, i64 12)
  %149 = icmp ne i64 %return1422, 0
  br i1 %149, label %true1423, label %false1424

true1423:                                         ; preds = %false1415
  %XST1426 = load double*, double** %XST
  %return1427 = call double* @"slice@[F[FIIIIII"(double* %XST1426, i64 1, i64 204, i64 1, i64 221, i64 0, i64 0)
  %return1428 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1429 = call i64 @"sample_cdf@[FFI"(double* %return1427, double %return1428)
  br label %UnifiedReturnBlock

false1424:                                        ; preds = %false1415
  %return1431 = call i64 @"eq@III"(i64 %idx1309, i64 13)
  %150 = icmp ne i64 %return1431, 0
  br i1 %150, label %true1432, label %false1433

true1432:                                         ; preds = %false1424
  %XST1435 = load double*, double** %XST
  %return1436 = call double* @"slice@[F[FIIIIII"(double* %XST1435, i64 1, i64 221, i64 1, i64 238, i64 0, i64 0)
  %return1437 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1438 = call i64 @"sample_cdf@[FFI"(double* %return1436, double %return1437)
  br label %UnifiedReturnBlock

false1433:                                        ; preds = %false1424
  %return1440 = call i64 @"eq@III"(i64 %idx1309, i64 14)
  %151 = icmp ne i64 %return1440, 0
  br i1 %151, label %true1441, label %false1442

true1441:                                         ; preds = %false1433
  %XST1444 = load double*, double** %XST
  %return1445 = call double* @"slice@[F[FIIIIII"(double* %XST1444, i64 1, i64 238, i64 1, i64 255, i64 0, i64 0)
  %return1446 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1447 = call i64 @"sample_cdf@[FFI"(double* %return1445, double %return1446)
  br label %UnifiedReturnBlock

false1442:                                        ; preds = %false1433
  %return1449 = call i64 @"eq@III"(i64 %idx1309, i64 15)
  %152 = icmp ne i64 %return1449, 0
  br i1 %152, label %true1450, label %false1451

true1450:                                         ; preds = %false1442
  %XST1453 = load double*, double** %XST
  %return1454 = call double* @"slice@[F[FIIIIII"(double* %XST1453, i64 1, i64 255, i64 1, i64 272, i64 0, i64 0)
  %return1455 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1456 = call i64 @"sample_cdf@[FFI"(double* %return1454, double %return1455)
  br label %UnifiedReturnBlock

false1451:                                        ; preds = %false1442
  %return1458 = call i64 @"eq@III"(i64 %idx1309, i64 16)
  %153 = icmp ne i64 %return1458, 0
  br i1 %153, label %true1459, label %end

true1459:                                         ; preds = %false1451
  %XST1461 = load double*, double** %XST
  %return1462 = call double* @"slice@[F[FIIIIII"(double* %XST1461, i64 1, i64 272, i64 1, i64 289, i64 0, i64 0)
  %return1463 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1464 = call i64 @"sample_cdf@[FFI"(double* %return1462, double %return1463)
  br label %UnifiedReturnBlock

true1468:                                         ; preds = %false1307
  %idx1471 = load i64, i64* %idx
  %return1472 = call i64 @"lt@III"(i64 %idx1471, i64 9)
  %154 = icmp ne i64 %return1472, 0
  br i1 %154, label %true1473, label %false1474

false1469:                                        ; preds = %false1307
  %return1637 = fcmp oeq double %res1, 1.900000e+01
  br i1 %return1637, label %true1639, label %false1640

true1473:                                         ; preds = %true1468
  %return1477 = call i64 @"eq@III"(i64 %idx1471, i64 0)
  %155 = icmp ne i64 %return1477, 0
  br i1 %155, label %true1478, label %false1479

false1474:                                        ; preds = %true1468
  %return1557 = call i64 @"eq@III"(i64 %idx1471, i64 9)
  %156 = icmp ne i64 %return1557, 0
  br i1 %156, label %true1558, label %false1559

true1478:                                         ; preds = %true1473
  %XST1481 = load double*, double** %XST
  %return1482 = call double* @"slice@[F[FIIIIII"(double* %XST1481, i64 1, i64 0, i64 1, i64 18, i64 0, i64 0)
  %return1483 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1484 = call i64 @"sample_cdf@[FFI"(double* %return1482, double %return1483)
  br label %UnifiedReturnBlock

false1479:                                        ; preds = %true1473
  %return1486 = call i64 @"eq@III"(i64 %idx1471, i64 1)
  %157 = icmp ne i64 %return1486, 0
  br i1 %157, label %true1487, label %false1488

true1487:                                         ; preds = %false1479
  %XST1490 = load double*, double** %XST
  %return1491 = call double* @"slice@[F[FIIIIII"(double* %XST1490, i64 1, i64 18, i64 1, i64 36, i64 0, i64 0)
  %return1492 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1493 = call i64 @"sample_cdf@[FFI"(double* %return1491, double %return1492)
  br label %UnifiedReturnBlock

false1488:                                        ; preds = %false1479
  %return1495 = call i64 @"eq@III"(i64 %idx1471, i64 2)
  %158 = icmp ne i64 %return1495, 0
  br i1 %158, label %true1496, label %false1497

true1496:                                         ; preds = %false1488
  %XST1499 = load double*, double** %XST
  %return1500 = call double* @"slice@[F[FIIIIII"(double* %XST1499, i64 1, i64 36, i64 1, i64 54, i64 0, i64 0)
  %return1501 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1502 = call i64 @"sample_cdf@[FFI"(double* %return1500, double %return1501)
  br label %UnifiedReturnBlock

false1497:                                        ; preds = %false1488
  %return1504 = call i64 @"eq@III"(i64 %idx1471, i64 3)
  %159 = icmp ne i64 %return1504, 0
  br i1 %159, label %true1505, label %false1506

true1505:                                         ; preds = %false1497
  %XST1508 = load double*, double** %XST
  %return1509 = call double* @"slice@[F[FIIIIII"(double* %XST1508, i64 1, i64 54, i64 1, i64 72, i64 0, i64 0)
  %return1510 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1511 = call i64 @"sample_cdf@[FFI"(double* %return1509, double %return1510)
  br label %UnifiedReturnBlock

false1506:                                        ; preds = %false1497
  %return1513 = call i64 @"eq@III"(i64 %idx1471, i64 4)
  %160 = icmp ne i64 %return1513, 0
  br i1 %160, label %true1514, label %false1515

true1514:                                         ; preds = %false1506
  %XST1517 = load double*, double** %XST
  %return1518 = call double* @"slice@[F[FIIIIII"(double* %XST1517, i64 1, i64 72, i64 1, i64 90, i64 0, i64 0)
  %return1519 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1520 = call i64 @"sample_cdf@[FFI"(double* %return1518, double %return1519)
  br label %UnifiedReturnBlock

false1515:                                        ; preds = %false1506
  %return1522 = call i64 @"eq@III"(i64 %idx1471, i64 5)
  %161 = icmp ne i64 %return1522, 0
  br i1 %161, label %true1523, label %false1524

true1523:                                         ; preds = %false1515
  %XST1526 = load double*, double** %XST
  %return1527 = call double* @"slice@[F[FIIIIII"(double* %XST1526, i64 1, i64 90, i64 1, i64 108, i64 0, i64 0)
  %return1528 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1529 = call i64 @"sample_cdf@[FFI"(double* %return1527, double %return1528)
  br label %UnifiedReturnBlock

false1524:                                        ; preds = %false1515
  %return1531 = call i64 @"eq@III"(i64 %idx1471, i64 6)
  %162 = icmp ne i64 %return1531, 0
  br i1 %162, label %true1532, label %false1533

true1532:                                         ; preds = %false1524
  %XST1535 = load double*, double** %XST
  %return1536 = call double* @"slice@[F[FIIIIII"(double* %XST1535, i64 1, i64 108, i64 1, i64 126, i64 0, i64 0)
  %return1537 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1538 = call i64 @"sample_cdf@[FFI"(double* %return1536, double %return1537)
  br label %UnifiedReturnBlock

false1533:                                        ; preds = %false1524
  %return1540 = call i64 @"eq@III"(i64 %idx1471, i64 7)
  %163 = icmp ne i64 %return1540, 0
  br i1 %163, label %true1541, label %false1542

true1541:                                         ; preds = %false1533
  %XST1544 = load double*, double** %XST
  %return1545 = call double* @"slice@[F[FIIIIII"(double* %XST1544, i64 1, i64 126, i64 1, i64 144, i64 0, i64 0)
  %return1546 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1547 = call i64 @"sample_cdf@[FFI"(double* %return1545, double %return1546)
  br label %UnifiedReturnBlock

false1542:                                        ; preds = %false1533
  %return1549 = call i64 @"eq@III"(i64 %idx1471, i64 8)
  %164 = icmp ne i64 %return1549, 0
  br i1 %164, label %true1550, label %end

true1550:                                         ; preds = %false1542
  %XST1552 = load double*, double** %XST
  %return1553 = call double* @"slice@[F[FIIIIII"(double* %XST1552, i64 1, i64 144, i64 1, i64 162, i64 0, i64 0)
  %return1554 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1555 = call i64 @"sample_cdf@[FFI"(double* %return1553, double %return1554)
  br label %UnifiedReturnBlock

true1558:                                         ; preds = %false1474
  %XST1561 = load double*, double** %XST
  %return1562 = call double* @"slice@[F[FIIIIII"(double* %XST1561, i64 1, i64 162, i64 1, i64 180, i64 0, i64 0)
  %return1563 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1564 = call i64 @"sample_cdf@[FFI"(double* %return1562, double %return1563)
  br label %UnifiedReturnBlock

false1559:                                        ; preds = %false1474
  %return1566 = call i64 @"eq@III"(i64 %idx1471, i64 10)
  %165 = icmp ne i64 %return1566, 0
  br i1 %165, label %true1567, label %false1568

true1567:                                         ; preds = %false1559
  %XST1570 = load double*, double** %XST
  %return1571 = call double* @"slice@[F[FIIIIII"(double* %XST1570, i64 1, i64 180, i64 1, i64 198, i64 0, i64 0)
  %return1572 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1573 = call i64 @"sample_cdf@[FFI"(double* %return1571, double %return1572)
  br label %UnifiedReturnBlock

false1568:                                        ; preds = %false1559
  %return1575 = call i64 @"eq@III"(i64 %idx1471, i64 11)
  %166 = icmp ne i64 %return1575, 0
  br i1 %166, label %true1576, label %false1577

true1576:                                         ; preds = %false1568
  %XST1579 = load double*, double** %XST
  %return1580 = call double* @"slice@[F[FIIIIII"(double* %XST1579, i64 1, i64 198, i64 1, i64 216, i64 0, i64 0)
  %return1581 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1582 = call i64 @"sample_cdf@[FFI"(double* %return1580, double %return1581)
  br label %UnifiedReturnBlock

false1577:                                        ; preds = %false1568
  %return1584 = call i64 @"eq@III"(i64 %idx1471, i64 12)
  %167 = icmp ne i64 %return1584, 0
  br i1 %167, label %true1585, label %false1586

true1585:                                         ; preds = %false1577
  %XST1588 = load double*, double** %XST
  %return1589 = call double* @"slice@[F[FIIIIII"(double* %XST1588, i64 1, i64 216, i64 1, i64 234, i64 0, i64 0)
  %return1590 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1591 = call i64 @"sample_cdf@[FFI"(double* %return1589, double %return1590)
  br label %UnifiedReturnBlock

false1586:                                        ; preds = %false1577
  %return1593 = call i64 @"eq@III"(i64 %idx1471, i64 13)
  %168 = icmp ne i64 %return1593, 0
  br i1 %168, label %true1594, label %false1595

true1594:                                         ; preds = %false1586
  %XST1597 = load double*, double** %XST
  %return1598 = call double* @"slice@[F[FIIIIII"(double* %XST1597, i64 1, i64 234, i64 1, i64 252, i64 0, i64 0)
  %return1599 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1600 = call i64 @"sample_cdf@[FFI"(double* %return1598, double %return1599)
  br label %UnifiedReturnBlock

false1595:                                        ; preds = %false1586
  %return1602 = call i64 @"eq@III"(i64 %idx1471, i64 14)
  %169 = icmp ne i64 %return1602, 0
  br i1 %169, label %true1603, label %false1604

true1603:                                         ; preds = %false1595
  %XST1606 = load double*, double** %XST
  %return1607 = call double* @"slice@[F[FIIIIII"(double* %XST1606, i64 1, i64 252, i64 1, i64 270, i64 0, i64 0)
  %return1608 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1609 = call i64 @"sample_cdf@[FFI"(double* %return1607, double %return1608)
  br label %UnifiedReturnBlock

false1604:                                        ; preds = %false1595
  %return1611 = call i64 @"eq@III"(i64 %idx1471, i64 15)
  %170 = icmp ne i64 %return1611, 0
  br i1 %170, label %true1612, label %false1613

true1612:                                         ; preds = %false1604
  %XST1615 = load double*, double** %XST
  %return1616 = call double* @"slice@[F[FIIIIII"(double* %XST1615, i64 1, i64 270, i64 1, i64 288, i64 0, i64 0)
  %return1617 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1618 = call i64 @"sample_cdf@[FFI"(double* %return1616, double %return1617)
  br label %UnifiedReturnBlock

false1613:                                        ; preds = %false1604
  %return1620 = call i64 @"eq@III"(i64 %idx1471, i64 16)
  %171 = icmp ne i64 %return1620, 0
  br i1 %171, label %true1621, label %false1622

true1621:                                         ; preds = %false1613
  %XST1624 = load double*, double** %XST
  %return1625 = call double* @"slice@[F[FIIIIII"(double* %XST1624, i64 1, i64 288, i64 1, i64 306, i64 0, i64 0)
  %return1626 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1627 = call i64 @"sample_cdf@[FFI"(double* %return1625, double %return1626)
  br label %UnifiedReturnBlock

false1622:                                        ; preds = %false1613
  %return1629 = call i64 @"eq@III"(i64 %idx1471, i64 17)
  %172 = icmp ne i64 %return1629, 0
  br i1 %172, label %true1630, label %end

true1630:                                         ; preds = %false1622
  %XST1632 = load double*, double** %XST
  %return1633 = call double* @"slice@[F[FIIIIII"(double* %XST1632, i64 1, i64 306, i64 1, i64 324, i64 0, i64 0)
  %return1634 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1635 = call i64 @"sample_cdf@[FFI"(double* %return1633, double %return1634)
  br label %UnifiedReturnBlock

true1639:                                         ; preds = %false1469
  %idx1642 = load i64, i64* %idx
  %return1643 = call i64 @"lt@III"(i64 %idx1642, i64 10)
  %173 = icmp ne i64 %return1643, 0
  br i1 %173, label %true1644, label %false1645

false1640:                                        ; preds = %false1469
  %return1817 = fcmp oeq double %res1, 2.000000e+01
  br i1 %return1817, label %true1819, label %end

true1644:                                         ; preds = %true1639
  %return1648 = call i64 @"eq@III"(i64 %idx1642, i64 0)
  %174 = icmp ne i64 %return1648, 0
  br i1 %174, label %true1649, label %false1650

false1645:                                        ; preds = %true1639
  %return1737 = call i64 @"eq@III"(i64 %idx1642, i64 10)
  %175 = icmp ne i64 %return1737, 0
  br i1 %175, label %true1738, label %false1739

true1649:                                         ; preds = %true1644
  %XST1652 = load double*, double** %XST
  %return1653 = call double* @"slice@[F[FIIIIII"(double* %XST1652, i64 1, i64 0, i64 1, i64 19, i64 0, i64 0)
  %return1654 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1655 = call i64 @"sample_cdf@[FFI"(double* %return1653, double %return1654)
  br label %UnifiedReturnBlock

false1650:                                        ; preds = %true1644
  %return1657 = call i64 @"eq@III"(i64 %idx1642, i64 1)
  %176 = icmp ne i64 %return1657, 0
  br i1 %176, label %true1658, label %false1659

true1658:                                         ; preds = %false1650
  %XST1661 = load double*, double** %XST
  %return1662 = call double* @"slice@[F[FIIIIII"(double* %XST1661, i64 1, i64 19, i64 1, i64 38, i64 0, i64 0)
  %return1663 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1664 = call i64 @"sample_cdf@[FFI"(double* %return1662, double %return1663)
  br label %UnifiedReturnBlock

false1659:                                        ; preds = %false1650
  %return1666 = call i64 @"eq@III"(i64 %idx1642, i64 2)
  %177 = icmp ne i64 %return1666, 0
  br i1 %177, label %true1667, label %false1668

true1667:                                         ; preds = %false1659
  %XST1670 = load double*, double** %XST
  %return1671 = call double* @"slice@[F[FIIIIII"(double* %XST1670, i64 1, i64 38, i64 1, i64 57, i64 0, i64 0)
  %return1672 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1673 = call i64 @"sample_cdf@[FFI"(double* %return1671, double %return1672)
  br label %UnifiedReturnBlock

false1668:                                        ; preds = %false1659
  %return1675 = call i64 @"eq@III"(i64 %idx1642, i64 3)
  %178 = icmp ne i64 %return1675, 0
  br i1 %178, label %true1676, label %false1677

true1676:                                         ; preds = %false1668
  %XST1679 = load double*, double** %XST
  %return1680 = call double* @"slice@[F[FIIIIII"(double* %XST1679, i64 1, i64 57, i64 1, i64 76, i64 0, i64 0)
  %return1681 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1682 = call i64 @"sample_cdf@[FFI"(double* %return1680, double %return1681)
  br label %UnifiedReturnBlock

false1677:                                        ; preds = %false1668
  %return1684 = call i64 @"eq@III"(i64 %idx1642, i64 4)
  %179 = icmp ne i64 %return1684, 0
  br i1 %179, label %true1685, label %false1686

true1685:                                         ; preds = %false1677
  %XST1688 = load double*, double** %XST
  %return1689 = call double* @"slice@[F[FIIIIII"(double* %XST1688, i64 1, i64 76, i64 1, i64 95, i64 0, i64 0)
  %return1690 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1691 = call i64 @"sample_cdf@[FFI"(double* %return1689, double %return1690)
  br label %UnifiedReturnBlock

false1686:                                        ; preds = %false1677
  %return1693 = call i64 @"eq@III"(i64 %idx1642, i64 5)
  %180 = icmp ne i64 %return1693, 0
  br i1 %180, label %true1694, label %false1695

true1694:                                         ; preds = %false1686
  %XST1697 = load double*, double** %XST
  %return1698 = call double* @"slice@[F[FIIIIII"(double* %XST1697, i64 1, i64 95, i64 1, i64 114, i64 0, i64 0)
  %return1699 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1700 = call i64 @"sample_cdf@[FFI"(double* %return1698, double %return1699)
  br label %UnifiedReturnBlock

false1695:                                        ; preds = %false1686
  %return1702 = call i64 @"eq@III"(i64 %idx1642, i64 6)
  %181 = icmp ne i64 %return1702, 0
  br i1 %181, label %true1703, label %false1704

true1703:                                         ; preds = %false1695
  %XST1706 = load double*, double** %XST
  %return1707 = call double* @"slice@[F[FIIIIII"(double* %XST1706, i64 1, i64 114, i64 1, i64 133, i64 0, i64 0)
  %return1708 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1709 = call i64 @"sample_cdf@[FFI"(double* %return1707, double %return1708)
  br label %UnifiedReturnBlock

false1704:                                        ; preds = %false1695
  %return1711 = call i64 @"eq@III"(i64 %idx1642, i64 7)
  %182 = icmp ne i64 %return1711, 0
  br i1 %182, label %true1712, label %false1713

true1712:                                         ; preds = %false1704
  %XST1715 = load double*, double** %XST
  %return1716 = call double* @"slice@[F[FIIIIII"(double* %XST1715, i64 1, i64 133, i64 1, i64 152, i64 0, i64 0)
  %return1717 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1718 = call i64 @"sample_cdf@[FFI"(double* %return1716, double %return1717)
  br label %UnifiedReturnBlock

false1713:                                        ; preds = %false1704
  %return1720 = call i64 @"eq@III"(i64 %idx1642, i64 8)
  %183 = icmp ne i64 %return1720, 0
  br i1 %183, label %true1721, label %false1722

true1721:                                         ; preds = %false1713
  %XST1724 = load double*, double** %XST
  %return1725 = call double* @"slice@[F[FIIIIII"(double* %XST1724, i64 1, i64 152, i64 1, i64 171, i64 0, i64 0)
  %return1726 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1727 = call i64 @"sample_cdf@[FFI"(double* %return1725, double %return1726)
  br label %UnifiedReturnBlock

false1722:                                        ; preds = %false1713
  %return1729 = call i64 @"eq@III"(i64 %idx1642, i64 9)
  %184 = icmp ne i64 %return1729, 0
  br i1 %184, label %true1730, label %end

true1730:                                         ; preds = %false1722
  %XST1732 = load double*, double** %XST
  %return1733 = call double* @"slice@[F[FIIIIII"(double* %XST1732, i64 1, i64 171, i64 1, i64 190, i64 0, i64 0)
  %return1734 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1735 = call i64 @"sample_cdf@[FFI"(double* %return1733, double %return1734)
  br label %UnifiedReturnBlock

true1738:                                         ; preds = %false1645
  %XST1741 = load double*, double** %XST
  %return1742 = call double* @"slice@[F[FIIIIII"(double* %XST1741, i64 1, i64 190, i64 1, i64 209, i64 0, i64 0)
  %return1743 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1744 = call i64 @"sample_cdf@[FFI"(double* %return1742, double %return1743)
  br label %UnifiedReturnBlock

false1739:                                        ; preds = %false1645
  %return1746 = call i64 @"eq@III"(i64 %idx1642, i64 11)
  %185 = icmp ne i64 %return1746, 0
  br i1 %185, label %true1747, label %false1748

true1747:                                         ; preds = %false1739
  %XST1750 = load double*, double** %XST
  %return1751 = call double* @"slice@[F[FIIIIII"(double* %XST1750, i64 1, i64 209, i64 1, i64 228, i64 0, i64 0)
  %return1752 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1753 = call i64 @"sample_cdf@[FFI"(double* %return1751, double %return1752)
  br label %UnifiedReturnBlock

false1748:                                        ; preds = %false1739
  %return1755 = call i64 @"eq@III"(i64 %idx1642, i64 12)
  %186 = icmp ne i64 %return1755, 0
  br i1 %186, label %true1756, label %false1757

true1756:                                         ; preds = %false1748
  %XST1759 = load double*, double** %XST
  %return1760 = call double* @"slice@[F[FIIIIII"(double* %XST1759, i64 1, i64 228, i64 1, i64 247, i64 0, i64 0)
  %return1761 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1762 = call i64 @"sample_cdf@[FFI"(double* %return1760, double %return1761)
  br label %UnifiedReturnBlock

false1757:                                        ; preds = %false1748
  %return1764 = call i64 @"eq@III"(i64 %idx1642, i64 13)
  %187 = icmp ne i64 %return1764, 0
  br i1 %187, label %true1765, label %false1766

true1765:                                         ; preds = %false1757
  %XST1768 = load double*, double** %XST
  %return1769 = call double* @"slice@[F[FIIIIII"(double* %XST1768, i64 1, i64 247, i64 1, i64 266, i64 0, i64 0)
  %return1770 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1771 = call i64 @"sample_cdf@[FFI"(double* %return1769, double %return1770)
  br label %UnifiedReturnBlock

false1766:                                        ; preds = %false1757
  %return1773 = call i64 @"eq@III"(i64 %idx1642, i64 14)
  %188 = icmp ne i64 %return1773, 0
  br i1 %188, label %true1774, label %false1775

true1774:                                         ; preds = %false1766
  %XST1777 = load double*, double** %XST
  %return1778 = call double* @"slice@[F[FIIIIII"(double* %XST1777, i64 1, i64 266, i64 1, i64 285, i64 0, i64 0)
  %return1779 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1780 = call i64 @"sample_cdf@[FFI"(double* %return1778, double %return1779)
  br label %UnifiedReturnBlock

false1775:                                        ; preds = %false1766
  %return1782 = call i64 @"eq@III"(i64 %idx1642, i64 15)
  %189 = icmp ne i64 %return1782, 0
  br i1 %189, label %true1783, label %false1784

true1783:                                         ; preds = %false1775
  %XST1786 = load double*, double** %XST
  %return1787 = call double* @"slice@[F[FIIIIII"(double* %XST1786, i64 1, i64 285, i64 1, i64 304, i64 0, i64 0)
  %return1788 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1789 = call i64 @"sample_cdf@[FFI"(double* %return1787, double %return1788)
  br label %UnifiedReturnBlock

false1784:                                        ; preds = %false1775
  %return1791 = call i64 @"eq@III"(i64 %idx1642, i64 16)
  %190 = icmp ne i64 %return1791, 0
  br i1 %190, label %true1792, label %false1793

true1792:                                         ; preds = %false1784
  %XST1795 = load double*, double** %XST
  %return1796 = call double* @"slice@[F[FIIIIII"(double* %XST1795, i64 1, i64 304, i64 1, i64 323, i64 0, i64 0)
  %return1797 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1798 = call i64 @"sample_cdf@[FFI"(double* %return1796, double %return1797)
  br label %UnifiedReturnBlock

false1793:                                        ; preds = %false1784
  %return1800 = call i64 @"eq@III"(i64 %idx1642, i64 17)
  %191 = icmp ne i64 %return1800, 0
  br i1 %191, label %true1801, label %false1802

true1801:                                         ; preds = %false1793
  %XST1804 = load double*, double** %XST
  %return1805 = call double* @"slice@[F[FIIIIII"(double* %XST1804, i64 1, i64 323, i64 1, i64 342, i64 0, i64 0)
  %return1806 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1807 = call i64 @"sample_cdf@[FFI"(double* %return1805, double %return1806)
  br label %UnifiedReturnBlock

false1802:                                        ; preds = %false1793
  %return1809 = call i64 @"eq@III"(i64 %idx1642, i64 18)
  %192 = icmp ne i64 %return1809, 0
  br i1 %192, label %true1810, label %end

true1810:                                         ; preds = %false1802
  %XST1812 = load double*, double** %XST
  %return1813 = call double* @"slice@[F[FIIIIII"(double* %XST1812, i64 1, i64 342, i64 1, i64 361, i64 0, i64 0)
  %return1814 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1815 = call i64 @"sample_cdf@[FFI"(double* %return1813, double %return1814)
  br label %UnifiedReturnBlock

true1819:                                         ; preds = %false1640
  %idx1821 = load i64, i64* %idx
  %return1822 = call i64 @"lt@III"(i64 %idx1821, i64 10)
  %193 = icmp ne i64 %return1822, 0
  br i1 %193, label %true1823, label %false1824

true1823:                                         ; preds = %true1819
  %return1827 = call i64 @"eq@III"(i64 %idx1821, i64 0)
  %194 = icmp ne i64 %return1827, 0
  br i1 %194, label %true1828, label %false1829

false1824:                                        ; preds = %true1819
  %return1916 = call i64 @"eq@III"(i64 %idx1821, i64 10)
  %195 = icmp ne i64 %return1916, 0
  br i1 %195, label %true1917, label %false1918

true1828:                                         ; preds = %true1823
  %XST1831 = load double*, double** %XST
  %return1832 = call double* @"slice@[F[FIIIIII"(double* %XST1831, i64 1, i64 0, i64 1, i64 20, i64 0, i64 0)
  %return1833 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1834 = call i64 @"sample_cdf@[FFI"(double* %return1832, double %return1833)
  br label %UnifiedReturnBlock

false1829:                                        ; preds = %true1823
  %return1836 = call i64 @"eq@III"(i64 %idx1821, i64 1)
  %196 = icmp ne i64 %return1836, 0
  br i1 %196, label %true1837, label %false1838

true1837:                                         ; preds = %false1829
  %XST1840 = load double*, double** %XST
  %return1841 = call double* @"slice@[F[FIIIIII"(double* %XST1840, i64 1, i64 20, i64 1, i64 40, i64 0, i64 0)
  %return1842 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1843 = call i64 @"sample_cdf@[FFI"(double* %return1841, double %return1842)
  br label %UnifiedReturnBlock

false1838:                                        ; preds = %false1829
  %return1845 = call i64 @"eq@III"(i64 %idx1821, i64 2)
  %197 = icmp ne i64 %return1845, 0
  br i1 %197, label %true1846, label %false1847

true1846:                                         ; preds = %false1838
  %XST1849 = load double*, double** %XST
  %return1850 = call double* @"slice@[F[FIIIIII"(double* %XST1849, i64 1, i64 40, i64 1, i64 60, i64 0, i64 0)
  %return1851 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1852 = call i64 @"sample_cdf@[FFI"(double* %return1850, double %return1851)
  br label %UnifiedReturnBlock

false1847:                                        ; preds = %false1838
  %return1854 = call i64 @"eq@III"(i64 %idx1821, i64 3)
  %198 = icmp ne i64 %return1854, 0
  br i1 %198, label %true1855, label %false1856

true1855:                                         ; preds = %false1847
  %XST1858 = load double*, double** %XST
  %return1859 = call double* @"slice@[F[FIIIIII"(double* %XST1858, i64 1, i64 60, i64 1, i64 80, i64 0, i64 0)
  %return1860 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1861 = call i64 @"sample_cdf@[FFI"(double* %return1859, double %return1860)
  br label %UnifiedReturnBlock

false1856:                                        ; preds = %false1847
  %return1863 = call i64 @"eq@III"(i64 %idx1821, i64 4)
  %199 = icmp ne i64 %return1863, 0
  br i1 %199, label %true1864, label %false1865

true1864:                                         ; preds = %false1856
  %XST1867 = load double*, double** %XST
  %return1868 = call double* @"slice@[F[FIIIIII"(double* %XST1867, i64 1, i64 80, i64 1, i64 100, i64 0, i64 0)
  %return1869 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1870 = call i64 @"sample_cdf@[FFI"(double* %return1868, double %return1869)
  br label %UnifiedReturnBlock

false1865:                                        ; preds = %false1856
  %return1872 = call i64 @"eq@III"(i64 %idx1821, i64 5)
  %200 = icmp ne i64 %return1872, 0
  br i1 %200, label %true1873, label %false1874

true1873:                                         ; preds = %false1865
  %XST1876 = load double*, double** %XST
  %return1877 = call double* @"slice@[F[FIIIIII"(double* %XST1876, i64 1, i64 100, i64 1, i64 120, i64 0, i64 0)
  %return1878 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1879 = call i64 @"sample_cdf@[FFI"(double* %return1877, double %return1878)
  br label %UnifiedReturnBlock

false1874:                                        ; preds = %false1865
  %return1881 = call i64 @"eq@III"(i64 %idx1821, i64 6)
  %201 = icmp ne i64 %return1881, 0
  br i1 %201, label %true1882, label %false1883

true1882:                                         ; preds = %false1874
  %XST1885 = load double*, double** %XST
  %return1886 = call double* @"slice@[F[FIIIIII"(double* %XST1885, i64 1, i64 120, i64 1, i64 140, i64 0, i64 0)
  %return1887 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1888 = call i64 @"sample_cdf@[FFI"(double* %return1886, double %return1887)
  br label %UnifiedReturnBlock

false1883:                                        ; preds = %false1874
  %return1890 = call i64 @"eq@III"(i64 %idx1821, i64 7)
  %202 = icmp ne i64 %return1890, 0
  br i1 %202, label %true1891, label %false1892

true1891:                                         ; preds = %false1883
  %XST1894 = load double*, double** %XST
  %return1895 = call double* @"slice@[F[FIIIIII"(double* %XST1894, i64 1, i64 140, i64 1, i64 160, i64 0, i64 0)
  %return1896 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1897 = call i64 @"sample_cdf@[FFI"(double* %return1895, double %return1896)
  br label %UnifiedReturnBlock

false1892:                                        ; preds = %false1883
  %return1899 = call i64 @"eq@III"(i64 %idx1821, i64 8)
  %203 = icmp ne i64 %return1899, 0
  br i1 %203, label %true1900, label %false1901

true1900:                                         ; preds = %false1892
  %XST1903 = load double*, double** %XST
  %return1904 = call double* @"slice@[F[FIIIIII"(double* %XST1903, i64 1, i64 160, i64 1, i64 180, i64 0, i64 0)
  %return1905 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1906 = call i64 @"sample_cdf@[FFI"(double* %return1904, double %return1905)
  br label %UnifiedReturnBlock

false1901:                                        ; preds = %false1892
  %return1908 = call i64 @"eq@III"(i64 %idx1821, i64 9)
  %204 = icmp ne i64 %return1908, 0
  br i1 %204, label %true1909, label %end

true1909:                                         ; preds = %false1901
  %XST1911 = load double*, double** %XST
  %return1912 = call double* @"slice@[F[FIIIIII"(double* %XST1911, i64 1, i64 180, i64 1, i64 200, i64 0, i64 0)
  %return1913 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1914 = call i64 @"sample_cdf@[FFI"(double* %return1912, double %return1913)
  br label %UnifiedReturnBlock

true1917:                                         ; preds = %false1824
  %XST1920 = load double*, double** %XST
  %return1921 = call double* @"slice@[F[FIIIIII"(double* %XST1920, i64 1, i64 200, i64 1, i64 220, i64 0, i64 0)
  %return1922 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1923 = call i64 @"sample_cdf@[FFI"(double* %return1921, double %return1922)
  br label %UnifiedReturnBlock

false1918:                                        ; preds = %false1824
  %return1925 = call i64 @"eq@III"(i64 %idx1821, i64 11)
  %205 = icmp ne i64 %return1925, 0
  br i1 %205, label %true1926, label %false1927

true1926:                                         ; preds = %false1918
  %XST1929 = load double*, double** %XST
  %return1930 = call double* @"slice@[F[FIIIIII"(double* %XST1929, i64 1, i64 220, i64 1, i64 240, i64 0, i64 0)
  %return1931 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1932 = call i64 @"sample_cdf@[FFI"(double* %return1930, double %return1931)
  br label %UnifiedReturnBlock

false1927:                                        ; preds = %false1918
  %return1934 = call i64 @"eq@III"(i64 %idx1821, i64 12)
  %206 = icmp ne i64 %return1934, 0
  br i1 %206, label %true1935, label %false1936

true1935:                                         ; preds = %false1927
  %XST1938 = load double*, double** %XST
  %return1939 = call double* @"slice@[F[FIIIIII"(double* %XST1938, i64 1, i64 240, i64 1, i64 260, i64 0, i64 0)
  %return1940 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1941 = call i64 @"sample_cdf@[FFI"(double* %return1939, double %return1940)
  br label %UnifiedReturnBlock

false1936:                                        ; preds = %false1927
  %return1943 = call i64 @"eq@III"(i64 %idx1821, i64 13)
  %207 = icmp ne i64 %return1943, 0
  br i1 %207, label %true1944, label %false1945

true1944:                                         ; preds = %false1936
  %XST1947 = load double*, double** %XST
  %return1948 = call double* @"slice@[F[FIIIIII"(double* %XST1947, i64 1, i64 260, i64 1, i64 280, i64 0, i64 0)
  %return1949 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1950 = call i64 @"sample_cdf@[FFI"(double* %return1948, double %return1949)
  br label %UnifiedReturnBlock

false1945:                                        ; preds = %false1936
  %return1952 = call i64 @"eq@III"(i64 %idx1821, i64 14)
  %208 = icmp ne i64 %return1952, 0
  br i1 %208, label %true1953, label %false1954

true1953:                                         ; preds = %false1945
  %XST1956 = load double*, double** %XST
  %return1957 = call double* @"slice@[F[FIIIIII"(double* %XST1956, i64 1, i64 280, i64 1, i64 300, i64 0, i64 0)
  %return1958 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1959 = call i64 @"sample_cdf@[FFI"(double* %return1957, double %return1958)
  br label %UnifiedReturnBlock

false1954:                                        ; preds = %false1945
  %return1961 = call i64 @"eq@III"(i64 %idx1821, i64 15)
  %209 = icmp ne i64 %return1961, 0
  br i1 %209, label %true1962, label %false1963

true1962:                                         ; preds = %false1954
  %XST1965 = load double*, double** %XST
  %return1966 = call double* @"slice@[F[FIIIIII"(double* %XST1965, i64 1, i64 300, i64 1, i64 320, i64 0, i64 0)
  %return1967 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1968 = call i64 @"sample_cdf@[FFI"(double* %return1966, double %return1967)
  br label %UnifiedReturnBlock

false1963:                                        ; preds = %false1954
  %return1970 = call i64 @"eq@III"(i64 %idx1821, i64 16)
  %210 = icmp ne i64 %return1970, 0
  br i1 %210, label %true1971, label %false1972

true1971:                                         ; preds = %false1963
  %XST1974 = load double*, double** %XST
  %return1975 = call double* @"slice@[F[FIIIIII"(double* %XST1974, i64 1, i64 320, i64 1, i64 340, i64 0, i64 0)
  %return1976 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1977 = call i64 @"sample_cdf@[FFI"(double* %return1975, double %return1976)
  br label %UnifiedReturnBlock

false1972:                                        ; preds = %false1963
  %return1979 = call i64 @"eq@III"(i64 %idx1821, i64 17)
  %211 = icmp ne i64 %return1979, 0
  br i1 %211, label %true1980, label %false1981

true1980:                                         ; preds = %false1972
  %XST1983 = load double*, double** %XST
  %return1984 = call double* @"slice@[F[FIIIIII"(double* %XST1983, i64 1, i64 340, i64 1, i64 360, i64 0, i64 0)
  %return1985 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1986 = call i64 @"sample_cdf@[FFI"(double* %return1984, double %return1985)
  br label %UnifiedReturnBlock

false1981:                                        ; preds = %false1972
  %return1988 = call i64 @"eq@III"(i64 %idx1821, i64 18)
  %212 = icmp ne i64 %return1988, 0
  br i1 %212, label %true1989, label %false1990

true1989:                                         ; preds = %false1981
  %XST1992 = load double*, double** %XST
  %return1993 = call double* @"slice@[F[FIIIIII"(double* %XST1992, i64 1, i64 360, i64 1, i64 380, i64 0, i64 0)
  %return1994 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1995 = call i64 @"sample_cdf@[FFI"(double* %return1993, double %return1994)
  br label %UnifiedReturnBlock

false1990:                                        ; preds = %false1981
  %return1997 = call i64 @"eq@III"(i64 %idx1821, i64 19)
  %213 = icmp ne i64 %return1997, 0
  br i1 %213, label %true1998, label %end

true1998:                                         ; preds = %false1990
  %XST2000 = load double*, double** %XST
  %return2001 = call double* @"slice@[F[FIIIIII"(double* %XST2000, i64 1, i64 380, i64 1, i64 400, i64 0, i64 0)
  %return2002 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return2003 = call i64 @"sample_cdf@[FFI"(double* %return2001, double %return2002)
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %true1998, %true1989, %true1980, %true1971, %true1962, %true1953, %true1944, %true1935, %true1926, %true1917, %true1909, %true1900, %true1891, %true1882, %true1873, %true1864, %true1855, %true1846, %true1837, %true1828, %true1810, %true1801, %true1792, %true1783, %true1774, %true1765, %true1756, %true1747, %true1738, %true1730, %true1721, %true1712, %true1703, %true1694, %true1685, %true1676, %true1667, %true1658, %true1649, %true1630, %true1621, %true1612, %true1603, %true1594, %true1585, %true1576, %true1567, %true1558, %true1550, %true1541, %true1532, %true1523, %true1514, %true1505, %true1496, %true1487, %true1478, %true1459, %true1450, %true1441, %true1432, %true1423, %true1414, %true1405, %true1396, %true1388, %true1379, %true1370, %true1361, %true1352, %true1343, %true1334, %true1325, %true1316, %true1297, %true1288, %true1279, %true1270, %true1261, %true1252, %true1243, %true1234, %true1226, %true1217, %true1208, %true1199, %true1190, %true1181, %true1172, %true1163, %true1144, %true1135, %true1126, %true1117, %true1108, %true1099, %true1090, %true1082, %true1073, %true1064, %true1055, %true1046, %true1037, %true1028, %true1019, %true995, %true986, %true977, %true968, %true959, %true950, %true941, %true932, %true923, %true914, %true905, %true896, %true887, %true878, %true865, %true856, %true847, %true838, %true829, %true820, %true811, %true802, %true793, %true784, %true775, %true766, %true757, %true743, %true734, %true725, %true716, %true707, %true698, %true689, %true680, %true671, %true662, %true653, %true644, %true630, %true621, %true612, %true603, %true594, %true585, %true576, %true567, %true558, %true549, %true540, %true526, %true517, %true508, %true499, %true490, %true481, %true472, %true463, %true454, %true445, %true431, %true422, %true413, %true404, %true395, %true386, %true377, %true368, %true359, %true345, %true336, %true327, %true318, %true309, %true300, %true291, %true282, %true268, %true259, %true250, %true241, %true232, %true223, %true214, %true200, %true191, %true182, %true173, %true164, %true141, %true132, %true123, %true114, %true105, %true91, %true82, %true73, %true64, %true50, %true41, %true32, %false12, %true11, %end
  %UnifiedRetVal = phi i64 [ %idx2004, %end ], [ %return17, %true11 ], [ %return22, %false12 ], [ %return38, %true32 ], [ %return47, %true41 ], [ %return55, %true50 ], [ %return70, %true64 ], [ %return79, %true73 ], [ %return88, %true82 ], [ %return96, %true91 ], [ %return111, %true105 ], [ %return120, %true114 ], [ %return129, %true123 ], [ %return138, %true132 ], [ %return146, %true141 ], [ %return170, %true164 ], [ %return179, %true173 ], [ %return188, %true182 ], [ %return197, %true191 ], [ %return205, %true200 ], [ %return220, %true214 ], [ %return229, %true223 ], [ %return238, %true232 ], [ %return247, %true241 ], [ %return256, %true250 ], [ %return265, %true259 ], [ %return273, %true268 ], [ %return288, %true282 ], [ %return297, %true291 ], [ %return306, %true300 ], [ %return315, %true309 ], [ %return324, %true318 ], [ %return333, %true327 ], [ %return342, %true336 ], [ %return350, %true345 ], [ %return365, %true359 ], [ %return374, %true368 ], [ %return383, %true377 ], [ %return392, %true386 ], [ %return401, %true395 ], [ %return410, %true404 ], [ %return419, %true413 ], [ %return428, %true422 ], [ %return436, %true431 ], [ %return451, %true445 ], [ %return460, %true454 ], [ %return469, %true463 ], [ %return478, %true472 ], [ %return487, %true481 ], [ %return496, %true490 ], [ %return505, %true499 ], [ %return514, %true508 ], [ %return523, %true517 ], [ %return531, %true526 ], [ %return546, %true540 ], [ %return555, %true549 ], [ %return564, %true558 ], [ %return573, %true567 ], [ %return582, %true576 ], [ %return591, %true585 ], [ %return600, %true594 ], [ %return609, %true603 ], [ %return618, %true612 ], [ %return627, %true621 ], [ %return635, %true630 ], [ %return650, %true644 ], [ %return659, %true653 ], [ %return668, %true662 ], [ %return677, %true671 ], [ %return686, %true680 ], [ %return695, %true689 ], [ %return704, %true698 ], [ %return713, %true707 ], [ %return722, %true716 ], [ %return731, %true725 ], [ %return740, %true734 ], [ %return748, %true743 ], [ %return763, %true757 ], [ %return772, %true766 ], [ %return781, %true775 ], [ %return790, %true784 ], [ %return799, %true793 ], [ %return808, %true802 ], [ %return817, %true811 ], [ %return826, %true820 ], [ %return835, %true829 ], [ %return844, %true838 ], [ %return853, %true847 ], [ %return862, %true856 ], [ %return870, %true865 ], [ %return884, %true878 ], [ %return893, %true887 ], [ %return902, %true896 ], [ %return911, %true905 ], [ %return920, %true914 ], [ %return929, %true923 ], [ %return938, %true932 ], [ %return947, %true941 ], [ %return956, %true950 ], [ %return965, %true959 ], [ %return974, %true968 ], [ %return983, %true977 ], [ %return992, %true986 ], [ %return1000, %true995 ], [ %return1025, %true1019 ], [ %return1034, %true1028 ], [ %return1043, %true1037 ], [ %return1052, %true1046 ], [ %return1061, %true1055 ], [ %return1070, %true1064 ], [ %return1079, %true1073 ], [ %return1087, %true1082 ], [ %return1096, %true1090 ], [ %return1105, %true1099 ], [ %return1114, %true1108 ], [ %return1123, %true1117 ], [ %return1132, %true1126 ], [ %return1141, %true1135 ], [ %return1149, %true1144 ], [ %return1169, %true1163 ], [ %return1178, %true1172 ], [ %return1187, %true1181 ], [ %return1196, %true1190 ], [ %return1205, %true1199 ], [ %return1214, %true1208 ], [ %return1223, %true1217 ], [ %return1231, %true1226 ], [ %return1240, %true1234 ], [ %return1249, %true1243 ], [ %return1258, %true1252 ], [ %return1267, %true1261 ], [ %return1276, %true1270 ], [ %return1285, %true1279 ], [ %return1294, %true1288 ], [ %return1302, %true1297 ], [ %return1322, %true1316 ], [ %return1331, %true1325 ], [ %return1340, %true1334 ], [ %return1349, %true1343 ], [ %return1358, %true1352 ], [ %return1367, %true1361 ], [ %return1376, %true1370 ], [ %return1385, %true1379 ], [ %return1393, %true1388 ], [ %return1402, %true1396 ], [ %return1411, %true1405 ], [ %return1420, %true1414 ], [ %return1429, %true1423 ], [ %return1438, %true1432 ], [ %return1447, %true1441 ], [ %return1456, %true1450 ], [ %return1464, %true1459 ], [ %return1484, %true1478 ], [ %return1493, %true1487 ], [ %return1502, %true1496 ], [ %return1511, %true1505 ], [ %return1520, %true1514 ], [ %return1529, %true1523 ], [ %return1538, %true1532 ], [ %return1547, %true1541 ], [ %return1555, %true1550 ], [ %return1564, %true1558 ], [ %return1573, %true1567 ], [ %return1582, %true1576 ], [ %return1591, %true1585 ], [ %return1600, %true1594 ], [ %return1609, %true1603 ], [ %return1618, %true1612 ], [ %return1627, %true1621 ], [ %return1635, %true1630 ], [ %return1655, %true1649 ], [ %return1664, %true1658 ], [ %return1673, %true1667 ], [ %return1682, %true1676 ], [ %return1691, %true1685 ], [ %return1700, %true1694 ], [ %return1709, %true1703 ], [ %return1718, %true1712 ], [ %return1727, %true1721 ], [ %return1735, %true1730 ], [ %return1744, %true1738 ], [ %return1753, %true1747 ], [ %return1762, %true1756 ], [ %return1771, %true1765 ], [ %return1780, %true1774 ], [ %return1789, %true1783 ], [ %return1798, %true1792 ], [ %return1807, %true1801 ], [ %return1815, %true1810 ], [ %return1834, %true1828 ], [ %return1843, %true1837 ], [ %return1852, %true1846 ], [ %return1861, %true1855 ], [ %return1870, %true1864 ], [ %return1879, %true1873 ], [ %return1888, %true1882 ], [ %return1897, %true1891 ], [ %return1906, %true1900 ], [ %return1914, %true1909 ], [ %return1923, %true1917 ], [ %return1932, %true1926 ], [ %return1941, %true1935 ], [ %return1950, %true1944 ], [ %return1959, %true1953 ], [ %return1968, %true1962 ], [ %return1977, %true1971 ], [ %return1986, %true1980 ], [ %return1995, %true1989 ], [ %return2003, %true1998 ]
  ret i64 %UnifiedRetVal
}

; Function Attrs: nounwind readnone
declare i64 @"eq@III"(i64, i64) #1

; Function Attrs: nounwind
declare double* @"slice@[F[FIIIIII"(double*, i64, i64, i64, i64, i64, i64) #2

; Function Attrs: nounwind
declare double @"nrandom@F:S"(i8*) #2

; Function Attrs: alwaysinline
define private i64 @"sample_cdf@[FFI"(double* %rw01, double %rw12) #3 {
__llvm_entry:
  %rw24 = call { i64, double, double } @"sample_cdf@[FFIFF"(double* %rw01, double %rw12)
  %rw25 = extractvalue { i64, double, double } %rw24, 0
  ret i64 %rw25
}

; Function Attrs: nounwind readnone
declare { i64, double, double } @"sample_cdf@[FFIFF"(double*, double) #1

; Function Attrs: nounwind readnone
declare i64 @"lt@III"(i64, i64) #1

; Function Attrs: alwaysinline nounwind
define private double @"ATAN@FU"(<2 x double>* %p) #0 {
__llvm_entry:
  %p1 = load <2 x double>, <2 x double>* %p
  %return = call double @"getcomp@FUI"(<2 x double> %p1, i64 0)
  %return3 = call double @"getcomp@FUI"(<2 x double> %p1, i64 1)
  %return4 = call double @"atan2@FFF"(double %return, double %return3)
  ret double %return4
}

; Function Attrs: nounwind readnone
declare double @"getcomp@FUI"(<2 x double>, i64) #1

; Function Attrs: nounwind readnone
declare double @"atan2@FFF"(double, double) #1

; Function Attrs: alwaysinline nounwind
define private double @"ATANYX@FU"(<2 x double>* %p) #0 {
__llvm_entry:
  %p1 = load <2 x double>, <2 x double>* %p
  %return = call double @"getcomp@FUI"(<2 x double> %p1, i64 1)
  %return3 = call double @"getcomp@FUI"(<2 x double> %p1, i64 0)
  %return4 = call double @"atan2@FFF"(double %return, double %return3)
  ret double %return4
}

; Function Attrs: alwaysinline nounwind
define private double @"SUMSQ@FU"(<2 x double>* %p) #0 {
__llvm_entry:
  %p1 = load <2 x double>, <2 x double>* %p
  %return = call double @"getcomp@FUI"(<2 x double> %p1, i64 0)
  %output = fmul double %return, %return
  %return5 = call double @"getcomp@FUI"(<2 x double> %p1, i64 1)
  %output8 = fmul double %return5, %return5
  %output9 = fadd double %output, %output8
  ret double %output9
}

; Function Attrs: alwaysinline nounwind
define private double @"SQRT@FU"(<2 x double>* %p) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %p1 = load <2 x double>, <2 x double>* %p
  store <2 x double> %p1, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %return = call double @"sqrt@FF"(double %SUMSQ)
  ret double %return
}

; Function Attrs: nounwind readnone
declare double @"sqrt@FF"(double) #1

; Function Attrs: alwaysinline nounwind
define private double @"sgn@FF"(double* %n) #0 {
__llvm_entry:
  %n1 = load double, double* %n
  %return = fcmp olt double %n1, 0.000000e+00
  br i1 %return, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %return3 = call i64 @"neg@II"(i64 1)
  br label %end

false:                                            ; preds = %__llvm_entry
  %return5 = fcmp ogt double %n1, 0.000000e+00
  %. = select i1 %return5, i64 1, i64 0
  br label %end

end:                                              ; preds = %false, %true
  %phi10 = phi i64 [ %return3, %true ], [ %., %false ]
  %cast = sitofp i64 %phi10 to double
  ret double %cast
}

; Function Attrs: nounwind readnone
declare i64 @"neg@II"(i64) #1

; Function Attrs: alwaysinline nounwind
define private double @"fmod@FFF"(double* %a, double* %b) #0 {
__llvm_entry:
  %a1 = load double, double* %a
  %b3 = load double, double* %b
  %output = call double @"div@FF"(double %a1, double %b3)
  %return = call double @"floor@FF"(double %output)
  %output5 = fmul double %return, %b3
  %output6 = fsub double %a1, %output5
  ret double %output6
}

; Function Attrs: nounwind readnone
declare double @"div@FF"(double, double) #1

; Function Attrs: nounwind readnone
declare double @"floor@FF"(double) #1

; Function Attrs: alwaysinline nounwind
define private void @"sincos@FFF"(double* %a, double* %sa, double* %ca) #0 {
__llvm_entry:
  %a1 = load double, double* %a
  %return = call double @"sin@FF"(double %a1)
  store double %return, double* %sa
  %a2 = load double, double* %a
  %return3 = call double @"cos@FF"(double %a2)
  store double %return3, double* %ca
  ret void
}

; Function Attrs: nounwind readnone
declare double @"sin@FF"(double) #1

; Function Attrs: nounwind readnone
declare double @"cos@FF"(double) #1

; Function Attrs: alwaysinline nounwind
define private void @"precalc_V_DISC2@VFF"(<3 x double>* %disc2_precalc, double* %rot, double* %twist) #0 {
__llvm_entry:
  %0 = alloca double
  %1 = alloca double
  %2 = alloca double
  %rot1 = load double, double* %rot
  %output = fmul double %rot1, 0x400921FB4D12D84A
  %tmp = load <3 x double>, <3 x double>* %disc2_precalc
  %return = call { double, <3 x double> } @"setcomp@FVFI"(<3 x double> %tmp, double %output, i64 0)
  %output3 = extractvalue { double, <3 x double> } %return, 1
  store <3 x double> %output3, <3 x double>* %disc2_precalc
  %twist4 = load double, double* %twist
  store double %twist4, double* %0
  call void @"sincos@FFF"(double* %0, double* %1, double* %2)
  %arg = load double, double* %1
  %tmp5 = load <3 x double>, <3 x double>* %disc2_precalc
  %return6 = call { double, <3 x double> } @"setcomp@FVFI"(<3 x double> %tmp5, double %arg, i64 1)
  %output8 = extractvalue { double, <3 x double> } %return6, 1
  store <3 x double> %output8, <3 x double>* %disc2_precalc
  %arg9 = load double, double* %2
  %return11 = call { double, <3 x double> } @"setcomp@FVFI"(<3 x double> %output8, double %arg9, i64 2)
  %output13 = extractvalue { double, <3 x double> } %return11, 1
  store <3 x double> %output13, <3 x double>* %disc2_precalc
  %return15 = call double @"getcomp@FVI"(<3 x double> %output13, i64 2)
  %output16 = fsub double %return15, 1.000000e+00
  %return18 = call { double, <3 x double> } @"setcomp@FVFI"(<3 x double> %output13, double %output16, i64 2)
  %output20 = extractvalue { double, <3 x double> } %return18, 1
  store <3 x double> %output20, <3 x double>* %disc2_precalc
  %twist21 = load double, double* %twist
  %return22 = fcmp ogt double %twist21, 0x401921FB4D12D84A
  br i1 %return22, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %output25 = fadd double 1.000000e+00, %twist21
  %output26 = fsub double %output25, 0x401921FB4D12D84A
  %return28 = call double @"getcomp@FVI"(<3 x double> %output20, i64 2)
  %output30 = fmul double %return28, %output26
  %return32 = call { double, <3 x double> } @"setcomp@FVFI"(<3 x double> %output20, double %output30, i64 2)
  %output34 = extractvalue { double, <3 x double> } %return32, 1
  store <3 x double> %output34, <3 x double>* %disc2_precalc
  %return36 = call double @"getcomp@FVI"(<3 x double> %output34, i64 1)
  %output38 = fmul double %return36, %output26
  %return40 = call { double, <3 x double> } @"setcomp@FVFI"(<3 x double> %output34, double %output38, i64 1)
  %output42 = extractvalue { double, <3 x double> } %return40, 1
  store <3 x double> %output42, <3 x double>* %disc2_precalc
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %twist43 = load double, double* %twist
  %return44 = call i64 @"neg@II"(i64 2)
  %cast = sitofp i64 %return44 to double
  %output45 = fmul double %cast, 0x400921FB4D12D84A
  %return46 = fcmp olt double %twist43, %output45
  br i1 %return46, label %true48, label %end49

true48:                                           ; preds = %end
  %output51 = fadd double 1.000000e+00, %twist43
  %output52 = fadd double %output51, 0x401921FB4D12D84A
  %disc2_precalc53 = load <3 x double>, <3 x double>* %disc2_precalc
  %return54 = call double @"getcomp@FVI"(<3 x double> %disc2_precalc53, i64 2)
  %output56 = fmul double %return54, %output52
  %return58 = call { double, <3 x double> } @"setcomp@FVFI"(<3 x double> %disc2_precalc53, double %output56, i64 2)
  %output60 = extractvalue { double, <3 x double> } %return58, 1
  store <3 x double> %output60, <3 x double>* %disc2_precalc
  %return62 = call double @"getcomp@FVI"(<3 x double> %output60, i64 1)
  %output64 = fmul double %return62, %output52
  %return66 = call { double, <3 x double> } @"setcomp@FVFI"(<3 x double> %output60, double %output64, i64 1)
  %output68 = extractvalue { double, <3 x double> } %return66, 1
  store <3 x double> %output68, <3 x double>* %disc2_precalc
  br label %end49

end49:                                            ; preds = %true48, %end
  ret void
}

; Function Attrs: alwaysinline
define private { double, <3 x double> } @"setcomp@FVFI"(<3 x double> %rw11, double %rw22, i64 %rw33) #3 {
__llvm_entry:
  %rw16 = call <3 x double> @"setcomp@VFI"(<3 x double> %rw11, double %rw22, i64 %rw33)
  %mrv = insertvalue { double, <3 x double> } undef, double %rw22, 0
  %mrv9 = insertvalue { double, <3 x double> } %mrv, <3 x double> %rw16, 1
  ret { double, <3 x double> } %mrv9
}

; Function Attrs: nounwind readnone
declare <3 x double> @"setcomp@VFI"(<3 x double>, double, i64) #1

; Function Attrs: nounwind readnone
declare double @"getcomp@FVI"(<3 x double>, i64) #1

; Function Attrs: alwaysinline
define private { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %rw11, double %rw22, i64 %rw33) #3 {
__llvm_entry:
  %rw16 = call <2 x double> @"setcomp@UFI"(<2 x double> %rw11, double %rw22, i64 %rw33)
  %mrv = insertvalue { double, <2 x double> } undef, double %rw22, 0
  %mrv9 = insertvalue { double, <2 x double> } %mrv, <2 x double> %rw16, 1
  ret { double, <2 x double> } %mrv9
}

; Function Attrs: nounwind readnone
declare <2 x double> @"setcomp@UFI"(<2 x double>, double, i64) #1

; Function Attrs: nounwind readnone
declare double @"neg@FF"(double) #1

; Function Attrs: nounwind
declare double @"abs@FF"(double) #2

; Function Attrs: alwaysinline nounwind
define private <2 x double> @"biunit@U"() #0 {
__llvm_entry:
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output = fmul double 2.000000e+00, %return
  %output1 = fsub double %output, 1.000000e+00
  %return2 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output3 = fmul double 2.000000e+00, %return2
  %output4 = fsub double %output3, 1.000000e+00
  %return5 = call <2 x double> @"set@UFF"(double %output1, double %output4)
  ret <2 x double> %return5
}

; Function Attrs: nounwind readnone
declare <2 x double> @"set@UFF"(double, double) #1

; Function Attrs: alwaysinline nounwind
define private i64 @"chkPT@IIUF"(i64* %ACTIVE, <2 x double>* %vec, double* %alpha) #0 {
__llvm_entry:
  %ACTIVE1 = load i64, i64* %ACTIVE
  %0 = icmp ne i64 %ACTIVE1, 0
  br i1 %0, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %vec2 = load <2 x double>, <2 x double>* %vec
  %return = call double @"getcomp@FUI"(<2 x double> %vec2, i64 0)
  %return3 = call i64 @"isfinite@IF"(double %return)
  %return4 = call i64 @"not@II"(i64 %return3)
  %return6 = call double @"getcomp@FUI"(<2 x double> %vec2, i64 1)
  %return7 = call i64 @"isfinite@IF"(double %return6)
  %return8 = call i64 @"not@II"(i64 %return7)
  %return9 = call i64 @"or@III"(i64 %return4, i64 %return8)
  %return12 = call i64 @"isnan@IF"(double %return)
  %return13 = call i64 @"or@III"(i64 %return9, i64 %return12)
  %return16 = call i64 @"isnan@IF"(double %return6)
  %return17 = call i64 @"or@III"(i64 %return13, i64 %return16)
  %return19 = call double @"length@FU"(<2 x double> %vec2)
  %return20 = fcmp ogt double %return19, 1.000000e+03
  %return21 = zext i1 %return20 to i64
  %return22 = call i64 @"or@III"(i64 %return17, i64 %return21)
  %alpha23 = load double, double* %alpha
  %return24 = fcmp oeq double %alpha23, 0.000000e+00
  %return25 = zext i1 %return24 to i64
  %return26 = call i64 @"or@III"(i64 %return22, i64 %return25)
  %1 = icmp ne i64 %return26, 0
  %. = select i1 %1, i64 1, i64 0
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %merge = phi i64 [ 0, %__llvm_entry ], [ %., %true ]
  ret i64 %merge
}

; Function Attrs: nounwind readnone
declare i64 @"isfinite@IF"(double) #1

; Function Attrs: nounwind readnone
declare i64 @"not@II"(i64) #1

; Function Attrs: nounwind readnone
declare i64 @"or@III"(i64, i64) #1

; Function Attrs: nounwind readnone
declare i64 @"isnan@IF"(double) #1

; Function Attrs: nounwind
declare double @"length@FU"(<2 x double>) #2

; Function Attrs: alwaysinline nounwind
define private void @"V_SYM@UI"(<2 x double>* %p, i64* %num) #0 {
__llvm_entry:
  %num1 = load i64, i64* %num
  %return = call i64 @"not@II"(i64 %num1)
  %0 = icmp ne i64 %return, 0
  br i1 %0, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %return2 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output = call double @"div@FF"(double 1.000000e+00, double 3.000000e+00)
  %return3 = fcmp ogt double %return2, %output
  br i1 %return3, label %true5, label %end

false:                                            ; preds = %__llvm_entry
  %1 = icmp ne i64 %num1, 0
  br i1 %1, label %true13, label %end

end:                                              ; preds = %false45, %true53, %true44, %true35, %true26, %true13, %false, %true5, %true10, %true
  %ang.0 = phi double [ 2.400000e+02, %true10 ], [ 1.200000e+02, %true5 ], [ 0.000000e+00, %true ], [ 7.200000e+01, %true26 ], [ 1.440000e+02, %true35 ], [ 2.160000e+02, %true44 ], [ 2.880000e+02, %true53 ], [ 0.000000e+00, %false45 ], [ 0.000000e+00, %true13 ], [ 0.000000e+00, %false ]
  %p55 = load <2 x double>, <2 x double>* %p
  %return57 = call <3 x double> @"set@VFFF"(double 0.000000e+00, double 0.000000e+00, double %ang.0)
  %return58 = call <9 x double> @"maketransform@3IV"(i64 0, <3 x double> %return57)
  %cast59 = call <4 x double> @"set@23"(<9 x double> %return58)
  %output60 = call <2 x double> @"mul@U2"(<2 x double> %p55, <4 x double> %cast59)
  store <2 x double> %output60, <2 x double>* %p
  ret void

true5:                                            ; preds = %true
  %return7 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return8 = fcmp ogt double %return7, 5.000000e-01
  br i1 %return8, label %true10, label %end

true10:                                           ; preds = %true5
  br label %end

true13:                                           ; preds = %false
  %return15 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return16 = fcmp oge double %return15, 2.000000e-01
  br i1 %return16, label %true18, label %end

true18:                                           ; preds = %true13
  %return20 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return22 = fcmp olt double 2.000000e-01, %return20
  %return23 = zext i1 %return22 to i64
  %cast = sitofp i64 %return23 to double
  %return24 = fcmp ole double %cast, 4.000000e-01
  br i1 %return24, label %true26, label %false27

true26:                                           ; preds = %true18
  br label %end

false27:                                          ; preds = %true18
  %return30 = fcmp olt double 4.000000e-01, %return20
  %return31 = zext i1 %return30 to i64
  %cast32 = sitofp i64 %return31 to double
  %return33 = fcmp ole double %cast32, 6.000000e-01
  br i1 %return33, label %true35, label %false36

true35:                                           ; preds = %false27
  br label %end

false36:                                          ; preds = %false27
  %return39 = fcmp olt double 6.000000e-01, %return20
  %return40 = zext i1 %return39 to i64
  %cast41 = sitofp i64 %return40 to double
  %return42 = fcmp ole double %cast41, 8.000000e-01
  br i1 %return42, label %true44, label %false45

true44:                                           ; preds = %false36
  br label %end

false45:                                          ; preds = %false36
  %return48 = fcmp olt double 8.000000e-01, %return20
  %return49 = zext i1 %return48 to i64
  %cast50 = sitofp i64 %return49 to double
  %return51 = fcmp ole double %cast50, 1.000000e+00
  br i1 %return51, label %true53, label %end

true53:                                           ; preds = %false45
  br label %end
}

; Function Attrs: nounwind readnone
declare <3 x double> @"set@VFFF"(double, double, double) #1

; Function Attrs: nounwind readnone
declare <9 x double> @"maketransform@3IV"(i64, <3 x double>) #1

; Function Attrs: nounwind
declare <4 x double> @"set@23"(<9 x double>) #2

; Function Attrs: nounwind readnone
declare <2 x double> @"mul@U2"(<2 x double>, <4 x double>) #1

; Function Attrs: alwaysinline nounwind
define private void @"affine@UUUU"(<2 x double>* %p, <2 x double>* %x, <2 x double>* %y, <2 x double>* %o) #0 {
__llvm_entry:
  %x1 = load <2 x double>, <2 x double>* %x
  %return = call double @"getcomp@FUI"(<2 x double> %x1, i64 0)
  %p2 = load <2 x double>, <2 x double>* %p
  %return3 = call double @"getcomp@FUI"(<2 x double> %p2, i64 0)
  %output = fmul double %return, %return3
  %y4 = load <2 x double>, <2 x double>* %y
  %return5 = call double @"getcomp@FUI"(<2 x double> %y4, i64 0)
  %return7 = call double @"getcomp@FUI"(<2 x double> %p2, i64 1)
  %output8 = fmul double %return5, %return7
  %output9 = fadd double %output, %output8
  %o10 = load <2 x double>, <2 x double>* %o
  %return11 = call double @"getcomp@FUI"(<2 x double> %o10, i64 0)
  %output12 = fadd double %output9, %return11
  %return14 = call double @"getcomp@FUI"(<2 x double> %x1, i64 1)
  %output17 = fmul double %return14, %return3
  %return19 = call double @"getcomp@FUI"(<2 x double> %y4, i64 1)
  %output22 = fmul double %return19, %return7
  %output23 = fadd double %output17, %output22
  %return25 = call double @"getcomp@FUI"(<2 x double> %o10, i64 1)
  %output26 = fadd double %output23, %return25
  %return27 = call <2 x double> @"set@UFF"(double %output12, double %output26)
  store <2 x double> %return27, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"affineRot@2UUF"(<4 x double>* %m2, <2 x double>* %x, <2 x double>* %y, double* %ang) #0 {
__llvm_entry:
  %x1 = load <2 x double>, <2 x double>* %x
  %y2 = load <2 x double>, <2 x double>* %y
  %return = call <4 x double> @"set@2UU"(<2 x double> %x1, <2 x double> %y2)
  store <4 x double> %return, <4 x double>* %m2
  %ang4 = load double, double* %ang
  %output = call <4 x double> @"rotate@2F"(<4 x double> %return, double %ang4)
  store <4 x double> %output, <4 x double>* %m2
  ret void
}

; Function Attrs: nounwind
declare <4 x double> @"set@2UU"(<2 x double>, <2 x double>) #2

; Function Attrs: nounwind readnone
declare <4 x double> @"rotate@2F"(<4 x double>, double) #1

; Function Attrs: nounwind readnone
declare double @"getcomp@F[FI"(double*, i64) #1

; Function Attrs: nounwind
declare double* @"append@[FF"(double*, double) #2

; Function Attrs: alwaysinline nounwind
define private void @"gemBuild@Z3gemM52N2TMIN2FFIN3PFFIN3RIPIN2SMIN4iterIN3smmIN2MBIN3resIN3v1t[IN3v2t[IN3v3t[IN3v4t[IN3p1t[IN3p2t[IN3ppt[IN3PPL[IN4fv1tIN4fv2tIN4fv3tIN4fp1tIN4fp2tIN3v1w[FN3v2w[FN3v3w[FN3v4w[FN3p1w[FN3p2w[FN3pbw[FN3ppw[FN3CLR[FN2OM[FN1A[FN4fv1wFN4fv2wFN4fv3wFN4fp1wFN4fp2wFN1x[UN1y[UN1o[UN2px[UN2py[UN2po[UN2fxUN2fyUN2foUN3pfxUN3pfyUN3pfoUN4TMm22N3mbmF[S"(%gem* %this, i8*** %sIDX) #0 {
__llvm_entry:
  %_m2 = alloca <4 x double>
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  %3 = alloca <2 x double>
  %4 = alloca <2 x double>
  %5 = alloca double
  %6 = alloca <2 x double>
  %7 = alloca <2 x double>
  %8 = alloca double
  %9 = alloca <2 x double>
  %10 = alloca <2 x double>
  %11 = alloca double
  %return = call i64 @"chi@IS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @1, i64 0, i64 0))
  %tmp = load %gem, %gem* %this
  %12 = insertvalue %gem %tmp, i64 %return, 0
  %return1 = call i64 @"chi@IS"(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @2, i64 0, i64 0))
  %13 = insertvalue %gem %12, i64 %return1, 1
  %return3 = call i64 @"chi@IS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @3, i64 0, i64 0))
  %14 = insertvalue %gem %13, i64 %return3, 2
  %return5 = call i64 @"chi@IS"(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @4, i64 0, i64 0))
  %15 = insertvalue %gem %14, i64 %return5, 3
  %return7 = call i64 @"chi@IS"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @5, i64 0, i64 0))
  %16 = insertvalue %gem %15, i64 %return7, 4
  %return9 = call i64 @"chi@IS"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @6, i64 0, i64 0))
  %17 = insertvalue %gem %16, i64 %return9, 7
  %return11 = call i64 @"chi@IS"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @7, i64 0, i64 0))
  %18 = insertvalue %gem %17, i64 %return11, 5
  store %gem %18, %gem* %this
  %19 = icmp ne i64 %return7, 0
  br i1 %19, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %return14 = call i64 @"chi@IS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @8, i64 0, i64 0))
  %20 = insertvalue %gem %18, i64 %return14, 6
  store %gem %20, %gem* %this
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %this16 = load %gem, %gem* %this
  %MB = extractvalue %gem %this16, 7
  %21 = icmp ne i64 %MB, 0
  br i1 %21, label %true17, label %end18

true17:                                           ; preds = %end
  %return19 = call double @"detail@FISI"(i64 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @9, i64 0, i64 0), i64 0)
  %tmp20 = load %gem, %gem* %this
  %22 = insertvalue %gem %tmp20, double %return19, 51
  store %gem %22, %gem* %this
  br label %end18

end18:                                            ; preds = %true17, %end
  %sIDX21 = load i8**, i8*** %sIDX
  %return22 = call i64 @"len@I[S"(i8** %sIDX21)
  %tmp23 = load %gem, %gem* %this
  %23 = insertvalue %gem %tmp23, i64 %return22, 8
  %v1t = extractvalue %gem %23, 9
  %output = call i64* @"resize@[II"(i64* %v1t, i64 %return22)
  %24 = insertvalue %gem %23, i64* %output, 9
  %25 = insertvalue %gem %24, i64* %output, 16
  %26 = insertvalue %gem %25, i64* %output, 15
  %27 = insertvalue %gem %26, i64* %output, 14
  %28 = insertvalue %gem %27, i64* %output, 13
  %29 = insertvalue %gem %28, i64* %output, 12
  %30 = insertvalue %gem %29, i64* %output, 11
  %31 = insertvalue %gem %30, i64* %output, 10
  %v1w = extractvalue %gem %31, 22
  %output39 = call double* @"resize@[FI"(double* %v1w, i64 %return22)
  %32 = insertvalue %gem %31, double* %output39, 22
  %33 = insertvalue %gem %32, double* %output39, 32
  %34 = insertvalue %gem %33, double* %output39, 31
  %35 = insertvalue %gem %34, double* %output39, 30
  %36 = insertvalue %gem %35, double* %output39, 29
  %37 = insertvalue %gem %36, double* %output39, 28
  %38 = insertvalue %gem %37, double* %output39, 27
  %39 = insertvalue %gem %38, double* %output39, 26
  %40 = insertvalue %gem %39, double* %output39, 25
  %41 = insertvalue %gem %40, double* %output39, 24
  %42 = insertvalue %gem %41, double* %output39, 23
  %x = extractvalue %gem %42, 38
  %output56 = call <2 x double>* @"resize@[UI"(<2 x double>* %x, i64 %return22)
  %43 = insertvalue %gem %42, <2 x double>* %output56, 38
  %44 = insertvalue %gem %43, <2 x double>* %output56, 43
  %45 = insertvalue %gem %44, <2 x double>* %output56, 42
  %46 = insertvalue %gem %45, <2 x double>* %output56, 41
  %47 = insertvalue %gem %46, <2 x double>* %output56, 40
  %48 = insertvalue %gem %47, <2 x double>* %output56, 39
  store %gem %48, %gem* %this
  store <4 x double> zeroinitializer, <4 x double>* %_m2, !vex-initializer-store !3
  br label %cond

cond:                                             ; preds = %end355, %end18
  %i.0 = phi i64 [ 0, %end18 ], [ %output402, %end355 ]
  %this66 = load %gem, %gem* %this
  %res67 = extractvalue %gem %this66, 8
  %return68 = call i64 @"lt@III"(i64 %i.0, i64 %res67)
  %49 = icmp ne i64 %return68, 0
  br i1 %49, label %body, label %end69

body:                                             ; preds = %cond
  %sIDX70 = load i8**, i8*** %sIDX
  %return72 = call i8* @"getcomp@S[SI"(i8** %sIDX70, i64 %i.0)
  %return74 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @10, i64 0, i64 0), i8* %return72)
  %return75 = call double @"chf@FS"(i8* %return74)
  %return77 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @11, i64 0, i64 0), i8* %return72)
  %return78 = call double @"chf@FS"(i8* %return77)
  %output82 = fmul double %return78, %return75
  %tmp84 = extractvalue %gem %this66, 30
  %return85 = call { double, double* } @"setcomp@F[FFI"(double* %tmp84, double %output82, i64 %i.0)
  %output87 = extractvalue { double, double* } %return85, 1
  %50 = insertvalue %gem %this66, double* %output87, 30
  %output90 = fsub double 1.000000e+00, %return78
  %tmp92 = extractvalue %gem %50, 31
  %return93 = call { double, double* } @"setcomp@F[FFI"(double* %tmp92, double %output90, i64 %i.0)
  %output95 = extractvalue { double, double* } %return93, 1
  %51 = insertvalue %gem %50, double* %output95, 31
  %return98 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @12, i64 0, i64 0), i8* %return72)
  %return99 = call double @"chf@FS"(i8* %return98)
  %tmp101 = extractvalue %gem %51, 32
  %return102 = call { double, double* } @"setcomp@F[FFI"(double* %tmp101, double %return99, i64 %i.0)
  %output104 = extractvalue { double, double* } %return102, 1
  %52 = insertvalue %gem %51, double* %output104, 32
  %return107 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @13, i64 0, i64 0), i8* %return72)
  %return108 = call double @"chf@FS"(i8* %return107)
  %tmp110 = extractvalue %gem %52, 28
  %return111 = call { double, double* } @"setcomp@F[FFI"(double* %tmp110, double %return108, i64 %i.0)
  %output113 = extractvalue { double, double* } %return111, 1
  %53 = insertvalue %gem %52, double* %output113, 28
  %return116 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @14, i64 0, i64 0), i8* %return72)
  %return117 = call double @"chf@FS"(i8* %return116)
  %tmp119 = extractvalue %gem %53, 29
  %return120 = call { double, double* } @"setcomp@F[FFI"(double* %tmp119, double %return117, i64 %i.0)
  %output122 = extractvalue { double, double* } %return120, 1
  %54 = insertvalue %gem %53, double* %output122, 29
  store %gem %54, %gem* %this
  %return125 = call double @"getcomp@F[FI"(double* %output122, i64 %i.0)
  %return126 = fcmp ogt double %return125, 0.000000e+00
  br i1 %return126, label %true128, label %end129

end69:                                            ; preds = %cond
  %TM = extractvalue %gem %this66, 0
  %55 = icmp ne i64 %TM, 0
  br i1 %55, label %true404, label %end405

true128:                                          ; preds = %body
  %return132 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @15, i64 0, i64 0), i8* %return72)
  %return133 = call i8* @"chs@SS"(i8* %return132)
  %return134 = call i64 @"atoi@IS"(i8* %return133)
  %tmp136 = extractvalue %gem %54, 15
  %return137 = call { i64, i64* } @"setcomp@I[III"(i64* %tmp136, i64 %return134, i64 %i.0)
  %output139 = extractvalue { i64, i64* } %return137, 1
  %56 = insertvalue %gem %54, i64* %output139, 15
  store %gem %56, %gem* %this
  br label %end129

end129:                                           ; preds = %true128, %body
  %return142 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @16, i64 0, i64 0), i8* %return72)
  %return143 = call double @"chf@FS"(i8* %return142)
  %tmp144 = load %gem, %gem* %this
  %tmp145 = extractvalue %gem %tmp144, 27
  %return146 = call { double, double* } @"setcomp@F[FFI"(double* %tmp145, double %return143, i64 %i.0)
  %output148 = extractvalue { double, double* } %return146, 1
  %57 = insertvalue %gem %tmp144, double* %output148, 27
  store %gem %57, %gem* %this
  %return151 = call double @"getcomp@F[FI"(double* %output148, i64 %i.0)
  %return152 = fcmp ogt double %return151, 0.000000e+00
  br i1 %return152, label %true154, label %end155

true154:                                          ; preds = %end129
  %return158 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @17, i64 0, i64 0), i8* %return72)
  %return159 = call i8* @"chs@SS"(i8* %return158)
  %return160 = call i64 @"atoi@IS"(i8* %return159)
  %tmp162 = extractvalue %gem %57, 14
  %return163 = call { i64, i64* } @"setcomp@I[III"(i64* %tmp162, i64 %return160, i64 %i.0)
  %output165 = extractvalue { i64, i64* } %return163, 1
  %58 = insertvalue %gem %57, i64* %output165, 14
  store %gem %58, %gem* %this
  br label %end155

end155:                                           ; preds = %true154, %end129
  %return168 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @18, i64 0, i64 0), i8* %return72)
  %return169 = call double @"chf@FS"(i8* %return168)
  %tmp170 = load %gem, %gem* %this
  %tmp171 = extractvalue %gem %tmp170, 22
  %return172 = call { double, double* } @"setcomp@F[FFI"(double* %tmp171, double %return169, i64 %i.0)
  %output174 = extractvalue { double, double* } %return172, 1
  %59 = insertvalue %gem %tmp170, double* %output174, 22
  store %gem %59, %gem* %this
  %return178 = call double @"getcomp@F[FI"(double* %output174, i64 %i.0)
  %return179 = fcmp one double %return178, 0.000000e+00
  br i1 %return179, label %true181, label %end182

true181:                                          ; preds = %end155
  %return185 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @19, i64 0, i64 0), i8* %return72)
  %return186 = call i8* @"chs@SS"(i8* %return185)
  %return187 = call i64 @"atoi@IS"(i8* %return186)
  %tmp189 = extractvalue %gem %59, 9
  %return190 = call { i64, i64* } @"setcomp@I[III"(i64* %tmp189, i64 %return187, i64 %i.0)
  %output192 = extractvalue { i64, i64* } %return190, 1
  %60 = insertvalue %gem %59, i64* %output192, 9
  store %gem %60, %gem* %this
  br label %end182

end182:                                           ; preds = %true181, %end155
  %return195 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @20, i64 0, i64 0), i8* %return72)
  %return196 = call double @"chf@FS"(i8* %return195)
  %tmp197 = load %gem, %gem* %this
  %tmp198 = extractvalue %gem %tmp197, 23
  %return199 = call { double, double* } @"setcomp@F[FFI"(double* %tmp198, double %return196, i64 %i.0)
  %output201 = extractvalue { double, double* } %return199, 1
  %61 = insertvalue %gem %tmp197, double* %output201, 23
  store %gem %61, %gem* %this
  %return204 = call double @"getcomp@F[FI"(double* %output201, i64 %i.0)
  %return205 = fcmp one double %return204, 0.000000e+00
  br i1 %return205, label %true207, label %end208

true207:                                          ; preds = %end182
  %return211 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @21, i64 0, i64 0), i8* %return72)
  %return212 = call i8* @"chs@SS"(i8* %return211)
  %return213 = call i64 @"atoi@IS"(i8* %return212)
  %tmp215 = extractvalue %gem %61, 10
  %return216 = call { i64, i64* } @"setcomp@I[III"(i64* %tmp215, i64 %return213, i64 %i.0)
  %output218 = extractvalue { i64, i64* } %return216, 1
  %62 = insertvalue %gem %61, i64* %output218, 10
  store %gem %62, %gem* %this
  br label %end208

end208:                                           ; preds = %true207, %end182
  %return221 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @22, i64 0, i64 0), i8* %return72)
  %return222 = call double @"chf@FS"(i8* %return221)
  %tmp223 = load %gem, %gem* %this
  %tmp224 = extractvalue %gem %tmp223, 24
  %return225 = call { double, double* } @"setcomp@F[FFI"(double* %tmp224, double %return222, i64 %i.0)
  %output227 = extractvalue { double, double* } %return225, 1
  %63 = insertvalue %gem %tmp223, double* %output227, 24
  store %gem %63, %gem* %this
  %return230 = call double @"getcomp@F[FI"(double* %output227, i64 %i.0)
  %return231 = fcmp one double %return230, 0.000000e+00
  br i1 %return231, label %true233, label %end234

true233:                                          ; preds = %end208
  %return237 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @23, i64 0, i64 0), i8* %return72)
  %return238 = call i8* @"chs@SS"(i8* %return237)
  %return239 = call i64 @"atoi@IS"(i8* %return238)
  %tmp241 = extractvalue %gem %63, 11
  %return242 = call { i64, i64* } @"setcomp@I[III"(i64* %tmp241, i64 %return239, i64 %i.0)
  %output244 = extractvalue { i64, i64* } %return242, 1
  %64 = insertvalue %gem %63, i64* %output244, 11
  store %gem %64, %gem* %this
  br label %end234

end234:                                           ; preds = %true233, %end208
  %return247 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @24, i64 0, i64 0), i8* %return72)
  %return248 = call double @"chf@FS"(i8* %return247)
  %tmp249 = load %gem, %gem* %this
  %tmp250 = extractvalue %gem %tmp249, 25
  %return251 = call { double, double* } @"setcomp@F[FFI"(double* %tmp250, double %return248, i64 %i.0)
  %output253 = extractvalue { double, double* } %return251, 1
  %65 = insertvalue %gem %tmp249, double* %output253, 25
  store %gem %65, %gem* %this
  %return256 = call double @"getcomp@F[FI"(double* %output253, i64 %i.0)
  %return257 = fcmp one double %return256, 0.000000e+00
  br i1 %return257, label %true259, label %end260

true259:                                          ; preds = %end234
  %return263 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @25, i64 0, i64 0), i8* %return72)
  %return264 = call i8* @"chs@SS"(i8* %return263)
  %return265 = call i64 @"atoi@IS"(i8* %return264)
  %tmp267 = extractvalue %gem %65, 12
  %return268 = call { i64, i64* } @"setcomp@I[III"(i64* %tmp267, i64 %return265, i64 %i.0)
  %output270 = extractvalue { i64, i64* } %return268, 1
  %66 = insertvalue %gem %65, i64* %output270, 12
  store %gem %66, %gem* %this
  br label %end260

end260:                                           ; preds = %true259, %end234
  %return273 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @26, i64 0, i64 0), i8* %return72)
  %return274 = call double @"chf@FS"(i8* %return273)
  %tmp275 = load %gem, %gem* %this
  %tmp276 = extractvalue %gem %tmp275, 26
  %return277 = call { double, double* } @"setcomp@F[FFI"(double* %tmp276, double %return274, i64 %i.0)
  %output279 = extractvalue { double, double* } %return277, 1
  %67 = insertvalue %gem %tmp275, double* %output279, 26
  store %gem %67, %gem* %this
  %return282 = call double @"getcomp@F[FI"(double* %output279, i64 %i.0)
  %return283 = fcmp ogt double %return282, 0.000000e+00
  br i1 %return283, label %true285, label %end286

true285:                                          ; preds = %end260
  %return289 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @27, i64 0, i64 0), i8* %return72)
  %return290 = call i8* @"chs@SS"(i8* %return289)
  %return291 = call i64 @"atoi@IS"(i8* %return290)
  %tmp293 = extractvalue %gem %67, 13
  %return294 = call { i64, i64* } @"setcomp@I[III"(i64* %tmp293, i64 %return291, i64 %i.0)
  %output296 = extractvalue { i64, i64* } %return294, 1
  %68 = insertvalue %gem %67, i64* %output296, 13
  store %gem %68, %gem* %this
  br label %end286

end286:                                           ; preds = %true285, %end260
  %return298 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @28, i64 0, i64 0), i8* %return72)
  %return299 = call <2 x double> @"chu@US"(i8* %return298)
  %return301 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @29, i64 0, i64 0), i8* %return72)
  %return302 = call <2 x double> @"chu@US"(i8* %return301)
  %return304 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @30, i64 0, i64 0), i8* %return72)
  %return305 = call double @"chf@FS"(i8* %return304)
  store <2 x double> %return299, <2 x double>* %0
  store <2 x double> %return302, <2 x double>* %1
  %return309 = call double @"radians@FF"(double %return305)
  %return310 = call double @"neg@FF"(double %return309)
  store double %return310, double* %2
  call void @"affineRot@2UUF"(<4 x double>* %_m2, <2 x double>* %0, <2 x double>* %1, double* %2)
  %_m2312 = load <4 x double>, <4 x double>* %_m2
  %return313 = call double @"getcomp@F2II"(<4 x double> %_m2312, i64 0, i64 0)
  %return315 = call double @"getcomp@F2II"(<4 x double> %_m2312, i64 0, i64 1)
  %return316 = call <2 x double> @"set@UFF"(double %return313, double %return315)
  %tmp317 = load %gem, %gem* %this
  %tmp318 = extractvalue %gem %tmp317, 38
  %return319 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp318, <2 x double> %return316, i64 %i.0)
  %output321 = extractvalue { <2 x double>, <2 x double>* } %return319, 1
  %69 = insertvalue %gem %tmp317, <2 x double>* %output321, 38
  %return324 = call double @"getcomp@F2II"(<4 x double> %_m2312, i64 1, i64 0)
  %return326 = call double @"getcomp@F2II"(<4 x double> %_m2312, i64 1, i64 1)
  %return327 = call <2 x double> @"set@UFF"(double %return324, double %return326)
  %tmp329 = extractvalue %gem %69, 39
  %return330 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp329, <2 x double> %return327, i64 %i.0)
  %output332 = extractvalue { <2 x double>, <2 x double>* } %return330, 1
  %70 = insertvalue %gem %69, <2 x double>* %output332, 39
  %return335 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @31, i64 0, i64 0), i8* %return72)
  %return336 = call <2 x double> @"chu@US"(i8* %return335)
  %tmp338 = extractvalue %gem %70, 40
  %return339 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp338, <2 x double> %return336, i64 %i.0)
  %output341 = extractvalue { <2 x double>, <2 x double>* } %return339, 1
  %71 = insertvalue %gem %70, <2 x double>* %output341, 40
  %return344 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @32, i64 0, i64 0), i8* %return72)
  %return345 = call i64 @"chi@IS"(i8* %return344)
  %tmp347 = extractvalue %gem %71, 16
  %return348 = call { i64, i64* } @"setcomp@I[III"(i64* %tmp347, i64 %return345, i64 %i.0)
  %output350 = extractvalue { i64, i64* } %return348, 1
  %72 = insertvalue %gem %71, i64* %output350, 16
  store %gem %72, %gem* %this
  %return353 = call i64 @"getcomp@I[II"(i64* %output350, i64 %i.0)
  %73 = icmp ne i64 %return353, 0
  br i1 %73, label %true354, label %end355

true354:                                          ; preds = %end286
  %return357 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @33, i64 0, i64 0), i8* %return72)
  %return358 = call <2 x double> @"chu@US"(i8* %return357)
  %return360 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @34, i64 0, i64 0), i8* %return72)
  %return361 = call <2 x double> @"chu@US"(i8* %return360)
  %return363 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @35, i64 0, i64 0), i8* %return72)
  %return364 = call double @"chf@FS"(i8* %return363)
  store <2 x double> %return358, <2 x double>* %3
  store <2 x double> %return361, <2 x double>* %4
  %return368 = call double @"radians@FF"(double %return364)
  %return369 = call double @"neg@FF"(double %return368)
  store double %return369, double* %5
  call void @"affineRot@2UUF"(<4 x double>* %_m2, <2 x double>* %3, <2 x double>* %4, double* %5)
  %_m2371 = load <4 x double>, <4 x double>* %_m2
  %return372 = call double @"getcomp@F2II"(<4 x double> %_m2371, i64 0, i64 0)
  %return374 = call double @"getcomp@F2II"(<4 x double> %_m2371, i64 0, i64 1)
  %return375 = call <2 x double> @"set@UFF"(double %return372, double %return374)
  %tmp376 = load %gem, %gem* %this
  %tmp377 = extractvalue %gem %tmp376, 41
  %return378 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp377, <2 x double> %return375, i64 %i.0)
  %output380 = extractvalue { <2 x double>, <2 x double>* } %return378, 1
  %74 = insertvalue %gem %tmp376, <2 x double>* %output380, 41
  %return383 = call double @"getcomp@F2II"(<4 x double> %_m2371, i64 1, i64 0)
  %return385 = call double @"getcomp@F2II"(<4 x double> %_m2371, i64 1, i64 1)
  %return386 = call <2 x double> @"set@UFF"(double %return383, double %return385)
  %tmp388 = extractvalue %gem %74, 42
  %return389 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp388, <2 x double> %return386, i64 %i.0)
  %output391 = extractvalue { <2 x double>, <2 x double>* } %return389, 1
  %75 = insertvalue %gem %74, <2 x double>* %output391, 42
  %return394 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @36, i64 0, i64 0), i8* %return72)
  %return395 = call <2 x double> @"chu@US"(i8* %return394)
  %tmp397 = extractvalue %gem %75, 43
  %return398 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp397, <2 x double> %return395, i64 %i.0)
  %output400 = extractvalue { <2 x double>, <2 x double>* } %return398, 1
  %76 = insertvalue %gem %75, <2 x double>* %output400, 43
  store %gem %76, %gem* %this
  br label %end355

end355:                                           ; preds = %true354, %end286
  %output402 = add i64 %i.0, 1
  br label %cond

true404:                                          ; preds = %end69
  %return406 = call double @"chf@FS"(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @37, i64 0, i64 0))
  %return408 = call <3 x double> @"set@VFFF"(double 0.000000e+00, double 0.000000e+00, double %return406)
  %return409 = call <9 x double> @"maketransform@3IV"(i64 0, <3 x double> %return408)
  %cast = call <4 x double> @"set@23"(<9 x double> %return409)
  %tmp410 = load %gem, %gem* %this
  %77 = insertvalue %gem %tmp410, <4 x double> %cast, 50
  store %gem %77, %gem* %this
  br label %end405

end405:                                           ; preds = %true404, %end69
  %this411 = load %gem, %gem* %this
  %FF = extractvalue %gem %this411, 1
  %78 = icmp ne i64 %FF, 0
  br i1 %78, label %true412, label %end413

true412:                                          ; preds = %end405
  %return414 = call double @"chf@FS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @38, i64 0, i64 0))
  %79 = insertvalue %gem %this411, double %return414, 33
  store %gem %79, %gem* %this
  %return417 = fcmp one double %return414, 0.000000e+00
  br i1 %return417, label %true419, label %end420

end413:                                           ; preds = %end456, %true482, %end405
  ret void

true419:                                          ; preds = %true412
  %return421 = call i64 @"chi@IS"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @39, i64 0, i64 0))
  %80 = insertvalue %gem %79, i64 %return421, 17
  store %gem %80, %gem* %this
  br label %end420

end420:                                           ; preds = %true419, %true412
  %return423 = call double @"chf@FS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @40, i64 0, i64 0))
  %tmp424 = load %gem, %gem* %this
  %81 = insertvalue %gem %tmp424, double %return423, 34
  store %gem %81, %gem* %this
  %return426 = fcmp one double %return423, 0.000000e+00
  br i1 %return426, label %true428, label %end429

true428:                                          ; preds = %end420
  %return430 = call i64 @"chi@IS"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @41, i64 0, i64 0))
  %82 = insertvalue %gem %81, i64 %return430, 18
  store %gem %82, %gem* %this
  br label %end429

end429:                                           ; preds = %true428, %end420
  %return432 = call double @"chf@FS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @42, i64 0, i64 0))
  %tmp433 = load %gem, %gem* %this
  %83 = insertvalue %gem %tmp433, double %return432, 35
  store %gem %83, %gem* %this
  %return435 = fcmp one double %return432, 0.000000e+00
  br i1 %return435, label %true437, label %end438

true437:                                          ; preds = %end429
  %return439 = call i64 @"chi@IS"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @43, i64 0, i64 0))
  %84 = insertvalue %gem %83, i64 %return439, 19
  store %gem %84, %gem* %this
  br label %end438

end438:                                           ; preds = %true437, %end429
  %return441 = call double @"chf@FS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @44, i64 0, i64 0))
  %tmp442 = load %gem, %gem* %this
  %85 = insertvalue %gem %tmp442, double %return441, 36
  store %gem %85, %gem* %this
  %return444 = fcmp ogt double %return441, 0.000000e+00
  br i1 %return444, label %true446, label %end447

true446:                                          ; preds = %end438
  %return448 = call i64 @"chi@IS"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @45, i64 0, i64 0))
  %86 = insertvalue %gem %85, i64 %return448, 20
  store %gem %86, %gem* %this
  br label %end447

end447:                                           ; preds = %true446, %end438
  %return450 = call double @"chf@FS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @46, i64 0, i64 0))
  %tmp451 = load %gem, %gem* %this
  %87 = insertvalue %gem %tmp451, double %return450, 37
  store %gem %87, %gem* %this
  %return453 = fcmp ogt double %return450, 0.000000e+00
  br i1 %return453, label %true455, label %end456

true455:                                          ; preds = %end447
  %return457 = call i64 @"chi@IS"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @47, i64 0, i64 0))
  %88 = insertvalue %gem %87, i64 %return457, 21
  store %gem %88, %gem* %this
  br label %end456

end456:                                           ; preds = %true455, %end447
  %return459 = call <2 x double> @"chu@US"(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @48, i64 0, i64 0))
  %return460 = call <2 x double> @"chu@US"(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @49, i64 0, i64 0))
  %return461 = call double @"chf@FS"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @50, i64 0, i64 0))
  store <2 x double> %return459, <2 x double>* %6
  store <2 x double> %return460, <2 x double>* %7
  %return465 = call double @"radians@FF"(double %return461)
  %return466 = call double @"neg@FF"(double %return465)
  store double %return466, double* %8
  call void @"affineRot@2UUF"(<4 x double>* %_m2, <2 x double>* %6, <2 x double>* %7, double* %8)
  %_m2467 = load <4 x double>, <4 x double>* %_m2
  %return468 = call double @"getcomp@F2II"(<4 x double> %_m2467, i64 0, i64 0)
  %return470 = call double @"getcomp@F2II"(<4 x double> %_m2467, i64 0, i64 1)
  %return471 = call <2 x double> @"set@UFF"(double %return468, double %return470)
  %tmp472 = load %gem, %gem* %this
  %89 = insertvalue %gem %tmp472, <2 x double> %return471, 44
  %return474 = call double @"getcomp@F2II"(<4 x double> %_m2467, i64 1, i64 0)
  %return476 = call double @"getcomp@F2II"(<4 x double> %_m2467, i64 1, i64 1)
  %return477 = call <2 x double> @"set@UFF"(double %return474, double %return476)
  %90 = insertvalue %gem %89, <2 x double> %return477, 45
  %return479 = call <2 x double> @"chu@US"(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @51, i64 0, i64 0))
  %91 = insertvalue %gem %90, <2 x double> %return479, 46
  store %gem %91, %gem* %this
  %PFF = extractvalue %gem %91, 2
  %92 = icmp ne i64 %PFF, 0
  br i1 %92, label %true482, label %end413

true482:                                          ; preds = %end456
  %return484 = call <2 x double> @"chu@US"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @52, i64 0, i64 0))
  %return485 = call <2 x double> @"chu@US"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @53, i64 0, i64 0))
  %return486 = call double @"chf@FS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @54, i64 0, i64 0))
  store <2 x double> %return484, <2 x double>* %9
  store <2 x double> %return485, <2 x double>* %10
  %return490 = call double @"radians@FF"(double %return486)
  %return491 = call double @"neg@FF"(double %return490)
  store double %return491, double* %11
  call void @"affineRot@2UUF"(<4 x double>* %_m2, <2 x double>* %9, <2 x double>* %10, double* %11)
  %_m2492 = load <4 x double>, <4 x double>* %_m2
  %return493 = call double @"getcomp@F2II"(<4 x double> %_m2492, i64 0, i64 0)
  %return495 = call double @"getcomp@F2II"(<4 x double> %_m2492, i64 0, i64 1)
  %return496 = call <2 x double> @"set@UFF"(double %return493, double %return495)
  %tmp497 = load %gem, %gem* %this
  %93 = insertvalue %gem %tmp497, <2 x double> %return496, 47
  %return499 = call double @"getcomp@F2II"(<4 x double> %_m2492, i64 1, i64 0)
  %return501 = call double @"getcomp@F2II"(<4 x double> %_m2492, i64 1, i64 1)
  %return502 = call <2 x double> @"set@UFF"(double %return499, double %return501)
  %94 = insertvalue %gem %93, <2 x double> %return502, 48
  %return504 = call <2 x double> @"chu@US"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @55, i64 0, i64 0))
  %95 = insertvalue %gem %94, <2 x double> %return504, 49
  store %gem %95, %gem* %this
  br label %end413
}

; Function Attrs: nounwind readnone
declare i64 @"chi@IS"(i8*) #1

; Function Attrs: nounwind
declare double @"detail@FISI"(i64, i8*, i64) #2

; Function Attrs: nounwind readnone
declare i64 @"len@I[S"(i8**) #1

; Function Attrs: nounwind readnone
declare i64* @"resize@[II"(i64*, i64) #1

; Function Attrs: nounwind readnone
declare double* @"resize@[FI"(double*, i64) #1

; Function Attrs: nounwind readnone
declare <2 x double>* @"resize@[UI"(<2 x double>*, i64) #1

; Function Attrs: nounwind readnone
declare i8* @"getcomp@S[SI"(i8**, i64) #1

; Function Attrs: nounwind readnone
declare i8* @"concat@SSS"(i8*, i8*) #1

; Function Attrs: nounwind readnone
declare double @"chf@FS"(i8*) #1

; Function Attrs: nounwind readnone
declare { double, double* } @"setcomp@F[FFI"(double*, double, i64) #1

; Function Attrs: nounwind readnone
declare i8* @"chs@SS"(i8*) #1

; Function Attrs: nounwind readnone
declare i64 @"atoi@IS"(i8*) #1

; Function Attrs: nounwind readnone
declare { i64, i64* } @"setcomp@I[III"(i64*, i64, i64) #1

; Function Attrs: nounwind readnone
declare <2 x double> @"chu@US"(i8*) #1

; Function Attrs: nounwind
declare double @"radians@FF"(double) #2

; Function Attrs: nounwind readnone
declare double @"getcomp@F2II"(<4 x double>, i64, i64) #1

; Function Attrs: nounwind readnone
declare { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>*, <2 x double>, i64) #1

; Function Attrs: nounwind readnone
declare i64 @"getcomp@I[II"(i64*, i64) #1

; Function Attrs: alwaysinline nounwind
define private %gem @"gem@Z3gemM52N2TMIN2FFIN3PFFIN3RIPIN2SMIN4iterIN3smmIN2MBIN3resIN3v1t[IN3v2t[IN3v3t[IN3v4t[IN3p1t[IN3p2t[IN3ppt[IN3PPL[IN4fv1tIN4fv2tIN4fv3tIN4fp1tIN4fp2tIN3v1w[FN3v2w[FN3v3w[FN3v4w[FN3p1w[FN3p2w[FN3pbw[FN3ppw[FN3CLR[FN2OM[FN1A[FN4fv1wFN4fv2wFN4fv3wFN4fp1wFN4fp2wFN1x[UN1y[UN1o[UN2px[UN2py[UN2po[UN2fxUN2fyUN2foUN3pfxUN3pfyUN3pfoUN4TMm22N3mbmFIIIIIIIII[I[I[I[I[I[I[I[IIIIII[F[F[F[F[F[F[F[F[F[F[FFFFFF[U[U[U[U[U[UUUUUUU2F"(i64* %TM, i64* %FF, i64* %PFF, i64* %RIP, i64* %SM, i64* %iter, i64* %smm, i64* %MB, i64* %res, i64** %v1t, i64** %v2t, i64** %v3t, i64** %v4t, i64** %p1t, i64** %p2t, i64** %ppt, i64** %PPL, i64* %fv1t, i64* %fv2t, i64* %fv3t, i64* %fp1t, i64* %fp2t, double** %v1w, double** %v2w, double** %v3w, double** %v4w, double** %p1w, double** %p2w, double** %pbw, double** %ppw, double** %CLR, double** %OM, double** %A, double* %fv1w, double* %fv2w, double* %fv3w, double* %fp1w, double* %fp2w, <2 x double>** %x, <2 x double>** %y, <2 x double>** %o, <2 x double>** %px, <2 x double>** %py, <2 x double>** %po, <2 x double>* %fx, <2 x double>* %fy, <2 x double>* %fo, <2 x double>* %pfx, <2 x double>* %pfy, <2 x double>* %pfo, <4 x double>* %TMm2, double* %mbm) #0 {
__llvm_entry:
  %TM1 = load i64, i64* %TM
  %0 = insertvalue %gem undef, i64 %TM1, 0
  %FF2 = load i64, i64* %FF
  %1 = insertvalue %gem %0, i64 %FF2, 1
  %PFF4 = load i64, i64* %PFF
  %2 = insertvalue %gem %1, i64 %PFF4, 2
  %RIP6 = load i64, i64* %RIP
  %3 = insertvalue %gem %2, i64 %RIP6, 3
  %SM8 = load i64, i64* %SM
  %4 = insertvalue %gem %3, i64 %SM8, 4
  %iter10 = load i64, i64* %iter
  %5 = insertvalue %gem %4, i64 %iter10, 5
  %smm12 = load i64, i64* %smm
  %6 = insertvalue %gem %5, i64 %smm12, 6
  %MB14 = load i64, i64* %MB
  %7 = insertvalue %gem %6, i64 %MB14, 7
  %res16 = load i64, i64* %res
  %8 = insertvalue %gem %7, i64 %res16, 8
  %v1t18 = load i64*, i64** %v1t
  %9 = insertvalue %gem %8, i64* %v1t18, 9
  %v2t20 = load i64*, i64** %v2t
  %10 = insertvalue %gem %9, i64* %v2t20, 10
  %v3t22 = load i64*, i64** %v3t
  %11 = insertvalue %gem %10, i64* %v3t22, 11
  %v4t24 = load i64*, i64** %v4t
  %12 = insertvalue %gem %11, i64* %v4t24, 12
  %p1t26 = load i64*, i64** %p1t
  %13 = insertvalue %gem %12, i64* %p1t26, 13
  %p2t28 = load i64*, i64** %p2t
  %14 = insertvalue %gem %13, i64* %p2t28, 14
  %ppt30 = load i64*, i64** %ppt
  %15 = insertvalue %gem %14, i64* %ppt30, 15
  %PPL32 = load i64*, i64** %PPL
  %16 = insertvalue %gem %15, i64* %PPL32, 16
  %fv1t34 = load i64, i64* %fv1t
  %17 = insertvalue %gem %16, i64 %fv1t34, 17
  %fv2t36 = load i64, i64* %fv2t
  %18 = insertvalue %gem %17, i64 %fv2t36, 18
  %fv3t38 = load i64, i64* %fv3t
  %19 = insertvalue %gem %18, i64 %fv3t38, 19
  %fp1t40 = load i64, i64* %fp1t
  %20 = insertvalue %gem %19, i64 %fp1t40, 20
  %fp2t42 = load i64, i64* %fp2t
  %21 = insertvalue %gem %20, i64 %fp2t42, 21
  %v1w44 = load double*, double** %v1w
  %22 = insertvalue %gem %21, double* %v1w44, 22
  %v2w46 = load double*, double** %v2w
  %23 = insertvalue %gem %22, double* %v2w46, 23
  %v3w48 = load double*, double** %v3w
  %24 = insertvalue %gem %23, double* %v3w48, 24
  %v4w50 = load double*, double** %v4w
  %25 = insertvalue %gem %24, double* %v4w50, 25
  %p1w52 = load double*, double** %p1w
  %26 = insertvalue %gem %25, double* %p1w52, 26
  %p2w54 = load double*, double** %p2w
  %27 = insertvalue %gem %26, double* %p2w54, 27
  %pbw56 = load double*, double** %pbw
  %28 = insertvalue %gem %27, double* %pbw56, 28
  %ppw58 = load double*, double** %ppw
  %29 = insertvalue %gem %28, double* %ppw58, 29
  %CLR60 = load double*, double** %CLR
  %30 = insertvalue %gem %29, double* %CLR60, 30
  %OM62 = load double*, double** %OM
  %31 = insertvalue %gem %30, double* %OM62, 31
  %A64 = load double*, double** %A
  %32 = insertvalue %gem %31, double* %A64, 32
  %fv1w66 = load double, double* %fv1w
  %33 = insertvalue %gem %32, double %fv1w66, 33
  %fv2w68 = load double, double* %fv2w
  %34 = insertvalue %gem %33, double %fv2w68, 34
  %fv3w70 = load double, double* %fv3w
  %35 = insertvalue %gem %34, double %fv3w70, 35
  %fp1w72 = load double, double* %fp1w
  %36 = insertvalue %gem %35, double %fp1w72, 36
  %fp2w74 = load double, double* %fp2w
  %37 = insertvalue %gem %36, double %fp2w74, 37
  %x76 = load <2 x double>*, <2 x double>** %x
  %38 = insertvalue %gem %37, <2 x double>* %x76, 38
  %y78 = load <2 x double>*, <2 x double>** %y
  %39 = insertvalue %gem %38, <2 x double>* %y78, 39
  %o80 = load <2 x double>*, <2 x double>** %o
  %40 = insertvalue %gem %39, <2 x double>* %o80, 40
  %px82 = load <2 x double>*, <2 x double>** %px
  %41 = insertvalue %gem %40, <2 x double>* %px82, 41
  %py84 = load <2 x double>*, <2 x double>** %py
  %42 = insertvalue %gem %41, <2 x double>* %py84, 42
  %po86 = load <2 x double>*, <2 x double>** %po
  %43 = insertvalue %gem %42, <2 x double>* %po86, 43
  %fx88 = load <2 x double>, <2 x double>* %fx
  %44 = insertvalue %gem %43, <2 x double> %fx88, 44
  %fy90 = load <2 x double>, <2 x double>* %fy
  %45 = insertvalue %gem %44, <2 x double> %fy90, 45
  %fo92 = load <2 x double>, <2 x double>* %fo
  %46 = insertvalue %gem %45, <2 x double> %fo92, 46
  %pfx94 = load <2 x double>, <2 x double>* %pfx
  %47 = insertvalue %gem %46, <2 x double> %pfx94, 47
  %pfy96 = load <2 x double>, <2 x double>* %pfy
  %48 = insertvalue %gem %47, <2 x double> %pfy96, 48
  %pfo98 = load <2 x double>, <2 x double>* %pfo
  %49 = insertvalue %gem %48, <2 x double> %pfo98, 49
  %TMm2100 = load <4 x double>, <4 x double>* %TMm2
  %50 = insertvalue %gem %49, <4 x double> %TMm2100, 50
  %mbm102 = load double, double* %mbm
  %51 = insertvalue %gem %50, double %mbm102, 51
  ret %gem %51
}

; Function Attrs: alwaysinline nounwind
define private %gem @"gem@Z3gemM52N2TMIN2FFIN3PFFIN3RIPIN2SMIN4iterIN3smmIN2MBIN3resIN3v1t[IN3v2t[IN3v3t[IN3v4t[IN3p1t[IN3p2t[IN3ppt[IN3PPL[IN4fv1tIN4fv2tIN4fv3tIN4fp1tIN4fp2tIN3v1w[FN3v2w[FN3v3w[FN3v4w[FN3p1w[FN3p2w[FN3pbw[FN3ppw[FN3CLR[FN2OM[FN1A[FN4fv1wFN4fv2wFN4fv3wFN4fp1wFN4fp2wFN1x[UN1y[UN1o[UN2px[UN2py[UN2po[UN2fxUN2fyUN2foUN3pfxUN3pfyUN3pfoUN4TMm22N3mbmF"() #0 {
__llvm_entry:
  %0 = alloca i64
  %1 = alloca i64
  %2 = alloca i64
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca i64
  %8 = alloca i64*
  %9 = alloca i64*
  %10 = alloca i64*
  %11 = alloca i64*
  %12 = alloca i64*
  %13 = alloca i64*
  %14 = alloca i64*
  %15 = alloca i64*
  %16 = alloca i64
  %17 = alloca i64
  %18 = alloca i64
  %19 = alloca i64
  %20 = alloca i64
  %21 = alloca double*
  %22 = alloca double*
  %23 = alloca double*
  %24 = alloca double*
  %25 = alloca double*
  %26 = alloca double*
  %27 = alloca double*
  %28 = alloca double*
  %29 = alloca double*
  %30 = alloca double*
  %31 = alloca double*
  %32 = alloca double
  %33 = alloca double
  %34 = alloca double
  %35 = alloca double
  %36 = alloca double
  %37 = alloca <2 x double>*
  %38 = alloca <2 x double>*
  %39 = alloca <2 x double>*
  %40 = alloca <2 x double>*
  %41 = alloca <2 x double>*
  %42 = alloca <2 x double>*
  %43 = alloca <2 x double>
  %44 = alloca <2 x double>
  %45 = alloca <2 x double>
  %46 = alloca <2 x double>
  %47 = alloca <2 x double>
  %48 = alloca <2 x double>
  %49 = alloca <4 x double>
  %50 = alloca double
  %51 = alloca i64
  store i64 0, i64* %51
  store i64 0, i64* %0
  store i64 0, i64* %1
  store i64 0, i64* %2
  store i64 0, i64* %3
  store i64 0, i64* %4
  store i64 0, i64* %5
  store i64 0, i64* %6
  store i64 0, i64* %7
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @56, i64 0, i64 0), i64** %8
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @56, i64 0, i64 0), i64** %9
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @56, i64 0, i64 0), i64** %10
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @56, i64 0, i64 0), i64** %11
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @56, i64 0, i64 0), i64** %12
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @56, i64 0, i64 0), i64** %13
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @56, i64 0, i64 0), i64** %14
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @56, i64 0, i64 0), i64** %15
  store i64 0, i64* %16
  store i64 0, i64* %17
  store i64 0, i64* %18
  store i64 0, i64* %19
  store i64 0, i64* %20
  store double* getelementptr inbounds ([0 x double], [0 x double]* @57, i64 0, i64 0), double** %21
  store double* getelementptr inbounds ([0 x double], [0 x double]* @57, i64 0, i64 0), double** %22
  store double* getelementptr inbounds ([0 x double], [0 x double]* @57, i64 0, i64 0), double** %23
  store double* getelementptr inbounds ([0 x double], [0 x double]* @57, i64 0, i64 0), double** %24
  store double* getelementptr inbounds ([0 x double], [0 x double]* @57, i64 0, i64 0), double** %25
  store double* getelementptr inbounds ([0 x double], [0 x double]* @57, i64 0, i64 0), double** %26
  store double* getelementptr inbounds ([0 x double], [0 x double]* @57, i64 0, i64 0), double** %27
  store double* getelementptr inbounds ([0 x double], [0 x double]* @57, i64 0, i64 0), double** %28
  store double* getelementptr inbounds ([0 x double], [0 x double]* @57, i64 0, i64 0), double** %29
  store double* getelementptr inbounds ([0 x double], [0 x double]* @57, i64 0, i64 0), double** %30
  store double* getelementptr inbounds ([0 x double], [0 x double]* @57, i64 0, i64 0), double** %31
  store double 0.000000e+00, double* %32
  store double 0.000000e+00, double* %33
  store double 0.000000e+00, double* %34
  store double 0.000000e+00, double* %35
  store double 0.000000e+00, double* %36
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @58, i64 0, i64 0), <2 x double>** %37
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @58, i64 0, i64 0), <2 x double>** %38
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @58, i64 0, i64 0), <2 x double>** %39
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @58, i64 0, i64 0), <2 x double>** %40
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @58, i64 0, i64 0), <2 x double>** %41
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @58, i64 0, i64 0), <2 x double>** %42
  store <2 x double> zeroinitializer, <2 x double>* %43
  store <2 x double> zeroinitializer, <2 x double>* %44
  store <2 x double> zeroinitializer, <2 x double>* %45
  store <2 x double> zeroinitializer, <2 x double>* %46
  store <2 x double> zeroinitializer, <2 x double>* %47
  store <2 x double> zeroinitializer, <2 x double>* %48
  store <4 x double> zeroinitializer, <4 x double>* %49
  store double 1.000000e+00, double* %50
  %gem = call %gem @"gem@Z3gemM52N2TMIN2FFIN3PFFIN3RIPIN2SMIN4iterIN3smmIN2MBIN3resIN3v1t[IN3v2t[IN3v3t[IN3v4t[IN3p1t[IN3p2t[IN3ppt[IN3PPL[IN4fv1tIN4fv2tIN4fv3tIN4fp1tIN4fp2tIN3v1w[FN3v2w[FN3v3w[FN3v4w[FN3p1w[FN3p2w[FN3pbw[FN3ppw[FN3CLR[FN2OM[FN1A[FN4fv1wFN4fv2wFN4fv3wFN4fp1wFN4fp2wFN1x[UN1y[UN1o[UN2px[UN2py[UN2po[UN2fxUN2fyUN2foUN3pfxUN3pfyUN3pfoUN4TMm22N3mbmFIIIIIIIII[I[I[I[I[I[I[I[IIIIII[F[F[F[F[F[F[F[F[F[F[FFFFFF[U[U[U[U[U[UUUUUUU2F"(i64* %51, i64* %0, i64* %1, i64* %2, i64* %3, i64* %4, i64* %5, i64* %6, i64* %7, i64** %8, i64** %9, i64** %10, i64** %11, i64** %12, i64** %13, i64** %14, i64** %15, i64* %16, i64* %17, i64* %18, i64* %19, i64* %20, double** %21, double** %22, double** %23, double** %24, double** %25, double** %26, double** %27, double** %28, double** %29, double** %30, double** %31, double* %32, double* %33, double* %34, double* %35, double* %36, <2 x double>** %37, <2 x double>** %38, <2 x double>** %39, <2 x double>** %40, <2 x double>** %41, <2 x double>** %42, <2 x double>* %43, <2 x double>* %44, <2 x double>* %45, <2 x double>* %46, <2 x double>* %47, <2 x double>* %48, <4 x double>* %49, double* %50)
  ret %gem %gem
}

; Function Attrs: alwaysinline nounwind
define private void @"gemPrmBuild@Z6gemPrmM52N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PN8pc_DISC2[V[SI[I[F"(%gemPrm* %this, i8*** %sIDX, i64* %res, i64** %TYPE, double** %w) #0 {
__llvm_entry:
  %calc = alloca <3 x double>
  %0 = alloca double
  %1 = alloca double
  %TYPE1 = load i64*, i64** %TYPE
  %return = call i64 @"max@I[I"(i64* %TYPE1)
  %return2 = call i64 @"gt@III"(i64 %return, i64 26)
  %2 = icmp ne i64 %return2, 0
  br i1 %2, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %this3 = load %gemPrm, %gemPrm* %this
  %rings2_val = extractvalue %gemPrm %this3, 0
  %res4 = load i64, i64* %res
  %output = call double* @"resize@[FI"(double* %rings2_val, i64 %res4)
  %3 = insertvalue %gemPrm %this3, double* %output, 0
  %4 = insertvalue %gemPrm %3, double* %output, 5
  %5 = insertvalue %gemPrm %4, double* %output, 4
  %6 = insertvalue %gemPrm %5, double* %output, 3
  %7 = insertvalue %gemPrm %6, double* %output, 2
  %8 = insertvalue %gemPrm %7, double* %output, 1
  store %gemPrm %8, %gemPrm* %this
  %blob = extractvalue %gemPrm %8, 6
  %res13 = load i64, i64* %res
  %output14 = call <3 x double>* @"resize@[VI"(<3 x double>* %blob, i64 %res13)
  %9 = insertvalue %gemPrm %8, <3 x double>* %output14, 6
  %10 = insertvalue %gemPrm %9, <3 x double>* %output14, 11
  %11 = insertvalue %gemPrm %10, <3 x double>* %output14, 10
  %12 = insertvalue %gemPrm %11, <3 x double>* %output14, 9
  %13 = insertvalue %gemPrm %12, <3 x double>* %output14, 8
  %14 = insertvalue %gemPrm %13, <3 x double>* %output14, 7
  %15 = insertvalue %gemPrm %14, <3 x double>* %output14, 51
  store %gemPrm %15, %gemPrm* %this
  %curl_c = extractvalue %gemPrm %15, 13
  %res25 = load i64, i64* %res
  %output26 = call <2 x double>* @"resize@[UI"(<2 x double>* %curl_c, i64 %res25)
  %16 = insertvalue %gemPrm %15, <2 x double>* %output26, 13
  %17 = insertvalue %gemPrm %16, <2 x double>* %output26, 41
  %18 = insertvalue %gemPrm %17, <2 x double>* %output26, 40
  %19 = insertvalue %gemPrm %18, <2 x double>* %output26, 39
  %20 = insertvalue %gemPrm %19, <2 x double>* %output26, 38
  %21 = insertvalue %gemPrm %20, <2 x double>* %output26, 37
  %22 = insertvalue %gemPrm %21, <2 x double>* %output26, 36
  %23 = insertvalue %gemPrm %22, <2 x double>* %output26, 35
  %24 = insertvalue %gemPrm %23, <2 x double>* %output26, 34
  %25 = insertvalue %gemPrm %24, <2 x double>* %output26, 33
  %26 = insertvalue %gemPrm %25, <2 x double>* %output26, 32
  %27 = insertvalue %gemPrm %26, <2 x double>* %output26, 31
  %28 = insertvalue %gemPrm %27, <2 x double>* %output26, 30
  %29 = insertvalue %gemPrm %28, <2 x double>* %output26, 29
  %30 = insertvalue %gemPrm %29, <2 x double>* %output26, 28
  %31 = insertvalue %gemPrm %30, <2 x double>* %output26, 27
  %32 = insertvalue %gemPrm %31, <2 x double>* %output26, 26
  %33 = insertvalue %gemPrm %32, <2 x double>* %output26, 25
  %34 = insertvalue %gemPrm %33, <2 x double>* %output26, 24
  %35 = insertvalue %gemPrm %34, <2 x double>* %output26, 23
  %36 = insertvalue %gemPrm %35, <2 x double>* %output26, 22
  %37 = insertvalue %gemPrm %36, <2 x double>* %output26, 21
  %38 = insertvalue %gemPrm %37, <2 x double>* %output26, 20
  %39 = insertvalue %gemPrm %38, <2 x double>* %output26, 19
  %40 = insertvalue %gemPrm %39, <2 x double>* %output26, 18
  %41 = insertvalue %gemPrm %40, <2 x double>* %output26, 17
  %42 = insertvalue %gemPrm %41, <2 x double>* %output26, 16
  %43 = insertvalue %gemPrm %42, <2 x double>* %output26, 15
  %44 = insertvalue %gemPrm %43, <2 x double>* %output26, 14
  store %gemPrm %44, %gemPrm* %this
  %ngon = extractvalue %gemPrm %44, 42
  %res59 = load i64, i64* %res
  %output60 = call <4 x double>* @"resize@[PI"(<4 x double>* %ngon, i64 %res59)
  %45 = insertvalue %gemPrm %44, <4 x double>* %output60, 42
  %46 = insertvalue %gemPrm %45, <4 x double>* %output60, 50
  %47 = insertvalue %gemPrm %46, <4 x double>* %output60, 49
  %48 = insertvalue %gemPrm %47, <4 x double>* %output60, 48
  %49 = insertvalue %gemPrm %48, <4 x double>* %output60, 47
  %50 = insertvalue %gemPrm %49, <4 x double>* %output60, 46
  %51 = insertvalue %gemPrm %50, <4 x double>* %output60, 45
  %52 = insertvalue %gemPrm %51, <4 x double>* %output60, 44
  %53 = insertvalue %gemPrm %52, <4 x double>* %output60, 43
  store %gemPrm %53, %gemPrm* %this
  br label %cond

end:                                              ; preds = %cond, %__llvm_entry
  ret void

cond:                                             ; preds = %iter, %true
  %i.0 = phi i64 [ 0, %true ], [ %output793, %iter ]
  %res73 = load i64, i64* %res
  %return74 = call i64 @"lt@III"(i64 %i.0, i64 %res73)
  %54 = icmp ne i64 %return74, 0
  br i1 %54, label %body, label %end

body:                                             ; preds = %cond
  %TYPE76 = load i64*, i64** %TYPE
  %return78 = call i64 @"getcomp@I[II"(i64* %TYPE76, i64 %i.0)
  %sIDX79 = load i8**, i8*** %sIDX
  %return81 = call i8* @"getcomp@S[SI"(i8** %sIDX79, i64 %i.0)
  %return83 = call i64 @"lt@III"(i64 %return78, i64 27)
  %w84 = load double*, double** %w
  %return86 = call double @"getcomp@F[FI"(double* %w84, i64 %i.0)
  %return87 = fcmp oeq double %return86, 0.000000e+00
  %return88 = zext i1 %return87 to i64
  %return89 = call i64 @"or@III"(i64 %return83, i64 %return88)
  %55 = icmp ne i64 %return89, 0
  br i1 %55, label %iter, label %false

iter:                                             ; preds = %false741, %false575, %false96, %false384, %false218, %body, %true763, %true740, %true726, %true703, %true680, %true666, %true652, %true629, %true615, %true601, %true588, %true574, %true560, %true546, %true532, %true509, %true486, %true472, %true458, %true435, %true421, %true397, %true383, %true369, %true355, %true341, %true327, %true313, %true290, %true258, %true244, %true231, %true217, %true203, %true189, %true175, %true161, %true147, %true133, %true119, %true105
  %output793 = add i64 %i.0, 1
  br label %cond

false:                                            ; preds = %body
  %cast = sitofp i64 %return78 to double
  %return93 = call i64 @"find@I[FF"(double* getelementptr inbounds ([20 x double], [20 x double]* @59, i64 0, i64 0), double %cast)
  %return94 = call i64 @"ge@III"(i64 %return93, i64 0)
  %56 = icmp ne i64 %return94, 0
  br i1 %56, label %true95, label %false96

true95:                                           ; preds = %false
  %return99 = call i64 @"lt@III"(i64 %return78, i64 38)
  %57 = icmp ne i64 %return99, 0
  br i1 %57, label %true100, label %false101

false96:                                          ; preds = %false
  %return410 = call i64 @"find@I[FF"(double* getelementptr inbounds ([21 x double], [21 x double]* @81, i64 0, i64 0), double %cast)
  %return411 = call i64 @"ge@III"(i64 %return410, i64 0)
  %58 = icmp ne i64 %return411, 0
  br i1 %58, label %true412, label %iter

true100:                                          ; preds = %true95
  %return104 = call i64 @"eq@III"(i64 %return78, i64 27)
  %59 = icmp ne i64 %return104, 0
  br i1 %59, label %true105, label %false106

false101:                                         ; preds = %true95
  %return243 = call i64 @"eq@III"(i64 %return78, i64 38)
  %60 = icmp ne i64 %return243, 0
  br i1 %60, label %true244, label %false245

true105:                                          ; preds = %true100
  %return110 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @60, i64 0, i64 0), i8* %return81)
  %return111 = call <2 x double> @"chu@US"(i8* %return110)
  %tmp112 = load %gemPrm, %gemPrm* %this
  %tmp113 = extractvalue %gemPrm %tmp112, 13
  %return114 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp113, <2 x double> %return111, i64 %i.0)
  %output116 = extractvalue { <2 x double>, <2 x double>* } %return114, 1
  %61 = insertvalue %gemPrm %tmp112, <2 x double>* %output116, 13
  store %gemPrm %61, %gemPrm* %this
  br label %iter

false106:                                         ; preds = %true100
  %return118 = call i64 @"eq@III"(i64 %return78, i64 28)
  %62 = icmp ne i64 %return118, 0
  br i1 %62, label %true119, label %false120

true119:                                          ; preds = %false106
  %return124 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @61, i64 0, i64 0), i8* %return81)
  %return125 = call <4 x double> @"chp@PS"(i8* %return124)
  %tmp126 = load %gemPrm, %gemPrm* %this
  %tmp127 = extractvalue %gemPrm %tmp126, 42
  %return128 = call { <4 x double>, <4 x double>* } @"setcomp@P[PPI"(<4 x double>* %tmp127, <4 x double> %return125, i64 %i.0)
  %output130 = extractvalue { <4 x double>, <4 x double>* } %return128, 1
  %63 = insertvalue %gemPrm %tmp126, <4 x double>* %output130, 42
  store %gemPrm %63, %gemPrm* %this
  br label %iter

false120:                                         ; preds = %false106
  %return132 = call i64 @"eq@III"(i64 %return78, i64 29)
  %64 = icmp ne i64 %return132, 0
  br i1 %64, label %true133, label %false134

true133:                                          ; preds = %false120
  %return138 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @62, i64 0, i64 0), i8* %return81)
  %return139 = call <4 x double> @"chp@PS"(i8* %return138)
  %tmp140 = load %gemPrm, %gemPrm* %this
  %tmp141 = extractvalue %gemPrm %tmp140, 43
  %return142 = call { <4 x double>, <4 x double>* } @"setcomp@P[PPI"(<4 x double>* %tmp141, <4 x double> %return139, i64 %i.0)
  %output144 = extractvalue { <4 x double>, <4 x double>* } %return142, 1
  %65 = insertvalue %gemPrm %tmp140, <4 x double>* %output144, 43
  store %gemPrm %65, %gemPrm* %this
  br label %iter

false134:                                         ; preds = %false120
  %return146 = call i64 @"eq@III"(i64 %return78, i64 30)
  %66 = icmp ne i64 %return146, 0
  br i1 %66, label %true147, label %false148

true147:                                          ; preds = %false134
  %return152 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @63, i64 0, i64 0), i8* %return81)
  %return153 = call <3 x double> @"chv@VS"(i8* %return152)
  %tmp154 = load %gemPrm, %gemPrm* %this
  %tmp155 = extractvalue %gemPrm %tmp154, 6
  %return156 = call { <3 x double>, <3 x double>* } @"setcomp@V[VVI"(<3 x double>* %tmp155, <3 x double> %return153, i64 %i.0)
  %output158 = extractvalue { <3 x double>, <3 x double>* } %return156, 1
  %67 = insertvalue %gemPrm %tmp154, <3 x double>* %output158, 6
  store %gemPrm %67, %gemPrm* %this
  br label %iter

false148:                                         ; preds = %false134
  %return160 = call i64 @"eq@III"(i64 %return78, i64 31)
  %68 = icmp ne i64 %return160, 0
  br i1 %68, label %true161, label %false162

true161:                                          ; preds = %false148
  %return166 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @64, i64 0, i64 0), i8* %return81)
  %return167 = call <2 x double> @"chu@US"(i8* %return166)
  %tmp168 = load %gemPrm, %gemPrm* %this
  %tmp169 = extractvalue %gemPrm %tmp168, 32
  %return170 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp169, <2 x double> %return167, i64 %i.0)
  %output172 = extractvalue { <2 x double>, <2 x double>* } %return170, 1
  %69 = insertvalue %gemPrm %tmp168, <2 x double>* %output172, 32
  store %gemPrm %69, %gemPrm* %this
  br label %iter

false162:                                         ; preds = %false148
  %return174 = call i64 @"eq@III"(i64 %return78, i64 32)
  %70 = icmp ne i64 %return174, 0
  br i1 %70, label %true175, label %false176

true175:                                          ; preds = %false162
  %return180 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @65, i64 0, i64 0), i8* %return81)
  %return181 = call <2 x double> @"chu@US"(i8* %return180)
  %tmp182 = load %gemPrm, %gemPrm* %this
  %tmp183 = extractvalue %gemPrm %tmp182, 33
  %return184 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp183, <2 x double> %return181, i64 %i.0)
  %output186 = extractvalue { <2 x double>, <2 x double>* } %return184, 1
  %71 = insertvalue %gemPrm %tmp182, <2 x double>* %output186, 33
  store %gemPrm %71, %gemPrm* %this
  br label %iter

false176:                                         ; preds = %false162
  %return188 = call i64 @"eq@III"(i64 %return78, i64 34)
  %72 = icmp ne i64 %return188, 0
  br i1 %72, label %true189, label %false190

true189:                                          ; preds = %false176
  %return194 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @66, i64 0, i64 0), i8* %return81)
  %return195 = call <2 x double> @"chu@US"(i8* %return194)
  %tmp196 = load %gemPrm, %gemPrm* %this
  %tmp197 = extractvalue %gemPrm %tmp196, 15
  %return198 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp197, <2 x double> %return195, i64 %i.0)
  %output200 = extractvalue { <2 x double>, <2 x double>* } %return198, 1
  %73 = insertvalue %gemPrm %tmp196, <2 x double>* %output200, 15
  store %gemPrm %73, %gemPrm* %this
  br label %iter

false190:                                         ; preds = %false176
  %return202 = call i64 @"eq@III"(i64 %return78, i64 35)
  %74 = icmp ne i64 %return202, 0
  br i1 %74, label %true203, label %false204

true203:                                          ; preds = %false190
  %return208 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @67, i64 0, i64 0), i8* %return81)
  %return209 = call double @"chf@FS"(i8* %return208)
  %tmp210 = load %gemPrm, %gemPrm* %this
  %tmp211 = extractvalue %gemPrm %tmp210, 0
  %return212 = call { double, double* } @"setcomp@F[FFI"(double* %tmp211, double %return209, i64 %i.0)
  %output214 = extractvalue { double, double* } %return212, 1
  %75 = insertvalue %gemPrm %tmp210, double* %output214, 0
  store %gemPrm %75, %gemPrm* %this
  br label %iter

false204:                                         ; preds = %false190
  %return216 = call i64 @"eq@III"(i64 %return78, i64 36)
  %76 = icmp ne i64 %return216, 0
  br i1 %76, label %true217, label %false218

true217:                                          ; preds = %false204
  %return222 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @68, i64 0, i64 0), i8* %return81)
  %return223 = call <2 x double> @"chu@US"(i8* %return222)
  %tmp224 = load %gemPrm, %gemPrm* %this
  %tmp225 = extractvalue %gemPrm %tmp224, 16
  %return226 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp225, <2 x double> %return223, i64 %i.0)
  %output228 = extractvalue { <2 x double>, <2 x double>* } %return226, 1
  %77 = insertvalue %gemPrm %tmp224, <2 x double>* %output228, 16
  store %gemPrm %77, %gemPrm* %this
  br label %iter

false218:                                         ; preds = %false204
  %return230 = call i64 @"eq@III"(i64 %return78, i64 37)
  %78 = icmp ne i64 %return230, 0
  br i1 %78, label %true231, label %iter

true231:                                          ; preds = %false218
  %return235 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @69, i64 0, i64 0), i8* %return81)
  %return236 = call <2 x double> @"chu@US"(i8* %return235)
  %tmp237 = load %gemPrm, %gemPrm* %this
  %tmp238 = extractvalue %gemPrm %tmp237, 34
  %return239 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp238, <2 x double> %return236, i64 %i.0)
  %output241 = extractvalue { <2 x double>, <2 x double>* } %return239, 1
  %79 = insertvalue %gemPrm %tmp237, <2 x double>* %output241, 34
  store %gemPrm %79, %gemPrm* %this
  br label %iter

true244:                                          ; preds = %false101
  %return249 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @70, i64 0, i64 0), i8* %return81)
  %return250 = call <3 x double> @"chv@VS"(i8* %return249)
  %tmp251 = load %gemPrm, %gemPrm* %this
  %tmp252 = extractvalue %gemPrm %tmp251, 7
  %return253 = call { <3 x double>, <3 x double>* } @"setcomp@V[VVI"(<3 x double>* %tmp252, <3 x double> %return250, i64 %i.0)
  %output255 = extractvalue { <3 x double>, <3 x double>* } %return253, 1
  %80 = insertvalue %gemPrm %tmp251, <3 x double>* %output255, 7
  store %gemPrm %80, %gemPrm* %this
  br label %iter

false245:                                         ; preds = %false101
  %return257 = call i64 @"eq@III"(i64 %return78, i64 47)
  %81 = icmp ne i64 %return257, 0
  br i1 %81, label %true258, label %false259

true258:                                          ; preds = %false245
  %return263 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @71, i64 0, i64 0), i8* %return81)
  %return264 = call <2 x double> @"chu@US"(i8* %return263)
  %tmp265 = load %gemPrm, %gemPrm* %this
  %tmp266 = extractvalue %gemPrm %tmp265, 35
  %return267 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp266, <2 x double> %return264, i64 %i.0)
  %output269 = extractvalue { <2 x double>, <2 x double>* } %return267, 1
  %82 = insertvalue %gemPrm %tmp265, <2 x double>* %output269, 35
  store %gemPrm %82, %gemPrm* %this
  %return272 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %output269, i64 %i.0)
  %return273 = call double @"getcomp@FUI"(<2 x double> %return272, i64 0)
  %return278 = call double @"getcomp@FUI"(<2 x double> %return272, i64 1)
  store <3 x double> zeroinitializer, <3 x double>* %calc, !vex-initializer-store !3
  store double %return273, double* %0
  store double %return278, double* %1
  call void @"precalc_V_DISC2@VFF"(<3 x double>* %calc, double* %0, double* %1)
  %calc282 = load <3 x double>, <3 x double>* %calc
  %tmp283 = load %gemPrm, %gemPrm* %this
  %tmp284 = extractvalue %gemPrm %tmp283, 51
  %return285 = call { <3 x double>, <3 x double>* } @"setcomp@V[VVI"(<3 x double>* %tmp284, <3 x double> %calc282, i64 %i.0)
  %output287 = extractvalue { <3 x double>, <3 x double>* } %return285, 1
  %83 = insertvalue %gemPrm %tmp283, <3 x double>* %output287, 51
  store %gemPrm %83, %gemPrm* %this
  br label %iter

false259:                                         ; preds = %false245
  %return289 = call i64 @"eq@III"(i64 %return78, i64 48)
  %84 = icmp ne i64 %return289, 0
  br i1 %84, label %true290, label %false291

true290:                                          ; preds = %false259
  %return295 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @72, i64 0, i64 0), i8* %return81)
  %return296 = call <3 x double> @"chv@VS"(i8* %return295)
  %tmp297 = load %gemPrm, %gemPrm* %this
  %tmp298 = extractvalue %gemPrm %tmp297, 8
  %return299 = call { <3 x double>, <3 x double>* } @"setcomp@V[VVI"(<3 x double>* %tmp298, <3 x double> %return296, i64 %i.0)
  %output301 = extractvalue { <3 x double>, <3 x double>* } %return299, 1
  %85 = insertvalue %gemPrm %tmp297, <3 x double>* %output301, 8
  %return304 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @73, i64 0, i64 0), i8* %return81)
  %return305 = call <3 x double> @"chv@VS"(i8* %return304)
  %tmp307 = extractvalue %gemPrm %85, 9
  %return308 = call { <3 x double>, <3 x double>* } @"setcomp@V[VVI"(<3 x double>* %tmp307, <3 x double> %return305, i64 %i.0)
  %output310 = extractvalue { <3 x double>, <3 x double>* } %return308, 1
  %86 = insertvalue %gemPrm %85, <3 x double>* %output310, 9
  store %gemPrm %86, %gemPrm* %this
  br label %iter

false291:                                         ; preds = %false259
  %return312 = call i64 @"eq@III"(i64 %return78, i64 49)
  %87 = icmp ne i64 %return312, 0
  br i1 %87, label %true313, label %false314

true313:                                          ; preds = %false291
  %return318 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @74, i64 0, i64 0), i8* %return81)
  %return319 = call <2 x double> @"chu@US"(i8* %return318)
  %tmp320 = load %gemPrm, %gemPrm* %this
  %tmp321 = extractvalue %gemPrm %tmp320, 36
  %return322 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp321, <2 x double> %return319, i64 %i.0)
  %output324 = extractvalue { <2 x double>, <2 x double>* } %return322, 1
  %88 = insertvalue %gemPrm %tmp320, <2 x double>* %output324, 36
  store %gemPrm %88, %gemPrm* %this
  br label %iter

false314:                                         ; preds = %false291
  %return326 = call i64 @"eq@III"(i64 %return78, i64 50)
  %89 = icmp ne i64 %return326, 0
  br i1 %89, label %true327, label %false328

true327:                                          ; preds = %false314
  %return332 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @75, i64 0, i64 0), i8* %return81)
  %return333 = call <2 x double> @"chu@US"(i8* %return332)
  %tmp334 = load %gemPrm, %gemPrm* %this
  %tmp335 = extractvalue %gemPrm %tmp334, 37
  %return336 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp335, <2 x double> %return333, i64 %i.0)
  %output338 = extractvalue { <2 x double>, <2 x double>* } %return336, 1
  %90 = insertvalue %gemPrm %tmp334, <2 x double>* %output338, 37
  store %gemPrm %90, %gemPrm* %this
  br label %iter

false328:                                         ; preds = %false314
  %return340 = call i64 @"eq@III"(i64 %return78, i64 51)
  %91 = icmp ne i64 %return340, 0
  br i1 %91, label %true341, label %false342

true341:                                          ; preds = %false328
  %return346 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @76, i64 0, i64 0), i8* %return81)
  %return347 = call <2 x double> @"chu@US"(i8* %return346)
  %tmp348 = load %gemPrm, %gemPrm* %this
  %tmp349 = extractvalue %gemPrm %tmp348, 14
  %return350 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp349, <2 x double> %return347, i64 %i.0)
  %output352 = extractvalue { <2 x double>, <2 x double>* } %return350, 1
  %92 = insertvalue %gemPrm %tmp348, <2 x double>* %output352, 14
  store %gemPrm %92, %gemPrm* %this
  br label %iter

false342:                                         ; preds = %false328
  %return354 = call i64 @"eq@III"(i64 %return78, i64 52)
  %93 = icmp ne i64 %return354, 0
  br i1 %93, label %true355, label %false356

true355:                                          ; preds = %false342
  %return360 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @77, i64 0, i64 0), i8* %return81)
  %return361 = call <2 x double> @"chu@US"(i8* %return360)
  %tmp362 = load %gemPrm, %gemPrm* %this
  %tmp363 = extractvalue %gemPrm %tmp362, 17
  %return364 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp363, <2 x double> %return361, i64 %i.0)
  %output366 = extractvalue { <2 x double>, <2 x double>* } %return364, 1
  %94 = insertvalue %gemPrm %tmp362, <2 x double>* %output366, 17
  store %gemPrm %94, %gemPrm* %this
  br label %iter

false356:                                         ; preds = %false342
  %return368 = call i64 @"eq@III"(i64 %return78, i64 53)
  %95 = icmp ne i64 %return368, 0
  br i1 %95, label %true369, label %false370

true369:                                          ; preds = %false356
  %return374 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @78, i64 0, i64 0), i8* %return81)
  %return375 = call double @"chf@FS"(i8* %return374)
  %tmp376 = load %gemPrm, %gemPrm* %this
  %tmp377 = extractvalue %gemPrm %tmp376, 1
  %return378 = call { double, double* } @"setcomp@F[FFI"(double* %tmp377, double %return375, i64 %i.0)
  %output380 = extractvalue { double, double* } %return378, 1
  %96 = insertvalue %gemPrm %tmp376, double* %output380, 1
  store %gemPrm %96, %gemPrm* %this
  br label %iter

false370:                                         ; preds = %false356
  %return382 = call i64 @"eq@III"(i64 %return78, i64 56)
  %97 = icmp ne i64 %return382, 0
  br i1 %97, label %true383, label %false384

true383:                                          ; preds = %false370
  %return388 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @79, i64 0, i64 0), i8* %return81)
  %return389 = call double @"chf@FS"(i8* %return388)
  %tmp390 = load %gemPrm, %gemPrm* %this
  %tmp391 = extractvalue %gemPrm %tmp390, 2
  %return392 = call { double, double* } @"setcomp@F[FFI"(double* %tmp391, double %return389, i64 %i.0)
  %output394 = extractvalue { double, double* } %return392, 1
  %98 = insertvalue %gemPrm %tmp390, double* %output394, 2
  store %gemPrm %98, %gemPrm* %this
  br label %iter

false384:                                         ; preds = %false370
  %return396 = call i64 @"eq@III"(i64 %return78, i64 57)
  %99 = icmp ne i64 %return396, 0
  br i1 %99, label %true397, label %iter

true397:                                          ; preds = %false384
  %return401 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @80, i64 0, i64 0), i8* %return81)
  %return402 = call <3 x double> @"chv@VS"(i8* %return401)
  %tmp403 = load %gemPrm, %gemPrm* %this
  %tmp404 = extractvalue %gemPrm %tmp403, 10
  %return405 = call { <3 x double>, <3 x double>* } @"setcomp@V[VVI"(<3 x double>* %tmp404, <3 x double> %return402, i64 %i.0)
  %output407 = extractvalue { <3 x double>, <3 x double>* } %return405, 1
  %100 = insertvalue %gemPrm %tmp403, <3 x double>* %output407, 10
  store %gemPrm %100, %gemPrm* %this
  br label %iter

true412:                                          ; preds = %false96
  %return415 = call i64 @"lt@III"(i64 %return78, i64 77)
  %101 = icmp ne i64 %return415, 0
  br i1 %101, label %true416, label %false417

true416:                                          ; preds = %true412
  %return420 = call i64 @"eq@III"(i64 %return78, i64 61)
  %102 = icmp ne i64 %return420, 0
  br i1 %102, label %true421, label %false422

false417:                                         ; preds = %true412
  %return600 = call i64 @"eq@III"(i64 %return78, i64 77)
  %103 = icmp ne i64 %return600, 0
  br i1 %103, label %true601, label %false602

true421:                                          ; preds = %true416
  %return426 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @82, i64 0, i64 0), i8* %return81)
  %return427 = call double @"chf@FS"(i8* %return426)
  %tmp428 = load %gemPrm, %gemPrm* %this
  %tmp429 = extractvalue %gemPrm %tmp428, 3
  %return430 = call { double, double* } @"setcomp@F[FFI"(double* %tmp429, double %return427, i64 %i.0)
  %output432 = extractvalue { double, double* } %return430, 1
  %104 = insertvalue %gemPrm %tmp428, double* %output432, 3
  store %gemPrm %104, %gemPrm* %this
  br label %iter

false422:                                         ; preds = %true416
  %return434 = call i64 @"eq@III"(i64 %return78, i64 63)
  %105 = icmp ne i64 %return434, 0
  br i1 %105, label %true435, label %false436

true435:                                          ; preds = %false422
  %return440 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @83, i64 0, i64 0), i8* %return81)
  %return441 = call <2 x double> @"chu@US"(i8* %return440)
  %tmp442 = load %gemPrm, %gemPrm* %this
  %tmp443 = extractvalue %gemPrm %tmp442, 18
  %return444 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp443, <2 x double> %return441, i64 %i.0)
  %output446 = extractvalue { <2 x double>, <2 x double>* } %return444, 1
  %106 = insertvalue %gemPrm %tmp442, <2 x double>* %output446, 18
  %return449 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @84, i64 0, i64 0), i8* %return81)
  %return450 = call <3 x double> @"chv@VS"(i8* %return449)
  %tmp452 = extractvalue %gemPrm %106, 11
  %return453 = call { <3 x double>, <3 x double>* } @"setcomp@V[VVI"(<3 x double>* %tmp452, <3 x double> %return450, i64 %i.0)
  %output455 = extractvalue { <3 x double>, <3 x double>* } %return453, 1
  %107 = insertvalue %gemPrm %106, <3 x double>* %output455, 11
  store %gemPrm %107, %gemPrm* %this
  br label %iter

false436:                                         ; preds = %false422
  %return457 = call i64 @"eq@III"(i64 %return78, i64 66)
  %108 = icmp ne i64 %return457, 0
  br i1 %108, label %true458, label %false459

true458:                                          ; preds = %false436
  %return463 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @85, i64 0, i64 0), i8* %return81)
  %return464 = call <2 x double> @"chu@US"(i8* %return463)
  %tmp465 = load %gemPrm, %gemPrm* %this
  %tmp466 = extractvalue %gemPrm %tmp465, 19
  %return467 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp466, <2 x double> %return464, i64 %i.0)
  %output469 = extractvalue { <2 x double>, <2 x double>* } %return467, 1
  %109 = insertvalue %gemPrm %tmp465, <2 x double>* %output469, 19
  store %gemPrm %109, %gemPrm* %this
  br label %iter

false459:                                         ; preds = %false436
  %return471 = call i64 @"eq@III"(i64 %return78, i64 67)
  %110 = icmp ne i64 %return471, 0
  br i1 %110, label %true472, label %false473

true472:                                          ; preds = %false459
  %return477 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @86, i64 0, i64 0), i8* %return81)
  %return478 = call <4 x double> @"chp@PS"(i8* %return477)
  %tmp479 = load %gemPrm, %gemPrm* %this
  %tmp480 = extractvalue %gemPrm %tmp479, 44
  %return481 = call { <4 x double>, <4 x double>* } @"setcomp@P[PPI"(<4 x double>* %tmp480, <4 x double> %return478, i64 %i.0)
  %output483 = extractvalue { <4 x double>, <4 x double>* } %return481, 1
  %111 = insertvalue %gemPrm %tmp479, <4 x double>* %output483, 44
  store %gemPrm %111, %gemPrm* %this
  br label %iter

false473:                                         ; preds = %false459
  %return485 = call i64 @"eq@III"(i64 %return78, i64 69)
  %112 = icmp ne i64 %return485, 0
  br i1 %112, label %true486, label %false487

true486:                                          ; preds = %false473
  %return491 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @87, i64 0, i64 0), i8* %return81)
  %return492 = call <2 x double> @"chu@US"(i8* %return491)
  %tmp493 = load %gemPrm, %gemPrm* %this
  %tmp494 = extractvalue %gemPrm %tmp493, 20
  %return495 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp494, <2 x double> %return492, i64 %i.0)
  %output497 = extractvalue { <2 x double>, <2 x double>* } %return495, 1
  %113 = insertvalue %gemPrm %tmp493, <2 x double>* %output497, 20
  %return500 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @88, i64 0, i64 0), i8* %return81)
  %return501 = call double @"chf@FS"(i8* %return500)
  %tmp503 = extractvalue %gemPrm %113, 4
  %return504 = call { double, double* } @"setcomp@F[FFI"(double* %tmp503, double %return501, i64 %i.0)
  %output506 = extractvalue { double, double* } %return504, 1
  %114 = insertvalue %gemPrm %113, double* %output506, 4
  store %gemPrm %114, %gemPrm* %this
  br label %iter

false487:                                         ; preds = %false473
  %return508 = call i64 @"eq@III"(i64 %return78, i64 71)
  %115 = icmp ne i64 %return508, 0
  br i1 %115, label %true509, label %false510

true509:                                          ; preds = %false487
  %return514 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @89, i64 0, i64 0), i8* %return81)
  %return515 = call <2 x double> @"chu@US"(i8* %return514)
  %tmp516 = load %gemPrm, %gemPrm* %this
  %tmp517 = extractvalue %gemPrm %tmp516, 21
  %return518 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp517, <2 x double> %return515, i64 %i.0)
  %output520 = extractvalue { <2 x double>, <2 x double>* } %return518, 1
  %116 = insertvalue %gemPrm %tmp516, <2 x double>* %output520, 21
  %return523 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @90, i64 0, i64 0), i8* %return81)
  %return524 = call <2 x double> @"chu@US"(i8* %return523)
  %tmp526 = extractvalue %gemPrm %116, 22
  %return527 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp526, <2 x double> %return524, i64 %i.0)
  %output529 = extractvalue { <2 x double>, <2 x double>* } %return527, 1
  %117 = insertvalue %gemPrm %116, <2 x double>* %output529, 22
  store %gemPrm %117, %gemPrm* %this
  br label %iter

false510:                                         ; preds = %false487
  %return531 = call i64 @"eq@III"(i64 %return78, i64 72)
  %118 = icmp ne i64 %return531, 0
  br i1 %118, label %true532, label %false533

true532:                                          ; preds = %false510
  %return537 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @91, i64 0, i64 0), i8* %return81)
  %return538 = call <2 x double> @"chu@US"(i8* %return537)
  %tmp539 = load %gemPrm, %gemPrm* %this
  %tmp540 = extractvalue %gemPrm %tmp539, 23
  %return541 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp540, <2 x double> %return538, i64 %i.0)
  %output543 = extractvalue { <2 x double>, <2 x double>* } %return541, 1
  %119 = insertvalue %gemPrm %tmp539, <2 x double>* %output543, 23
  store %gemPrm %119, %gemPrm* %this
  br label %iter

false533:                                         ; preds = %false510
  %return545 = call i64 @"eq@III"(i64 %return78, i64 73)
  %120 = icmp ne i64 %return545, 0
  br i1 %120, label %true546, label %false547

true546:                                          ; preds = %false533
  %return551 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @92, i64 0, i64 0), i8* %return81)
  %return552 = call <2 x double> @"chu@US"(i8* %return551)
  %tmp553 = load %gemPrm, %gemPrm* %this
  %tmp554 = extractvalue %gemPrm %tmp553, 24
  %return555 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp554, <2 x double> %return552, i64 %i.0)
  %output557 = extractvalue { <2 x double>, <2 x double>* } %return555, 1
  %121 = insertvalue %gemPrm %tmp553, <2 x double>* %output557, 24
  store %gemPrm %121, %gemPrm* %this
  br label %iter

false547:                                         ; preds = %false533
  %return559 = call i64 @"eq@III"(i64 %return78, i64 74)
  %122 = icmp ne i64 %return559, 0
  br i1 %122, label %true560, label %false561

true560:                                          ; preds = %false547
  %return565 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @93, i64 0, i64 0), i8* %return81)
  %return566 = call <2 x double> @"chu@US"(i8* %return565)
  %tmp567 = load %gemPrm, %gemPrm* %this
  %tmp568 = extractvalue %gemPrm %tmp567, 38
  %return569 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp568, <2 x double> %return566, i64 %i.0)
  %output571 = extractvalue { <2 x double>, <2 x double>* } %return569, 1
  %123 = insertvalue %gemPrm %tmp567, <2 x double>* %output571, 38
  store %gemPrm %123, %gemPrm* %this
  br label %iter

false561:                                         ; preds = %false547
  %return573 = call i64 @"eq@III"(i64 %return78, i64 75)
  %124 = icmp ne i64 %return573, 0
  br i1 %124, label %true574, label %false575

true574:                                          ; preds = %false561
  %return579 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @94, i64 0, i64 0), i8* %return81)
  %return580 = call <4 x double> @"chp@PS"(i8* %return579)
  %tmp581 = load %gemPrm, %gemPrm* %this
  %tmp582 = extractvalue %gemPrm %tmp581, 45
  %return583 = call { <4 x double>, <4 x double>* } @"setcomp@P[PPI"(<4 x double>* %tmp582, <4 x double> %return580, i64 %i.0)
  %output585 = extractvalue { <4 x double>, <4 x double>* } %return583, 1
  %125 = insertvalue %gemPrm %tmp581, <4 x double>* %output585, 45
  store %gemPrm %125, %gemPrm* %this
  br label %iter

false575:                                         ; preds = %false561
  %return587 = call i64 @"eq@III"(i64 %return78, i64 76)
  %126 = icmp ne i64 %return587, 0
  br i1 %126, label %true588, label %iter

true588:                                          ; preds = %false575
  %return592 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @95, i64 0, i64 0), i8* %return81)
  %return593 = call <4 x double> @"chp@PS"(i8* %return592)
  %tmp594 = load %gemPrm, %gemPrm* %this
  %tmp595 = extractvalue %gemPrm %tmp594, 46
  %return596 = call { <4 x double>, <4 x double>* } @"setcomp@P[PPI"(<4 x double>* %tmp595, <4 x double> %return593, i64 %i.0)
  %output598 = extractvalue { <4 x double>, <4 x double>* } %return596, 1
  %127 = insertvalue %gemPrm %tmp594, <4 x double>* %output598, 46
  store %gemPrm %127, %gemPrm* %this
  br label %iter

true601:                                          ; preds = %false417
  %return606 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @96, i64 0, i64 0), i8* %return81)
  %return607 = call <4 x double> @"chp@PS"(i8* %return606)
  %tmp608 = load %gemPrm, %gemPrm* %this
  %tmp609 = extractvalue %gemPrm %tmp608, 47
  %return610 = call { <4 x double>, <4 x double>* } @"setcomp@P[PPI"(<4 x double>* %tmp609, <4 x double> %return607, i64 %i.0)
  %output612 = extractvalue { <4 x double>, <4 x double>* } %return610, 1
  %128 = insertvalue %gemPrm %tmp608, <4 x double>* %output612, 47
  store %gemPrm %128, %gemPrm* %this
  br label %iter

false602:                                         ; preds = %false417
  %return614 = call i64 @"eq@III"(i64 %return78, i64 78)
  %129 = icmp ne i64 %return614, 0
  br i1 %129, label %true615, label %false616

true615:                                          ; preds = %false602
  %return620 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @97, i64 0, i64 0), i8* %return81)
  %return621 = call <2 x double> @"chu@US"(i8* %return620)
  %tmp622 = load %gemPrm, %gemPrm* %this
  %tmp623 = extractvalue %gemPrm %tmp622, 39
  %return624 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp623, <2 x double> %return621, i64 %i.0)
  %output626 = extractvalue { <2 x double>, <2 x double>* } %return624, 1
  %130 = insertvalue %gemPrm %tmp622, <2 x double>* %output626, 39
  store %gemPrm %130, %gemPrm* %this
  br label %iter

false616:                                         ; preds = %false602
  %return628 = call i64 @"eq@III"(i64 %return78, i64 79)
  %131 = icmp ne i64 %return628, 0
  br i1 %131, label %true629, label %false630

true629:                                          ; preds = %false616
  %return634 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @98, i64 0, i64 0), i8* %return81)
  %return635 = call <2 x double> @"chu@US"(i8* %return634)
  %tmp636 = load %gemPrm, %gemPrm* %this
  %tmp637 = extractvalue %gemPrm %tmp636, 25
  %return638 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp637, <2 x double> %return635, i64 %i.0)
  %output640 = extractvalue { <2 x double>, <2 x double>* } %return638, 1
  %132 = insertvalue %gemPrm %tmp636, <2 x double>* %output640, 25
  %return643 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @99, i64 0, i64 0), i8* %return81)
  %return644 = call <2 x double> @"chu@US"(i8* %return643)
  %tmp646 = extractvalue %gemPrm %132, 26
  %return647 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp646, <2 x double> %return644, i64 %i.0)
  %output649 = extractvalue { <2 x double>, <2 x double>* } %return647, 1
  %133 = insertvalue %gemPrm %132, <2 x double>* %output649, 26
  store %gemPrm %133, %gemPrm* %this
  br label %iter

false630:                                         ; preds = %false616
  %return651 = call i64 @"eq@III"(i64 %return78, i64 94)
  %134 = icmp ne i64 %return651, 0
  br i1 %134, label %true652, label %false653

true652:                                          ; preds = %false630
  %return657 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @100, i64 0, i64 0), i8* %return81)
  %return658 = call <4 x double> @"chp@PS"(i8* %return657)
  %tmp659 = load %gemPrm, %gemPrm* %this
  %tmp660 = extractvalue %gemPrm %tmp659, 48
  %return661 = call { <4 x double>, <4 x double>* } @"setcomp@P[PPI"(<4 x double>* %tmp660, <4 x double> %return658, i64 %i.0)
  %output663 = extractvalue { <4 x double>, <4 x double>* } %return661, 1
  %135 = insertvalue %gemPrm %tmp659, <4 x double>* %output663, 48
  store %gemPrm %135, %gemPrm* %this
  br label %iter

false653:                                         ; preds = %false630
  %return665 = call i64 @"eq@III"(i64 %return78, i64 95)
  %136 = icmp ne i64 %return665, 0
  br i1 %136, label %true666, label %false667

true666:                                          ; preds = %false653
  %return671 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @101, i64 0, i64 0), i8* %return81)
  %return672 = call double @"chf@FS"(i8* %return671)
  %tmp673 = load %gemPrm, %gemPrm* %this
  %tmp674 = extractvalue %gemPrm %tmp673, 5
  %return675 = call { double, double* } @"setcomp@F[FFI"(double* %tmp674, double %return672, i64 %i.0)
  %output677 = extractvalue { double, double* } %return675, 1
  %137 = insertvalue %gemPrm %tmp673, double* %output677, 5
  store %gemPrm %137, %gemPrm* %this
  br label %iter

false667:                                         ; preds = %false653
  %return679 = call i64 @"eq@III"(i64 %return78, i64 96)
  %138 = icmp ne i64 %return679, 0
  br i1 %138, label %true680, label %false681

true680:                                          ; preds = %false667
  %return685 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @102, i64 0, i64 0), i8* %return81)
  %return686 = call <4 x double> @"chp@PS"(i8* %return685)
  %tmp687 = load %gemPrm, %gemPrm* %this
  %tmp688 = extractvalue %gemPrm %tmp687, 49
  %return689 = call { <4 x double>, <4 x double>* } @"setcomp@P[PPI"(<4 x double>* %tmp688, <4 x double> %return686, i64 %i.0)
  %output691 = extractvalue { <4 x double>, <4 x double>* } %return689, 1
  %139 = insertvalue %gemPrm %tmp687, <4 x double>* %output691, 49
  %return694 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @103, i64 0, i64 0), i8* %return81)
  %return695 = call <4 x double> @"chp@PS"(i8* %return694)
  %tmp697 = extractvalue %gemPrm %139, 50
  %return698 = call { <4 x double>, <4 x double>* } @"setcomp@P[PPI"(<4 x double>* %tmp697, <4 x double> %return695, i64 %i.0)
  %output700 = extractvalue { <4 x double>, <4 x double>* } %return698, 1
  %140 = insertvalue %gemPrm %139, <4 x double>* %output700, 50
  store %gemPrm %140, %gemPrm* %this
  br label %iter

false681:                                         ; preds = %false667
  %return702 = call i64 @"eq@III"(i64 %return78, i64 97)
  %141 = icmp ne i64 %return702, 0
  br i1 %141, label %true703, label %false704

true703:                                          ; preds = %false681
  %return708 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @104, i64 0, i64 0), i8* %return81)
  %return709 = call <2 x double> @"chu@US"(i8* %return708)
  %tmp710 = load %gemPrm, %gemPrm* %this
  %tmp711 = extractvalue %gemPrm %tmp710, 27
  %return712 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp711, <2 x double> %return709, i64 %i.0)
  %output714 = extractvalue { <2 x double>, <2 x double>* } %return712, 1
  %142 = insertvalue %gemPrm %tmp710, <2 x double>* %output714, 27
  %return717 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @105, i64 0, i64 0), i8* %return81)
  %return718 = call <2 x double> @"chu@US"(i8* %return717)
  %tmp720 = extractvalue %gemPrm %142, 28
  %return721 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp720, <2 x double> %return718, i64 %i.0)
  %output723 = extractvalue { <2 x double>, <2 x double>* } %return721, 1
  %143 = insertvalue %gemPrm %142, <2 x double>* %output723, 28
  store %gemPrm %143, %gemPrm* %this
  br label %iter

false704:                                         ; preds = %false681
  %return725 = call i64 @"eq@III"(i64 %return78, i64 98)
  %144 = icmp ne i64 %return725, 0
  br i1 %144, label %true726, label %false727

true726:                                          ; preds = %false704
  %return731 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @106, i64 0, i64 0), i8* %return81)
  %return732 = call <2 x double> @"chu@US"(i8* %return731)
  %tmp733 = load %gemPrm, %gemPrm* %this
  %tmp734 = extractvalue %gemPrm %tmp733, 40
  %return735 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp734, <2 x double> %return732, i64 %i.0)
  %output737 = extractvalue { <2 x double>, <2 x double>* } %return735, 1
  %145 = insertvalue %gemPrm %tmp733, <2 x double>* %output737, 40
  store %gemPrm %145, %gemPrm* %this
  br label %iter

false727:                                         ; preds = %false704
  %return739 = call i64 @"eq@III"(i64 %return78, i64 99)
  %146 = icmp ne i64 %return739, 0
  br i1 %146, label %true740, label %false741

true740:                                          ; preds = %false727
  %return745 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @107, i64 0, i64 0), i8* %return81)
  %return746 = call <3 x double> @"chv@VS"(i8* %return745)
  %tmp747 = load %gemPrm, %gemPrm* %this
  %tmp748 = extractvalue %gemPrm %tmp747, 12
  %return749 = call { <3 x double>, <3 x double>* } @"setcomp@V[VVI"(<3 x double>* %tmp748, <3 x double> %return746, i64 %i.0)
  %output751 = extractvalue { <3 x double>, <3 x double>* } %return749, 1
  %147 = insertvalue %gemPrm %tmp747, <3 x double>* %output751, 12
  %return754 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @108, i64 0, i64 0), i8* %return81)
  %return755 = call <2 x double> @"chu@US"(i8* %return754)
  %tmp757 = extractvalue %gemPrm %147, 41
  %return758 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp757, <2 x double> %return755, i64 %i.0)
  %output760 = extractvalue { <2 x double>, <2 x double>* } %return758, 1
  %148 = insertvalue %gemPrm %147, <2 x double>* %output760, 41
  store %gemPrm %148, %gemPrm* %this
  br label %iter

false741:                                         ; preds = %false727
  %return762 = call i64 @"eq@III"(i64 %return78, i64 101)
  %149 = icmp ne i64 %return762, 0
  br i1 %149, label %true763, label %iter

true763:                                          ; preds = %false741
  %return767 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @109, i64 0, i64 0), i8* %return81)
  %return768 = call <2 x double> @"chu@US"(i8* %return767)
  %tmp769 = load %gemPrm, %gemPrm* %this
  %tmp770 = extractvalue %gemPrm %tmp769, 29
  %return771 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp770, <2 x double> %return768, i64 %i.0)
  %output773 = extractvalue { <2 x double>, <2 x double>* } %return771, 1
  %150 = insertvalue %gemPrm %tmp769, <2 x double>* %output773, 29
  %return776 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @110, i64 0, i64 0), i8* %return81)
  %return777 = call <2 x double> @"chu@US"(i8* %return776)
  %tmp779 = extractvalue %gemPrm %150, 30
  %return780 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp779, <2 x double> %return777, i64 %i.0)
  %output782 = extractvalue { <2 x double>, <2 x double>* } %return780, 1
  %151 = insertvalue %gemPrm %150, <2 x double>* %output782, 30
  %return785 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @111, i64 0, i64 0), i8* %return81)
  %return786 = call <2 x double> @"chu@US"(i8* %return785)
  %tmp788 = extractvalue %gemPrm %151, 31
  %return789 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp788, <2 x double> %return786, i64 %i.0)
  %output791 = extractvalue { <2 x double>, <2 x double>* } %return789, 1
  %152 = insertvalue %gemPrm %151, <2 x double>* %output791, 31
  store %gemPrm %152, %gemPrm* %this
  br label %iter
}

; Function Attrs: nounwind
declare i64 @"max@I[I"(i64*) #2

; Function Attrs: nounwind readnone
declare i64 @"gt@III"(i64, i64) #1

; Function Attrs: nounwind readnone
declare <3 x double>* @"resize@[VI"(<3 x double>*, i64) #1

; Function Attrs: nounwind readnone
declare <4 x double>* @"resize@[PI"(<4 x double>*, i64) #1

; Function Attrs: nounwind
declare i64 @"find@I[FF"(double*, double) #2

; Function Attrs: nounwind readnone
declare i64 @"ge@III"(i64, i64) #1

; Function Attrs: nounwind readnone
declare <4 x double> @"chp@PS"(i8*) #1

; Function Attrs: nounwind readnone
declare { <4 x double>, <4 x double>* } @"setcomp@P[PPI"(<4 x double>*, <4 x double>, i64) #1

; Function Attrs: nounwind readnone
declare <3 x double> @"chv@VS"(i8*) #1

; Function Attrs: nounwind readnone
declare { <3 x double>, <3 x double>* } @"setcomp@V[VVI"(<3 x double>*, <3 x double>, i64) #1

; Function Attrs: nounwind readnone
declare <2 x double> @"getcomp@U[UI"(<2 x double>*, i64) #1

; Function Attrs: alwaysinline nounwind
define private %gemPrm @"gemPrm@Z6gemPrmM52N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PN8pc_DISC2[V[F[F[F[F[F[F[V[V[V[V[V[V[V[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[P[P[P[P[P[P[P[P[P[V"(double** %rings2_val, double** %bipolar_shift, double** %cell_size, double** %escher_beta, double** %popcorn2_c, double** %flux_spread, <3 x double>** %blob, <3 x double>** %pie, <3 x double>** %supershape, <3 x double>** %supershape_n, <3 x double>** %cpow, <3 x double>** %lazysusan, <3 x double>** %bwraps, <2 x double>** %curl_c, <2 x double>** %parabola, <2 x double>** %fan2, <2 x double>** %rectangles, <2 x double>** %bent2, <2 x double>** %lazysusanxyz, <2 x double>** %modulus, <2 x double>** %popcorn2, <2 x double>** %separation, <2 x double>** %separation_inside, <2 x double>** %split, <2 x double>** %splits, <2 x double>** %waves2_scale, <2 x double>** %waves2_freq, <2 x double>** %curve_lenght, <2 x double>** %curve_amp, <2 x double>** %polynomial_pow, <2 x double>** %polynomial_lc, <2 x double>** %polynomial_sc, <2 x double>** %julian, <2 x double>** %juliascope, <2 x double>** %radialblur, <2 x double>** %disc2, <2 x double>** %flower, <2 x double>** %conic, <2 x double>** %stripes, <2 x double>** %whorl, <2 x double>** %persp, <2 x double>** %bwrapstwist, <4 x double>** %ngon, <4 x double>** %pdj_w, <4 x double>** %oscope, <4 x double>** %wedge, <4 x double>** %wedgejulia, <4 x double>** %wedgesph, <4 x double>** %auger, <4 x double>** %mobius_re, <4 x double>** %mobius_im, <3 x double>** %pc_DISC2) #0 {
__llvm_entry:
  %rings2_val1 = load double*, double** %rings2_val
  %0 = insertvalue %gemPrm undef, double* %rings2_val1, 0
  %bipolar_shift2 = load double*, double** %bipolar_shift
  %1 = insertvalue %gemPrm %0, double* %bipolar_shift2, 1
  %cell_size4 = load double*, double** %cell_size
  %2 = insertvalue %gemPrm %1, double* %cell_size4, 2
  %escher_beta6 = load double*, double** %escher_beta
  %3 = insertvalue %gemPrm %2, double* %escher_beta6, 3
  %popcorn2_c8 = load double*, double** %popcorn2_c
  %4 = insertvalue %gemPrm %3, double* %popcorn2_c8, 4
  %flux_spread10 = load double*, double** %flux_spread
  %5 = insertvalue %gemPrm %4, double* %flux_spread10, 5
  %blob12 = load <3 x double>*, <3 x double>** %blob
  %6 = insertvalue %gemPrm %5, <3 x double>* %blob12, 6
  %pie14 = load <3 x double>*, <3 x double>** %pie
  %7 = insertvalue %gemPrm %6, <3 x double>* %pie14, 7
  %supershape16 = load <3 x double>*, <3 x double>** %supershape
  %8 = insertvalue %gemPrm %7, <3 x double>* %supershape16, 8
  %supershape_n18 = load <3 x double>*, <3 x double>** %supershape_n
  %9 = insertvalue %gemPrm %8, <3 x double>* %supershape_n18, 9
  %cpow20 = load <3 x double>*, <3 x double>** %cpow
  %10 = insertvalue %gemPrm %9, <3 x double>* %cpow20, 10
  %lazysusan22 = load <3 x double>*, <3 x double>** %lazysusan
  %11 = insertvalue %gemPrm %10, <3 x double>* %lazysusan22, 11
  %bwraps24 = load <3 x double>*, <3 x double>** %bwraps
  %12 = insertvalue %gemPrm %11, <3 x double>* %bwraps24, 12
  %curl_c26 = load <2 x double>*, <2 x double>** %curl_c
  %13 = insertvalue %gemPrm %12, <2 x double>* %curl_c26, 13
  %parabola28 = load <2 x double>*, <2 x double>** %parabola
  %14 = insertvalue %gemPrm %13, <2 x double>* %parabola28, 14
  %fan230 = load <2 x double>*, <2 x double>** %fan2
  %15 = insertvalue %gemPrm %14, <2 x double>* %fan230, 15
  %rectangles32 = load <2 x double>*, <2 x double>** %rectangles
  %16 = insertvalue %gemPrm %15, <2 x double>* %rectangles32, 16
  %bent234 = load <2 x double>*, <2 x double>** %bent2
  %17 = insertvalue %gemPrm %16, <2 x double>* %bent234, 17
  %lazysusanxyz36 = load <2 x double>*, <2 x double>** %lazysusanxyz
  %18 = insertvalue %gemPrm %17, <2 x double>* %lazysusanxyz36, 18
  %modulus38 = load <2 x double>*, <2 x double>** %modulus
  %19 = insertvalue %gemPrm %18, <2 x double>* %modulus38, 19
  %popcorn240 = load <2 x double>*, <2 x double>** %popcorn2
  %20 = insertvalue %gemPrm %19, <2 x double>* %popcorn240, 20
  %separation42 = load <2 x double>*, <2 x double>** %separation
  %21 = insertvalue %gemPrm %20, <2 x double>* %separation42, 21
  %separation_inside44 = load <2 x double>*, <2 x double>** %separation_inside
  %22 = insertvalue %gemPrm %21, <2 x double>* %separation_inside44, 22
  %split46 = load <2 x double>*, <2 x double>** %split
  %23 = insertvalue %gemPrm %22, <2 x double>* %split46, 23
  %splits48 = load <2 x double>*, <2 x double>** %splits
  %24 = insertvalue %gemPrm %23, <2 x double>* %splits48, 24
  %waves2_scale50 = load <2 x double>*, <2 x double>** %waves2_scale
  %25 = insertvalue %gemPrm %24, <2 x double>* %waves2_scale50, 25
  %waves2_freq52 = load <2 x double>*, <2 x double>** %waves2_freq
  %26 = insertvalue %gemPrm %25, <2 x double>* %waves2_freq52, 26
  %curve_lenght54 = load <2 x double>*, <2 x double>** %curve_lenght
  %27 = insertvalue %gemPrm %26, <2 x double>* %curve_lenght54, 27
  %curve_amp56 = load <2 x double>*, <2 x double>** %curve_amp
  %28 = insertvalue %gemPrm %27, <2 x double>* %curve_amp56, 28
  %polynomial_pow58 = load <2 x double>*, <2 x double>** %polynomial_pow
  %29 = insertvalue %gemPrm %28, <2 x double>* %polynomial_pow58, 29
  %polynomial_lc60 = load <2 x double>*, <2 x double>** %polynomial_lc
  %30 = insertvalue %gemPrm %29, <2 x double>* %polynomial_lc60, 30
  %polynomial_sc62 = load <2 x double>*, <2 x double>** %polynomial_sc
  %31 = insertvalue %gemPrm %30, <2 x double>* %polynomial_sc62, 31
  %julian64 = load <2 x double>*, <2 x double>** %julian
  %32 = insertvalue %gemPrm %31, <2 x double>* %julian64, 32
  %juliascope66 = load <2 x double>*, <2 x double>** %juliascope
  %33 = insertvalue %gemPrm %32, <2 x double>* %juliascope66, 33
  %radialblur68 = load <2 x double>*, <2 x double>** %radialblur
  %34 = insertvalue %gemPrm %33, <2 x double>* %radialblur68, 34
  %disc270 = load <2 x double>*, <2 x double>** %disc2
  %35 = insertvalue %gemPrm %34, <2 x double>* %disc270, 35
  %flower72 = load <2 x double>*, <2 x double>** %flower
  %36 = insertvalue %gemPrm %35, <2 x double>* %flower72, 36
  %conic74 = load <2 x double>*, <2 x double>** %conic
  %37 = insertvalue %gemPrm %36, <2 x double>* %conic74, 37
  %stripes76 = load <2 x double>*, <2 x double>** %stripes
  %38 = insertvalue %gemPrm %37, <2 x double>* %stripes76, 38
  %whorl78 = load <2 x double>*, <2 x double>** %whorl
  %39 = insertvalue %gemPrm %38, <2 x double>* %whorl78, 39
  %persp80 = load <2 x double>*, <2 x double>** %persp
  %40 = insertvalue %gemPrm %39, <2 x double>* %persp80, 40
  %bwrapstwist82 = load <2 x double>*, <2 x double>** %bwrapstwist
  %41 = insertvalue %gemPrm %40, <2 x double>* %bwrapstwist82, 41
  %ngon84 = load <4 x double>*, <4 x double>** %ngon
  %42 = insertvalue %gemPrm %41, <4 x double>* %ngon84, 42
  %pdj_w86 = load <4 x double>*, <4 x double>** %pdj_w
  %43 = insertvalue %gemPrm %42, <4 x double>* %pdj_w86, 43
  %oscope88 = load <4 x double>*, <4 x double>** %oscope
  %44 = insertvalue %gemPrm %43, <4 x double>* %oscope88, 44
  %wedge90 = load <4 x double>*, <4 x double>** %wedge
  %45 = insertvalue %gemPrm %44, <4 x double>* %wedge90, 45
  %wedgejulia92 = load <4 x double>*, <4 x double>** %wedgejulia
  %46 = insertvalue %gemPrm %45, <4 x double>* %wedgejulia92, 46
  %wedgesph94 = load <4 x double>*, <4 x double>** %wedgesph
  %47 = insertvalue %gemPrm %46, <4 x double>* %wedgesph94, 47
  %auger96 = load <4 x double>*, <4 x double>** %auger
  %48 = insertvalue %gemPrm %47, <4 x double>* %auger96, 48
  %mobius_re98 = load <4 x double>*, <4 x double>** %mobius_re
  %49 = insertvalue %gemPrm %48, <4 x double>* %mobius_re98, 49
  %mobius_im100 = load <4 x double>*, <4 x double>** %mobius_im
  %50 = insertvalue %gemPrm %49, <4 x double>* %mobius_im100, 50
  %pc_DISC2102 = load <3 x double>*, <3 x double>** %pc_DISC2
  %51 = insertvalue %gemPrm %50, <3 x double>* %pc_DISC2102, 51
  ret %gemPrm %51
}

; Function Attrs: alwaysinline nounwind
define private %gemPrm @"gemPrm@Z6gemPrmM52N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PN8pc_DISC2[V"() #0 {
__llvm_entry:
  %0 = alloca double*
  %1 = alloca double*
  %2 = alloca double*
  %3 = alloca double*
  %4 = alloca double*
  %5 = alloca <3 x double>*
  %6 = alloca <3 x double>*
  %7 = alloca <3 x double>*
  %8 = alloca <3 x double>*
  %9 = alloca <3 x double>*
  %10 = alloca <3 x double>*
  %11 = alloca <3 x double>*
  %12 = alloca <2 x double>*
  %13 = alloca <2 x double>*
  %14 = alloca <2 x double>*
  %15 = alloca <2 x double>*
  %16 = alloca <2 x double>*
  %17 = alloca <2 x double>*
  %18 = alloca <2 x double>*
  %19 = alloca <2 x double>*
  %20 = alloca <2 x double>*
  %21 = alloca <2 x double>*
  %22 = alloca <2 x double>*
  %23 = alloca <2 x double>*
  %24 = alloca <2 x double>*
  %25 = alloca <2 x double>*
  %26 = alloca <2 x double>*
  %27 = alloca <2 x double>*
  %28 = alloca <2 x double>*
  %29 = alloca <2 x double>*
  %30 = alloca <2 x double>*
  %31 = alloca <2 x double>*
  %32 = alloca <2 x double>*
  %33 = alloca <2 x double>*
  %34 = alloca <2 x double>*
  %35 = alloca <2 x double>*
  %36 = alloca <2 x double>*
  %37 = alloca <2 x double>*
  %38 = alloca <2 x double>*
  %39 = alloca <2 x double>*
  %40 = alloca <2 x double>*
  %41 = alloca <4 x double>*
  %42 = alloca <4 x double>*
  %43 = alloca <4 x double>*
  %44 = alloca <4 x double>*
  %45 = alloca <4 x double>*
  %46 = alloca <4 x double>*
  %47 = alloca <4 x double>*
  %48 = alloca <4 x double>*
  %49 = alloca <4 x double>*
  %50 = alloca <3 x double>*
  %51 = alloca double*
  store double* getelementptr inbounds ([0 x double], [0 x double]* @57, i64 0, i64 0), double** %51
  store double* getelementptr inbounds ([0 x double], [0 x double]* @57, i64 0, i64 0), double** %0
  store double* getelementptr inbounds ([0 x double], [0 x double]* @57, i64 0, i64 0), double** %1
  store double* getelementptr inbounds ([0 x double], [0 x double]* @57, i64 0, i64 0), double** %2
  store double* getelementptr inbounds ([0 x double], [0 x double]* @57, i64 0, i64 0), double** %3
  store double* getelementptr inbounds ([0 x double], [0 x double]* @57, i64 0, i64 0), double** %4
  store <3 x double>* getelementptr inbounds ([0 x <3 x double>], [0 x <3 x double>]* @112, i64 0, i64 0), <3 x double>** %5
  store <3 x double>* getelementptr inbounds ([0 x <3 x double>], [0 x <3 x double>]* @112, i64 0, i64 0), <3 x double>** %6
  store <3 x double>* getelementptr inbounds ([0 x <3 x double>], [0 x <3 x double>]* @112, i64 0, i64 0), <3 x double>** %7
  store <3 x double>* getelementptr inbounds ([0 x <3 x double>], [0 x <3 x double>]* @112, i64 0, i64 0), <3 x double>** %8
  store <3 x double>* getelementptr inbounds ([0 x <3 x double>], [0 x <3 x double>]* @112, i64 0, i64 0), <3 x double>** %9
  store <3 x double>* getelementptr inbounds ([0 x <3 x double>], [0 x <3 x double>]* @112, i64 0, i64 0), <3 x double>** %10
  store <3 x double>* getelementptr inbounds ([0 x <3 x double>], [0 x <3 x double>]* @112, i64 0, i64 0), <3 x double>** %11
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @58, i64 0, i64 0), <2 x double>** %12
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @58, i64 0, i64 0), <2 x double>** %13
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @58, i64 0, i64 0), <2 x double>** %14
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @58, i64 0, i64 0), <2 x double>** %15
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @58, i64 0, i64 0), <2 x double>** %16
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @58, i64 0, i64 0), <2 x double>** %17
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @58, i64 0, i64 0), <2 x double>** %18
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @58, i64 0, i64 0), <2 x double>** %19
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @58, i64 0, i64 0), <2 x double>** %20
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @58, i64 0, i64 0), <2 x double>** %21
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @58, i64 0, i64 0), <2 x double>** %22
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @58, i64 0, i64 0), <2 x double>** %23
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @58, i64 0, i64 0), <2 x double>** %24
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @58, i64 0, i64 0), <2 x double>** %25
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @58, i64 0, i64 0), <2 x double>** %26
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @58, i64 0, i64 0), <2 x double>** %27
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @58, i64 0, i64 0), <2 x double>** %28
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @58, i64 0, i64 0), <2 x double>** %29
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @58, i64 0, i64 0), <2 x double>** %30
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @58, i64 0, i64 0), <2 x double>** %31
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @58, i64 0, i64 0), <2 x double>** %32
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @58, i64 0, i64 0), <2 x double>** %33
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @58, i64 0, i64 0), <2 x double>** %34
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @58, i64 0, i64 0), <2 x double>** %35
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @58, i64 0, i64 0), <2 x double>** %36
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @58, i64 0, i64 0), <2 x double>** %37
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @58, i64 0, i64 0), <2 x double>** %38
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @58, i64 0, i64 0), <2 x double>** %39
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @58, i64 0, i64 0), <2 x double>** %40
  store <4 x double>* getelementptr inbounds ([0 x <4 x double>], [0 x <4 x double>]* @113, i64 0, i64 0), <4 x double>** %41
  store <4 x double>* getelementptr inbounds ([0 x <4 x double>], [0 x <4 x double>]* @113, i64 0, i64 0), <4 x double>** %42
  store <4 x double>* getelementptr inbounds ([0 x <4 x double>], [0 x <4 x double>]* @113, i64 0, i64 0), <4 x double>** %43
  store <4 x double>* getelementptr inbounds ([0 x <4 x double>], [0 x <4 x double>]* @113, i64 0, i64 0), <4 x double>** %44
  store <4 x double>* getelementptr inbounds ([0 x <4 x double>], [0 x <4 x double>]* @113, i64 0, i64 0), <4 x double>** %45
  store <4 x double>* getelementptr inbounds ([0 x <4 x double>], [0 x <4 x double>]* @113, i64 0, i64 0), <4 x double>** %46
  store <4 x double>* getelementptr inbounds ([0 x <4 x double>], [0 x <4 x double>]* @113, i64 0, i64 0), <4 x double>** %47
  store <4 x double>* getelementptr inbounds ([0 x <4 x double>], [0 x <4 x double>]* @113, i64 0, i64 0), <4 x double>** %48
  store <4 x double>* getelementptr inbounds ([0 x <4 x double>], [0 x <4 x double>]* @113, i64 0, i64 0), <4 x double>** %49
  store <3 x double>* getelementptr inbounds ([0 x <3 x double>], [0 x <3 x double>]* @112, i64 0, i64 0), <3 x double>** %50
  %gemPrm = call %gemPrm @"gemPrm@Z6gemPrmM52N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PN8pc_DISC2[V[F[F[F[F[F[F[V[V[V[V[V[V[V[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[P[P[P[P[P[P[P[P[P[V"(double** %51, double** %0, double** %1, double** %2, double** %3, double** %4, <3 x double>** %5, <3 x double>** %6, <3 x double>** %7, <3 x double>** %8, <3 x double>** %9, <3 x double>** %10, <3 x double>** %11, <2 x double>** %12, <2 x double>** %13, <2 x double>** %14, <2 x double>** %15, <2 x double>** %16, <2 x double>** %17, <2 x double>** %18, <2 x double>** %19, <2 x double>** %20, <2 x double>** %21, <2 x double>** %22, <2 x double>** %23, <2 x double>** %24, <2 x double>** %25, <2 x double>** %26, <2 x double>** %27, <2 x double>** %28, <2 x double>** %29, <2 x double>** %30, <2 x double>** %31, <2 x double>** %32, <2 x double>** %33, <2 x double>** %34, <2 x double>** %35, <2 x double>** %36, <2 x double>** %37, <2 x double>** %38, <2 x double>** %39, <2 x double>** %40, <4 x double>** %41, <4 x double>** %42, <4 x double>** %43, <4 x double>** %44, <4 x double>** %45, <4 x double>** %46, <4 x double>** %47, <4 x double>** %48, <4 x double>** %49, <3 x double>** %50)
  ret %gemPrm %gemPrm
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SINUSOIDAL@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %w1 = load double, double* %w
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %return3 = call double @"sin@FF"(double %return)
  %output = fmul double %w1, %return3
  %tmp = load <2 x double>, <2 x double>* %p
  %return4 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output, i64 0)
  %output6 = extractvalue { double, <2 x double> } %return4, 1
  store <2 x double> %output6, <2 x double>* %p
  %w7 = load double, double* %w
  %_p8 = load <2 x double>, <2 x double>* %_p
  %return9 = call double @"getcomp@FUI"(<2 x double> %_p8, i64 1)
  %return10 = call double @"sin@FF"(double %return9)
  %output11 = fmul double %w7, %return10
  %return13 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output6, double %output11, i64 1)
  %output15 = extractvalue { double, <2 x double> } %return13, 1
  store <2 x double> %output15, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SPHERICAL@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %w1 = load double, double* %w
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %output = fadd double %SUMSQ, 1.000000e-10
  %output3 = call double @"div@FF"(double %w1, double %output)
  %_p5 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p5, i64 0)
  %output6 = fmul double %output3, %return
  %tmp = load <2 x double>, <2 x double>* %p
  %return7 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output6, i64 0)
  %output9 = extractvalue { double, <2 x double> } %return7, 1
  store <2 x double> %output9, <2 x double>* %p
  %_p11 = load <2 x double>, <2 x double>* %_p
  %return12 = call double @"getcomp@FUI"(<2 x double> %_p11, i64 1)
  %output13 = fmul double %output3, %return12
  %return15 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output9, double %output13, i64 1)
  %output17 = extractvalue { double, <2 x double> } %return15, 1
  store <2 x double> %output17, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SWIRL@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %return = call double @"sin@FF"(double %SUMSQ)
  %return4 = call double @"cos@FF"(double %SUMSQ)
  %_p6 = load <2 x double>, <2 x double>* %_p
  %return7 = call double @"getcomp@FUI"(<2 x double> %_p6, i64 0)
  %output = fmul double %return, %return7
  %return10 = call double @"getcomp@FUI"(<2 x double> %_p6, i64 1)
  %output11 = fmul double %return4, %return10
  %output12 = fsub double %output, %output11
  %output16 = fmul double %return4, %return7
  %output20 = fmul double %return, %return10
  %output21 = fadd double %output16, %output20
  %w22 = load double, double* %w
  %output24 = fmul double %w22, %output12
  %tmp = load <2 x double>, <2 x double>* %p
  %return25 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output24, i64 0)
  %output27 = extractvalue { double, <2 x double> } %return25, 1
  store <2 x double> %output27, <2 x double>* %p
  %w28 = load double, double* %w
  %output30 = fmul double %w28, %output21
  %return32 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output27, double %output30, i64 1)
  %output34 = extractvalue { double, <2 x double> } %return32, 1
  store <2 x double> %output34, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_HORSESHOE@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %w1 = load double, double* %w
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %output = fadd double %SQRT, 1.000000e-10
  %output3 = call double @"div@FF"(double %w1, double %output)
  %_p4 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p4, i64 0)
  %return6 = call double @"getcomp@FUI"(<2 x double> %_p4, i64 1)
  %output7 = fsub double %return, %return6
  %output12 = fadd double %return, %return6
  %output13 = fmul double %output7, %output12
  %output15 = fmul double %output13, %output3
  %tmp = load <2 x double>, <2 x double>* %p
  %return16 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output15, i64 0)
  %output18 = extractvalue { double, <2 x double> } %return16, 1
  store <2 x double> %output18, <2 x double>* %p
  %_p19 = load <2 x double>, <2 x double>* %_p
  %return20 = call double @"getcomp@FUI"(<2 x double> %_p19, i64 0)
  %output21 = fmul double 2.000000e+00, %return20
  %return23 = call double @"getcomp@FUI"(<2 x double> %_p19, i64 1)
  %output24 = fmul double %output21, %return23
  %output26 = fmul double %output24, %output3
  %return28 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output18, double %output26, i64 1)
  %output30 = extractvalue { double, <2 x double> } %return28, 1
  store <2 x double> %output30, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_POLAR@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %ATAN = call double @"ATAN@FU"(<2 x double>* %0)
  %output = fmul double %ATAN, 0x3FD45F306DC9C883
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %1
  %SQRT = call double @"SQRT@FU"(<2 x double>* %1)
  %output3 = fsub double %SQRT, 1.000000e+00
  %w4 = load double, double* %w
  %output6 = fmul double %w4, %output
  %tmp = load <2 x double>, <2 x double>* %p
  %return = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output6, i64 0)
  %output8 = extractvalue { double, <2 x double> } %return, 1
  store <2 x double> %output8, <2 x double>* %p
  %w9 = load double, double* %w
  %output11 = fmul double %w9, %output3
  %return13 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output8, double %output11, i64 1)
  %output15 = extractvalue { double, <2 x double> } %return13, 1
  store <2 x double> %output15, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_HANDKERCHIEF@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca <2 x double>
  %3 = alloca <2 x double>
  %4 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %ATAN = call double @"ATAN@FU"(<2 x double>* %0)
  %w2 = load double, double* %w
  %_p3 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p3, <2 x double>* %1
  %SQRT = call double @"SQRT@FU"(<2 x double>* %1)
  %output = fmul double %w2, %SQRT
  %_p5 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p5, <2 x double>* %2
  %SQRT6 = call double @"SQRT@FU"(<2 x double>* %2)
  %output7 = fadd double %ATAN, %SQRT6
  %return = call double @"sin@FF"(double %output7)
  %output8 = fmul double %output, %return
  %tmp = load <2 x double>, <2 x double>* %p
  %return9 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output8, i64 0)
  %output11 = extractvalue { double, <2 x double> } %return9, 1
  store <2 x double> %output11, <2 x double>* %p
  %w12 = load double, double* %w
  %_p13 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p13, <2 x double>* %3
  %SQRT14 = call double @"SQRT@FU"(<2 x double>* %3)
  %output15 = fmul double %w12, %SQRT14
  %_p17 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p17, <2 x double>* %4
  %SQRT18 = call double @"SQRT@FU"(<2 x double>* %4)
  %output19 = fsub double %ATAN, %SQRT18
  %return20 = call double @"cos@FF"(double %output19)
  %output21 = fmul double %output15, %return20
  %tmp22 = load <2 x double>, <2 x double>* %p
  %return23 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp22, double %output21, i64 1)
  %output25 = extractvalue { double, <2 x double> } %return23, 1
  store <2 x double> %output25, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_HEART@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %1
  %ATAN = call double @"ATAN@FU"(<2 x double>* %1)
  %output = fmul double %SQRT, %ATAN
  %return = call double @"sin@FF"(double %output)
  %return5 = call double @"cos@FF"(double %output)
  %w6 = load double, double* %w
  %_p7 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p7, <2 x double>* %2
  %SQRT8 = call double @"SQRT@FU"(<2 x double>* %2)
  %output9 = fmul double %w6, %SQRT8
  %output11 = fmul double %output9, %return
  %output14 = fmul double %output11, %return
  %tmp = load <2 x double>, <2 x double>* %p
  %return15 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output14, i64 0)
  %output17 = extractvalue { double, <2 x double> } %return15, 1
  store <2 x double> %output17, <2 x double>* %p
  %return19 = call double @"neg@FF"(double %output11)
  %output21 = fmul double %return19, %return5
  %return23 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output17, double %output21, i64 1)
  %output25 = extractvalue { double, <2 x double> } %return23, 1
  store <2 x double> %output25, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_DISC@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %sr = alloca double
  %cr = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sr, !vex-initializer-store !3
  store double 0.000000e+00, double* %cr, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %ATAN = call double @"ATAN@FU"(<2 x double>* %0)
  %output = call double @"div@FF"(double 1.000000e+00, double 0x400921FB4D12D84A)
  %output2 = fmul double %ATAN, %output
  %_p3 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p3, <2 x double>* %1
  %SQRT = call double @"SQRT@FU"(<2 x double>* %1)
  %output4 = fmul double 0x400921FB4D12D84A, %SQRT
  store double %output4, double* %2
  call void @"sincos@FFF"(double* %2, double* %sr, double* %cr)
  %w6 = load double, double* %w
  %sr7 = load double, double* %sr
  %output8 = fmul double %w6, %sr7
  %output10 = fmul double %output8, %output2
  %tmp = load <2 x double>, <2 x double>* %p
  %return = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output10, i64 0)
  %output12 = extractvalue { double, <2 x double> } %return, 1
  store <2 x double> %output12, <2 x double>* %p
  %w13 = load double, double* %w
  %cr14 = load double, double* %cr
  %output15 = fmul double %w13, %cr14
  %output17 = fmul double %output15, %output2
  %return19 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output12, double %output17, i64 1)
  %output21 = extractvalue { double, <2 x double> } %return19, 1
  store <2 x double> %output21, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SPIRAL@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %sr = alloca double
  %cr = alloca double
  %1 = alloca <2 x double>
  %2 = alloca double
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %cast = call <2 x double> @"set@UF"(double %SQRT)
  %output = call <2 x double> @"div@UU"(<2 x double> %_p1, <2 x double> %cast)
  store double 0.000000e+00, double* %sr, !vex-initializer-store !3
  store double 0.000000e+00, double* %cr, !vex-initializer-store !3
  %_p3 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p3, <2 x double>* %1
  %SQRT4 = call double @"SQRT@FU"(<2 x double>* %1)
  %output5 = fadd double %SQRT4, 1.000000e-10
  %w6 = load double, double* %w
  %output8 = call double @"div@FF"(double %w6, double %output5)
  store double %output5, double* %2
  call void @"sincos@FFF"(double* %2, double* %sr, double* %cr)
  %return = call double @"getcomp@FUI"(<2 x double> %output, i64 1)
  %sr12 = load double, double* %sr
  %output13 = fadd double %return, %sr12
  %output14 = fmul double %output8, %output13
  %tmp = load <2 x double>, <2 x double>* %p
  %return15 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output14, i64 0)
  %output17 = extractvalue { double, <2 x double> } %return15, 1
  store <2 x double> %output17, <2 x double>* %p
  %return20 = call double @"getcomp@FUI"(<2 x double> %output, i64 0)
  %cr21 = load double, double* %cr
  %output22 = fsub double %return20, %cr21
  %output23 = fmul double %output8, %output22
  %return25 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output17, double %output23, i64 1)
  %output27 = extractvalue { double, <2 x double> } %return25, 1
  store <2 x double> %output27, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind readnone
declare <2 x double> @"set@UF"(double) #1

; Function Attrs: nounwind readnone
declare <2 x double> @"div@UU"(<2 x double>, <2 x double>) #1

; Function Attrs: alwaysinline nounwind
define private void @"V_HIPERBOLIC@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %cast = call <2 x double> @"set@UF"(double %SQRT)
  %output = call <2 x double> @"div@UU"(<2 x double> %_p1, <2 x double> %cast)
  %_p3 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p3, <2 x double>* %1
  %SQRT4 = call double @"SQRT@FU"(<2 x double>* %1)
  %output5 = fadd double %SQRT4, 1.000000e-10
  %w6 = load double, double* %w
  %return = call double @"getcomp@FUI"(<2 x double> %output, i64 0)
  %output8 = fmul double %w6, %return
  %output10 = call double @"div@FF"(double %output8, double %output5)
  %tmp = load <2 x double>, <2 x double>* %p
  %return11 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output10, i64 0)
  %output13 = extractvalue { double, <2 x double> } %return11, 1
  store <2 x double> %output13, <2 x double>* %p
  %w14 = load double, double* %w
  %return16 = call double @"getcomp@FUI"(<2 x double> %output, i64 1)
  %output17 = fmul double %w14, %return16
  %output19 = fmul double %output17, %output5
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output13, double %output19, i64 1)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_DIAMOND@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %sr = alloca double
  %cr = alloca double
  %1 = alloca <2 x double>
  %2 = alloca double
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %cast = call <2 x double> @"set@UF"(double %SQRT)
  %output = call <2 x double> @"div@UU"(<2 x double> %_p1, <2 x double> %cast)
  store double 0.000000e+00, double* %sr, !vex-initializer-store !3
  store double 0.000000e+00, double* %cr, !vex-initializer-store !3
  %_p3 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p3, <2 x double>* %1
  %SQRT4 = call double @"SQRT@FU"(<2 x double>* %1)
  store double %SQRT4, double* %2
  call void @"sincos@FFF"(double* %2, double* %sr, double* %cr)
  %w6 = load double, double* %w
  %return = call double @"getcomp@FUI"(<2 x double> %output, i64 0)
  %cr8 = load double, double* %cr
  %output9 = fmul double %return, %cr8
  %output10 = fmul double %w6, %output9
  %tmp = load <2 x double>, <2 x double>* %p
  %return11 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output10, i64 0)
  %output13 = extractvalue { double, <2 x double> } %return11, 1
  store <2 x double> %output13, <2 x double>* %p
  %w14 = load double, double* %w
  %return16 = call double @"getcomp@FUI"(<2 x double> %output, i64 1)
  %sr17 = load double, double* %sr
  %output18 = fmul double %return16, %sr17
  %output19 = fmul double %w14, %output18
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output13, double %output19, i64 1)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_EX@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %ATAN = call double @"ATAN@FU"(<2 x double>* %0)
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %1
  %SQRT = call double @"SQRT@FU"(<2 x double>* %1)
  %output = fadd double %ATAN, %SQRT
  %return = call double @"sin@FF"(double %output)
  %output7 = fsub double %ATAN, %SQRT
  %return8 = call double @"cos@FF"(double %output7)
  %output11 = fmul double %return, %return
  %output13 = fmul double %output11, %return
  %output15 = fmul double %output13, %SQRT
  %output18 = fmul double %return8, %return8
  %output20 = fmul double %output18, %return8
  %output22 = fmul double %output20, %SQRT
  %w23 = load double, double* %w
  %output26 = fadd double %output15, %output22
  %output27 = fmul double %w23, %output26
  %tmp = load <2 x double>, <2 x double>* %p
  %return28 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output27, i64 0)
  %output30 = extractvalue { double, <2 x double> } %return28, 1
  store <2 x double> %output30, <2 x double>* %p
  %w31 = load double, double* %w
  %output34 = fsub double %output15, %output22
  %output35 = fmul double %w31, %output34
  %return37 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output30, double %output35, i64 1)
  %output39 = extractvalue { double, <2 x double> } %return37, 1
  store <2 x double> %output39, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_JULIA@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %ATAN = call double @"ATAN@FU"(<2 x double>* %0)
  %output = fmul double 5.000000e-01, %ATAN
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return2 = fcmp olt double %return, 5.000000e-01
  br i1 %return2, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %output5 = fadd double %output, 0x400921FB4D12D84A
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %aa.0 = phi double [ %output5, %true ], [ %output, %__llvm_entry ]
  %w6 = load double, double* %w
  %_p7 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p7, <2 x double>* %1
  %SQRT = call double @"SQRT@FU"(<2 x double>* %1)
  %return8 = call double @"sqrt@FF"(double %SQRT)
  %output9 = fmul double %w6, %return8
  store double %aa.0, double* %2
  call void @"sincos@FFF"(double* %2, double* %sa, double* %ca)
  %ca12 = load double, double* %ca
  %output13 = fmul double %output9, %ca12
  %tmp = load <2 x double>, <2 x double>* %p
  %return14 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output13, i64 0)
  %output16 = extractvalue { double, <2 x double> } %return14, 1
  store <2 x double> %output16, <2 x double>* %p
  %sa18 = load double, double* %sa
  %output19 = fmul double %output9, %sa18
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output16, double %output19, i64 1)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_BENT@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  %return3 = call double @"getcomp@FUI"(<2 x double> %_p1, i64 1)
  %return5 = fcmp olt double %return, 0.000000e+00
  br i1 %return5, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %output = fmul double %return, 2.000000e+00
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %nx.0 = phi double [ %output, %true ], [ %return, %__llvm_entry ]
  %return9 = fcmp olt double %return3, 0.000000e+00
  br i1 %return9, label %true11, label %end12

true11:                                           ; preds = %end
  %output14 = call double @"div@FF"(double %return3, double 2.000000e+00)
  br label %end12

end12:                                            ; preds = %true11, %end
  %ny.0 = phi double [ %output14, %true11 ], [ %return3, %end ]
  %w15 = load double, double* %w
  %output17 = fmul double %w15, %nx.0
  %tmp = load <2 x double>, <2 x double>* %p
  %return18 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output17, i64 0)
  %output20 = extractvalue { double, <2 x double> } %return18, 1
  store <2 x double> %output20, <2 x double>* %p
  %w21 = load double, double* %w
  %output23 = fmul double %w21, %ny.0
  %return25 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output20, double %output23, i64 1)
  %output27 = extractvalue { double, <2 x double> } %return25, 1
  store <2 x double> %output27, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_WAVES@UUFFFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %d, double* %e, double* %f, double* %h) #0 {
__llvm_entry:
  %f1 = load double, double* %f
  %output = fmul double %f1, %f1
  %output3 = fadd double %output, 1.000000e-10
  %output4 = call double @"div@FF"(double 1.000000e+00, double %output3)
  %h5 = load double, double* %h
  %output7 = fmul double %h5, %h5
  %output8 = fadd double %output7, 1.000000e-10
  %output9 = call double @"div@FF"(double 1.000000e+00, double %output8)
  %_p10 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p10, i64 0)
  %d11 = load double, double* %d
  %return13 = call double @"getcomp@FUI"(<2 x double> %_p10, i64 1)
  %output15 = fmul double %return13, %output4
  %return16 = call double @"sin@FF"(double %output15)
  %output17 = fmul double %d11, %return16
  %output18 = fadd double %return, %output17
  %e21 = load double, double* %e
  %output25 = fmul double %return, %output9
  %return26 = call double @"sin@FF"(double %output25)
  %output27 = fmul double %e21, %return26
  %output28 = fadd double %return13, %output27
  %w29 = load double, double* %w
  %output31 = fmul double %w29, %output18
  %tmp = load <2 x double>, <2 x double>* %p
  %return32 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output31, i64 0)
  %output34 = extractvalue { double, <2 x double> } %return32, 1
  store <2 x double> %output34, <2 x double>* %p
  %w35 = load double, double* %w
  %output37 = fmul double %w35, %output28
  %return39 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output34, double %output37, i64 1)
  %output41 = extractvalue { double, <2 x double> } %return39, 1
  store <2 x double> %output41, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_FISHEYE@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %w2 = load double, double* %w
  %output = fmul double 2.000000e+00, %w2
  %output4 = fadd double %SQRT, 1.000000e+00
  %output5 = call double @"div@FF"(double %output, double %output4)
  %_p7 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p7, i64 1)
  %output8 = fmul double %output5, %return
  %tmp = load <2 x double>, <2 x double>* %p
  %return9 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output8, i64 0)
  %output11 = extractvalue { double, <2 x double> } %return9, 1
  store <2 x double> %output11, <2 x double>* %p
  %_p13 = load <2 x double>, <2 x double>* %_p
  %return14 = call double @"getcomp@FUI"(<2 x double> %_p13, i64 0)
  %output15 = fmul double %output5, %return14
  %return17 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output11, double %output15, i64 1)
  %output19 = extractvalue { double, <2 x double> } %return17, 1
  store <2 x double> %output19, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_POPCORN@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %d, double* %h) #0 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 1)
  %output = fmul double 3.000000e+00, %return
  %return2 = call double @"tan@FF"(double %output)
  %return4 = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  %output5 = fmul double 3.000000e+00, %return4
  %return6 = call double @"tan@FF"(double %output5)
  %d9 = load double, double* %d
  %return11 = call double @"sin@FF"(double %return2)
  %output12 = fmul double %d9, %return11
  %output13 = fadd double %return4, %output12
  %h16 = load double, double* %h
  %return18 = call double @"sin@FF"(double %return6)
  %output19 = fmul double %h16, %return18
  %output20 = fadd double %return, %output19
  %w21 = load double, double* %w
  %output23 = fmul double %w21, %output13
  %tmp = load <2 x double>, <2 x double>* %p
  %return24 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output23, i64 0)
  %output26 = extractvalue { double, <2 x double> } %return24, 1
  store <2 x double> %output26, <2 x double>* %p
  %w27 = load double, double* %w
  %output29 = fmul double %w27, %output20
  %return31 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output26, double %output29, i64 1)
  %output33 = extractvalue { double, <2 x double> } %return31, 1
  store <2 x double> %output33, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind readnone
declare double @"tan@FF"(double) #1

; Function Attrs: alwaysinline nounwind
define private void @"V_EXPONENTIAL@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %sdy = alloca double
  %cdy = alloca double
  %0 = alloca double
  store double 0.000000e+00, double* %sdy, !vex-initializer-store !3
  store double 0.000000e+00, double* %cdy, !vex-initializer-store !3
  %w1 = load double, double* %w
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %output = fsub double %return, 1.000000e+00
  %return3 = call double @"exp@FF"(double %output)
  %output4 = fmul double %w1, %return3
  %return6 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  %output7 = fmul double 0x400921FB4D12D84A, %return6
  store double %output7, double* %0
  call void @"sincos@FFF"(double* %0, double* %sdy, double* %cdy)
  %cdy10 = load double, double* %cdy
  %output11 = fmul double %output4, %cdy10
  %tmp = load <2 x double>, <2 x double>* %p
  %return12 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output11, i64 0)
  %output14 = extractvalue { double, <2 x double> } %return12, 1
  store <2 x double> %output14, <2 x double>* %p
  %sdy16 = load double, double* %sdy
  %output17 = fmul double %output4, %sdy16
  %return19 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output14, double %output17, i64 1)
  %output21 = extractvalue { double, <2 x double> } %return19, 1
  store <2 x double> %output21, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind readnone
declare double @"exp@FF"(double) #1

; Function Attrs: alwaysinline nounwind
define private void @"V_POWER@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %cast = call <2 x double> @"set@UF"(double %SQRT)
  %output = call <2 x double> @"div@UU"(<2 x double> %_p1, <2 x double> %cast)
  %w3 = load double, double* %w
  %_p4 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p4, <2 x double>* %1
  %SQRT5 = call double @"SQRT@FU"(<2 x double>* %1)
  %return = call double @"getcomp@FUI"(<2 x double> %output, i64 0)
  %return7 = call double @"pow@FFF"(double %SQRT5, double %return)
  %output8 = fmul double %w3, %return7
  %return11 = call double @"getcomp@FUI"(<2 x double> %output, i64 1)
  %output12 = fmul double %output8, %return11
  %tmp = load <2 x double>, <2 x double>* %p
  %return13 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output12, i64 0)
  %output15 = extractvalue { double, <2 x double> } %return13, 1
  store <2 x double> %output15, <2 x double>* %p
  %output19 = fmul double %output8, %return
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output15, double %output19, i64 1)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind readnone
declare double @"pow@FFF"(double, double) #1

; Function Attrs: alwaysinline nounwind
define private void @"V_COSINE@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  %output = fmul double %return, 0x400921FB4D12D84A
  store double %output, double* %0
  call void @"sincos@FFF"(double* %0, double* %sa, double* %ca)
  %ca3 = load double, double* %ca
  %_p4 = load <2 x double>, <2 x double>* %_p
  %return5 = call double @"getcomp@FUI"(<2 x double> %_p4, i64 1)
  %return6 = call double @"cosh@FF"(double %return5)
  %output7 = fmul double %ca3, %return6
  %sa8 = load double, double* %sa
  %return9 = call double @"neg@FF"(double %sa8)
  %return12 = call double @"sinh@FF"(double %return5)
  %output13 = fmul double %return9, %return12
  %w14 = load double, double* %w
  %output16 = fmul double %w14, %output7
  %tmp = load <2 x double>, <2 x double>* %p
  %return17 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output16, i64 0)
  %output19 = extractvalue { double, <2 x double> } %return17, 1
  store <2 x double> %output19, <2 x double>* %p
  %w20 = load double, double* %w
  %output22 = fmul double %w20, %output13
  %return24 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output19, double %output22, i64 1)
  %output26 = extractvalue { double, <2 x double> } %return24, 1
  store <2 x double> %output26, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind readnone
declare double @"cosh@FF"(double) #1

; Function Attrs: nounwind readnone
declare double @"sinh@FF"(double) #1

; Function Attrs: alwaysinline nounwind
define private void @"V_RINGS@UUFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %d) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  %3 = alloca double
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %cast = call <2 x double> @"set@UF"(double %SQRT)
  %output = call <2 x double> @"div@UU"(<2 x double> %_p1, <2 x double> %cast)
  %d3 = load double, double* %d
  %output5 = fmul double %d3, %d3
  %output6 = fadd double %output5, 1.000000e-10
  %_p7 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p7, <2 x double>* %1
  %SQRT8 = call double @"SQRT@FU"(<2 x double>* %1)
  %w9 = load double, double* %w
  %output12 = fadd double %SQRT8, %output6
  store double %output12, double* %2
  %output14 = fmul double 2.000000e+00, %output6
  store double %output14, double* %3
  %fmod = call double @"fmod@FFF"(double* %2, double* %3)
  %output16 = fsub double %fmod, %output6
  %output19 = fsub double 1.000000e+00, %output6
  %output20 = fmul double %SQRT8, %output19
  %output21 = fadd double %output16, %output20
  %output22 = fmul double %w9, %output21
  %return = call double @"getcomp@FUI"(<2 x double> %output, i64 1)
  %output25 = fmul double %output22, %return
  %tmp = load <2 x double>, <2 x double>* %p
  %return26 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output25, i64 0)
  %output28 = extractvalue { double, <2 x double> } %return26, 1
  store <2 x double> %output28, <2 x double>* %p
  %return31 = call double @"getcomp@FUI"(<2 x double> %output, i64 0)
  %output32 = fmul double %output22, %return31
  %return34 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output28, double %output32, i64 1)
  %output36 = extractvalue { double, <2 x double> } %return34, 1
  store <2 x double> %output36, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_FAN@UUFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %d) #0 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  %3 = alloca double
  %4 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %d1 = load double, double* %d
  %output = fmul double %d1, %d1
  %output3 = fadd double %output, 1.000000e-10
  %output4 = fmul double 0x400921FB4D12D84A, %output3
  %output7 = fmul double 5.000000e-01, %output4
  %_p8 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p8, <2 x double>* %0
  %ATAN = call double @"ATAN@FU"(<2 x double>* %0)
  %w9 = load double, double* %w
  %_p10 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p10, <2 x double>* %1
  %SQRT = call double @"SQRT@FU"(<2 x double>* %1)
  %output11 = fmul double %w9, %SQRT
  %output15 = fadd double %ATAN, %d1
  store double %output15, double* %2
  store double %output4, double* %3
  %fmod = call double @"fmod@FFF"(double* %2, double* %3)
  %return = fcmp ogt double %fmod, %output7
  br i1 %return, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %return20 = call double @"neg@FF"(double %output7)
  br label %end

end:                                              ; preds = %__llvm_entry, %true
  %phi = phi double [ %return20, %true ], [ %output7, %__llvm_entry ]
  %output22 = fadd double %ATAN, %phi
  store double %output22, double* %4
  call void @"sincos@FFF"(double* %4, double* %sa, double* %ca)
  %ca25 = load double, double* %ca
  %output26 = fmul double %output11, %ca25
  %tmp = load <2 x double>, <2 x double>* %p
  %return27 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output26, i64 0)
  %output29 = extractvalue { double, <2 x double> } %return27, 1
  store <2 x double> %output29, <2 x double>* %p
  %sa31 = load double, double* %sa
  %output32 = fmul double %output11, %sa31
  %return34 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output29, double %output32, i64 1)
  %output36 = extractvalue { double, <2 x double> } %return34, 1
  store <2 x double> %output36, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_BUBBLE@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %w1 = load double, double* %w
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %output = fmul double 2.500000e-01, %SUMSQ
  %output3 = fadd double %output, 1.000000e+00
  %output4 = call double @"div@FF"(double %w1, double %output3)
  %_p6 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p6, i64 0)
  %output7 = fmul double %output4, %return
  %tmp = load <2 x double>, <2 x double>* %p
  %return8 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output7, i64 0)
  %output10 = extractvalue { double, <2 x double> } %return8, 1
  store <2 x double> %output10, <2 x double>* %p
  %_p12 = load <2 x double>, <2 x double>* %_p
  %return13 = call double @"getcomp@FUI"(<2 x double> %_p12, i64 1)
  %output14 = fmul double %output4, %return13
  %return16 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output10, double %output14, i64 1)
  %output18 = extractvalue { double, <2 x double> } %return16, 1
  store <2 x double> %output18, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_CYLINDER@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %w1 = load double, double* %w
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %return3 = call double @"sin@FF"(double %return)
  %output = fmul double %w1, %return3
  %tmp = load <2 x double>, <2 x double>* %p
  %return4 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output, i64 0)
  %output6 = extractvalue { double, <2 x double> } %return4, 1
  store <2 x double> %output6, <2 x double>* %p
  %w7 = load double, double* %w
  %_p8 = load <2 x double>, <2 x double>* %_p
  %return9 = call double @"getcomp@FUI"(<2 x double> %_p8, i64 1)
  %output10 = fmul double %w7, %return9
  %return12 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output6, double %output10, i64 1)
  %output14 = extractvalue { double, <2 x double> } %return12, 1
  store <2 x double> %output14, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_EYEFISH@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %w1 = load double, double* %w
  %output = fmul double %w1, 2.000000e+00
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %output3 = fadd double 1.000000e+00, %SQRT
  %output4 = call double @"div@FF"(double %output, double %output3)
  %_p6 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p6, i64 0)
  %output7 = fmul double %output4, %return
  %tmp = load <2 x double>, <2 x double>* %p
  %return8 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output7, i64 0)
  %output10 = extractvalue { double, <2 x double> } %return8, 1
  store <2 x double> %output10, <2 x double>* %p
  %_p12 = load <2 x double>, <2 x double>* %_p
  %return13 = call double @"getcomp@FUI"(<2 x double> %_p12, i64 1)
  %output14 = fmul double %output4, %return13
  %return16 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output10, double %output14, i64 1)
  %output18 = extractvalue { double, <2 x double> } %return16, 1
  store <2 x double> %output18, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_BLUR@UF"(<2 x double>* %p, double* %w) #0 {
__llvm_entry:
  %sinr = alloca double
  %cosr = alloca double
  %0 = alloca double
  store double 0.000000e+00, double* %sinr, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosr, !vex-initializer-store !3
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output = fmul double %return, 2.000000e+00
  %output1 = fmul double %output, 0x400921FB4D12D84A
  store double %output1, double* %0
  call void @"sincos@FFF"(double* %0, double* %sinr, double* %cosr)
  %w3 = load double, double* %w
  %return4 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output5 = fmul double %w3, %return4
  %cosr7 = load double, double* %cosr
  %output8 = fmul double %output5, %cosr7
  %tmp = load <2 x double>, <2 x double>* %p
  %return9 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output8, i64 0)
  %output11 = extractvalue { double, <2 x double> } %return9, 1
  store <2 x double> %output11, <2 x double>* %p
  %sinr13 = load double, double* %sinr
  %output14 = fmul double %output5, %sinr13
  %return16 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output11, double %output14, i64 1)
  %output18 = extractvalue { double, <2 x double> } %return16, 1
  store <2 x double> %output18, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_CURL@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %c1, double* %c2) #0 {
__llvm_entry:
  %c11 = load double, double* %c1
  %return = fcmp oeq double %c11, 0.000000e+00
  %c23 = load double, double* %c2
  %return4 = fcmp oeq double %c23, 0.000000e+00
  br i1 %return, label %true, label %false

true:                                             ; preds = %__llvm_entry
  br i1 %return4, label %true6, label %false7

false:                                            ; preds = %__llvm_entry
  %_p87 = load <2 x double>, <2 x double>* %_p
  %return88 = call double @"getcomp@FUI"(<2 x double> %_p87, i64 0)
  %output89 = fmul double %c11, %return88
  %output90 = fadd double 1.000000e+00, %output89
  br i1 %return4, label %true83, label %false84

end:                                              ; preds = %true83, %false84, %true6, %false7
  ret void

true6:                                            ; preds = %true
  %w9 = load double, double* %w
  %_p10 = load <2 x double>, <2 x double>* %_p
  %return11 = call double @"getcomp@FUI"(<2 x double> %_p10, i64 0)
  %output = fmul double %w9, %return11
  %tmp = load <2 x double>, <2 x double>* %p
  %return12 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output, i64 0)
  %output14 = extractvalue { double, <2 x double> } %return12, 1
  store <2 x double> %output14, <2 x double>* %p
  %w15 = load double, double* %w
  %_p16 = load <2 x double>, <2 x double>* %_p
  %return17 = call double @"getcomp@FUI"(<2 x double> %_p16, i64 1)
  %output18 = fmul double %w15, %return17
  %return20 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output14, double %output18, i64 1)
  %output22 = extractvalue { double, <2 x double> } %return20, 1
  store <2 x double> %output22, <2 x double>* %p
  br label %end

false7:                                           ; preds = %true
  %_p24 = load <2 x double>, <2 x double>* %_p
  %return25 = call double @"getcomp@FUI"(<2 x double> %_p24, i64 0)
  %return26 = call double @"sqrt@FF"(double %return25)
  %return28 = call double @"getcomp@FUI"(<2 x double> %_p24, i64 1)
  %return29 = call double @"sqrt@FF"(double %return28)
  %output30 = fsub double %return26, %return29
  %output31 = fmul double %c23, %output30
  %output32 = fadd double 1.000000e+00, %output31
  %output34 = fmul double %c23, 2.000000e+00
  %output37 = fmul double %output34, %return25
  %output40 = fmul double %output37, %return28
  %w41 = load double, double* %w
  %output44 = fmul double %output32, %output32
  %output47 = fmul double %output40, %output40
  %output48 = fadd double %output44, %output47
  %output49 = call double @"div@FF"(double %w41, double %output48)
  %output53 = fmul double %return25, %output32
  %output57 = fmul double %return28, %output40
  %output58 = fadd double %output53, %output57
  %output60 = fmul double %output58, %output49
  %tmp61 = load <2 x double>, <2 x double>* %p
  %return62 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp61, double %output60, i64 0)
  %output64 = extractvalue { double, <2 x double> } %return62, 1
  store <2 x double> %output64, <2 x double>* %p
  %_p65 = load <2 x double>, <2 x double>* %_p
  %return66 = call double @"getcomp@FUI"(<2 x double> %_p65, i64 1)
  %output68 = fmul double %return66, %output32
  %return70 = call double @"getcomp@FUI"(<2 x double> %_p65, i64 0)
  %output72 = fmul double %return70, %output40
  %output73 = fsub double %output68, %output72
  %output75 = fmul double %output73, %output49
  %return77 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output64, double %output75, i64 1)
  %output79 = extractvalue { double, <2 x double> } %return77, 1
  store <2 x double> %output79, <2 x double>* %p
  br label %end

true83:                                           ; preds = %false
  %return93 = call double @"getcomp@FUI"(<2 x double> %_p87, i64 1)
  %output94 = fmul double %c11, %return93
  %w95 = load double, double* %w
  %output98 = fmul double %output90, %output90
  %output101 = fmul double %output94, %output94
  %output102 = fadd double %output98, %output101
  %output103 = call double @"div@FF"(double %w95, double %output102)
  %output107 = fmul double %return88, %output90
  %output111 = fmul double %return93, %output94
  %output112 = fadd double %output107, %output111
  %output114 = fmul double %output112, %output103
  %tmp115 = load <2 x double>, <2 x double>* %p
  %return116 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp115, double %output114, i64 0)
  %output118 = extractvalue { double, <2 x double> } %return116, 1
  store <2 x double> %output118, <2 x double>* %p
  %_p119 = load <2 x double>, <2 x double>* %_p
  %return120 = call double @"getcomp@FUI"(<2 x double> %_p119, i64 1)
  %output122 = fmul double %return120, %output90
  %return124 = call double @"getcomp@FUI"(<2 x double> %_p119, i64 0)
  %output126 = fmul double %return124, %output94
  %output127 = fsub double %output122, %output126
  %output129 = fmul double %output127, %output103
  %return131 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output118, double %output129, i64 1)
  %output133 = extractvalue { double, <2 x double> } %return131, 1
  store <2 x double> %output133, <2 x double>* %p
  br label %end

false84:                                          ; preds = %false
  %return142 = call double @"sqrt@FF"(double %return88)
  %return144 = call double @"getcomp@FUI"(<2 x double> %_p87, i64 1)
  %return145 = call double @"sqrt@FF"(double %return144)
  %output146 = fsub double %return142, %return145
  %output147 = fmul double %c23, %output146
  %output148 = fadd double %output90, %output147
  %output152 = fmul double %c11, %return144
  %output154 = fmul double %c23, 2.000000e+00
  %output157 = fmul double %output154, %return88
  %output160 = fmul double %output157, %return144
  %output161 = fadd double %output152, %output160
  %w162 = load double, double* %w
  %output165 = fmul double %output148, %output148
  %output168 = fmul double %output161, %output161
  %output169 = fadd double %output165, %output168
  %output170 = call double @"div@FF"(double %w162, double %output169)
  %output174 = fmul double %return88, %output148
  %output178 = fmul double %return144, %output161
  %output179 = fadd double %output174, %output178
  %output181 = fmul double %output179, %output170
  %tmp182 = load <2 x double>, <2 x double>* %p
  %return183 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp182, double %output181, i64 0)
  %output185 = extractvalue { double, <2 x double> } %return183, 1
  store <2 x double> %output185, <2 x double>* %p
  %_p186 = load <2 x double>, <2 x double>* %_p
  %return187 = call double @"getcomp@FUI"(<2 x double> %_p186, i64 1)
  %output189 = fmul double %return187, %output148
  %return191 = call double @"getcomp@FUI"(<2 x double> %_p186, i64 0)
  %output193 = fmul double %return191, %output161
  %output194 = fsub double %output189, %output193
  %output196 = fmul double %output194, %output170
  %return198 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output185, double %output196, i64 1)
  %output200 = extractvalue { double, <2 x double> } %return198, 1
  store <2 x double> %output200, <2 x double>* %p
  br label %end
}

; Function Attrs: alwaysinline nounwind
define private void @"V_NGON@UUFFFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %pow, double* %sides, double* %corners, double* %circle) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %return = call double @"neg@FF"(double 5.000000e-01)
  %pow1 = load double, double* %pow
  %output = fmul double %return, %pow1
  %sides2 = load double, double* %sides
  %output3 = call double @"div@FF"(double 0x401921FB4D12D84A, double %sides2)
  %output5 = call double @"div@FF"(double 1.000000e+00, double %output3)
  %_p6 = load <2 x double>, <2 x double>* %_p
  %return7 = call double @"getcomp@FUI"(<2 x double> %_p6, i64 0)
  %return8 = fcmp oeq double %return7, 0.000000e+00
  %return9 = zext i1 %return8 to i64
  %return11 = call double @"getcomp@FUI"(<2 x double> %_p6, i64 1)
  %return12 = fcmp oeq double %return11, 0.000000e+00
  %return13 = zext i1 %return12 to i64
  %return14 = call i64 @"and@III"(i64 %return9, i64 %return13)
  %2 = icmp ne i64 %return14, 0
  br i1 %2, label %end, label %false

false:                                            ; preds = %__llvm_entry
  store <2 x double> %_p6, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %return17 = call double @"pow@FFF"(double %SUMSQ, double %output)
  br label %end

end:                                              ; preds = %__llvm_entry, %false
  %phi18 = phi double [ %return17, %false ], [ 0.000000e+00, %__llvm_entry ]
  %_p19 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p19, <2 x double>* %1
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %1)
  %output24 = fmul double %ATANYX, %output5
  %return25 = call double @"floor@FF"(double %output24)
  %output26 = fmul double %output3, %return25
  %output27 = fsub double %ATANYX, %output26
  %output30 = fmul double 5.000000e-01, %output3
  %return31 = fcmp ogt double %output27, %output30
  br i1 %return31, label %true33, label %end34

true33:                                           ; preds = %end
  %output37 = fsub double %output27, %output3
  br label %end34

end34:                                            ; preds = %true33, %end
  %phi.0 = phi double [ %output37, %true33 ], [ %output27, %end ]
  %corners38 = load double, double* %corners
  %return40 = call double @"cos@FF"(double %phi.0)
  %output41 = call double @"div@FF"(double 1.000000e+00, double %return40)
  %output42 = fsub double %output41, 1.000000e+00
  %output43 = fmul double %corners38, %output42
  %circle44 = load double, double* %circle
  %output45 = fadd double %output43, %circle44
  %w46 = load double, double* %w
  %output47 = fmul double %output45, %w46
  %output49 = fmul double %output47, %phi18
  %_p51 = load <2 x double>, <2 x double>* %_p
  %return52 = call double @"getcomp@FUI"(<2 x double> %_p51, i64 0)
  %output53 = fmul double %output49, %return52
  %tmp = load <2 x double>, <2 x double>* %p
  %return54 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output53, i64 0)
  %output56 = extractvalue { double, <2 x double> } %return54, 1
  store <2 x double> %output56, <2 x double>* %p
  %_p58 = load <2 x double>, <2 x double>* %_p
  %return59 = call double @"getcomp@FUI"(<2 x double> %_p58, i64 1)
  %output60 = fmul double %output49, %return59
  %return62 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output56, double %output60, i64 1)
  %output64 = extractvalue { double, <2 x double> } %return62, 1
  store <2 x double> %output64, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind readnone
declare i64 @"and@III"(i64, i64) #1

; Function Attrs: alwaysinline nounwind
define private void @"V_PDJ@UUFP"(<2 x double>* %p, <2 x double>* %_p, double* %w, <4 x double>* %pp) #0 {
__llvm_entry:
  %pp1 = load <4 x double>, <4 x double>* %pp
  %return = call double @"getcomp@FPI"(<4 x double> %pp1, i64 1)
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return3 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %output = fmul double %return, %return3
  %return4 = call double @"cos@FF"(double %output)
  %return6 = call double @"getcomp@FPI"(<4 x double> %pp1, i64 2)
  %output9 = fmul double %return6, %return3
  %return10 = call double @"sin@FF"(double %output9)
  %return12 = call double @"getcomp@FPI"(<4 x double> %pp1, i64 0)
  %return14 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  %output15 = fmul double %return12, %return14
  %return16 = call double @"sin@FF"(double %output15)
  %return18 = call double @"getcomp@FPI"(<4 x double> %pp1, i64 3)
  %output21 = fmul double %return18, %return14
  %return22 = call double @"cos@FF"(double %output21)
  %w23 = load double, double* %w
  %output26 = fsub double %return16, %return4
  %output27 = fmul double %w23, %output26
  %tmp = load <2 x double>, <2 x double>* %p
  %return28 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output27, i64 0)
  %output30 = extractvalue { double, <2 x double> } %return28, 1
  store <2 x double> %output30, <2 x double>* %p
  %w31 = load double, double* %w
  %output34 = fsub double %return10, %return22
  %output35 = fmul double %w31, %output34
  %return37 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output30, double %output35, i64 1)
  %output39 = extractvalue { double, <2 x double> } %return37, 1
  store <2 x double> %output39, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind readnone
declare double @"getcomp@FPI"(<4 x double>, i64) #1

; Function Attrs: alwaysinline nounwind
define private void @"V_BLOB@UUFFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %pp1, double* %pp2, double* %pp3) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %cast = call <2 x double> @"set@UF"(double %SQRT)
  %output = call <2 x double> @"div@UU"(<2 x double> %_p1, <2 x double> %cast)
  %_p4 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p4, <2 x double>* %1
  %SQRT5 = call double @"SQRT@FU"(<2 x double>* %1)
  %_p7 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p7, <2 x double>* %2
  %ATAN = call double @"ATAN@FU"(<2 x double>* %2)
  %pp18 = load double, double* %pp1
  %pp29 = load double, double* %pp2
  %output10 = fsub double %pp18, %pp29
  %pp314 = load double, double* %pp3
  %output16 = fmul double %pp314, %ATAN
  %return = call double @"sin@FF"(double %output16)
  %output17 = fmul double 5.000000e-01, %return
  %output18 = fadd double 5.000000e-01, %output17
  %output19 = fmul double %output10, %output18
  %output20 = fadd double %pp29, %output19
  %output21 = fmul double %SQRT5, %output20
  %w22 = load double, double* %w
  %return24 = call double @"getcomp@FUI"(<2 x double> %output, i64 0)
  %output25 = fmul double %w22, %return24
  %output27 = fmul double %output25, %output21
  %tmp = load <2 x double>, <2 x double>* %p
  %return28 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output27, i64 0)
  %output30 = extractvalue { double, <2 x double> } %return28, 1
  store <2 x double> %output30, <2 x double>* %p
  %w31 = load double, double* %w
  %return33 = call double @"getcomp@FUI"(<2 x double> %output, i64 1)
  %output34 = fmul double %w31, %return33
  %output36 = fmul double %output34, %output21
  %return38 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output30, double %output36, i64 1)
  %output40 = extractvalue { double, <2 x double> } %return38, 1
  store <2 x double> %output40, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_JULIAN@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %power, double* %jdist) #0 {
__llvm_entry:
  %sina = alloca double
  %cosa = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sina, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosa, !vex-initializer-store !3
  %power1 = load double, double* %power
  %jdist2 = load double, double* %jdist
  %output = call double @"div@FF"(double %jdist2, double %power1)
  %output4 = call double @"div@FF"(double %output, double 2.000000e+00)
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output6 = fmul double %power1, %return
  %return7 = call double @"trunc@FF"(double %output6)
  %cast = fptosi double %return7 to i64
  %_p8 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p8, <2 x double>* %0
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %0)
  %cast10 = sitofp i64 %cast to double
  %output11 = fmul double 0x401921FB4D12D84A, %cast10
  %output12 = fadd double %ATANYX, %output11
  %power13 = load double, double* %power
  %output14 = call double @"div@FF"(double %output12, double %power13)
  %w15 = load double, double* %w
  %_p16 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p16, <2 x double>* %1
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %1)
  %return18 = call double @"pow@FFF"(double %SUMSQ, double %output4)
  %output19 = fmul double %w15, %return18
  store double %output14, double* %2
  call void @"sincos@FFF"(double* %2, double* %sina, double* %cosa)
  %cosa22 = load double, double* %cosa
  %output23 = fmul double %output19, %cosa22
  %tmp = load <2 x double>, <2 x double>* %p
  %return24 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output23, i64 0)
  %output26 = extractvalue { double, <2 x double> } %return24, 1
  store <2 x double> %output26, <2 x double>* %p
  %sina28 = load double, double* %sina
  %output29 = fmul double %output19, %sina28
  %return31 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output26, double %output29, i64 1)
  %output33 = extractvalue { double, <2 x double> } %return31, 1
  store <2 x double> %output33, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind readnone
declare double @"trunc@FF"(double) #1

; Function Attrs: alwaysinline nounwind
define private void @"V_JULIASCOPE@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %power, double* %jdist) #0 {
__llvm_entry:
  %sina = alloca double
  %cosa = alloca double
  %0 = alloca <2 x double>
  %1 = alloca double
  %2 = alloca <2 x double>
  store double 0.000000e+00, double* %sina, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosa, !vex-initializer-store !3
  %power1 = load double, double* %power
  %jdist2 = load double, double* %jdist
  %output = call double @"div@FF"(double %jdist2, double %power1)
  %output4 = call double @"div@FF"(double %output, double 2.000000e+00)
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output6 = fmul double %power1, %return
  %return7 = call double @"trunc@FF"(double %output6)
  %cast = fptosi double %return7 to i64
  %return9 = and i64 %cast, 1
  %return10 = call i64 @"eq@III"(i64 %return9, i64 0)
  %3 = icmp ne i64 %return10, 0
  %cast12 = sitofp i64 %cast to double
  %output13 = fmul double 0x401921FB4D12D84A, %cast12
  %_p14 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p14, <2 x double>* %0
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %0)
  br i1 %3, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output15 = fadd double %output13, %ATANYX
  %power16 = load double, double* %power
  %output17 = call double @"div@FF"(double %output15, double %power16)
  br label %end

false:                                            ; preds = %__llvm_entry
  %output23 = fsub double %output13, %ATANYX
  %power24 = load double, double* %power
  %output25 = call double @"div@FF"(double %output23, double %power24)
  br label %end

end:                                              ; preds = %false, %true
  %phi = phi double [ %output17, %true ], [ %output25, %false ]
  store double %phi, double* %1
  call void @"sincos@FFF"(double* %1, double* %sina, double* %cosa)
  %w27 = load double, double* %w
  %_p28 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p28, <2 x double>* %2
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %2)
  %return30 = call double @"pow@FFF"(double %SUMSQ, double %output4)
  %output31 = fmul double %w27, %return30
  %cosa33 = load double, double* %cosa
  %output34 = fmul double %output31, %cosa33
  %tmp = load <2 x double>, <2 x double>* %p
  %return35 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output34, i64 0)
  %output37 = extractvalue { double, <2 x double> } %return35, 1
  store <2 x double> %output37, <2 x double>* %p
  %sina39 = load double, double* %sina
  %output40 = fmul double %output31, %sina39
  %return42 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output37, double %output40, i64 1)
  %output44 = extractvalue { double, <2 x double> } %return42, 1
  store <2 x double> %output44, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_GAUSSIAN@UF"(<2 x double>* %p, double* %w) #0 {
__llvm_entry:
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output = fmul double %return, 2.000000e+00
  %output1 = fmul double %output, 0x400921FB4D12D84A
  %w2 = load double, double* %w
  %return3 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return4 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output5 = fadd double %return3, %return4
  %return6 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output7 = fadd double %output5, %return6
  %return8 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output9 = fadd double %output7, %return8
  %output10 = fsub double %output9, 2.000000e+00
  %output11 = fmul double %w2, %output10
  %return14 = call double @"cos@FF"(double %output1)
  %output15 = fmul double %output11, %return14
  %tmp = load <2 x double>, <2 x double>* %p
  %return16 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output15, i64 0)
  %output18 = extractvalue { double, <2 x double> } %return16, 1
  store <2 x double> %output18, <2 x double>* %p
  %return21 = call double @"sin@FF"(double %output1)
  %output22 = fmul double %output11, %return21
  %return24 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output18, double %output22, i64 1)
  %output26 = extractvalue { double, <2 x double> } %return24, 1
  store <2 x double> %output26, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_FAN2@UUFU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %fan2) #0 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %fan21 = load <2 x double>, <2 x double>* %fan2
  %return = call double @"getcomp@FUI"(<2 x double> %fan21, i64 1)
  %return3 = call double @"getcomp@FUI"(<2 x double> %fan21, i64 0)
  %output = fmul double %return3, %return3
  %output6 = fadd double %output, 1.000000e-10
  %output7 = fmul double 0x400921FB4D12D84A, %output6
  %output9 = fmul double 5.000000e-01, %output7
  %_p10 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p10, <2 x double>* %0
  %ATAN = call double @"ATAN@FU"(<2 x double>* %0)
  %w11 = load double, double* %w
  %_p12 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p12, <2 x double>* %1
  %SQRT = call double @"SQRT@FU"(<2 x double>* %1)
  %output13 = fmul double %w11, %SQRT
  %output16 = fadd double %ATAN, %return
  %output22 = call double @"div@FF"(double %output16, double %output7)
  %cast = fptosi double %output22 to i64
  %cast23 = sitofp i64 %cast to double
  %output24 = fmul double %output7, %cast23
  %output25 = fsub double %output16, %output24
  %return28 = fcmp ogt double %output25, %output9
  %output32 = fsub double %ATAN, %output9
  %output35 = fadd double %ATAN, %output9
  %phi = select i1 %return28, double %output32, double %output35
  store double %phi, double* %2
  call void @"sincos@FFF"(double* %2, double* %sa, double* %ca)
  %sa38 = load double, double* %sa
  %output39 = fmul double %output13, %sa38
  %tmp = load <2 x double>, <2 x double>* %p
  %return40 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output39, i64 0)
  %output42 = extractvalue { double, <2 x double> } %return40, 1
  store <2 x double> %output42, <2 x double>* %p
  %ca44 = load double, double* %ca
  %output45 = fmul double %output13, %ca44
  %return47 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output42, double %output45, i64 1)
  %output49 = extractvalue { double, <2 x double> } %return47, 1
  store <2 x double> %output49, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_RINGS2@UUFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %rings2val) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %cast = call <2 x double> @"set@UF"(double %SQRT)
  %output = call <2 x double> @"div@UU"(<2 x double> %_p1, <2 x double> %cast)
  %_p3 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p3, <2 x double>* %1
  %SQRT4 = call double @"SQRT@FU"(<2 x double>* %1)
  %rings2val5 = load double, double* %rings2val
  %output7 = fmul double %rings2val5, %rings2val5
  %return = call double @"neg@FF"(double 2.000000e+00)
  %output10 = fmul double %return, %output7
  %output13 = fadd double %SQRT4, %output7
  %output15 = fmul double 2.000000e+00, %output7
  %output16 = call double @"div@FF"(double %output13, double %output15)
  %cast17 = fptosi double %output16 to i64
  %cast18 = sitofp i64 %cast17 to double
  %output19 = fmul double %output10, %cast18
  %output22 = fsub double 1.000000e+00, %output7
  %output23 = fmul double %SQRT4, %output22
  %output24 = fadd double %output19, %output23
  %output25 = fadd double %SQRT4, %output24
  %w26 = load double, double* %w
  %return28 = call double @"getcomp@FUI"(<2 x double> %output, i64 0)
  %output29 = fmul double %w26, %return28
  %output31 = fmul double %output29, %output25
  %tmp = load <2 x double>, <2 x double>* %p
  %return32 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output31, i64 0)
  %output34 = extractvalue { double, <2 x double> } %return32, 1
  store <2 x double> %output34, <2 x double>* %p
  %w35 = load double, double* %w
  %return37 = call double @"getcomp@FUI"(<2 x double> %output, i64 1)
  %output38 = fmul double %w35, %return37
  %output40 = fmul double %output38, %output25
  %return42 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output34, double %output40, i64 1)
  %output44 = extractvalue { double, <2 x double> } %return42, 1
  store <2 x double> %output44, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_RECTANGLES@UUFU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %rect) #0 {
__llvm_entry:
  %rect1 = load <2 x double>, <2 x double>* %rect
  %return = call double @"getcomp@FUI"(<2 x double> %rect1, i64 0)
  %return2 = fcmp oeq double %return, 0.000000e+00
  %w4 = load double, double* %w
  %_p5 = load <2 x double>, <2 x double>* %_p
  %return6 = call double @"getcomp@FUI"(<2 x double> %_p5, i64 0)
  br i1 %return2, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output = fmul double %w4, %return6
  %tmp = load <2 x double>, <2 x double>* %p
  %return7 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output, i64 0)
  %output9 = extractvalue { double, <2 x double> } %return7, 1
  store <2 x double> %output9, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %output15 = call double @"div@FF"(double %return6, double %return)
  %return16 = call i64 @"floor@IF"(double %output15)
  %output17 = mul i64 2, %return16
  %output18 = add i64 %output17, 1
  %rect19 = load <2 x double>, <2 x double>* %rect
  %return20 = call double @"getcomp@FUI"(<2 x double> %rect19, i64 0)
  %cast = sitofp i64 %output18 to double
  %output21 = fmul double %cast, %return20
  %_p22 = load <2 x double>, <2 x double>* %_p
  %return23 = call double @"getcomp@FUI"(<2 x double> %_p22, i64 0)
  %output24 = fsub double %output21, %return23
  %output25 = fmul double %w4, %output24
  %tmp26 = load <2 x double>, <2 x double>* %p
  %return27 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp26, double %output25, i64 0)
  %output29 = extractvalue { double, <2 x double> } %return27, 1
  store <2 x double> %output29, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  %rect30 = load <2 x double>, <2 x double>* %rect
  %return31 = call double @"getcomp@FUI"(<2 x double> %rect30, i64 1)
  %return32 = fcmp oeq double %return31, 0.000000e+00
  %w37 = load double, double* %w
  %_p38 = load <2 x double>, <2 x double>* %_p
  %return39 = call double @"getcomp@FUI"(<2 x double> %_p38, i64 1)
  br i1 %return32, label %true34, label %false35

true34:                                           ; preds = %end
  %output40 = fmul double %w37, %return39
  %tmp41 = load <2 x double>, <2 x double>* %p
  %return42 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp41, double %output40, i64 1)
  %output44 = extractvalue { double, <2 x double> } %return42, 1
  store <2 x double> %output44, <2 x double>* %p
  br label %end36

false35:                                          ; preds = %end
  %output50 = call double @"div@FF"(double %return39, double %return31)
  %return51 = call i64 @"floor@IF"(double %output50)
  %output52 = mul i64 2, %return51
  %output53 = add i64 %output52, 1
  %rect54 = load <2 x double>, <2 x double>* %rect
  %return55 = call double @"getcomp@FUI"(<2 x double> %rect54, i64 1)
  %cast56 = sitofp i64 %output53 to double
  %output57 = fmul double %cast56, %return55
  %_p58 = load <2 x double>, <2 x double>* %_p
  %return59 = call double @"getcomp@FUI"(<2 x double> %_p58, i64 1)
  %output60 = fsub double %output57, %return59
  %output61 = fmul double %w37, %output60
  %tmp62 = load <2 x double>, <2 x double>* %p
  %return63 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp62, double %output61, i64 1)
  %output65 = extractvalue { double, <2 x double> } %return63, 1
  store <2 x double> %output65, <2 x double>* %p
  br label %end36

end36:                                            ; preds = %false35, %true34
  ret void
}

; Function Attrs: nounwind
declare i64 @"floor@IF"(double) #2

; Function Attrs: alwaysinline nounwind
define private void @"V_RADIALBLUR@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %spin, double* %zoom) #0 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %w1 = load double, double* %w
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return2 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output = fadd double %return, %return2
  %return3 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output4 = fadd double %output, %return3
  %return5 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output6 = fadd double %output4, %return5
  %output7 = fsub double %output6, 2.000000e+00
  %output8 = fmul double %w1, %output7
  %_p9 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p9, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %_p10 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p10, <2 x double>* %1
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %1)
  %spin11 = load double, double* %spin
  %output13 = fmul double %spin11, %output8
  %output14 = fadd double %ATANYX, %output13
  store double %output14, double* %2
  call void @"sincos@FFF"(double* %2, double* %sa, double* %ca)
  %zoom16 = load double, double* %zoom
  %output18 = fmul double %zoom16, %output8
  %output19 = fsub double %output18, 1.000000e+00
  %ca21 = load double, double* %ca
  %output22 = fmul double %SQRT, %ca21
  %_p24 = load <2 x double>, <2 x double>* %_p
  %return25 = call double @"getcomp@FUI"(<2 x double> %_p24, i64 0)
  %output26 = fmul double %output19, %return25
  %output27 = fadd double %output22, %output26
  %tmp = load <2 x double>, <2 x double>* %p
  %return28 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output27, i64 0)
  %output30 = extractvalue { double, <2 x double> } %return28, 1
  store <2 x double> %output30, <2 x double>* %p
  %sa32 = load double, double* %sa
  %output33 = fmul double %SQRT, %sa32
  %_p35 = load <2 x double>, <2 x double>* %_p
  %return36 = call double @"getcomp@FUI"(<2 x double> %_p35, i64 1)
  %output37 = fmul double %output19, %return36
  %output38 = fadd double %output33, %output37
  %return40 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output30, double %output38, i64 1)
  %output42 = extractvalue { double, <2 x double> } %return40, 1
  store <2 x double> %output42, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_PIE@UFFFF"(<2 x double>* %p, double* %w, double* %slices, double* %thickness, double* %rotation) #0 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %slices1 = load double, double* %slices
  %output = fmul double %return, %slices1
  %cast = fptosi double %output to i64
  %cast2 = sitofp i64 %cast to double
  %rotation3 = load double, double* %rotation
  %return5 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %thickness6 = load double, double* %thickness
  %output7 = fmul double %return5, %thickness6
  %output8 = fadd double %cast2, %output7
  %output9 = fmul double 0x401921FB4D12D84A, %output8
  %slices10 = load double, double* %slices
  %output11 = call double @"div@FF"(double %output9, double %slices10)
  %output12 = fadd double %rotation3, %output11
  %w13 = load double, double* %w
  %return14 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output15 = fmul double %w13, %return14
  store double %output12, double* %0
  call void @"sincos@FFF"(double* %0, double* %sa, double* %ca)
  %ca18 = load double, double* %ca
  %output19 = fmul double %output15, %ca18
  %tmp = load <2 x double>, <2 x double>* %p
  %return20 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output19, i64 0)
  %output22 = extractvalue { double, <2 x double> } %return20, 1
  store <2 x double> %output22, <2 x double>* %p
  %sa24 = load double, double* %sa
  %output25 = fmul double %output15, %sa24
  %return27 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output22, double %output25, i64 1)
  %output29 = extractvalue { double, <2 x double> } %return27, 1
  store <2 x double> %output29, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_ARCH@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %sinr = alloca double
  %cosr = alloca double
  %0 = alloca double
  store double 0.000000e+00, double* %sinr, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosr, !vex-initializer-store !3
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %w1 = load double, double* %w
  %output = fmul double %return, %w1
  %output2 = fmul double %output, 0x400921FB4D12D84A
  store double %output2, double* %0
  call void @"sincos@FFF"(double* %0, double* %sinr, double* %cosr)
  %w4 = load double, double* %w
  %sinr5 = load double, double* %sinr
  %output6 = fmul double %w4, %sinr5
  %tmp = load <2 x double>, <2 x double>* %p
  %return7 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output6, i64 0)
  %output9 = extractvalue { double, <2 x double> } %return7, 1
  store <2 x double> %output9, <2 x double>* %p
  %w10 = load double, double* %w
  %sinr11 = load double, double* %sinr
  %output13 = fmul double %sinr11, %sinr11
  %output14 = fmul double %w10, %output13
  %cosr15 = load double, double* %cosr
  %output16 = call double @"div@FF"(double %output14, double %cosr15)
  %return18 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output9, double %output16, i64 1)
  %output20 = extractvalue { double, <2 x double> } %return18, 1
  store <2 x double> %output20, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_TANGENT@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %w1 = load double, double* %w
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %return3 = call double @"sin@FF"(double %return)
  %return5 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  %return6 = call double @"cos@FF"(double %return5)
  %output = call double @"div@FF"(double %return3, double %return6)
  %output7 = fmul double %w1, %output
  %tmp = load <2 x double>, <2 x double>* %p
  %return8 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output7, i64 0)
  %output10 = extractvalue { double, <2 x double> } %return8, 1
  store <2 x double> %output10, <2 x double>* %p
  %w11 = load double, double* %w
  %_p12 = load <2 x double>, <2 x double>* %_p
  %return13 = call double @"getcomp@FUI"(<2 x double> %_p12, i64 1)
  %return14 = call double @"tan@FF"(double %return13)
  %output15 = fmul double %w11, %return14
  %return17 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output10, double %output15, i64 1)
  %output19 = extractvalue { double, <2 x double> } %return17, 1
  store <2 x double> %output19, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SQUARE@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %w1 = load double, double* %w
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output = fsub double %return, 5.000000e-01
  %output2 = fmul double %w1, %output
  %tmp = load <2 x double>, <2 x double>* %p
  %return3 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output2, i64 0)
  %output5 = extractvalue { double, <2 x double> } %return3, 1
  store <2 x double> %output5, <2 x double>* %p
  %w6 = load double, double* %w
  %return7 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output8 = fsub double %return7, 5.000000e-01
  %output9 = fmul double %w6, %output8
  %tmp10 = load <2 x double>, <2 x double>* %p
  %return11 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp10, double %output9, i64 1)
  %output13 = extractvalue { double, <2 x double> } %return11, 1
  store <2 x double> %output13, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_RAYS@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %w1 = load double, double* %w
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output = fmul double %w1, %return
  %output2 = fmul double %output, 0x400921FB4D12D84A
  %w3 = load double, double* %w
  %_p4 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p4, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %output5 = fadd double %SUMSQ, 1.000000e-10
  %output6 = call double @"div@FF"(double %w3, double %output5)
  %w7 = load double, double* %w
  %return9 = call double @"tan@FF"(double %output2)
  %output10 = fmul double %w7, %return9
  %output12 = fmul double %output10, %output6
  %_p14 = load <2 x double>, <2 x double>* %_p
  %return15 = call double @"getcomp@FUI"(<2 x double> %_p14, i64 0)
  %return16 = call double @"cos@FF"(double %return15)
  %output17 = fmul double %output12, %return16
  %tmp = load <2 x double>, <2 x double>* %p
  %return18 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output17, i64 0)
  %output20 = extractvalue { double, <2 x double> } %return18, 1
  store <2 x double> %output20, <2 x double>* %p
  %_p22 = load <2 x double>, <2 x double>* %_p
  %return23 = call double @"getcomp@FUI"(<2 x double> %_p22, i64 1)
  %return24 = call double @"sin@FF"(double %return23)
  %output25 = fmul double %output12, %return24
  %return27 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output20, double %output25, i64 1)
  %output29 = extractvalue { double, <2 x double> } %return27, 1
  store <2 x double> %output29, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_BLADE@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %sinr = alloca double
  %cosr = alloca double
  %0 = alloca <2 x double>
  %1 = alloca double
  store double 0.000000e+00, double* %sinr, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosr, !vex-initializer-store !3
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %w1 = load double, double* %w
  %output = fmul double %return, %w1
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %output3 = fmul double %output, %SQRT
  store double %output3, double* %1
  call void @"sincos@FFF"(double* %1, double* %sinr, double* %cosr)
  %w5 = load double, double* %w
  %_p6 = load <2 x double>, <2 x double>* %_p
  %return7 = call double @"getcomp@FUI"(<2 x double> %_p6, i64 0)
  %output8 = fmul double %w5, %return7
  %cosr9 = load double, double* %cosr
  %sinr10 = load double, double* %sinr
  %output11 = fadd double %cosr9, %sinr10
  %output12 = fmul double %output8, %output11
  %tmp = load <2 x double>, <2 x double>* %p
  %return13 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output12, i64 0)
  %output15 = extractvalue { double, <2 x double> } %return13, 1
  store <2 x double> %output15, <2 x double>* %p
  %w16 = load double, double* %w
  %_p17 = load <2 x double>, <2 x double>* %_p
  %return18 = call double @"getcomp@FUI"(<2 x double> %_p17, i64 0)
  %output19 = fmul double %w16, %return18
  %cosr20 = load double, double* %cosr
  %sinr21 = load double, double* %sinr
  %output22 = fsub double %cosr20, %sinr21
  %output23 = fmul double %output19, %output22
  %return25 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output15, double %output23, i64 1)
  %output27 = extractvalue { double, <2 x double> } %return25, 1
  store <2 x double> %output27, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SECANT2@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %w1 = load double, double* %w
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %output = fmul double %w1, %SQRT
  %return = call double @"cos@FF"(double %output)
  %output7 = call double @"div@FF"(double 1.000000e+00, double %return)
  %w8 = load double, double* %w
  %_p9 = load <2 x double>, <2 x double>* %_p
  %return10 = call double @"getcomp@FUI"(<2 x double> %_p9, i64 0)
  %output11 = fmul double %w8, %return10
  %tmp = load <2 x double>, <2 x double>* %p
  %return12 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output11, i64 0)
  %output14 = extractvalue { double, <2 x double> } %return12, 1
  store <2 x double> %output14, <2 x double>* %p
  %return16 = fcmp olt double %return, 0.000000e+00
  %w18 = load double, double* %w
  %output20 = fadd double %output7, 1.000000e+00
  %output21 = fmul double %w18, %output20
  %output24 = fsub double %output7, 1.000000e+00
  %output25 = fmul double %w18, %output24
  %phi = select i1 %return16, double %output21, double %output25
  %return27 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output14, double %phi, i64 1)
  %output29 = extractvalue { double, <2 x double> } %return27, 1
  store <2 x double> %output29, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_TWINTRIAN@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %sinr = alloca double
  %cosr = alloca double
  %0 = alloca <2 x double>
  %1 = alloca double
  store double 0.000000e+00, double* %sinr, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosr, !vex-initializer-store !3
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %w1 = load double, double* %w
  %output = fmul double %return, %w1
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %output3 = fmul double %output, %SQRT
  store double %output3, double* %1
  call void @"sincos@FFF"(double* %1, double* %sinr, double* %cosr)
  %sinr5 = load double, double* %sinr
  %output7 = fmul double %sinr5, %sinr5
  %return8 = call double @"log10@FF"(double %output7)
  %cosr9 = load double, double* %cosr
  %output10 = fadd double %return8, %cosr9
  %return12 = call i64 @"isfinite@IF"(double %output10)
  %return13 = call i64 @"not@II"(i64 %return12)
  %return15 = call i64 @"isnan@IF"(double %output10)
  %return16 = call i64 @"or@III"(i64 %return13, i64 %return15)
  %2 = icmp ne i64 %return16, 0
  br i1 %2, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %return17 = call double @"neg@FF"(double 3.000000e+01)
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %diff.0 = phi double [ %return17, %true ], [ %output10, %__llvm_entry ]
  %w18 = load double, double* %w
  %_p19 = load <2 x double>, <2 x double>* %_p
  %return20 = call double @"getcomp@FUI"(<2 x double> %_p19, i64 0)
  %output21 = fmul double %w18, %return20
  %output23 = fmul double %output21, %diff.0
  %tmp = load <2 x double>, <2 x double>* %p
  %return24 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output23, i64 0)
  %output26 = extractvalue { double, <2 x double> } %return24, 1
  store <2 x double> %output26, <2 x double>* %p
  %w27 = load double, double* %w
  %_p28 = load <2 x double>, <2 x double>* %_p
  %return29 = call double @"getcomp@FUI"(<2 x double> %_p28, i64 0)
  %output30 = fmul double %w27, %return29
  %sinr32 = load double, double* %sinr
  %output33 = fmul double %sinr32, 0x400921FB4D12D84A
  %output34 = fsub double %diff.0, %output33
  %output35 = fmul double %output30, %output34
  %return37 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output26, double %output35, i64 1)
  %output39 = extractvalue { double, <2 x double> } %return37, 1
  store <2 x double> %output39, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind readnone
declare double @"log10@FF"(double) #1

; Function Attrs: alwaysinline nounwind
define private void @"V_CROSS@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  %output = fmul double %return, %return
  %return5 = call double @"getcomp@FUI"(<2 x double> %_p1, i64 1)
  %output8 = fmul double %return5, %return5
  %output9 = fsub double %output, %output8
  %w10 = load double, double* %w
  %output13 = fmul double %output9, %output9
  %output14 = fadd double %output13, 1.000000e-10
  %output15 = call double @"div@FF"(double 1.000000e+00, double %output14)
  %return16 = call double @"sqrt@FF"(double %output15)
  %output17 = fmul double %w10, %return16
  %output21 = fmul double %return, %output17
  %tmp = load <2 x double>, <2 x double>* %p
  %return22 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output21, i64 0)
  %output24 = extractvalue { double, <2 x double> } %return22, 1
  store <2 x double> %output24, <2 x double>* %p
  %_p25 = load <2 x double>, <2 x double>* %_p
  %return26 = call double @"getcomp@FUI"(<2 x double> %_p25, i64 1)
  %output28 = fmul double %return26, %output17
  %return30 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output24, double %output28, i64 1)
  %output32 = extractvalue { double, <2 x double> } %return30, 1
  store <2 x double> %output32, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_DISC2@UUFFFFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %rot, double* %twist, double* %disc2_timespi, double* %disc2_sinadd, double* %disc2_cosadd) #0 {
__llvm_entry:
  %sinr = alloca double
  %cosr = alloca double
  %0 = alloca double
  %1 = alloca <2 x double>
  store double 0.000000e+00, double* %sinr, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosr, !vex-initializer-store !3
  %disc2_timespi1 = load double, double* %disc2_timespi
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %return4 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  %output = fadd double %return, %return4
  %output5 = fmul double %disc2_timespi1, %output
  store double %output5, double* %0
  call void @"sincos@FFF"(double* %0, double* %sinr, double* %cosr)
  %w7 = load double, double* %w
  %_p8 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p8, <2 x double>* %1
  %ATAN = call double @"ATAN@FU"(<2 x double>* %1)
  %output9 = fmul double %w7, %ATAN
  %output10 = call double @"div@FF"(double %output9, double 0x400921FB4D12D84A)
  %sinr11 = load double, double* %sinr
  %disc2_cosadd12 = load double, double* %disc2_cosadd
  %output13 = fadd double %sinr11, %disc2_cosadd12
  %output15 = fmul double %output13, %output10
  %tmp = load <2 x double>, <2 x double>* %p
  %return16 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output15, i64 0)
  %output18 = extractvalue { double, <2 x double> } %return16, 1
  store <2 x double> %output18, <2 x double>* %p
  %cosr19 = load double, double* %cosr
  %disc2_sinadd20 = load double, double* %disc2_sinadd
  %output21 = fadd double %cosr19, %disc2_sinadd20
  %output23 = fmul double %output21, %output10
  %return25 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output18, double %output23, i64 1)
  %output27 = extractvalue { double, <2 x double> } %return25, 1
  store <2 x double> %output27, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_DISC2_L@UUFFFV"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %rot, double* %twist, <3 x double>* %precalc) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca double
  %2 = alloca double
  %3 = alloca double
  %4 = alloca double
  %5 = alloca double
  %6 = alloca double
  %precalc1 = load <3 x double>, <3 x double>* %precalc
  %return = call double @"getcomp@FVI"(<3 x double> %precalc1, i64 0)
  %return3 = call double @"getcomp@FVI"(<3 x double> %precalc1, i64 1)
  %return5 = call double @"getcomp@FVI"(<3 x double> %precalc1, i64 2)
  %_p6 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p6, <2 x double>* %0
  %w7 = load double, double* %w
  store double %w7, double* %1
  store double %return, double* %4
  store double %return3, double* %5
  store double %return5, double* %6
  call void @"V_DISC2@UUFFFFFF"(<2 x double>* %p, <2 x double>* %0, double* %1, double* %2, double* %3, double* %4, double* %5, double* %6)
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_DISC2_FF@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %rot, double* %twist) #0 {
__llvm_entry:
  %precalc = alloca <3 x double>
  %0 = alloca double
  %1 = alloca double
  %2 = alloca <2 x double>
  %3 = alloca double
  %4 = alloca double
  %5 = alloca double
  %6 = alloca double
  %7 = alloca double
  %8 = alloca double
  store <3 x double> zeroinitializer, <3 x double>* %precalc, !vex-initializer-store !3
  %rot1 = load double, double* %rot
  store double %rot1, double* %0
  %twist2 = load double, double* %twist
  store double %twist2, double* %1
  call void @"precalc_V_DISC2@VFF"(<3 x double>* %precalc, double* %0, double* %1)
  %precalc3 = load <3 x double>, <3 x double>* %precalc
  %return = call double @"getcomp@FVI"(<3 x double> %precalc3, i64 0)
  %return5 = call double @"getcomp@FVI"(<3 x double> %precalc3, i64 1)
  %return7 = call double @"getcomp@FVI"(<3 x double> %precalc3, i64 2)
  %_p8 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p8, <2 x double>* %2
  %w9 = load double, double* %w
  store double %w9, double* %3
  store double %return, double* %6
  store double %return5, double* %7
  store double %return7, double* %8
  call void @"V_DISC2@UUFFFFFF"(<2 x double>* %p, <2 x double>* %2, double* %3, double* %4, double* %5, double* %6, double* %7, double* %8)
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SUPERSHAPE@UUFFFFV"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %ss_rnd, double* %ss_m, double* %ss_holes, <3 x double>* %ss_n) #0 {
__llvm_entry:
  %st = alloca double
  %ct = alloca double
  %0 = alloca <2 x double>
  %1 = alloca double
  %2 = alloca <2 x double>
  store double 0.000000e+00, double* %st, !vex-initializer-store !3
  store double 0.000000e+00, double* %ct, !vex-initializer-store !3
  %ss_m1 = load double, double* %ss_m
  %output = call double @"div@FF"(double %ss_m1, double 4.000000e+00)
  %return = call double @"neg@FF"(double 1.000000e+00)
  %ss_n2 = load <3 x double>, <3 x double>* %ss_n
  %return3 = call double @"getcomp@FVI"(<3 x double> %ss_n2, i64 0)
  %output4 = call double @"div@FF"(double %return, double %return3)
  %_p6 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p6, <2 x double>* %0
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %0)
  %output7 = fmul double %output, %ATANYX
  %output8 = fadd double %output7, 7.853981e-01
  store double %output8, double* %1
  call void @"sincos@FFF"(double* %1, double* %st, double* %ct)
  %ct10 = load double, double* %ct
  %return11 = call double @"abs@FF"(double %ct10)
  %ss_n13 = load <3 x double>, <3 x double>* %ss_n
  %return14 = call double @"getcomp@FVI"(<3 x double> %ss_n13, i64 1)
  %return15 = call double @"pow@FFF"(double %return11, double %return14)
  %st16 = load double, double* %st
  %return17 = call double @"abs@FF"(double %st16)
  %ss_n19 = load <3 x double>, <3 x double>* %ss_n
  %return20 = call double @"getcomp@FVI"(<3 x double> %ss_n19, i64 2)
  %return21 = call double @"pow@FFF"(double %return17, double %return20)
  %_p22 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p22, <2 x double>* %2
  %SQRT23 = call double @"SQRT@FU"(<2 x double>* %2)
  %w24 = load double, double* %w
  %ss_rnd25 = load double, double* %ss_rnd
  %return26 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output27 = fmul double %ss_rnd25, %return26
  %ss_rnd28 = load double, double* %ss_rnd
  %output29 = fsub double 1.000000e+00, %ss_rnd28
  %output31 = fmul double %output29, %SQRT23
  %output32 = fadd double %output27, %output31
  %ss_holes33 = load double, double* %ss_holes
  %output34 = fsub double %output32, %ss_holes33
  %output35 = fmul double %w24, %output34
  %output38 = fadd double %return15, %return21
  %return40 = call double @"pow@FFF"(double %output38, double %output4)
  %output41 = fmul double %output35, %return40
  %output43 = call double @"div@FF"(double %output41, double %SQRT23)
  %_p45 = load <2 x double>, <2 x double>* %_p
  %return46 = call double @"getcomp@FUI"(<2 x double> %_p45, i64 0)
  %output47 = fmul double %output43, %return46
  %tmp = load <2 x double>, <2 x double>* %p
  %return48 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output47, i64 0)
  %output50 = extractvalue { double, <2 x double> } %return48, 1
  store <2 x double> %output50, <2 x double>* %p
  %_p52 = load <2 x double>, <2 x double>* %_p
  %return53 = call double @"getcomp@FUI"(<2 x double> %_p52, i64 1)
  %output54 = fmul double %output43, %return53
  %return56 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output50, double %output54, i64 1)
  %output58 = extractvalue { double, <2 x double> } %return56, 1
  store <2 x double> %output58, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_FLOWER@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %petals, double* %holes) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %0)
  %w2 = load double, double* %w
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %holes3 = load double, double* %holes
  %output = fsub double %return, %holes3
  %output4 = fmul double %w2, %output
  %petals5 = load double, double* %petals
  %output7 = fmul double %petals5, %ATANYX
  %return8 = call double @"cos@FF"(double %output7)
  %output9 = fmul double %output4, %return8
  %_p10 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p10, <2 x double>* %1
  %SQRT = call double @"SQRT@FU"(<2 x double>* %1)
  %output11 = call double @"div@FF"(double %output9, double %SQRT)
  %_p13 = load <2 x double>, <2 x double>* %_p
  %return14 = call double @"getcomp@FUI"(<2 x double> %_p13, i64 0)
  %output15 = fmul double %output11, %return14
  %tmp = load <2 x double>, <2 x double>* %p
  %return16 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output15, i64 0)
  %output18 = extractvalue { double, <2 x double> } %return16, 1
  store <2 x double> %output18, <2 x double>* %p
  %_p20 = load <2 x double>, <2 x double>* %_p
  %return21 = call double @"getcomp@FUI"(<2 x double> %_p20, i64 1)
  %output22 = fmul double %output11, %return21
  %return24 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output18, double %output22, i64 1)
  %output26 = extractvalue { double, <2 x double> } %return24, 1
  store <2 x double> %output26, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_CONIC@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %eccentricity, double* %holes) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT2 = call double @"SQRT@FU"(<2 x double>* %0)
  %_p3 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p3, i64 0)
  %output = call double @"div@FF"(double %return, double %SQRT2)
  %w5 = load double, double* %w
  %return6 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %holes7 = load double, double* %holes
  %output8 = fsub double %return6, %holes7
  %output9 = fmul double %w5, %output8
  %eccentricity10 = load double, double* %eccentricity
  %output11 = fmul double %output9, %eccentricity10
  %output14 = fmul double %eccentricity10, %output
  %output15 = fadd double 1.000000e+00, %output14
  %output16 = call double @"div@FF"(double %output11, double %output15)
  %output18 = call double @"div@FF"(double %output16, double %SQRT2)
  %_p20 = load <2 x double>, <2 x double>* %_p
  %return21 = call double @"getcomp@FUI"(<2 x double> %_p20, i64 0)
  %output22 = fmul double %output18, %return21
  %tmp = load <2 x double>, <2 x double>* %p
  %return23 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output22, i64 0)
  %output25 = extractvalue { double, <2 x double> } %return23, 1
  store <2 x double> %output25, <2 x double>* %p
  %_p27 = load <2 x double>, <2 x double>* %_p
  %return28 = call double @"getcomp@FUI"(<2 x double> %_p27, i64 1)
  %output29 = fmul double %output18, %return28
  %return31 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output25, double %output29, i64 1)
  %output33 = extractvalue { double, <2 x double> } %return31, 1
  store <2 x double> %output33, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_PARABOLA@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %height, double* %width) #0 {
__llvm_entry:
  %sr = alloca double
  %cr = alloca double
  %0 = alloca <2 x double>
  %1 = alloca double
  store double 0.000000e+00, double* %sr, !vex-initializer-store !3
  store double 0.000000e+00, double* %cr, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  store double %SQRT, double* %1
  call void @"sincos@FFF"(double* %1, double* %sr, double* %cr)
  %height3 = load double, double* %height
  %w4 = load double, double* %w
  %output = fmul double %height3, %w4
  %sr5 = load double, double* %sr
  %output6 = fmul double %output, %sr5
  %output8 = fmul double %output6, %sr5
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output9 = fmul double %output8, %return
  %tmp = load <2 x double>, <2 x double>* %p
  %return10 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output9, i64 0)
  %output12 = extractvalue { double, <2 x double> } %return10, 1
  store <2 x double> %output12, <2 x double>* %p
  %width13 = load double, double* %width
  %w14 = load double, double* %w
  %output15 = fmul double %width13, %w14
  %cr16 = load double, double* %cr
  %output17 = fmul double %output15, %cr16
  %return18 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output19 = fmul double %output17, %return18
  %tmp20 = load <2 x double>, <2 x double>* %p
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp20, double %output19, i64 1)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_BENT2@UUFU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %bent2) #0 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  %return3 = call double @"getcomp@FUI"(<2 x double> %_p1, i64 1)
  %return5 = fcmp olt double %return, 0.000000e+00
  br i1 %return5, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %bent28 = load <2 x double>, <2 x double>* %bent2
  %return9 = call double @"getcomp@FUI"(<2 x double> %bent28, i64 0)
  %output = fmul double %return, %return9
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %nx.0 = phi double [ %output, %true ], [ %return, %__llvm_entry ]
  %return11 = fcmp olt double %return3, 0.000000e+00
  br i1 %return11, label %true13, label %end14

true13:                                           ; preds = %end
  %bent216 = load <2 x double>, <2 x double>* %bent2
  %return17 = call double @"getcomp@FUI"(<2 x double> %bent216, i64 1)
  %output18 = fmul double %return3, %return17
  br label %end14

end14:                                            ; preds = %true13, %end
  %ny.0 = phi double [ %output18, %true13 ], [ %return3, %end ]
  %w19 = load double, double* %w
  %output21 = fmul double %w19, %nx.0
  %tmp = load <2 x double>, <2 x double>* %p
  %return22 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output21, i64 0)
  %output24 = extractvalue { double, <2 x double> } %return22, 1
  store <2 x double> %output24, <2 x double>* %p
  %w25 = load double, double* %w
  %output27 = fmul double %w25, %ny.0
  %return29 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output24, double %output27, i64 1)
  %output31 = extractvalue { double, <2 x double> } %return29, 1
  store <2 x double> %output31, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_BIPOLAR@UUFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %shift) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca double
  %2 = alloca double
  %3 = alloca double
  %4 = alloca double
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %output = fadd double %SUMSQ, 1.000000e+00
  %_p3 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p3, i64 0)
  %output4 = fmul double 2.000000e+00, %return
  %return5 = call double @"neg@FF"(double 0x3FF921FB4D12D84A)
  %shift6 = load double, double* %shift
  %output7 = fmul double %return5, %shift6
  %return9 = call double @"getcomp@FUI"(<2 x double> %_p3, i64 1)
  %output10 = fmul double 2.000000e+00, %return9
  %output12 = fsub double %SUMSQ, 1.000000e+00
  %return13 = call double @"atan2@FFF"(double %output10, double %output12)
  %output14 = fmul double 5.000000e-01, %return13
  %output16 = fadd double %output14, %output7
  %return18 = fcmp ogt double %output16, 0x3FF921FB4D12D84A
  br i1 %return18, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output22 = fadd double %output16, 0x3FF921FB4D12D84A
  store double %output22, double* %1
  store double 0x400921FB4D12D84A, double* %2
  %fmod = call double @"fmod@FFF"(double* %1, double* %2)
  %output23 = fadd double %return5, %fmod
  br label %end

false:                                            ; preds = %__llvm_entry
  %return26 = fcmp olt double %output16, %return5
  br i1 %return26, label %true28, label %end

end:                                              ; preds = %false, %true28, %true
  %y.0 = phi double [ %output23, %true ], [ %output33, %true28 ], [ %output16, %false ]
  %w34 = load double, double* %w
  %output35 = fmul double %w34, 2.500000e-01
  %output36 = fmul double %output35, 0x3FE45F306DC9C883
  %output39 = fadd double %output, %output4
  %output42 = fsub double %output, %output4
  %output43 = call double @"div@FF"(double %output39, double %output42)
  %return44 = call double @"log@FF"(double %output43)
  %output45 = fmul double %output36, %return44
  %tmp = load <2 x double>, <2 x double>* %p
  %return46 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output45, i64 0)
  %output48 = extractvalue { double, <2 x double> } %return46, 1
  store <2 x double> %output48, <2 x double>* %p
  %w49 = load double, double* %w
  %output50 = fmul double %w49, 0x3FE45F306DC9C883
  %output52 = fmul double %output50, %y.0
  %return54 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output48, double %output52, i64 1)
  %output56 = extractvalue { double, <2 x double> } %return54, 1
  store <2 x double> %output56, <2 x double>* %p
  ret void

true28:                                           ; preds = %false
  %output31 = fsub double 0x3FF921FB4D12D84A, %output16
  store double %output31, double* %3
  store double 0x400921FB4D12D84A, double* %4
  %fmod32 = call double @"fmod@FFF"(double* %3, double* %4)
  %output33 = fsub double 0x3FF921FB4D12D84A, %fmod32
  br label %end
}

; Function Attrs: nounwind readnone
declare double @"log@FF"(double) #1

; Function Attrs: alwaysinline nounwind
define private void @"V_BOARDERS@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  %return2 = call double @"rint@FF"(double %return)
  %return4 = call double @"getcomp@FUI"(<2 x double> %_p1, i64 1)
  %return5 = call double @"rint@FF"(double %return4)
  %output = fsub double %return, %return2
  %output12 = fsub double %return4, %return5
  %return13 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return14 = fcmp oge double %return13, 7.500000e-01
  br i1 %return14, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output17 = fmul double %output, 5.000000e-01
  %output19 = fadd double %output17, %return2
  %tmp = load <2 x double>, <2 x double>* %p
  %return20 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output19, i64 0)
  %output22 = extractvalue { double, <2 x double> } %return20, 1
  store <2 x double> %output22, <2 x double>* %p
  %output24 = fmul double %output12, 5.000000e-01
  %output26 = fadd double %output24, %return5
  %return28 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output22, double %output26, i64 1)
  %output30 = extractvalue { double, <2 x double> } %return28, 1
  store <2 x double> %output30, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %return32 = call double @"abs@FF"(double %output)
  %return34 = call double @"abs@FF"(double %output12)
  %return35 = fcmp oge double %return32, %return34
  br i1 %return35, label %true37, label %false38

end:                                              ; preds = %true101, %false102, %true43, %false44, %true
  ret void

true37:                                           ; preds = %false
  %return41 = fcmp oge double %output, 0.000000e+00
  %w46 = load double, double* %w
  %output48 = fmul double %output, 5.000000e-01
  %output50 = fadd double %output48, %return2
  br i1 %return41, label %true43, label %false44

false38:                                          ; preds = %false
  %return99 = fcmp oge double %output12, 0.000000e+00
  %w104 = load double, double* %w
  %output106 = fmul double %output12, 5.000000e-01
  %output108 = fadd double %output106, %return5
  br i1 %return99, label %true101, label %false102

true43:                                           ; preds = %true37
  %output51 = fadd double %output50, 2.500000e-01
  %output52 = fmul double %w46, %output51
  %tmp53 = load <2 x double>, <2 x double>* %p
  %return54 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp53, double %output52, i64 0)
  %output56 = extractvalue { double, <2 x double> } %return54, 1
  store <2 x double> %output56, <2 x double>* %p
  %w57 = load double, double* %w
  %output59 = fmul double %output12, 5.000000e-01
  %output61 = fadd double %output59, %return5
  %output63 = fmul double 2.500000e-01, %output12
  %output65 = call double @"div@FF"(double %output63, double %output)
  %output66 = fadd double %output61, %output65
  %output67 = fmul double %w57, %output66
  %return69 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output56, double %output67, i64 1)
  %output71 = extractvalue { double, <2 x double> } %return69, 1
  store <2 x double> %output71, <2 x double>* %p
  br label %end

false44:                                          ; preds = %true37
  %output77 = fsub double %output50, 2.500000e-01
  %output78 = fmul double %w46, %output77
  %tmp79 = load <2 x double>, <2 x double>* %p
  %return80 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp79, double %output78, i64 0)
  %output82 = extractvalue { double, <2 x double> } %return80, 1
  store <2 x double> %output82, <2 x double>* %p
  %w83 = load double, double* %w
  %output85 = fmul double %output12, 5.000000e-01
  %output87 = fadd double %output85, %return5
  %output89 = fmul double 2.500000e-01, %output12
  %output91 = call double @"div@FF"(double %output89, double %output)
  %output92 = fsub double %output87, %output91
  %output93 = fmul double %w83, %output92
  %return95 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output82, double %output93, i64 1)
  %output97 = extractvalue { double, <2 x double> } %return95, 1
  store <2 x double> %output97, <2 x double>* %p
  br label %end

true101:                                          ; preds = %false38
  %output109 = fadd double %output108, 2.500000e-01
  %output110 = fmul double %w104, %output109
  %tmp111 = load <2 x double>, <2 x double>* %p
  %return112 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp111, double %output110, i64 1)
  %output114 = extractvalue { double, <2 x double> } %return112, 1
  store <2 x double> %output114, <2 x double>* %p
  %w115 = load double, double* %w
  %output117 = fmul double %output, 5.000000e-01
  %output119 = fadd double %output117, %return2
  %output122 = call double @"div@FF"(double %output, double %output12)
  %output123 = fmul double %output122, 2.500000e-01
  %output124 = fadd double %output119, %output123
  %output125 = fmul double %w115, %output124
  %return127 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output114, double %output125, i64 0)
  %output129 = extractvalue { double, <2 x double> } %return127, 1
  store <2 x double> %output129, <2 x double>* %p
  br label %end

false102:                                         ; preds = %false38
  %output135 = fsub double %output108, 2.500000e-01
  %output136 = fmul double %w104, %output135
  %tmp137 = load <2 x double>, <2 x double>* %p
  %return138 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp137, double %output136, i64 1)
  %output140 = extractvalue { double, <2 x double> } %return138, 1
  store <2 x double> %output140, <2 x double>* %p
  %w141 = load double, double* %w
  %output143 = fmul double %output, 5.000000e-01
  %output145 = fadd double %output143, %return2
  %output148 = call double @"div@FF"(double %output, double %output12)
  %output149 = fmul double %output148, 2.500000e-01
  %output150 = fsub double %output145, %output149
  %output151 = fmul double %w141, %output150
  %return153 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output140, double %output151, i64 0)
  %output155 = extractvalue { double, <2 x double> } %return153, 1
  store <2 x double> %output155, <2 x double>* %p
  br label %end
}

; Function Attrs: nounwind readnone
declare double @"rint@FF"(double) #1

; Function Attrs: alwaysinline nounwind
define private void @"V_BUTTERFLY@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %w1 = load double, double* %w
  %output = fmul double %w1, 0x3FF4D8D7A58FA311
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  %output3 = fmul double %return, 2.000000e+00
  %return8 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %output9 = fmul double %return, %return8
  %return10 = call double @"abs@FF"(double %output9)
  %_p11 = load <2 x double>, <2 x double>* %_p
  %return12 = call double @"getcomp@FUI"(<2 x double> %_p11, i64 0)
  %output15 = fmul double %return12, %return12
  %output16 = fadd double 1.000000e-10, %output15
  %output19 = fmul double %output3, %output3
  %output20 = fadd double %output16, %output19
  %output21 = call double @"div@FF"(double %return10, double %output20)
  %return22 = call double @"sqrt@FF"(double %output21)
  %output23 = fmul double %output, %return22
  %output27 = fmul double %output23, %return12
  %tmp = load <2 x double>, <2 x double>* %p
  %return28 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output27, i64 0)
  %output30 = extractvalue { double, <2 x double> } %return28, 1
  store <2 x double> %output30, <2 x double>* %p
  %output33 = fmul double %output23, %output3
  %return35 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output30, double %output33, i64 1)
  %output37 = extractvalue { double, <2 x double> } %return35, 1
  store <2 x double> %output37, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_CELL@UUFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %size) #0 {
__llvm_entry:
  %size1 = load double, double* %size
  %output = call double @"div@FF"(double 1.000000e+00, double %size1)
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %output4 = fmul double %return, %output
  %return5 = call double @"floor@FF"(double %output4)
  %return7 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  %output9 = fmul double %return7, %output
  %return10 = call double @"floor@FF"(double %output9)
  %output15 = fmul double %return5, %size1
  %output16 = fsub double %return, %output15
  %output21 = fmul double %return10, %size1
  %output22 = fsub double %return7, %output21
  %return24 = fcmp oge double %return10, 0.000000e+00
  %return27 = fcmp oge double %return5, 0.000000e+00
  br i1 %return24, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output33 = fmul double %return10, 2.000000e+00
  br i1 %return27, label %true29, label %false30

false:                                            ; preds = %__llvm_entry
  %output49 = fmul double 2.000000e+00, %return10
  %output50 = fadd double %output49, 1.000000e+00
  %return51 = call double @"neg@FF"(double %output50)
  br i1 %return27, label %true45, label %false46

end:                                              ; preds = %true45, %false46, %true29, %false30
  %y.0 = phi double [ %output33, %true29 ], [ %output33, %false30 ], [ %return51, %true45 ], [ %return51, %false46 ]
  %x.0 = phi double [ %output35, %true29 ], [ %return41, %false30 ], [ %output53, %true45 ], [ %return61, %false46 ]
  %size64 = load double, double* %size
  %output65 = fmul double %x.0, %size64
  %output66 = fadd double %output16, %output65
  %tmp = load <2 x double>, <2 x double>* %p
  %return67 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output66, i64 0)
  %output69 = extractvalue { double, <2 x double> } %return67, 1
  store <2 x double> %output69, <2 x double>* %p
  %size72 = load double, double* %size
  %output73 = fmul double %y.0, %size72
  %output74 = fadd double %output22, %output73
  %return75 = call double @"neg@FF"(double %output74)
  %return77 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output69, double %return75, i64 1)
  %output79 = extractvalue { double, <2 x double> } %return77, 1
  store <2 x double> %output79, <2 x double>* %p
  ret void

true29:                                           ; preds = %true
  %output35 = fmul double %return5, 2.000000e+00
  br label %end

false30:                                          ; preds = %true
  %output39 = fmul double 2.000000e+00, %return5
  %output40 = fadd double %output39, 1.000000e+00
  %return41 = call double @"neg@FF"(double %output40)
  br label %end

true45:                                           ; preds = %false
  %output53 = fmul double %return5, 2.000000e+00
  br label %end

false46:                                          ; preds = %false
  %output59 = fmul double 2.000000e+00, %return5
  %output60 = fadd double %output59, 1.000000e+00
  %return61 = call double @"neg@FF"(double %output60)
  br label %end
}

; Function Attrs: alwaysinline nounwind
define private void @"V_CPOW@UUFFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %power, double* %pow_r, double* %pow_i) #0 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %0)
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %1
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %1)
  %return = call double @"log@FF"(double %SUMSQ)
  %output = fmul double 5.000000e-01, %return
  %power3 = load double, double* %power
  %output4 = call double @"div@FF"(double 0x401921FB4D12D84A, double %power3)
  %pow_r5 = load double, double* %pow_r
  %output7 = call double @"div@FF"(double %pow_r5, double %power3)
  %pow_i8 = load double, double* %pow_i
  %output10 = call double @"div@FF"(double %pow_i8, double %power3)
  %output13 = fmul double %output7, %ATANYX
  %output16 = fmul double %output10, %output
  %output17 = fadd double %output13, %output16
  %return20 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output21 = fmul double %power3, %return20
  %return22 = call double @"floor@FF"(double %output21)
  %output23 = fmul double %output4, %return22
  %output24 = fadd double %output17, %output23
  %w25 = load double, double* %w
  %output28 = fmul double %output7, %output
  %output31 = fmul double %output10, %ATANYX
  %output32 = fsub double %output28, %output31
  %return33 = call double @"exp@FF"(double %output32)
  %output34 = fmul double %w25, %return33
  store double %output24, double* %2
  call void @"sincos@FFF"(double* %2, double* %sa, double* %ca)
  %ca37 = load double, double* %ca
  %output38 = fmul double %output34, %ca37
  %tmp = load <2 x double>, <2 x double>* %p
  %return39 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output38, i64 0)
  %output41 = extractvalue { double, <2 x double> } %return39, 1
  store <2 x double> %output41, <2 x double>* %p
  %sa43 = load double, double* %sa
  %output44 = fmul double %output34, %sa43
  %return46 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output41, double %output44, i64 1)
  %output48 = extractvalue { double, <2 x double> } %return46, 1
  store <2 x double> %output48, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_EDISC@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %snv = alloca double
  %csv = alloca double
  %0 = alloca <2 x double>
  %1 = alloca double
  store double 0.000000e+00, double* %snv, !vex-initializer-store !3
  store double 0.000000e+00, double* %csv, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %output = fmul double 2.000000e+00, %return
  %output5 = fadd double %SUMSQ, %output
  %return6 = call double @"sqrt@FF"(double %output5)
  %output9 = fsub double %SUMSQ, %output
  %return10 = call double @"sqrt@FF"(double %output9)
  %output13 = fadd double %return6, %return10
  %output14 = fmul double %output13, 5.000000e-01
  %output17 = fsub double %output14, 1.000000e+00
  %return18 = call double @"sqrt@FF"(double %output17)
  %output19 = fadd double %output14, %return18
  %return20 = call double @"log@FF"(double %output19)
  %output24 = call double @"div@FF"(double %return, double %output14)
  %return25 = call double @"acos@FF"(double %output24)
  %return26 = call double @"neg@FF"(double %return25)
  %w27 = load double, double* %w
  %output28 = call double @"div@FF"(double %w27, double 0x402724046ECF9681)
  store double %return20, double* %1
  call void @"sincos@FFF"(double* %1, double* %snv, double* %csv)
  %return31 = call double @"sinh@FF"(double %return26)
  %return33 = call double @"cosh@FF"(double %return26)
  %_p34 = load <2 x double>, <2 x double>* %_p
  %return35 = call double @"getcomp@FUI"(<2 x double> %_p34, i64 1)
  %return36 = fcmp ogt double %return35, 0.000000e+00
  br i1 %return36, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %snv38 = load double, double* %snv
  %return39 = call double @"neg@FF"(double %snv38)
  store double %return39, double* %snv
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %output42 = fmul double %output28, %return33
  %csv43 = load double, double* %csv
  %output44 = fmul double %output42, %csv43
  %tmp45 = load <2 x double>, <2 x double>* %p
  %return46 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp45, double %output44, i64 0)
  %output48 = extractvalue { double, <2 x double> } %return46, 1
  store <2 x double> %output48, <2 x double>* %p
  %output51 = fmul double %output28, %return31
  %snv52 = load double, double* %snv
  %output53 = fmul double %output51, %snv52
  %return55 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output48, double %output53, i64 1)
  %output57 = extractvalue { double, <2 x double> } %return55, 1
  store <2 x double> %output57, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind readnone
declare double @"acos@FF"(double) #1

; Function Attrs: alwaysinline nounwind
define private void @"V_ELLIPTIC@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %output = fadd double %SUMSQ, 1.000000e+00
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %output3 = fmul double 2.000000e+00, %return
  %output6 = fadd double %output, %output3
  %return7 = call double @"sqrt@FF"(double %output6)
  %output10 = fsub double %output, %output3
  %return11 = call double @"sqrt@FF"(double %output10)
  %output12 = fadd double %return7, %return11
  %output13 = fmul double 5.000000e-01, %output12
  %output17 = call double @"div@FF"(double %return, double %output13)
  %output20 = fmul double %output17, %output17
  %output21 = fsub double 1.000000e+00, %output20
  %output23 = fsub double %output13, 1.000000e+00
  %w24 = load double, double* %w
  %output25 = call double @"div@FF"(double %w24, double 0x3FF921FB4D12D84A)
  %return27 = fcmp olt double %output21, 0.000000e+00
  br i1 %return27, label %end, label %false

false:                                            ; preds = %__llvm_entry
  %return30 = call double @"sqrt@FF"(double %output21)
  br label %end

end:                                              ; preds = %__llvm_entry, %false
  %phi = phi double [ %return30, %false ], [ 0.000000e+00, %__llvm_entry ]
  %return32 = fcmp olt double %output23, 0.000000e+00
  br i1 %return32, label %end36, label %false35

false35:                                          ; preds = %end
  %return38 = call double @"sqrt@FF"(double %output23)
  br label %end36

end36:                                            ; preds = %end, %false35
  %phi39 = phi double [ %return38, %false35 ], [ 0.000000e+00, %end ]
  %return43 = call double @"atan2@FFF"(double %output17, double %phi)
  %output44 = fmul double %output25, %return43
  %tmp45 = load <2 x double>, <2 x double>* %p
  %return46 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp45, double %output44, i64 0)
  %output48 = extractvalue { double, <2 x double> } %return46, 1
  store <2 x double> %output48, <2 x double>* %p
  %_p49 = load <2 x double>, <2 x double>* %_p
  %return50 = call double @"getcomp@FUI"(<2 x double> %_p49, i64 1)
  %return51 = fcmp ogt double %return50, 0.000000e+00
  %output59 = fadd double %output13, %phi39
  %return60 = call double @"log@FF"(double %output59)
  br i1 %return51, label %true53, label %false54

true53:                                           ; preds = %end36
  %output61 = fmul double %output25, %return60
  br label %end55

false54:                                          ; preds = %end36
  %return67 = call double @"neg@FF"(double %return60)
  %output68 = fmul double %output25, %return67
  br label %end55

end55:                                            ; preds = %false54, %true53
  %phi69 = phi double [ %output61, %true53 ], [ %output68, %false54 ]
  %tmp70 = load <2 x double>, <2 x double>* %p
  %return71 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp70, double %phi69, i64 1)
  %output73 = extractvalue { double, <2 x double> } %return71, 1
  store <2 x double> %output73, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_NOISE@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %sinr = alloca double
  %cosr = alloca double
  %0 = alloca double
  store double 0.000000e+00, double* %sinr, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosr, !vex-initializer-store !3
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output = fmul double %return, 2.000000e+00
  %output1 = fmul double %output, 0x400921FB4D12D84A
  store double %output1, double* %0
  call void @"sincos@FFF"(double* %0, double* %sinr, double* %cosr)
  %w3 = load double, double* %w
  %return4 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output5 = fmul double %w3, %return4
  %_p6 = load <2 x double>, <2 x double>* %_p
  %return7 = call double @"getcomp@FUI"(<2 x double> %_p6, i64 0)
  %output9 = fmul double %return7, %output5
  %cosr10 = load double, double* %cosr
  %output11 = fmul double %output9, %cosr10
  %tmp = load <2 x double>, <2 x double>* %p
  %return12 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output11, i64 0)
  %output14 = extractvalue { double, <2 x double> } %return12, 1
  store <2 x double> %output14, <2 x double>* %p
  %_p15 = load <2 x double>, <2 x double>* %_p
  %return16 = call double @"getcomp@FUI"(<2 x double> %_p15, i64 1)
  %output18 = fmul double %return16, %output5
  %sinr19 = load double, double* %sinr
  %output20 = fmul double %output18, %sinr19
  %return22 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output14, double %output20, i64 1)
  %output24 = extractvalue { double, <2 x double> } %return22, 1
  store <2 x double> %output24, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_ESCHER@UUFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %beta) #0 {
__llvm_entry:
  %seb = alloca double
  %ceb = alloca double
  %sn = alloca double
  %cn = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  %3 = alloca double
  store double 0.000000e+00, double* %seb, !vex-initializer-store !3
  store double 0.000000e+00, double* %ceb, !vex-initializer-store !3
  store double 0.000000e+00, double* %sn, !vex-initializer-store !3
  store double 0.000000e+00, double* %cn, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %0)
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %1
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %1)
  %return = call double @"log@FF"(double %SUMSQ)
  %output = fmul double 5.000000e-01, %return
  %beta3 = load double, double* %beta
  store double %beta3, double* %2
  call void @"sincos@FFF"(double* %2, double* %seb, double* %ceb)
  %ceb4 = load double, double* %ceb
  %output5 = fadd double 1.000000e+00, %ceb4
  %output6 = fmul double 5.000000e-01, %output5
  %seb7 = load double, double* %seb
  %output8 = fmul double 5.000000e-01, %seb7
  %w9 = load double, double* %w
  %output12 = fmul double %output6, %output
  %output15 = fmul double %output8, %ATANYX
  %output16 = fsub double %output12, %output15
  %return17 = call double @"exp@FF"(double %output16)
  %output18 = fmul double %w9, %return17
  %output21 = fmul double %output6, %ATANYX
  %output24 = fmul double %output8, %output
  %output25 = fadd double %output21, %output24
  store double %output25, double* %3
  call void @"sincos@FFF"(double* %3, double* %sn, double* %cn)
  %cn28 = load double, double* %cn
  %output29 = fmul double %output18, %cn28
  %tmp = load <2 x double>, <2 x double>* %p
  %return30 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output29, i64 0)
  %output32 = extractvalue { double, <2 x double> } %return30, 1
  store <2 x double> %output32, <2 x double>* %p
  %sn34 = load double, double* %sn
  %output35 = fmul double %output18, %sn34
  %return37 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output32, double %output35, i64 1)
  %output39 = extractvalue { double, <2 x double> } %return37, 1
  store <2 x double> %output39, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_FOCI@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %sn = alloca double
  %cn = alloca double
  %0 = alloca double
  store double 0.000000e+00, double* %sn, !vex-initializer-store !3
  store double 0.000000e+00, double* %cn, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  %return2 = call double @"exp@FF"(double %return)
  %output = fmul double %return2, 5.000000e-01
  %output4 = call double @"div@FF"(double 2.500000e-01, double %output)
  %return6 = call double @"getcomp@FUI"(<2 x double> %_p1, i64 1)
  store double %return6, double* %0
  call void @"sincos@FFF"(double* %0, double* %sn, double* %cn)
  %w7 = load double, double* %w
  %output10 = fadd double %output, %output4
  %cn11 = load double, double* %cn
  %output12 = fsub double %output10, %cn11
  %output13 = call double @"div@FF"(double %w7, double %output12)
  %output17 = fsub double %output, %output4
  %output18 = fmul double %output13, %output17
  %tmp19 = load <2 x double>, <2 x double>* %p
  %return20 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp19, double %output18, i64 0)
  %output22 = extractvalue { double, <2 x double> } %return20, 1
  store <2 x double> %output22, <2 x double>* %p
  %sn24 = load double, double* %sn
  %output25 = fmul double %output13, %sn24
  %return27 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output22, double %output25, i64 1)
  %output29 = extractvalue { double, <2 x double> } %return27, 1
  store <2 x double> %output29, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_LAZYSUSAN@UUFFFFU"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %spin, double* %twist, double* %space, <2 x double>* %lazy) #0 {
__llvm_entry:
  %sina = alloca double
  %cosa = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sina, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosa, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  %lazy2 = load <2 x double>, <2 x double>* %lazy
  %return3 = call double @"getcomp@FUI"(<2 x double> %lazy2, i64 0)
  %output = fsub double %return, %return3
  %return5 = call double @"getcomp@FUI"(<2 x double> %_p1, i64 1)
  %return7 = call double @"getcomp@FUI"(<2 x double> %lazy2, i64 1)
  %output8 = fadd double %return5, %return7
  %return11 = call <2 x double> @"set@UFF"(double %output, double %output8)
  store <2 x double> %return11, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %w13 = load double, double* %w
  %return14 = fcmp olt double %SQRT, %w13
  br i1 %return14, label %true, label %false

true:                                             ; preds = %__llvm_entry
  store <2 x double> %return11, <2 x double>* %1
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %1)
  %spin19 = load double, double* %spin
  %output20 = fadd double %ATANYX, %spin19
  %twist21 = load double, double* %twist
  %w22 = load double, double* %w
  %output24 = fsub double %w22, %SQRT
  %output25 = fmul double %twist21, %output24
  %output26 = fadd double %output20, %output25
  store double %output26, double* %2
  call void @"sincos@FFF"(double* %2, double* %sina, double* %cosa)
  %w28 = load double, double* %w
  %output30 = fmul double %w28, %SQRT
  %cosa32 = load double, double* %cosa
  %output33 = fmul double %output30, %cosa32
  %lazy34 = load <2 x double>, <2 x double>* %lazy
  %return35 = call double @"getcomp@FUI"(<2 x double> %lazy34, i64 0)
  %output36 = fadd double %output33, %return35
  %tmp = load <2 x double>, <2 x double>* %p
  %return37 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output36, i64 0)
  %output39 = extractvalue { double, <2 x double> } %return37, 1
  store <2 x double> %output39, <2 x double>* %p
  %sina41 = load double, double* %sina
  %output42 = fmul double %output30, %sina41
  %lazy43 = load <2 x double>, <2 x double>* %lazy
  %return44 = call double @"getcomp@FUI"(<2 x double> %lazy43, i64 1)
  %output45 = fsub double %output42, %return44
  %return47 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output39, double %output45, i64 1)
  %output49 = extractvalue { double, <2 x double> } %return47, 1
  store <2 x double> %output49, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %space51 = load double, double* %space
  %output53 = call double @"div@FF"(double %space51, double %SQRT)
  %output54 = fadd double 1.000000e+00, %output53
  %output55 = fmul double %w13, %output54
  %output58 = fmul double %output55, %output
  %lazy59 = load <2 x double>, <2 x double>* %lazy
  %return60 = call double @"getcomp@FUI"(<2 x double> %lazy59, i64 0)
  %output61 = fadd double %output58, %return60
  %tmp62 = load <2 x double>, <2 x double>* %p
  %return63 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp62, double %output61, i64 0)
  %output65 = extractvalue { double, <2 x double> } %return63, 1
  store <2 x double> %output65, <2 x double>* %p
  %output68 = fmul double %output55, %output8
  %lazy69 = load <2 x double>, <2 x double>* %lazy
  %return70 = call double @"getcomp@FUI"(<2 x double> %lazy69, i64 1)
  %output71 = fsub double %output68, %return70
  %return73 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output65, double %output71, i64 1)
  %output75 = extractvalue { double, <2 x double> } %return73, 1
  store <2 x double> %output75, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_LOONIE@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %w3 = load double, double* %w
  %output = fmul double %w3, %w3
  %return = fcmp olt double %SUMSQ, %output
  br i1 %return, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output11 = call double @"div@FF"(double %output, double %SUMSQ)
  %output12 = fsub double %output11, 1.000000e+00
  %return13 = call double @"sqrt@FF"(double %output12)
  %output14 = fmul double %w3, %return13
  %_p16 = load <2 x double>, <2 x double>* %_p
  %return17 = call double @"getcomp@FUI"(<2 x double> %_p16, i64 0)
  %output18 = fmul double %output14, %return17
  %tmp = load <2 x double>, <2 x double>* %p
  %return19 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output18, i64 0)
  %output21 = extractvalue { double, <2 x double> } %return19, 1
  store <2 x double> %output21, <2 x double>* %p
  %_p23 = load <2 x double>, <2 x double>* %_p
  %return24 = call double @"getcomp@FUI"(<2 x double> %_p23, i64 1)
  %output25 = fmul double %output14, %return24
  %return27 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output21, double %output25, i64 1)
  %output29 = extractvalue { double, <2 x double> } %return27, 1
  store <2 x double> %output29, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %_p31 = load <2 x double>, <2 x double>* %_p
  %return32 = call double @"getcomp@FUI"(<2 x double> %_p31, i64 0)
  %output33 = fmul double %w3, %return32
  %tmp34 = load <2 x double>, <2 x double>* %p
  %return35 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp34, double %output33, i64 0)
  %output37 = extractvalue { double, <2 x double> } %return35, 1
  store <2 x double> %output37, <2 x double>* %p
  %w38 = load double, double* %w
  %_p39 = load <2 x double>, <2 x double>* %_p
  %return40 = call double @"getcomp@FUI"(<2 x double> %_p39, i64 1)
  %output41 = fmul double %w38, %return40
  %return43 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output37, double %output41, i64 1)
  %output45 = extractvalue { double, <2 x double> } %return43, 1
  store <2 x double> %output45, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_PREBLUR@UF"(<2 x double>* %p, double* %w) #0 {
__llvm_entry:
  %sinA = alloca double
  %cosA = alloca double
  %0 = alloca double
  store double 0.000000e+00, double* %sinA, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosA, !vex-initializer-store !3
  %w1 = load double, double* %w
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return2 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output = fadd double %return, %return2
  %return3 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output4 = fadd double %output, %return3
  %return5 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output6 = fadd double %output4, %return5
  %output7 = fsub double %output6, 2.000000e+00
  %output8 = fmul double %w1, %output7
  %return9 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output10 = fmul double %return9, 2.000000e+00
  %output11 = fmul double %output10, 0x400921FB4D12D84A
  store double %output11, double* %0
  call void @"sincos@FFF"(double* %0, double* %sinA, double* %cosA)
  %p13 = load <2 x double>, <2 x double>* %p
  %return14 = call double @"getcomp@FUI"(<2 x double> %p13, i64 0)
  %cosA16 = load double, double* %cosA
  %output17 = fmul double %output8, %cosA16
  %output18 = fadd double %return14, %output17
  %return19 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %p13, double %output18, i64 0)
  %output21 = extractvalue { double, <2 x double> } %return19, 1
  store <2 x double> %output21, <2 x double>* %p
  %return23 = call double @"getcomp@FUI"(<2 x double> %output21, i64 1)
  %sinA25 = load double, double* %sinA
  %output26 = fmul double %output8, %sinA25
  %output27 = fadd double %return23, %output26
  %return29 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output21, double %output27, i64 1)
  %output31 = extractvalue { double, <2 x double> } %return29, 1
  store <2 x double> %output31, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_MODULUS@UUFU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %m) #0 {
__llvm_entry:
  %0 = alloca double
  %1 = alloca double
  %2 = alloca double
  %3 = alloca double
  %4 = alloca double
  %5 = alloca double
  %6 = alloca double
  %7 = alloca double
  %m1 = load <2 x double>, <2 x double>* %m
  %return = call double @"getcomp@FUI"(<2 x double> %m1, i64 0)
  %output = fmul double 2.000000e+00, %return
  %return3 = call double @"getcomp@FUI"(<2 x double> %m1, i64 1)
  %output4 = fmul double 2.000000e+00, %return3
  %_p5 = load <2 x double>, <2 x double>* %_p
  %return6 = call double @"getcomp@FUI"(<2 x double> %_p5, i64 0)
  %return9 = fcmp ogt double %return6, %return
  br i1 %return9, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %w11 = load double, double* %w
  %output18 = fadd double %return6, %return
  store double %output18, double* %0
  store double %output, double* %1
  %fmod = call double @"fmod@FFF"(double* %0, double* %1)
  %output20 = fadd double %return, %fmod
  %output21 = fmul double %w11, %output20
  %tmp = load <2 x double>, <2 x double>* %p
  %return22 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output21, i64 0)
  %output24 = extractvalue { double, <2 x double> } %return22, 1
  store <2 x double> %output24, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %p25 = load <2 x double>, <2 x double>* %p
  %return26 = call double @"getcomp@FUI"(<2 x double> %p25, i64 0)
  %return29 = fcmp olt double %return26, %return
  %w34 = load double, double* %w
  br i1 %return29, label %true31, label %false32

end:                                              ; preds = %true31, %false32, %true
  %_p58 = load <2 x double>, <2 x double>* %_p
  %return59 = call double @"getcomp@FUI"(<2 x double> %_p58, i64 1)
  %m60 = load <2 x double>, <2 x double>* %m
  %return61 = call double @"getcomp@FUI"(<2 x double> %m60, i64 1)
  %return62 = fcmp ogt double %return59, %return61
  br i1 %return62, label %true64, label %false65

true31:                                           ; preds = %false
  %output41 = fadd double %return, %return6
  store double %output41, double* %2
  store double %output, double* %3
  %fmod43 = call double @"fmod@FFF"(double* %2, double* %3)
  %output44 = fsub double %return, %fmod43
  %output45 = fmul double %w34, %output44
  %tmp46 = load <2 x double>, <2 x double>* %p
  %return47 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp46, double %output45, i64 0)
  %output49 = extractvalue { double, <2 x double> } %return47, 1
  store <2 x double> %output49, <2 x double>* %p
  br label %end

false32:                                          ; preds = %false
  %output53 = fmul double %w34, %return6
  %return55 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %p25, double %output53, i64 0)
  %output57 = extractvalue { double, <2 x double> } %return55, 1
  store <2 x double> %output57, <2 x double>* %p
  br label %end

true64:                                           ; preds = %end
  %w67 = load double, double* %w
  %output74 = fadd double %return59, %return61
  store double %output74, double* %4
  store double %output4, double* %5
  %fmod76 = call double @"fmod@FFF"(double* %4, double* %5)
  %output77 = fadd double %return61, %fmod76
  %output78 = fmul double %w67, %output77
  %tmp79 = load <2 x double>, <2 x double>* %p
  %return80 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp79, double %output78, i64 1)
  %output82 = extractvalue { double, <2 x double> } %return80, 1
  store <2 x double> %output82, <2 x double>* %p
  br label %end66

false65:                                          ; preds = %end
  %p83 = load <2 x double>, <2 x double>* %p
  %return84 = call double @"getcomp@FUI"(<2 x double> %p83, i64 0)
  %return86 = call double @"getcomp@FUI"(<2 x double> %m60, i64 0)
  %return87 = fcmp olt double %return84, %return86
  %w92 = load double, double* %w
  br i1 %return87, label %true89, label %false90

end66:                                            ; preds = %true89, %false90, %true64
  ret void

true89:                                           ; preds = %false65
  %output99 = fadd double %return61, %return59
  store double %output99, double* %6
  store double %output4, double* %7
  %fmod101 = call double @"fmod@FFF"(double* %6, double* %7)
  %output102 = fsub double %return61, %fmod101
  %output103 = fmul double %w92, %output102
  %tmp104 = load <2 x double>, <2 x double>* %p
  %return105 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp104, double %output103, i64 1)
  %output107 = extractvalue { double, <2 x double> } %return105, 1
  store <2 x double> %output107, <2 x double>* %p
  br label %end66

false90:                                          ; preds = %false65
  %output111 = fmul double %w92, %return59
  %return113 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %p83, double %output111, i64 1)
  %output115 = extractvalue { double, <2 x double> } %return113, 1
  store <2 x double> %output115, <2 x double>* %p
  br label %end66
}

; Function Attrs: alwaysinline nounwind
define private void @"V_OSCOPE@UUFFFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %freq, double* %amp, double* %damp, double* %sep) #0 {
__llvm_entry:
  %freq1 = load double, double* %freq
  %output = fmul double 0x401921FB4D12D84A, %freq1
  %damp2 = load double, double* %damp
  %return = fcmp oeq double %damp2, 0.000000e+00
  %amp4 = load double, double* %amp
  br i1 %return, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %_p6 = load <2 x double>, <2 x double>* %_p
  %return7 = call double @"getcomp@FUI"(<2 x double> %_p6, i64 0)
  %output8 = fmul double %output, %return7
  %return9 = call double @"cos@FF"(double %output8)
  %output10 = fmul double %amp4, %return9
  %sep11 = load double, double* %sep
  %output12 = fadd double %output10, %sep11
  br label %end

false:                                            ; preds = %__llvm_entry
  %_p14 = load <2 x double>, <2 x double>* %_p
  %return15 = call double @"getcomp@FUI"(<2 x double> %_p14, i64 0)
  %return16 = call double @"abs@FF"(double %return15)
  %return17 = call double @"neg@FF"(double %return16)
  %damp18 = load double, double* %damp
  %output19 = fmul double %return17, %damp18
  %return20 = call double @"exp@FF"(double %output19)
  %output21 = fmul double %amp4, %return20
  %_p23 = load <2 x double>, <2 x double>* %_p
  %return24 = call double @"getcomp@FUI"(<2 x double> %_p23, i64 0)
  %output25 = fmul double %output, %return24
  %return26 = call double @"cos@FF"(double %output25)
  %output27 = fmul double %output21, %return26
  %sep28 = load double, double* %sep
  %output29 = fadd double %output27, %sep28
  br label %end

end:                                              ; preds = %false, %true
  %tt.0 = phi double [ %output12, %true ], [ %output29, %false ]
  %_p30 = load <2 x double>, <2 x double>* %_p
  %return31 = call double @"getcomp@FUI"(<2 x double> %_p30, i64 1)
  %return32 = call double @"abs@FF"(double %return31)
  %return34 = fcmp ole double %return32, %tt.0
  %w39 = load double, double* %w
  %_p40 = load <2 x double>, <2 x double>* %_p
  %return41 = call double @"getcomp@FUI"(<2 x double> %_p40, i64 0)
  %output42 = fmul double %w39, %return41
  %tmp = load <2 x double>, <2 x double>* %p
  %return43 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output42, i64 0)
  %output45 = extractvalue { double, <2 x double> } %return43, 1
  store <2 x double> %output45, <2 x double>* %p
  %w46 = load double, double* %w
  %_p47 = load <2 x double>, <2 x double>* %_p
  %return48 = call double @"getcomp@FUI"(<2 x double> %_p47, i64 1)
  br i1 %return34, label %true36, label %false37

true36:                                           ; preds = %end
  %return49 = call double @"neg@FF"(double %return48)
  %output50 = fmul double %w46, %return49
  %return52 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output45, double %output50, i64 1)
  %output54 = extractvalue { double, <2 x double> } %return52, 1
  store <2 x double> %output54, <2 x double>* %p
  br label %end38

false37:                                          ; preds = %end
  %output66 = fmul double %w46, %return48
  %return68 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output45, double %output66, i64 1)
  %output70 = extractvalue { double, <2 x double> } %return68, 1
  store <2 x double> %output70, <2 x double>* %p
  br label %end38

end38:                                            ; preds = %false37, %true36
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_POLAR2@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %w1 = load double, double* %w
  %output = call double @"div@FF"(double %w1, double 0x400921FB4D12D84A)
  %_p3 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p3, <2 x double>* %0
  %ATAN = call double @"ATAN@FU"(<2 x double>* %0)
  %output4 = fmul double %output, %ATAN
  %tmp = load <2 x double>, <2 x double>* %p
  %return = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output4, i64 0)
  %output6 = extractvalue { double, <2 x double> } %return, 1
  store <2 x double> %output6, <2 x double>* %p
  %output8 = call double @"div@FF"(double %output, double 2.000000e+00)
  %_p9 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p9, <2 x double>* %1
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %1)
  %return10 = call double @"log@FF"(double %SUMSQ)
  %output11 = fmul double %output8, %return10
  %tmp12 = load <2 x double>, <2 x double>* %p
  %return13 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp12, double %output11, i64 1)
  %output15 = extractvalue { double, <2 x double> } %return13, 1
  store <2 x double> %output15, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_POPCORN2@UUFFU"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %pop2c, <2 x double>* %pop2) #0 {
__llvm_entry:
  %w1 = load double, double* %w
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %pop23 = load <2 x double>, <2 x double>* %pop2
  %return4 = call double @"getcomp@FUI"(<2 x double> %pop23, i64 0)
  %return6 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  %pop2c7 = load double, double* %pop2c
  %output = fmul double %return6, %pop2c7
  %return8 = call double @"tan@FF"(double %output)
  %return9 = call double @"sin@FF"(double %return8)
  %output10 = fmul double %return4, %return9
  %output11 = fadd double %return, %output10
  %output12 = fmul double %w1, %output11
  %tmp = load <2 x double>, <2 x double>* %p
  %return13 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output12, i64 0)
  %output15 = extractvalue { double, <2 x double> } %return13, 1
  store <2 x double> %output15, <2 x double>* %p
  %w16 = load double, double* %w
  %_p17 = load <2 x double>, <2 x double>* %_p
  %return18 = call double @"getcomp@FUI"(<2 x double> %_p17, i64 1)
  %pop219 = load <2 x double>, <2 x double>* %pop2
  %return20 = call double @"getcomp@FUI"(<2 x double> %pop219, i64 1)
  %return22 = call double @"getcomp@FUI"(<2 x double> %_p17, i64 0)
  %pop2c23 = load double, double* %pop2c
  %output24 = fmul double %return22, %pop2c23
  %return25 = call double @"tan@FF"(double %output24)
  %return26 = call double @"sin@FF"(double %return25)
  %output27 = fmul double %return20, %return26
  %output28 = fadd double %return18, %output27
  %output29 = fmul double %w16, %output28
  %return31 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output15, double %output29, i64 1)
  %output33 = extractvalue { double, <2 x double> } %return31, 1
  store <2 x double> %output33, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SCRY@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %1
  %SQRT = call double @"SQRT@FU"(<2 x double>* %1)
  %w4 = load double, double* %w
  %output = fadd double %w4, 1.000000e-10
  %output5 = call double @"div@FF"(double 1.000000e+00, double %output)
  %output6 = fadd double %SUMSQ, %output5
  %output7 = fmul double %SQRT, %output6
  %output8 = call double @"div@FF"(double 1.000000e+00, double %output7)
  %_p9 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p9, i64 0)
  %output11 = fmul double %return, %output8
  %tmp = load <2 x double>, <2 x double>* %p
  %return12 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output11, i64 0)
  %output14 = extractvalue { double, <2 x double> } %return12, 1
  store <2 x double> %output14, <2 x double>* %p
  %_p15 = load <2 x double>, <2 x double>* %_p
  %return16 = call double @"getcomp@FUI"(<2 x double> %_p15, i64 1)
  %output18 = fmul double %return16, %output8
  %return20 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output14, double %output18, i64 1)
  %output22 = extractvalue { double, <2 x double> } %return20, 1
  store <2 x double> %output22, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SEPARATION@UUFUU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %sep, <2 x double>* %ins) #0 {
__llvm_entry:
  %sep1 = load <2 x double>, <2 x double>* %sep
  %return = call double @"getcomp@FUI"(<2 x double> %sep1, i64 0)
  %output = fmul double %return, %return
  %return5 = call double @"getcomp@FUI"(<2 x double> %sep1, i64 1)
  %output8 = fmul double %return5, %return5
  %_p9 = load <2 x double>, <2 x double>* %_p
  %return10 = call double @"getcomp@FUI"(<2 x double> %_p9, i64 0)
  %return11 = fcmp ogt double %return10, 0.000000e+00
  %w13 = load double, double* %w
  %output18 = fmul double %return10, %return10
  %output20 = fadd double %output18, %output
  %return21 = call double @"sqrt@FF"(double %output20)
  %ins24 = load <2 x double>, <2 x double>* %ins
  %return25 = call double @"getcomp@FUI"(<2 x double> %ins24, i64 0)
  %output26 = fmul double %return10, %return25
  br i1 %return11, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output27 = fsub double %return21, %output26
  %output28 = fmul double %w13, %output27
  %tmp = load <2 x double>, <2 x double>* %p
  %return29 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output28, i64 0)
  %output31 = extractvalue { double, <2 x double> } %return29, 1
  store <2 x double> %output31, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %output46 = fadd double %return21, %output26
  %return47 = call double @"neg@FF"(double %output46)
  %output48 = fmul double %w13, %return47
  %tmp49 = load <2 x double>, <2 x double>* %p
  %return50 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp49, double %output48, i64 0)
  %output52 = extractvalue { double, <2 x double> } %return50, 1
  store <2 x double> %output52, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  %_p53 = load <2 x double>, <2 x double>* %_p
  %return54 = call double @"getcomp@FUI"(<2 x double> %_p53, i64 1)
  %return55 = fcmp ogt double %return54, 0.000000e+00
  %w60 = load double, double* %w
  %output65 = fmul double %return54, %return54
  %output67 = fadd double %output65, %output8
  %return68 = call double @"sqrt@FF"(double %output67)
  %ins71 = load <2 x double>, <2 x double>* %ins
  %return72 = call double @"getcomp@FUI"(<2 x double> %ins71, i64 1)
  %output73 = fmul double %return54, %return72
  br i1 %return55, label %true57, label %false58

true57:                                           ; preds = %end
  %output74 = fsub double %return68, %output73
  %output75 = fmul double %w60, %output74
  %tmp76 = load <2 x double>, <2 x double>* %p
  %return77 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp76, double %output75, i64 1)
  %output79 = extractvalue { double, <2 x double> } %return77, 1
  store <2 x double> %output79, <2 x double>* %p
  br label %end59

false58:                                          ; preds = %end
  %output94 = fadd double %return68, %output73
  %return95 = call double @"neg@FF"(double %output94)
  %output96 = fmul double %w60, %return95
  %tmp97 = load <2 x double>, <2 x double>* %p
  %return98 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp97, double %output96, i64 1)
  %output100 = extractvalue { double, <2 x double> } %return98, 1
  store <2 x double> %output100, <2 x double>* %p
  br label %end59

end59:                                            ; preds = %false58, %true57
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SPLIT@UUFU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %split) #0 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  %split2 = load <2 x double>, <2 x double>* %split
  %return3 = call double @"getcomp@FUI"(<2 x double> %split2, i64 0)
  %output = fmul double %return, %return3
  %output4 = fmul double %output, 0x400921FB4D12D84A
  %return5 = call double @"cos@FF"(double %output4)
  %return6 = fcmp oge double %return5, 0.000000e+00
  %w8 = load double, double* %w
  %return10 = call double @"getcomp@FUI"(<2 x double> %_p1, i64 1)
  br i1 %return6, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output11 = fmul double %w8, %return10
  %tmp = load <2 x double>, <2 x double>* %p
  %return12 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output11, i64 1)
  %output14 = extractvalue { double, <2 x double> } %return12, 1
  store <2 x double> %output14, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %return18 = call double @"neg@FF"(double %return10)
  %output19 = fmul double %w8, %return18
  %tmp20 = load <2 x double>, <2 x double>* %p
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp20, double %output19, i64 1)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  %_p24 = load <2 x double>, <2 x double>* %_p
  %return25 = call double @"getcomp@FUI"(<2 x double> %_p24, i64 1)
  %split26 = load <2 x double>, <2 x double>* %split
  %return27 = call double @"getcomp@FUI"(<2 x double> %split26, i64 1)
  %output28 = fmul double %return25, %return27
  %output29 = fmul double %output28, 0x400921FB4D12D84A
  %return30 = call double @"cos@FF"(double %output29)
  %return31 = fcmp oge double %return30, 0.000000e+00
  %w36 = load double, double* %w
  %return38 = call double @"getcomp@FUI"(<2 x double> %_p24, i64 0)
  br i1 %return31, label %true33, label %false34

true33:                                           ; preds = %end
  %output39 = fmul double %w36, %return38
  %tmp40 = load <2 x double>, <2 x double>* %p
  %return41 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp40, double %output39, i64 0)
  %output43 = extractvalue { double, <2 x double> } %return41, 1
  store <2 x double> %output43, <2 x double>* %p
  br label %end35

false34:                                          ; preds = %end
  %return47 = call double @"neg@FF"(double %return38)
  %output48 = fmul double %w36, %return47
  %tmp49 = load <2 x double>, <2 x double>* %p
  %return50 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp49, double %output48, i64 0)
  %output52 = extractvalue { double, <2 x double> } %return50, 1
  store <2 x double> %output52, <2 x double>* %p
  br label %end35

end35:                                            ; preds = %false34, %true33
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SPLITS@UUFU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %splits) #0 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  %return2 = fcmp oge double %return, 0.000000e+00
  %w4 = load double, double* %w
  %splits7 = load <2 x double>, <2 x double>* %splits
  %return8 = call double @"getcomp@FUI"(<2 x double> %splits7, i64 0)
  br i1 %return2, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output = fadd double %return, %return8
  %output9 = fmul double %w4, %output
  %tmp = load <2 x double>, <2 x double>* %p
  %return10 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output9, i64 0)
  %output12 = extractvalue { double, <2 x double> } %return10, 1
  store <2 x double> %output12, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %output18 = fsub double %return, %return8
  %output19 = fmul double %w4, %output18
  %tmp20 = load <2 x double>, <2 x double>* %p
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp20, double %output19, i64 0)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  %_p24 = load <2 x double>, <2 x double>* %_p
  %return25 = call double @"getcomp@FUI"(<2 x double> %_p24, i64 1)
  %return26 = fcmp oge double %return25, 0.000000e+00
  %w31 = load double, double* %w
  %splits34 = load <2 x double>, <2 x double>* %splits
  %return35 = call double @"getcomp@FUI"(<2 x double> %splits34, i64 1)
  br i1 %return26, label %true28, label %false29

true28:                                           ; preds = %end
  %output36 = fadd double %return25, %return35
  %output37 = fmul double %w31, %output36
  %tmp38 = load <2 x double>, <2 x double>* %p
  %return39 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp38, double %output37, i64 1)
  %output41 = extractvalue { double, <2 x double> } %return39, 1
  store <2 x double> %output41, <2 x double>* %p
  br label %end30

false29:                                          ; preds = %end
  %output47 = fsub double %return25, %return35
  %output48 = fmul double %w31, %output47
  %tmp49 = load <2 x double>, <2 x double>* %p
  %return50 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp49, double %output48, i64 1)
  %output52 = extractvalue { double, <2 x double> } %return50, 1
  store <2 x double> %output52, <2 x double>* %p
  br label %end30

end30:                                            ; preds = %false29, %true28
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_STRIPES@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %space, double* %warp) #0 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  %output = fadd double %return, 5.000000e-01
  %return2 = call double @"floor@FF"(double %output)
  %output6 = fsub double %return, %return2
  %w7 = load double, double* %w
  %space9 = load double, double* %space
  %output10 = fsub double 1.000000e+00, %space9
  %output11 = fmul double %output6, %output10
  %output13 = fadd double %output11, %return2
  %output14 = fmul double %w7, %output13
  %tmp = load <2 x double>, <2 x double>* %p
  %return15 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output14, i64 0)
  %output17 = extractvalue { double, <2 x double> } %return15, 1
  store <2 x double> %output17, <2 x double>* %p
  %w18 = load double, double* %w
  %_p19 = load <2 x double>, <2 x double>* %_p
  %return20 = call double @"getcomp@FUI"(<2 x double> %_p19, i64 1)
  %output23 = fmul double %output6, %output6
  %warp24 = load double, double* %warp
  %output25 = fmul double %output23, %warp24
  %output26 = fadd double %return20, %output25
  %output27 = fmul double %w18, %output26
  %return29 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output17, double %output27, i64 1)
  %output31 = extractvalue { double, <2 x double> } %return29, 1
  store <2 x double> %output31, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_WEDGE@UUFFFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %swirl, double* %angle, double* %hole, double* %count) #0 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %1
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %1)
  %swirl3 = load double, double* %swirl
  %output = fmul double %swirl3, %SQRT
  %output5 = fadd double %ATANYX, %output
  %count6 = load double, double* %count
  %output8 = fmul double %count6, %output5
  %output9 = fadd double %output8, 0x400921FB4D12D84A
  %output10 = fmul double %output9, 0x3FD45F306DC9C883
  %output11 = fmul double %output10, 5.000000e-01
  %return = call double @"floor@FF"(double %output11)
  %angle12 = load double, double* %angle
  %output14 = fmul double %angle12, %count6
  %output15 = fmul double %output14, 0x3FD45F306DC9C883
  %output16 = fmul double %output15, 5.000000e-01
  %output17 = fsub double 1.000000e+00, %output16
  %output20 = fmul double %output5, %output17
  %output23 = fmul double %return, %angle12
  %output24 = fadd double %output20, %output23
  store double %output24, double* %2
  call void @"sincos@FFF"(double* %2, double* %sa, double* %ca)
  %w26 = load double, double* %w
  %hole28 = load double, double* %hole
  %output29 = fadd double %SQRT, %hole28
  %output30 = fmul double %w26, %output29
  %ca32 = load double, double* %ca
  %output33 = fmul double %output30, %ca32
  %tmp = load <2 x double>, <2 x double>* %p
  %return34 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output33, i64 0)
  %output36 = extractvalue { double, <2 x double> } %return34, 1
  store <2 x double> %output36, <2 x double>* %p
  %sa38 = load double, double* %sa
  %output39 = fmul double %output30, %sa38
  %return41 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output36, double %output39, i64 1)
  %output43 = extractvalue { double, <2 x double> } %return41, 1
  store <2 x double> %output43, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_WEDGEJULIA@UUFFFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %power, double* %angle, double* %dist, double* %count) #0 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %angle1 = load double, double* %angle
  %count2 = load double, double* %count
  %output = fmul double %angle1, %count2
  %output3 = fmul double %output, 0x3FD45F306DC9C883
  %output4 = fmul double %output3, 5.000000e-01
  %output5 = fsub double 1.000000e+00, %output4
  %power6 = load double, double* %power
  %return = call double @"abs@FF"(double %power6)
  %dist7 = load double, double* %dist
  %power8 = load double, double* %power
  %output9 = call double @"div@FF"(double %dist7, double %power8)
  %output10 = call double @"div@FF"(double %output9, double 2.000000e+00)
  %w11 = load double, double* %w
  %_p12 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p12, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %return14 = call double @"pow@FFF"(double %SUMSQ, double %output10)
  %output15 = fmul double %w11, %return14
  %return17 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output18 = fmul double %return, %return17
  %cast = fptosi double %output18 to i64
  %cast19 = sitofp i64 %cast to double
  %_p20 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p20, <2 x double>* %1
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %1)
  %output22 = fmul double 0x401921FB4D12D84A, %cast19
  %output23 = fadd double %ATANYX, %output22
  %power24 = load double, double* %power
  %output25 = call double @"div@FF"(double %output23, double %power24)
  %count26 = load double, double* %count
  %output28 = fmul double %count26, %output25
  %output29 = fadd double %output28, 0x400921FB4D12D84A
  %output30 = fmul double %output29, 0x3FD45F306DC9C883
  %output31 = fmul double %output30, 5.000000e-01
  %return32 = call double @"floor@FF"(double %output31)
  %output35 = fmul double %output25, %output5
  %angle37 = load double, double* %angle
  %output38 = fmul double %return32, %angle37
  %output39 = fadd double %output35, %output38
  store double %output39, double* %2
  call void @"sincos@FFF"(double* %2, double* %sa, double* %ca)
  %ca42 = load double, double* %ca
  %output43 = fmul double %output15, %ca42
  %tmp = load <2 x double>, <2 x double>* %p
  %return44 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output43, i64 0)
  %output46 = extractvalue { double, <2 x double> } %return44, 1
  store <2 x double> %output46, <2 x double>* %p
  %sa48 = load double, double* %sa
  %output49 = fmul double %output15, %sa48
  %return51 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output46, double %output49, i64 1)
  %output53 = extractvalue { double, <2 x double> } %return51, 1
  store <2 x double> %output53, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_WEDGESPH@UUFFFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %swirl, double* %angle, double* %hole, double* %count) #0 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %output = fadd double %SQRT, 1.000000e-10
  %output2 = call double @"div@FF"(double 1.000000e+00, double %output)
  %_p3 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p3, <2 x double>* %1
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %1)
  %swirl4 = load double, double* %swirl
  %output6 = fmul double %swirl4, %output2
  %output7 = fadd double %ATANYX, %output6
  %count8 = load double, double* %count
  %output10 = fmul double %count8, %output7
  %output11 = fadd double %output10, 0x400921FB4D12D84A
  %output12 = fmul double %output11, 0x3FD45F306DC9C883
  %output13 = fmul double %output12, 5.000000e-01
  %return = call double @"floor@FF"(double %output13)
  %angle14 = load double, double* %angle
  %output16 = fmul double %angle14, %count8
  %output17 = fmul double %output16, 0x3FD45F306DC9C883
  %output18 = fmul double %output17, 5.000000e-01
  %output19 = fsub double 1.000000e+00, %output18
  %output22 = fmul double %output7, %output19
  %output25 = fmul double %return, %angle14
  %output26 = fadd double %output22, %output25
  store double %output26, double* %2
  call void @"sincos@FFF"(double* %2, double* %sa, double* %ca)
  %w28 = load double, double* %w
  %hole30 = load double, double* %hole
  %output31 = fadd double %output2, %hole30
  %output32 = fmul double %w28, %output31
  %ca34 = load double, double* %ca
  %output35 = fmul double %output32, %ca34
  %tmp = load <2 x double>, <2 x double>* %p
  %return36 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output35, i64 0)
  %output38 = extractvalue { double, <2 x double> } %return36, 1
  store <2 x double> %output38, <2 x double>* %p
  %sa40 = load double, double* %sa
  %output41 = fmul double %output32, %sa40
  %return43 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output38, double %output41, i64 1)
  %output45 = extractvalue { double, <2 x double> } %return43, 1
  store <2 x double> %output45, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_WHORL@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %inside, double* %outside) #0 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %w3 = load double, double* %w
  %return = fcmp olt double %SQRT, %w3
  %_p5 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p5, <2 x double>* %1
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %1)
  br i1 %return, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %inside6 = load double, double* %inside
  %w7 = load double, double* %w
  %output = fsub double %w7, %SQRT
  %output9 = call double @"div@FF"(double %inside6, double %output)
  %output10 = fadd double %ATANYX, %output9
  br label %end

false:                                            ; preds = %__llvm_entry
  %outside13 = load double, double* %outside
  %w14 = load double, double* %w
  %output16 = fsub double %w14, %SQRT
  %output17 = call double @"div@FF"(double %outside13, double %output16)
  %output18 = fadd double %ATANYX, %output17
  br label %end

end:                                              ; preds = %false, %true
  %aa.0 = phi double [ %output10, %true ], [ %output18, %false ]
  store double %aa.0, double* %2
  call void @"sincos@FFF"(double* %2, double* %sa, double* %ca)
  %w20 = load double, double* %w
  %output22 = fmul double %w20, %SQRT
  %ca23 = load double, double* %ca
  %output24 = fmul double %output22, %ca23
  %tmp = load <2 x double>, <2 x double>* %p
  %return25 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output24, i64 0)
  %output27 = extractvalue { double, <2 x double> } %return25, 1
  store <2 x double> %output27, <2 x double>* %p
  %w28 = load double, double* %w
  %output30 = fmul double %w28, %SQRT
  %sa31 = load double, double* %sa
  %output32 = fmul double %output30, %sa31
  %return34 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output27, double %output32, i64 1)
  %output36 = extractvalue { double, <2 x double> } %return34, 1
  store <2 x double> %output36, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_WAVES2@UUFUU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %scl, <2 x double>* %freq) #0 {
__llvm_entry:
  %w1 = load double, double* %w
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %scl3 = load <2 x double>, <2 x double>* %scl
  %return4 = call double @"getcomp@FUI"(<2 x double> %scl3, i64 0)
  %return6 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  %freq7 = load <2 x double>, <2 x double>* %freq
  %return8 = call double @"getcomp@FUI"(<2 x double> %freq7, i64 0)
  %output = fmul double %return6, %return8
  %return9 = call double @"sin@FF"(double %output)
  %output10 = fmul double %return4, %return9
  %output11 = fadd double %return, %output10
  %output12 = fmul double %w1, %output11
  %tmp = load <2 x double>, <2 x double>* %p
  %return13 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output12, i64 0)
  %output15 = extractvalue { double, <2 x double> } %return13, 1
  store <2 x double> %output15, <2 x double>* %p
  %w16 = load double, double* %w
  %_p17 = load <2 x double>, <2 x double>* %_p
  %return18 = call double @"getcomp@FUI"(<2 x double> %_p17, i64 1)
  %scl19 = load <2 x double>, <2 x double>* %scl
  %return20 = call double @"getcomp@FUI"(<2 x double> %scl19, i64 1)
  %return22 = call double @"getcomp@FUI"(<2 x double> %_p17, i64 0)
  %freq23 = load <2 x double>, <2 x double>* %freq
  %return24 = call double @"getcomp@FUI"(<2 x double> %freq23, i64 1)
  %output25 = fmul double %return22, %return24
  %return26 = call double @"sin@FF"(double %output25)
  %output27 = fmul double %return20, %return26
  %output28 = fadd double %return18, %output27
  %output29 = fmul double %w16, %output28
  %return31 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output15, double %output29, i64 1)
  %output33 = extractvalue { double, <2 x double> } %return31, 1
  store <2 x double> %output33, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_EXP@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %expsin = alloca double
  %expcos = alloca double
  %0 = alloca double
  store double 0.000000e+00, double* %expsin, !vex-initializer-store !3
  store double 0.000000e+00, double* %expcos, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  %return2 = call double @"exp@FF"(double %return)
  %p3 = load <2 x double>, <2 x double>* %p
  %return4 = call double @"getcomp@FUI"(<2 x double> %p3, i64 1)
  store double %return4, double* %0
  call void @"sincos@FFF"(double* %0, double* %expsin, double* %expcos)
  %w5 = load double, double* %w
  %output = fmul double %w5, %return2
  %expcos7 = load double, double* %expcos
  %output8 = fmul double %output, %expcos7
  %tmp = load <2 x double>, <2 x double>* %p
  %return9 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output8, i64 0)
  %output11 = extractvalue { double, <2 x double> } %return9, 1
  store <2 x double> %output11, <2 x double>* %p
  %w12 = load double, double* %w
  %output14 = fmul double %w12, %return2
  %expsin15 = load double, double* %expsin
  %output16 = fmul double %output14, %expsin15
  %return18 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output11, double %output16, i64 1)
  %output20 = extractvalue { double, <2 x double> } %return18, 1
  store <2 x double> %output20, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_LOG@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %w1 = load double, double* %w
  %output = fmul double %w1, 5.000000e-01
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %return = call double @"log@FF"(double %SUMSQ)
  %output3 = fmul double %output, %return
  %tmp = load <2 x double>, <2 x double>* %p
  %return4 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output3, i64 0)
  %output6 = extractvalue { double, <2 x double> } %return4, 1
  store <2 x double> %output6, <2 x double>* %p
  %w7 = load double, double* %w
  %_p8 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p8, <2 x double>* %1
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %1)
  %output9 = fmul double %w7, %ATANYX
  %tmp10 = load <2 x double>, <2 x double>* %p
  %return11 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp10, double %output9, i64 1)
  %output13 = extractvalue { double, <2 x double> } %return11, 1
  store <2 x double> %output13, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SIN@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %sinacos = alloca double
  %0 = alloca double
  %sinsin = alloca double
  store double 0.000000e+00, double* %sinsin, !vex-initializer-store !3
  store double 0.000000e+00, double* %sinacos, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  store double %return, double* %0
  call void @"sincos@FFF"(double* %0, double* %sinsin, double* %sinacos)
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return3 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  %return4 = call double @"sinh@FF"(double %return3)
  %return7 = call double @"cosh@FF"(double %return3)
  %w8 = load double, double* %w
  %sinsin9 = load double, double* %sinsin
  %output = fmul double %w8, %sinsin9
  %output11 = fmul double %output, %return7
  %tmp = load <2 x double>, <2 x double>* %p
  %return12 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output11, i64 0)
  %output14 = extractvalue { double, <2 x double> } %return12, 1
  store <2 x double> %output14, <2 x double>* %p
  %w15 = load double, double* %w
  %sinacos16 = load double, double* %sinacos
  %output17 = fmul double %w15, %sinacos16
  %output19 = fmul double %output17, %return4
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output14, double %output19, i64 1)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_COS@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %coscos = alloca double
  %0 = alloca double
  %cossin = alloca double
  store double 0.000000e+00, double* %cossin, !vex-initializer-store !3
  store double 0.000000e+00, double* %coscos, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  store double %return, double* %0
  call void @"sincos@FFF"(double* %0, double* %cossin, double* %coscos)
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return3 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  %return4 = call double @"sinh@FF"(double %return3)
  %return7 = call double @"cosh@FF"(double %return3)
  %w8 = load double, double* %w
  %coscos9 = load double, double* %coscos
  %output = fmul double %w8, %coscos9
  %output11 = fmul double %output, %return7
  %tmp = load <2 x double>, <2 x double>* %p
  %return12 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output11, i64 0)
  %output14 = extractvalue { double, <2 x double> } %return12, 1
  store <2 x double> %output14, <2 x double>* %p
  %w15 = load double, double* %w
  %cossin16 = load double, double* %cossin
  %output17 = fmul double %w15, %cossin16
  %output19 = fmul double %output17, %return4
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output14, double %output19, i64 1)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_TAN@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %tancos = alloca double
  %0 = alloca double
  %tansin = alloca double
  store double 0.000000e+00, double* %tansin, !vex-initializer-store !3
  store double 0.000000e+00, double* %tancos, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  %output = fmul double 2.000000e+00, %return
  store double %output, double* %0
  call void @"sincos@FFF"(double* %0, double* %tansin, double* %tancos)
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return3 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  %output4 = fmul double 2.000000e+00, %return3
  %return5 = call double @"sinh@FF"(double %output4)
  %return9 = call double @"cosh@FF"(double %output4)
  %tancos10 = load double, double* %tancos
  %output12 = fadd double %tancos10, %return9
  %output13 = call double @"div@FF"(double 1.000000e+00, double %output12)
  %w14 = load double, double* %w
  %output16 = fmul double %w14, %output13
  %output18 = fmul double %output16, %return5
  %tmp = load <2 x double>, <2 x double>* %p
  %return19 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output18, i64 0)
  %output21 = extractvalue { double, <2 x double> } %return19, 1
  store <2 x double> %output21, <2 x double>* %p
  %w22 = load double, double* %w
  %output24 = fmul double %w22, %output13
  %output26 = fmul double %output24, %return9
  %return28 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output21, double %output26, i64 1)
  %output30 = extractvalue { double, <2 x double> } %return28, 1
  store <2 x double> %output30, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SEC@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %seccos = alloca double
  %0 = alloca double
  %secsin = alloca double
  store double 0.000000e+00, double* %secsin, !vex-initializer-store !3
  store double 0.000000e+00, double* %seccos, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  store double %return, double* %0
  call void @"sincos@FFF"(double* %0, double* %secsin, double* %seccos)
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return3 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  %return4 = call double @"sinh@FF"(double %return3)
  %return7 = call double @"cosh@FF"(double %return3)
  %return9 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %output = fmul double 2.000000e+00, %return9
  %return10 = call double @"cos@FF"(double %output)
  %output13 = fmul double 2.000000e+00, %return3
  %return14 = call double @"cosh@FF"(double %output13)
  %output15 = fadd double %return10, %return14
  %output16 = call double @"div@FF"(double 2.000000e+00, double %output15)
  %w17 = load double, double* %w
  %output19 = fmul double %w17, %output16
  %seccos20 = load double, double* %seccos
  %output21 = fmul double %output19, %seccos20
  %output23 = fmul double %output21, %return7
  %tmp = load <2 x double>, <2 x double>* %p
  %return24 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output23, i64 0)
  %output26 = extractvalue { double, <2 x double> } %return24, 1
  store <2 x double> %output26, <2 x double>* %p
  %w27 = load double, double* %w
  %output29 = fmul double %w27, %output16
  %secsin30 = load double, double* %secsin
  %output31 = fmul double %output29, %secsin30
  %output33 = fmul double %output31, %return4
  %return35 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output26, double %output33, i64 1)
  %output37 = extractvalue { double, <2 x double> } %return35, 1
  store <2 x double> %output37, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_CSC@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %csccos = alloca double
  %0 = alloca double
  %cscsin = alloca double
  store double 0.000000e+00, double* %cscsin, !vex-initializer-store !3
  store double 0.000000e+00, double* %csccos, !vex-initializer-store !3
  %p1 = load <2 x double>, <2 x double>* %p
  %return = call double @"getcomp@FUI"(<2 x double> %p1, i64 0)
  store double %return, double* %0
  call void @"sincos@FFF"(double* %0, double* %cscsin, double* %csccos)
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return3 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  %return4 = call double @"sinh@FF"(double %return3)
  %return7 = call double @"cosh@FF"(double %return3)
  %output = fmul double 2.000000e+00, %return3
  %return10 = call double @"cosh@FF"(double %output)
  %return12 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %output13 = fmul double 2.000000e+00, %return12
  %return14 = call double @"cos@FF"(double %output13)
  %output15 = fsub double %return10, %return14
  %output16 = call double @"div@FF"(double 2.000000e+00, double %output15)
  %w17 = load double, double* %w
  %output19 = fmul double %w17, %output16
  %cscsin20 = load double, double* %cscsin
  %output21 = fmul double %output19, %cscsin20
  %output23 = fmul double %output21, %return7
  %tmp = load <2 x double>, <2 x double>* %p
  %return24 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output23, i64 0)
  %output26 = extractvalue { double, <2 x double> } %return24, 1
  store <2 x double> %output26, <2 x double>* %p
  %w27 = load double, double* %w
  %output29 = fmul double %w27, %output16
  %csccos30 = load double, double* %csccos
  %output31 = fmul double %output29, %csccos30
  %output33 = fmul double %output31, %return4
  %return35 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output26, double %output33, i64 1)
  %output37 = extractvalue { double, <2 x double> } %return35, 1
  store <2 x double> %output37, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_COT@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %cotcos = alloca double
  %0 = alloca double
  %cotsin = alloca double
  store double 0.000000e+00, double* %cotsin, !vex-initializer-store !3
  store double 0.000000e+00, double* %cotcos, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  %output = fmul double 2.000000e+00, %return
  store double %output, double* %0
  call void @"sincos@FFF"(double* %0, double* %cotsin, double* %cotcos)
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return3 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  %output4 = fmul double 2.000000e+00, %return3
  %return5 = call double @"sinh@FF"(double %output4)
  %return9 = call double @"cosh@FF"(double %output4)
  %cotcos11 = load double, double* %cotcos
  %output12 = fsub double %return9, %cotcos11
  %output13 = call double @"div@FF"(double 1.000000e+00, double %output12)
  %w14 = load double, double* %w
  %output16 = fmul double %w14, %output13
  %cotsin17 = load double, double* %cotsin
  %output18 = fmul double %output16, %cotsin17
  %tmp = load <2 x double>, <2 x double>* %p
  %return19 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output18, i64 0)
  %output21 = extractvalue { double, <2 x double> } %return19, 1
  store <2 x double> %output21, <2 x double>* %p
  %w22 = load double, double* %w
  %output24 = fmul double %w22, %output13
  %return25 = call i64 @"neg@II"(i64 1)
  %cast = sitofp i64 %return25 to double
  %output26 = fmul double %output24, %cast
  %output28 = fmul double %output26, %return5
  %return30 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output21, double %output28, i64 1)
  %output32 = extractvalue { double, <2 x double> } %return30, 1
  store <2 x double> %output32, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SINH@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %sinhcos = alloca double
  %0 = alloca double
  %sinhsin = alloca double
  store double 0.000000e+00, double* %sinhsin, !vex-initializer-store !3
  store double 0.000000e+00, double* %sinhcos, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 1)
  store double %return, double* %0
  call void @"sincos@FFF"(double* %0, double* %sinhsin, double* %sinhcos)
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return3 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %return4 = call double @"sinh@FF"(double %return3)
  %return7 = call double @"cosh@FF"(double %return3)
  %w8 = load double, double* %w
  %output = fmul double %w8, %return4
  %sinhcos10 = load double, double* %sinhcos
  %output11 = fmul double %output, %sinhcos10
  %tmp = load <2 x double>, <2 x double>* %p
  %return12 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output11, i64 0)
  %output14 = extractvalue { double, <2 x double> } %return12, 1
  store <2 x double> %output14, <2 x double>* %p
  %w15 = load double, double* %w
  %output17 = fmul double %w15, %return7
  %sinhsin18 = load double, double* %sinhsin
  %output19 = fmul double %output17, %sinhsin18
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output14, double %output19, i64 1)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_COSH@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %coshcos = alloca double
  %0 = alloca double
  %coshsin = alloca double
  store double 0.000000e+00, double* %coshsin, !vex-initializer-store !3
  store double 0.000000e+00, double* %coshcos, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 1)
  store double %return, double* %0
  call void @"sincos@FFF"(double* %0, double* %coshsin, double* %coshcos)
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return3 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %return4 = call double @"sinh@FF"(double %return3)
  %return7 = call double @"cosh@FF"(double %return3)
  %w8 = load double, double* %w
  %output = fmul double %w8, %return7
  %coshcos10 = load double, double* %coshcos
  %output11 = fmul double %output, %coshcos10
  %tmp = load <2 x double>, <2 x double>* %p
  %return12 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output11, i64 0)
  %output14 = extractvalue { double, <2 x double> } %return12, 1
  store <2 x double> %output14, <2 x double>* %p
  %w15 = load double, double* %w
  %output17 = fmul double %w15, %return4
  %coshsin18 = load double, double* %coshsin
  %output19 = fmul double %output17, %coshsin18
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output14, double %output19, i64 1)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_TANH@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %tanhcos = alloca double
  %0 = alloca double
  %tanhsin = alloca double
  store double 0.000000e+00, double* %tanhsin, !vex-initializer-store !3
  store double 0.000000e+00, double* %tanhcos, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 1)
  %output = fmul double 2.000000e+00, %return
  store double %output, double* %0
  call void @"sincos@FFF"(double* %0, double* %tanhsin, double* %tanhcos)
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return3 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %return4 = call double @"sinh@FF"(double %return3)
  %return7 = call double @"cosh@FF"(double %return3)
  %tanhcos8 = load double, double* %tanhcos
  %output10 = fadd double %tanhcos8, %return7
  %output11 = call double @"div@FF"(double 1.000000e+00, double %output10)
  %w12 = load double, double* %w
  %output14 = fmul double %w12, %output11
  %output16 = fmul double %output14, %return4
  %tmp = load <2 x double>, <2 x double>* %p
  %return17 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output16, i64 0)
  %output19 = extractvalue { double, <2 x double> } %return17, 1
  store <2 x double> %output19, <2 x double>* %p
  %w20 = load double, double* %w
  %output22 = fmul double %w20, %output11
  %tanhsin23 = load double, double* %tanhsin
  %output24 = fmul double %output22, %tanhsin23
  %return26 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output19, double %output24, i64 1)
  %output28 = extractvalue { double, <2 x double> } %return26, 1
  store <2 x double> %output28, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SECH@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %sechcos = alloca double
  %0 = alloca double
  %sechsin = alloca double
  store double 0.000000e+00, double* %sechsin, !vex-initializer-store !3
  store double 0.000000e+00, double* %sechcos, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 1)
  store double %return, double* %0
  call void @"sincos@FFF"(double* %0, double* %sechsin, double* %sechcos)
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return3 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %return4 = call double @"sinh@FF"(double %return3)
  %return7 = call double @"cosh@FF"(double %return3)
  %return9 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  %output = fmul double 2.000000e+00, %return9
  %return10 = call double @"cos@FF"(double %output)
  %output13 = fmul double 2.000000e+00, %return3
  %return14 = call double @"cosh@FF"(double %output13)
  %output15 = fadd double %return10, %return14
  %output16 = call double @"div@FF"(double 2.000000e+00, double %output15)
  %w17 = load double, double* %w
  %output19 = fmul double %w17, %output16
  %sechcos20 = load double, double* %sechcos
  %output21 = fmul double %output19, %sechcos20
  %output23 = fmul double %output21, %return7
  %tmp = load <2 x double>, <2 x double>* %p
  %return24 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output23, i64 0)
  %output26 = extractvalue { double, <2 x double> } %return24, 1
  store <2 x double> %output26, <2 x double>* %p
  %w27 = load double, double* %w
  %output29 = fmul double %w27, %output16
  %sechsin30 = load double, double* %sechsin
  %output31 = fmul double %output29, %sechsin30
  %output33 = fmul double %output31, %return4
  %return35 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output26, double %output33, i64 1)
  %output37 = extractvalue { double, <2 x double> } %return35, 1
  store <2 x double> %output37, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_CSCH@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %cschcos = alloca double
  %0 = alloca double
  %cschsin = alloca double
  store double 0.000000e+00, double* %cschsin, !vex-initializer-store !3
  store double 0.000000e+00, double* %cschcos, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 1)
  store double %return, double* %0
  call void @"sincos@FFF"(double* %0, double* %cschsin, double* %cschcos)
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return3 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %return4 = call double @"sinh@FF"(double %return3)
  %return7 = call double @"cosh@FF"(double %return3)
  %output = fmul double 2.000000e+00, %return3
  %return10 = call double @"cosh@FF"(double %output)
  %return12 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  %output13 = fmul double 2.000000e+00, %return12
  %return14 = call double @"cos@FF"(double %output13)
  %output15 = fsub double %return10, %return14
  %output16 = call double @"div@FF"(double 2.000000e+00, double %output15)
  %w17 = load double, double* %w
  %output19 = fmul double %w17, %output16
  %output21 = fmul double %output19, %return4
  %cschcos22 = load double, double* %cschcos
  %output23 = fmul double %output21, %cschcos22
  %tmp = load <2 x double>, <2 x double>* %p
  %return24 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output23, i64 0)
  %output26 = extractvalue { double, <2 x double> } %return24, 1
  store <2 x double> %output26, <2 x double>* %p
  %w27 = load double, double* %w
  %output29 = fmul double %w27, %output16
  %output31 = fmul double %output29, %return7
  %cschsin32 = load double, double* %cschsin
  %output33 = fmul double %output31, %cschsin32
  %return35 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output26, double %output33, i64 1)
  %output37 = extractvalue { double, <2 x double> } %return35, 1
  store <2 x double> %output37, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_COTH@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %cothcos = alloca double
  %0 = alloca double
  %cothsin = alloca double
  store double 0.000000e+00, double* %cothsin, !vex-initializer-store !3
  store double 0.000000e+00, double* %cothcos, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 1)
  %output = fmul double 2.000000e+00, %return
  store double %output, double* %0
  call void @"sincos@FFF"(double* %0, double* %cothsin, double* %cothcos)
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return3 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %output4 = fmul double 2.000000e+00, %return3
  %return5 = call double @"sinh@FF"(double %output4)
  %return9 = call double @"cosh@FF"(double %output4)
  %cothcos11 = load double, double* %cothcos
  %output12 = fsub double %return9, %cothcos11
  %output13 = call double @"div@FF"(double 1.000000e+00, double %output12)
  %w14 = load double, double* %w
  %output16 = fmul double %w14, %output13
  %output18 = fmul double %output16, %return5
  %tmp = load <2 x double>, <2 x double>* %p
  %return19 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output18, i64 0)
  %output21 = extractvalue { double, <2 x double> } %return19, 1
  store <2 x double> %output21, <2 x double>* %p
  %w22 = load double, double* %w
  %output24 = fmul double %w22, %output13
  %cothsin25 = load double, double* %cothsin
  %output26 = fmul double %output24, %cothsin25
  %return28 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output21, double %output26, i64 1)
  %output30 = extractvalue { double, <2 x double> } %return28, 1
  store <2 x double> %output30, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_AUGER@UUFFFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %freq, double* %scale, double* %sym, double* %ww) #0 {
__llvm_entry:
  %freq1 = load double, double* %freq
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %output = fmul double %freq1, %return
  %return3 = call double @"sin@FF"(double %output)
  %return6 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  %output7 = fmul double %freq1, %return6
  %return8 = call double @"sin@FF"(double %output7)
  %ww11 = load double, double* %ww
  %scale12 = load double, double* %scale
  %output14 = fmul double %scale12, %return3
  %output15 = call double @"div@FF"(double %output14, double 2.000000e+00)
  %return18 = call double @"abs@FF"(double %return6)
  %output20 = fmul double %return18, %return3
  %output21 = fadd double %output15, %output20
  %output22 = fmul double %ww11, %output21
  %output23 = fadd double %return6, %output22
  %_p24 = load <2 x double>, <2 x double>* %_p
  %return25 = call double @"getcomp@FUI"(<2 x double> %_p24, i64 0)
  %ww26 = load double, double* %ww
  %scale27 = load double, double* %scale
  %output29 = fmul double %scale27, %return8
  %output30 = call double @"div@FF"(double %output29, double 2.000000e+00)
  %return33 = call double @"abs@FF"(double %return25)
  %output35 = fmul double %return33, %return8
  %output36 = fadd double %output30, %output35
  %output37 = fmul double %ww26, %output36
  %output38 = fadd double %return25, %output37
  %w39 = load double, double* %w
  %_p40 = load <2 x double>, <2 x double>* %_p
  %return41 = call double @"getcomp@FUI"(<2 x double> %_p40, i64 0)
  %sym42 = load double, double* %sym
  %output46 = fmul double %output23, %return41
  %output47 = fmul double %sym42, %output46
  %output48 = fadd double %return41, %output47
  %output49 = fmul double %w39, %output48
  %tmp = load <2 x double>, <2 x double>* %p
  %return50 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output49, i64 0)
  %output52 = extractvalue { double, <2 x double> } %return50, 1
  store <2 x double> %output52, <2 x double>* %p
  %w53 = load double, double* %w
  %output55 = fmul double %w53, %output38
  %return57 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output52, double %output55, i64 1)
  %output59 = extractvalue { double, <2 x double> } %return57, 1
  store <2 x double> %output59, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_FLUX@UUFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %spread) #0 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  %w2 = load double, double* %w
  %output = fadd double %return, %w2
  %output6 = fsub double %return, %w2
  %spread8 = load double, double* %spread
  %output9 = fadd double 2.000000e+00, %spread8
  %output10 = fmul double %w2, %output9
  %return12 = call double @"getcomp@FUI"(<2 x double> %_p1, i64 1)
  %output15 = fmul double %return12, %return12
  %output18 = fmul double %output, %output
  %output19 = fadd double %output15, %output18
  %return20 = call double @"sqrt@FF"(double %output19)
  %output28 = fmul double %output6, %output6
  %output29 = fadd double %output15, %output28
  %return30 = call double @"sqrt@FF"(double %output29)
  %output31 = call double @"div@FF"(double %return20, double %return30)
  %return32 = call double @"sqrt@FF"(double %output31)
  %output33 = fmul double %output10, %return32
  %return37 = call double @"atan2@FFF"(double %return12, double %output6)
  %return41 = call double @"atan2@FFF"(double %return12, double %output)
  %output42 = fsub double %return37, %return41
  %output43 = fmul double %output42, 5.000000e-01
  %return46 = call double @"cos@FF"(double %output43)
  %output47 = fmul double %output33, %return46
  %tmp = load <2 x double>, <2 x double>* %p
  %return48 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output47, i64 0)
  %output50 = extractvalue { double, <2 x double> } %return48, 1
  store <2 x double> %output50, <2 x double>* %p
  %return53 = call double @"sin@FF"(double %output43)
  %output54 = fmul double %output33, %return53
  %return56 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output50, double %output54, i64 1)
  %output58 = extractvalue { double, <2 x double> } %return56, 1
  store <2 x double> %output58, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_MOBIUS@UUFPP"(<2 x double>* %p, <2 x double>* %_p, double* %w, <4 x double>* %re, <4 x double>* %im) #0 {
__llvm_entry:
  %re1 = load <4 x double>, <4 x double>* %re
  %return = call double @"getcomp@FPI"(<4 x double> %re1, i64 0)
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return3 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %output = fmul double %return, %return3
  %im4 = load <4 x double>, <4 x double>* %im
  %return5 = call double @"getcomp@FPI"(<4 x double> %im4, i64 0)
  %return7 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  %output8 = fmul double %return5, %return7
  %output9 = fsub double %output, %output8
  %return11 = call double @"getcomp@FPI"(<4 x double> %re1, i64 1)
  %output12 = fadd double %output9, %return11
  %output17 = fmul double %return, %return7
  %output22 = fmul double %return5, %return3
  %output23 = fadd double %output17, %output22
  %return25 = call double @"getcomp@FPI"(<4 x double> %im4, i64 1)
  %output26 = fadd double %output23, %return25
  %return28 = call double @"getcomp@FPI"(<4 x double> %re1, i64 2)
  %output31 = fmul double %return28, %return3
  %return33 = call double @"getcomp@FPI"(<4 x double> %im4, i64 2)
  %output36 = fmul double %return33, %return7
  %output37 = fsub double %output31, %output36
  %return39 = call double @"getcomp@FPI"(<4 x double> %re1, i64 3)
  %output40 = fadd double %output37, %return39
  %output45 = fmul double %return28, %return7
  %output50 = fmul double %return33, %return3
  %output51 = fadd double %output45, %output50
  %return53 = call double @"getcomp@FPI"(<4 x double> %im4, i64 3)
  %output54 = fadd double %output51, %return53
  %w55 = load double, double* %w
  %output58 = fmul double %output40, %output40
  %output61 = fmul double %output54, %output54
  %output62 = fadd double %output58, %output61
  %output63 = call double @"div@FF"(double %w55, double %output62)
  %output67 = fmul double %output12, %output40
  %output70 = fmul double %output26, %output54
  %output71 = fadd double %output67, %output70
  %output72 = fmul double %output63, %output71
  %tmp = load <2 x double>, <2 x double>* %p
  %return73 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output72, i64 0)
  %output75 = extractvalue { double, <2 x double> } %return73, 1
  store <2 x double> %output75, <2 x double>* %p
  %output79 = fmul double %output26, %output40
  %output82 = fmul double %output12, %output54
  %output83 = fsub double %output79, %output82
  %output84 = fmul double %output63, %output83
  %return86 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output75, double %output84, i64 1)
  %output88 = extractvalue { double, <2 x double> } %return86, 1
  store <2 x double> %output88, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_CURVE@UUFUU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %l, <2 x double>* %a) #0 {
__llvm_entry:
  %l1 = load <2 x double>, <2 x double>* %l
  %return = call double @"getcomp@FUI"(<2 x double> %l1, i64 0)
  %output = fmul double %return, %return
  %return5 = call double @"getcomp@FUI"(<2 x double> %l1, i64 1)
  %output8 = fmul double %return5, %return5
  %return10 = fcmp olt double %output, 1.000000e-20
  br i1 %return10, label %true, label %end

true:                                             ; preds = %__llvm_entry
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %return13 = fcmp olt double %output8, 1.000000e-20
  br i1 %return13, label %true15, label %end16

true15:                                           ; preds = %end
  br label %end16

end16:                                            ; preds = %true15, %end
  %w17 = load double, double* %w
  %_p18 = load <2 x double>, <2 x double>* %_p
  %return19 = call double @"getcomp@FUI"(<2 x double> %_p18, i64 0)
  %a20 = load <2 x double>, <2 x double>* %a
  %return21 = call double @"getcomp@FUI"(<2 x double> %a20, i64 0)
  %return23 = call double @"getcomp@FUI"(<2 x double> %_p18, i64 1)
  %output26 = fmul double %return23, %return23
  %l27 = load <2 x double>, <2 x double>* %l
  %return28 = call double @"getcomp@FUI"(<2 x double> %l27, i64 0)
  %output29 = call double @"div@FF"(double %output26, double %return28)
  %return30 = call double @"exp@FF"(double %output29)
  %output31 = fmul double %return21, %return30
  %output32 = fadd double %return19, %output31
  %output33 = fmul double %w17, %output32
  %tmp = load <2 x double>, <2 x double>* %p
  %return34 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output33, i64 0)
  %output36 = extractvalue { double, <2 x double> } %return34, 1
  store <2 x double> %output36, <2 x double>* %p
  %w37 = load double, double* %w
  %_p38 = load <2 x double>, <2 x double>* %_p
  %return39 = call double @"getcomp@FUI"(<2 x double> %_p38, i64 1)
  %a40 = load <2 x double>, <2 x double>* %a
  %return41 = call double @"getcomp@FUI"(<2 x double> %a40, i64 1)
  %return43 = call double @"getcomp@FUI"(<2 x double> %_p38, i64 0)
  %output46 = fmul double %return43, %return43
  %l47 = load <2 x double>, <2 x double>* %l
  %return48 = call double @"getcomp@FUI"(<2 x double> %l47, i64 1)
  %output49 = call double @"div@FF"(double %output46, double %return48)
  %return50 = call double @"exp@FF"(double %output49)
  %output51 = fmul double %return41, %return50
  %output52 = fadd double %return39, %output51
  %output53 = fmul double %w37, %output52
  %return55 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output36, double %output53, i64 1)
  %output57 = extractvalue { double, <2 x double> } %return55, 1
  store <2 x double> %output57, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_PERSPECTIVE@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %angle, double* %dist) #0 {
__llvm_entry:
  %angle1 = load double, double* %angle
  %output = fmul double %angle1, 0x400921FB4D12D84A
  %output2 = call double @"div@FF"(double %output, double 2.000000e+00)
  %return = call double @"sin@FF"(double %output2)
  %dist4 = load double, double* %dist
  %return6 = call double @"cos@FF"(double %output2)
  %output7 = fmul double %dist4, %return6
  %_p9 = load <2 x double>, <2 x double>* %_p
  %return10 = call double @"getcomp@FUI"(<2 x double> %_p9, i64 1)
  %output12 = fmul double %return10, %return
  %output13 = fsub double %dist4, %output12
  %output14 = call double @"div@FF"(double 1.000000e+00, double %output13)
  %w15 = load double, double* %w
  %output17 = fmul double %w15, %dist4
  %return19 = call double @"getcomp@FUI"(<2 x double> %_p9, i64 0)
  %output20 = fmul double %output17, %return19
  %output22 = fmul double %output20, %output14
  %tmp = load <2 x double>, <2 x double>* %p
  %return23 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output22, i64 0)
  %output25 = extractvalue { double, <2 x double> } %return23, 1
  store <2 x double> %output25, <2 x double>* %p
  %w26 = load double, double* %w
  %output28 = fmul double %w26, %output7
  %_p29 = load <2 x double>, <2 x double>* %_p
  %return30 = call double @"getcomp@FUI"(<2 x double> %_p29, i64 1)
  %output31 = fmul double %output28, %return30
  %output33 = fmul double %output31, %output14
  %return35 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output25, double %output33, i64 1)
  %output37 = extractvalue { double, <2 x double> } %return35, 1
  store <2 x double> %output37, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_BWRAPS@UUFFFFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %cellsize, double* %space, double* %gain, double* %innertwist, double* %outertwist) #0 {
__llvm_entry:
  %ss = alloca double
  %cc = alloca double
  %0 = alloca double
  store double 0.000000e+00, double* %ss, !vex-initializer-store !3
  store double 0.000000e+00, double* %cc, !vex-initializer-store !3
  %cellsize1 = load double, double* %cellsize
  %space2 = load double, double* %space
  %output = fmul double %space2, %space2
  %output4 = fadd double 1.000000e+00, %output
  %output5 = call double @"div@FF"(double %cellsize1, double %output4)
  %output6 = fmul double 5.000000e-01, %output5
  %gain7 = load double, double* %gain
  %return = call double @"sqrt@FF"(double %gain7)
  %output9 = call double @"div@FF"(double %return, double %cellsize1)
  %output10 = fadd double %output9, 1.000000e-06
  %output13 = fmul double %output10, %output6
  %return15 = fcmp ogt double %output13, 2.000000e+00
  br i1 %return15, label %end, label %false

false:                                            ; preds = %__llvm_entry
  %output21 = fmul double %output13, %output13
  %output22 = call double @"div@FF"(double %output21, double 4.000000e+00)
  %output23 = fadd double %output22, 1.000000e+00
  %output24 = call double @"div@FF"(double %output13, double %output23)
  br label %end

end:                                              ; preds = %__llvm_entry, %false
  %phi = phi double [ %output24, %false ], [ 1.000000e+00, %__llvm_entry ]
  %output27 = fmul double %output6, %output6
  %output30 = call double @"div@FF"(double %output6, double %phi)
  %_p31 = load <2 x double>, <2 x double>* %_p
  %return32 = call double @"getcomp@FUI"(<2 x double> %_p31, i64 0)
  %return34 = call double @"getcomp@FUI"(<2 x double> %_p31, i64 1)
  %cellsize35 = load double, double* %cellsize
  %return36 = fcmp oeq double %cellsize35, 0.000000e+00
  br i1 %return36, label %true38, label %false39

true38:                                           ; preds = %end
  %w41 = load double, double* %w
  %output43 = fmul double %w41, %return32
  %tmp = load <2 x double>, <2 x double>* %p
  %return44 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output43, i64 0)
  %output46 = extractvalue { double, <2 x double> } %return44, 1
  store <2 x double> %output46, <2 x double>* %p
  %w47 = load double, double* %w
  %output49 = fmul double %w47, %return34
  %return51 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output46, double %output49, i64 1)
  %output53 = extractvalue { double, <2 x double> } %return51, 1
  store <2 x double> %output53, <2 x double>* %p
  br label %end40

false39:                                          ; preds = %end
  %output56 = call double @"div@FF"(double %return32, double %cellsize35)
  %return57 = call double @"floor@FF"(double %output56)
  %output58 = fadd double %return57, 5.000000e-01
  %output60 = fmul double %output58, %cellsize35
  %output63 = call double @"div@FF"(double %return34, double %cellsize35)
  %return64 = call double @"floor@FF"(double %output63)
  %output65 = fadd double %return64, 5.000000e-01
  %output67 = fmul double %output65, %cellsize35
  %output70 = fsub double %return32, %output60
  %output73 = fsub double %return34, %output67
  %output76 = fmul double %output70, %output70
  %output79 = fmul double %output73, %output73
  %output80 = fadd double %output76, %output79
  %return82 = fcmp ogt double %output80, %output27
  br i1 %return82, label %true84, label %false85

end40:                                            ; preds = %true84, %false85, %true38
  ret void

true84:                                           ; preds = %false39
  %w87 = load double, double* %w
  %output89 = fmul double %w87, %return32
  %tmp90 = load <2 x double>, <2 x double>* %p
  %return91 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp90, double %output89, i64 0)
  %output93 = extractvalue { double, <2 x double> } %return91, 1
  store <2 x double> %output93, <2 x double>* %p
  %w94 = load double, double* %w
  %output96 = fmul double %w94, %return34
  %return98 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output93, double %output96, i64 1)
  %output100 = extractvalue { double, <2 x double> } %return98, 1
  store <2 x double> %output100, <2 x double>* %p
  br label %end40

false85:                                          ; preds = %false39
  %output103 = fmul double %output70, %output10
  %output106 = fmul double %output73, %output10
  %output110 = fmul double %output103, %output103
  %output113 = fmul double %output106, %output106
  %output114 = fadd double %output110, %output113
  %output115 = call double @"div@FF"(double %output114, double 4.000000e+00)
  %output116 = fadd double %output115, 1.000000e+00
  %output117 = call double @"div@FF"(double %output30, double %output116)
  %output120 = fmul double %output103, %output117
  %output123 = fmul double %output106, %output117
  %output126 = fmul double %output120, %output120
  %output129 = fmul double %output123, %output123
  %output130 = fadd double %output126, %output129
  %output132 = call double @"div@FF"(double %output130, double %output27)
  %innertwist133 = load double, double* %innertwist
  %output135 = fsub double 1.000000e+00, %output132
  %output136 = fmul double %innertwist133, %output135
  %outertwist137 = load double, double* %outertwist
  %output139 = fmul double %outertwist137, %output132
  %output140 = fadd double %output136, %output139
  store double %output140, double* %0
  call void @"sincos@FFF"(double* %0, double* %ss, double* %cc)
  %cc143 = load double, double* %cc
  %output145 = fmul double %cc143, %output120
  %output146 = fadd double %output60, %output145
  %ss147 = load double, double* %ss
  %output149 = fmul double %ss147, %output123
  %output150 = fadd double %output146, %output149
  %output154 = fmul double %ss147, %output120
  %output155 = fsub double %output67, %output154
  %output158 = fmul double %cc143, %output123
  %output159 = fadd double %output155, %output158
  %w160 = load double, double* %w
  %output162 = fmul double %w160, %output150
  %tmp163 = load <2 x double>, <2 x double>* %p
  %return164 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp163, double %output162, i64 0)
  %output166 = extractvalue { double, <2 x double> } %return164, 1
  store <2 x double> %output166, <2 x double>* %p
  %w167 = load double, double* %w
  %output169 = fmul double %w167, %output159
  %return171 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output166, double %output169, i64 1)
  %output173 = extractvalue { double, <2 x double> } %return171, 1
  store <2 x double> %output173, <2 x double>* %p
  br label %end40
}

; Function Attrs: alwaysinline nounwind
define private void @"V_HEMISPHERE@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %w1 = load double, double* %w
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %output = fadd double %SUMSQ, 1.000000e+00
  %return = call double @"sqrt@FF"(double %output)
  %output3 = call double @"div@FF"(double %w1, double %return)
  %_p4 = load <2 x double>, <2 x double>* %_p
  %return5 = call double @"getcomp@FUI"(<2 x double> %_p4, i64 0)
  %output7 = fmul double %return5, %output3
  %tmp = load <2 x double>, <2 x double>* %p
  %return8 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output7, i64 0)
  %output10 = extractvalue { double, <2 x double> } %return8, 1
  store <2 x double> %output10, <2 x double>* %p
  %_p11 = load <2 x double>, <2 x double>* %_p
  %return12 = call double @"getcomp@FUI"(<2 x double> %_p11, i64 1)
  %output14 = fmul double %return12, %output3
  %return16 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output10, double %output14, i64 1)
  %output18 = extractvalue { double, <2 x double> } %return16, 1
  store <2 x double> %output18, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_POLYNOMIAL@UUFUUU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %pow, <2 x double>* %lc, <2 x double>* %sc) #0 {
__llvm_entry:
  %0 = alloca double
  %1 = alloca double
  %w1 = load double, double* %w
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %return3 = call double @"abs@FF"(double %return)
  %output = fmul double %w1, %return3
  %pow4 = load <2 x double>, <2 x double>* %pow
  %return5 = call double @"getcomp@FUI"(<2 x double> %pow4, i64 0)
  %return6 = call double @"pow@FFF"(double %output, double %return5)
  %w7 = load double, double* %w
  %_p8 = load <2 x double>, <2 x double>* %_p
  %return9 = call double @"getcomp@FUI"(<2 x double> %_p8, i64 1)
  %return10 = call double @"abs@FF"(double %return9)
  %output11 = fmul double %w7, %return10
  %pow12 = load <2 x double>, <2 x double>* %pow
  %return13 = call double @"getcomp@FUI"(<2 x double> %pow12, i64 1)
  %return14 = call double @"pow@FFF"(double %output11, double %return13)
  %_p16 = load <2 x double>, <2 x double>* %_p
  %return17 = call double @"getcomp@FUI"(<2 x double> %_p16, i64 0)
  store double %return17, double* %0
  %sgn = call double @"sgn@FF"(double* %0)
  %output18 = fmul double %return6, %sgn
  %lc19 = load <2 x double>, <2 x double>* %lc
  %return20 = call double @"getcomp@FUI"(<2 x double> %lc19, i64 0)
  %_p21 = load <2 x double>, <2 x double>* %_p
  %return22 = call double @"getcomp@FUI"(<2 x double> %_p21, i64 0)
  %output23 = fmul double %return20, %return22
  %sc24 = load <2 x double>, <2 x double>* %sc
  %return25 = call double @"getcomp@FUI"(<2 x double> %sc24, i64 0)
  %output26 = fmul double %output23, %return25
  %output27 = fadd double %output18, %output26
  %tmp = load <2 x double>, <2 x double>* %p
  %return28 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output27, i64 0)
  %output30 = extractvalue { double, <2 x double> } %return28, 1
  store <2 x double> %output30, <2 x double>* %p
  %_p32 = load <2 x double>, <2 x double>* %_p
  %return33 = call double @"getcomp@FUI"(<2 x double> %_p32, i64 1)
  store double %return33, double* %1
  %sgn34 = call double @"sgn@FF"(double* %1)
  %output35 = fmul double %return14, %sgn34
  %lc36 = load <2 x double>, <2 x double>* %lc
  %return37 = call double @"getcomp@FUI"(<2 x double> %lc36, i64 1)
  %_p38 = load <2 x double>, <2 x double>* %_p
  %return39 = call double @"getcomp@FUI"(<2 x double> %_p38, i64 1)
  %output40 = fmul double %return37, %return39
  %sc41 = load <2 x double>, <2 x double>* %sc
  %return42 = call double @"getcomp@FUI"(<2 x double> %sc41, i64 1)
  %output43 = fmul double %output40, %return42
  %output44 = fadd double %output35, %output43
  %tmp45 = load <2 x double>, <2 x double>* %p
  %return46 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp45, double %output44, i64 1)
  %output48 = extractvalue { double, <2 x double> } %return46, 1
  store <2 x double> %output48, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private <2 x double> @"FLAME@UZ6gemPrmM52N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PN8pc_DISC2[VIIUUUUF"(%gemPrm* %GMP, i64* %idx, i64* %T, <2 x double>* %pos, <2 x double>* %x, <2 x double>* %y, <2 x double>* %o, double* %w) #0 {
__llvm_entry:
  %_p = alloca <2 x double>
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca <2 x double>
  %3 = alloca <2 x double>
  %4 = alloca double
  %5 = alloca <2 x double>
  %6 = alloca double
  %7 = alloca <2 x double>
  %8 = alloca double
  %9 = alloca <2 x double>
  %10 = alloca double
  %11 = alloca <2 x double>
  %12 = alloca double
  %13 = alloca <2 x double>
  %14 = alloca double
  %15 = alloca <2 x double>
  %16 = alloca double
  %17 = alloca <2 x double>
  %18 = alloca double
  %19 = alloca <2 x double>
  %20 = alloca double
  %21 = alloca <2 x double>
  %22 = alloca double
  %23 = alloca <2 x double>
  %24 = alloca double
  %25 = alloca <2 x double>
  %26 = alloca double
  %27 = alloca <2 x double>
  %28 = alloca double
  %29 = alloca <2 x double>
  %30 = alloca double
  %31 = alloca <2 x double>
  %32 = alloca double
  %33 = alloca double
  %34 = alloca double
  %35 = alloca double
  %36 = alloca double
  %37 = alloca <2 x double>
  %38 = alloca double
  %39 = alloca <2 x double>
  %40 = alloca double
  %41 = alloca double
  %42 = alloca double
  %43 = alloca <2 x double>
  %44 = alloca double
  %45 = alloca <2 x double>
  %46 = alloca double
  %47 = alloca <2 x double>
  %48 = alloca double
  %49 = alloca <2 x double>
  %50 = alloca double
  %51 = alloca double
  %52 = alloca <2 x double>
  %53 = alloca double
  %54 = alloca double
  %55 = alloca <2 x double>
  %56 = alloca double
  %57 = alloca <2 x double>
  %58 = alloca double
  %59 = alloca <2 x double>
  %60 = alloca double
  %61 = alloca double
  %62 = alloca <2 x double>
  %63 = alloca double
  %64 = alloca double
  %65 = alloca double
  %66 = alloca <2 x double>
  %67 = alloca double
  %68 = alloca double
  %69 = alloca double
  %70 = alloca double
  %71 = alloca double
  %72 = alloca <2 x double>
  %73 = alloca double
  %74 = alloca <4 x double>
  %75 = alloca <2 x double>
  %76 = alloca double
  %77 = alloca double
  %78 = alloca double
  %79 = alloca double
  %80 = alloca <2 x double>
  %81 = alloca double
  %82 = alloca double
  %83 = alloca double
  %84 = alloca <2 x double>
  %85 = alloca double
  %86 = alloca double
  %87 = alloca double
  %88 = alloca double
  %89 = alloca <2 x double>
  %90 = alloca double
  %91 = alloca <2 x double>
  %92 = alloca <2 x double>
  %93 = alloca double
  %94 = alloca double
  %95 = alloca <2 x double>
  %96 = alloca double
  %97 = alloca <2 x double>
  %98 = alloca <2 x double>
  %99 = alloca double
  %100 = alloca double
  %101 = alloca double
  %102 = alloca double
  %103 = alloca double
  %104 = alloca double
  %105 = alloca double
  %106 = alloca <2 x double>
  %107 = alloca double
  %108 = alloca <2 x double>
  %109 = alloca double
  %110 = alloca <2 x double>
  %111 = alloca double
  %112 = alloca <2 x double>
  %113 = alloca double
  %114 = alloca <2 x double>
  %115 = alloca double
  %116 = alloca <2 x double>
  %117 = alloca double
  %118 = alloca <2 x double>
  %119 = alloca double
  %120 = alloca <2 x double>
  %121 = alloca double
  %122 = alloca <2 x double>
  %123 = alloca double
  %124 = alloca double
  %125 = alloca double
  %126 = alloca <3 x double>
  %127 = alloca <2 x double>
  %128 = alloca double
  %129 = alloca double
  %130 = alloca double
  %131 = alloca double
  %132 = alloca <3 x double>
  %133 = alloca <2 x double>
  %134 = alloca double
  %135 = alloca double
  %136 = alloca double
  %137 = alloca <2 x double>
  %138 = alloca double
  %139 = alloca double
  %140 = alloca double
  %141 = alloca <2 x double>
  %142 = alloca double
  %143 = alloca double
  %144 = alloca double
  %145 = alloca <2 x double>
  %146 = alloca double
  %147 = alloca <2 x double>
  %148 = alloca <2 x double>
  %149 = alloca double
  %150 = alloca double
  %151 = alloca <2 x double>
  %152 = alloca double
  %153 = alloca <2 x double>
  %154 = alloca double
  %155 = alloca <2 x double>
  %156 = alloca double
  %157 = alloca double
  %158 = alloca <2 x double>
  %159 = alloca double
  %160 = alloca double
  %161 = alloca double
  %162 = alloca double
  %163 = alloca <2 x double>
  %164 = alloca double
  %165 = alloca <2 x double>
  %166 = alloca double
  %167 = alloca <2 x double>
  %168 = alloca double
  %169 = alloca <2 x double>
  %170 = alloca double
  %171 = alloca double
  %172 = alloca <2 x double>
  %173 = alloca double
  %174 = alloca <2 x double>
  %175 = alloca double
  %176 = alloca double
  %177 = alloca double
  %178 = alloca double
  %179 = alloca <2 x double>
  %180 = alloca <2 x double>
  %181 = alloca double
  %182 = alloca <2 x double>
  %183 = alloca double
  %184 = alloca <2 x double>
  %185 = alloca <2 x double>
  %186 = alloca double
  %187 = alloca double
  %188 = alloca double
  %189 = alloca double
  %190 = alloca double
  %191 = alloca <2 x double>
  %192 = alloca double
  %193 = alloca <2 x double>
  %194 = alloca double
  %195 = alloca double
  %196 = alloca <2 x double>
  %197 = alloca <2 x double>
  %198 = alloca double
  %199 = alloca <2 x double>
  %200 = alloca double
  %201 = alloca <2 x double>
  %202 = alloca <2 x double>
  %203 = alloca <2 x double>
  %204 = alloca double
  %205 = alloca <2 x double>
  %206 = alloca <2 x double>
  %207 = alloca double
  %208 = alloca <2 x double>
  %209 = alloca <2 x double>
  %210 = alloca double
  %211 = alloca double
  %212 = alloca double
  %213 = alloca <2 x double>
  %214 = alloca double
  %215 = alloca double
  %216 = alloca double
  %217 = alloca double
  %218 = alloca double
  %219 = alloca <2 x double>
  %220 = alloca double
  %221 = alloca double
  %222 = alloca double
  %223 = alloca double
  %224 = alloca double
  %225 = alloca <2 x double>
  %226 = alloca double
  %227 = alloca double
  %228 = alloca double
  %229 = alloca double
  %230 = alloca double
  %231 = alloca <2 x double>
  %232 = alloca double
  %233 = alloca double
  %234 = alloca double
  %235 = alloca <2 x double>
  %236 = alloca double
  %237 = alloca <2 x double>
  %238 = alloca <2 x double>
  %239 = alloca <2 x double>
  %240 = alloca double
  %241 = alloca <2 x double>
  %242 = alloca double
  %243 = alloca <2 x double>
  %244 = alloca double
  %245 = alloca <2 x double>
  %246 = alloca double
  %247 = alloca <2 x double>
  %248 = alloca double
  %249 = alloca <2 x double>
  %250 = alloca double
  %251 = alloca <2 x double>
  %252 = alloca double
  %253 = alloca <2 x double>
  %254 = alloca double
  %255 = alloca <2 x double>
  %256 = alloca double
  %257 = alloca <2 x double>
  %258 = alloca double
  %259 = alloca <2 x double>
  %260 = alloca double
  %261 = alloca <2 x double>
  %262 = alloca double
  %263 = alloca <2 x double>
  %264 = alloca double
  %265 = alloca <2 x double>
  %266 = alloca double
  %267 = alloca <2 x double>
  %268 = alloca double
  %269 = alloca double
  %270 = alloca double
  %271 = alloca double
  %272 = alloca double
  %273 = alloca <2 x double>
  %274 = alloca double
  %275 = alloca double
  %276 = alloca <2 x double>
  %277 = alloca double
  %278 = alloca <4 x double>
  %279 = alloca <4 x double>
  %280 = alloca <2 x double>
  %281 = alloca double
  %282 = alloca <2 x double>
  %283 = alloca <2 x double>
  %284 = alloca <2 x double>
  %285 = alloca double
  %286 = alloca double
  %287 = alloca double
  %288 = alloca <2 x double>
  %289 = alloca double
  %290 = alloca double
  %291 = alloca double
  %292 = alloca double
  %293 = alloca double
  %294 = alloca double
  %295 = alloca <2 x double>
  %296 = alloca double
  %297 = alloca <2 x double>
  %298 = alloca double
  %299 = alloca <2 x double>
  %300 = alloca <2 x double>
  %301 = alloca <2 x double>
  %p = alloca <2 x double>
  store <2 x double> zeroinitializer, <2 x double>* %p, !vex-initializer-store !3
  %pos1 = load <2 x double>, <2 x double>* %pos
  store <2 x double> %pos1, <2 x double>* %_p
  %x2 = load <2 x double>, <2 x double>* %x
  store <2 x double> %x2, <2 x double>* %0
  %y3 = load <2 x double>, <2 x double>* %y
  store <2 x double> %y3, <2 x double>* %1
  %o4 = load <2 x double>, <2 x double>* %o
  store <2 x double> %o4, <2 x double>* %2
  call void @"affine@UUUU"(<2 x double>* %_p, <2 x double>* %0, <2 x double>* %1, <2 x double>* %2)
  %T5 = load i64, i64* %T
  %return = call i64 @"not@II"(i64 %T5)
  %302 = icmp ne i64 %return, 0
  br i1 %302, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %_p6 = load <2 x double>, <2 x double>* %_p
  %w7 = load double, double* %w
  %cast = call <2 x double> @"set@UF"(double %w7)
  %output = call <2 x double> @"mul@UU"(<2 x double> %_p6, <2 x double> %cast)
  br label %UnifiedReturnBlock

false:                                            ; preds = %__llvm_entry
  %return9 = call i64 @"lt@III"(i64 %T5, i64 35)
  %303 = icmp ne i64 %return9, 0
  br i1 %303, label %true10, label %false11

true10:                                           ; preds = %false
  %return14 = call i64 @"lt@III"(i64 %T5, i64 18)
  %304 = icmp ne i64 %return14, 0
  br i1 %304, label %true15, label %false16

false11:                                          ; preds = %false
  %return358 = call i64 @"lt@III"(i64 %T5, i64 70)
  %305 = icmp ne i64 %return358, 0
  br i1 %305, label %true359, label %false360

end12:                                            ; preds = %false1157, %false972, %false360, %false750, %false505, %false341, %false149
  %_p1181 = load <2 x double>, <2 x double>* %_p
  br label %UnifiedReturnBlock

true15:                                           ; preds = %true10
  %return19 = call i64 @"eq@III"(i64 %T5, i64 1)
  %306 = icmp ne i64 %return19, 0
  br i1 %306, label %true20, label %false21

false16:                                          ; preds = %true10
  %return166 = call i64 @"eq@III"(i64 %T5, i64 18)
  %307 = icmp ne i64 %return166, 0
  br i1 %307, label %true167, label %false168

true20:                                           ; preds = %true15
  %_p23 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p23, <2 x double>* %3
  %w24 = load double, double* %w
  store double %w24, double* %4
  call void @"V_SINUSOIDAL@UUF"(<2 x double>* %p, <2 x double>* %3, double* %4)
  %p25 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false21:                                          ; preds = %true15
  %return27 = call i64 @"eq@III"(i64 %T5, i64 2)
  %308 = icmp ne i64 %return27, 0
  br i1 %308, label %true28, label %false29

true28:                                           ; preds = %false21
  %_p31 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p31, <2 x double>* %5
  %w32 = load double, double* %w
  store double %w32, double* %6
  call void @"V_SPHERICAL@UUF"(<2 x double>* %p, <2 x double>* %5, double* %6)
  %p33 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false29:                                          ; preds = %false21
  %return35 = call i64 @"eq@III"(i64 %T5, i64 3)
  %309 = icmp ne i64 %return35, 0
  br i1 %309, label %true36, label %false37

true36:                                           ; preds = %false29
  %_p39 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p39, <2 x double>* %7
  %w40 = load double, double* %w
  store double %w40, double* %8
  call void @"V_SWIRL@UUF"(<2 x double>* %p, <2 x double>* %7, double* %8)
  %p41 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false37:                                          ; preds = %false29
  %return43 = call i64 @"eq@III"(i64 %T5, i64 4)
  %310 = icmp ne i64 %return43, 0
  br i1 %310, label %true44, label %false45

true44:                                           ; preds = %false37
  %_p47 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p47, <2 x double>* %9
  %w48 = load double, double* %w
  store double %w48, double* %10
  call void @"V_HORSESHOE@UUF"(<2 x double>* %p, <2 x double>* %9, double* %10)
  %p49 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false45:                                          ; preds = %false37
  %return51 = call i64 @"eq@III"(i64 %T5, i64 5)
  %311 = icmp ne i64 %return51, 0
  br i1 %311, label %true52, label %false53

true52:                                           ; preds = %false45
  %_p55 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p55, <2 x double>* %11
  %w56 = load double, double* %w
  store double %w56, double* %12
  call void @"V_POLAR@UUF"(<2 x double>* %p, <2 x double>* %11, double* %12)
  %p57 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false53:                                          ; preds = %false45
  %return59 = call i64 @"eq@III"(i64 %T5, i64 6)
  %312 = icmp ne i64 %return59, 0
  br i1 %312, label %true60, label %false61

true60:                                           ; preds = %false53
  %_p63 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p63, <2 x double>* %13
  %w64 = load double, double* %w
  store double %w64, double* %14
  call void @"V_HANDKERCHIEF@UUF"(<2 x double>* %p, <2 x double>* %13, double* %14)
  %p65 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false61:                                          ; preds = %false53
  %return67 = call i64 @"eq@III"(i64 %T5, i64 7)
  %313 = icmp ne i64 %return67, 0
  br i1 %313, label %true68, label %false69

true68:                                           ; preds = %false61
  %_p71 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p71, <2 x double>* %15
  %w72 = load double, double* %w
  store double %w72, double* %16
  call void @"V_HEART@UUF"(<2 x double>* %p, <2 x double>* %15, double* %16)
  %p73 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false69:                                          ; preds = %false61
  %return75 = call i64 @"eq@III"(i64 %T5, i64 8)
  %314 = icmp ne i64 %return75, 0
  br i1 %314, label %true76, label %false77

true76:                                           ; preds = %false69
  %_p79 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p79, <2 x double>* %17
  %w80 = load double, double* %w
  store double %w80, double* %18
  call void @"V_DISC@UUF"(<2 x double>* %p, <2 x double>* %17, double* %18)
  %p81 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false77:                                          ; preds = %false69
  %return83 = call i64 @"eq@III"(i64 %T5, i64 9)
  %315 = icmp ne i64 %return83, 0
  br i1 %315, label %true84, label %false85

true84:                                           ; preds = %false77
  %_p87 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p87, <2 x double>* %19
  %w88 = load double, double* %w
  store double %w88, double* %20
  call void @"V_SPIRAL@UUF"(<2 x double>* %p, <2 x double>* %19, double* %20)
  %p89 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false85:                                          ; preds = %false77
  %return91 = call i64 @"eq@III"(i64 %T5, i64 10)
  %316 = icmp ne i64 %return91, 0
  br i1 %316, label %true92, label %false93

true92:                                           ; preds = %false85
  %_p95 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p95, <2 x double>* %21
  %w96 = load double, double* %w
  store double %w96, double* %22
  call void @"V_HIPERBOLIC@UUF"(<2 x double>* %p, <2 x double>* %21, double* %22)
  %p97 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false93:                                          ; preds = %false85
  %return99 = call i64 @"eq@III"(i64 %T5, i64 11)
  %317 = icmp ne i64 %return99, 0
  br i1 %317, label %true100, label %false101

true100:                                          ; preds = %false93
  %_p103 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p103, <2 x double>* %23
  %w104 = load double, double* %w
  store double %w104, double* %24
  call void @"V_DIAMOND@UUF"(<2 x double>* %p, <2 x double>* %23, double* %24)
  %p105 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false101:                                         ; preds = %false93
  %return107 = call i64 @"eq@III"(i64 %T5, i64 12)
  %318 = icmp ne i64 %return107, 0
  br i1 %318, label %true108, label %false109

true108:                                          ; preds = %false101
  %_p111 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p111, <2 x double>* %25
  %w112 = load double, double* %w
  store double %w112, double* %26
  call void @"V_EX@UUF"(<2 x double>* %p, <2 x double>* %25, double* %26)
  %p113 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false109:                                         ; preds = %false101
  %return115 = call i64 @"eq@III"(i64 %T5, i64 13)
  %319 = icmp ne i64 %return115, 0
  br i1 %319, label %true116, label %false117

true116:                                          ; preds = %false109
  %_p119 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p119, <2 x double>* %27
  %w120 = load double, double* %w
  store double %w120, double* %28
  call void @"V_JULIA@UUF"(<2 x double>* %p, <2 x double>* %27, double* %28)
  %p121 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false117:                                         ; preds = %false109
  %return123 = call i64 @"eq@III"(i64 %T5, i64 14)
  %320 = icmp ne i64 %return123, 0
  br i1 %320, label %true124, label %false125

true124:                                          ; preds = %false117
  %_p127 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p127, <2 x double>* %29
  %w128 = load double, double* %w
  store double %w128, double* %30
  call void @"V_BENT@UUF"(<2 x double>* %p, <2 x double>* %29, double* %30)
  %p129 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false125:                                         ; preds = %false117
  %return131 = call i64 @"eq@III"(i64 %T5, i64 15)
  %321 = icmp ne i64 %return131, 0
  br i1 %321, label %true132, label %false133

true132:                                          ; preds = %false125
  %_p135 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p135, <2 x double>* %31
  %w136 = load double, double* %w
  store double %w136, double* %32
  %o137 = load <2 x double>, <2 x double>* %o
  %return138 = call double @"getcomp@FUI"(<2 x double> %o137, i64 0)
  store double %return138, double* %33
  %x139 = load <2 x double>, <2 x double>* %x
  %return140 = call double @"getcomp@FUI"(<2 x double> %x139, i64 1)
  store double %return140, double* %34
  %y141 = load <2 x double>, <2 x double>* %y
  %return142 = call double @"getcomp@FUI"(<2 x double> %y141, i64 1)
  store double %return142, double* %35
  %o143 = load <2 x double>, <2 x double>* %o
  %return144 = call double @"getcomp@FUI"(<2 x double> %o143, i64 1)
  store double %return144, double* %36
  call void @"V_WAVES@UUFFFFF"(<2 x double>* %p, <2 x double>* %31, double* %32, double* %33, double* %34, double* %35, double* %36)
  %p145 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false133:                                         ; preds = %false125
  %return147 = call i64 @"eq@III"(i64 %T5, i64 16)
  %322 = icmp ne i64 %return147, 0
  br i1 %322, label %true148, label %false149

true148:                                          ; preds = %false133
  %_p151 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p151, <2 x double>* %37
  %w152 = load double, double* %w
  store double %w152, double* %38
  call void @"V_FISHEYE@UUF"(<2 x double>* %p, <2 x double>* %37, double* %38)
  %p153 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false149:                                         ; preds = %false133
  %return155 = call i64 @"eq@III"(i64 %T5, i64 17)
  %323 = icmp ne i64 %return155, 0
  br i1 %323, label %true156, label %end12

true156:                                          ; preds = %false149
  %_p158 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p158, <2 x double>* %39
  %w159 = load double, double* %w
  store double %w159, double* %40
  %o160 = load <2 x double>, <2 x double>* %o
  %return161 = call double @"getcomp@FUI"(<2 x double> %o160, i64 0)
  store double %return161, double* %41
  %o162 = load <2 x double>, <2 x double>* %o
  %return163 = call double @"getcomp@FUI"(<2 x double> %o162, i64 1)
  store double %return163, double* %42
  call void @"V_POPCORN@UUFFF"(<2 x double>* %p, <2 x double>* %39, double* %40, double* %41, double* %42)
  %p164 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true167:                                          ; preds = %false16
  %_p170 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p170, <2 x double>* %43
  %w171 = load double, double* %w
  store double %w171, double* %44
  call void @"V_EXPONENTIAL@UUF"(<2 x double>* %p, <2 x double>* %43, double* %44)
  %p172 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false168:                                         ; preds = %false16
  %return174 = call i64 @"eq@III"(i64 %T5, i64 19)
  %324 = icmp ne i64 %return174, 0
  br i1 %324, label %true175, label %false176

true175:                                          ; preds = %false168
  %_p178 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p178, <2 x double>* %45
  %w179 = load double, double* %w
  store double %w179, double* %46
  call void @"V_POWER@UUF"(<2 x double>* %p, <2 x double>* %45, double* %46)
  %p180 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false176:                                         ; preds = %false168
  %return182 = call i64 @"eq@III"(i64 %T5, i64 20)
  %325 = icmp ne i64 %return182, 0
  br i1 %325, label %true183, label %false184

true183:                                          ; preds = %false176
  %_p186 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p186, <2 x double>* %47
  %w187 = load double, double* %w
  store double %w187, double* %48
  call void @"V_COSINE@UUF"(<2 x double>* %p, <2 x double>* %47, double* %48)
  %p188 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false184:                                         ; preds = %false176
  %return190 = call i64 @"eq@III"(i64 %T5, i64 21)
  %326 = icmp ne i64 %return190, 0
  br i1 %326, label %true191, label %false192

true191:                                          ; preds = %false184
  %_p194 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p194, <2 x double>* %49
  %w195 = load double, double* %w
  store double %w195, double* %50
  %o196 = load <2 x double>, <2 x double>* %o
  %return197 = call double @"getcomp@FUI"(<2 x double> %o196, i64 0)
  store double %return197, double* %51
  call void @"V_RINGS@UUFF"(<2 x double>* %p, <2 x double>* %49, double* %50, double* %51)
  %p198 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false192:                                         ; preds = %false184
  %return200 = call i64 @"eq@III"(i64 %T5, i64 22)
  %327 = icmp ne i64 %return200, 0
  br i1 %327, label %true201, label %false202

true201:                                          ; preds = %false192
  %_p204 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p204, <2 x double>* %52
  %w205 = load double, double* %w
  store double %w205, double* %53
  %o206 = load <2 x double>, <2 x double>* %o
  %return207 = call double @"getcomp@FUI"(<2 x double> %o206, i64 0)
  store double %return207, double* %54
  call void @"V_FAN@UUFF"(<2 x double>* %p, <2 x double>* %52, double* %53, double* %54)
  %p208 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false202:                                         ; preds = %false192
  %return210 = call i64 @"eq@III"(i64 %T5, i64 23)
  %328 = icmp ne i64 %return210, 0
  br i1 %328, label %true211, label %false212

true211:                                          ; preds = %false202
  %_p214 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p214, <2 x double>* %55
  %w215 = load double, double* %w
  store double %w215, double* %56
  call void @"V_BUBBLE@UUF"(<2 x double>* %p, <2 x double>* %55, double* %56)
  %p216 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false212:                                         ; preds = %false202
  %return218 = call i64 @"eq@III"(i64 %T5, i64 24)
  %329 = icmp ne i64 %return218, 0
  br i1 %329, label %true219, label %false220

true219:                                          ; preds = %false212
  %_p222 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p222, <2 x double>* %57
  %w223 = load double, double* %w
  store double %w223, double* %58
  call void @"V_CYLINDER@UUF"(<2 x double>* %p, <2 x double>* %57, double* %58)
  %p224 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false220:                                         ; preds = %false212
  %return226 = call i64 @"eq@III"(i64 %T5, i64 25)
  %330 = icmp ne i64 %return226, 0
  br i1 %330, label %true227, label %false228

true227:                                          ; preds = %false220
  %_p230 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p230, <2 x double>* %59
  %w231 = load double, double* %w
  store double %w231, double* %60
  call void @"V_EYEFISH@UUF"(<2 x double>* %p, <2 x double>* %59, double* %60)
  %p232 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false228:                                         ; preds = %false220
  %return234 = call i64 @"eq@III"(i64 %T5, i64 26)
  %331 = icmp ne i64 %return234, 0
  br i1 %331, label %true235, label %false236

true235:                                          ; preds = %false228
  %w238 = load double, double* %w
  store double %w238, double* %61
  call void @"V_BLUR@UF"(<2 x double>* %p, double* %61)
  %p239 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false236:                                         ; preds = %false228
  %return241 = call i64 @"eq@III"(i64 %T5, i64 27)
  %332 = icmp ne i64 %return241, 0
  br i1 %332, label %true242, label %false243

true242:                                          ; preds = %false236
  %GMP245 = load %gemPrm, %gemPrm* %GMP
  %curl_c246 = extractvalue %gemPrm %GMP245, 13
  %idx247 = load i64, i64* %idx
  %return248 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %curl_c246, i64 %idx247)
  %_p249 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p249, <2 x double>* %62
  %w250 = load double, double* %w
  store double %w250, double* %63
  %return252 = call double @"getcomp@FUI"(<2 x double> %return248, i64 0)
  store double %return252, double* %64
  %return254 = call double @"getcomp@FUI"(<2 x double> %return248, i64 1)
  store double %return254, double* %65
  call void @"V_CURL@UUFFF"(<2 x double>* %p, <2 x double>* %62, double* %63, double* %64, double* %65)
  %p255 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false243:                                         ; preds = %false236
  %return257 = call i64 @"eq@III"(i64 %T5, i64 28)
  %333 = icmp ne i64 %return257, 0
  br i1 %333, label %true258, label %false259

true258:                                          ; preds = %false243
  %GMP261 = load %gemPrm, %gemPrm* %GMP
  %ngon262 = extractvalue %gemPrm %GMP261, 42
  %idx263 = load i64, i64* %idx
  %return264 = call <4 x double> @"getcomp@P[PI"(<4 x double>* %ngon262, i64 %idx263)
  %_p265 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p265, <2 x double>* %66
  %w266 = load double, double* %w
  store double %w266, double* %67
  %return268 = call double @"getcomp@FPI"(<4 x double> %return264, i64 0)
  store double %return268, double* %68
  %return270 = call double @"getcomp@FPI"(<4 x double> %return264, i64 1)
  store double %return270, double* %69
  %return272 = call double @"getcomp@FPI"(<4 x double> %return264, i64 2)
  store double %return272, double* %70
  %return274 = call double @"getcomp@FPI"(<4 x double> %return264, i64 3)
  store double %return274, double* %71
  call void @"V_NGON@UUFFFFF"(<2 x double>* %p, <2 x double>* %66, double* %67, double* %68, double* %69, double* %70, double* %71)
  %p275 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false259:                                         ; preds = %false243
  %return277 = call i64 @"eq@III"(i64 %T5, i64 29)
  %334 = icmp ne i64 %return277, 0
  br i1 %334, label %true278, label %false279

true278:                                          ; preds = %false259
  %GMP281 = load %gemPrm, %gemPrm* %GMP
  %pdj_w = extractvalue %gemPrm %GMP281, 43
  %idx282 = load i64, i64* %idx
  %return283 = call <4 x double> @"getcomp@P[PI"(<4 x double>* %pdj_w, i64 %idx282)
  %_p284 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p284, <2 x double>* %72
  %w285 = load double, double* %w
  store double %w285, double* %73
  store <4 x double> %return283, <4 x double>* %74
  call void @"V_PDJ@UUFP"(<2 x double>* %p, <2 x double>* %72, double* %73, <4 x double>* %74)
  %p287 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false279:                                         ; preds = %false259
  %return289 = call i64 @"eq@III"(i64 %T5, i64 30)
  %335 = icmp ne i64 %return289, 0
  br i1 %335, label %true290, label %false291

true290:                                          ; preds = %false279
  %GMP293 = load %gemPrm, %gemPrm* %GMP
  %blob294 = extractvalue %gemPrm %GMP293, 6
  %idx295 = load i64, i64* %idx
  %return296 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %blob294, i64 %idx295)
  %_p297 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p297, <2 x double>* %75
  %w298 = load double, double* %w
  store double %w298, double* %76
  %return300 = call double @"getcomp@FVI"(<3 x double> %return296, i64 1)
  store double %return300, double* %77
  %return302 = call double @"getcomp@FVI"(<3 x double> %return296, i64 0)
  store double %return302, double* %78
  %return304 = call double @"getcomp@FVI"(<3 x double> %return296, i64 2)
  store double %return304, double* %79
  call void @"V_BLOB@UUFFFF"(<2 x double>* %p, <2 x double>* %75, double* %76, double* %77, double* %78, double* %79)
  %p305 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false291:                                         ; preds = %false279
  %return307 = call i64 @"eq@III"(i64 %T5, i64 31)
  %336 = icmp ne i64 %return307, 0
  br i1 %336, label %true308, label %false309

true308:                                          ; preds = %false291
  %GMP311 = load %gemPrm, %gemPrm* %GMP
  %julian312 = extractvalue %gemPrm %GMP311, 32
  %idx313 = load i64, i64* %idx
  %return314 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %julian312, i64 %idx313)
  %_p315 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p315, <2 x double>* %80
  %w316 = load double, double* %w
  store double %w316, double* %81
  %return318 = call double @"getcomp@FUI"(<2 x double> %return314, i64 0)
  store double %return318, double* %82
  %return320 = call double @"getcomp@FUI"(<2 x double> %return314, i64 1)
  store double %return320, double* %83
  call void @"V_JULIAN@UUFFF"(<2 x double>* %p, <2 x double>* %80, double* %81, double* %82, double* %83)
  %p321 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false309:                                         ; preds = %false291
  %return323 = call i64 @"eq@III"(i64 %T5, i64 32)
  %337 = icmp ne i64 %return323, 0
  br i1 %337, label %true324, label %false325

true324:                                          ; preds = %false309
  %GMP327 = load %gemPrm, %gemPrm* %GMP
  %juliascope328 = extractvalue %gemPrm %GMP327, 33
  %idx329 = load i64, i64* %idx
  %return330 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %juliascope328, i64 %idx329)
  %_p331 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p331, <2 x double>* %84
  %w332 = load double, double* %w
  store double %w332, double* %85
  %return334 = call double @"getcomp@FUI"(<2 x double> %return330, i64 0)
  store double %return334, double* %86
  %return336 = call double @"getcomp@FUI"(<2 x double> %return330, i64 1)
  store double %return336, double* %87
  call void @"V_JULIASCOPE@UUFFF"(<2 x double>* %p, <2 x double>* %84, double* %85, double* %86, double* %87)
  %p337 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false325:                                         ; preds = %false309
  %return339 = call i64 @"eq@III"(i64 %T5, i64 33)
  %338 = icmp ne i64 %return339, 0
  br i1 %338, label %true340, label %false341

true340:                                          ; preds = %false325
  %w343 = load double, double* %w
  store double %w343, double* %88
  call void @"V_GAUSSIAN@UF"(<2 x double>* %p, double* %88)
  %p344 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false341:                                         ; preds = %false325
  %return346 = call i64 @"eq@III"(i64 %T5, i64 34)
  %339 = icmp ne i64 %return346, 0
  br i1 %339, label %true347, label %end12

true347:                                          ; preds = %false341
  %GMP349 = load %gemPrm, %gemPrm* %GMP
  %fan2350 = extractvalue %gemPrm %GMP349, 15
  %idx351 = load i64, i64* %idx
  %return352 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %fan2350, i64 %idx351)
  %_p353 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p353, <2 x double>* %89
  %w354 = load double, double* %w
  store double %w354, double* %90
  store <2 x double> %return352, <2 x double>* %91
  call void @"V_FAN2@UUFU"(<2 x double>* %p, <2 x double>* %89, double* %90, <2 x double>* %91)
  %p356 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true359:                                          ; preds = %false11
  %return363 = call i64 @"lt@III"(i64 %T5, i64 50)
  %340 = icmp ne i64 %return363, 0
  br i1 %340, label %true364, label %false365

false360:                                         ; preds = %false11
  %return771 = call i64 @"lt@III"(i64 %T5, i64 102)
  %341 = icmp ne i64 %return771, 0
  br i1 %341, label %true772, label %end12

true364:                                          ; preds = %true359
  %return368 = call i64 @"eq@III"(i64 %T5, i64 35)
  %342 = icmp ne i64 %return368, 0
  br i1 %342, label %true369, label %false370

false365:                                         ; preds = %true359
  %return539 = call i64 @"eq@III"(i64 %T5, i64 50)
  %343 = icmp ne i64 %return539, 0
  br i1 %343, label %true540, label %false541

true369:                                          ; preds = %true364
  %GMP372 = load %gemPrm, %gemPrm* %GMP
  %rings2_val = extractvalue %gemPrm %GMP372, 0
  %idx373 = load i64, i64* %idx
  %return374 = call double @"getcomp@F[FI"(double* %rings2_val, i64 %idx373)
  %_p375 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p375, <2 x double>* %92
  %w376 = load double, double* %w
  store double %w376, double* %93
  store double %return374, double* %94
  call void @"V_RINGS2@UUFF"(<2 x double>* %p, <2 x double>* %92, double* %93, double* %94)
  %p378 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false370:                                         ; preds = %true364
  %return380 = call i64 @"eq@III"(i64 %T5, i64 36)
  %344 = icmp ne i64 %return380, 0
  br i1 %344, label %true381, label %false382

true381:                                          ; preds = %false370
  %GMP384 = load %gemPrm, %gemPrm* %GMP
  %rectangles = extractvalue %gemPrm %GMP384, 16
  %idx385 = load i64, i64* %idx
  %return386 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %rectangles, i64 %idx385)
  %_p387 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p387, <2 x double>* %95
  %w388 = load double, double* %w
  store double %w388, double* %96
  store <2 x double> %return386, <2 x double>* %97
  call void @"V_RECTANGLES@UUFU"(<2 x double>* %p, <2 x double>* %95, double* %96, <2 x double>* %97)
  %p390 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false382:                                         ; preds = %false370
  %return392 = call i64 @"eq@III"(i64 %T5, i64 37)
  %345 = icmp ne i64 %return392, 0
  br i1 %345, label %true393, label %false394

true393:                                          ; preds = %false382
  %GMP396 = load %gemPrm, %gemPrm* %GMP
  %radialblur397 = extractvalue %gemPrm %GMP396, 34
  %idx398 = load i64, i64* %idx
  %return399 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %radialblur397, i64 %idx398)
  %_p400 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p400, <2 x double>* %98
  %w401 = load double, double* %w
  store double %w401, double* %99
  %return403 = call double @"getcomp@FUI"(<2 x double> %return399, i64 0)
  store double %return403, double* %100
  %return405 = call double @"getcomp@FUI"(<2 x double> %return399, i64 1)
  store double %return405, double* %101
  call void @"V_RADIALBLUR@UUFFF"(<2 x double>* %p, <2 x double>* %98, double* %99, double* %100, double* %101)
  %p406 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false394:                                         ; preds = %false382
  %return408 = call i64 @"eq@III"(i64 %T5, i64 38)
  %346 = icmp ne i64 %return408, 0
  br i1 %346, label %true409, label %false410

true409:                                          ; preds = %false394
  %GMP412 = load %gemPrm, %gemPrm* %GMP
  %pie413 = extractvalue %gemPrm %GMP412, 7
  %idx414 = load i64, i64* %idx
  %return415 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %pie413, i64 %idx414)
  %w416 = load double, double* %w
  store double %w416, double* %102
  %return418 = call double @"getcomp@FVI"(<3 x double> %return415, i64 0)
  store double %return418, double* %103
  %return420 = call double @"getcomp@FVI"(<3 x double> %return415, i64 1)
  store double %return420, double* %104
  %return422 = call double @"getcomp@FVI"(<3 x double> %return415, i64 2)
  store double %return422, double* %105
  call void @"V_PIE@UFFFF"(<2 x double>* %p, double* %102, double* %103, double* %104, double* %105)
  %p423 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false410:                                         ; preds = %false394
  %return425 = call i64 @"eq@III"(i64 %T5, i64 39)
  %347 = icmp ne i64 %return425, 0
  br i1 %347, label %true426, label %false427

true426:                                          ; preds = %false410
  %w429 = load double, double* %w
  store double %w429, double* %107
  call void @"V_ARCH@UUF"(<2 x double>* %p, <2 x double>* %106, double* %107)
  %p430 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false427:                                         ; preds = %false410
  %return432 = call i64 @"eq@III"(i64 %T5, i64 40)
  %348 = icmp ne i64 %return432, 0
  br i1 %348, label %true433, label %false434

true433:                                          ; preds = %false427
  %_p436 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p436, <2 x double>* %108
  %w437 = load double, double* %w
  store double %w437, double* %109
  call void @"V_TANGENT@UUF"(<2 x double>* %p, <2 x double>* %108, double* %109)
  %p438 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false434:                                         ; preds = %false427
  %return440 = call i64 @"eq@III"(i64 %T5, i64 41)
  %349 = icmp ne i64 %return440, 0
  br i1 %349, label %true441, label %false442

true441:                                          ; preds = %false434
  %w444 = load double, double* %w
  store double %w444, double* %111
  call void @"V_SQUARE@UUF"(<2 x double>* %p, <2 x double>* %110, double* %111)
  %p445 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false442:                                         ; preds = %false434
  %return447 = call i64 @"eq@III"(i64 %T5, i64 42)
  %350 = icmp ne i64 %return447, 0
  br i1 %350, label %true448, label %false449

true448:                                          ; preds = %false442
  %_p451 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p451, <2 x double>* %112
  %w452 = load double, double* %w
  store double %w452, double* %113
  call void @"V_RAYS@UUF"(<2 x double>* %p, <2 x double>* %112, double* %113)
  %p453 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false449:                                         ; preds = %false442
  %return455 = call i64 @"eq@III"(i64 %T5, i64 43)
  %351 = icmp ne i64 %return455, 0
  br i1 %351, label %true456, label %false457

true456:                                          ; preds = %false449
  %_p459 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p459, <2 x double>* %114
  %w460 = load double, double* %w
  store double %w460, double* %115
  call void @"V_BLADE@UUF"(<2 x double>* %p, <2 x double>* %114, double* %115)
  %p461 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false457:                                         ; preds = %false449
  %return463 = call i64 @"eq@III"(i64 %T5, i64 44)
  %352 = icmp ne i64 %return463, 0
  br i1 %352, label %true464, label %false465

true464:                                          ; preds = %false457
  %_p467 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p467, <2 x double>* %116
  %w468 = load double, double* %w
  store double %w468, double* %117
  call void @"V_SECANT2@UUF"(<2 x double>* %p, <2 x double>* %116, double* %117)
  %p469 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false465:                                         ; preds = %false457
  %return471 = call i64 @"eq@III"(i64 %T5, i64 45)
  %353 = icmp ne i64 %return471, 0
  br i1 %353, label %true472, label %false473

true472:                                          ; preds = %false465
  %_p475 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p475, <2 x double>* %118
  %w476 = load double, double* %w
  store double %w476, double* %119
  call void @"V_TWINTRIAN@UUF"(<2 x double>* %p, <2 x double>* %118, double* %119)
  %p477 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false473:                                         ; preds = %false465
  %return479 = call i64 @"eq@III"(i64 %T5, i64 46)
  %354 = icmp ne i64 %return479, 0
  br i1 %354, label %true480, label %false481

true480:                                          ; preds = %false473
  %_p483 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p483, <2 x double>* %120
  %w484 = load double, double* %w
  store double %w484, double* %121
  call void @"V_CROSS@UUF"(<2 x double>* %p, <2 x double>* %120, double* %121)
  %p485 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false481:                                         ; preds = %false473
  %return487 = call i64 @"eq@III"(i64 %T5, i64 47)
  %355 = icmp ne i64 %return487, 0
  br i1 %355, label %true488, label %false489

true488:                                          ; preds = %false481
  %GMP491 = load %gemPrm, %gemPrm* %GMP
  %idx493 = load i64, i64* %idx
  %pc_DISC2 = extractvalue %gemPrm %GMP491, 51
  %return497 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %pc_DISC2, i64 %idx493)
  %_p498 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p498, <2 x double>* %122
  %w499 = load double, double* %w
  store double %w499, double* %123
  store <3 x double> %return497, <3 x double>* %126
  call void @"V_DISC2_L@UUFFFV"(<2 x double>* %p, <2 x double>* %122, double* %123, double* %124, double* %125, <3 x double>* %126)
  %p501 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false489:                                         ; preds = %false481
  %return503 = call i64 @"eq@III"(i64 %T5, i64 48)
  %356 = icmp ne i64 %return503, 0
  br i1 %356, label %true504, label %false505

true504:                                          ; preds = %false489
  %GMP507 = load %gemPrm, %gemPrm* %GMP
  %supershape = extractvalue %gemPrm %GMP507, 8
  %idx508 = load i64, i64* %idx
  %return509 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %supershape, i64 %idx508)
  %supershape_n = extractvalue %gemPrm %GMP507, 9
  %return512 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %supershape_n, i64 %idx508)
  %_p513 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p513, <2 x double>* %127
  %w514 = load double, double* %w
  store double %w514, double* %128
  %return516 = call double @"getcomp@FVI"(<3 x double> %return509, i64 1)
  store double %return516, double* %129
  %return518 = call double @"getcomp@FVI"(<3 x double> %return509, i64 0)
  store double %return518, double* %130
  %return520 = call double @"getcomp@FVI"(<3 x double> %return509, i64 2)
  store double %return520, double* %131
  store <3 x double> %return512, <3 x double>* %132
  call void @"V_SUPERSHAPE@UUFFFFV"(<2 x double>* %p, <2 x double>* %127, double* %128, double* %129, double* %130, double* %131, <3 x double>* %132)
  %p522 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false505:                                         ; preds = %false489
  %return524 = call i64 @"eq@III"(i64 %T5, i64 49)
  %357 = icmp ne i64 %return524, 0
  br i1 %357, label %true525, label %end12

true525:                                          ; preds = %false505
  %GMP527 = load %gemPrm, %gemPrm* %GMP
  %flower528 = extractvalue %gemPrm %GMP527, 36
  %idx529 = load i64, i64* %idx
  %return530 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %flower528, i64 %idx529)
  %_p531 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p531, <2 x double>* %133
  %w532 = load double, double* %w
  store double %w532, double* %134
  %return534 = call double @"getcomp@FUI"(<2 x double> %return530, i64 0)
  store double %return534, double* %135
  %return536 = call double @"getcomp@FUI"(<2 x double> %return530, i64 1)
  store double %return536, double* %136
  call void @"V_FLOWER@UUFFF"(<2 x double>* %p, <2 x double>* %133, double* %134, double* %135, double* %136)
  %p537 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true540:                                          ; preds = %false365
  %GMP543 = load %gemPrm, %gemPrm* %GMP
  %conic544 = extractvalue %gemPrm %GMP543, 37
  %idx545 = load i64, i64* %idx
  %return546 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %conic544, i64 %idx545)
  %_p547 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p547, <2 x double>* %137
  %w548 = load double, double* %w
  store double %w548, double* %138
  %return550 = call double @"getcomp@FUI"(<2 x double> %return546, i64 0)
  store double %return550, double* %139
  %return552 = call double @"getcomp@FUI"(<2 x double> %return546, i64 1)
  store double %return552, double* %140
  call void @"V_CONIC@UUFFF"(<2 x double>* %p, <2 x double>* %137, double* %138, double* %139, double* %140)
  %p553 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false541:                                         ; preds = %false365
  %return555 = call i64 @"eq@III"(i64 %T5, i64 51)
  %358 = icmp ne i64 %return555, 0
  br i1 %358, label %true556, label %false557

true556:                                          ; preds = %false541
  %GMP559 = load %gemPrm, %gemPrm* %GMP
  %parabola560 = extractvalue %gemPrm %GMP559, 14
  %idx561 = load i64, i64* %idx
  %return562 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %parabola560, i64 %idx561)
  %_p563 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p563, <2 x double>* %141
  %w564 = load double, double* %w
  store double %w564, double* %142
  %return566 = call double @"getcomp@FUI"(<2 x double> %return562, i64 0)
  store double %return566, double* %143
  %return568 = call double @"getcomp@FUI"(<2 x double> %return562, i64 1)
  store double %return568, double* %144
  call void @"V_PARABOLA@UUFFF"(<2 x double>* %p, <2 x double>* %141, double* %142, double* %143, double* %144)
  %p569 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false557:                                         ; preds = %false541
  %return571 = call i64 @"eq@III"(i64 %T5, i64 52)
  %359 = icmp ne i64 %return571, 0
  br i1 %359, label %true572, label %false573

true572:                                          ; preds = %false557
  %GMP575 = load %gemPrm, %gemPrm* %GMP
  %bent2576 = extractvalue %gemPrm %GMP575, 17
  %idx577 = load i64, i64* %idx
  %return578 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %bent2576, i64 %idx577)
  %_p579 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p579, <2 x double>* %145
  %w580 = load double, double* %w
  store double %w580, double* %146
  store <2 x double> %return578, <2 x double>* %147
  call void @"V_BENT2@UUFU"(<2 x double>* %p, <2 x double>* %145, double* %146, <2 x double>* %147)
  %p582 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false573:                                         ; preds = %false557
  %return584 = call i64 @"eq@III"(i64 %T5, i64 53)
  %360 = icmp ne i64 %return584, 0
  br i1 %360, label %true585, label %false586

true585:                                          ; preds = %false573
  %GMP588 = load %gemPrm, %gemPrm* %GMP
  %bipolar_shift = extractvalue %gemPrm %GMP588, 1
  %idx589 = load i64, i64* %idx
  %return590 = call double @"getcomp@F[FI"(double* %bipolar_shift, i64 %idx589)
  %_p591 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p591, <2 x double>* %148
  %w592 = load double, double* %w
  store double %w592, double* %149
  store double %return590, double* %150
  call void @"V_BIPOLAR@UUFF"(<2 x double>* %p, <2 x double>* %148, double* %149, double* %150)
  %p594 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false586:                                         ; preds = %false573
  %return596 = call i64 @"eq@III"(i64 %T5, i64 54)
  %361 = icmp ne i64 %return596, 0
  br i1 %361, label %true597, label %false598

true597:                                          ; preds = %false586
  %_p600 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p600, <2 x double>* %151
  %w601 = load double, double* %w
  store double %w601, double* %152
  call void @"V_BOARDERS@UUF"(<2 x double>* %p, <2 x double>* %151, double* %152)
  %p602 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false598:                                         ; preds = %false586
  %return604 = call i64 @"eq@III"(i64 %T5, i64 55)
  %362 = icmp ne i64 %return604, 0
  br i1 %362, label %true605, label %false606

true605:                                          ; preds = %false598
  %_p608 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p608, <2 x double>* %153
  %w609 = load double, double* %w
  store double %w609, double* %154
  call void @"V_BUTTERFLY@UUF"(<2 x double>* %p, <2 x double>* %153, double* %154)
  %p610 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false606:                                         ; preds = %false598
  %return612 = call i64 @"eq@III"(i64 %T5, i64 56)
  %363 = icmp ne i64 %return612, 0
  br i1 %363, label %true613, label %false614

true613:                                          ; preds = %false606
  %GMP616 = load %gemPrm, %gemPrm* %GMP
  %cell_size = extractvalue %gemPrm %GMP616, 2
  %idx617 = load i64, i64* %idx
  %return618 = call double @"getcomp@F[FI"(double* %cell_size, i64 %idx617)
  %_p619 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p619, <2 x double>* %155
  store double %return618, double* %157
  call void @"V_CELL@UUFF"(<2 x double>* %p, <2 x double>* %155, double* %156, double* %157)
  %p621 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false614:                                         ; preds = %false606
  %return623 = call i64 @"eq@III"(i64 %T5, i64 57)
  %364 = icmp ne i64 %return623, 0
  br i1 %364, label %true624, label %false625

true624:                                          ; preds = %false614
  %GMP627 = load %gemPrm, %gemPrm* %GMP
  %cpow628 = extractvalue %gemPrm %GMP627, 10
  %idx629 = load i64, i64* %idx
  %return630 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %cpow628, i64 %idx629)
  %_p631 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p631, <2 x double>* %158
  %w632 = load double, double* %w
  store double %w632, double* %159
  %return634 = call double @"getcomp@FVI"(<3 x double> %return630, i64 0)
  store double %return634, double* %160
  %return636 = call double @"getcomp@FVI"(<3 x double> %return630, i64 1)
  store double %return636, double* %161
  %return638 = call double @"getcomp@FVI"(<3 x double> %return630, i64 2)
  store double %return638, double* %162
  call void @"V_CPOW@UUFFFF"(<2 x double>* %p, <2 x double>* %158, double* %159, double* %160, double* %161, double* %162)
  %p639 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false625:                                         ; preds = %false614
  %return641 = call i64 @"eq@III"(i64 %T5, i64 58)
  %365 = icmp ne i64 %return641, 0
  br i1 %365, label %true642, label %false643

true642:                                          ; preds = %false625
  %_p645 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p645, <2 x double>* %163
  %w646 = load double, double* %w
  store double %w646, double* %164
  call void @"V_EDISC@UUF"(<2 x double>* %p, <2 x double>* %163, double* %164)
  %p647 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false643:                                         ; preds = %false625
  %return649 = call i64 @"eq@III"(i64 %T5, i64 59)
  %366 = icmp ne i64 %return649, 0
  br i1 %366, label %true650, label %false651

true650:                                          ; preds = %false643
  %_p653 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p653, <2 x double>* %165
  %w654 = load double, double* %w
  store double %w654, double* %166
  call void @"V_ELLIPTIC@UUF"(<2 x double>* %p, <2 x double>* %165, double* %166)
  %p655 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false651:                                         ; preds = %false643
  %return657 = call i64 @"eq@III"(i64 %T5, i64 60)
  %367 = icmp ne i64 %return657, 0
  br i1 %367, label %true658, label %false659

true658:                                          ; preds = %false651
  %_p661 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p661, <2 x double>* %167
  %w662 = load double, double* %w
  store double %w662, double* %168
  call void @"V_NOISE@UUF"(<2 x double>* %p, <2 x double>* %167, double* %168)
  %p663 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false659:                                         ; preds = %false651
  %return665 = call i64 @"eq@III"(i64 %T5, i64 61)
  %368 = icmp ne i64 %return665, 0
  br i1 %368, label %true666, label %false667

true666:                                          ; preds = %false659
  %GMP669 = load %gemPrm, %gemPrm* %GMP
  %escher_beta = extractvalue %gemPrm %GMP669, 3
  %idx670 = load i64, i64* %idx
  %return671 = call double @"getcomp@F[FI"(double* %escher_beta, i64 %idx670)
  %_p672 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p672, <2 x double>* %169
  %w673 = load double, double* %w
  store double %w673, double* %170
  store double %return671, double* %171
  call void @"V_ESCHER@UUFF"(<2 x double>* %p, <2 x double>* %169, double* %170, double* %171)
  %p675 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false667:                                         ; preds = %false659
  %return677 = call i64 @"eq@III"(i64 %T5, i64 62)
  %369 = icmp ne i64 %return677, 0
  br i1 %369, label %true678, label %false679

true678:                                          ; preds = %false667
  %_p681 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p681, <2 x double>* %172
  %w682 = load double, double* %w
  store double %w682, double* %173
  call void @"V_FOCI@UUF"(<2 x double>* %p, <2 x double>* %172, double* %173)
  %p683 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false679:                                         ; preds = %false667
  %return685 = call i64 @"eq@III"(i64 %T5, i64 63)
  %370 = icmp ne i64 %return685, 0
  br i1 %370, label %true686, label %false687

true686:                                          ; preds = %false679
  %GMP689 = load %gemPrm, %gemPrm* %GMP
  %lazysusan690 = extractvalue %gemPrm %GMP689, 11
  %idx691 = load i64, i64* %idx
  %return692 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %lazysusan690, i64 %idx691)
  %lazysusanxyz694 = extractvalue %gemPrm %GMP689, 18
  %return696 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %lazysusanxyz694, i64 %idx691)
  %_p697 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p697, <2 x double>* %174
  %w698 = load double, double* %w
  store double %w698, double* %175
  %return700 = call double @"getcomp@FVI"(<3 x double> %return692, i64 0)
  store double %return700, double* %176
  %return702 = call double @"getcomp@FVI"(<3 x double> %return692, i64 1)
  store double %return702, double* %177
  %return704 = call double @"getcomp@FVI"(<3 x double> %return692, i64 2)
  store double %return704, double* %178
  store <2 x double> %return696, <2 x double>* %179
  call void @"V_LAZYSUSAN@UUFFFFU"(<2 x double>* %p, <2 x double>* %174, double* %175, double* %176, double* %177, double* %178, <2 x double>* %179)
  %p706 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false687:                                         ; preds = %false679
  %return708 = call i64 @"eq@III"(i64 %T5, i64 64)
  %371 = icmp ne i64 %return708, 0
  br i1 %371, label %true709, label %false710

true709:                                          ; preds = %false687
  %_p712 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p712, <2 x double>* %180
  %w713 = load double, double* %w
  store double %w713, double* %181
  call void @"V_LOONIE@UUF"(<2 x double>* %p, <2 x double>* %180, double* %181)
  %p714 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false710:                                         ; preds = %false687
  %return716 = call i64 @"eq@III"(i64 %T5, i64 66)
  %372 = icmp ne i64 %return716, 0
  br i1 %372, label %true717, label %false718

true717:                                          ; preds = %false710
  %GMP720 = load %gemPrm, %gemPrm* %GMP
  %modulus = extractvalue %gemPrm %GMP720, 19
  %idx721 = load i64, i64* %idx
  %return722 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %modulus, i64 %idx721)
  %_p723 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p723, <2 x double>* %182
  %w724 = load double, double* %w
  store double %w724, double* %183
  store <2 x double> %return722, <2 x double>* %184
  call void @"V_MODULUS@UUFU"(<2 x double>* %p, <2 x double>* %182, double* %183, <2 x double>* %184)
  %p726 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false718:                                         ; preds = %false710
  %return728 = call i64 @"eq@III"(i64 %T5, i64 67)
  %373 = icmp ne i64 %return728, 0
  br i1 %373, label %true729, label %false730

true729:                                          ; preds = %false718
  %GMP732 = load %gemPrm, %gemPrm* %GMP
  %oscope733 = extractvalue %gemPrm %GMP732, 44
  %idx734 = load i64, i64* %idx
  %return735 = call <4 x double> @"getcomp@P[PI"(<4 x double>* %oscope733, i64 %idx734)
  %_p736 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p736, <2 x double>* %185
  %w737 = load double, double* %w
  store double %w737, double* %186
  %return739 = call double @"getcomp@FPI"(<4 x double> %return735, i64 0)
  store double %return739, double* %187
  %return741 = call double @"getcomp@FPI"(<4 x double> %return735, i64 1)
  store double %return741, double* %188
  %return743 = call double @"getcomp@FPI"(<4 x double> %return735, i64 2)
  store double %return743, double* %189
  %return745 = call double @"getcomp@FPI"(<4 x double> %return735, i64 3)
  store double %return745, double* %190
  call void @"V_OSCOPE@UUFFFFF"(<2 x double>* %p, <2 x double>* %185, double* %186, double* %187, double* %188, double* %189, double* %190)
  %p746 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false730:                                         ; preds = %false718
  %return748 = call i64 @"eq@III"(i64 %T5, i64 68)
  %374 = icmp ne i64 %return748, 0
  br i1 %374, label %true749, label %false750

true749:                                          ; preds = %false730
  %_p752 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p752, <2 x double>* %191
  %w753 = load double, double* %w
  store double %w753, double* %192
  call void @"V_POLAR2@UUF"(<2 x double>* %p, <2 x double>* %191, double* %192)
  %p754 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false750:                                         ; preds = %false730
  %return756 = call i64 @"eq@III"(i64 %T5, i64 69)
  %375 = icmp ne i64 %return756, 0
  br i1 %375, label %true757, label %end12

true757:                                          ; preds = %false750
  %GMP759 = load %gemPrm, %gemPrm* %GMP
  %popcorn2_c = extractvalue %gemPrm %GMP759, 4
  %idx760 = load i64, i64* %idx
  %return761 = call double @"getcomp@F[FI"(double* %popcorn2_c, i64 %idx760)
  %popcorn2 = extractvalue %gemPrm %GMP759, 20
  %return764 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %popcorn2, i64 %idx760)
  %_p765 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p765, <2 x double>* %193
  %w766 = load double, double* %w
  store double %w766, double* %194
  store double %return761, double* %195
  store <2 x double> %return764, <2 x double>* %196
  call void @"V_POPCORN2@UUFFU"(<2 x double>* %p, <2 x double>* %193, double* %194, double* %195, <2 x double>* %196)
  %p769 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true772:                                          ; preds = %false360
  %return775 = call i64 @"lt@III"(i64 %T5, i64 86)
  %376 = icmp ne i64 %return775, 0
  br i1 %376, label %true776, label %false777

true776:                                          ; preds = %true772
  %return780 = call i64 @"eq@III"(i64 %T5, i64 70)
  %377 = icmp ne i64 %return780, 0
  br i1 %377, label %true781, label %false782

false777:                                         ; preds = %true772
  %return985 = call i64 @"eq@III"(i64 %T5, i64 86)
  %378 = icmp ne i64 %return985, 0
  br i1 %378, label %true986, label %false987

true781:                                          ; preds = %true776
  %_p784 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p784, <2 x double>* %197
  %w785 = load double, double* %w
  store double %w785, double* %198
  call void @"V_SCRY@UUF"(<2 x double>* %p, <2 x double>* %197, double* %198)
  %p786 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false782:                                         ; preds = %true776
  %return788 = call i64 @"eq@III"(i64 %T5, i64 71)
  %379 = icmp ne i64 %return788, 0
  br i1 %379, label %true789, label %false790

true789:                                          ; preds = %false782
  %GMP792 = load %gemPrm, %gemPrm* %GMP
  %separation = extractvalue %gemPrm %GMP792, 21
  %idx793 = load i64, i64* %idx
  %return794 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %separation, i64 %idx793)
  %separation_inside = extractvalue %gemPrm %GMP792, 22
  %return797 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %separation_inside, i64 %idx793)
  %_p798 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p798, <2 x double>* %199
  %w799 = load double, double* %w
  store double %w799, double* %200
  store <2 x double> %return794, <2 x double>* %201
  store <2 x double> %return797, <2 x double>* %202
  call void @"V_SEPARATION@UUFUU"(<2 x double>* %p, <2 x double>* %199, double* %200, <2 x double>* %201, <2 x double>* %202)
  %p802 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false790:                                         ; preds = %false782
  %return804 = call i64 @"eq@III"(i64 %T5, i64 72)
  %380 = icmp ne i64 %return804, 0
  br i1 %380, label %true805, label %false806

true805:                                          ; preds = %false790
  %GMP808 = load %gemPrm, %gemPrm* %GMP
  %split809 = extractvalue %gemPrm %GMP808, 23
  %idx810 = load i64, i64* %idx
  %return811 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %split809, i64 %idx810)
  %_p812 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p812, <2 x double>* %203
  %w813 = load double, double* %w
  store double %w813, double* %204
  store <2 x double> %return811, <2 x double>* %205
  call void @"V_SPLIT@UUFU"(<2 x double>* %p, <2 x double>* %203, double* %204, <2 x double>* %205)
  %p815 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false806:                                         ; preds = %false790
  %return817 = call i64 @"eq@III"(i64 %T5, i64 73)
  %381 = icmp ne i64 %return817, 0
  br i1 %381, label %true818, label %false819

true818:                                          ; preds = %false806
  %GMP821 = load %gemPrm, %gemPrm* %GMP
  %splits822 = extractvalue %gemPrm %GMP821, 24
  %idx823 = load i64, i64* %idx
  %return824 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %splits822, i64 %idx823)
  %_p825 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p825, <2 x double>* %206
  %w826 = load double, double* %w
  store double %w826, double* %207
  store <2 x double> %return824, <2 x double>* %208
  call void @"V_SPLITS@UUFU"(<2 x double>* %p, <2 x double>* %206, double* %207, <2 x double>* %208)
  %p828 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false819:                                         ; preds = %false806
  %return830 = call i64 @"eq@III"(i64 %T5, i64 74)
  %382 = icmp ne i64 %return830, 0
  br i1 %382, label %true831, label %false832

true831:                                          ; preds = %false819
  %GMP834 = load %gemPrm, %gemPrm* %GMP
  %stripes835 = extractvalue %gemPrm %GMP834, 38
  %idx836 = load i64, i64* %idx
  %return837 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %stripes835, i64 %idx836)
  %_p838 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p838, <2 x double>* %209
  %w839 = load double, double* %w
  store double %w839, double* %210
  %return841 = call double @"getcomp@FUI"(<2 x double> %return837, i64 0)
  store double %return841, double* %211
  %return843 = call double @"getcomp@FUI"(<2 x double> %return837, i64 1)
  store double %return843, double* %212
  call void @"V_STRIPES@UUFFF"(<2 x double>* %p, <2 x double>* %209, double* %210, double* %211, double* %212)
  %p844 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false832:                                         ; preds = %false819
  %return846 = call i64 @"eq@III"(i64 %T5, i64 75)
  %383 = icmp ne i64 %return846, 0
  br i1 %383, label %true847, label %false848

true847:                                          ; preds = %false832
  %GMP850 = load %gemPrm, %gemPrm* %GMP
  %wedge851 = extractvalue %gemPrm %GMP850, 45
  %idx852 = load i64, i64* %idx
  %return853 = call <4 x double> @"getcomp@P[PI"(<4 x double>* %wedge851, i64 %idx852)
  %_p854 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p854, <2 x double>* %213
  %w855 = load double, double* %w
  store double %w855, double* %214
  %return857 = call double @"getcomp@FPI"(<4 x double> %return853, i64 0)
  store double %return857, double* %215
  %return859 = call double @"getcomp@FPI"(<4 x double> %return853, i64 1)
  store double %return859, double* %216
  %return861 = call double @"getcomp@FPI"(<4 x double> %return853, i64 2)
  store double %return861, double* %217
  %return863 = call double @"getcomp@FPI"(<4 x double> %return853, i64 3)
  store double %return863, double* %218
  call void @"V_WEDGE@UUFFFFF"(<2 x double>* %p, <2 x double>* %213, double* %214, double* %215, double* %216, double* %217, double* %218)
  %p864 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false848:                                         ; preds = %false832
  %return866 = call i64 @"eq@III"(i64 %T5, i64 76)
  %384 = icmp ne i64 %return866, 0
  br i1 %384, label %true867, label %false868

true867:                                          ; preds = %false848
  %GMP870 = load %gemPrm, %gemPrm* %GMP
  %wedgejulia871 = extractvalue %gemPrm %GMP870, 46
  %idx872 = load i64, i64* %idx
  %return873 = call <4 x double> @"getcomp@P[PI"(<4 x double>* %wedgejulia871, i64 %idx872)
  %_p874 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p874, <2 x double>* %219
  %w875 = load double, double* %w
  store double %w875, double* %220
  %return877 = call double @"getcomp@FPI"(<4 x double> %return873, i64 0)
  store double %return877, double* %221
  %return879 = call double @"getcomp@FPI"(<4 x double> %return873, i64 1)
  store double %return879, double* %222
  %return881 = call double @"getcomp@FPI"(<4 x double> %return873, i64 2)
  store double %return881, double* %223
  %return883 = call double @"getcomp@FPI"(<4 x double> %return873, i64 3)
  store double %return883, double* %224
  call void @"V_WEDGEJULIA@UUFFFFF"(<2 x double>* %p, <2 x double>* %219, double* %220, double* %221, double* %222, double* %223, double* %224)
  %p884 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false868:                                         ; preds = %false848
  %return886 = call i64 @"eq@III"(i64 %T5, i64 77)
  %385 = icmp ne i64 %return886, 0
  br i1 %385, label %true887, label %false888

true887:                                          ; preds = %false868
  %GMP890 = load %gemPrm, %gemPrm* %GMP
  %wedgesph891 = extractvalue %gemPrm %GMP890, 47
  %idx892 = load i64, i64* %idx
  %return893 = call <4 x double> @"getcomp@P[PI"(<4 x double>* %wedgesph891, i64 %idx892)
  %_p894 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p894, <2 x double>* %225
  %w895 = load double, double* %w
  store double %w895, double* %226
  %return897 = call double @"getcomp@FPI"(<4 x double> %return893, i64 0)
  store double %return897, double* %227
  %return899 = call double @"getcomp@FPI"(<4 x double> %return893, i64 1)
  store double %return899, double* %228
  %return901 = call double @"getcomp@FPI"(<4 x double> %return893, i64 2)
  store double %return901, double* %229
  %return903 = call double @"getcomp@FPI"(<4 x double> %return893, i64 3)
  store double %return903, double* %230
  call void @"V_WEDGESPH@UUFFFFF"(<2 x double>* %p, <2 x double>* %225, double* %226, double* %227, double* %228, double* %229, double* %230)
  %p904 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false888:                                         ; preds = %false868
  %return906 = call i64 @"eq@III"(i64 %T5, i64 78)
  %386 = icmp ne i64 %return906, 0
  br i1 %386, label %true907, label %false908

true907:                                          ; preds = %false888
  %GMP910 = load %gemPrm, %gemPrm* %GMP
  %whorl911 = extractvalue %gemPrm %GMP910, 39
  %idx912 = load i64, i64* %idx
  %return913 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %whorl911, i64 %idx912)
  %_p914 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p914, <2 x double>* %231
  %w915 = load double, double* %w
  store double %w915, double* %232
  %return917 = call double @"getcomp@FUI"(<2 x double> %return913, i64 0)
  store double %return917, double* %233
  %return919 = call double @"getcomp@FUI"(<2 x double> %return913, i64 1)
  store double %return919, double* %234
  call void @"V_WHORL@UUFFF"(<2 x double>* %p, <2 x double>* %231, double* %232, double* %233, double* %234)
  %p920 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false908:                                         ; preds = %false888
  %return922 = call i64 @"eq@III"(i64 %T5, i64 79)
  %387 = icmp ne i64 %return922, 0
  br i1 %387, label %true923, label %false924

true923:                                          ; preds = %false908
  %GMP926 = load %gemPrm, %gemPrm* %GMP
  %waves2_scale = extractvalue %gemPrm %GMP926, 25
  %idx927 = load i64, i64* %idx
  %return928 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %waves2_scale, i64 %idx927)
  %waves2_freq = extractvalue %gemPrm %GMP926, 26
  %return931 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %waves2_freq, i64 %idx927)
  %_p932 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p932, <2 x double>* %235
  %w933 = load double, double* %w
  store double %w933, double* %236
  store <2 x double> %return928, <2 x double>* %237
  store <2 x double> %return931, <2 x double>* %238
  call void @"V_WAVES2@UUFUU"(<2 x double>* %p, <2 x double>* %235, double* %236, <2 x double>* %237, <2 x double>* %238)
  %p936 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false924:                                         ; preds = %false908
  %return938 = call i64 @"eq@III"(i64 %T5, i64 80)
  %388 = icmp ne i64 %return938, 0
  br i1 %388, label %true939, label %false940

true939:                                          ; preds = %false924
  %_p942 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p942, <2 x double>* %239
  %w943 = load double, double* %w
  store double %w943, double* %240
  call void @"V_EXP@UUF"(<2 x double>* %p, <2 x double>* %239, double* %240)
  %p944 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false940:                                         ; preds = %false924
  %return946 = call i64 @"eq@III"(i64 %T5, i64 81)
  %389 = icmp ne i64 %return946, 0
  br i1 %389, label %true947, label %false948

true947:                                          ; preds = %false940
  %_p950 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p950, <2 x double>* %241
  %w951 = load double, double* %w
  store double %w951, double* %242
  call void @"V_LOG@UUF"(<2 x double>* %p, <2 x double>* %241, double* %242)
  %p952 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false948:                                         ; preds = %false940
  %return954 = call i64 @"eq@III"(i64 %T5, i64 82)
  %390 = icmp ne i64 %return954, 0
  br i1 %390, label %true955, label %false956

true955:                                          ; preds = %false948
  %_p958 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p958, <2 x double>* %243
  %w959 = load double, double* %w
  store double %w959, double* %244
  call void @"V_SIN@UUF"(<2 x double>* %p, <2 x double>* %243, double* %244)
  %p960 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false956:                                         ; preds = %false948
  %return962 = call i64 @"eq@III"(i64 %T5, i64 83)
  %391 = icmp ne i64 %return962, 0
  br i1 %391, label %true963, label %false964

true963:                                          ; preds = %false956
  %_p966 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p966, <2 x double>* %245
  %w967 = load double, double* %w
  store double %w967, double* %246
  call void @"V_COS@UUF"(<2 x double>* %p, <2 x double>* %245, double* %246)
  %p968 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false964:                                         ; preds = %false956
  %return970 = call i64 @"eq@III"(i64 %T5, i64 84)
  %392 = icmp ne i64 %return970, 0
  br i1 %392, label %true971, label %false972

true971:                                          ; preds = %false964
  %_p974 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p974, <2 x double>* %247
  %w975 = load double, double* %w
  store double %w975, double* %248
  call void @"V_TAN@UUF"(<2 x double>* %p, <2 x double>* %247, double* %248)
  %p976 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false972:                                         ; preds = %false964
  %return978 = call i64 @"eq@III"(i64 %T5, i64 85)
  %393 = icmp ne i64 %return978, 0
  br i1 %393, label %true979, label %end12

true979:                                          ; preds = %false972
  %_p981 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p981, <2 x double>* %249
  %w982 = load double, double* %w
  store double %w982, double* %250
  call void @"V_SEC@UUF"(<2 x double>* %p, <2 x double>* %249, double* %250)
  %p983 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true986:                                          ; preds = %false777
  %_p989 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p989, <2 x double>* %251
  %w990 = load double, double* %w
  store double %w990, double* %252
  call void @"V_CSC@UUF"(<2 x double>* %p, <2 x double>* %251, double* %252)
  %p991 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false987:                                         ; preds = %false777
  %return993 = call i64 @"eq@III"(i64 %T5, i64 87)
  %394 = icmp ne i64 %return993, 0
  br i1 %394, label %true994, label %false995

true994:                                          ; preds = %false987
  %_p997 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p997, <2 x double>* %253
  %w998 = load double, double* %w
  store double %w998, double* %254
  call void @"V_COT@UUF"(<2 x double>* %p, <2 x double>* %253, double* %254)
  %p999 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false995:                                         ; preds = %false987
  %return1001 = call i64 @"eq@III"(i64 %T5, i64 88)
  %395 = icmp ne i64 %return1001, 0
  br i1 %395, label %true1002, label %false1003

true1002:                                         ; preds = %false995
  %_p1005 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1005, <2 x double>* %255
  %w1006 = load double, double* %w
  store double %w1006, double* %256
  call void @"V_SINH@UUF"(<2 x double>* %p, <2 x double>* %255, double* %256)
  %p1007 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1003:                                        ; preds = %false995
  %return1009 = call i64 @"eq@III"(i64 %T5, i64 89)
  %396 = icmp ne i64 %return1009, 0
  br i1 %396, label %true1010, label %false1011

true1010:                                         ; preds = %false1003
  %_p1013 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1013, <2 x double>* %257
  %w1014 = load double, double* %w
  store double %w1014, double* %258
  call void @"V_COSH@UUF"(<2 x double>* %p, <2 x double>* %257, double* %258)
  %p1015 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1011:                                        ; preds = %false1003
  %return1017 = call i64 @"eq@III"(i64 %T5, i64 90)
  %397 = icmp ne i64 %return1017, 0
  br i1 %397, label %true1018, label %false1019

true1018:                                         ; preds = %false1011
  %_p1021 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1021, <2 x double>* %259
  %w1022 = load double, double* %w
  store double %w1022, double* %260
  call void @"V_TANH@UUF"(<2 x double>* %p, <2 x double>* %259, double* %260)
  %p1023 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1019:                                        ; preds = %false1011
  %return1025 = call i64 @"eq@III"(i64 %T5, i64 91)
  %398 = icmp ne i64 %return1025, 0
  br i1 %398, label %true1026, label %false1027

true1026:                                         ; preds = %false1019
  %_p1029 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1029, <2 x double>* %261
  %w1030 = load double, double* %w
  store double %w1030, double* %262
  call void @"V_SECH@UUF"(<2 x double>* %p, <2 x double>* %261, double* %262)
  %p1031 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1027:                                        ; preds = %false1019
  %return1033 = call i64 @"eq@III"(i64 %T5, i64 92)
  %399 = icmp ne i64 %return1033, 0
  br i1 %399, label %true1034, label %false1035

true1034:                                         ; preds = %false1027
  %_p1037 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1037, <2 x double>* %263
  %w1038 = load double, double* %w
  store double %w1038, double* %264
  call void @"V_CSCH@UUF"(<2 x double>* %p, <2 x double>* %263, double* %264)
  %p1039 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1035:                                        ; preds = %false1027
  %return1041 = call i64 @"eq@III"(i64 %T5, i64 93)
  %400 = icmp ne i64 %return1041, 0
  br i1 %400, label %true1042, label %false1043

true1042:                                         ; preds = %false1035
  %_p1045 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1045, <2 x double>* %265
  %w1046 = load double, double* %w
  store double %w1046, double* %266
  call void @"V_COTH@UUF"(<2 x double>* %p, <2 x double>* %265, double* %266)
  %p1047 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1043:                                        ; preds = %false1035
  %return1049 = call i64 @"eq@III"(i64 %T5, i64 94)
  %401 = icmp ne i64 %return1049, 0
  br i1 %401, label %true1050, label %false1051

true1050:                                         ; preds = %false1043
  %GMP1053 = load %gemPrm, %gemPrm* %GMP
  %auger1054 = extractvalue %gemPrm %GMP1053, 48
  %idx1055 = load i64, i64* %idx
  %return1056 = call <4 x double> @"getcomp@P[PI"(<4 x double>* %auger1054, i64 %idx1055)
  %_p1057 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1057, <2 x double>* %267
  %w1058 = load double, double* %w
  store double %w1058, double* %268
  %return1060 = call double @"getcomp@FPI"(<4 x double> %return1056, i64 0)
  store double %return1060, double* %269
  %return1062 = call double @"getcomp@FPI"(<4 x double> %return1056, i64 1)
  store double %return1062, double* %270
  %return1064 = call double @"getcomp@FPI"(<4 x double> %return1056, i64 2)
  store double %return1064, double* %271
  %return1066 = call double @"getcomp@FPI"(<4 x double> %return1056, i64 3)
  store double %return1066, double* %272
  call void @"V_AUGER@UUFFFFF"(<2 x double>* %p, <2 x double>* %267, double* %268, double* %269, double* %270, double* %271, double* %272)
  %p1067 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1051:                                        ; preds = %false1043
  %return1069 = call i64 @"eq@III"(i64 %T5, i64 95)
  %402 = icmp ne i64 %return1069, 0
  br i1 %402, label %true1070, label %false1071

true1070:                                         ; preds = %false1051
  %GMP1073 = load %gemPrm, %gemPrm* %GMP
  %flux_spread = extractvalue %gemPrm %GMP1073, 5
  %idx1074 = load i64, i64* %idx
  %return1075 = call double @"getcomp@F[FI"(double* %flux_spread, i64 %idx1074)
  %_p1076 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1076, <2 x double>* %273
  %w1077 = load double, double* %w
  store double %w1077, double* %274
  store double %return1075, double* %275
  call void @"V_FLUX@UUFF"(<2 x double>* %p, <2 x double>* %273, double* %274, double* %275)
  %p1079 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1071:                                        ; preds = %false1051
  %return1081 = call i64 @"eq@III"(i64 %T5, i64 96)
  %403 = icmp ne i64 %return1081, 0
  br i1 %403, label %true1082, label %false1083

true1082:                                         ; preds = %false1071
  %GMP1085 = load %gemPrm, %gemPrm* %GMP
  %mobius_re = extractvalue %gemPrm %GMP1085, 49
  %idx1086 = load i64, i64* %idx
  %return1087 = call <4 x double> @"getcomp@P[PI"(<4 x double>* %mobius_re, i64 %idx1086)
  %mobius_im = extractvalue %gemPrm %GMP1085, 50
  %return1090 = call <4 x double> @"getcomp@P[PI"(<4 x double>* %mobius_im, i64 %idx1086)
  %_p1091 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1091, <2 x double>* %276
  %w1092 = load double, double* %w
  store double %w1092, double* %277
  store <4 x double> %return1087, <4 x double>* %278
  store <4 x double> %return1090, <4 x double>* %279
  call void @"V_MOBIUS@UUFPP"(<2 x double>* %p, <2 x double>* %276, double* %277, <4 x double>* %278, <4 x double>* %279)
  %p1095 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1083:                                        ; preds = %false1071
  %return1097 = call i64 @"eq@III"(i64 %T5, i64 97)
  %404 = icmp ne i64 %return1097, 0
  br i1 %404, label %true1098, label %false1099

true1098:                                         ; preds = %false1083
  %GMP1101 = load %gemPrm, %gemPrm* %GMP
  %curve_lenght = extractvalue %gemPrm %GMP1101, 27
  %idx1102 = load i64, i64* %idx
  %return1103 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %curve_lenght, i64 %idx1102)
  %curve_amp = extractvalue %gemPrm %GMP1101, 28
  %return1106 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %curve_amp, i64 %idx1102)
  %_p1107 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1107, <2 x double>* %280
  %w1108 = load double, double* %w
  store double %w1108, double* %281
  store <2 x double> %return1103, <2 x double>* %282
  store <2 x double> %return1106, <2 x double>* %283
  call void @"V_CURVE@UUFUU"(<2 x double>* %p, <2 x double>* %280, double* %281, <2 x double>* %282, <2 x double>* %283)
  %p1111 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1099:                                        ; preds = %false1083
  %return1113 = call i64 @"eq@III"(i64 %T5, i64 98)
  %405 = icmp ne i64 %return1113, 0
  br i1 %405, label %true1114, label %false1115

true1114:                                         ; preds = %false1099
  %GMP1117 = load %gemPrm, %gemPrm* %GMP
  %persp1118 = extractvalue %gemPrm %GMP1117, 40
  %idx1119 = load i64, i64* %idx
  %return1120 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %persp1118, i64 %idx1119)
  %_p1121 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1121, <2 x double>* %284
  %w1122 = load double, double* %w
  store double %w1122, double* %285
  %return1124 = call double @"getcomp@FUI"(<2 x double> %return1120, i64 0)
  store double %return1124, double* %286
  %return1126 = call double @"getcomp@FUI"(<2 x double> %return1120, i64 1)
  store double %return1126, double* %287
  call void @"V_PERSPECTIVE@UUFFF"(<2 x double>* %p, <2 x double>* %284, double* %285, double* %286, double* %287)
  %p1127 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1115:                                        ; preds = %false1099
  %return1129 = call i64 @"eq@III"(i64 %T5, i64 99)
  %406 = icmp ne i64 %return1129, 0
  br i1 %406, label %true1130, label %false1131

true1130:                                         ; preds = %false1115
  %GMP1133 = load %gemPrm, %gemPrm* %GMP
  %bwraps1134 = extractvalue %gemPrm %GMP1133, 12
  %idx1135 = load i64, i64* %idx
  %return1136 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %bwraps1134, i64 %idx1135)
  %bwrapstwist1138 = extractvalue %gemPrm %GMP1133, 41
  %return1140 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %bwrapstwist1138, i64 %idx1135)
  %_p1141 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1141, <2 x double>* %288
  %w1142 = load double, double* %w
  store double %w1142, double* %289
  %return1144 = call double @"getcomp@FVI"(<3 x double> %return1136, i64 0)
  store double %return1144, double* %290
  %return1146 = call double @"getcomp@FVI"(<3 x double> %return1136, i64 1)
  store double %return1146, double* %291
  %return1148 = call double @"getcomp@FVI"(<3 x double> %return1136, i64 2)
  store double %return1148, double* %292
  %return1150 = call double @"getcomp@FUI"(<2 x double> %return1140, i64 0)
  store double %return1150, double* %293
  %return1152 = call double @"getcomp@FUI"(<2 x double> %return1140, i64 1)
  store double %return1152, double* %294
  call void @"V_BWRAPS@UUFFFFFF"(<2 x double>* %p, <2 x double>* %288, double* %289, double* %290, double* %291, double* %292, double* %293, double* %294)
  %p1153 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1131:                                        ; preds = %false1115
  %return1155 = call i64 @"eq@III"(i64 %T5, i64 100)
  %407 = icmp ne i64 %return1155, 0
  br i1 %407, label %true1156, label %false1157

true1156:                                         ; preds = %false1131
  %_p1159 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1159, <2 x double>* %295
  %w1160 = load double, double* %w
  store double %w1160, double* %296
  call void @"V_HEMISPHERE@UUF"(<2 x double>* %p, <2 x double>* %295, double* %296)
  %p1161 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1157:                                        ; preds = %false1131
  %return1163 = call i64 @"eq@III"(i64 %T5, i64 101)
  %408 = icmp ne i64 %return1163, 0
  br i1 %408, label %true1164, label %end12

true1164:                                         ; preds = %false1157
  %GMP1166 = load %gemPrm, %gemPrm* %GMP
  %polynomial_pow = extractvalue %gemPrm %GMP1166, 29
  %idx1167 = load i64, i64* %idx
  %return1168 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %polynomial_pow, i64 %idx1167)
  %polynomial_lc = extractvalue %gemPrm %GMP1166, 30
  %return1171 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %polynomial_lc, i64 %idx1167)
  %polynomial_sc = extractvalue %gemPrm %GMP1166, 31
  %return1174 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %polynomial_sc, i64 %idx1167)
  %_p1175 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1175, <2 x double>* %297
  %w1176 = load double, double* %w
  store double %w1176, double* %298
  store <2 x double> %return1168, <2 x double>* %299
  store <2 x double> %return1171, <2 x double>* %300
  store <2 x double> %return1174, <2 x double>* %301
  call void @"V_POLYNOMIAL@UUFUUU"(<2 x double>* %p, <2 x double>* %297, double* %298, <2 x double>* %299, <2 x double>* %300, <2 x double>* %301)
  %p1180 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %true1164, %true1156, %true1130, %true1114, %true1098, %true1082, %true1070, %true1050, %true1042, %true1034, %true1026, %true1018, %true1010, %true1002, %true994, %true986, %true979, %true971, %true963, %true955, %true947, %true939, %true923, %true907, %true887, %true867, %true847, %true831, %true818, %true805, %true789, %true781, %true757, %true749, %true729, %true717, %true709, %true686, %true678, %true666, %true658, %true650, %true642, %true624, %true613, %true605, %true597, %true585, %true572, %true556, %true540, %true525, %true504, %true488, %true480, %true472, %true464, %true456, %true448, %true441, %true433, %true426, %true409, %true393, %true381, %true369, %true347, %true340, %true324, %true308, %true290, %true278, %true258, %true242, %true235, %true227, %true219, %true211, %true201, %true191, %true183, %true175, %true167, %true156, %true148, %true132, %true124, %true116, %true108, %true100, %true92, %true84, %true76, %true68, %true60, %true52, %true44, %true36, %true28, %true20, %end12, %true
  %UnifiedRetVal = phi <2 x double> [ %output, %true ], [ %_p1181, %end12 ], [ %p25, %true20 ], [ %p33, %true28 ], [ %p41, %true36 ], [ %p49, %true44 ], [ %p57, %true52 ], [ %p65, %true60 ], [ %p73, %true68 ], [ %p81, %true76 ], [ %p89, %true84 ], [ %p97, %true92 ], [ %p105, %true100 ], [ %p113, %true108 ], [ %p121, %true116 ], [ %p129, %true124 ], [ %p145, %true132 ], [ %p153, %true148 ], [ %p164, %true156 ], [ %p172, %true167 ], [ %p180, %true175 ], [ %p188, %true183 ], [ %p198, %true191 ], [ %p208, %true201 ], [ %p216, %true211 ], [ %p224, %true219 ], [ %p232, %true227 ], [ %p239, %true235 ], [ %p255, %true242 ], [ %p275, %true258 ], [ %p287, %true278 ], [ %p305, %true290 ], [ %p321, %true308 ], [ %p337, %true324 ], [ %p344, %true340 ], [ %p356, %true347 ], [ %p378, %true369 ], [ %p390, %true381 ], [ %p406, %true393 ], [ %p423, %true409 ], [ %p430, %true426 ], [ %p438, %true433 ], [ %p445, %true441 ], [ %p453, %true448 ], [ %p461, %true456 ], [ %p469, %true464 ], [ %p477, %true472 ], [ %p485, %true480 ], [ %p501, %true488 ], [ %p522, %true504 ], [ %p537, %true525 ], [ %p553, %true540 ], [ %p569, %true556 ], [ %p582, %true572 ], [ %p594, %true585 ], [ %p602, %true597 ], [ %p610, %true605 ], [ %p621, %true613 ], [ %p639, %true624 ], [ %p647, %true642 ], [ %p655, %true650 ], [ %p663, %true658 ], [ %p675, %true666 ], [ %p683, %true678 ], [ %p706, %true686 ], [ %p714, %true709 ], [ %p726, %true717 ], [ %p746, %true729 ], [ %p754, %true749 ], [ %p769, %true757 ], [ %p786, %true781 ], [ %p802, %true789 ], [ %p815, %true805 ], [ %p828, %true818 ], [ %p844, %true831 ], [ %p864, %true847 ], [ %p884, %true867 ], [ %p904, %true887 ], [ %p920, %true907 ], [ %p936, %true923 ], [ %p944, %true939 ], [ %p952, %true947 ], [ %p960, %true955 ], [ %p968, %true963 ], [ %p976, %true971 ], [ %p983, %true979 ], [ %p991, %true986 ], [ %p999, %true994 ], [ %p1007, %true1002 ], [ %p1015, %true1010 ], [ %p1023, %true1018 ], [ %p1031, %true1026 ], [ %p1039, %true1034 ], [ %p1047, %true1042 ], [ %p1067, %true1050 ], [ %p1079, %true1070 ], [ %p1095, %true1082 ], [ %p1111, %true1098 ], [ %p1127, %true1114 ], [ %p1153, %true1130 ], [ %p1161, %true1156 ], [ %p1180, %true1164 ]
  ret <2 x double> %UnifiedRetVal
}

; Function Attrs: nounwind readnone
declare <2 x double> @"mul@UU"(<2 x double>, <2 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @"getcomp@P[PI"(<4 x double>*, i64) #1

; Function Attrs: nounwind readnone
declare <3 x double> @"getcomp@V[VI"(<3 x double>*, i64) #1

; Function Attrs: alwaysinline nounwind
define private <2 x double> @"FLAMEPP@UIUUUUF"(i64* %T, <2 x double>* %pos, <2 x double>* %x, <2 x double>* %y, <2 x double>* %o, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca double
  %2 = alloca <2 x double>
  %3 = alloca double
  %4 = alloca <2 x double>
  %5 = alloca double
  %6 = alloca <2 x double>
  %7 = alloca double
  %8 = alloca <2 x double>
  %9 = alloca double
  %10 = alloca <2 x double>
  %11 = alloca double
  %12 = alloca <2 x double>
  %13 = alloca double
  %14 = alloca <2 x double>
  %15 = alloca double
  %16 = alloca <2 x double>
  %17 = alloca double
  %18 = alloca <2 x double>
  %19 = alloca double
  %20 = alloca <2 x double>
  %21 = alloca double
  %22 = alloca <2 x double>
  %23 = alloca double
  %24 = alloca <2 x double>
  %25 = alloca double
  %26 = alloca <2 x double>
  %27 = alloca double
  %28 = alloca <2 x double>
  %29 = alloca double
  %30 = alloca double
  %31 = alloca double
  %32 = alloca double
  %33 = alloca double
  %34 = alloca <2 x double>
  %35 = alloca double
  %36 = alloca <2 x double>
  %37 = alloca double
  %38 = alloca double
  %39 = alloca double
  %40 = alloca <2 x double>
  %41 = alloca double
  %42 = alloca <2 x double>
  %43 = alloca double
  %44 = alloca <2 x double>
  %45 = alloca double
  %46 = alloca <2 x double>
  %47 = alloca double
  %48 = alloca double
  %49 = alloca <2 x double>
  %50 = alloca double
  %51 = alloca double
  %52 = alloca <2 x double>
  %53 = alloca double
  %54 = alloca <2 x double>
  %55 = alloca double
  %56 = alloca <2 x double>
  %57 = alloca double
  %58 = alloca double
  %59 = alloca double
  %60 = alloca <2 x double>
  %61 = alloca double
  %62 = alloca <2 x double>
  %63 = alloca double
  %64 = alloca <2 x double>
  %65 = alloca double
  %66 = alloca <2 x double>
  %67 = alloca double
  %68 = alloca <2 x double>
  %69 = alloca double
  %70 = alloca <2 x double>
  %71 = alloca double
  %72 = alloca <2 x double>
  %73 = alloca double
  %74 = alloca <2 x double>
  %75 = alloca double
  %76 = alloca <2 x double>
  %77 = alloca double
  %78 = alloca <2 x double>
  %79 = alloca double
  %80 = alloca <2 x double>
  %81 = alloca double
  %82 = alloca <2 x double>
  %83 = alloca double
  %84 = alloca <2 x double>
  %85 = alloca double
  %86 = alloca <2 x double>
  %87 = alloca double
  %88 = alloca <2 x double>
  %89 = alloca double
  %90 = alloca <2 x double>
  %91 = alloca double
  %92 = alloca <2 x double>
  %93 = alloca double
  %94 = alloca <2 x double>
  %95 = alloca double
  %96 = alloca <2 x double>
  %97 = alloca double
  %98 = alloca <2 x double>
  %99 = alloca double
  %100 = alloca <2 x double>
  %101 = alloca double
  %102 = alloca <2 x double>
  %103 = alloca double
  %104 = alloca <2 x double>
  %105 = alloca double
  %106 = alloca <2 x double>
  %107 = alloca double
  %108 = alloca <2 x double>
  %109 = alloca double
  %110 = alloca <2 x double>
  %111 = alloca double
  %112 = alloca <2 x double>
  %113 = alloca double
  %114 = alloca <2 x double>
  %115 = alloca double
  %116 = alloca <2 x double>
  %117 = alloca double
  %118 = alloca <2 x double>
  %119 = alloca double
  %120 = alloca <2 x double>
  %121 = alloca double
  %122 = alloca <2 x double>
  %123 = alloca double
  %p = alloca <2 x double>
  store <2 x double> zeroinitializer, <2 x double>* %p, !vex-initializer-store !3
  %pos1 = load <2 x double>, <2 x double>* %pos
  %T2 = load i64, i64* %T
  %return = call i64 @"not@II"(i64 %T2)
  %124 = icmp ne i64 %return, 0
  br i1 %124, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %w4 = load double, double* %w
  %cast = call <2 x double> @"set@UF"(double %w4)
  %output = call <2 x double> @"mul@UU"(<2 x double> %pos1, <2 x double> %cast)
  br label %UnifiedReturnBlock

false:                                            ; preds = %__llvm_entry
  %return6 = call i64 @"lt@III"(i64 %T2, i64 21)
  %125 = icmp ne i64 %return6, 0
  br i1 %125, label %true7, label %false8

true7:                                            ; preds = %false
  %return11 = call i64 @"lt@III"(i64 %T2, i64 11)
  %126 = icmp ne i64 %return11, 0
  br i1 %126, label %true12, label %false13

false8:                                           ; preds = %false
  %return186 = call i64 @"lt@III"(i64 %T2, i64 62)
  %127 = icmp ne i64 %return186, 0
  br i1 %127, label %true187, label %false188

end9:                                             ; preds = %false499, %false429, %false188, %false341, %false263, %false173, %false82
  br label %UnifiedReturnBlock

true12:                                           ; preds = %true7
  %return16 = call i64 @"eq@III"(i64 %T2, i64 1)
  %128 = icmp ne i64 %return16, 0
  br i1 %128, label %true17, label %false18

false13:                                          ; preds = %true7
  %return95 = call i64 @"eq@III"(i64 %T2, i64 11)
  %129 = icmp ne i64 %return95, 0
  br i1 %129, label %true96, label %false97

true17:                                           ; preds = %true12
  store <2 x double> %pos1, <2 x double>* %0
  %w21 = load double, double* %w
  store double %w21, double* %1
  call void @"V_SINUSOIDAL@UUF"(<2 x double>* %p, <2 x double>* %0, double* %1)
  %p22 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false18:                                          ; preds = %true12
  %return24 = call i64 @"eq@III"(i64 %T2, i64 2)
  %130 = icmp ne i64 %return24, 0
  br i1 %130, label %true25, label %false26

true25:                                           ; preds = %false18
  store <2 x double> %pos1, <2 x double>* %2
  %w29 = load double, double* %w
  store double %w29, double* %3
  call void @"V_SPHERICAL@UUF"(<2 x double>* %p, <2 x double>* %2, double* %3)
  %p30 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false26:                                          ; preds = %false18
  %return32 = call i64 @"eq@III"(i64 %T2, i64 3)
  %131 = icmp ne i64 %return32, 0
  br i1 %131, label %true33, label %false34

true33:                                           ; preds = %false26
  store <2 x double> %pos1, <2 x double>* %4
  %w37 = load double, double* %w
  store double %w37, double* %5
  call void @"V_SWIRL@UUF"(<2 x double>* %p, <2 x double>* %4, double* %5)
  %p38 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false34:                                          ; preds = %false26
  %return40 = call i64 @"eq@III"(i64 %T2, i64 4)
  %132 = icmp ne i64 %return40, 0
  br i1 %132, label %true41, label %false42

true41:                                           ; preds = %false34
  store <2 x double> %pos1, <2 x double>* %6
  %w45 = load double, double* %w
  store double %w45, double* %7
  call void @"V_HORSESHOE@UUF"(<2 x double>* %p, <2 x double>* %6, double* %7)
  %p46 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false42:                                          ; preds = %false34
  %return48 = call i64 @"eq@III"(i64 %T2, i64 5)
  %133 = icmp ne i64 %return48, 0
  br i1 %133, label %true49, label %false50

true49:                                           ; preds = %false42
  store <2 x double> %pos1, <2 x double>* %8
  %w53 = load double, double* %w
  store double %w53, double* %9
  call void @"V_POLAR@UUF"(<2 x double>* %p, <2 x double>* %8, double* %9)
  %p54 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false50:                                          ; preds = %false42
  %return56 = call i64 @"eq@III"(i64 %T2, i64 6)
  %134 = icmp ne i64 %return56, 0
  br i1 %134, label %true57, label %false58

true57:                                           ; preds = %false50
  store <2 x double> %pos1, <2 x double>* %10
  %w61 = load double, double* %w
  store double %w61, double* %11
  call void @"V_HANDKERCHIEF@UUF"(<2 x double>* %p, <2 x double>* %10, double* %11)
  %p62 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false58:                                          ; preds = %false50
  %return64 = call i64 @"eq@III"(i64 %T2, i64 7)
  %135 = icmp ne i64 %return64, 0
  br i1 %135, label %true65, label %false66

true65:                                           ; preds = %false58
  store <2 x double> %pos1, <2 x double>* %12
  %w69 = load double, double* %w
  store double %w69, double* %13
  call void @"V_HEART@UUF"(<2 x double>* %p, <2 x double>* %12, double* %13)
  %p70 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false66:                                          ; preds = %false58
  %return72 = call i64 @"eq@III"(i64 %T2, i64 8)
  %136 = icmp ne i64 %return72, 0
  br i1 %136, label %true73, label %false74

true73:                                           ; preds = %false66
  store <2 x double> %pos1, <2 x double>* %14
  %w77 = load double, double* %w
  store double %w77, double* %15
  call void @"V_DISC@UUF"(<2 x double>* %p, <2 x double>* %14, double* %15)
  %p78 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false74:                                          ; preds = %false66
  %return80 = call i64 @"eq@III"(i64 %T2, i64 9)
  %137 = icmp ne i64 %return80, 0
  br i1 %137, label %true81, label %false82

true81:                                           ; preds = %false74
  store <2 x double> %pos1, <2 x double>* %16
  %w85 = load double, double* %w
  store double %w85, double* %17
  call void @"V_SPIRAL@UUF"(<2 x double>* %p, <2 x double>* %16, double* %17)
  %p86 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false82:                                          ; preds = %false74
  %return88 = call i64 @"eq@III"(i64 %T2, i64 10)
  %138 = icmp ne i64 %return88, 0
  br i1 %138, label %true89, label %end9

true89:                                           ; preds = %false82
  store <2 x double> %pos1, <2 x double>* %18
  %w92 = load double, double* %w
  store double %w92, double* %19
  call void @"V_HIPERBOLIC@UUF"(<2 x double>* %p, <2 x double>* %18, double* %19)
  %p93 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true96:                                           ; preds = %false13
  store <2 x double> %pos1, <2 x double>* %20
  %w100 = load double, double* %w
  store double %w100, double* %21
  call void @"V_DIAMOND@UUF"(<2 x double>* %p, <2 x double>* %20, double* %21)
  %p101 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false97:                                          ; preds = %false13
  %return103 = call i64 @"eq@III"(i64 %T2, i64 12)
  %139 = icmp ne i64 %return103, 0
  br i1 %139, label %true104, label %false105

true104:                                          ; preds = %false97
  store <2 x double> %pos1, <2 x double>* %22
  %w108 = load double, double* %w
  store double %w108, double* %23
  call void @"V_EX@UUF"(<2 x double>* %p, <2 x double>* %22, double* %23)
  %p109 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false105:                                         ; preds = %false97
  %return111 = call i64 @"eq@III"(i64 %T2, i64 13)
  %140 = icmp ne i64 %return111, 0
  br i1 %140, label %true112, label %false113

true112:                                          ; preds = %false105
  store <2 x double> %pos1, <2 x double>* %24
  %w116 = load double, double* %w
  store double %w116, double* %25
  call void @"V_JULIA@UUF"(<2 x double>* %p, <2 x double>* %24, double* %25)
  %p117 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false113:                                         ; preds = %false105
  %return119 = call i64 @"eq@III"(i64 %T2, i64 14)
  %141 = icmp ne i64 %return119, 0
  br i1 %141, label %true120, label %false121

true120:                                          ; preds = %false113
  store <2 x double> %pos1, <2 x double>* %26
  %w124 = load double, double* %w
  store double %w124, double* %27
  call void @"V_BENT@UUF"(<2 x double>* %p, <2 x double>* %26, double* %27)
  %p125 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false121:                                         ; preds = %false113
  %return127 = call i64 @"eq@III"(i64 %T2, i64 15)
  %142 = icmp ne i64 %return127, 0
  br i1 %142, label %true128, label %false129

true128:                                          ; preds = %false121
  store <2 x double> %pos1, <2 x double>* %28
  %w132 = load double, double* %w
  store double %w132, double* %29
  %o133 = load <2 x double>, <2 x double>* %o
  %return134 = call double @"getcomp@FUI"(<2 x double> %o133, i64 0)
  store double %return134, double* %30
  %x135 = load <2 x double>, <2 x double>* %x
  %return136 = call double @"getcomp@FUI"(<2 x double> %x135, i64 1)
  store double %return136, double* %31
  %y137 = load <2 x double>, <2 x double>* %y
  %return138 = call double @"getcomp@FUI"(<2 x double> %y137, i64 1)
  store double %return138, double* %32
  %o139 = load <2 x double>, <2 x double>* %o
  %return140 = call double @"getcomp@FUI"(<2 x double> %o139, i64 1)
  store double %return140, double* %33
  call void @"V_WAVES@UUFFFFF"(<2 x double>* %p, <2 x double>* %28, double* %29, double* %30, double* %31, double* %32, double* %33)
  %p141 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false129:                                         ; preds = %false121
  %return143 = call i64 @"eq@III"(i64 %T2, i64 16)
  %143 = icmp ne i64 %return143, 0
  br i1 %143, label %true144, label %false145

true144:                                          ; preds = %false129
  store <2 x double> %pos1, <2 x double>* %34
  %w148 = load double, double* %w
  store double %w148, double* %35
  call void @"V_FISHEYE@UUF"(<2 x double>* %p, <2 x double>* %34, double* %35)
  %p149 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false145:                                         ; preds = %false129
  %return151 = call i64 @"eq@III"(i64 %T2, i64 17)
  %144 = icmp ne i64 %return151, 0
  br i1 %144, label %true152, label %false153

true152:                                          ; preds = %false145
  store <2 x double> %pos1, <2 x double>* %36
  %w156 = load double, double* %w
  store double %w156, double* %37
  %o157 = load <2 x double>, <2 x double>* %o
  %return158 = call double @"getcomp@FUI"(<2 x double> %o157, i64 0)
  store double %return158, double* %38
  %o159 = load <2 x double>, <2 x double>* %o
  %return160 = call double @"getcomp@FUI"(<2 x double> %o159, i64 1)
  store double %return160, double* %39
  call void @"V_POPCORN@UUFFF"(<2 x double>* %p, <2 x double>* %36, double* %37, double* %38, double* %39)
  %p161 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false153:                                         ; preds = %false145
  %return163 = call i64 @"eq@III"(i64 %T2, i64 18)
  %145 = icmp ne i64 %return163, 0
  br i1 %145, label %true164, label %false165

true164:                                          ; preds = %false153
  store <2 x double> %pos1, <2 x double>* %40
  %w168 = load double, double* %w
  store double %w168, double* %41
  call void @"V_EXPONENTIAL@UUF"(<2 x double>* %p, <2 x double>* %40, double* %41)
  %p169 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false165:                                         ; preds = %false153
  %return171 = call i64 @"eq@III"(i64 %T2, i64 19)
  %146 = icmp ne i64 %return171, 0
  br i1 %146, label %true172, label %false173

true172:                                          ; preds = %false165
  store <2 x double> %pos1, <2 x double>* %42
  %w176 = load double, double* %w
  store double %w176, double* %43
  call void @"V_POWER@UUF"(<2 x double>* %p, <2 x double>* %42, double* %43)
  %p177 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false173:                                         ; preds = %false165
  %return179 = call i64 @"eq@III"(i64 %T2, i64 20)
  %147 = icmp ne i64 %return179, 0
  br i1 %147, label %true180, label %end9

true180:                                          ; preds = %false173
  store <2 x double> %pos1, <2 x double>* %44
  %w183 = load double, double* %w
  store double %w183, double* %45
  call void @"V_COSINE@UUF"(<2 x double>* %p, <2 x double>* %44, double* %45)
  %p184 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true187:                                          ; preds = %false8
  %return191 = call i64 @"lt@III"(i64 %T2, i64 42)
  %148 = icmp ne i64 %return191, 0
  br i1 %148, label %true192, label %false193

false188:                                         ; preds = %false8
  %return354 = call i64 @"lt@III"(i64 %T2, i64 101)
  %149 = icmp ne i64 %return354, 0
  br i1 %149, label %true355, label %end9

true192:                                          ; preds = %true187
  %return196 = call i64 @"eq@III"(i64 %T2, i64 21)
  %150 = icmp ne i64 %return196, 0
  br i1 %150, label %true197, label %false198

false193:                                         ; preds = %true187
  %return275 = call i64 @"eq@III"(i64 %T2, i64 42)
  %151 = icmp ne i64 %return275, 0
  br i1 %151, label %true276, label %false277

true197:                                          ; preds = %true192
  store <2 x double> %pos1, <2 x double>* %46
  %w201 = load double, double* %w
  store double %w201, double* %47
  %o202 = load <2 x double>, <2 x double>* %o
  %return203 = call double @"getcomp@FUI"(<2 x double> %o202, i64 0)
  store double %return203, double* %48
  call void @"V_RINGS@UUFF"(<2 x double>* %p, <2 x double>* %46, double* %47, double* %48)
  %p204 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false198:                                         ; preds = %true192
  %return206 = call i64 @"eq@III"(i64 %T2, i64 22)
  %152 = icmp ne i64 %return206, 0
  br i1 %152, label %true207, label %false208

true207:                                          ; preds = %false198
  store <2 x double> %pos1, <2 x double>* %49
  %w211 = load double, double* %w
  store double %w211, double* %50
  %o212 = load <2 x double>, <2 x double>* %o
  %return213 = call double @"getcomp@FUI"(<2 x double> %o212, i64 0)
  store double %return213, double* %51
  call void @"V_FAN@UUFF"(<2 x double>* %p, <2 x double>* %49, double* %50, double* %51)
  %p214 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false208:                                         ; preds = %false198
  %return216 = call i64 @"eq@III"(i64 %T2, i64 23)
  %153 = icmp ne i64 %return216, 0
  br i1 %153, label %true217, label %false218

true217:                                          ; preds = %false208
  store <2 x double> %pos1, <2 x double>* %52
  %w221 = load double, double* %w
  store double %w221, double* %53
  call void @"V_BUBBLE@UUF"(<2 x double>* %p, <2 x double>* %52, double* %53)
  %p222 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false218:                                         ; preds = %false208
  %return224 = call i64 @"eq@III"(i64 %T2, i64 24)
  %154 = icmp ne i64 %return224, 0
  br i1 %154, label %true225, label %false226

true225:                                          ; preds = %false218
  store <2 x double> %pos1, <2 x double>* %54
  %w229 = load double, double* %w
  store double %w229, double* %55
  call void @"V_CYLINDER@UUF"(<2 x double>* %p, <2 x double>* %54, double* %55)
  %p230 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false226:                                         ; preds = %false218
  %return232 = call i64 @"eq@III"(i64 %T2, i64 25)
  %155 = icmp ne i64 %return232, 0
  br i1 %155, label %true233, label %false234

true233:                                          ; preds = %false226
  store <2 x double> %pos1, <2 x double>* %56
  %w237 = load double, double* %w
  store double %w237, double* %57
  call void @"V_EYEFISH@UUF"(<2 x double>* %p, <2 x double>* %56, double* %57)
  %p238 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false234:                                         ; preds = %false226
  %return240 = call i64 @"eq@III"(i64 %T2, i64 26)
  %156 = icmp ne i64 %return240, 0
  br i1 %156, label %true241, label %false242

true241:                                          ; preds = %false234
  %w244 = load double, double* %w
  store double %w244, double* %58
  call void @"V_BLUR@UF"(<2 x double>* %p, double* %58)
  %p245 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false242:                                         ; preds = %false234
  %return247 = call i64 @"eq@III"(i64 %T2, i64 33)
  %157 = icmp ne i64 %return247, 0
  br i1 %157, label %true248, label %false249

true248:                                          ; preds = %false242
  %w251 = load double, double* %w
  store double %w251, double* %59
  call void @"V_GAUSSIAN@UF"(<2 x double>* %p, double* %59)
  %p252 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false249:                                         ; preds = %false242
  %return254 = call i64 @"eq@III"(i64 %T2, i64 39)
  %158 = icmp ne i64 %return254, 0
  br i1 %158, label %true255, label %false256

true255:                                          ; preds = %false249
  %w258 = load double, double* %w
  store double %w258, double* %61
  call void @"V_ARCH@UUF"(<2 x double>* %p, <2 x double>* %60, double* %61)
  %p259 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false256:                                         ; preds = %false249
  %return261 = call i64 @"eq@III"(i64 %T2, i64 40)
  %159 = icmp ne i64 %return261, 0
  br i1 %159, label %true262, label %false263

true262:                                          ; preds = %false256
  store <2 x double> %pos1, <2 x double>* %62
  %w266 = load double, double* %w
  store double %w266, double* %63
  call void @"V_TANGENT@UUF"(<2 x double>* %p, <2 x double>* %62, double* %63)
  %p267 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false263:                                         ; preds = %false256
  %return269 = call i64 @"eq@III"(i64 %T2, i64 41)
  %160 = icmp ne i64 %return269, 0
  br i1 %160, label %true270, label %end9

true270:                                          ; preds = %false263
  %w272 = load double, double* %w
  store double %w272, double* %65
  call void @"V_SQUARE@UUF"(<2 x double>* %p, <2 x double>* %64, double* %65)
  %p273 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true276:                                          ; preds = %false193
  store <2 x double> %pos1, <2 x double>* %66
  %w280 = load double, double* %w
  store double %w280, double* %67
  call void @"V_RAYS@UUF"(<2 x double>* %p, <2 x double>* %66, double* %67)
  %p281 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false277:                                         ; preds = %false193
  %return283 = call i64 @"eq@III"(i64 %T2, i64 43)
  %161 = icmp ne i64 %return283, 0
  br i1 %161, label %true284, label %false285

true284:                                          ; preds = %false277
  store <2 x double> %pos1, <2 x double>* %68
  %w288 = load double, double* %w
  store double %w288, double* %69
  call void @"V_BLADE@UUF"(<2 x double>* %p, <2 x double>* %68, double* %69)
  %p289 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false285:                                         ; preds = %false277
  %return291 = call i64 @"eq@III"(i64 %T2, i64 44)
  %162 = icmp ne i64 %return291, 0
  br i1 %162, label %true292, label %false293

true292:                                          ; preds = %false285
  store <2 x double> %pos1, <2 x double>* %70
  %w296 = load double, double* %w
  store double %w296, double* %71
  call void @"V_SECANT2@UUF"(<2 x double>* %p, <2 x double>* %70, double* %71)
  %p297 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false293:                                         ; preds = %false285
  %return299 = call i64 @"eq@III"(i64 %T2, i64 45)
  %163 = icmp ne i64 %return299, 0
  br i1 %163, label %true300, label %false301

true300:                                          ; preds = %false293
  store <2 x double> %pos1, <2 x double>* %72
  %w304 = load double, double* %w
  store double %w304, double* %73
  call void @"V_TWINTRIAN@UUF"(<2 x double>* %p, <2 x double>* %72, double* %73)
  %p305 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false301:                                         ; preds = %false293
  %return307 = call i64 @"eq@III"(i64 %T2, i64 46)
  %164 = icmp ne i64 %return307, 0
  br i1 %164, label %true308, label %false309

true308:                                          ; preds = %false301
  store <2 x double> %pos1, <2 x double>* %74
  %w312 = load double, double* %w
  store double %w312, double* %75
  call void @"V_CROSS@UUF"(<2 x double>* %p, <2 x double>* %74, double* %75)
  %p313 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false309:                                         ; preds = %false301
  %return315 = call i64 @"eq@III"(i64 %T2, i64 54)
  %165 = icmp ne i64 %return315, 0
  br i1 %165, label %true316, label %false317

true316:                                          ; preds = %false309
  store <2 x double> %pos1, <2 x double>* %76
  %w320 = load double, double* %w
  store double %w320, double* %77
  call void @"V_BOARDERS@UUF"(<2 x double>* %p, <2 x double>* %76, double* %77)
  %p321 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false317:                                         ; preds = %false309
  %return323 = call i64 @"eq@III"(i64 %T2, i64 55)
  %166 = icmp ne i64 %return323, 0
  br i1 %166, label %true324, label %false325

true324:                                          ; preds = %false317
  store <2 x double> %pos1, <2 x double>* %78
  %w328 = load double, double* %w
  store double %w328, double* %79
  call void @"V_BUTTERFLY@UUF"(<2 x double>* %p, <2 x double>* %78, double* %79)
  %p329 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false325:                                         ; preds = %false317
  %return331 = call i64 @"eq@III"(i64 %T2, i64 58)
  %167 = icmp ne i64 %return331, 0
  br i1 %167, label %true332, label %false333

true332:                                          ; preds = %false325
  store <2 x double> %pos1, <2 x double>* %80
  %w336 = load double, double* %w
  store double %w336, double* %81
  call void @"V_EDISC@UUF"(<2 x double>* %p, <2 x double>* %80, double* %81)
  %p337 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false333:                                         ; preds = %false325
  %return339 = call i64 @"eq@III"(i64 %T2, i64 59)
  %168 = icmp ne i64 %return339, 0
  br i1 %168, label %true340, label %false341

true340:                                          ; preds = %false333
  store <2 x double> %pos1, <2 x double>* %82
  %w344 = load double, double* %w
  store double %w344, double* %83
  call void @"V_ELLIPTIC@UUF"(<2 x double>* %p, <2 x double>* %82, double* %83)
  %p345 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false341:                                         ; preds = %false333
  %return347 = call i64 @"eq@III"(i64 %T2, i64 60)
  %169 = icmp ne i64 %return347, 0
  br i1 %169, label %true348, label %end9

true348:                                          ; preds = %false341
  store <2 x double> %pos1, <2 x double>* %84
  %w351 = load double, double* %w
  store double %w351, double* %85
  call void @"V_NOISE@UUF"(<2 x double>* %p, <2 x double>* %84, double* %85)
  %p352 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true355:                                          ; preds = %false188
  %return358 = call i64 @"lt@III"(i64 %T2, i64 86)
  %170 = icmp ne i64 %return358, 0
  br i1 %170, label %true359, label %false360

true359:                                          ; preds = %true355
  %return363 = call i64 @"eq@III"(i64 %T2, i64 62)
  %171 = icmp ne i64 %return363, 0
  br i1 %171, label %true364, label %false365

false360:                                         ; preds = %true355
  %return442 = call i64 @"eq@III"(i64 %T2, i64 86)
  %172 = icmp ne i64 %return442, 0
  br i1 %172, label %true443, label %end444

true364:                                          ; preds = %true359
  store <2 x double> %pos1, <2 x double>* %86
  %w368 = load double, double* %w
  store double %w368, double* %87
  call void @"V_FOCI@UUF"(<2 x double>* %p, <2 x double>* %86, double* %87)
  %p369 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false365:                                         ; preds = %true359
  %return371 = call i64 @"eq@III"(i64 %T2, i64 64)
  %173 = icmp ne i64 %return371, 0
  br i1 %173, label %true372, label %false373

true372:                                          ; preds = %false365
  store <2 x double> %pos1, <2 x double>* %88
  %w376 = load double, double* %w
  store double %w376, double* %89
  call void @"V_LOONIE@UUF"(<2 x double>* %p, <2 x double>* %88, double* %89)
  %p377 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false373:                                         ; preds = %false365
  %return379 = call i64 @"eq@III"(i64 %T2, i64 68)
  %174 = icmp ne i64 %return379, 0
  br i1 %174, label %true380, label %false381

true380:                                          ; preds = %false373
  store <2 x double> %pos1, <2 x double>* %90
  %w384 = load double, double* %w
  store double %w384, double* %91
  call void @"V_POLAR2@UUF"(<2 x double>* %p, <2 x double>* %90, double* %91)
  %p385 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false381:                                         ; preds = %false373
  %return387 = call i64 @"eq@III"(i64 %T2, i64 70)
  %175 = icmp ne i64 %return387, 0
  br i1 %175, label %true388, label %false389

true388:                                          ; preds = %false381
  store <2 x double> %pos1, <2 x double>* %92
  %w392 = load double, double* %w
  store double %w392, double* %93
  call void @"V_SCRY@UUF"(<2 x double>* %p, <2 x double>* %92, double* %93)
  %p393 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false389:                                         ; preds = %false381
  %return395 = call i64 @"eq@III"(i64 %T2, i64 80)
  %176 = icmp ne i64 %return395, 0
  br i1 %176, label %true396, label %false397

true396:                                          ; preds = %false389
  store <2 x double> %pos1, <2 x double>* %94
  %w400 = load double, double* %w
  store double %w400, double* %95
  call void @"V_EXP@UUF"(<2 x double>* %p, <2 x double>* %94, double* %95)
  %p401 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false397:                                         ; preds = %false389
  %return403 = call i64 @"eq@III"(i64 %T2, i64 81)
  %177 = icmp ne i64 %return403, 0
  br i1 %177, label %true404, label %false405

true404:                                          ; preds = %false397
  store <2 x double> %pos1, <2 x double>* %96
  %w408 = load double, double* %w
  store double %w408, double* %97
  call void @"V_LOG@UUF"(<2 x double>* %p, <2 x double>* %96, double* %97)
  %p409 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false405:                                         ; preds = %false397
  %return411 = call i64 @"eq@III"(i64 %T2, i64 82)
  %178 = icmp ne i64 %return411, 0
  br i1 %178, label %true412, label %false413

true412:                                          ; preds = %false405
  store <2 x double> %pos1, <2 x double>* %98
  %w416 = load double, double* %w
  store double %w416, double* %99
  call void @"V_SIN@UUF"(<2 x double>* %p, <2 x double>* %98, double* %99)
  %p417 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false413:                                         ; preds = %false405
  %return419 = call i64 @"eq@III"(i64 %T2, i64 83)
  %179 = icmp ne i64 %return419, 0
  br i1 %179, label %true420, label %false421

true420:                                          ; preds = %false413
  store <2 x double> %pos1, <2 x double>* %100
  %w424 = load double, double* %w
  store double %w424, double* %101
  call void @"V_COS@UUF"(<2 x double>* %p, <2 x double>* %100, double* %101)
  %p425 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false421:                                         ; preds = %false413
  %return427 = call i64 @"eq@III"(i64 %T2, i64 84)
  %180 = icmp ne i64 %return427, 0
  br i1 %180, label %true428, label %false429

true428:                                          ; preds = %false421
  store <2 x double> %pos1, <2 x double>* %102
  %w432 = load double, double* %w
  store double %w432, double* %103
  call void @"V_TAN@UUF"(<2 x double>* %p, <2 x double>* %102, double* %103)
  %p433 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false429:                                         ; preds = %false421
  %return435 = call i64 @"eq@III"(i64 %T2, i64 85)
  %181 = icmp ne i64 %return435, 0
  br i1 %181, label %true436, label %end9

true436:                                          ; preds = %false429
  store <2 x double> %pos1, <2 x double>* %104
  %w439 = load double, double* %w
  store double %w439, double* %105
  call void @"V_SEC@UUF"(<2 x double>* %p, <2 x double>* %104, double* %105)
  %p440 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true443:                                          ; preds = %false360
  store <2 x double> %pos1, <2 x double>* %106
  %w446 = load double, double* %w
  store double %w446, double* %107
  call void @"V_CSC@UUF"(<2 x double>* %p, <2 x double>* %106, double* %107)
  %p447 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

end444:                                           ; preds = %false360
  %return449 = call i64 @"eq@III"(i64 %T2, i64 87)
  %182 = icmp ne i64 %return449, 0
  br i1 %182, label %true450, label %false451

true450:                                          ; preds = %end444
  store <2 x double> %pos1, <2 x double>* %108
  %w454 = load double, double* %w
  store double %w454, double* %109
  call void @"V_COT@UUF"(<2 x double>* %p, <2 x double>* %108, double* %109)
  %p455 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false451:                                         ; preds = %end444
  %return457 = call i64 @"eq@III"(i64 %T2, i64 88)
  %183 = icmp ne i64 %return457, 0
  br i1 %183, label %true458, label %false459

true458:                                          ; preds = %false451
  store <2 x double> %pos1, <2 x double>* %110
  %w462 = load double, double* %w
  store double %w462, double* %111
  call void @"V_SINH@UUF"(<2 x double>* %p, <2 x double>* %110, double* %111)
  %p463 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false459:                                         ; preds = %false451
  %return465 = call i64 @"eq@III"(i64 %T2, i64 89)
  %184 = icmp ne i64 %return465, 0
  br i1 %184, label %true466, label %false467

true466:                                          ; preds = %false459
  store <2 x double> %pos1, <2 x double>* %112
  %w470 = load double, double* %w
  store double %w470, double* %113
  call void @"V_COSH@UUF"(<2 x double>* %p, <2 x double>* %112, double* %113)
  %p471 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false467:                                         ; preds = %false459
  %return473 = call i64 @"eq@III"(i64 %T2, i64 90)
  %185 = icmp ne i64 %return473, 0
  br i1 %185, label %true474, label %false475

true474:                                          ; preds = %false467
  store <2 x double> %pos1, <2 x double>* %114
  %w478 = load double, double* %w
  store double %w478, double* %115
  call void @"V_TANH@UUF"(<2 x double>* %p, <2 x double>* %114, double* %115)
  %p479 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false475:                                         ; preds = %false467
  %return481 = call i64 @"eq@III"(i64 %T2, i64 91)
  %186 = icmp ne i64 %return481, 0
  br i1 %186, label %true482, label %false483

true482:                                          ; preds = %false475
  store <2 x double> %pos1, <2 x double>* %116
  %w486 = load double, double* %w
  store double %w486, double* %117
  call void @"V_SECH@UUF"(<2 x double>* %p, <2 x double>* %116, double* %117)
  %p487 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false483:                                         ; preds = %false475
  %return489 = call i64 @"eq@III"(i64 %T2, i64 92)
  %187 = icmp ne i64 %return489, 0
  br i1 %187, label %true490, label %false491

true490:                                          ; preds = %false483
  store <2 x double> %pos1, <2 x double>* %118
  %w494 = load double, double* %w
  store double %w494, double* %119
  call void @"V_CSCH@UUF"(<2 x double>* %p, <2 x double>* %118, double* %119)
  %p495 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false491:                                         ; preds = %false483
  %return497 = call i64 @"eq@III"(i64 %T2, i64 93)
  %188 = icmp ne i64 %return497, 0
  br i1 %188, label %true498, label %false499

true498:                                          ; preds = %false491
  store <2 x double> %pos1, <2 x double>* %120
  %w502 = load double, double* %w
  store double %w502, double* %121
  call void @"V_COTH@UUF"(<2 x double>* %p, <2 x double>* %120, double* %121)
  %p503 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false499:                                         ; preds = %false491
  %return505 = call i64 @"eq@III"(i64 %T2, i64 100)
  %189 = icmp ne i64 %return505, 0
  br i1 %189, label %true506, label %end9

true506:                                          ; preds = %false499
  store <2 x double> %pos1, <2 x double>* %122
  %w509 = load double, double* %w
  store double %w509, double* %123
  call void @"V_HEMISPHERE@UUF"(<2 x double>* %p, <2 x double>* %122, double* %123)
  %p510 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %true506, %true498, %true490, %true482, %true474, %true466, %true458, %true450, %true443, %true436, %true428, %true420, %true412, %true404, %true396, %true388, %true380, %true372, %true364, %true348, %true340, %true332, %true324, %true316, %true308, %true300, %true292, %true284, %true276, %true270, %true262, %true255, %true248, %true241, %true233, %true225, %true217, %true207, %true197, %true180, %true172, %true164, %true152, %true144, %true128, %true120, %true112, %true104, %true96, %true89, %true81, %true73, %true65, %true57, %true49, %true41, %true33, %true25, %true17, %end9, %true
  %UnifiedRetVal = phi <2 x double> [ %output, %true ], [ %pos1, %end9 ], [ %p22, %true17 ], [ %p30, %true25 ], [ %p38, %true33 ], [ %p46, %true41 ], [ %p54, %true49 ], [ %p62, %true57 ], [ %p70, %true65 ], [ %p78, %true73 ], [ %p86, %true81 ], [ %p93, %true89 ], [ %p101, %true96 ], [ %p109, %true104 ], [ %p117, %true112 ], [ %p125, %true120 ], [ %p141, %true128 ], [ %p149, %true144 ], [ %p161, %true152 ], [ %p169, %true164 ], [ %p177, %true172 ], [ %p184, %true180 ], [ %p204, %true197 ], [ %p214, %true207 ], [ %p222, %true217 ], [ %p230, %true225 ], [ %p238, %true233 ], [ %p245, %true241 ], [ %p252, %true248 ], [ %p259, %true255 ], [ %p267, %true262 ], [ %p273, %true270 ], [ %p281, %true276 ], [ %p289, %true284 ], [ %p297, %true292 ], [ %p305, %true300 ], [ %p313, %true308 ], [ %p321, %true316 ], [ %p329, %true324 ], [ %p337, %true332 ], [ %p345, %true340 ], [ %p352, %true348 ], [ %p369, %true364 ], [ %p377, %true372 ], [ %p385, %true380 ], [ %p393, %true388 ], [ %p401, %true396 ], [ %p409, %true404 ], [ %p417, %true412 ], [ %p425, %true420 ], [ %p433, %true428 ], [ %p440, %true436 ], [ %p447, %true443 ], [ %p455, %true450 ], [ %p463, %true458 ], [ %p471, %true466 ], [ %p479, %true474 ], [ %p487, %true482 ], [ %p495, %true490 ], [ %p503, %true498 ], [ %p510, %true506 ]
  ret <2 x double> %UnifiedRetVal
}

; Function Attrs: alwaysinline nounwind
define private <2 x double> @"FLAMEFF@USIUUUUF"(i8** %prx, i64* %T, <2 x double>* %pos, <2 x double>* %x, <2 x double>* %y, <2 x double>* %o, double* %w) #0 {
__llvm_entry:
  %_p = alloca <2 x double>
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca <2 x double>
  %3 = alloca <2 x double>
  %4 = alloca double
  %5 = alloca <2 x double>
  %6 = alloca double
  %7 = alloca <2 x double>
  %8 = alloca double
  %9 = alloca <2 x double>
  %10 = alloca double
  %11 = alloca <2 x double>
  %12 = alloca double
  %13 = alloca <2 x double>
  %14 = alloca double
  %15 = alloca <2 x double>
  %16 = alloca double
  %17 = alloca <2 x double>
  %18 = alloca double
  %19 = alloca <2 x double>
  %20 = alloca double
  %21 = alloca <2 x double>
  %22 = alloca double
  %23 = alloca <2 x double>
  %24 = alloca double
  %25 = alloca <2 x double>
  %26 = alloca double
  %27 = alloca <2 x double>
  %28 = alloca double
  %29 = alloca <2 x double>
  %30 = alloca double
  %31 = alloca <2 x double>
  %32 = alloca double
  %33 = alloca double
  %34 = alloca double
  %35 = alloca double
  %36 = alloca double
  %37 = alloca <2 x double>
  %38 = alloca double
  %39 = alloca <2 x double>
  %40 = alloca double
  %41 = alloca double
  %42 = alloca double
  %43 = alloca <2 x double>
  %44 = alloca double
  %45 = alloca <2 x double>
  %46 = alloca double
  %47 = alloca <2 x double>
  %48 = alloca double
  %49 = alloca <2 x double>
  %50 = alloca double
  %51 = alloca double
  %52 = alloca <2 x double>
  %53 = alloca double
  %54 = alloca double
  %55 = alloca <2 x double>
  %56 = alloca double
  %57 = alloca <2 x double>
  %58 = alloca double
  %59 = alloca <2 x double>
  %60 = alloca double
  %61 = alloca double
  %62 = alloca <2 x double>
  %63 = alloca double
  %64 = alloca double
  %65 = alloca double
  %66 = alloca <2 x double>
  %67 = alloca double
  %68 = alloca double
  %69 = alloca double
  %70 = alloca double
  %71 = alloca double
  %72 = alloca <2 x double>
  %73 = alloca double
  %74 = alloca <4 x double>
  %75 = alloca <2 x double>
  %76 = alloca double
  %77 = alloca double
  %78 = alloca double
  %79 = alloca double
  %80 = alloca <2 x double>
  %81 = alloca double
  %82 = alloca double
  %83 = alloca double
  %84 = alloca <2 x double>
  %85 = alloca double
  %86 = alloca double
  %87 = alloca double
  %88 = alloca double
  %89 = alloca <2 x double>
  %90 = alloca double
  %91 = alloca <2 x double>
  %92 = alloca <2 x double>
  %93 = alloca double
  %94 = alloca double
  %95 = alloca <2 x double>
  %96 = alloca double
  %97 = alloca <2 x double>
  %98 = alloca <2 x double>
  %99 = alloca double
  %100 = alloca double
  %101 = alloca double
  %102 = alloca double
  %103 = alloca double
  %104 = alloca double
  %105 = alloca double
  %106 = alloca <2 x double>
  %107 = alloca double
  %108 = alloca <2 x double>
  %109 = alloca double
  %110 = alloca <2 x double>
  %111 = alloca double
  %112 = alloca <2 x double>
  %113 = alloca double
  %114 = alloca <2 x double>
  %115 = alloca double
  %116 = alloca <2 x double>
  %117 = alloca double
  %118 = alloca <2 x double>
  %119 = alloca double
  %120 = alloca <2 x double>
  %121 = alloca double
  %122 = alloca <2 x double>
  %123 = alloca double
  %124 = alloca double
  %125 = alloca double
  %126 = alloca <2 x double>
  %127 = alloca double
  %128 = alloca double
  %129 = alloca double
  %130 = alloca double
  %131 = alloca <3 x double>
  %132 = alloca <2 x double>
  %133 = alloca double
  %134 = alloca double
  %135 = alloca double
  %136 = alloca <2 x double>
  %137 = alloca double
  %138 = alloca double
  %139 = alloca double
  %140 = alloca <2 x double>
  %141 = alloca double
  %142 = alloca double
  %143 = alloca double
  %144 = alloca <2 x double>
  %145 = alloca double
  %146 = alloca <2 x double>
  %147 = alloca <2 x double>
  %148 = alloca double
  %149 = alloca double
  %150 = alloca <2 x double>
  %151 = alloca double
  %152 = alloca <2 x double>
  %153 = alloca double
  %154 = alloca <2 x double>
  %155 = alloca double
  %156 = alloca double
  %157 = alloca <2 x double>
  %158 = alloca double
  %159 = alloca double
  %160 = alloca double
  %161 = alloca double
  %162 = alloca <2 x double>
  %163 = alloca double
  %164 = alloca <2 x double>
  %165 = alloca double
  %166 = alloca <2 x double>
  %167 = alloca double
  %168 = alloca <2 x double>
  %169 = alloca double
  %170 = alloca double
  %171 = alloca <2 x double>
  %172 = alloca double
  %173 = alloca <2 x double>
  %174 = alloca double
  %175 = alloca double
  %176 = alloca double
  %177 = alloca double
  %178 = alloca <2 x double>
  %179 = alloca <2 x double>
  %180 = alloca double
  %181 = alloca <2 x double>
  %182 = alloca double
  %183 = alloca <2 x double>
  %184 = alloca <2 x double>
  %185 = alloca double
  %186 = alloca double
  %187 = alloca double
  %188 = alloca double
  %189 = alloca double
  %190 = alloca <2 x double>
  %191 = alloca double
  %192 = alloca <2 x double>
  %193 = alloca double
  %194 = alloca double
  %195 = alloca <2 x double>
  %196 = alloca <2 x double>
  %197 = alloca double
  %198 = alloca <2 x double>
  %199 = alloca double
  %200 = alloca <2 x double>
  %201 = alloca <2 x double>
  %202 = alloca <2 x double>
  %203 = alloca double
  %204 = alloca <2 x double>
  %205 = alloca <2 x double>
  %206 = alloca double
  %207 = alloca <2 x double>
  %208 = alloca <2 x double>
  %209 = alloca double
  %210 = alloca double
  %211 = alloca double
  %212 = alloca <2 x double>
  %213 = alloca double
  %214 = alloca double
  %215 = alloca double
  %216 = alloca double
  %217 = alloca double
  %218 = alloca <2 x double>
  %219 = alloca double
  %220 = alloca double
  %221 = alloca double
  %222 = alloca double
  %223 = alloca double
  %224 = alloca <2 x double>
  %225 = alloca double
  %226 = alloca double
  %227 = alloca double
  %228 = alloca double
  %229 = alloca double
  %230 = alloca <2 x double>
  %231 = alloca double
  %232 = alloca double
  %233 = alloca double
  %234 = alloca <2 x double>
  %235 = alloca double
  %236 = alloca <2 x double>
  %237 = alloca <2 x double>
  %238 = alloca <2 x double>
  %239 = alloca double
  %240 = alloca <2 x double>
  %241 = alloca double
  %242 = alloca <2 x double>
  %243 = alloca double
  %244 = alloca <2 x double>
  %245 = alloca double
  %246 = alloca <2 x double>
  %247 = alloca double
  %248 = alloca <2 x double>
  %249 = alloca double
  %250 = alloca <2 x double>
  %251 = alloca double
  %252 = alloca <2 x double>
  %253 = alloca double
  %254 = alloca <2 x double>
  %255 = alloca double
  %256 = alloca <2 x double>
  %257 = alloca double
  %258 = alloca <2 x double>
  %259 = alloca double
  %260 = alloca <2 x double>
  %261 = alloca double
  %262 = alloca <2 x double>
  %263 = alloca double
  %264 = alloca <2 x double>
  %265 = alloca double
  %266 = alloca <2 x double>
  %267 = alloca double
  %268 = alloca double
  %269 = alloca double
  %270 = alloca double
  %271 = alloca double
  %272 = alloca <2 x double>
  %273 = alloca double
  %274 = alloca double
  %275 = alloca <2 x double>
  %276 = alloca double
  %277 = alloca <4 x double>
  %278 = alloca <4 x double>
  %279 = alloca <2 x double>
  %280 = alloca double
  %281 = alloca <2 x double>
  %282 = alloca <2 x double>
  %283 = alloca <2 x double>
  %284 = alloca double
  %285 = alloca double
  %286 = alloca double
  %287 = alloca <2 x double>
  %288 = alloca double
  %289 = alloca double
  %290 = alloca double
  %291 = alloca double
  %292 = alloca double
  %293 = alloca double
  %294 = alloca <2 x double>
  %295 = alloca double
  %296 = alloca <2 x double>
  %297 = alloca double
  %298 = alloca <2 x double>
  %299 = alloca <2 x double>
  %300 = alloca <2 x double>
  %p = alloca <2 x double>
  store <2 x double> zeroinitializer, <2 x double>* %p, !vex-initializer-store !3
  %pos1 = load <2 x double>, <2 x double>* %pos
  store <2 x double> %pos1, <2 x double>* %_p
  %x2 = load <2 x double>, <2 x double>* %x
  store <2 x double> %x2, <2 x double>* %0
  %y3 = load <2 x double>, <2 x double>* %y
  store <2 x double> %y3, <2 x double>* %1
  %o4 = load <2 x double>, <2 x double>* %o
  store <2 x double> %o4, <2 x double>* %2
  call void @"affine@UUUU"(<2 x double>* %_p, <2 x double>* %0, <2 x double>* %1, <2 x double>* %2)
  %T5 = load i64, i64* %T
  %return = call i64 @"not@II"(i64 %T5)
  %301 = icmp ne i64 %return, 0
  br i1 %301, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %_p6 = load <2 x double>, <2 x double>* %_p
  %w7 = load double, double* %w
  %cast = call <2 x double> @"set@UF"(double %w7)
  %output = call <2 x double> @"mul@UU"(<2 x double> %_p6, <2 x double> %cast)
  br label %UnifiedReturnBlock

false:                                            ; preds = %__llvm_entry
  %return9 = call i64 @"lt@III"(i64 %T5, i64 35)
  %302 = icmp ne i64 %return9, 0
  br i1 %302, label %true10, label %false11

true10:                                           ; preds = %false
  %return14 = call i64 @"lt@III"(i64 %T5, i64 18)
  %303 = icmp ne i64 %return14, 0
  br i1 %303, label %true15, label %false16

false11:                                          ; preds = %false
  %return352 = call i64 @"lt@III"(i64 %T5, i64 70)
  %304 = icmp ne i64 %return352, 0
  br i1 %304, label %true353, label %false354

end12:                                            ; preds = %false1129, %false948, %false354, %false733, %false496, %false336, %false149
  %_p1153 = load <2 x double>, <2 x double>* %_p
  br label %UnifiedReturnBlock

true15:                                           ; preds = %true10
  %return19 = call i64 @"eq@III"(i64 %T5, i64 1)
  %305 = icmp ne i64 %return19, 0
  br i1 %305, label %true20, label %false21

false16:                                          ; preds = %true10
  %return166 = call i64 @"eq@III"(i64 %T5, i64 18)
  %306 = icmp ne i64 %return166, 0
  br i1 %306, label %true167, label %false168

true20:                                           ; preds = %true15
  %_p23 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p23, <2 x double>* %3
  %w24 = load double, double* %w
  store double %w24, double* %4
  call void @"V_SINUSOIDAL@UUF"(<2 x double>* %p, <2 x double>* %3, double* %4)
  %p25 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false21:                                          ; preds = %true15
  %return27 = call i64 @"eq@III"(i64 %T5, i64 2)
  %307 = icmp ne i64 %return27, 0
  br i1 %307, label %true28, label %false29

true28:                                           ; preds = %false21
  %_p31 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p31, <2 x double>* %5
  %w32 = load double, double* %w
  store double %w32, double* %6
  call void @"V_SPHERICAL@UUF"(<2 x double>* %p, <2 x double>* %5, double* %6)
  %p33 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false29:                                          ; preds = %false21
  %return35 = call i64 @"eq@III"(i64 %T5, i64 3)
  %308 = icmp ne i64 %return35, 0
  br i1 %308, label %true36, label %false37

true36:                                           ; preds = %false29
  %_p39 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p39, <2 x double>* %7
  %w40 = load double, double* %w
  store double %w40, double* %8
  call void @"V_SWIRL@UUF"(<2 x double>* %p, <2 x double>* %7, double* %8)
  %p41 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false37:                                          ; preds = %false29
  %return43 = call i64 @"eq@III"(i64 %T5, i64 4)
  %309 = icmp ne i64 %return43, 0
  br i1 %309, label %true44, label %false45

true44:                                           ; preds = %false37
  %_p47 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p47, <2 x double>* %9
  %w48 = load double, double* %w
  store double %w48, double* %10
  call void @"V_HORSESHOE@UUF"(<2 x double>* %p, <2 x double>* %9, double* %10)
  %p49 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false45:                                          ; preds = %false37
  %return51 = call i64 @"eq@III"(i64 %T5, i64 5)
  %310 = icmp ne i64 %return51, 0
  br i1 %310, label %true52, label %false53

true52:                                           ; preds = %false45
  %_p55 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p55, <2 x double>* %11
  %w56 = load double, double* %w
  store double %w56, double* %12
  call void @"V_POLAR@UUF"(<2 x double>* %p, <2 x double>* %11, double* %12)
  %p57 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false53:                                          ; preds = %false45
  %return59 = call i64 @"eq@III"(i64 %T5, i64 6)
  %311 = icmp ne i64 %return59, 0
  br i1 %311, label %true60, label %false61

true60:                                           ; preds = %false53
  %_p63 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p63, <2 x double>* %13
  %w64 = load double, double* %w
  store double %w64, double* %14
  call void @"V_HANDKERCHIEF@UUF"(<2 x double>* %p, <2 x double>* %13, double* %14)
  %p65 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false61:                                          ; preds = %false53
  %return67 = call i64 @"eq@III"(i64 %T5, i64 7)
  %312 = icmp ne i64 %return67, 0
  br i1 %312, label %true68, label %false69

true68:                                           ; preds = %false61
  %_p71 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p71, <2 x double>* %15
  %w72 = load double, double* %w
  store double %w72, double* %16
  call void @"V_HEART@UUF"(<2 x double>* %p, <2 x double>* %15, double* %16)
  %p73 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false69:                                          ; preds = %false61
  %return75 = call i64 @"eq@III"(i64 %T5, i64 8)
  %313 = icmp ne i64 %return75, 0
  br i1 %313, label %true76, label %false77

true76:                                           ; preds = %false69
  %_p79 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p79, <2 x double>* %17
  %w80 = load double, double* %w
  store double %w80, double* %18
  call void @"V_DISC@UUF"(<2 x double>* %p, <2 x double>* %17, double* %18)
  %p81 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false77:                                          ; preds = %false69
  %return83 = call i64 @"eq@III"(i64 %T5, i64 9)
  %314 = icmp ne i64 %return83, 0
  br i1 %314, label %true84, label %false85

true84:                                           ; preds = %false77
  %_p87 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p87, <2 x double>* %19
  %w88 = load double, double* %w
  store double %w88, double* %20
  call void @"V_SPIRAL@UUF"(<2 x double>* %p, <2 x double>* %19, double* %20)
  %p89 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false85:                                          ; preds = %false77
  %return91 = call i64 @"eq@III"(i64 %T5, i64 10)
  %315 = icmp ne i64 %return91, 0
  br i1 %315, label %true92, label %false93

true92:                                           ; preds = %false85
  %_p95 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p95, <2 x double>* %21
  %w96 = load double, double* %w
  store double %w96, double* %22
  call void @"V_HIPERBOLIC@UUF"(<2 x double>* %p, <2 x double>* %21, double* %22)
  %p97 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false93:                                          ; preds = %false85
  %return99 = call i64 @"eq@III"(i64 %T5, i64 11)
  %316 = icmp ne i64 %return99, 0
  br i1 %316, label %true100, label %false101

true100:                                          ; preds = %false93
  %_p103 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p103, <2 x double>* %23
  %w104 = load double, double* %w
  store double %w104, double* %24
  call void @"V_DIAMOND@UUF"(<2 x double>* %p, <2 x double>* %23, double* %24)
  %p105 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false101:                                         ; preds = %false93
  %return107 = call i64 @"eq@III"(i64 %T5, i64 12)
  %317 = icmp ne i64 %return107, 0
  br i1 %317, label %true108, label %false109

true108:                                          ; preds = %false101
  %_p111 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p111, <2 x double>* %25
  %w112 = load double, double* %w
  store double %w112, double* %26
  call void @"V_EX@UUF"(<2 x double>* %p, <2 x double>* %25, double* %26)
  %p113 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false109:                                         ; preds = %false101
  %return115 = call i64 @"eq@III"(i64 %T5, i64 13)
  %318 = icmp ne i64 %return115, 0
  br i1 %318, label %true116, label %false117

true116:                                          ; preds = %false109
  %_p119 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p119, <2 x double>* %27
  %w120 = load double, double* %w
  store double %w120, double* %28
  call void @"V_JULIA@UUF"(<2 x double>* %p, <2 x double>* %27, double* %28)
  %p121 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false117:                                         ; preds = %false109
  %return123 = call i64 @"eq@III"(i64 %T5, i64 14)
  %319 = icmp ne i64 %return123, 0
  br i1 %319, label %true124, label %false125

true124:                                          ; preds = %false117
  %_p127 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p127, <2 x double>* %29
  %w128 = load double, double* %w
  store double %w128, double* %30
  call void @"V_BENT@UUF"(<2 x double>* %p, <2 x double>* %29, double* %30)
  %p129 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false125:                                         ; preds = %false117
  %return131 = call i64 @"eq@III"(i64 %T5, i64 15)
  %320 = icmp ne i64 %return131, 0
  br i1 %320, label %true132, label %false133

true132:                                          ; preds = %false125
  %_p135 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p135, <2 x double>* %31
  %w136 = load double, double* %w
  store double %w136, double* %32
  %o137 = load <2 x double>, <2 x double>* %o
  %return138 = call double @"getcomp@FUI"(<2 x double> %o137, i64 0)
  store double %return138, double* %33
  %x139 = load <2 x double>, <2 x double>* %x
  %return140 = call double @"getcomp@FUI"(<2 x double> %x139, i64 1)
  store double %return140, double* %34
  %y141 = load <2 x double>, <2 x double>* %y
  %return142 = call double @"getcomp@FUI"(<2 x double> %y141, i64 1)
  store double %return142, double* %35
  %o143 = load <2 x double>, <2 x double>* %o
  %return144 = call double @"getcomp@FUI"(<2 x double> %o143, i64 1)
  store double %return144, double* %36
  call void @"V_WAVES@UUFFFFF"(<2 x double>* %p, <2 x double>* %31, double* %32, double* %33, double* %34, double* %35, double* %36)
  %p145 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false133:                                         ; preds = %false125
  %return147 = call i64 @"eq@III"(i64 %T5, i64 16)
  %321 = icmp ne i64 %return147, 0
  br i1 %321, label %true148, label %false149

true148:                                          ; preds = %false133
  %_p151 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p151, <2 x double>* %37
  %w152 = load double, double* %w
  store double %w152, double* %38
  call void @"V_FISHEYE@UUF"(<2 x double>* %p, <2 x double>* %37, double* %38)
  %p153 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false149:                                         ; preds = %false133
  %return155 = call i64 @"eq@III"(i64 %T5, i64 17)
  %322 = icmp ne i64 %return155, 0
  br i1 %322, label %true156, label %end12

true156:                                          ; preds = %false149
  %_p158 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p158, <2 x double>* %39
  %w159 = load double, double* %w
  store double %w159, double* %40
  %o160 = load <2 x double>, <2 x double>* %o
  %return161 = call double @"getcomp@FUI"(<2 x double> %o160, i64 0)
  store double %return161, double* %41
  %o162 = load <2 x double>, <2 x double>* %o
  %return163 = call double @"getcomp@FUI"(<2 x double> %o162, i64 1)
  store double %return163, double* %42
  call void @"V_POPCORN@UUFFF"(<2 x double>* %p, <2 x double>* %39, double* %40, double* %41, double* %42)
  %p164 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true167:                                          ; preds = %false16
  %_p170 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p170, <2 x double>* %43
  %w171 = load double, double* %w
  store double %w171, double* %44
  call void @"V_EXPONENTIAL@UUF"(<2 x double>* %p, <2 x double>* %43, double* %44)
  %p172 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false168:                                         ; preds = %false16
  %return174 = call i64 @"eq@III"(i64 %T5, i64 19)
  %323 = icmp ne i64 %return174, 0
  br i1 %323, label %true175, label %false176

true175:                                          ; preds = %false168
  %_p178 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p178, <2 x double>* %45
  %w179 = load double, double* %w
  store double %w179, double* %46
  call void @"V_POWER@UUF"(<2 x double>* %p, <2 x double>* %45, double* %46)
  %p180 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false176:                                         ; preds = %false168
  %return182 = call i64 @"eq@III"(i64 %T5, i64 20)
  %324 = icmp ne i64 %return182, 0
  br i1 %324, label %true183, label %false184

true183:                                          ; preds = %false176
  %_p186 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p186, <2 x double>* %47
  %w187 = load double, double* %w
  store double %w187, double* %48
  call void @"V_COSINE@UUF"(<2 x double>* %p, <2 x double>* %47, double* %48)
  %p188 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false184:                                         ; preds = %false176
  %return190 = call i64 @"eq@III"(i64 %T5, i64 21)
  %325 = icmp ne i64 %return190, 0
  br i1 %325, label %true191, label %false192

true191:                                          ; preds = %false184
  %_p194 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p194, <2 x double>* %49
  %w195 = load double, double* %w
  store double %w195, double* %50
  %o196 = load <2 x double>, <2 x double>* %o
  %return197 = call double @"getcomp@FUI"(<2 x double> %o196, i64 0)
  store double %return197, double* %51
  call void @"V_RINGS@UUFF"(<2 x double>* %p, <2 x double>* %49, double* %50, double* %51)
  %p198 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false192:                                         ; preds = %false184
  %return200 = call i64 @"eq@III"(i64 %T5, i64 22)
  %326 = icmp ne i64 %return200, 0
  br i1 %326, label %true201, label %false202

true201:                                          ; preds = %false192
  %_p204 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p204, <2 x double>* %52
  %w205 = load double, double* %w
  store double %w205, double* %53
  %o206 = load <2 x double>, <2 x double>* %o
  %return207 = call double @"getcomp@FUI"(<2 x double> %o206, i64 0)
  store double %return207, double* %54
  call void @"V_FAN@UUFF"(<2 x double>* %p, <2 x double>* %52, double* %53, double* %54)
  %p208 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false202:                                         ; preds = %false192
  %return210 = call i64 @"eq@III"(i64 %T5, i64 23)
  %327 = icmp ne i64 %return210, 0
  br i1 %327, label %true211, label %false212

true211:                                          ; preds = %false202
  %_p214 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p214, <2 x double>* %55
  %w215 = load double, double* %w
  store double %w215, double* %56
  call void @"V_BUBBLE@UUF"(<2 x double>* %p, <2 x double>* %55, double* %56)
  %p216 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false212:                                         ; preds = %false202
  %return218 = call i64 @"eq@III"(i64 %T5, i64 24)
  %328 = icmp ne i64 %return218, 0
  br i1 %328, label %true219, label %false220

true219:                                          ; preds = %false212
  %_p222 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p222, <2 x double>* %57
  %w223 = load double, double* %w
  store double %w223, double* %58
  call void @"V_CYLINDER@UUF"(<2 x double>* %p, <2 x double>* %57, double* %58)
  %p224 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false220:                                         ; preds = %false212
  %return226 = call i64 @"eq@III"(i64 %T5, i64 25)
  %329 = icmp ne i64 %return226, 0
  br i1 %329, label %true227, label %false228

true227:                                          ; preds = %false220
  %_p230 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p230, <2 x double>* %59
  %w231 = load double, double* %w
  store double %w231, double* %60
  call void @"V_EYEFISH@UUF"(<2 x double>* %p, <2 x double>* %59, double* %60)
  %p232 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false228:                                         ; preds = %false220
  %return234 = call i64 @"eq@III"(i64 %T5, i64 26)
  %330 = icmp ne i64 %return234, 0
  br i1 %330, label %true235, label %false236

true235:                                          ; preds = %false228
  %w238 = load double, double* %w
  store double %w238, double* %61
  call void @"V_BLUR@UF"(<2 x double>* %p, double* %61)
  %p239 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false236:                                         ; preds = %false228
  %return241 = call i64 @"eq@III"(i64 %T5, i64 27)
  %331 = icmp ne i64 %return241, 0
  br i1 %331, label %true242, label %false243

true242:                                          ; preds = %false236
  %prx245 = load i8*, i8** %prx
  %return246 = call i8* @"concat@SSS"(i8* %prx245, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @114, i64 0, i64 0))
  %return247 = call <2 x double> @"chu@US"(i8* %return246)
  %_p248 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p248, <2 x double>* %62
  %w249 = load double, double* %w
  store double %w249, double* %63
  %return251 = call double @"getcomp@FUI"(<2 x double> %return247, i64 0)
  store double %return251, double* %64
  %return253 = call double @"getcomp@FUI"(<2 x double> %return247, i64 1)
  store double %return253, double* %65
  call void @"V_CURL@UUFFF"(<2 x double>* %p, <2 x double>* %62, double* %63, double* %64, double* %65)
  %p254 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false243:                                         ; preds = %false236
  %return256 = call i64 @"eq@III"(i64 %T5, i64 28)
  %332 = icmp ne i64 %return256, 0
  br i1 %332, label %true257, label %false258

true257:                                          ; preds = %false243
  %prx260 = load i8*, i8** %prx
  %return261 = call i8* @"concat@SSS"(i8* %prx260, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @115, i64 0, i64 0))
  %return262 = call <4 x double> @"chp@PS"(i8* %return261)
  %_p263 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p263, <2 x double>* %66
  %w264 = load double, double* %w
  store double %w264, double* %67
  %return266 = call double @"getcomp@FPI"(<4 x double> %return262, i64 0)
  store double %return266, double* %68
  %return268 = call double @"getcomp@FPI"(<4 x double> %return262, i64 1)
  store double %return268, double* %69
  %return270 = call double @"getcomp@FPI"(<4 x double> %return262, i64 2)
  store double %return270, double* %70
  %return272 = call double @"getcomp@FPI"(<4 x double> %return262, i64 3)
  store double %return272, double* %71
  call void @"V_NGON@UUFFFFF"(<2 x double>* %p, <2 x double>* %66, double* %67, double* %68, double* %69, double* %70, double* %71)
  %p273 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false258:                                         ; preds = %false243
  %return275 = call i64 @"eq@III"(i64 %T5, i64 29)
  %333 = icmp ne i64 %return275, 0
  br i1 %333, label %true276, label %false277

true276:                                          ; preds = %false258
  %prx279 = load i8*, i8** %prx
  %return280 = call i8* @"concat@SSS"(i8* %prx279, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @116, i64 0, i64 0))
  %return281 = call <4 x double> @"chp@PS"(i8* %return280)
  %_p282 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p282, <2 x double>* %72
  %w283 = load double, double* %w
  store double %w283, double* %73
  store <4 x double> %return281, <4 x double>* %74
  call void @"V_PDJ@UUFP"(<2 x double>* %p, <2 x double>* %72, double* %73, <4 x double>* %74)
  %p285 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false277:                                         ; preds = %false258
  %return287 = call i64 @"eq@III"(i64 %T5, i64 30)
  %334 = icmp ne i64 %return287, 0
  br i1 %334, label %true288, label %false289

true288:                                          ; preds = %false277
  %prx291 = load i8*, i8** %prx
  %return292 = call i8* @"concat@SSS"(i8* %prx291, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @117, i64 0, i64 0))
  %return293 = call <3 x double> @"chv@VS"(i8* %return292)
  %_p294 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p294, <2 x double>* %75
  %w295 = load double, double* %w
  store double %w295, double* %76
  %return297 = call double @"getcomp@FVI"(<3 x double> %return293, i64 1)
  store double %return297, double* %77
  %return299 = call double @"getcomp@FVI"(<3 x double> %return293, i64 0)
  store double %return299, double* %78
  %return301 = call double @"getcomp@FVI"(<3 x double> %return293, i64 2)
  store double %return301, double* %79
  call void @"V_BLOB@UUFFFF"(<2 x double>* %p, <2 x double>* %75, double* %76, double* %77, double* %78, double* %79)
  %p302 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false289:                                         ; preds = %false277
  %return304 = call i64 @"eq@III"(i64 %T5, i64 31)
  %335 = icmp ne i64 %return304, 0
  br i1 %335, label %true305, label %false306

true305:                                          ; preds = %false289
  %prx308 = load i8*, i8** %prx
  %return309 = call i8* @"concat@SSS"(i8* %prx308, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @118, i64 0, i64 0))
  %return310 = call <2 x double> @"chu@US"(i8* %return309)
  %_p311 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p311, <2 x double>* %80
  %w312 = load double, double* %w
  store double %w312, double* %81
  %return314 = call double @"getcomp@FUI"(<2 x double> %return310, i64 0)
  store double %return314, double* %82
  %return316 = call double @"getcomp@FUI"(<2 x double> %return310, i64 1)
  store double %return316, double* %83
  call void @"V_JULIAN@UUFFF"(<2 x double>* %p, <2 x double>* %80, double* %81, double* %82, double* %83)
  %p317 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false306:                                         ; preds = %false289
  %return319 = call i64 @"eq@III"(i64 %T5, i64 32)
  %336 = icmp ne i64 %return319, 0
  br i1 %336, label %true320, label %false321

true320:                                          ; preds = %false306
  %prx323 = load i8*, i8** %prx
  %return324 = call i8* @"concat@SSS"(i8* %prx323, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @119, i64 0, i64 0))
  %return325 = call <2 x double> @"chu@US"(i8* %return324)
  %_p326 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p326, <2 x double>* %84
  %w327 = load double, double* %w
  store double %w327, double* %85
  %return329 = call double @"getcomp@FUI"(<2 x double> %return325, i64 0)
  store double %return329, double* %86
  %return331 = call double @"getcomp@FUI"(<2 x double> %return325, i64 1)
  store double %return331, double* %87
  call void @"V_JULIASCOPE@UUFFF"(<2 x double>* %p, <2 x double>* %84, double* %85, double* %86, double* %87)
  %p332 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false321:                                         ; preds = %false306
  %return334 = call i64 @"eq@III"(i64 %T5, i64 33)
  %337 = icmp ne i64 %return334, 0
  br i1 %337, label %true335, label %false336

true335:                                          ; preds = %false321
  %w338 = load double, double* %w
  store double %w338, double* %88
  call void @"V_GAUSSIAN@UF"(<2 x double>* %p, double* %88)
  %p339 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false336:                                         ; preds = %false321
  %return341 = call i64 @"eq@III"(i64 %T5, i64 34)
  %338 = icmp ne i64 %return341, 0
  br i1 %338, label %true342, label %end12

true342:                                          ; preds = %false336
  %prx344 = load i8*, i8** %prx
  %return345 = call i8* @"concat@SSS"(i8* %prx344, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @120, i64 0, i64 0))
  %return346 = call <2 x double> @"chu@US"(i8* %return345)
  %_p347 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p347, <2 x double>* %89
  %w348 = load double, double* %w
  store double %w348, double* %90
  store <2 x double> %return346, <2 x double>* %91
  call void @"V_FAN2@UUFU"(<2 x double>* %p, <2 x double>* %89, double* %90, <2 x double>* %91)
  %p350 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true353:                                          ; preds = %false11
  %return357 = call i64 @"lt@III"(i64 %T5, i64 50)
  %339 = icmp ne i64 %return357, 0
  br i1 %339, label %true358, label %false359

false354:                                         ; preds = %false11
  %return754 = call i64 @"lt@III"(i64 %T5, i64 102)
  %340 = icmp ne i64 %return754, 0
  br i1 %340, label %true755, label %end12

true358:                                          ; preds = %true353
  %return362 = call i64 @"eq@III"(i64 %T5, i64 35)
  %341 = icmp ne i64 %return362, 0
  br i1 %341, label %true363, label %false364

false359:                                         ; preds = %true353
  %return529 = call i64 @"eq@III"(i64 %T5, i64 50)
  %342 = icmp ne i64 %return529, 0
  br i1 %342, label %true530, label %false531

true363:                                          ; preds = %true358
  %prx366 = load i8*, i8** %prx
  %return367 = call i8* @"concat@SSS"(i8* %prx366, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @121, i64 0, i64 0))
  %return368 = call double @"chf@FS"(i8* %return367)
  %_p369 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p369, <2 x double>* %92
  %w370 = load double, double* %w
  store double %w370, double* %93
  store double %return368, double* %94
  call void @"V_RINGS2@UUFF"(<2 x double>* %p, <2 x double>* %92, double* %93, double* %94)
  %p372 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false364:                                         ; preds = %true358
  %return374 = call i64 @"eq@III"(i64 %T5, i64 36)
  %343 = icmp ne i64 %return374, 0
  br i1 %343, label %true375, label %false376

true375:                                          ; preds = %false364
  %prx378 = load i8*, i8** %prx
  %return379 = call i8* @"concat@SSS"(i8* %prx378, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @122, i64 0, i64 0))
  %return380 = call <2 x double> @"chu@US"(i8* %return379)
  %_p381 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p381, <2 x double>* %95
  %w382 = load double, double* %w
  store double %w382, double* %96
  store <2 x double> %return380, <2 x double>* %97
  call void @"V_RECTANGLES@UUFU"(<2 x double>* %p, <2 x double>* %95, double* %96, <2 x double>* %97)
  %p384 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false376:                                         ; preds = %false364
  %return386 = call i64 @"eq@III"(i64 %T5, i64 37)
  %344 = icmp ne i64 %return386, 0
  br i1 %344, label %true387, label %false388

true387:                                          ; preds = %false376
  %prx390 = load i8*, i8** %prx
  %return391 = call i8* @"concat@SSS"(i8* %prx390, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @123, i64 0, i64 0))
  %return392 = call <2 x double> @"chu@US"(i8* %return391)
  %_p393 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p393, <2 x double>* %98
  %w394 = load double, double* %w
  store double %w394, double* %99
  %return396 = call double @"getcomp@FUI"(<2 x double> %return392, i64 0)
  store double %return396, double* %100
  %return398 = call double @"getcomp@FUI"(<2 x double> %return392, i64 1)
  store double %return398, double* %101
  call void @"V_RADIALBLUR@UUFFF"(<2 x double>* %p, <2 x double>* %98, double* %99, double* %100, double* %101)
  %p399 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false388:                                         ; preds = %false376
  %return401 = call i64 @"eq@III"(i64 %T5, i64 38)
  %345 = icmp ne i64 %return401, 0
  br i1 %345, label %true402, label %false403

true402:                                          ; preds = %false388
  %prx405 = load i8*, i8** %prx
  %return406 = call i8* @"concat@SSS"(i8* %prx405, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @124, i64 0, i64 0))
  %return407 = call <3 x double> @"chv@VS"(i8* %return406)
  %w408 = load double, double* %w
  store double %w408, double* %102
  %return410 = call double @"getcomp@FVI"(<3 x double> %return407, i64 0)
  store double %return410, double* %103
  %return412 = call double @"getcomp@FVI"(<3 x double> %return407, i64 1)
  store double %return412, double* %104
  %return414 = call double @"getcomp@FVI"(<3 x double> %return407, i64 2)
  store double %return414, double* %105
  call void @"V_PIE@UFFFF"(<2 x double>* %p, double* %102, double* %103, double* %104, double* %105)
  %p415 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false403:                                         ; preds = %false388
  %return417 = call i64 @"eq@III"(i64 %T5, i64 39)
  %346 = icmp ne i64 %return417, 0
  br i1 %346, label %true418, label %false419

true418:                                          ; preds = %false403
  %w421 = load double, double* %w
  store double %w421, double* %107
  call void @"V_ARCH@UUF"(<2 x double>* %p, <2 x double>* %106, double* %107)
  %p422 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false419:                                         ; preds = %false403
  %return424 = call i64 @"eq@III"(i64 %T5, i64 40)
  %347 = icmp ne i64 %return424, 0
  br i1 %347, label %true425, label %false426

true425:                                          ; preds = %false419
  %_p428 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p428, <2 x double>* %108
  %w429 = load double, double* %w
  store double %w429, double* %109
  call void @"V_TANGENT@UUF"(<2 x double>* %p, <2 x double>* %108, double* %109)
  %p430 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false426:                                         ; preds = %false419
  %return432 = call i64 @"eq@III"(i64 %T5, i64 41)
  %348 = icmp ne i64 %return432, 0
  br i1 %348, label %true433, label %false434

true433:                                          ; preds = %false426
  %w436 = load double, double* %w
  store double %w436, double* %111
  call void @"V_SQUARE@UUF"(<2 x double>* %p, <2 x double>* %110, double* %111)
  %p437 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false434:                                         ; preds = %false426
  %return439 = call i64 @"eq@III"(i64 %T5, i64 42)
  %349 = icmp ne i64 %return439, 0
  br i1 %349, label %true440, label %false441

true440:                                          ; preds = %false434
  %_p443 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p443, <2 x double>* %112
  %w444 = load double, double* %w
  store double %w444, double* %113
  call void @"V_RAYS@UUF"(<2 x double>* %p, <2 x double>* %112, double* %113)
  %p445 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false441:                                         ; preds = %false434
  %return447 = call i64 @"eq@III"(i64 %T5, i64 43)
  %350 = icmp ne i64 %return447, 0
  br i1 %350, label %true448, label %false449

true448:                                          ; preds = %false441
  %_p451 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p451, <2 x double>* %114
  %w452 = load double, double* %w
  store double %w452, double* %115
  call void @"V_BLADE@UUF"(<2 x double>* %p, <2 x double>* %114, double* %115)
  %p453 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false449:                                         ; preds = %false441
  %return455 = call i64 @"eq@III"(i64 %T5, i64 44)
  %351 = icmp ne i64 %return455, 0
  br i1 %351, label %true456, label %false457

true456:                                          ; preds = %false449
  %_p459 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p459, <2 x double>* %116
  %w460 = load double, double* %w
  store double %w460, double* %117
  call void @"V_SECANT2@UUF"(<2 x double>* %p, <2 x double>* %116, double* %117)
  %p461 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false457:                                         ; preds = %false449
  %return463 = call i64 @"eq@III"(i64 %T5, i64 45)
  %352 = icmp ne i64 %return463, 0
  br i1 %352, label %true464, label %false465

true464:                                          ; preds = %false457
  %_p467 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p467, <2 x double>* %118
  %w468 = load double, double* %w
  store double %w468, double* %119
  call void @"V_TWINTRIAN@UUF"(<2 x double>* %p, <2 x double>* %118, double* %119)
  %p469 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false465:                                         ; preds = %false457
  %return471 = call i64 @"eq@III"(i64 %T5, i64 46)
  %353 = icmp ne i64 %return471, 0
  br i1 %353, label %true472, label %false473

true472:                                          ; preds = %false465
  %_p475 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p475, <2 x double>* %120
  %w476 = load double, double* %w
  store double %w476, double* %121
  call void @"V_CROSS@UUF"(<2 x double>* %p, <2 x double>* %120, double* %121)
  %p477 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false473:                                         ; preds = %false465
  %return479 = call i64 @"eq@III"(i64 %T5, i64 47)
  %354 = icmp ne i64 %return479, 0
  br i1 %354, label %true480, label %false481

true480:                                          ; preds = %false473
  %prx483 = load i8*, i8** %prx
  %return484 = call i8* @"concat@SSS"(i8* %prx483, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @125, i64 0, i64 0))
  %return485 = call <2 x double> @"chu@US"(i8* %return484)
  %_p486 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p486, <2 x double>* %122
  %w487 = load double, double* %w
  store double %w487, double* %123
  %return489 = call double @"getcomp@FUI"(<2 x double> %return485, i64 0)
  store double %return489, double* %124
  %return491 = call double @"getcomp@FUI"(<2 x double> %return485, i64 1)
  store double %return491, double* %125
  call void @"V_DISC2_FF@UUFFF"(<2 x double>* %p, <2 x double>* %122, double* %123, double* %124, double* %125)
  %p492 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false481:                                         ; preds = %false473
  %return494 = call i64 @"eq@III"(i64 %T5, i64 48)
  %355 = icmp ne i64 %return494, 0
  br i1 %355, label %true495, label %false496

true495:                                          ; preds = %false481
  %prx498 = load i8*, i8** %prx
  %return499 = call i8* @"concat@SSS"(i8* %prx498, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @126, i64 0, i64 0))
  %return500 = call <3 x double> @"chv@VS"(i8* %return499)
  %return502 = call i8* @"concat@SSS"(i8* %prx498, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @127, i64 0, i64 0))
  %return503 = call <3 x double> @"chv@VS"(i8* %return502)
  %_p504 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p504, <2 x double>* %126
  %w505 = load double, double* %w
  store double %w505, double* %127
  %return507 = call double @"getcomp@FVI"(<3 x double> %return500, i64 1)
  store double %return507, double* %128
  %return509 = call double @"getcomp@FVI"(<3 x double> %return500, i64 0)
  store double %return509, double* %129
  %return511 = call double @"getcomp@FVI"(<3 x double> %return500, i64 2)
  store double %return511, double* %130
  store <3 x double> %return503, <3 x double>* %131
  call void @"V_SUPERSHAPE@UUFFFFV"(<2 x double>* %p, <2 x double>* %126, double* %127, double* %128, double* %129, double* %130, <3 x double>* %131)
  %p513 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false496:                                         ; preds = %false481
  %return515 = call i64 @"eq@III"(i64 %T5, i64 49)
  %356 = icmp ne i64 %return515, 0
  br i1 %356, label %true516, label %end12

true516:                                          ; preds = %false496
  %prx518 = load i8*, i8** %prx
  %return519 = call i8* @"concat@SSS"(i8* %prx518, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @128, i64 0, i64 0))
  %return520 = call <2 x double> @"chu@US"(i8* %return519)
  %_p521 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p521, <2 x double>* %132
  %w522 = load double, double* %w
  store double %w522, double* %133
  %return524 = call double @"getcomp@FUI"(<2 x double> %return520, i64 0)
  store double %return524, double* %134
  %return526 = call double @"getcomp@FUI"(<2 x double> %return520, i64 1)
  store double %return526, double* %135
  call void @"V_FLOWER@UUFFF"(<2 x double>* %p, <2 x double>* %132, double* %133, double* %134, double* %135)
  %p527 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true530:                                          ; preds = %false359
  %prx533 = load i8*, i8** %prx
  %return534 = call i8* @"concat@SSS"(i8* %prx533, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @129, i64 0, i64 0))
  %return535 = call <2 x double> @"chu@US"(i8* %return534)
  %_p536 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p536, <2 x double>* %136
  %w537 = load double, double* %w
  store double %w537, double* %137
  %return539 = call double @"getcomp@FUI"(<2 x double> %return535, i64 0)
  store double %return539, double* %138
  %return541 = call double @"getcomp@FUI"(<2 x double> %return535, i64 1)
  store double %return541, double* %139
  call void @"V_CONIC@UUFFF"(<2 x double>* %p, <2 x double>* %136, double* %137, double* %138, double* %139)
  %p542 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false531:                                         ; preds = %false359
  %return544 = call i64 @"eq@III"(i64 %T5, i64 51)
  %357 = icmp ne i64 %return544, 0
  br i1 %357, label %true545, label %false546

true545:                                          ; preds = %false531
  %prx548 = load i8*, i8** %prx
  %return549 = call i8* @"concat@SSS"(i8* %prx548, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @130, i64 0, i64 0))
  %return550 = call <2 x double> @"chu@US"(i8* %return549)
  %_p551 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p551, <2 x double>* %140
  %w552 = load double, double* %w
  store double %w552, double* %141
  %return554 = call double @"getcomp@FUI"(<2 x double> %return550, i64 0)
  store double %return554, double* %142
  %return556 = call double @"getcomp@FUI"(<2 x double> %return550, i64 1)
  store double %return556, double* %143
  call void @"V_PARABOLA@UUFFF"(<2 x double>* %p, <2 x double>* %140, double* %141, double* %142, double* %143)
  %p557 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false546:                                         ; preds = %false531
  %return559 = call i64 @"eq@III"(i64 %T5, i64 52)
  %358 = icmp ne i64 %return559, 0
  br i1 %358, label %true560, label %false561

true560:                                          ; preds = %false546
  %prx563 = load i8*, i8** %prx
  %return564 = call i8* @"concat@SSS"(i8* %prx563, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @131, i64 0, i64 0))
  %return565 = call <2 x double> @"chu@US"(i8* %return564)
  %_p566 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p566, <2 x double>* %144
  %w567 = load double, double* %w
  store double %w567, double* %145
  store <2 x double> %return565, <2 x double>* %146
  call void @"V_BENT2@UUFU"(<2 x double>* %p, <2 x double>* %144, double* %145, <2 x double>* %146)
  %p569 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false561:                                         ; preds = %false546
  %return571 = call i64 @"eq@III"(i64 %T5, i64 53)
  %359 = icmp ne i64 %return571, 0
  br i1 %359, label %true572, label %false573

true572:                                          ; preds = %false561
  %prx575 = load i8*, i8** %prx
  %return576 = call i8* @"concat@SSS"(i8* %prx575, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @132, i64 0, i64 0))
  %return577 = call double @"chf@FS"(i8* %return576)
  %_p578 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p578, <2 x double>* %147
  %w579 = load double, double* %w
  store double %w579, double* %148
  store double %return577, double* %149
  call void @"V_BIPOLAR@UUFF"(<2 x double>* %p, <2 x double>* %147, double* %148, double* %149)
  %p581 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false573:                                         ; preds = %false561
  %return583 = call i64 @"eq@III"(i64 %T5, i64 54)
  %360 = icmp ne i64 %return583, 0
  br i1 %360, label %true584, label %false585

true584:                                          ; preds = %false573
  %_p587 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p587, <2 x double>* %150
  %w588 = load double, double* %w
  store double %w588, double* %151
  call void @"V_BOARDERS@UUF"(<2 x double>* %p, <2 x double>* %150, double* %151)
  %p589 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false585:                                         ; preds = %false573
  %return591 = call i64 @"eq@III"(i64 %T5, i64 55)
  %361 = icmp ne i64 %return591, 0
  br i1 %361, label %true592, label %false593

true592:                                          ; preds = %false585
  %_p595 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p595, <2 x double>* %152
  %w596 = load double, double* %w
  store double %w596, double* %153
  call void @"V_BUTTERFLY@UUF"(<2 x double>* %p, <2 x double>* %152, double* %153)
  %p597 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false593:                                         ; preds = %false585
  %return599 = call i64 @"eq@III"(i64 %T5, i64 56)
  %362 = icmp ne i64 %return599, 0
  br i1 %362, label %true600, label %false601

true600:                                          ; preds = %false593
  %prx603 = load i8*, i8** %prx
  %return604 = call i8* @"concat@SSS"(i8* %prx603, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @133, i64 0, i64 0))
  %return605 = call double @"chf@FS"(i8* %return604)
  %_p606 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p606, <2 x double>* %154
  store double %return605, double* %156
  call void @"V_CELL@UUFF"(<2 x double>* %p, <2 x double>* %154, double* %155, double* %156)
  %p608 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false601:                                         ; preds = %false593
  %return610 = call i64 @"eq@III"(i64 %T5, i64 57)
  %363 = icmp ne i64 %return610, 0
  br i1 %363, label %true611, label %false612

true611:                                          ; preds = %false601
  %prx614 = load i8*, i8** %prx
  %return615 = call i8* @"concat@SSS"(i8* %prx614, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @134, i64 0, i64 0))
  %return616 = call <3 x double> @"chv@VS"(i8* %return615)
  %_p617 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p617, <2 x double>* %157
  %w618 = load double, double* %w
  store double %w618, double* %158
  %return620 = call double @"getcomp@FVI"(<3 x double> %return616, i64 0)
  store double %return620, double* %159
  %return622 = call double @"getcomp@FVI"(<3 x double> %return616, i64 1)
  store double %return622, double* %160
  %return624 = call double @"getcomp@FVI"(<3 x double> %return616, i64 2)
  store double %return624, double* %161
  call void @"V_CPOW@UUFFFF"(<2 x double>* %p, <2 x double>* %157, double* %158, double* %159, double* %160, double* %161)
  %p625 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false612:                                         ; preds = %false601
  %return627 = call i64 @"eq@III"(i64 %T5, i64 58)
  %364 = icmp ne i64 %return627, 0
  br i1 %364, label %true628, label %false629

true628:                                          ; preds = %false612
  %_p631 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p631, <2 x double>* %162
  %w632 = load double, double* %w
  store double %w632, double* %163
  call void @"V_EDISC@UUF"(<2 x double>* %p, <2 x double>* %162, double* %163)
  %p633 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false629:                                         ; preds = %false612
  %return635 = call i64 @"eq@III"(i64 %T5, i64 59)
  %365 = icmp ne i64 %return635, 0
  br i1 %365, label %true636, label %false637

true636:                                          ; preds = %false629
  %_p639 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p639, <2 x double>* %164
  %w640 = load double, double* %w
  store double %w640, double* %165
  call void @"V_ELLIPTIC@UUF"(<2 x double>* %p, <2 x double>* %164, double* %165)
  %p641 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false637:                                         ; preds = %false629
  %return643 = call i64 @"eq@III"(i64 %T5, i64 60)
  %366 = icmp ne i64 %return643, 0
  br i1 %366, label %true644, label %false645

true644:                                          ; preds = %false637
  %_p647 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p647, <2 x double>* %166
  %w648 = load double, double* %w
  store double %w648, double* %167
  call void @"V_NOISE@UUF"(<2 x double>* %p, <2 x double>* %166, double* %167)
  %p649 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false645:                                         ; preds = %false637
  %return651 = call i64 @"eq@III"(i64 %T5, i64 61)
  %367 = icmp ne i64 %return651, 0
  br i1 %367, label %true652, label %false653

true652:                                          ; preds = %false645
  %prx655 = load i8*, i8** %prx
  %return656 = call i8* @"concat@SSS"(i8* %prx655, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @135, i64 0, i64 0))
  %return657 = call double @"chf@FS"(i8* %return656)
  %_p658 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p658, <2 x double>* %168
  %w659 = load double, double* %w
  store double %w659, double* %169
  store double %return657, double* %170
  call void @"V_ESCHER@UUFF"(<2 x double>* %p, <2 x double>* %168, double* %169, double* %170)
  %p661 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false653:                                         ; preds = %false645
  %return663 = call i64 @"eq@III"(i64 %T5, i64 62)
  %368 = icmp ne i64 %return663, 0
  br i1 %368, label %true664, label %false665

true664:                                          ; preds = %false653
  %_p667 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p667, <2 x double>* %171
  %w668 = load double, double* %w
  store double %w668, double* %172
  call void @"V_FOCI@UUF"(<2 x double>* %p, <2 x double>* %171, double* %172)
  %p669 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false665:                                         ; preds = %false653
  %return671 = call i64 @"eq@III"(i64 %T5, i64 63)
  %369 = icmp ne i64 %return671, 0
  br i1 %369, label %true672, label %false673

true672:                                          ; preds = %false665
  %prx675 = load i8*, i8** %prx
  %return676 = call i8* @"concat@SSS"(i8* %prx675, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @136, i64 0, i64 0))
  %return677 = call <3 x double> @"chv@VS"(i8* %return676)
  %return679 = call i8* @"concat@SSS"(i8* %prx675, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @137, i64 0, i64 0))
  %return680 = call <2 x double> @"chu@US"(i8* %return679)
  %_p681 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p681, <2 x double>* %173
  %w682 = load double, double* %w
  store double %w682, double* %174
  %return684 = call double @"getcomp@FVI"(<3 x double> %return677, i64 0)
  store double %return684, double* %175
  %return686 = call double @"getcomp@FVI"(<3 x double> %return677, i64 1)
  store double %return686, double* %176
  %return688 = call double @"getcomp@FVI"(<3 x double> %return677, i64 2)
  store double %return688, double* %177
  store <2 x double> %return680, <2 x double>* %178
  call void @"V_LAZYSUSAN@UUFFFFU"(<2 x double>* %p, <2 x double>* %173, double* %174, double* %175, double* %176, double* %177, <2 x double>* %178)
  %p690 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false673:                                         ; preds = %false665
  %return692 = call i64 @"eq@III"(i64 %T5, i64 64)
  %370 = icmp ne i64 %return692, 0
  br i1 %370, label %true693, label %false694

true693:                                          ; preds = %false673
  %_p696 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p696, <2 x double>* %179
  %w697 = load double, double* %w
  store double %w697, double* %180
  call void @"V_LOONIE@UUF"(<2 x double>* %p, <2 x double>* %179, double* %180)
  %p698 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false694:                                         ; preds = %false673
  %return700 = call i64 @"eq@III"(i64 %T5, i64 66)
  %371 = icmp ne i64 %return700, 0
  br i1 %371, label %true701, label %false702

true701:                                          ; preds = %false694
  %prx704 = load i8*, i8** %prx
  %return705 = call i8* @"concat@SSS"(i8* %prx704, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @138, i64 0, i64 0))
  %return706 = call <2 x double> @"chu@US"(i8* %return705)
  %_p707 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p707, <2 x double>* %181
  %w708 = load double, double* %w
  store double %w708, double* %182
  store <2 x double> %return706, <2 x double>* %183
  call void @"V_MODULUS@UUFU"(<2 x double>* %p, <2 x double>* %181, double* %182, <2 x double>* %183)
  %p710 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false702:                                         ; preds = %false694
  %return712 = call i64 @"eq@III"(i64 %T5, i64 67)
  %372 = icmp ne i64 %return712, 0
  br i1 %372, label %true713, label %false714

true713:                                          ; preds = %false702
  %prx716 = load i8*, i8** %prx
  %return717 = call i8* @"concat@SSS"(i8* %prx716, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @139, i64 0, i64 0))
  %return718 = call <4 x double> @"chp@PS"(i8* %return717)
  %_p719 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p719, <2 x double>* %184
  %w720 = load double, double* %w
  store double %w720, double* %185
  %return722 = call double @"getcomp@FPI"(<4 x double> %return718, i64 0)
  store double %return722, double* %186
  %return724 = call double @"getcomp@FPI"(<4 x double> %return718, i64 1)
  store double %return724, double* %187
  %return726 = call double @"getcomp@FPI"(<4 x double> %return718, i64 2)
  store double %return726, double* %188
  %return728 = call double @"getcomp@FPI"(<4 x double> %return718, i64 3)
  store double %return728, double* %189
  call void @"V_OSCOPE@UUFFFFF"(<2 x double>* %p, <2 x double>* %184, double* %185, double* %186, double* %187, double* %188, double* %189)
  %p729 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false714:                                         ; preds = %false702
  %return731 = call i64 @"eq@III"(i64 %T5, i64 68)
  %373 = icmp ne i64 %return731, 0
  br i1 %373, label %true732, label %false733

true732:                                          ; preds = %false714
  %_p735 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p735, <2 x double>* %190
  %w736 = load double, double* %w
  store double %w736, double* %191
  call void @"V_POLAR2@UUF"(<2 x double>* %p, <2 x double>* %190, double* %191)
  %p737 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false733:                                         ; preds = %false714
  %return739 = call i64 @"eq@III"(i64 %T5, i64 69)
  %374 = icmp ne i64 %return739, 0
  br i1 %374, label %true740, label %end12

true740:                                          ; preds = %false733
  %prx742 = load i8*, i8** %prx
  %return743 = call i8* @"concat@SSS"(i8* %prx742, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @140, i64 0, i64 0))
  %return744 = call double @"chf@FS"(i8* %return743)
  %return746 = call i8* @"concat@SSS"(i8* %prx742, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @141, i64 0, i64 0))
  %return747 = call <2 x double> @"chu@US"(i8* %return746)
  %_p748 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p748, <2 x double>* %192
  %w749 = load double, double* %w
  store double %w749, double* %193
  store double %return744, double* %194
  store <2 x double> %return747, <2 x double>* %195
  call void @"V_POPCORN2@UUFFU"(<2 x double>* %p, <2 x double>* %192, double* %193, double* %194, <2 x double>* %195)
  %p752 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true755:                                          ; preds = %false354
  %return758 = call i64 @"lt@III"(i64 %T5, i64 86)
  %375 = icmp ne i64 %return758, 0
  br i1 %375, label %true759, label %false760

true759:                                          ; preds = %true755
  %return763 = call i64 @"eq@III"(i64 %T5, i64 70)
  %376 = icmp ne i64 %return763, 0
  br i1 %376, label %true764, label %false765

false760:                                         ; preds = %true755
  %return961 = call i64 @"eq@III"(i64 %T5, i64 86)
  %377 = icmp ne i64 %return961, 0
  br i1 %377, label %true962, label %false963

true764:                                          ; preds = %true759
  %_p767 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p767, <2 x double>* %196
  %w768 = load double, double* %w
  store double %w768, double* %197
  call void @"V_SCRY@UUF"(<2 x double>* %p, <2 x double>* %196, double* %197)
  %p769 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false765:                                         ; preds = %true759
  %return771 = call i64 @"eq@III"(i64 %T5, i64 71)
  %378 = icmp ne i64 %return771, 0
  br i1 %378, label %true772, label %false773

true772:                                          ; preds = %false765
  %prx775 = load i8*, i8** %prx
  %return776 = call i8* @"concat@SSS"(i8* %prx775, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @142, i64 0, i64 0))
  %return777 = call <2 x double> @"chu@US"(i8* %return776)
  %return779 = call i8* @"concat@SSS"(i8* %prx775, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @143, i64 0, i64 0))
  %return780 = call <2 x double> @"chu@US"(i8* %return779)
  %_p781 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p781, <2 x double>* %198
  %w782 = load double, double* %w
  store double %w782, double* %199
  store <2 x double> %return777, <2 x double>* %200
  store <2 x double> %return780, <2 x double>* %201
  call void @"V_SEPARATION@UUFUU"(<2 x double>* %p, <2 x double>* %198, double* %199, <2 x double>* %200, <2 x double>* %201)
  %p785 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false773:                                         ; preds = %false765
  %return787 = call i64 @"eq@III"(i64 %T5, i64 72)
  %379 = icmp ne i64 %return787, 0
  br i1 %379, label %true788, label %false789

true788:                                          ; preds = %false773
  %prx791 = load i8*, i8** %prx
  %return792 = call i8* @"concat@SSS"(i8* %prx791, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @144, i64 0, i64 0))
  %return793 = call <2 x double> @"chu@US"(i8* %return792)
  %_p794 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p794, <2 x double>* %202
  %w795 = load double, double* %w
  store double %w795, double* %203
  store <2 x double> %return793, <2 x double>* %204
  call void @"V_SPLIT@UUFU"(<2 x double>* %p, <2 x double>* %202, double* %203, <2 x double>* %204)
  %p797 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false789:                                         ; preds = %false773
  %return799 = call i64 @"eq@III"(i64 %T5, i64 73)
  %380 = icmp ne i64 %return799, 0
  br i1 %380, label %true800, label %false801

true800:                                          ; preds = %false789
  %prx803 = load i8*, i8** %prx
  %return804 = call i8* @"concat@SSS"(i8* %prx803, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @145, i64 0, i64 0))
  %return805 = call <2 x double> @"chu@US"(i8* %return804)
  %_p806 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p806, <2 x double>* %205
  %w807 = load double, double* %w
  store double %w807, double* %206
  store <2 x double> %return805, <2 x double>* %207
  call void @"V_SPLITS@UUFU"(<2 x double>* %p, <2 x double>* %205, double* %206, <2 x double>* %207)
  %p809 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false801:                                         ; preds = %false789
  %return811 = call i64 @"eq@III"(i64 %T5, i64 74)
  %381 = icmp ne i64 %return811, 0
  br i1 %381, label %true812, label %false813

true812:                                          ; preds = %false801
  %prx815 = load i8*, i8** %prx
  %return816 = call i8* @"concat@SSS"(i8* %prx815, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @146, i64 0, i64 0))
  %return817 = call <2 x double> @"chu@US"(i8* %return816)
  %_p818 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p818, <2 x double>* %208
  %w819 = load double, double* %w
  store double %w819, double* %209
  %return821 = call double @"getcomp@FUI"(<2 x double> %return817, i64 0)
  store double %return821, double* %210
  %return823 = call double @"getcomp@FUI"(<2 x double> %return817, i64 1)
  store double %return823, double* %211
  call void @"V_STRIPES@UUFFF"(<2 x double>* %p, <2 x double>* %208, double* %209, double* %210, double* %211)
  %p824 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false813:                                         ; preds = %false801
  %return826 = call i64 @"eq@III"(i64 %T5, i64 75)
  %382 = icmp ne i64 %return826, 0
  br i1 %382, label %true827, label %false828

true827:                                          ; preds = %false813
  %prx830 = load i8*, i8** %prx
  %return831 = call i8* @"concat@SSS"(i8* %prx830, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @147, i64 0, i64 0))
  %return832 = call <4 x double> @"chp@PS"(i8* %return831)
  %_p833 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p833, <2 x double>* %212
  %w834 = load double, double* %w
  store double %w834, double* %213
  %return836 = call double @"getcomp@FPI"(<4 x double> %return832, i64 0)
  store double %return836, double* %214
  %return838 = call double @"getcomp@FPI"(<4 x double> %return832, i64 1)
  store double %return838, double* %215
  %return840 = call double @"getcomp@FPI"(<4 x double> %return832, i64 2)
  store double %return840, double* %216
  %return842 = call double @"getcomp@FPI"(<4 x double> %return832, i64 3)
  store double %return842, double* %217
  call void @"V_WEDGE@UUFFFFF"(<2 x double>* %p, <2 x double>* %212, double* %213, double* %214, double* %215, double* %216, double* %217)
  %p843 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false828:                                         ; preds = %false813
  %return845 = call i64 @"eq@III"(i64 %T5, i64 76)
  %383 = icmp ne i64 %return845, 0
  br i1 %383, label %true846, label %false847

true846:                                          ; preds = %false828
  %prx849 = load i8*, i8** %prx
  %return850 = call i8* @"concat@SSS"(i8* %prx849, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @148, i64 0, i64 0))
  %return851 = call <4 x double> @"chp@PS"(i8* %return850)
  %_p852 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p852, <2 x double>* %218
  %w853 = load double, double* %w
  store double %w853, double* %219
  %return855 = call double @"getcomp@FPI"(<4 x double> %return851, i64 0)
  store double %return855, double* %220
  %return857 = call double @"getcomp@FPI"(<4 x double> %return851, i64 1)
  store double %return857, double* %221
  %return859 = call double @"getcomp@FPI"(<4 x double> %return851, i64 2)
  store double %return859, double* %222
  %return861 = call double @"getcomp@FPI"(<4 x double> %return851, i64 3)
  store double %return861, double* %223
  call void @"V_WEDGEJULIA@UUFFFFF"(<2 x double>* %p, <2 x double>* %218, double* %219, double* %220, double* %221, double* %222, double* %223)
  %p862 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false847:                                         ; preds = %false828
  %return864 = call i64 @"eq@III"(i64 %T5, i64 77)
  %384 = icmp ne i64 %return864, 0
  br i1 %384, label %true865, label %false866

true865:                                          ; preds = %false847
  %prx868 = load i8*, i8** %prx
  %return869 = call i8* @"concat@SSS"(i8* %prx868, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @149, i64 0, i64 0))
  %return870 = call <4 x double> @"chp@PS"(i8* %return869)
  %_p871 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p871, <2 x double>* %224
  %w872 = load double, double* %w
  store double %w872, double* %225
  %return874 = call double @"getcomp@FPI"(<4 x double> %return870, i64 0)
  store double %return874, double* %226
  %return876 = call double @"getcomp@FPI"(<4 x double> %return870, i64 1)
  store double %return876, double* %227
  %return878 = call double @"getcomp@FPI"(<4 x double> %return870, i64 2)
  store double %return878, double* %228
  %return880 = call double @"getcomp@FPI"(<4 x double> %return870, i64 3)
  store double %return880, double* %229
  call void @"V_WEDGESPH@UUFFFFF"(<2 x double>* %p, <2 x double>* %224, double* %225, double* %226, double* %227, double* %228, double* %229)
  %p881 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false866:                                         ; preds = %false847
  %return883 = call i64 @"eq@III"(i64 %T5, i64 78)
  %385 = icmp ne i64 %return883, 0
  br i1 %385, label %true884, label %false885

true884:                                          ; preds = %false866
  %prx887 = load i8*, i8** %prx
  %return888 = call i8* @"concat@SSS"(i8* %prx887, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @150, i64 0, i64 0))
  %return889 = call <2 x double> @"chu@US"(i8* %return888)
  %_p890 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p890, <2 x double>* %230
  %w891 = load double, double* %w
  store double %w891, double* %231
  %return893 = call double @"getcomp@FUI"(<2 x double> %return889, i64 0)
  store double %return893, double* %232
  %return895 = call double @"getcomp@FUI"(<2 x double> %return889, i64 1)
  store double %return895, double* %233
  call void @"V_WHORL@UUFFF"(<2 x double>* %p, <2 x double>* %230, double* %231, double* %232, double* %233)
  %p896 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false885:                                         ; preds = %false866
  %return898 = call i64 @"eq@III"(i64 %T5, i64 79)
  %386 = icmp ne i64 %return898, 0
  br i1 %386, label %true899, label %false900

true899:                                          ; preds = %false885
  %prx902 = load i8*, i8** %prx
  %return903 = call i8* @"concat@SSS"(i8* %prx902, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @151, i64 0, i64 0))
  %return904 = call <2 x double> @"chu@US"(i8* %return903)
  %return906 = call i8* @"concat@SSS"(i8* %prx902, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @152, i64 0, i64 0))
  %return907 = call <2 x double> @"chu@US"(i8* %return906)
  %_p908 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p908, <2 x double>* %234
  %w909 = load double, double* %w
  store double %w909, double* %235
  store <2 x double> %return904, <2 x double>* %236
  store <2 x double> %return907, <2 x double>* %237
  call void @"V_WAVES2@UUFUU"(<2 x double>* %p, <2 x double>* %234, double* %235, <2 x double>* %236, <2 x double>* %237)
  %p912 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false900:                                         ; preds = %false885
  %return914 = call i64 @"eq@III"(i64 %T5, i64 80)
  %387 = icmp ne i64 %return914, 0
  br i1 %387, label %true915, label %false916

true915:                                          ; preds = %false900
  %_p918 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p918, <2 x double>* %238
  %w919 = load double, double* %w
  store double %w919, double* %239
  call void @"V_EXP@UUF"(<2 x double>* %p, <2 x double>* %238, double* %239)
  %p920 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false916:                                         ; preds = %false900
  %return922 = call i64 @"eq@III"(i64 %T5, i64 81)
  %388 = icmp ne i64 %return922, 0
  br i1 %388, label %true923, label %false924

true923:                                          ; preds = %false916
  %_p926 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p926, <2 x double>* %240
  %w927 = load double, double* %w
  store double %w927, double* %241
  call void @"V_LOG@UUF"(<2 x double>* %p, <2 x double>* %240, double* %241)
  %p928 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false924:                                         ; preds = %false916
  %return930 = call i64 @"eq@III"(i64 %T5, i64 82)
  %389 = icmp ne i64 %return930, 0
  br i1 %389, label %true931, label %false932

true931:                                          ; preds = %false924
  %_p934 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p934, <2 x double>* %242
  %w935 = load double, double* %w
  store double %w935, double* %243
  call void @"V_SIN@UUF"(<2 x double>* %p, <2 x double>* %242, double* %243)
  %p936 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false932:                                         ; preds = %false924
  %return938 = call i64 @"eq@III"(i64 %T5, i64 83)
  %390 = icmp ne i64 %return938, 0
  br i1 %390, label %true939, label %false940

true939:                                          ; preds = %false932
  %_p942 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p942, <2 x double>* %244
  %w943 = load double, double* %w
  store double %w943, double* %245
  call void @"V_COS@UUF"(<2 x double>* %p, <2 x double>* %244, double* %245)
  %p944 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false940:                                         ; preds = %false932
  %return946 = call i64 @"eq@III"(i64 %T5, i64 84)
  %391 = icmp ne i64 %return946, 0
  br i1 %391, label %true947, label %false948

true947:                                          ; preds = %false940
  %_p950 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p950, <2 x double>* %246
  %w951 = load double, double* %w
  store double %w951, double* %247
  call void @"V_TAN@UUF"(<2 x double>* %p, <2 x double>* %246, double* %247)
  %p952 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false948:                                         ; preds = %false940
  %return954 = call i64 @"eq@III"(i64 %T5, i64 85)
  %392 = icmp ne i64 %return954, 0
  br i1 %392, label %true955, label %end12

true955:                                          ; preds = %false948
  %_p957 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p957, <2 x double>* %248
  %w958 = load double, double* %w
  store double %w958, double* %249
  call void @"V_SEC@UUF"(<2 x double>* %p, <2 x double>* %248, double* %249)
  %p959 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true962:                                          ; preds = %false760
  %_p965 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p965, <2 x double>* %250
  %w966 = load double, double* %w
  store double %w966, double* %251
  call void @"V_CSC@UUF"(<2 x double>* %p, <2 x double>* %250, double* %251)
  %p967 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false963:                                         ; preds = %false760
  %return969 = call i64 @"eq@III"(i64 %T5, i64 87)
  %393 = icmp ne i64 %return969, 0
  br i1 %393, label %true970, label %false971

true970:                                          ; preds = %false963
  %_p973 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p973, <2 x double>* %252
  %w974 = load double, double* %w
  store double %w974, double* %253
  call void @"V_COT@UUF"(<2 x double>* %p, <2 x double>* %252, double* %253)
  %p975 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false971:                                         ; preds = %false963
  %return977 = call i64 @"eq@III"(i64 %T5, i64 88)
  %394 = icmp ne i64 %return977, 0
  br i1 %394, label %true978, label %false979

true978:                                          ; preds = %false971
  %_p981 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p981, <2 x double>* %254
  %w982 = load double, double* %w
  store double %w982, double* %255
  call void @"V_SINH@UUF"(<2 x double>* %p, <2 x double>* %254, double* %255)
  %p983 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false979:                                         ; preds = %false971
  %return985 = call i64 @"eq@III"(i64 %T5, i64 89)
  %395 = icmp ne i64 %return985, 0
  br i1 %395, label %true986, label %false987

true986:                                          ; preds = %false979
  %_p989 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p989, <2 x double>* %256
  %w990 = load double, double* %w
  store double %w990, double* %257
  call void @"V_COSH@UUF"(<2 x double>* %p, <2 x double>* %256, double* %257)
  %p991 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false987:                                         ; preds = %false979
  %return993 = call i64 @"eq@III"(i64 %T5, i64 90)
  %396 = icmp ne i64 %return993, 0
  br i1 %396, label %true994, label %false995

true994:                                          ; preds = %false987
  %_p997 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p997, <2 x double>* %258
  %w998 = load double, double* %w
  store double %w998, double* %259
  call void @"V_TANH@UUF"(<2 x double>* %p, <2 x double>* %258, double* %259)
  %p999 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false995:                                         ; preds = %false987
  %return1001 = call i64 @"eq@III"(i64 %T5, i64 91)
  %397 = icmp ne i64 %return1001, 0
  br i1 %397, label %true1002, label %false1003

true1002:                                         ; preds = %false995
  %_p1005 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1005, <2 x double>* %260
  %w1006 = load double, double* %w
  store double %w1006, double* %261
  call void @"V_SECH@UUF"(<2 x double>* %p, <2 x double>* %260, double* %261)
  %p1007 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1003:                                        ; preds = %false995
  %return1009 = call i64 @"eq@III"(i64 %T5, i64 92)
  %398 = icmp ne i64 %return1009, 0
  br i1 %398, label %true1010, label %false1011

true1010:                                         ; preds = %false1003
  %_p1013 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1013, <2 x double>* %262
  %w1014 = load double, double* %w
  store double %w1014, double* %263
  call void @"V_CSCH@UUF"(<2 x double>* %p, <2 x double>* %262, double* %263)
  %p1015 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1011:                                        ; preds = %false1003
  %return1017 = call i64 @"eq@III"(i64 %T5, i64 93)
  %399 = icmp ne i64 %return1017, 0
  br i1 %399, label %true1018, label %false1019

true1018:                                         ; preds = %false1011
  %_p1021 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1021, <2 x double>* %264
  %w1022 = load double, double* %w
  store double %w1022, double* %265
  call void @"V_COTH@UUF"(<2 x double>* %p, <2 x double>* %264, double* %265)
  %p1023 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1019:                                        ; preds = %false1011
  %return1025 = call i64 @"eq@III"(i64 %T5, i64 94)
  %400 = icmp ne i64 %return1025, 0
  br i1 %400, label %true1026, label %false1027

true1026:                                         ; preds = %false1019
  %prx1029 = load i8*, i8** %prx
  %return1030 = call i8* @"concat@SSS"(i8* %prx1029, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @153, i64 0, i64 0))
  %return1031 = call <4 x double> @"chp@PS"(i8* %return1030)
  %_p1032 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1032, <2 x double>* %266
  %w1033 = load double, double* %w
  store double %w1033, double* %267
  %return1035 = call double @"getcomp@FPI"(<4 x double> %return1031, i64 0)
  store double %return1035, double* %268
  %return1037 = call double @"getcomp@FPI"(<4 x double> %return1031, i64 1)
  store double %return1037, double* %269
  %return1039 = call double @"getcomp@FPI"(<4 x double> %return1031, i64 2)
  store double %return1039, double* %270
  %return1041 = call double @"getcomp@FPI"(<4 x double> %return1031, i64 3)
  store double %return1041, double* %271
  call void @"V_AUGER@UUFFFFF"(<2 x double>* %p, <2 x double>* %266, double* %267, double* %268, double* %269, double* %270, double* %271)
  %p1042 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1027:                                        ; preds = %false1019
  %return1044 = call i64 @"eq@III"(i64 %T5, i64 95)
  %401 = icmp ne i64 %return1044, 0
  br i1 %401, label %true1045, label %false1046

true1045:                                         ; preds = %false1027
  %prx1048 = load i8*, i8** %prx
  %return1049 = call i8* @"concat@SSS"(i8* %prx1048, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @154, i64 0, i64 0))
  %return1050 = call double @"chf@FS"(i8* %return1049)
  %_p1051 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1051, <2 x double>* %272
  %w1052 = load double, double* %w
  store double %w1052, double* %273
  store double %return1050, double* %274
  call void @"V_FLUX@UUFF"(<2 x double>* %p, <2 x double>* %272, double* %273, double* %274)
  %p1054 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1046:                                        ; preds = %false1027
  %return1056 = call i64 @"eq@III"(i64 %T5, i64 96)
  %402 = icmp ne i64 %return1056, 0
  br i1 %402, label %true1057, label %false1058

true1057:                                         ; preds = %false1046
  %prx1060 = load i8*, i8** %prx
  %return1061 = call i8* @"concat@SSS"(i8* %prx1060, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @155, i64 0, i64 0))
  %return1062 = call <4 x double> @"chp@PS"(i8* %return1061)
  %return1064 = call i8* @"concat@SSS"(i8* %prx1060, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @156, i64 0, i64 0))
  %return1065 = call <4 x double> @"chp@PS"(i8* %return1064)
  %_p1066 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1066, <2 x double>* %275
  %w1067 = load double, double* %w
  store double %w1067, double* %276
  store <4 x double> %return1062, <4 x double>* %277
  store <4 x double> %return1065, <4 x double>* %278
  call void @"V_MOBIUS@UUFPP"(<2 x double>* %p, <2 x double>* %275, double* %276, <4 x double>* %277, <4 x double>* %278)
  %p1070 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1058:                                        ; preds = %false1046
  %return1072 = call i64 @"eq@III"(i64 %T5, i64 97)
  %403 = icmp ne i64 %return1072, 0
  br i1 %403, label %true1073, label %false1074

true1073:                                         ; preds = %false1058
  %prx1076 = load i8*, i8** %prx
  %return1077 = call i8* @"concat@SSS"(i8* %prx1076, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @157, i64 0, i64 0))
  %return1078 = call <2 x double> @"chu@US"(i8* %return1077)
  %return1080 = call i8* @"concat@SSS"(i8* %prx1076, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @158, i64 0, i64 0))
  %return1081 = call <2 x double> @"chu@US"(i8* %return1080)
  %_p1082 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1082, <2 x double>* %279
  %w1083 = load double, double* %w
  store double %w1083, double* %280
  store <2 x double> %return1078, <2 x double>* %281
  store <2 x double> %return1081, <2 x double>* %282
  call void @"V_CURVE@UUFUU"(<2 x double>* %p, <2 x double>* %279, double* %280, <2 x double>* %281, <2 x double>* %282)
  %p1086 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1074:                                        ; preds = %false1058
  %return1088 = call i64 @"eq@III"(i64 %T5, i64 98)
  %404 = icmp ne i64 %return1088, 0
  br i1 %404, label %true1089, label %false1090

true1089:                                         ; preds = %false1074
  %prx1092 = load i8*, i8** %prx
  %return1093 = call i8* @"concat@SSS"(i8* %prx1092, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @159, i64 0, i64 0))
  %return1094 = call <2 x double> @"chu@US"(i8* %return1093)
  %_p1095 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1095, <2 x double>* %283
  %w1096 = load double, double* %w
  store double %w1096, double* %284
  %return1098 = call double @"getcomp@FUI"(<2 x double> %return1094, i64 0)
  store double %return1098, double* %285
  %return1100 = call double @"getcomp@FUI"(<2 x double> %return1094, i64 1)
  store double %return1100, double* %286
  call void @"V_PERSPECTIVE@UUFFF"(<2 x double>* %p, <2 x double>* %283, double* %284, double* %285, double* %286)
  %p1101 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1090:                                        ; preds = %false1074
  %return1103 = call i64 @"eq@III"(i64 %T5, i64 99)
  %405 = icmp ne i64 %return1103, 0
  br i1 %405, label %true1104, label %false1105

true1104:                                         ; preds = %false1090
  %prx1107 = load i8*, i8** %prx
  %return1108 = call i8* @"concat@SSS"(i8* %prx1107, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @160, i64 0, i64 0))
  %return1109 = call <3 x double> @"chv@VS"(i8* %return1108)
  %return1111 = call i8* @"concat@SSS"(i8* %prx1107, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @161, i64 0, i64 0))
  %return1112 = call <2 x double> @"chu@US"(i8* %return1111)
  %_p1113 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1113, <2 x double>* %287
  %w1114 = load double, double* %w
  store double %w1114, double* %288
  %return1116 = call double @"getcomp@FVI"(<3 x double> %return1109, i64 0)
  store double %return1116, double* %289
  %return1118 = call double @"getcomp@FVI"(<3 x double> %return1109, i64 1)
  store double %return1118, double* %290
  %return1120 = call double @"getcomp@FVI"(<3 x double> %return1109, i64 2)
  store double %return1120, double* %291
  %return1122 = call double @"getcomp@FUI"(<2 x double> %return1112, i64 0)
  store double %return1122, double* %292
  %return1124 = call double @"getcomp@FUI"(<2 x double> %return1112, i64 1)
  store double %return1124, double* %293
  call void @"V_BWRAPS@UUFFFFFF"(<2 x double>* %p, <2 x double>* %287, double* %288, double* %289, double* %290, double* %291, double* %292, double* %293)
  %p1125 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1105:                                        ; preds = %false1090
  %return1127 = call i64 @"eq@III"(i64 %T5, i64 100)
  %406 = icmp ne i64 %return1127, 0
  br i1 %406, label %true1128, label %false1129

true1128:                                         ; preds = %false1105
  %_p1131 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1131, <2 x double>* %294
  %w1132 = load double, double* %w
  store double %w1132, double* %295
  call void @"V_HEMISPHERE@UUF"(<2 x double>* %p, <2 x double>* %294, double* %295)
  %p1133 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1129:                                        ; preds = %false1105
  %return1135 = call i64 @"eq@III"(i64 %T5, i64 101)
  %407 = icmp ne i64 %return1135, 0
  br i1 %407, label %true1136, label %end12

true1136:                                         ; preds = %false1129
  %prx1138 = load i8*, i8** %prx
  %return1139 = call i8* @"concat@SSS"(i8* %prx1138, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @162, i64 0, i64 0))
  %return1140 = call <2 x double> @"chu@US"(i8* %return1139)
  %return1142 = call i8* @"concat@SSS"(i8* %prx1138, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @163, i64 0, i64 0))
  %return1143 = call <2 x double> @"chu@US"(i8* %return1142)
  %return1145 = call i8* @"concat@SSS"(i8* %prx1138, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @164, i64 0, i64 0))
  %return1146 = call <2 x double> @"chu@US"(i8* %return1145)
  %_p1147 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1147, <2 x double>* %296
  %w1148 = load double, double* %w
  store double %w1148, double* %297
  store <2 x double> %return1140, <2 x double>* %298
  store <2 x double> %return1143, <2 x double>* %299
  store <2 x double> %return1146, <2 x double>* %300
  call void @"V_POLYNOMIAL@UUFUUU"(<2 x double>* %p, <2 x double>* %296, double* %297, <2 x double>* %298, <2 x double>* %299, <2 x double>* %300)
  %p1152 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %true1136, %true1128, %true1104, %true1089, %true1073, %true1057, %true1045, %true1026, %true1018, %true1010, %true1002, %true994, %true986, %true978, %true970, %true962, %true955, %true947, %true939, %true931, %true923, %true915, %true899, %true884, %true865, %true846, %true827, %true812, %true800, %true788, %true772, %true764, %true740, %true732, %true713, %true701, %true693, %true672, %true664, %true652, %true644, %true636, %true628, %true611, %true600, %true592, %true584, %true572, %true560, %true545, %true530, %true516, %true495, %true480, %true472, %true464, %true456, %true448, %true440, %true433, %true425, %true418, %true402, %true387, %true375, %true363, %true342, %true335, %true320, %true305, %true288, %true276, %true257, %true242, %true235, %true227, %true219, %true211, %true201, %true191, %true183, %true175, %true167, %true156, %true148, %true132, %true124, %true116, %true108, %true100, %true92, %true84, %true76, %true68, %true60, %true52, %true44, %true36, %true28, %true20, %end12, %true
  %UnifiedRetVal = phi <2 x double> [ %output, %true ], [ %_p1153, %end12 ], [ %p25, %true20 ], [ %p33, %true28 ], [ %p41, %true36 ], [ %p49, %true44 ], [ %p57, %true52 ], [ %p65, %true60 ], [ %p73, %true68 ], [ %p81, %true76 ], [ %p89, %true84 ], [ %p97, %true92 ], [ %p105, %true100 ], [ %p113, %true108 ], [ %p121, %true116 ], [ %p129, %true124 ], [ %p145, %true132 ], [ %p153, %true148 ], [ %p164, %true156 ], [ %p172, %true167 ], [ %p180, %true175 ], [ %p188, %true183 ], [ %p198, %true191 ], [ %p208, %true201 ], [ %p216, %true211 ], [ %p224, %true219 ], [ %p232, %true227 ], [ %p239, %true235 ], [ %p254, %true242 ], [ %p273, %true257 ], [ %p285, %true276 ], [ %p302, %true288 ], [ %p317, %true305 ], [ %p332, %true320 ], [ %p339, %true335 ], [ %p350, %true342 ], [ %p372, %true363 ], [ %p384, %true375 ], [ %p399, %true387 ], [ %p415, %true402 ], [ %p422, %true418 ], [ %p430, %true425 ], [ %p437, %true433 ], [ %p445, %true440 ], [ %p453, %true448 ], [ %p461, %true456 ], [ %p469, %true464 ], [ %p477, %true472 ], [ %p492, %true480 ], [ %p513, %true495 ], [ %p527, %true516 ], [ %p542, %true530 ], [ %p557, %true545 ], [ %p569, %true560 ], [ %p581, %true572 ], [ %p589, %true584 ], [ %p597, %true592 ], [ %p608, %true600 ], [ %p625, %true611 ], [ %p633, %true628 ], [ %p641, %true636 ], [ %p649, %true644 ], [ %p661, %true652 ], [ %p669, %true664 ], [ %p690, %true672 ], [ %p698, %true693 ], [ %p710, %true701 ], [ %p729, %true713 ], [ %p737, %true732 ], [ %p752, %true740 ], [ %p769, %true764 ], [ %p785, %true772 ], [ %p797, %true788 ], [ %p809, %true800 ], [ %p824, %true812 ], [ %p843, %true827 ], [ %p862, %true846 ], [ %p881, %true865 ], [ %p896, %true884 ], [ %p912, %true899 ], [ %p920, %true915 ], [ %p928, %true923 ], [ %p936, %true931 ], [ %p944, %true939 ], [ %p952, %true947 ], [ %p959, %true955 ], [ %p967, %true962 ], [ %p975, %true970 ], [ %p983, %true978 ], [ %p991, %true986 ], [ %p999, %true994 ], [ %p1007, %true1002 ], [ %p1015, %true1010 ], [ %p1023, %true1018 ], [ %p1042, %true1026 ], [ %p1054, %true1045 ], [ %p1070, %true1057 ], [ %p1086, %true1073 ], [ %p1101, %true1089 ], [ %p1125, %true1104 ], [ %p1133, %true1128 ], [ %p1152, %true1136 ]
  ret <2 x double> %UnifiedRetVal
}

; Function Attrs: alwaysinline nounwind
define private void @"_FLAM3@[SII[F[FFFFV"(i8*** %_bound_sIDX, i64* %_bound_ptnum, i64* %_bound_XS, double** %_bound_IW, double** %_bound_XST, double* %_bound_pscale, double* %_bound_clr, double* %_bound_Alpha, <3 x double>* %_bound_P) #0 {
__llvm_entry:
  %tmp = alloca <2 x double>
  %GEM = alloca %gem
  %0 = alloca i8**
  %p2GMP = alloca %gemPrm
  %v1GMP = alloca %gemPrm
  %v2GMP = alloca %gemPrm
  %v3GMP = alloca %gemPrm
  %v4GMP = alloca %gemPrm
  %P1GMP = alloca %gemPrm
  %1 = alloca i8**
  %2 = alloca i64
  %3 = alloca i64*
  %4 = alloca double*
  %5 = alloca i8**
  %6 = alloca i64
  %7 = alloca i64*
  %8 = alloca double*
  %9 = alloca i8**
  %10 = alloca i64
  %11 = alloca i64*
  %12 = alloca double*
  %13 = alloca i8**
  %14 = alloca i64
  %15 = alloca i64*
  %16 = alloca double*
  %17 = alloca i8**
  %18 = alloca i64
  %19 = alloca i64*
  %20 = alloca double*
  %21 = alloca i8**
  %22 = alloca i64
  %23 = alloca i64*
  %24 = alloca double*
  %mem = alloca <2 x double>
  %25 = alloca double*
  %26 = alloca double
  %27 = alloca double
  %28 = alloca i64
  %29 = alloca <2 x double>
  %30 = alloca <2 x double>
  %31 = alloca <2 x double>
  %32 = alloca <2 x double>
  %33 = alloca double
  %34 = alloca %gemPrm
  %35 = alloca i64
  %36 = alloca i64
  %37 = alloca <2 x double>
  %38 = alloca <2 x double>
  %39 = alloca <2 x double>
  %40 = alloca <2 x double>
  %41 = alloca double
  %42 = alloca %gemPrm
  %43 = alloca i64
  %44 = alloca i64
  %45 = alloca <2 x double>
  %46 = alloca <2 x double>
  %47 = alloca <2 x double>
  %48 = alloca <2 x double>
  %49 = alloca double
  %50 = alloca %gemPrm
  %51 = alloca i64
  %52 = alloca i64
  %53 = alloca <2 x double>
  %54 = alloca <2 x double>
  %55 = alloca <2 x double>
  %56 = alloca <2 x double>
  %57 = alloca double
  %58 = alloca %gemPrm
  %59 = alloca i64
  %60 = alloca i64
  %61 = alloca <2 x double>
  %62 = alloca <2 x double>
  %63 = alloca <2 x double>
  %64 = alloca <2 x double>
  %65 = alloca double
  %66 = alloca %gemPrm
  %67 = alloca i64
  %68 = alloca i64
  %69 = alloca <2 x double>
  %70 = alloca <2 x double>
  %71 = alloca <2 x double>
  %72 = alloca <2 x double>
  %73 = alloca double
  %74 = alloca %gemPrm
  %75 = alloca i64
  %76 = alloca i64
  %77 = alloca <2 x double>
  %78 = alloca <2 x double>
  %79 = alloca <2 x double>
  %80 = alloca <2 x double>
  %81 = alloca double
  %82 = alloca <2 x double>
  %83 = alloca <2 x double>
  %84 = alloca <2 x double>
  %85 = alloca i64
  %86 = alloca <2 x double>
  %87 = alloca double
  %88 = alloca i8*
  %89 = alloca i64
  %90 = alloca <2 x double>
  %91 = alloca <2 x double>
  %92 = alloca <2 x double>
  %93 = alloca <2 x double>
  %94 = alloca double
  %95 = alloca i8*
  %96 = alloca i64
  %97 = alloca <2 x double>
  %98 = alloca <2 x double>
  %99 = alloca <2 x double>
  %100 = alloca <2 x double>
  %101 = alloca double
  %102 = alloca i8*
  %103 = alloca i64
  %104 = alloca <2 x double>
  %105 = alloca <2 x double>
  %106 = alloca <2 x double>
  %107 = alloca <2 x double>
  %108 = alloca double
  %109 = alloca i8*
  %110 = alloca i64
  %111 = alloca <2 x double>
  %112 = alloca <2 x double>
  %113 = alloca <2 x double>
  %114 = alloca <2 x double>
  %115 = alloca double
  %116 = alloca i8*
  %117 = alloca i64
  %118 = alloca <2 x double>
  %119 = alloca <2 x double>
  %120 = alloca <2 x double>
  %121 = alloca <2 x double>
  %122 = alloca double
  %123 = alloca <2 x double>
  %124 = alloca <2 x double>
  %125 = alloca <2 x double>
  %126 = alloca i64
  %idx = alloca i64
  store i64 0, i64* %idx, !vex-initializer-store !3
  store <2 x double> zeroinitializer, <2 x double>* %tmp, !vex-initializer-store !3
  %_bound_sIDX1 = load i8**, i8*** %_bound_sIDX
  %GEM2 = call %gem @"gem@Z3gemM52N2TMIN2FFIN3PFFIN3RIPIN2SMIN4iterIN3smmIN2MBIN3resIN3v1t[IN3v2t[IN3v3t[IN3v4t[IN3p1t[IN3p2t[IN3ppt[IN3PPL[IN4fv1tIN4fv2tIN4fv3tIN4fp1tIN4fp2tIN3v1w[FN3v2w[FN3v3w[FN3v4w[FN3p1w[FN3p2w[FN3pbw[FN3ppw[FN3CLR[FN2OM[FN1A[FN4fv1wFN4fv2wFN4fv3wFN4fp1wFN4fp2wFN1x[UN1y[UN1o[UN2px[UN2py[UN2po[UN2fxUN2fyUN2foUN3pfxUN3pfyUN3pfoUN4TMm22N3mbmF"()
  %GEM2.fca.0.extract = extractvalue %gem %GEM2, 0
  %GEM2.fca.0.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 0
  store i64 %GEM2.fca.0.extract, i64* %GEM2.fca.0.gep
  %GEM2.fca.1.extract = extractvalue %gem %GEM2, 1
  %GEM2.fca.1.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 1
  store i64 %GEM2.fca.1.extract, i64* %GEM2.fca.1.gep
  %GEM2.fca.2.extract = extractvalue %gem %GEM2, 2
  %GEM2.fca.2.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 2
  store i64 %GEM2.fca.2.extract, i64* %GEM2.fca.2.gep
  %GEM2.fca.3.extract = extractvalue %gem %GEM2, 3
  %GEM2.fca.3.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 3
  store i64 %GEM2.fca.3.extract, i64* %GEM2.fca.3.gep
  %GEM2.fca.4.extract = extractvalue %gem %GEM2, 4
  %GEM2.fca.4.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 4
  store i64 %GEM2.fca.4.extract, i64* %GEM2.fca.4.gep
  %GEM2.fca.5.extract = extractvalue %gem %GEM2, 5
  %GEM2.fca.5.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 5
  store i64 %GEM2.fca.5.extract, i64* %GEM2.fca.5.gep
  %GEM2.fca.6.extract = extractvalue %gem %GEM2, 6
  %GEM2.fca.6.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 6
  store i64 %GEM2.fca.6.extract, i64* %GEM2.fca.6.gep
  %GEM2.fca.7.extract = extractvalue %gem %GEM2, 7
  %GEM2.fca.7.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 7
  store i64 %GEM2.fca.7.extract, i64* %GEM2.fca.7.gep
  %GEM2.fca.8.extract = extractvalue %gem %GEM2, 8
  %GEM2.fca.8.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 8
  store i64 %GEM2.fca.8.extract, i64* %GEM2.fca.8.gep
  %GEM2.fca.9.extract = extractvalue %gem %GEM2, 9
  %GEM2.fca.9.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 9
  store i64* %GEM2.fca.9.extract, i64** %GEM2.fca.9.gep
  %GEM2.fca.10.extract = extractvalue %gem %GEM2, 10
  %GEM2.fca.10.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 10
  store i64* %GEM2.fca.10.extract, i64** %GEM2.fca.10.gep
  %GEM2.fca.11.extract = extractvalue %gem %GEM2, 11
  %GEM2.fca.11.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 11
  store i64* %GEM2.fca.11.extract, i64** %GEM2.fca.11.gep
  %GEM2.fca.12.extract = extractvalue %gem %GEM2, 12
  %GEM2.fca.12.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 12
  store i64* %GEM2.fca.12.extract, i64** %GEM2.fca.12.gep
  %GEM2.fca.13.extract = extractvalue %gem %GEM2, 13
  %GEM2.fca.13.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 13
  store i64* %GEM2.fca.13.extract, i64** %GEM2.fca.13.gep
  %GEM2.fca.14.extract = extractvalue %gem %GEM2, 14
  %GEM2.fca.14.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 14
  store i64* %GEM2.fca.14.extract, i64** %GEM2.fca.14.gep
  %GEM2.fca.15.extract = extractvalue %gem %GEM2, 15
  %GEM2.fca.15.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 15
  store i64* %GEM2.fca.15.extract, i64** %GEM2.fca.15.gep
  %GEM2.fca.16.extract = extractvalue %gem %GEM2, 16
  %GEM2.fca.16.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 16
  store i64* %GEM2.fca.16.extract, i64** %GEM2.fca.16.gep
  %GEM2.fca.17.extract = extractvalue %gem %GEM2, 17
  %GEM2.fca.17.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 17
  store i64 %GEM2.fca.17.extract, i64* %GEM2.fca.17.gep
  %GEM2.fca.18.extract = extractvalue %gem %GEM2, 18
  %GEM2.fca.18.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 18
  store i64 %GEM2.fca.18.extract, i64* %GEM2.fca.18.gep
  %GEM2.fca.19.extract = extractvalue %gem %GEM2, 19
  %GEM2.fca.19.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 19
  store i64 %GEM2.fca.19.extract, i64* %GEM2.fca.19.gep
  %GEM2.fca.20.extract = extractvalue %gem %GEM2, 20
  %GEM2.fca.20.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 20
  store i64 %GEM2.fca.20.extract, i64* %GEM2.fca.20.gep
  %GEM2.fca.21.extract = extractvalue %gem %GEM2, 21
  %GEM2.fca.21.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 21
  store i64 %GEM2.fca.21.extract, i64* %GEM2.fca.21.gep
  %GEM2.fca.22.extract = extractvalue %gem %GEM2, 22
  %GEM2.fca.22.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 22
  store double* %GEM2.fca.22.extract, double** %GEM2.fca.22.gep
  %GEM2.fca.23.extract = extractvalue %gem %GEM2, 23
  %GEM2.fca.23.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 23
  store double* %GEM2.fca.23.extract, double** %GEM2.fca.23.gep
  %GEM2.fca.24.extract = extractvalue %gem %GEM2, 24
  %GEM2.fca.24.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 24
  store double* %GEM2.fca.24.extract, double** %GEM2.fca.24.gep
  %GEM2.fca.25.extract = extractvalue %gem %GEM2, 25
  %GEM2.fca.25.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 25
  store double* %GEM2.fca.25.extract, double** %GEM2.fca.25.gep
  %GEM2.fca.26.extract = extractvalue %gem %GEM2, 26
  %GEM2.fca.26.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 26
  store double* %GEM2.fca.26.extract, double** %GEM2.fca.26.gep
  %GEM2.fca.27.extract = extractvalue %gem %GEM2, 27
  %GEM2.fca.27.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 27
  store double* %GEM2.fca.27.extract, double** %GEM2.fca.27.gep
  %GEM2.fca.28.extract = extractvalue %gem %GEM2, 28
  %GEM2.fca.28.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 28
  store double* %GEM2.fca.28.extract, double** %GEM2.fca.28.gep
  %GEM2.fca.29.extract = extractvalue %gem %GEM2, 29
  %GEM2.fca.29.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 29
  store double* %GEM2.fca.29.extract, double** %GEM2.fca.29.gep
  %GEM2.fca.30.extract = extractvalue %gem %GEM2, 30
  %GEM2.fca.30.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 30
  store double* %GEM2.fca.30.extract, double** %GEM2.fca.30.gep
  %GEM2.fca.31.extract = extractvalue %gem %GEM2, 31
  %GEM2.fca.31.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 31
  store double* %GEM2.fca.31.extract, double** %GEM2.fca.31.gep
  %GEM2.fca.32.extract = extractvalue %gem %GEM2, 32
  %GEM2.fca.32.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 32
  store double* %GEM2.fca.32.extract, double** %GEM2.fca.32.gep
  %GEM2.fca.33.extract = extractvalue %gem %GEM2, 33
  %GEM2.fca.33.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 33
  store double %GEM2.fca.33.extract, double* %GEM2.fca.33.gep
  %GEM2.fca.34.extract = extractvalue %gem %GEM2, 34
  %GEM2.fca.34.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 34
  store double %GEM2.fca.34.extract, double* %GEM2.fca.34.gep
  %GEM2.fca.35.extract = extractvalue %gem %GEM2, 35
  %GEM2.fca.35.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 35
  store double %GEM2.fca.35.extract, double* %GEM2.fca.35.gep
  %GEM2.fca.36.extract = extractvalue %gem %GEM2, 36
  %GEM2.fca.36.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 36
  store double %GEM2.fca.36.extract, double* %GEM2.fca.36.gep
  %GEM2.fca.37.extract = extractvalue %gem %GEM2, 37
  %GEM2.fca.37.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 37
  store double %GEM2.fca.37.extract, double* %GEM2.fca.37.gep
  %GEM2.fca.38.extract = extractvalue %gem %GEM2, 38
  %GEM2.fca.38.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 38
  store <2 x double>* %GEM2.fca.38.extract, <2 x double>** %GEM2.fca.38.gep
  %GEM2.fca.39.extract = extractvalue %gem %GEM2, 39
  %GEM2.fca.39.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 39
  store <2 x double>* %GEM2.fca.39.extract, <2 x double>** %GEM2.fca.39.gep
  %GEM2.fca.40.extract = extractvalue %gem %GEM2, 40
  %GEM2.fca.40.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 40
  store <2 x double>* %GEM2.fca.40.extract, <2 x double>** %GEM2.fca.40.gep
  %GEM2.fca.41.extract = extractvalue %gem %GEM2, 41
  %GEM2.fca.41.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 41
  store <2 x double>* %GEM2.fca.41.extract, <2 x double>** %GEM2.fca.41.gep
  %GEM2.fca.42.extract = extractvalue %gem %GEM2, 42
  %GEM2.fca.42.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 42
  store <2 x double>* %GEM2.fca.42.extract, <2 x double>** %GEM2.fca.42.gep
  %GEM2.fca.43.extract = extractvalue %gem %GEM2, 43
  %GEM2.fca.43.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 43
  store <2 x double>* %GEM2.fca.43.extract, <2 x double>** %GEM2.fca.43.gep
  %GEM2.fca.44.extract = extractvalue %gem %GEM2, 44
  %GEM2.fca.44.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 44
  store <2 x double> %GEM2.fca.44.extract, <2 x double>* %GEM2.fca.44.gep
  %GEM2.fca.45.extract = extractvalue %gem %GEM2, 45
  %GEM2.fca.45.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 45
  store <2 x double> %GEM2.fca.45.extract, <2 x double>* %GEM2.fca.45.gep
  %GEM2.fca.46.extract = extractvalue %gem %GEM2, 46
  %GEM2.fca.46.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 46
  store <2 x double> %GEM2.fca.46.extract, <2 x double>* %GEM2.fca.46.gep
  %GEM2.fca.47.extract = extractvalue %gem %GEM2, 47
  %GEM2.fca.47.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 47
  store <2 x double> %GEM2.fca.47.extract, <2 x double>* %GEM2.fca.47.gep
  %GEM2.fca.48.extract = extractvalue %gem %GEM2, 48
  %GEM2.fca.48.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 48
  store <2 x double> %GEM2.fca.48.extract, <2 x double>* %GEM2.fca.48.gep
  %GEM2.fca.49.extract = extractvalue %gem %GEM2, 49
  %GEM2.fca.49.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 49
  store <2 x double> %GEM2.fca.49.extract, <2 x double>* %GEM2.fca.49.gep
  %GEM2.fca.50.extract = extractvalue %gem %GEM2, 50
  %GEM2.fca.50.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 50
  store <4 x double> %GEM2.fca.50.extract, <4 x double>* %GEM2.fca.50.gep
  %GEM2.fca.51.extract = extractvalue %gem %GEM2, 51
  %GEM2.fca.51.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 51
  store double %GEM2.fca.51.extract, double* %GEM2.fca.51.gep
  store i8** %_bound_sIDX1, i8*** %0
  call void @"gemBuild@Z3gemM52N2TMIN2FFIN3PFFIN3RIPIN2SMIN4iterIN3smmIN2MBIN3resIN3v1t[IN3v2t[IN3v3t[IN3v4t[IN3p1t[IN3p2t[IN3ppt[IN3PPL[IN4fv1tIN4fv2tIN4fv3tIN4fp1tIN4fp2tIN3v1w[FN3v2w[FN3v3w[FN3v4w[FN3p1w[FN3p2w[FN3pbw[FN3ppw[FN3CLR[FN2OM[FN1A[FN4fv1wFN4fv2wFN4fv3wFN4fp1wFN4fp2wFN1x[UN1y[UN1o[UN2px[UN2py[UN2po[UN2fxUN2fyUN2foUN3pfxUN3pfyUN3pfoUN4TMm22N3mbmF[S"(%gem* %GEM, i8*** %0)
  %GEM4.fca.0.load = load i64, i64* %GEM2.fca.0.gep
  %GEM4.fca.0.insert = insertvalue %gem undef, i64 %GEM4.fca.0.load, 0
  %GEM4.fca.1.load = load i64, i64* %GEM2.fca.1.gep
  %GEM4.fca.1.insert = insertvalue %gem %GEM4.fca.0.insert, i64 %GEM4.fca.1.load, 1
  %GEM4.fca.2.load = load i64, i64* %GEM2.fca.2.gep
  %GEM4.fca.2.insert = insertvalue %gem %GEM4.fca.1.insert, i64 %GEM4.fca.2.load, 2
  %GEM4.fca.3.load = load i64, i64* %GEM2.fca.3.gep
  %GEM4.fca.3.insert = insertvalue %gem %GEM4.fca.2.insert, i64 %GEM4.fca.3.load, 3
  %GEM4.fca.4.load = load i64, i64* %GEM2.fca.4.gep
  %GEM4.fca.4.insert = insertvalue %gem %GEM4.fca.3.insert, i64 %GEM4.fca.4.load, 4
  %GEM4.fca.5.load = load i64, i64* %GEM2.fca.5.gep
  %GEM4.fca.5.insert = insertvalue %gem %GEM4.fca.4.insert, i64 %GEM4.fca.5.load, 5
  %GEM4.fca.6.load = load i64, i64* %GEM2.fca.6.gep
  %GEM4.fca.6.insert = insertvalue %gem %GEM4.fca.5.insert, i64 %GEM4.fca.6.load, 6
  %GEM4.fca.7.load = load i64, i64* %GEM2.fca.7.gep
  %GEM4.fca.7.insert = insertvalue %gem %GEM4.fca.6.insert, i64 %GEM4.fca.7.load, 7
  %GEM4.fca.8.load = load i64, i64* %GEM2.fca.8.gep
  %GEM4.fca.8.insert = insertvalue %gem %GEM4.fca.7.insert, i64 %GEM4.fca.8.load, 8
  %GEM4.fca.9.load = load i64*, i64** %GEM2.fca.9.gep
  %GEM4.fca.9.insert = insertvalue %gem %GEM4.fca.8.insert, i64* %GEM4.fca.9.load, 9
  %GEM4.fca.10.load = load i64*, i64** %GEM2.fca.10.gep
  %GEM4.fca.10.insert = insertvalue %gem %GEM4.fca.9.insert, i64* %GEM4.fca.10.load, 10
  %GEM4.fca.11.load = load i64*, i64** %GEM2.fca.11.gep
  %GEM4.fca.11.insert = insertvalue %gem %GEM4.fca.10.insert, i64* %GEM4.fca.11.load, 11
  %GEM4.fca.12.load = load i64*, i64** %GEM2.fca.12.gep
  %GEM4.fca.12.insert = insertvalue %gem %GEM4.fca.11.insert, i64* %GEM4.fca.12.load, 12
  %GEM4.fca.13.load = load i64*, i64** %GEM2.fca.13.gep
  %GEM4.fca.13.insert = insertvalue %gem %GEM4.fca.12.insert, i64* %GEM4.fca.13.load, 13
  %GEM4.fca.14.load = load i64*, i64** %GEM2.fca.14.gep
  %GEM4.fca.14.insert = insertvalue %gem %GEM4.fca.13.insert, i64* %GEM4.fca.14.load, 14
  %GEM4.fca.15.load = load i64*, i64** %GEM2.fca.15.gep
  %GEM4.fca.15.insert = insertvalue %gem %GEM4.fca.14.insert, i64* %GEM4.fca.15.load, 15
  %GEM4.fca.16.load = load i64*, i64** %GEM2.fca.16.gep
  %GEM4.fca.16.insert = insertvalue %gem %GEM4.fca.15.insert, i64* %GEM4.fca.16.load, 16
  %GEM4.fca.17.load = load i64, i64* %GEM2.fca.17.gep
  %GEM4.fca.17.insert = insertvalue %gem %GEM4.fca.16.insert, i64 %GEM4.fca.17.load, 17
  %GEM4.fca.18.load = load i64, i64* %GEM2.fca.18.gep
  %GEM4.fca.18.insert = insertvalue %gem %GEM4.fca.17.insert, i64 %GEM4.fca.18.load, 18
  %GEM4.fca.19.load = load i64, i64* %GEM2.fca.19.gep
  %GEM4.fca.19.insert = insertvalue %gem %GEM4.fca.18.insert, i64 %GEM4.fca.19.load, 19
  %GEM4.fca.20.load = load i64, i64* %GEM2.fca.20.gep
  %GEM4.fca.20.insert = insertvalue %gem %GEM4.fca.19.insert, i64 %GEM4.fca.20.load, 20
  %GEM4.fca.21.load = load i64, i64* %GEM2.fca.21.gep
  %GEM4.fca.21.insert = insertvalue %gem %GEM4.fca.20.insert, i64 %GEM4.fca.21.load, 21
  %GEM4.fca.22.load = load double*, double** %GEM2.fca.22.gep
  %GEM4.fca.22.insert = insertvalue %gem %GEM4.fca.21.insert, double* %GEM4.fca.22.load, 22
  %GEM4.fca.23.load = load double*, double** %GEM2.fca.23.gep
  %GEM4.fca.23.insert = insertvalue %gem %GEM4.fca.22.insert, double* %GEM4.fca.23.load, 23
  %GEM4.fca.24.load = load double*, double** %GEM2.fca.24.gep
  %GEM4.fca.24.insert = insertvalue %gem %GEM4.fca.23.insert, double* %GEM4.fca.24.load, 24
  %GEM4.fca.25.load = load double*, double** %GEM2.fca.25.gep
  %GEM4.fca.25.insert = insertvalue %gem %GEM4.fca.24.insert, double* %GEM4.fca.25.load, 25
  %GEM4.fca.26.load = load double*, double** %GEM2.fca.26.gep
  %GEM4.fca.26.insert = insertvalue %gem %GEM4.fca.25.insert, double* %GEM4.fca.26.load, 26
  %GEM4.fca.27.load = load double*, double** %GEM2.fca.27.gep
  %GEM4.fca.27.insert = insertvalue %gem %GEM4.fca.26.insert, double* %GEM4.fca.27.load, 27
  %GEM4.fca.28.load = load double*, double** %GEM2.fca.28.gep
  %GEM4.fca.28.insert = insertvalue %gem %GEM4.fca.27.insert, double* %GEM4.fca.28.load, 28
  %GEM4.fca.29.load = load double*, double** %GEM2.fca.29.gep
  %GEM4.fca.29.insert = insertvalue %gem %GEM4.fca.28.insert, double* %GEM4.fca.29.load, 29
  %GEM4.fca.30.load = load double*, double** %GEM2.fca.30.gep
  %GEM4.fca.30.insert = insertvalue %gem %GEM4.fca.29.insert, double* %GEM4.fca.30.load, 30
  %GEM4.fca.31.load = load double*, double** %GEM2.fca.31.gep
  %GEM4.fca.31.insert = insertvalue %gem %GEM4.fca.30.insert, double* %GEM4.fca.31.load, 31
  %GEM4.fca.32.load = load double*, double** %GEM2.fca.32.gep
  %GEM4.fca.32.insert = insertvalue %gem %GEM4.fca.31.insert, double* %GEM4.fca.32.load, 32
  %GEM4.fca.33.load = load double, double* %GEM2.fca.33.gep
  %GEM4.fca.33.insert = insertvalue %gem %GEM4.fca.32.insert, double %GEM4.fca.33.load, 33
  %GEM4.fca.34.load = load double, double* %GEM2.fca.34.gep
  %GEM4.fca.34.insert = insertvalue %gem %GEM4.fca.33.insert, double %GEM4.fca.34.load, 34
  %GEM4.fca.35.load = load double, double* %GEM2.fca.35.gep
  %GEM4.fca.35.insert = insertvalue %gem %GEM4.fca.34.insert, double %GEM4.fca.35.load, 35
  %GEM4.fca.36.load = load double, double* %GEM2.fca.36.gep
  %GEM4.fca.36.insert = insertvalue %gem %GEM4.fca.35.insert, double %GEM4.fca.36.load, 36
  %GEM4.fca.37.load = load double, double* %GEM2.fca.37.gep
  %GEM4.fca.37.insert = insertvalue %gem %GEM4.fca.36.insert, double %GEM4.fca.37.load, 37
  %GEM4.fca.38.load = load <2 x double>*, <2 x double>** %GEM2.fca.38.gep
  %GEM4.fca.38.insert = insertvalue %gem %GEM4.fca.37.insert, <2 x double>* %GEM4.fca.38.load, 38
  %GEM4.fca.39.load = load <2 x double>*, <2 x double>** %GEM2.fca.39.gep
  %GEM4.fca.39.insert = insertvalue %gem %GEM4.fca.38.insert, <2 x double>* %GEM4.fca.39.load, 39
  %GEM4.fca.40.load = load <2 x double>*, <2 x double>** %GEM2.fca.40.gep
  %GEM4.fca.40.insert = insertvalue %gem %GEM4.fca.39.insert, <2 x double>* %GEM4.fca.40.load, 40
  %GEM4.fca.41.load = load <2 x double>*, <2 x double>** %GEM2.fca.41.gep
  %GEM4.fca.41.insert = insertvalue %gem %GEM4.fca.40.insert, <2 x double>* %GEM4.fca.41.load, 41
  %GEM4.fca.42.load = load <2 x double>*, <2 x double>** %GEM2.fca.42.gep
  %GEM4.fca.42.insert = insertvalue %gem %GEM4.fca.41.insert, <2 x double>* %GEM4.fca.42.load, 42
  %GEM4.fca.43.load = load <2 x double>*, <2 x double>** %GEM2.fca.43.gep
  %GEM4.fca.43.insert = insertvalue %gem %GEM4.fca.42.insert, <2 x double>* %GEM4.fca.43.load, 43
  %GEM4.fca.44.load = load <2 x double>, <2 x double>* %GEM2.fca.44.gep
  %GEM4.fca.44.insert = insertvalue %gem %GEM4.fca.43.insert, <2 x double> %GEM4.fca.44.load, 44
  %GEM4.fca.45.load = load <2 x double>, <2 x double>* %GEM2.fca.45.gep
  %GEM4.fca.45.insert = insertvalue %gem %GEM4.fca.44.insert, <2 x double> %GEM4.fca.45.load, 45
  %GEM4.fca.46.load = load <2 x double>, <2 x double>* %GEM2.fca.46.gep
  %GEM4.fca.46.insert = insertvalue %gem %GEM4.fca.45.insert, <2 x double> %GEM4.fca.46.load, 46
  %GEM4.fca.47.load = load <2 x double>, <2 x double>* %GEM2.fca.47.gep
  %GEM4.fca.47.insert = insertvalue %gem %GEM4.fca.46.insert, <2 x double> %GEM4.fca.47.load, 47
  %GEM4.fca.48.load = load <2 x double>, <2 x double>* %GEM2.fca.48.gep
  %GEM4.fca.48.insert = insertvalue %gem %GEM4.fca.47.insert, <2 x double> %GEM4.fca.48.load, 48
  %GEM4.fca.49.load = load <2 x double>, <2 x double>* %GEM2.fca.49.gep
  %GEM4.fca.49.insert = insertvalue %gem %GEM4.fca.48.insert, <2 x double> %GEM4.fca.49.load, 49
  %GEM4.fca.50.load = load <4 x double>, <4 x double>* %GEM2.fca.50.gep
  %GEM4.fca.50.insert = insertvalue %gem %GEM4.fca.49.insert, <4 x double> %GEM4.fca.50.load, 50
  %GEM4.fca.51.load = load double, double* %GEM2.fca.51.gep
  %p2GMP107 = call %gemPrm @"gemPrm@Z6gemPrmM52N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PN8pc_DISC2[V"()
  %p2GMP107.fca.0.extract = extractvalue %gemPrm %p2GMP107, 0
  %p2GMP107.fca.0.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 0
  store double* %p2GMP107.fca.0.extract, double** %p2GMP107.fca.0.gep
  %p2GMP107.fca.1.extract = extractvalue %gemPrm %p2GMP107, 1
  %p2GMP107.fca.1.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 1
  store double* %p2GMP107.fca.1.extract, double** %p2GMP107.fca.1.gep
  %p2GMP107.fca.2.extract = extractvalue %gemPrm %p2GMP107, 2
  %p2GMP107.fca.2.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 2
  store double* %p2GMP107.fca.2.extract, double** %p2GMP107.fca.2.gep
  %p2GMP107.fca.3.extract = extractvalue %gemPrm %p2GMP107, 3
  %p2GMP107.fca.3.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 3
  store double* %p2GMP107.fca.3.extract, double** %p2GMP107.fca.3.gep
  %p2GMP107.fca.4.extract = extractvalue %gemPrm %p2GMP107, 4
  %p2GMP107.fca.4.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 4
  store double* %p2GMP107.fca.4.extract, double** %p2GMP107.fca.4.gep
  %p2GMP107.fca.5.extract = extractvalue %gemPrm %p2GMP107, 5
  %p2GMP107.fca.5.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 5
  store double* %p2GMP107.fca.5.extract, double** %p2GMP107.fca.5.gep
  %p2GMP107.fca.6.extract = extractvalue %gemPrm %p2GMP107, 6
  %p2GMP107.fca.6.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 6
  store <3 x double>* %p2GMP107.fca.6.extract, <3 x double>** %p2GMP107.fca.6.gep
  %p2GMP107.fca.7.extract = extractvalue %gemPrm %p2GMP107, 7
  %p2GMP107.fca.7.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 7
  store <3 x double>* %p2GMP107.fca.7.extract, <3 x double>** %p2GMP107.fca.7.gep
  %p2GMP107.fca.8.extract = extractvalue %gemPrm %p2GMP107, 8
  %p2GMP107.fca.8.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 8
  store <3 x double>* %p2GMP107.fca.8.extract, <3 x double>** %p2GMP107.fca.8.gep
  %p2GMP107.fca.9.extract = extractvalue %gemPrm %p2GMP107, 9
  %p2GMP107.fca.9.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 9
  store <3 x double>* %p2GMP107.fca.9.extract, <3 x double>** %p2GMP107.fca.9.gep
  %p2GMP107.fca.10.extract = extractvalue %gemPrm %p2GMP107, 10
  %p2GMP107.fca.10.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 10
  store <3 x double>* %p2GMP107.fca.10.extract, <3 x double>** %p2GMP107.fca.10.gep
  %p2GMP107.fca.11.extract = extractvalue %gemPrm %p2GMP107, 11
  %p2GMP107.fca.11.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 11
  store <3 x double>* %p2GMP107.fca.11.extract, <3 x double>** %p2GMP107.fca.11.gep
  %p2GMP107.fca.12.extract = extractvalue %gemPrm %p2GMP107, 12
  %p2GMP107.fca.12.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 12
  store <3 x double>* %p2GMP107.fca.12.extract, <3 x double>** %p2GMP107.fca.12.gep
  %p2GMP107.fca.13.extract = extractvalue %gemPrm %p2GMP107, 13
  %p2GMP107.fca.13.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 13
  store <2 x double>* %p2GMP107.fca.13.extract, <2 x double>** %p2GMP107.fca.13.gep
  %p2GMP107.fca.14.extract = extractvalue %gemPrm %p2GMP107, 14
  %p2GMP107.fca.14.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 14
  store <2 x double>* %p2GMP107.fca.14.extract, <2 x double>** %p2GMP107.fca.14.gep
  %p2GMP107.fca.15.extract = extractvalue %gemPrm %p2GMP107, 15
  %p2GMP107.fca.15.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 15
  store <2 x double>* %p2GMP107.fca.15.extract, <2 x double>** %p2GMP107.fca.15.gep
  %p2GMP107.fca.16.extract = extractvalue %gemPrm %p2GMP107, 16
  %p2GMP107.fca.16.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 16
  store <2 x double>* %p2GMP107.fca.16.extract, <2 x double>** %p2GMP107.fca.16.gep
  %p2GMP107.fca.17.extract = extractvalue %gemPrm %p2GMP107, 17
  %p2GMP107.fca.17.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 17
  store <2 x double>* %p2GMP107.fca.17.extract, <2 x double>** %p2GMP107.fca.17.gep
  %p2GMP107.fca.18.extract = extractvalue %gemPrm %p2GMP107, 18
  %p2GMP107.fca.18.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 18
  store <2 x double>* %p2GMP107.fca.18.extract, <2 x double>** %p2GMP107.fca.18.gep
  %p2GMP107.fca.19.extract = extractvalue %gemPrm %p2GMP107, 19
  %p2GMP107.fca.19.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 19
  store <2 x double>* %p2GMP107.fca.19.extract, <2 x double>** %p2GMP107.fca.19.gep
  %p2GMP107.fca.20.extract = extractvalue %gemPrm %p2GMP107, 20
  %p2GMP107.fca.20.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 20
  store <2 x double>* %p2GMP107.fca.20.extract, <2 x double>** %p2GMP107.fca.20.gep
  %p2GMP107.fca.21.extract = extractvalue %gemPrm %p2GMP107, 21
  %p2GMP107.fca.21.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 21
  store <2 x double>* %p2GMP107.fca.21.extract, <2 x double>** %p2GMP107.fca.21.gep
  %p2GMP107.fca.22.extract = extractvalue %gemPrm %p2GMP107, 22
  %p2GMP107.fca.22.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 22
  store <2 x double>* %p2GMP107.fca.22.extract, <2 x double>** %p2GMP107.fca.22.gep
  %p2GMP107.fca.23.extract = extractvalue %gemPrm %p2GMP107, 23
  %p2GMP107.fca.23.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 23
  store <2 x double>* %p2GMP107.fca.23.extract, <2 x double>** %p2GMP107.fca.23.gep
  %p2GMP107.fca.24.extract = extractvalue %gemPrm %p2GMP107, 24
  %p2GMP107.fca.24.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 24
  store <2 x double>* %p2GMP107.fca.24.extract, <2 x double>** %p2GMP107.fca.24.gep
  %p2GMP107.fca.25.extract = extractvalue %gemPrm %p2GMP107, 25
  %p2GMP107.fca.25.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 25
  store <2 x double>* %p2GMP107.fca.25.extract, <2 x double>** %p2GMP107.fca.25.gep
  %p2GMP107.fca.26.extract = extractvalue %gemPrm %p2GMP107, 26
  %p2GMP107.fca.26.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 26
  store <2 x double>* %p2GMP107.fca.26.extract, <2 x double>** %p2GMP107.fca.26.gep
  %p2GMP107.fca.27.extract = extractvalue %gemPrm %p2GMP107, 27
  %p2GMP107.fca.27.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 27
  store <2 x double>* %p2GMP107.fca.27.extract, <2 x double>** %p2GMP107.fca.27.gep
  %p2GMP107.fca.28.extract = extractvalue %gemPrm %p2GMP107, 28
  %p2GMP107.fca.28.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 28
  store <2 x double>* %p2GMP107.fca.28.extract, <2 x double>** %p2GMP107.fca.28.gep
  %p2GMP107.fca.29.extract = extractvalue %gemPrm %p2GMP107, 29
  %p2GMP107.fca.29.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 29
  store <2 x double>* %p2GMP107.fca.29.extract, <2 x double>** %p2GMP107.fca.29.gep
  %p2GMP107.fca.30.extract = extractvalue %gemPrm %p2GMP107, 30
  %p2GMP107.fca.30.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 30
  store <2 x double>* %p2GMP107.fca.30.extract, <2 x double>** %p2GMP107.fca.30.gep
  %p2GMP107.fca.31.extract = extractvalue %gemPrm %p2GMP107, 31
  %p2GMP107.fca.31.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 31
  store <2 x double>* %p2GMP107.fca.31.extract, <2 x double>** %p2GMP107.fca.31.gep
  %p2GMP107.fca.32.extract = extractvalue %gemPrm %p2GMP107, 32
  %p2GMP107.fca.32.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 32
  store <2 x double>* %p2GMP107.fca.32.extract, <2 x double>** %p2GMP107.fca.32.gep
  %p2GMP107.fca.33.extract = extractvalue %gemPrm %p2GMP107, 33
  %p2GMP107.fca.33.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 33
  store <2 x double>* %p2GMP107.fca.33.extract, <2 x double>** %p2GMP107.fca.33.gep
  %p2GMP107.fca.34.extract = extractvalue %gemPrm %p2GMP107, 34
  %p2GMP107.fca.34.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 34
  store <2 x double>* %p2GMP107.fca.34.extract, <2 x double>** %p2GMP107.fca.34.gep
  %p2GMP107.fca.35.extract = extractvalue %gemPrm %p2GMP107, 35
  %p2GMP107.fca.35.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 35
  store <2 x double>* %p2GMP107.fca.35.extract, <2 x double>** %p2GMP107.fca.35.gep
  %p2GMP107.fca.36.extract = extractvalue %gemPrm %p2GMP107, 36
  %p2GMP107.fca.36.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 36
  store <2 x double>* %p2GMP107.fca.36.extract, <2 x double>** %p2GMP107.fca.36.gep
  %p2GMP107.fca.37.extract = extractvalue %gemPrm %p2GMP107, 37
  %p2GMP107.fca.37.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 37
  store <2 x double>* %p2GMP107.fca.37.extract, <2 x double>** %p2GMP107.fca.37.gep
  %p2GMP107.fca.38.extract = extractvalue %gemPrm %p2GMP107, 38
  %p2GMP107.fca.38.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 38
  store <2 x double>* %p2GMP107.fca.38.extract, <2 x double>** %p2GMP107.fca.38.gep
  %p2GMP107.fca.39.extract = extractvalue %gemPrm %p2GMP107, 39
  %p2GMP107.fca.39.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 39
  store <2 x double>* %p2GMP107.fca.39.extract, <2 x double>** %p2GMP107.fca.39.gep
  %p2GMP107.fca.40.extract = extractvalue %gemPrm %p2GMP107, 40
  %p2GMP107.fca.40.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 40
  store <2 x double>* %p2GMP107.fca.40.extract, <2 x double>** %p2GMP107.fca.40.gep
  %p2GMP107.fca.41.extract = extractvalue %gemPrm %p2GMP107, 41
  %p2GMP107.fca.41.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 41
  store <2 x double>* %p2GMP107.fca.41.extract, <2 x double>** %p2GMP107.fca.41.gep
  %p2GMP107.fca.42.extract = extractvalue %gemPrm %p2GMP107, 42
  %p2GMP107.fca.42.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 42
  store <4 x double>* %p2GMP107.fca.42.extract, <4 x double>** %p2GMP107.fca.42.gep
  %p2GMP107.fca.43.extract = extractvalue %gemPrm %p2GMP107, 43
  %p2GMP107.fca.43.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 43
  store <4 x double>* %p2GMP107.fca.43.extract, <4 x double>** %p2GMP107.fca.43.gep
  %p2GMP107.fca.44.extract = extractvalue %gemPrm %p2GMP107, 44
  %p2GMP107.fca.44.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 44
  store <4 x double>* %p2GMP107.fca.44.extract, <4 x double>** %p2GMP107.fca.44.gep
  %p2GMP107.fca.45.extract = extractvalue %gemPrm %p2GMP107, 45
  %p2GMP107.fca.45.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 45
  store <4 x double>* %p2GMP107.fca.45.extract, <4 x double>** %p2GMP107.fca.45.gep
  %p2GMP107.fca.46.extract = extractvalue %gemPrm %p2GMP107, 46
  %p2GMP107.fca.46.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 46
  store <4 x double>* %p2GMP107.fca.46.extract, <4 x double>** %p2GMP107.fca.46.gep
  %p2GMP107.fca.47.extract = extractvalue %gemPrm %p2GMP107, 47
  %p2GMP107.fca.47.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 47
  store <4 x double>* %p2GMP107.fca.47.extract, <4 x double>** %p2GMP107.fca.47.gep
  %p2GMP107.fca.48.extract = extractvalue %gemPrm %p2GMP107, 48
  %p2GMP107.fca.48.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 48
  store <4 x double>* %p2GMP107.fca.48.extract, <4 x double>** %p2GMP107.fca.48.gep
  %p2GMP107.fca.49.extract = extractvalue %gemPrm %p2GMP107, 49
  %p2GMP107.fca.49.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 49
  store <4 x double>* %p2GMP107.fca.49.extract, <4 x double>** %p2GMP107.fca.49.gep
  %p2GMP107.fca.50.extract = extractvalue %gemPrm %p2GMP107, 50
  %p2GMP107.fca.50.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 50
  store <4 x double>* %p2GMP107.fca.50.extract, <4 x double>** %p2GMP107.fca.50.gep
  %p2GMP107.fca.51.extract = extractvalue %gemPrm %p2GMP107, 51
  %p2GMP107.fca.51.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 51
  store <3 x double>* %p2GMP107.fca.51.extract, <3 x double>** %p2GMP107.fca.51.gep
  %v1GMP108 = call %gemPrm @"gemPrm@Z6gemPrmM52N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PN8pc_DISC2[V"()
  %v1GMP108.fca.0.extract = extractvalue %gemPrm %v1GMP108, 0
  %v1GMP108.fca.0.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 0
  store double* %v1GMP108.fca.0.extract, double** %v1GMP108.fca.0.gep
  %v1GMP108.fca.1.extract = extractvalue %gemPrm %v1GMP108, 1
  %v1GMP108.fca.1.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 1
  store double* %v1GMP108.fca.1.extract, double** %v1GMP108.fca.1.gep
  %v1GMP108.fca.2.extract = extractvalue %gemPrm %v1GMP108, 2
  %v1GMP108.fca.2.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 2
  store double* %v1GMP108.fca.2.extract, double** %v1GMP108.fca.2.gep
  %v1GMP108.fca.3.extract = extractvalue %gemPrm %v1GMP108, 3
  %v1GMP108.fca.3.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 3
  store double* %v1GMP108.fca.3.extract, double** %v1GMP108.fca.3.gep
  %v1GMP108.fca.4.extract = extractvalue %gemPrm %v1GMP108, 4
  %v1GMP108.fca.4.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 4
  store double* %v1GMP108.fca.4.extract, double** %v1GMP108.fca.4.gep
  %v1GMP108.fca.5.extract = extractvalue %gemPrm %v1GMP108, 5
  %v1GMP108.fca.5.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 5
  store double* %v1GMP108.fca.5.extract, double** %v1GMP108.fca.5.gep
  %v1GMP108.fca.6.extract = extractvalue %gemPrm %v1GMP108, 6
  %v1GMP108.fca.6.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 6
  store <3 x double>* %v1GMP108.fca.6.extract, <3 x double>** %v1GMP108.fca.6.gep
  %v1GMP108.fca.7.extract = extractvalue %gemPrm %v1GMP108, 7
  %v1GMP108.fca.7.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 7
  store <3 x double>* %v1GMP108.fca.7.extract, <3 x double>** %v1GMP108.fca.7.gep
  %v1GMP108.fca.8.extract = extractvalue %gemPrm %v1GMP108, 8
  %v1GMP108.fca.8.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 8
  store <3 x double>* %v1GMP108.fca.8.extract, <3 x double>** %v1GMP108.fca.8.gep
  %v1GMP108.fca.9.extract = extractvalue %gemPrm %v1GMP108, 9
  %v1GMP108.fca.9.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 9
  store <3 x double>* %v1GMP108.fca.9.extract, <3 x double>** %v1GMP108.fca.9.gep
  %v1GMP108.fca.10.extract = extractvalue %gemPrm %v1GMP108, 10
  %v1GMP108.fca.10.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 10
  store <3 x double>* %v1GMP108.fca.10.extract, <3 x double>** %v1GMP108.fca.10.gep
  %v1GMP108.fca.11.extract = extractvalue %gemPrm %v1GMP108, 11
  %v1GMP108.fca.11.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 11
  store <3 x double>* %v1GMP108.fca.11.extract, <3 x double>** %v1GMP108.fca.11.gep
  %v1GMP108.fca.12.extract = extractvalue %gemPrm %v1GMP108, 12
  %v1GMP108.fca.12.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 12
  store <3 x double>* %v1GMP108.fca.12.extract, <3 x double>** %v1GMP108.fca.12.gep
  %v1GMP108.fca.13.extract = extractvalue %gemPrm %v1GMP108, 13
  %v1GMP108.fca.13.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 13
  store <2 x double>* %v1GMP108.fca.13.extract, <2 x double>** %v1GMP108.fca.13.gep
  %v1GMP108.fca.14.extract = extractvalue %gemPrm %v1GMP108, 14
  %v1GMP108.fca.14.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 14
  store <2 x double>* %v1GMP108.fca.14.extract, <2 x double>** %v1GMP108.fca.14.gep
  %v1GMP108.fca.15.extract = extractvalue %gemPrm %v1GMP108, 15
  %v1GMP108.fca.15.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 15
  store <2 x double>* %v1GMP108.fca.15.extract, <2 x double>** %v1GMP108.fca.15.gep
  %v1GMP108.fca.16.extract = extractvalue %gemPrm %v1GMP108, 16
  %v1GMP108.fca.16.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 16
  store <2 x double>* %v1GMP108.fca.16.extract, <2 x double>** %v1GMP108.fca.16.gep
  %v1GMP108.fca.17.extract = extractvalue %gemPrm %v1GMP108, 17
  %v1GMP108.fca.17.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 17
  store <2 x double>* %v1GMP108.fca.17.extract, <2 x double>** %v1GMP108.fca.17.gep
  %v1GMP108.fca.18.extract = extractvalue %gemPrm %v1GMP108, 18
  %v1GMP108.fca.18.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 18
  store <2 x double>* %v1GMP108.fca.18.extract, <2 x double>** %v1GMP108.fca.18.gep
  %v1GMP108.fca.19.extract = extractvalue %gemPrm %v1GMP108, 19
  %v1GMP108.fca.19.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 19
  store <2 x double>* %v1GMP108.fca.19.extract, <2 x double>** %v1GMP108.fca.19.gep
  %v1GMP108.fca.20.extract = extractvalue %gemPrm %v1GMP108, 20
  %v1GMP108.fca.20.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 20
  store <2 x double>* %v1GMP108.fca.20.extract, <2 x double>** %v1GMP108.fca.20.gep
  %v1GMP108.fca.21.extract = extractvalue %gemPrm %v1GMP108, 21
  %v1GMP108.fca.21.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 21
  store <2 x double>* %v1GMP108.fca.21.extract, <2 x double>** %v1GMP108.fca.21.gep
  %v1GMP108.fca.22.extract = extractvalue %gemPrm %v1GMP108, 22
  %v1GMP108.fca.22.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 22
  store <2 x double>* %v1GMP108.fca.22.extract, <2 x double>** %v1GMP108.fca.22.gep
  %v1GMP108.fca.23.extract = extractvalue %gemPrm %v1GMP108, 23
  %v1GMP108.fca.23.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 23
  store <2 x double>* %v1GMP108.fca.23.extract, <2 x double>** %v1GMP108.fca.23.gep
  %v1GMP108.fca.24.extract = extractvalue %gemPrm %v1GMP108, 24
  %v1GMP108.fca.24.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 24
  store <2 x double>* %v1GMP108.fca.24.extract, <2 x double>** %v1GMP108.fca.24.gep
  %v1GMP108.fca.25.extract = extractvalue %gemPrm %v1GMP108, 25
  %v1GMP108.fca.25.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 25
  store <2 x double>* %v1GMP108.fca.25.extract, <2 x double>** %v1GMP108.fca.25.gep
  %v1GMP108.fca.26.extract = extractvalue %gemPrm %v1GMP108, 26
  %v1GMP108.fca.26.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 26
  store <2 x double>* %v1GMP108.fca.26.extract, <2 x double>** %v1GMP108.fca.26.gep
  %v1GMP108.fca.27.extract = extractvalue %gemPrm %v1GMP108, 27
  %v1GMP108.fca.27.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 27
  store <2 x double>* %v1GMP108.fca.27.extract, <2 x double>** %v1GMP108.fca.27.gep
  %v1GMP108.fca.28.extract = extractvalue %gemPrm %v1GMP108, 28
  %v1GMP108.fca.28.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 28
  store <2 x double>* %v1GMP108.fca.28.extract, <2 x double>** %v1GMP108.fca.28.gep
  %v1GMP108.fca.29.extract = extractvalue %gemPrm %v1GMP108, 29
  %v1GMP108.fca.29.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 29
  store <2 x double>* %v1GMP108.fca.29.extract, <2 x double>** %v1GMP108.fca.29.gep
  %v1GMP108.fca.30.extract = extractvalue %gemPrm %v1GMP108, 30
  %v1GMP108.fca.30.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 30
  store <2 x double>* %v1GMP108.fca.30.extract, <2 x double>** %v1GMP108.fca.30.gep
  %v1GMP108.fca.31.extract = extractvalue %gemPrm %v1GMP108, 31
  %v1GMP108.fca.31.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 31
  store <2 x double>* %v1GMP108.fca.31.extract, <2 x double>** %v1GMP108.fca.31.gep
  %v1GMP108.fca.32.extract = extractvalue %gemPrm %v1GMP108, 32
  %v1GMP108.fca.32.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 32
  store <2 x double>* %v1GMP108.fca.32.extract, <2 x double>** %v1GMP108.fca.32.gep
  %v1GMP108.fca.33.extract = extractvalue %gemPrm %v1GMP108, 33
  %v1GMP108.fca.33.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 33
  store <2 x double>* %v1GMP108.fca.33.extract, <2 x double>** %v1GMP108.fca.33.gep
  %v1GMP108.fca.34.extract = extractvalue %gemPrm %v1GMP108, 34
  %v1GMP108.fca.34.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 34
  store <2 x double>* %v1GMP108.fca.34.extract, <2 x double>** %v1GMP108.fca.34.gep
  %v1GMP108.fca.35.extract = extractvalue %gemPrm %v1GMP108, 35
  %v1GMP108.fca.35.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 35
  store <2 x double>* %v1GMP108.fca.35.extract, <2 x double>** %v1GMP108.fca.35.gep
  %v1GMP108.fca.36.extract = extractvalue %gemPrm %v1GMP108, 36
  %v1GMP108.fca.36.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 36
  store <2 x double>* %v1GMP108.fca.36.extract, <2 x double>** %v1GMP108.fca.36.gep
  %v1GMP108.fca.37.extract = extractvalue %gemPrm %v1GMP108, 37
  %v1GMP108.fca.37.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 37
  store <2 x double>* %v1GMP108.fca.37.extract, <2 x double>** %v1GMP108.fca.37.gep
  %v1GMP108.fca.38.extract = extractvalue %gemPrm %v1GMP108, 38
  %v1GMP108.fca.38.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 38
  store <2 x double>* %v1GMP108.fca.38.extract, <2 x double>** %v1GMP108.fca.38.gep
  %v1GMP108.fca.39.extract = extractvalue %gemPrm %v1GMP108, 39
  %v1GMP108.fca.39.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 39
  store <2 x double>* %v1GMP108.fca.39.extract, <2 x double>** %v1GMP108.fca.39.gep
  %v1GMP108.fca.40.extract = extractvalue %gemPrm %v1GMP108, 40
  %v1GMP108.fca.40.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 40
  store <2 x double>* %v1GMP108.fca.40.extract, <2 x double>** %v1GMP108.fca.40.gep
  %v1GMP108.fca.41.extract = extractvalue %gemPrm %v1GMP108, 41
  %v1GMP108.fca.41.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 41
  store <2 x double>* %v1GMP108.fca.41.extract, <2 x double>** %v1GMP108.fca.41.gep
  %v1GMP108.fca.42.extract = extractvalue %gemPrm %v1GMP108, 42
  %v1GMP108.fca.42.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 42
  store <4 x double>* %v1GMP108.fca.42.extract, <4 x double>** %v1GMP108.fca.42.gep
  %v1GMP108.fca.43.extract = extractvalue %gemPrm %v1GMP108, 43
  %v1GMP108.fca.43.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 43
  store <4 x double>* %v1GMP108.fca.43.extract, <4 x double>** %v1GMP108.fca.43.gep
  %v1GMP108.fca.44.extract = extractvalue %gemPrm %v1GMP108, 44
  %v1GMP108.fca.44.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 44
  store <4 x double>* %v1GMP108.fca.44.extract, <4 x double>** %v1GMP108.fca.44.gep
  %v1GMP108.fca.45.extract = extractvalue %gemPrm %v1GMP108, 45
  %v1GMP108.fca.45.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 45
  store <4 x double>* %v1GMP108.fca.45.extract, <4 x double>** %v1GMP108.fca.45.gep
  %v1GMP108.fca.46.extract = extractvalue %gemPrm %v1GMP108, 46
  %v1GMP108.fca.46.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 46
  store <4 x double>* %v1GMP108.fca.46.extract, <4 x double>** %v1GMP108.fca.46.gep
  %v1GMP108.fca.47.extract = extractvalue %gemPrm %v1GMP108, 47
  %v1GMP108.fca.47.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 47
  store <4 x double>* %v1GMP108.fca.47.extract, <4 x double>** %v1GMP108.fca.47.gep
  %v1GMP108.fca.48.extract = extractvalue %gemPrm %v1GMP108, 48
  %v1GMP108.fca.48.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 48
  store <4 x double>* %v1GMP108.fca.48.extract, <4 x double>** %v1GMP108.fca.48.gep
  %v1GMP108.fca.49.extract = extractvalue %gemPrm %v1GMP108, 49
  %v1GMP108.fca.49.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 49
  store <4 x double>* %v1GMP108.fca.49.extract, <4 x double>** %v1GMP108.fca.49.gep
  %v1GMP108.fca.50.extract = extractvalue %gemPrm %v1GMP108, 50
  %v1GMP108.fca.50.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 50
  store <4 x double>* %v1GMP108.fca.50.extract, <4 x double>** %v1GMP108.fca.50.gep
  %v1GMP108.fca.51.extract = extractvalue %gemPrm %v1GMP108, 51
  %v1GMP108.fca.51.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 51
  store <3 x double>* %v1GMP108.fca.51.extract, <3 x double>** %v1GMP108.fca.51.gep
  %v2GMP109 = call %gemPrm @"gemPrm@Z6gemPrmM52N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PN8pc_DISC2[V"()
  %v2GMP109.fca.0.extract = extractvalue %gemPrm %v2GMP109, 0
  %v2GMP109.fca.0.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 0
  store double* %v2GMP109.fca.0.extract, double** %v2GMP109.fca.0.gep
  %v2GMP109.fca.1.extract = extractvalue %gemPrm %v2GMP109, 1
  %v2GMP109.fca.1.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 1
  store double* %v2GMP109.fca.1.extract, double** %v2GMP109.fca.1.gep
  %v2GMP109.fca.2.extract = extractvalue %gemPrm %v2GMP109, 2
  %v2GMP109.fca.2.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 2
  store double* %v2GMP109.fca.2.extract, double** %v2GMP109.fca.2.gep
  %v2GMP109.fca.3.extract = extractvalue %gemPrm %v2GMP109, 3
  %v2GMP109.fca.3.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 3
  store double* %v2GMP109.fca.3.extract, double** %v2GMP109.fca.3.gep
  %v2GMP109.fca.4.extract = extractvalue %gemPrm %v2GMP109, 4
  %v2GMP109.fca.4.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 4
  store double* %v2GMP109.fca.4.extract, double** %v2GMP109.fca.4.gep
  %v2GMP109.fca.5.extract = extractvalue %gemPrm %v2GMP109, 5
  %v2GMP109.fca.5.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 5
  store double* %v2GMP109.fca.5.extract, double** %v2GMP109.fca.5.gep
  %v2GMP109.fca.6.extract = extractvalue %gemPrm %v2GMP109, 6
  %v2GMP109.fca.6.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 6
  store <3 x double>* %v2GMP109.fca.6.extract, <3 x double>** %v2GMP109.fca.6.gep
  %v2GMP109.fca.7.extract = extractvalue %gemPrm %v2GMP109, 7
  %v2GMP109.fca.7.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 7
  store <3 x double>* %v2GMP109.fca.7.extract, <3 x double>** %v2GMP109.fca.7.gep
  %v2GMP109.fca.8.extract = extractvalue %gemPrm %v2GMP109, 8
  %v2GMP109.fca.8.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 8
  store <3 x double>* %v2GMP109.fca.8.extract, <3 x double>** %v2GMP109.fca.8.gep
  %v2GMP109.fca.9.extract = extractvalue %gemPrm %v2GMP109, 9
  %v2GMP109.fca.9.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 9
  store <3 x double>* %v2GMP109.fca.9.extract, <3 x double>** %v2GMP109.fca.9.gep
  %v2GMP109.fca.10.extract = extractvalue %gemPrm %v2GMP109, 10
  %v2GMP109.fca.10.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 10
  store <3 x double>* %v2GMP109.fca.10.extract, <3 x double>** %v2GMP109.fca.10.gep
  %v2GMP109.fca.11.extract = extractvalue %gemPrm %v2GMP109, 11
  %v2GMP109.fca.11.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 11
  store <3 x double>* %v2GMP109.fca.11.extract, <3 x double>** %v2GMP109.fca.11.gep
  %v2GMP109.fca.12.extract = extractvalue %gemPrm %v2GMP109, 12
  %v2GMP109.fca.12.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 12
  store <3 x double>* %v2GMP109.fca.12.extract, <3 x double>** %v2GMP109.fca.12.gep
  %v2GMP109.fca.13.extract = extractvalue %gemPrm %v2GMP109, 13
  %v2GMP109.fca.13.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 13
  store <2 x double>* %v2GMP109.fca.13.extract, <2 x double>** %v2GMP109.fca.13.gep
  %v2GMP109.fca.14.extract = extractvalue %gemPrm %v2GMP109, 14
  %v2GMP109.fca.14.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 14
  store <2 x double>* %v2GMP109.fca.14.extract, <2 x double>** %v2GMP109.fca.14.gep
  %v2GMP109.fca.15.extract = extractvalue %gemPrm %v2GMP109, 15
  %v2GMP109.fca.15.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 15
  store <2 x double>* %v2GMP109.fca.15.extract, <2 x double>** %v2GMP109.fca.15.gep
  %v2GMP109.fca.16.extract = extractvalue %gemPrm %v2GMP109, 16
  %v2GMP109.fca.16.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 16
  store <2 x double>* %v2GMP109.fca.16.extract, <2 x double>** %v2GMP109.fca.16.gep
  %v2GMP109.fca.17.extract = extractvalue %gemPrm %v2GMP109, 17
  %v2GMP109.fca.17.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 17
  store <2 x double>* %v2GMP109.fca.17.extract, <2 x double>** %v2GMP109.fca.17.gep
  %v2GMP109.fca.18.extract = extractvalue %gemPrm %v2GMP109, 18
  %v2GMP109.fca.18.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 18
  store <2 x double>* %v2GMP109.fca.18.extract, <2 x double>** %v2GMP109.fca.18.gep
  %v2GMP109.fca.19.extract = extractvalue %gemPrm %v2GMP109, 19
  %v2GMP109.fca.19.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 19
  store <2 x double>* %v2GMP109.fca.19.extract, <2 x double>** %v2GMP109.fca.19.gep
  %v2GMP109.fca.20.extract = extractvalue %gemPrm %v2GMP109, 20
  %v2GMP109.fca.20.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 20
  store <2 x double>* %v2GMP109.fca.20.extract, <2 x double>** %v2GMP109.fca.20.gep
  %v2GMP109.fca.21.extract = extractvalue %gemPrm %v2GMP109, 21
  %v2GMP109.fca.21.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 21
  store <2 x double>* %v2GMP109.fca.21.extract, <2 x double>** %v2GMP109.fca.21.gep
  %v2GMP109.fca.22.extract = extractvalue %gemPrm %v2GMP109, 22
  %v2GMP109.fca.22.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 22
  store <2 x double>* %v2GMP109.fca.22.extract, <2 x double>** %v2GMP109.fca.22.gep
  %v2GMP109.fca.23.extract = extractvalue %gemPrm %v2GMP109, 23
  %v2GMP109.fca.23.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 23
  store <2 x double>* %v2GMP109.fca.23.extract, <2 x double>** %v2GMP109.fca.23.gep
  %v2GMP109.fca.24.extract = extractvalue %gemPrm %v2GMP109, 24
  %v2GMP109.fca.24.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 24
  store <2 x double>* %v2GMP109.fca.24.extract, <2 x double>** %v2GMP109.fca.24.gep
  %v2GMP109.fca.25.extract = extractvalue %gemPrm %v2GMP109, 25
  %v2GMP109.fca.25.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 25
  store <2 x double>* %v2GMP109.fca.25.extract, <2 x double>** %v2GMP109.fca.25.gep
  %v2GMP109.fca.26.extract = extractvalue %gemPrm %v2GMP109, 26
  %v2GMP109.fca.26.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 26
  store <2 x double>* %v2GMP109.fca.26.extract, <2 x double>** %v2GMP109.fca.26.gep
  %v2GMP109.fca.27.extract = extractvalue %gemPrm %v2GMP109, 27
  %v2GMP109.fca.27.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 27
  store <2 x double>* %v2GMP109.fca.27.extract, <2 x double>** %v2GMP109.fca.27.gep
  %v2GMP109.fca.28.extract = extractvalue %gemPrm %v2GMP109, 28
  %v2GMP109.fca.28.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 28
  store <2 x double>* %v2GMP109.fca.28.extract, <2 x double>** %v2GMP109.fca.28.gep
  %v2GMP109.fca.29.extract = extractvalue %gemPrm %v2GMP109, 29
  %v2GMP109.fca.29.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 29
  store <2 x double>* %v2GMP109.fca.29.extract, <2 x double>** %v2GMP109.fca.29.gep
  %v2GMP109.fca.30.extract = extractvalue %gemPrm %v2GMP109, 30
  %v2GMP109.fca.30.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 30
  store <2 x double>* %v2GMP109.fca.30.extract, <2 x double>** %v2GMP109.fca.30.gep
  %v2GMP109.fca.31.extract = extractvalue %gemPrm %v2GMP109, 31
  %v2GMP109.fca.31.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 31
  store <2 x double>* %v2GMP109.fca.31.extract, <2 x double>** %v2GMP109.fca.31.gep
  %v2GMP109.fca.32.extract = extractvalue %gemPrm %v2GMP109, 32
  %v2GMP109.fca.32.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 32
  store <2 x double>* %v2GMP109.fca.32.extract, <2 x double>** %v2GMP109.fca.32.gep
  %v2GMP109.fca.33.extract = extractvalue %gemPrm %v2GMP109, 33
  %v2GMP109.fca.33.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 33
  store <2 x double>* %v2GMP109.fca.33.extract, <2 x double>** %v2GMP109.fca.33.gep
  %v2GMP109.fca.34.extract = extractvalue %gemPrm %v2GMP109, 34
  %v2GMP109.fca.34.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 34
  store <2 x double>* %v2GMP109.fca.34.extract, <2 x double>** %v2GMP109.fca.34.gep
  %v2GMP109.fca.35.extract = extractvalue %gemPrm %v2GMP109, 35
  %v2GMP109.fca.35.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 35
  store <2 x double>* %v2GMP109.fca.35.extract, <2 x double>** %v2GMP109.fca.35.gep
  %v2GMP109.fca.36.extract = extractvalue %gemPrm %v2GMP109, 36
  %v2GMP109.fca.36.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 36
  store <2 x double>* %v2GMP109.fca.36.extract, <2 x double>** %v2GMP109.fca.36.gep
  %v2GMP109.fca.37.extract = extractvalue %gemPrm %v2GMP109, 37
  %v2GMP109.fca.37.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 37
  store <2 x double>* %v2GMP109.fca.37.extract, <2 x double>** %v2GMP109.fca.37.gep
  %v2GMP109.fca.38.extract = extractvalue %gemPrm %v2GMP109, 38
  %v2GMP109.fca.38.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 38
  store <2 x double>* %v2GMP109.fca.38.extract, <2 x double>** %v2GMP109.fca.38.gep
  %v2GMP109.fca.39.extract = extractvalue %gemPrm %v2GMP109, 39
  %v2GMP109.fca.39.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 39
  store <2 x double>* %v2GMP109.fca.39.extract, <2 x double>** %v2GMP109.fca.39.gep
  %v2GMP109.fca.40.extract = extractvalue %gemPrm %v2GMP109, 40
  %v2GMP109.fca.40.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 40
  store <2 x double>* %v2GMP109.fca.40.extract, <2 x double>** %v2GMP109.fca.40.gep
  %v2GMP109.fca.41.extract = extractvalue %gemPrm %v2GMP109, 41
  %v2GMP109.fca.41.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 41
  store <2 x double>* %v2GMP109.fca.41.extract, <2 x double>** %v2GMP109.fca.41.gep
  %v2GMP109.fca.42.extract = extractvalue %gemPrm %v2GMP109, 42
  %v2GMP109.fca.42.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 42
  store <4 x double>* %v2GMP109.fca.42.extract, <4 x double>** %v2GMP109.fca.42.gep
  %v2GMP109.fca.43.extract = extractvalue %gemPrm %v2GMP109, 43
  %v2GMP109.fca.43.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 43
  store <4 x double>* %v2GMP109.fca.43.extract, <4 x double>** %v2GMP109.fca.43.gep
  %v2GMP109.fca.44.extract = extractvalue %gemPrm %v2GMP109, 44
  %v2GMP109.fca.44.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 44
  store <4 x double>* %v2GMP109.fca.44.extract, <4 x double>** %v2GMP109.fca.44.gep
  %v2GMP109.fca.45.extract = extractvalue %gemPrm %v2GMP109, 45
  %v2GMP109.fca.45.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 45
  store <4 x double>* %v2GMP109.fca.45.extract, <4 x double>** %v2GMP109.fca.45.gep
  %v2GMP109.fca.46.extract = extractvalue %gemPrm %v2GMP109, 46
  %v2GMP109.fca.46.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 46
  store <4 x double>* %v2GMP109.fca.46.extract, <4 x double>** %v2GMP109.fca.46.gep
  %v2GMP109.fca.47.extract = extractvalue %gemPrm %v2GMP109, 47
  %v2GMP109.fca.47.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 47
  store <4 x double>* %v2GMP109.fca.47.extract, <4 x double>** %v2GMP109.fca.47.gep
  %v2GMP109.fca.48.extract = extractvalue %gemPrm %v2GMP109, 48
  %v2GMP109.fca.48.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 48
  store <4 x double>* %v2GMP109.fca.48.extract, <4 x double>** %v2GMP109.fca.48.gep
  %v2GMP109.fca.49.extract = extractvalue %gemPrm %v2GMP109, 49
  %v2GMP109.fca.49.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 49
  store <4 x double>* %v2GMP109.fca.49.extract, <4 x double>** %v2GMP109.fca.49.gep
  %v2GMP109.fca.50.extract = extractvalue %gemPrm %v2GMP109, 50
  %v2GMP109.fca.50.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 50
  store <4 x double>* %v2GMP109.fca.50.extract, <4 x double>** %v2GMP109.fca.50.gep
  %v2GMP109.fca.51.extract = extractvalue %gemPrm %v2GMP109, 51
  %v2GMP109.fca.51.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 51
  store <3 x double>* %v2GMP109.fca.51.extract, <3 x double>** %v2GMP109.fca.51.gep
  %v3GMP110 = call %gemPrm @"gemPrm@Z6gemPrmM52N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PN8pc_DISC2[V"()
  %v3GMP110.fca.0.extract = extractvalue %gemPrm %v3GMP110, 0
  %v3GMP110.fca.0.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 0
  store double* %v3GMP110.fca.0.extract, double** %v3GMP110.fca.0.gep
  %v3GMP110.fca.1.extract = extractvalue %gemPrm %v3GMP110, 1
  %v3GMP110.fca.1.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 1
  store double* %v3GMP110.fca.1.extract, double** %v3GMP110.fca.1.gep
  %v3GMP110.fca.2.extract = extractvalue %gemPrm %v3GMP110, 2
  %v3GMP110.fca.2.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 2
  store double* %v3GMP110.fca.2.extract, double** %v3GMP110.fca.2.gep
  %v3GMP110.fca.3.extract = extractvalue %gemPrm %v3GMP110, 3
  %v3GMP110.fca.3.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 3
  store double* %v3GMP110.fca.3.extract, double** %v3GMP110.fca.3.gep
  %v3GMP110.fca.4.extract = extractvalue %gemPrm %v3GMP110, 4
  %v3GMP110.fca.4.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 4
  store double* %v3GMP110.fca.4.extract, double** %v3GMP110.fca.4.gep
  %v3GMP110.fca.5.extract = extractvalue %gemPrm %v3GMP110, 5
  %v3GMP110.fca.5.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 5
  store double* %v3GMP110.fca.5.extract, double** %v3GMP110.fca.5.gep
  %v3GMP110.fca.6.extract = extractvalue %gemPrm %v3GMP110, 6
  %v3GMP110.fca.6.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 6
  store <3 x double>* %v3GMP110.fca.6.extract, <3 x double>** %v3GMP110.fca.6.gep
  %v3GMP110.fca.7.extract = extractvalue %gemPrm %v3GMP110, 7
  %v3GMP110.fca.7.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 7
  store <3 x double>* %v3GMP110.fca.7.extract, <3 x double>** %v3GMP110.fca.7.gep
  %v3GMP110.fca.8.extract = extractvalue %gemPrm %v3GMP110, 8
  %v3GMP110.fca.8.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 8
  store <3 x double>* %v3GMP110.fca.8.extract, <3 x double>** %v3GMP110.fca.8.gep
  %v3GMP110.fca.9.extract = extractvalue %gemPrm %v3GMP110, 9
  %v3GMP110.fca.9.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 9
  store <3 x double>* %v3GMP110.fca.9.extract, <3 x double>** %v3GMP110.fca.9.gep
  %v3GMP110.fca.10.extract = extractvalue %gemPrm %v3GMP110, 10
  %v3GMP110.fca.10.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 10
  store <3 x double>* %v3GMP110.fca.10.extract, <3 x double>** %v3GMP110.fca.10.gep
  %v3GMP110.fca.11.extract = extractvalue %gemPrm %v3GMP110, 11
  %v3GMP110.fca.11.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 11
  store <3 x double>* %v3GMP110.fca.11.extract, <3 x double>** %v3GMP110.fca.11.gep
  %v3GMP110.fca.12.extract = extractvalue %gemPrm %v3GMP110, 12
  %v3GMP110.fca.12.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 12
  store <3 x double>* %v3GMP110.fca.12.extract, <3 x double>** %v3GMP110.fca.12.gep
  %v3GMP110.fca.13.extract = extractvalue %gemPrm %v3GMP110, 13
  %v3GMP110.fca.13.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 13
  store <2 x double>* %v3GMP110.fca.13.extract, <2 x double>** %v3GMP110.fca.13.gep
  %v3GMP110.fca.14.extract = extractvalue %gemPrm %v3GMP110, 14
  %v3GMP110.fca.14.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 14
  store <2 x double>* %v3GMP110.fca.14.extract, <2 x double>** %v3GMP110.fca.14.gep
  %v3GMP110.fca.15.extract = extractvalue %gemPrm %v3GMP110, 15
  %v3GMP110.fca.15.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 15
  store <2 x double>* %v3GMP110.fca.15.extract, <2 x double>** %v3GMP110.fca.15.gep
  %v3GMP110.fca.16.extract = extractvalue %gemPrm %v3GMP110, 16
  %v3GMP110.fca.16.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 16
  store <2 x double>* %v3GMP110.fca.16.extract, <2 x double>** %v3GMP110.fca.16.gep
  %v3GMP110.fca.17.extract = extractvalue %gemPrm %v3GMP110, 17
  %v3GMP110.fca.17.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 17
  store <2 x double>* %v3GMP110.fca.17.extract, <2 x double>** %v3GMP110.fca.17.gep
  %v3GMP110.fca.18.extract = extractvalue %gemPrm %v3GMP110, 18
  %v3GMP110.fca.18.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 18
  store <2 x double>* %v3GMP110.fca.18.extract, <2 x double>** %v3GMP110.fca.18.gep
  %v3GMP110.fca.19.extract = extractvalue %gemPrm %v3GMP110, 19
  %v3GMP110.fca.19.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 19
  store <2 x double>* %v3GMP110.fca.19.extract, <2 x double>** %v3GMP110.fca.19.gep
  %v3GMP110.fca.20.extract = extractvalue %gemPrm %v3GMP110, 20
  %v3GMP110.fca.20.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 20
  store <2 x double>* %v3GMP110.fca.20.extract, <2 x double>** %v3GMP110.fca.20.gep
  %v3GMP110.fca.21.extract = extractvalue %gemPrm %v3GMP110, 21
  %v3GMP110.fca.21.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 21
  store <2 x double>* %v3GMP110.fca.21.extract, <2 x double>** %v3GMP110.fca.21.gep
  %v3GMP110.fca.22.extract = extractvalue %gemPrm %v3GMP110, 22
  %v3GMP110.fca.22.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 22
  store <2 x double>* %v3GMP110.fca.22.extract, <2 x double>** %v3GMP110.fca.22.gep
  %v3GMP110.fca.23.extract = extractvalue %gemPrm %v3GMP110, 23
  %v3GMP110.fca.23.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 23
  store <2 x double>* %v3GMP110.fca.23.extract, <2 x double>** %v3GMP110.fca.23.gep
  %v3GMP110.fca.24.extract = extractvalue %gemPrm %v3GMP110, 24
  %v3GMP110.fca.24.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 24
  store <2 x double>* %v3GMP110.fca.24.extract, <2 x double>** %v3GMP110.fca.24.gep
  %v3GMP110.fca.25.extract = extractvalue %gemPrm %v3GMP110, 25
  %v3GMP110.fca.25.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 25
  store <2 x double>* %v3GMP110.fca.25.extract, <2 x double>** %v3GMP110.fca.25.gep
  %v3GMP110.fca.26.extract = extractvalue %gemPrm %v3GMP110, 26
  %v3GMP110.fca.26.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 26
  store <2 x double>* %v3GMP110.fca.26.extract, <2 x double>** %v3GMP110.fca.26.gep
  %v3GMP110.fca.27.extract = extractvalue %gemPrm %v3GMP110, 27
  %v3GMP110.fca.27.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 27
  store <2 x double>* %v3GMP110.fca.27.extract, <2 x double>** %v3GMP110.fca.27.gep
  %v3GMP110.fca.28.extract = extractvalue %gemPrm %v3GMP110, 28
  %v3GMP110.fca.28.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 28
  store <2 x double>* %v3GMP110.fca.28.extract, <2 x double>** %v3GMP110.fca.28.gep
  %v3GMP110.fca.29.extract = extractvalue %gemPrm %v3GMP110, 29
  %v3GMP110.fca.29.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 29
  store <2 x double>* %v3GMP110.fca.29.extract, <2 x double>** %v3GMP110.fca.29.gep
  %v3GMP110.fca.30.extract = extractvalue %gemPrm %v3GMP110, 30
  %v3GMP110.fca.30.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 30
  store <2 x double>* %v3GMP110.fca.30.extract, <2 x double>** %v3GMP110.fca.30.gep
  %v3GMP110.fca.31.extract = extractvalue %gemPrm %v3GMP110, 31
  %v3GMP110.fca.31.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 31
  store <2 x double>* %v3GMP110.fca.31.extract, <2 x double>** %v3GMP110.fca.31.gep
  %v3GMP110.fca.32.extract = extractvalue %gemPrm %v3GMP110, 32
  %v3GMP110.fca.32.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 32
  store <2 x double>* %v3GMP110.fca.32.extract, <2 x double>** %v3GMP110.fca.32.gep
  %v3GMP110.fca.33.extract = extractvalue %gemPrm %v3GMP110, 33
  %v3GMP110.fca.33.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 33
  store <2 x double>* %v3GMP110.fca.33.extract, <2 x double>** %v3GMP110.fca.33.gep
  %v3GMP110.fca.34.extract = extractvalue %gemPrm %v3GMP110, 34
  %v3GMP110.fca.34.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 34
  store <2 x double>* %v3GMP110.fca.34.extract, <2 x double>** %v3GMP110.fca.34.gep
  %v3GMP110.fca.35.extract = extractvalue %gemPrm %v3GMP110, 35
  %v3GMP110.fca.35.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 35
  store <2 x double>* %v3GMP110.fca.35.extract, <2 x double>** %v3GMP110.fca.35.gep
  %v3GMP110.fca.36.extract = extractvalue %gemPrm %v3GMP110, 36
  %v3GMP110.fca.36.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 36
  store <2 x double>* %v3GMP110.fca.36.extract, <2 x double>** %v3GMP110.fca.36.gep
  %v3GMP110.fca.37.extract = extractvalue %gemPrm %v3GMP110, 37
  %v3GMP110.fca.37.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 37
  store <2 x double>* %v3GMP110.fca.37.extract, <2 x double>** %v3GMP110.fca.37.gep
  %v3GMP110.fca.38.extract = extractvalue %gemPrm %v3GMP110, 38
  %v3GMP110.fca.38.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 38
  store <2 x double>* %v3GMP110.fca.38.extract, <2 x double>** %v3GMP110.fca.38.gep
  %v3GMP110.fca.39.extract = extractvalue %gemPrm %v3GMP110, 39
  %v3GMP110.fca.39.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 39
  store <2 x double>* %v3GMP110.fca.39.extract, <2 x double>** %v3GMP110.fca.39.gep
  %v3GMP110.fca.40.extract = extractvalue %gemPrm %v3GMP110, 40
  %v3GMP110.fca.40.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 40
  store <2 x double>* %v3GMP110.fca.40.extract, <2 x double>** %v3GMP110.fca.40.gep
  %v3GMP110.fca.41.extract = extractvalue %gemPrm %v3GMP110, 41
  %v3GMP110.fca.41.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 41
  store <2 x double>* %v3GMP110.fca.41.extract, <2 x double>** %v3GMP110.fca.41.gep
  %v3GMP110.fca.42.extract = extractvalue %gemPrm %v3GMP110, 42
  %v3GMP110.fca.42.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 42
  store <4 x double>* %v3GMP110.fca.42.extract, <4 x double>** %v3GMP110.fca.42.gep
  %v3GMP110.fca.43.extract = extractvalue %gemPrm %v3GMP110, 43
  %v3GMP110.fca.43.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 43
  store <4 x double>* %v3GMP110.fca.43.extract, <4 x double>** %v3GMP110.fca.43.gep
  %v3GMP110.fca.44.extract = extractvalue %gemPrm %v3GMP110, 44
  %v3GMP110.fca.44.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 44
  store <4 x double>* %v3GMP110.fca.44.extract, <4 x double>** %v3GMP110.fca.44.gep
  %v3GMP110.fca.45.extract = extractvalue %gemPrm %v3GMP110, 45
  %v3GMP110.fca.45.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 45
  store <4 x double>* %v3GMP110.fca.45.extract, <4 x double>** %v3GMP110.fca.45.gep
  %v3GMP110.fca.46.extract = extractvalue %gemPrm %v3GMP110, 46
  %v3GMP110.fca.46.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 46
  store <4 x double>* %v3GMP110.fca.46.extract, <4 x double>** %v3GMP110.fca.46.gep
  %v3GMP110.fca.47.extract = extractvalue %gemPrm %v3GMP110, 47
  %v3GMP110.fca.47.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 47
  store <4 x double>* %v3GMP110.fca.47.extract, <4 x double>** %v3GMP110.fca.47.gep
  %v3GMP110.fca.48.extract = extractvalue %gemPrm %v3GMP110, 48
  %v3GMP110.fca.48.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 48
  store <4 x double>* %v3GMP110.fca.48.extract, <4 x double>** %v3GMP110.fca.48.gep
  %v3GMP110.fca.49.extract = extractvalue %gemPrm %v3GMP110, 49
  %v3GMP110.fca.49.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 49
  store <4 x double>* %v3GMP110.fca.49.extract, <4 x double>** %v3GMP110.fca.49.gep
  %v3GMP110.fca.50.extract = extractvalue %gemPrm %v3GMP110, 50
  %v3GMP110.fca.50.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 50
  store <4 x double>* %v3GMP110.fca.50.extract, <4 x double>** %v3GMP110.fca.50.gep
  %v3GMP110.fca.51.extract = extractvalue %gemPrm %v3GMP110, 51
  %v3GMP110.fca.51.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 51
  store <3 x double>* %v3GMP110.fca.51.extract, <3 x double>** %v3GMP110.fca.51.gep
  %v4GMP111 = call %gemPrm @"gemPrm@Z6gemPrmM52N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PN8pc_DISC2[V"()
  %v4GMP111.fca.0.extract = extractvalue %gemPrm %v4GMP111, 0
  %v4GMP111.fca.0.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 0
  store double* %v4GMP111.fca.0.extract, double** %v4GMP111.fca.0.gep
  %v4GMP111.fca.1.extract = extractvalue %gemPrm %v4GMP111, 1
  %v4GMP111.fca.1.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 1
  store double* %v4GMP111.fca.1.extract, double** %v4GMP111.fca.1.gep
  %v4GMP111.fca.2.extract = extractvalue %gemPrm %v4GMP111, 2
  %v4GMP111.fca.2.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 2
  store double* %v4GMP111.fca.2.extract, double** %v4GMP111.fca.2.gep
  %v4GMP111.fca.3.extract = extractvalue %gemPrm %v4GMP111, 3
  %v4GMP111.fca.3.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 3
  store double* %v4GMP111.fca.3.extract, double** %v4GMP111.fca.3.gep
  %v4GMP111.fca.4.extract = extractvalue %gemPrm %v4GMP111, 4
  %v4GMP111.fca.4.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 4
  store double* %v4GMP111.fca.4.extract, double** %v4GMP111.fca.4.gep
  %v4GMP111.fca.5.extract = extractvalue %gemPrm %v4GMP111, 5
  %v4GMP111.fca.5.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 5
  store double* %v4GMP111.fca.5.extract, double** %v4GMP111.fca.5.gep
  %v4GMP111.fca.6.extract = extractvalue %gemPrm %v4GMP111, 6
  %v4GMP111.fca.6.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 6
  store <3 x double>* %v4GMP111.fca.6.extract, <3 x double>** %v4GMP111.fca.6.gep
  %v4GMP111.fca.7.extract = extractvalue %gemPrm %v4GMP111, 7
  %v4GMP111.fca.7.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 7
  store <3 x double>* %v4GMP111.fca.7.extract, <3 x double>** %v4GMP111.fca.7.gep
  %v4GMP111.fca.8.extract = extractvalue %gemPrm %v4GMP111, 8
  %v4GMP111.fca.8.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 8
  store <3 x double>* %v4GMP111.fca.8.extract, <3 x double>** %v4GMP111.fca.8.gep
  %v4GMP111.fca.9.extract = extractvalue %gemPrm %v4GMP111, 9
  %v4GMP111.fca.9.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 9
  store <3 x double>* %v4GMP111.fca.9.extract, <3 x double>** %v4GMP111.fca.9.gep
  %v4GMP111.fca.10.extract = extractvalue %gemPrm %v4GMP111, 10
  %v4GMP111.fca.10.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 10
  store <3 x double>* %v4GMP111.fca.10.extract, <3 x double>** %v4GMP111.fca.10.gep
  %v4GMP111.fca.11.extract = extractvalue %gemPrm %v4GMP111, 11
  %v4GMP111.fca.11.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 11
  store <3 x double>* %v4GMP111.fca.11.extract, <3 x double>** %v4GMP111.fca.11.gep
  %v4GMP111.fca.12.extract = extractvalue %gemPrm %v4GMP111, 12
  %v4GMP111.fca.12.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 12
  store <3 x double>* %v4GMP111.fca.12.extract, <3 x double>** %v4GMP111.fca.12.gep
  %v4GMP111.fca.13.extract = extractvalue %gemPrm %v4GMP111, 13
  %v4GMP111.fca.13.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 13
  store <2 x double>* %v4GMP111.fca.13.extract, <2 x double>** %v4GMP111.fca.13.gep
  %v4GMP111.fca.14.extract = extractvalue %gemPrm %v4GMP111, 14
  %v4GMP111.fca.14.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 14
  store <2 x double>* %v4GMP111.fca.14.extract, <2 x double>** %v4GMP111.fca.14.gep
  %v4GMP111.fca.15.extract = extractvalue %gemPrm %v4GMP111, 15
  %v4GMP111.fca.15.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 15
  store <2 x double>* %v4GMP111.fca.15.extract, <2 x double>** %v4GMP111.fca.15.gep
  %v4GMP111.fca.16.extract = extractvalue %gemPrm %v4GMP111, 16
  %v4GMP111.fca.16.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 16
  store <2 x double>* %v4GMP111.fca.16.extract, <2 x double>** %v4GMP111.fca.16.gep
  %v4GMP111.fca.17.extract = extractvalue %gemPrm %v4GMP111, 17
  %v4GMP111.fca.17.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 17
  store <2 x double>* %v4GMP111.fca.17.extract, <2 x double>** %v4GMP111.fca.17.gep
  %v4GMP111.fca.18.extract = extractvalue %gemPrm %v4GMP111, 18
  %v4GMP111.fca.18.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 18
  store <2 x double>* %v4GMP111.fca.18.extract, <2 x double>** %v4GMP111.fca.18.gep
  %v4GMP111.fca.19.extract = extractvalue %gemPrm %v4GMP111, 19
  %v4GMP111.fca.19.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 19
  store <2 x double>* %v4GMP111.fca.19.extract, <2 x double>** %v4GMP111.fca.19.gep
  %v4GMP111.fca.20.extract = extractvalue %gemPrm %v4GMP111, 20
  %v4GMP111.fca.20.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 20
  store <2 x double>* %v4GMP111.fca.20.extract, <2 x double>** %v4GMP111.fca.20.gep
  %v4GMP111.fca.21.extract = extractvalue %gemPrm %v4GMP111, 21
  %v4GMP111.fca.21.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 21
  store <2 x double>* %v4GMP111.fca.21.extract, <2 x double>** %v4GMP111.fca.21.gep
  %v4GMP111.fca.22.extract = extractvalue %gemPrm %v4GMP111, 22
  %v4GMP111.fca.22.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 22
  store <2 x double>* %v4GMP111.fca.22.extract, <2 x double>** %v4GMP111.fca.22.gep
  %v4GMP111.fca.23.extract = extractvalue %gemPrm %v4GMP111, 23
  %v4GMP111.fca.23.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 23
  store <2 x double>* %v4GMP111.fca.23.extract, <2 x double>** %v4GMP111.fca.23.gep
  %v4GMP111.fca.24.extract = extractvalue %gemPrm %v4GMP111, 24
  %v4GMP111.fca.24.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 24
  store <2 x double>* %v4GMP111.fca.24.extract, <2 x double>** %v4GMP111.fca.24.gep
  %v4GMP111.fca.25.extract = extractvalue %gemPrm %v4GMP111, 25
  %v4GMP111.fca.25.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 25
  store <2 x double>* %v4GMP111.fca.25.extract, <2 x double>** %v4GMP111.fca.25.gep
  %v4GMP111.fca.26.extract = extractvalue %gemPrm %v4GMP111, 26
  %v4GMP111.fca.26.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 26
  store <2 x double>* %v4GMP111.fca.26.extract, <2 x double>** %v4GMP111.fca.26.gep
  %v4GMP111.fca.27.extract = extractvalue %gemPrm %v4GMP111, 27
  %v4GMP111.fca.27.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 27
  store <2 x double>* %v4GMP111.fca.27.extract, <2 x double>** %v4GMP111.fca.27.gep
  %v4GMP111.fca.28.extract = extractvalue %gemPrm %v4GMP111, 28
  %v4GMP111.fca.28.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 28
  store <2 x double>* %v4GMP111.fca.28.extract, <2 x double>** %v4GMP111.fca.28.gep
  %v4GMP111.fca.29.extract = extractvalue %gemPrm %v4GMP111, 29
  %v4GMP111.fca.29.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 29
  store <2 x double>* %v4GMP111.fca.29.extract, <2 x double>** %v4GMP111.fca.29.gep
  %v4GMP111.fca.30.extract = extractvalue %gemPrm %v4GMP111, 30
  %v4GMP111.fca.30.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 30
  store <2 x double>* %v4GMP111.fca.30.extract, <2 x double>** %v4GMP111.fca.30.gep
  %v4GMP111.fca.31.extract = extractvalue %gemPrm %v4GMP111, 31
  %v4GMP111.fca.31.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 31
  store <2 x double>* %v4GMP111.fca.31.extract, <2 x double>** %v4GMP111.fca.31.gep
  %v4GMP111.fca.32.extract = extractvalue %gemPrm %v4GMP111, 32
  %v4GMP111.fca.32.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 32
  store <2 x double>* %v4GMP111.fca.32.extract, <2 x double>** %v4GMP111.fca.32.gep
  %v4GMP111.fca.33.extract = extractvalue %gemPrm %v4GMP111, 33
  %v4GMP111.fca.33.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 33
  store <2 x double>* %v4GMP111.fca.33.extract, <2 x double>** %v4GMP111.fca.33.gep
  %v4GMP111.fca.34.extract = extractvalue %gemPrm %v4GMP111, 34
  %v4GMP111.fca.34.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 34
  store <2 x double>* %v4GMP111.fca.34.extract, <2 x double>** %v4GMP111.fca.34.gep
  %v4GMP111.fca.35.extract = extractvalue %gemPrm %v4GMP111, 35
  %v4GMP111.fca.35.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 35
  store <2 x double>* %v4GMP111.fca.35.extract, <2 x double>** %v4GMP111.fca.35.gep
  %v4GMP111.fca.36.extract = extractvalue %gemPrm %v4GMP111, 36
  %v4GMP111.fca.36.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 36
  store <2 x double>* %v4GMP111.fca.36.extract, <2 x double>** %v4GMP111.fca.36.gep
  %v4GMP111.fca.37.extract = extractvalue %gemPrm %v4GMP111, 37
  %v4GMP111.fca.37.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 37
  store <2 x double>* %v4GMP111.fca.37.extract, <2 x double>** %v4GMP111.fca.37.gep
  %v4GMP111.fca.38.extract = extractvalue %gemPrm %v4GMP111, 38
  %v4GMP111.fca.38.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 38
  store <2 x double>* %v4GMP111.fca.38.extract, <2 x double>** %v4GMP111.fca.38.gep
  %v4GMP111.fca.39.extract = extractvalue %gemPrm %v4GMP111, 39
  %v4GMP111.fca.39.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 39
  store <2 x double>* %v4GMP111.fca.39.extract, <2 x double>** %v4GMP111.fca.39.gep
  %v4GMP111.fca.40.extract = extractvalue %gemPrm %v4GMP111, 40
  %v4GMP111.fca.40.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 40
  store <2 x double>* %v4GMP111.fca.40.extract, <2 x double>** %v4GMP111.fca.40.gep
  %v4GMP111.fca.41.extract = extractvalue %gemPrm %v4GMP111, 41
  %v4GMP111.fca.41.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 41
  store <2 x double>* %v4GMP111.fca.41.extract, <2 x double>** %v4GMP111.fca.41.gep
  %v4GMP111.fca.42.extract = extractvalue %gemPrm %v4GMP111, 42
  %v4GMP111.fca.42.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 42
  store <4 x double>* %v4GMP111.fca.42.extract, <4 x double>** %v4GMP111.fca.42.gep
  %v4GMP111.fca.43.extract = extractvalue %gemPrm %v4GMP111, 43
  %v4GMP111.fca.43.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 43
  store <4 x double>* %v4GMP111.fca.43.extract, <4 x double>** %v4GMP111.fca.43.gep
  %v4GMP111.fca.44.extract = extractvalue %gemPrm %v4GMP111, 44
  %v4GMP111.fca.44.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 44
  store <4 x double>* %v4GMP111.fca.44.extract, <4 x double>** %v4GMP111.fca.44.gep
  %v4GMP111.fca.45.extract = extractvalue %gemPrm %v4GMP111, 45
  %v4GMP111.fca.45.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 45
  store <4 x double>* %v4GMP111.fca.45.extract, <4 x double>** %v4GMP111.fca.45.gep
  %v4GMP111.fca.46.extract = extractvalue %gemPrm %v4GMP111, 46
  %v4GMP111.fca.46.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 46
  store <4 x double>* %v4GMP111.fca.46.extract, <4 x double>** %v4GMP111.fca.46.gep
  %v4GMP111.fca.47.extract = extractvalue %gemPrm %v4GMP111, 47
  %v4GMP111.fca.47.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 47
  store <4 x double>* %v4GMP111.fca.47.extract, <4 x double>** %v4GMP111.fca.47.gep
  %v4GMP111.fca.48.extract = extractvalue %gemPrm %v4GMP111, 48
  %v4GMP111.fca.48.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 48
  store <4 x double>* %v4GMP111.fca.48.extract, <4 x double>** %v4GMP111.fca.48.gep
  %v4GMP111.fca.49.extract = extractvalue %gemPrm %v4GMP111, 49
  %v4GMP111.fca.49.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 49
  store <4 x double>* %v4GMP111.fca.49.extract, <4 x double>** %v4GMP111.fca.49.gep
  %v4GMP111.fca.50.extract = extractvalue %gemPrm %v4GMP111, 50
  %v4GMP111.fca.50.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 50
  store <4 x double>* %v4GMP111.fca.50.extract, <4 x double>** %v4GMP111.fca.50.gep
  %v4GMP111.fca.51.extract = extractvalue %gemPrm %v4GMP111, 51
  %v4GMP111.fca.51.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 51
  store <3 x double>* %v4GMP111.fca.51.extract, <3 x double>** %v4GMP111.fca.51.gep
  %P1GMP112 = call %gemPrm @"gemPrm@Z6gemPrmM52N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PN8pc_DISC2[V"()
  %P1GMP112.fca.0.extract = extractvalue %gemPrm %P1GMP112, 0
  %P1GMP112.fca.0.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 0
  store double* %P1GMP112.fca.0.extract, double** %P1GMP112.fca.0.gep
  %P1GMP112.fca.1.extract = extractvalue %gemPrm %P1GMP112, 1
  %P1GMP112.fca.1.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 1
  store double* %P1GMP112.fca.1.extract, double** %P1GMP112.fca.1.gep
  %P1GMP112.fca.2.extract = extractvalue %gemPrm %P1GMP112, 2
  %P1GMP112.fca.2.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 2
  store double* %P1GMP112.fca.2.extract, double** %P1GMP112.fca.2.gep
  %P1GMP112.fca.3.extract = extractvalue %gemPrm %P1GMP112, 3
  %P1GMP112.fca.3.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 3
  store double* %P1GMP112.fca.3.extract, double** %P1GMP112.fca.3.gep
  %P1GMP112.fca.4.extract = extractvalue %gemPrm %P1GMP112, 4
  %P1GMP112.fca.4.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 4
  store double* %P1GMP112.fca.4.extract, double** %P1GMP112.fca.4.gep
  %P1GMP112.fca.5.extract = extractvalue %gemPrm %P1GMP112, 5
  %P1GMP112.fca.5.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 5
  store double* %P1GMP112.fca.5.extract, double** %P1GMP112.fca.5.gep
  %P1GMP112.fca.6.extract = extractvalue %gemPrm %P1GMP112, 6
  %P1GMP112.fca.6.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 6
  store <3 x double>* %P1GMP112.fca.6.extract, <3 x double>** %P1GMP112.fca.6.gep
  %P1GMP112.fca.7.extract = extractvalue %gemPrm %P1GMP112, 7
  %P1GMP112.fca.7.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 7
  store <3 x double>* %P1GMP112.fca.7.extract, <3 x double>** %P1GMP112.fca.7.gep
  %P1GMP112.fca.8.extract = extractvalue %gemPrm %P1GMP112, 8
  %P1GMP112.fca.8.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 8
  store <3 x double>* %P1GMP112.fca.8.extract, <3 x double>** %P1GMP112.fca.8.gep
  %P1GMP112.fca.9.extract = extractvalue %gemPrm %P1GMP112, 9
  %P1GMP112.fca.9.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 9
  store <3 x double>* %P1GMP112.fca.9.extract, <3 x double>** %P1GMP112.fca.9.gep
  %P1GMP112.fca.10.extract = extractvalue %gemPrm %P1GMP112, 10
  %P1GMP112.fca.10.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 10
  store <3 x double>* %P1GMP112.fca.10.extract, <3 x double>** %P1GMP112.fca.10.gep
  %P1GMP112.fca.11.extract = extractvalue %gemPrm %P1GMP112, 11
  %P1GMP112.fca.11.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 11
  store <3 x double>* %P1GMP112.fca.11.extract, <3 x double>** %P1GMP112.fca.11.gep
  %P1GMP112.fca.12.extract = extractvalue %gemPrm %P1GMP112, 12
  %P1GMP112.fca.12.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 12
  store <3 x double>* %P1GMP112.fca.12.extract, <3 x double>** %P1GMP112.fca.12.gep
  %P1GMP112.fca.13.extract = extractvalue %gemPrm %P1GMP112, 13
  %P1GMP112.fca.13.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 13
  store <2 x double>* %P1GMP112.fca.13.extract, <2 x double>** %P1GMP112.fca.13.gep
  %P1GMP112.fca.14.extract = extractvalue %gemPrm %P1GMP112, 14
  %P1GMP112.fca.14.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 14
  store <2 x double>* %P1GMP112.fca.14.extract, <2 x double>** %P1GMP112.fca.14.gep
  %P1GMP112.fca.15.extract = extractvalue %gemPrm %P1GMP112, 15
  %P1GMP112.fca.15.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 15
  store <2 x double>* %P1GMP112.fca.15.extract, <2 x double>** %P1GMP112.fca.15.gep
  %P1GMP112.fca.16.extract = extractvalue %gemPrm %P1GMP112, 16
  %P1GMP112.fca.16.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 16
  store <2 x double>* %P1GMP112.fca.16.extract, <2 x double>** %P1GMP112.fca.16.gep
  %P1GMP112.fca.17.extract = extractvalue %gemPrm %P1GMP112, 17
  %P1GMP112.fca.17.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 17
  store <2 x double>* %P1GMP112.fca.17.extract, <2 x double>** %P1GMP112.fca.17.gep
  %P1GMP112.fca.18.extract = extractvalue %gemPrm %P1GMP112, 18
  %P1GMP112.fca.18.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 18
  store <2 x double>* %P1GMP112.fca.18.extract, <2 x double>** %P1GMP112.fca.18.gep
  %P1GMP112.fca.19.extract = extractvalue %gemPrm %P1GMP112, 19
  %P1GMP112.fca.19.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 19
  store <2 x double>* %P1GMP112.fca.19.extract, <2 x double>** %P1GMP112.fca.19.gep
  %P1GMP112.fca.20.extract = extractvalue %gemPrm %P1GMP112, 20
  %P1GMP112.fca.20.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 20
  store <2 x double>* %P1GMP112.fca.20.extract, <2 x double>** %P1GMP112.fca.20.gep
  %P1GMP112.fca.21.extract = extractvalue %gemPrm %P1GMP112, 21
  %P1GMP112.fca.21.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 21
  store <2 x double>* %P1GMP112.fca.21.extract, <2 x double>** %P1GMP112.fca.21.gep
  %P1GMP112.fca.22.extract = extractvalue %gemPrm %P1GMP112, 22
  %P1GMP112.fca.22.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 22
  store <2 x double>* %P1GMP112.fca.22.extract, <2 x double>** %P1GMP112.fca.22.gep
  %P1GMP112.fca.23.extract = extractvalue %gemPrm %P1GMP112, 23
  %P1GMP112.fca.23.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 23
  store <2 x double>* %P1GMP112.fca.23.extract, <2 x double>** %P1GMP112.fca.23.gep
  %P1GMP112.fca.24.extract = extractvalue %gemPrm %P1GMP112, 24
  %P1GMP112.fca.24.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 24
  store <2 x double>* %P1GMP112.fca.24.extract, <2 x double>** %P1GMP112.fca.24.gep
  %P1GMP112.fca.25.extract = extractvalue %gemPrm %P1GMP112, 25
  %P1GMP112.fca.25.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 25
  store <2 x double>* %P1GMP112.fca.25.extract, <2 x double>** %P1GMP112.fca.25.gep
  %P1GMP112.fca.26.extract = extractvalue %gemPrm %P1GMP112, 26
  %P1GMP112.fca.26.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 26
  store <2 x double>* %P1GMP112.fca.26.extract, <2 x double>** %P1GMP112.fca.26.gep
  %P1GMP112.fca.27.extract = extractvalue %gemPrm %P1GMP112, 27
  %P1GMP112.fca.27.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 27
  store <2 x double>* %P1GMP112.fca.27.extract, <2 x double>** %P1GMP112.fca.27.gep
  %P1GMP112.fca.28.extract = extractvalue %gemPrm %P1GMP112, 28
  %P1GMP112.fca.28.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 28
  store <2 x double>* %P1GMP112.fca.28.extract, <2 x double>** %P1GMP112.fca.28.gep
  %P1GMP112.fca.29.extract = extractvalue %gemPrm %P1GMP112, 29
  %P1GMP112.fca.29.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 29
  store <2 x double>* %P1GMP112.fca.29.extract, <2 x double>** %P1GMP112.fca.29.gep
  %P1GMP112.fca.30.extract = extractvalue %gemPrm %P1GMP112, 30
  %P1GMP112.fca.30.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 30
  store <2 x double>* %P1GMP112.fca.30.extract, <2 x double>** %P1GMP112.fca.30.gep
  %P1GMP112.fca.31.extract = extractvalue %gemPrm %P1GMP112, 31
  %P1GMP112.fca.31.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 31
  store <2 x double>* %P1GMP112.fca.31.extract, <2 x double>** %P1GMP112.fca.31.gep
  %P1GMP112.fca.32.extract = extractvalue %gemPrm %P1GMP112, 32
  %P1GMP112.fca.32.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 32
  store <2 x double>* %P1GMP112.fca.32.extract, <2 x double>** %P1GMP112.fca.32.gep
  %P1GMP112.fca.33.extract = extractvalue %gemPrm %P1GMP112, 33
  %P1GMP112.fca.33.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 33
  store <2 x double>* %P1GMP112.fca.33.extract, <2 x double>** %P1GMP112.fca.33.gep
  %P1GMP112.fca.34.extract = extractvalue %gemPrm %P1GMP112, 34
  %P1GMP112.fca.34.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 34
  store <2 x double>* %P1GMP112.fca.34.extract, <2 x double>** %P1GMP112.fca.34.gep
  %P1GMP112.fca.35.extract = extractvalue %gemPrm %P1GMP112, 35
  %P1GMP112.fca.35.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 35
  store <2 x double>* %P1GMP112.fca.35.extract, <2 x double>** %P1GMP112.fca.35.gep
  %P1GMP112.fca.36.extract = extractvalue %gemPrm %P1GMP112, 36
  %P1GMP112.fca.36.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 36
  store <2 x double>* %P1GMP112.fca.36.extract, <2 x double>** %P1GMP112.fca.36.gep
  %P1GMP112.fca.37.extract = extractvalue %gemPrm %P1GMP112, 37
  %P1GMP112.fca.37.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 37
  store <2 x double>* %P1GMP112.fca.37.extract, <2 x double>** %P1GMP112.fca.37.gep
  %P1GMP112.fca.38.extract = extractvalue %gemPrm %P1GMP112, 38
  %P1GMP112.fca.38.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 38
  store <2 x double>* %P1GMP112.fca.38.extract, <2 x double>** %P1GMP112.fca.38.gep
  %P1GMP112.fca.39.extract = extractvalue %gemPrm %P1GMP112, 39
  %P1GMP112.fca.39.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 39
  store <2 x double>* %P1GMP112.fca.39.extract, <2 x double>** %P1GMP112.fca.39.gep
  %P1GMP112.fca.40.extract = extractvalue %gemPrm %P1GMP112, 40
  %P1GMP112.fca.40.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 40
  store <2 x double>* %P1GMP112.fca.40.extract, <2 x double>** %P1GMP112.fca.40.gep
  %P1GMP112.fca.41.extract = extractvalue %gemPrm %P1GMP112, 41
  %P1GMP112.fca.41.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 41
  store <2 x double>* %P1GMP112.fca.41.extract, <2 x double>** %P1GMP112.fca.41.gep
  %P1GMP112.fca.42.extract = extractvalue %gemPrm %P1GMP112, 42
  %P1GMP112.fca.42.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 42
  store <4 x double>* %P1GMP112.fca.42.extract, <4 x double>** %P1GMP112.fca.42.gep
  %P1GMP112.fca.43.extract = extractvalue %gemPrm %P1GMP112, 43
  %P1GMP112.fca.43.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 43
  store <4 x double>* %P1GMP112.fca.43.extract, <4 x double>** %P1GMP112.fca.43.gep
  %P1GMP112.fca.44.extract = extractvalue %gemPrm %P1GMP112, 44
  %P1GMP112.fca.44.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 44
  store <4 x double>* %P1GMP112.fca.44.extract, <4 x double>** %P1GMP112.fca.44.gep
  %P1GMP112.fca.45.extract = extractvalue %gemPrm %P1GMP112, 45
  %P1GMP112.fca.45.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 45
  store <4 x double>* %P1GMP112.fca.45.extract, <4 x double>** %P1GMP112.fca.45.gep
  %P1GMP112.fca.46.extract = extractvalue %gemPrm %P1GMP112, 46
  %P1GMP112.fca.46.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 46
  store <4 x double>* %P1GMP112.fca.46.extract, <4 x double>** %P1GMP112.fca.46.gep
  %P1GMP112.fca.47.extract = extractvalue %gemPrm %P1GMP112, 47
  %P1GMP112.fca.47.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 47
  store <4 x double>* %P1GMP112.fca.47.extract, <4 x double>** %P1GMP112.fca.47.gep
  %P1GMP112.fca.48.extract = extractvalue %gemPrm %P1GMP112, 48
  %P1GMP112.fca.48.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 48
  store <4 x double>* %P1GMP112.fca.48.extract, <4 x double>** %P1GMP112.fca.48.gep
  %P1GMP112.fca.49.extract = extractvalue %gemPrm %P1GMP112, 49
  %P1GMP112.fca.49.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 49
  store <4 x double>* %P1GMP112.fca.49.extract, <4 x double>** %P1GMP112.fca.49.gep
  %P1GMP112.fca.50.extract = extractvalue %gemPrm %P1GMP112, 50
  %P1GMP112.fca.50.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 50
  store <4 x double>* %P1GMP112.fca.50.extract, <4 x double>** %P1GMP112.fca.50.gep
  %P1GMP112.fca.51.extract = extractvalue %gemPrm %P1GMP112, 51
  %P1GMP112.fca.51.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 51
  store <3 x double>* %P1GMP112.fca.51.extract, <3 x double>** %P1GMP112.fca.51.gep
  store i8** %_bound_sIDX1, i8*** %1
  store i64 %GEM4.fca.8.load, i64* %2
  store i64* %GEM4.fca.14.load, i64** %3
  store double* %GEM4.fca.27.load, double** %4
  call void @"gemPrmBuild@Z6gemPrmM52N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PN8pc_DISC2[V[SI[I[F"(%gemPrm* %p2GMP, i8*** %1, i64* %2, i64** %3, double** %4)
  store i8** %_bound_sIDX1, i8*** %5
  store i64 %GEM4.fca.8.load, i64* %6
  store i64* %GEM4.fca.9.load, i64** %7
  store double* %GEM4.fca.22.load, double** %8
  call void @"gemPrmBuild@Z6gemPrmM52N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PN8pc_DISC2[V[SI[I[F"(%gemPrm* %v1GMP, i8*** %5, i64* %6, i64** %7, double** %8)
  store i8** %_bound_sIDX1, i8*** %9
  store i64 %GEM4.fca.8.load, i64* %10
  store i64* %GEM4.fca.10.load, i64** %11
  store double* %GEM4.fca.23.load, double** %12
  call void @"gemPrmBuild@Z6gemPrmM52N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PN8pc_DISC2[V[SI[I[F"(%gemPrm* %v2GMP, i8*** %9, i64* %10, i64** %11, double** %12)
  store i8** %_bound_sIDX1, i8*** %13
  store i64 %GEM4.fca.8.load, i64* %14
  store i64* %GEM4.fca.11.load, i64** %15
  store double* %GEM4.fca.24.load, double** %16
  call void @"gemPrmBuild@Z6gemPrmM52N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PN8pc_DISC2[V[SI[I[F"(%gemPrm* %v3GMP, i8*** %13, i64* %14, i64** %15, double** %16)
  store i8** %_bound_sIDX1, i8*** %17
  store i64 %GEM4.fca.8.load, i64* %18
  store i64* %GEM4.fca.12.load, i64** %19
  store double* %GEM4.fca.25.load, double** %20
  call void @"gemPrmBuild@Z6gemPrmM52N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PN8pc_DISC2[V[SI[I[F"(%gemPrm* %v4GMP, i8*** %17, i64* %18, i64** %19, double** %20)
  store i8** %_bound_sIDX1, i8*** %21
  store i64 %GEM4.fca.8.load, i64* %22
  store i64* %GEM4.fca.13.load, i64** %23
  store double* %GEM4.fca.26.load, double** %24
  call void @"gemPrmBuild@Z6gemPrmM52N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PN8pc_DISC2[V[SI[I[F"(%gemPrm* %P1GMP, i8*** %21, i64* %22, i64** %23, double** %24)
  %biunit = call <2 x double> @"biunit@U"()
  store <2 x double> %biunit, <2 x double>* %mem
  %_bound_XS137 = load i64, i64* %_bound_XS
  %127 = icmp ne i64 %_bound_XS137, 0
  br i1 %127, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %_bound_IW139 = load double*, double** %_bound_IW
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return140 = call i64 @"sample_cdf@[FFI"(double* %_bound_IW139, double %return)
  store i64 %return140, i64* %idx
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  br label %cond

cond:                                             ; preds = %end339, %end
  %clr.0 = phi double [ 0.000000e+00, %end ], [ %output351, %end339 ]
  %prv_clr.0 = phi double [ 0.000000e+00, %end ], [ %output351, %end339 ]
  %i.0 = phi i64 [ 0, %end ], [ %output354, %end339 ]
  %return143 = call i64 @"lt@III"(i64 %i.0, i64 %GEM4.fca.5.load)
  %128 = icmp ne i64 %return143, 0
  br i1 %128, label %body, label %end144

body:                                             ; preds = %cond
  br i1 %127, label %true147, label %false

end144:                                           ; preds = %cond
  %129 = icmp ne i64 %GEM4.fca.1.load, 0
  br i1 %129, label %true356, label %end357

true147:                                          ; preds = %body
  %_bound_XST149 = load double*, double** %_bound_XST
  store double* %_bound_XST149, double** %25
  %cast = sitofp i64 %GEM4.fca.8.load to double
  store double %cast, double* %26
  %XAOS = call i64 @"XAOS@II[FF"(i64* %idx, double** %25, double* %26)
  store i64 %XAOS, i64* %idx
  br label %end148

false:                                            ; preds = %body
  %_bound_IW151 = load double*, double** %_bound_IW
  %return152 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return153 = call i64 @"sample_cdf@[FFI"(double* %_bound_IW151, double %return152)
  store i64 %return153, i64* %idx
  br label %end148

end148:                                           ; preds = %false, %true147
  %cast154 = call <2 x double> @"set@UI"(i64 0)
  store <2 x double> %cast154, <2 x double>* %tmp
  %idx156 = load i64, i64* %idx
  %return157 = call double @"getcomp@F[FI"(double* %GEM4.fca.28.load, i64 %idx156)
  %return158 = fcmp ogt double %return157, 0.000000e+00
  br i1 %return158, label %true160, label %end161

true160:                                          ; preds = %end148
  store double %return157, double* %27
  call void @"V_PREBLUR@UF"(<2 x double>* %mem, double* %27)
  br label %end161

end161:                                           ; preds = %true160, %end148
  %idx166 = load i64, i64* %idx
  %return167 = call double @"getcomp@F[FI"(double* %GEM4.fca.29.load, i64 %idx166)
  %return168 = fcmp ogt double %return167, 0.000000e+00
  br i1 %return168, label %true170, label %end171

true170:                                          ; preds = %end161
  %return174 = call i64 @"getcomp@I[II"(i64* %GEM4.fca.15.load, i64 %idx166)
  store i64 %return174, i64* %28
  %mem175 = load <2 x double>, <2 x double>* %mem
  store <2 x double> %mem175, <2 x double>* %29
  store <2 x double> <double 1.000000e+00, double 0.000000e+00>, <2 x double>* %30
  store <2 x double> <double 0.000000e+00, double 1.000000e+00>, <2 x double>* %31
  store <2 x double> zeroinitializer, <2 x double>* %32
  %idx177 = load i64, i64* %idx
  %return178 = call double @"getcomp@F[FI"(double* %GEM4.fca.29.load, i64 %idx177)
  store double %return178, double* %33
  %FLAMEPP = call <2 x double> @"FLAMEPP@UIUUUUF"(i64* %28, <2 x double>* %29, <2 x double>* %30, <2 x double>* %31, <2 x double>* %32, double* %33)
  store <2 x double> %FLAMEPP, <2 x double>* %mem
  br label %end171

end171:                                           ; preds = %true170, %end161
  %idx180 = load i64, i64* %idx
  %return181 = call double @"getcomp@F[FI"(double* %GEM4.fca.27.load, i64 %idx180)
  %return182 = fcmp ogt double %return181, 0.000000e+00
  br i1 %return182, label %true184, label %end185

true184:                                          ; preds = %end171
  %p2GMP186.fca.0.load = load double*, double** %p2GMP107.fca.0.gep
  %p2GMP186.fca.0.insert = insertvalue %gemPrm undef, double* %p2GMP186.fca.0.load, 0
  %p2GMP186.fca.1.load = load double*, double** %p2GMP107.fca.1.gep
  %p2GMP186.fca.1.insert = insertvalue %gemPrm %p2GMP186.fca.0.insert, double* %p2GMP186.fca.1.load, 1
  %p2GMP186.fca.2.load = load double*, double** %p2GMP107.fca.2.gep
  %p2GMP186.fca.2.insert = insertvalue %gemPrm %p2GMP186.fca.1.insert, double* %p2GMP186.fca.2.load, 2
  %p2GMP186.fca.3.load = load double*, double** %p2GMP107.fca.3.gep
  %p2GMP186.fca.3.insert = insertvalue %gemPrm %p2GMP186.fca.2.insert, double* %p2GMP186.fca.3.load, 3
  %p2GMP186.fca.4.load = load double*, double** %p2GMP107.fca.4.gep
  %p2GMP186.fca.4.insert = insertvalue %gemPrm %p2GMP186.fca.3.insert, double* %p2GMP186.fca.4.load, 4
  %p2GMP186.fca.5.load = load double*, double** %p2GMP107.fca.5.gep
  %p2GMP186.fca.5.insert = insertvalue %gemPrm %p2GMP186.fca.4.insert, double* %p2GMP186.fca.5.load, 5
  %p2GMP186.fca.6.load = load <3 x double>*, <3 x double>** %p2GMP107.fca.6.gep
  %p2GMP186.fca.6.insert = insertvalue %gemPrm %p2GMP186.fca.5.insert, <3 x double>* %p2GMP186.fca.6.load, 6
  %p2GMP186.fca.7.load = load <3 x double>*, <3 x double>** %p2GMP107.fca.7.gep
  %p2GMP186.fca.7.insert = insertvalue %gemPrm %p2GMP186.fca.6.insert, <3 x double>* %p2GMP186.fca.7.load, 7
  %p2GMP186.fca.8.load = load <3 x double>*, <3 x double>** %p2GMP107.fca.8.gep
  %p2GMP186.fca.8.insert = insertvalue %gemPrm %p2GMP186.fca.7.insert, <3 x double>* %p2GMP186.fca.8.load, 8
  %p2GMP186.fca.9.load = load <3 x double>*, <3 x double>** %p2GMP107.fca.9.gep
  %p2GMP186.fca.9.insert = insertvalue %gemPrm %p2GMP186.fca.8.insert, <3 x double>* %p2GMP186.fca.9.load, 9
  %p2GMP186.fca.10.load = load <3 x double>*, <3 x double>** %p2GMP107.fca.10.gep
  %p2GMP186.fca.10.insert = insertvalue %gemPrm %p2GMP186.fca.9.insert, <3 x double>* %p2GMP186.fca.10.load, 10
  %p2GMP186.fca.11.load = load <3 x double>*, <3 x double>** %p2GMP107.fca.11.gep
  %p2GMP186.fca.11.insert = insertvalue %gemPrm %p2GMP186.fca.10.insert, <3 x double>* %p2GMP186.fca.11.load, 11
  %p2GMP186.fca.12.load = load <3 x double>*, <3 x double>** %p2GMP107.fca.12.gep
  %p2GMP186.fca.12.insert = insertvalue %gemPrm %p2GMP186.fca.11.insert, <3 x double>* %p2GMP186.fca.12.load, 12
  %p2GMP186.fca.13.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.13.gep
  %p2GMP186.fca.13.insert = insertvalue %gemPrm %p2GMP186.fca.12.insert, <2 x double>* %p2GMP186.fca.13.load, 13
  %p2GMP186.fca.14.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.14.gep
  %p2GMP186.fca.14.insert = insertvalue %gemPrm %p2GMP186.fca.13.insert, <2 x double>* %p2GMP186.fca.14.load, 14
  %p2GMP186.fca.15.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.15.gep
  %p2GMP186.fca.15.insert = insertvalue %gemPrm %p2GMP186.fca.14.insert, <2 x double>* %p2GMP186.fca.15.load, 15
  %p2GMP186.fca.16.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.16.gep
  %p2GMP186.fca.16.insert = insertvalue %gemPrm %p2GMP186.fca.15.insert, <2 x double>* %p2GMP186.fca.16.load, 16
  %p2GMP186.fca.17.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.17.gep
  %p2GMP186.fca.17.insert = insertvalue %gemPrm %p2GMP186.fca.16.insert, <2 x double>* %p2GMP186.fca.17.load, 17
  %p2GMP186.fca.18.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.18.gep
  %p2GMP186.fca.18.insert = insertvalue %gemPrm %p2GMP186.fca.17.insert, <2 x double>* %p2GMP186.fca.18.load, 18
  %p2GMP186.fca.19.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.19.gep
  %p2GMP186.fca.19.insert = insertvalue %gemPrm %p2GMP186.fca.18.insert, <2 x double>* %p2GMP186.fca.19.load, 19
  %p2GMP186.fca.20.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.20.gep
  %p2GMP186.fca.20.insert = insertvalue %gemPrm %p2GMP186.fca.19.insert, <2 x double>* %p2GMP186.fca.20.load, 20
  %p2GMP186.fca.21.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.21.gep
  %p2GMP186.fca.21.insert = insertvalue %gemPrm %p2GMP186.fca.20.insert, <2 x double>* %p2GMP186.fca.21.load, 21
  %p2GMP186.fca.22.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.22.gep
  %p2GMP186.fca.22.insert = insertvalue %gemPrm %p2GMP186.fca.21.insert, <2 x double>* %p2GMP186.fca.22.load, 22
  %p2GMP186.fca.23.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.23.gep
  %p2GMP186.fca.23.insert = insertvalue %gemPrm %p2GMP186.fca.22.insert, <2 x double>* %p2GMP186.fca.23.load, 23
  %p2GMP186.fca.24.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.24.gep
  %p2GMP186.fca.24.insert = insertvalue %gemPrm %p2GMP186.fca.23.insert, <2 x double>* %p2GMP186.fca.24.load, 24
  %p2GMP186.fca.25.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.25.gep
  %p2GMP186.fca.25.insert = insertvalue %gemPrm %p2GMP186.fca.24.insert, <2 x double>* %p2GMP186.fca.25.load, 25
  %p2GMP186.fca.26.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.26.gep
  %p2GMP186.fca.26.insert = insertvalue %gemPrm %p2GMP186.fca.25.insert, <2 x double>* %p2GMP186.fca.26.load, 26
  %p2GMP186.fca.27.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.27.gep
  %p2GMP186.fca.27.insert = insertvalue %gemPrm %p2GMP186.fca.26.insert, <2 x double>* %p2GMP186.fca.27.load, 27
  %p2GMP186.fca.28.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.28.gep
  %p2GMP186.fca.28.insert = insertvalue %gemPrm %p2GMP186.fca.27.insert, <2 x double>* %p2GMP186.fca.28.load, 28
  %p2GMP186.fca.29.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.29.gep
  %p2GMP186.fca.29.insert = insertvalue %gemPrm %p2GMP186.fca.28.insert, <2 x double>* %p2GMP186.fca.29.load, 29
  %p2GMP186.fca.30.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.30.gep
  %p2GMP186.fca.30.insert = insertvalue %gemPrm %p2GMP186.fca.29.insert, <2 x double>* %p2GMP186.fca.30.load, 30
  %p2GMP186.fca.31.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.31.gep
  %p2GMP186.fca.31.insert = insertvalue %gemPrm %p2GMP186.fca.30.insert, <2 x double>* %p2GMP186.fca.31.load, 31
  %p2GMP186.fca.32.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.32.gep
  %p2GMP186.fca.32.insert = insertvalue %gemPrm %p2GMP186.fca.31.insert, <2 x double>* %p2GMP186.fca.32.load, 32
  %p2GMP186.fca.33.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.33.gep
  %p2GMP186.fca.33.insert = insertvalue %gemPrm %p2GMP186.fca.32.insert, <2 x double>* %p2GMP186.fca.33.load, 33
  %p2GMP186.fca.34.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.34.gep
  %p2GMP186.fca.34.insert = insertvalue %gemPrm %p2GMP186.fca.33.insert, <2 x double>* %p2GMP186.fca.34.load, 34
  %p2GMP186.fca.35.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.35.gep
  %p2GMP186.fca.35.insert = insertvalue %gemPrm %p2GMP186.fca.34.insert, <2 x double>* %p2GMP186.fca.35.load, 35
  %p2GMP186.fca.36.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.36.gep
  %p2GMP186.fca.36.insert = insertvalue %gemPrm %p2GMP186.fca.35.insert, <2 x double>* %p2GMP186.fca.36.load, 36
  %p2GMP186.fca.37.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.37.gep
  %p2GMP186.fca.37.insert = insertvalue %gemPrm %p2GMP186.fca.36.insert, <2 x double>* %p2GMP186.fca.37.load, 37
  %p2GMP186.fca.38.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.38.gep
  %p2GMP186.fca.38.insert = insertvalue %gemPrm %p2GMP186.fca.37.insert, <2 x double>* %p2GMP186.fca.38.load, 38
  %p2GMP186.fca.39.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.39.gep
  %p2GMP186.fca.39.insert = insertvalue %gemPrm %p2GMP186.fca.38.insert, <2 x double>* %p2GMP186.fca.39.load, 39
  %p2GMP186.fca.40.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.40.gep
  %p2GMP186.fca.40.insert = insertvalue %gemPrm %p2GMP186.fca.39.insert, <2 x double>* %p2GMP186.fca.40.load, 40
  %p2GMP186.fca.41.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.41.gep
  %p2GMP186.fca.41.insert = insertvalue %gemPrm %p2GMP186.fca.40.insert, <2 x double>* %p2GMP186.fca.41.load, 41
  %p2GMP186.fca.42.load = load <4 x double>*, <4 x double>** %p2GMP107.fca.42.gep
  %p2GMP186.fca.42.insert = insertvalue %gemPrm %p2GMP186.fca.41.insert, <4 x double>* %p2GMP186.fca.42.load, 42
  %p2GMP186.fca.43.load = load <4 x double>*, <4 x double>** %p2GMP107.fca.43.gep
  %p2GMP186.fca.43.insert = insertvalue %gemPrm %p2GMP186.fca.42.insert, <4 x double>* %p2GMP186.fca.43.load, 43
  %p2GMP186.fca.44.load = load <4 x double>*, <4 x double>** %p2GMP107.fca.44.gep
  %p2GMP186.fca.44.insert = insertvalue %gemPrm %p2GMP186.fca.43.insert, <4 x double>* %p2GMP186.fca.44.load, 44
  %p2GMP186.fca.45.load = load <4 x double>*, <4 x double>** %p2GMP107.fca.45.gep
  %p2GMP186.fca.45.insert = insertvalue %gemPrm %p2GMP186.fca.44.insert, <4 x double>* %p2GMP186.fca.45.load, 45
  %p2GMP186.fca.46.load = load <4 x double>*, <4 x double>** %p2GMP107.fca.46.gep
  %p2GMP186.fca.46.insert = insertvalue %gemPrm %p2GMP186.fca.45.insert, <4 x double>* %p2GMP186.fca.46.load, 46
  %p2GMP186.fca.47.load = load <4 x double>*, <4 x double>** %p2GMP107.fca.47.gep
  %p2GMP186.fca.47.insert = insertvalue %gemPrm %p2GMP186.fca.46.insert, <4 x double>* %p2GMP186.fca.47.load, 47
  %p2GMP186.fca.48.load = load <4 x double>*, <4 x double>** %p2GMP107.fca.48.gep
  %p2GMP186.fca.48.insert = insertvalue %gemPrm %p2GMP186.fca.47.insert, <4 x double>* %p2GMP186.fca.48.load, 48
  %p2GMP186.fca.49.load = load <4 x double>*, <4 x double>** %p2GMP107.fca.49.gep
  %p2GMP186.fca.49.insert = insertvalue %gemPrm %p2GMP186.fca.48.insert, <4 x double>* %p2GMP186.fca.49.load, 49
  %p2GMP186.fca.50.load = load <4 x double>*, <4 x double>** %p2GMP107.fca.50.gep
  %p2GMP186.fca.50.insert = insertvalue %gemPrm %p2GMP186.fca.49.insert, <4 x double>* %p2GMP186.fca.50.load, 50
  %p2GMP186.fca.51.load = load <3 x double>*, <3 x double>** %p2GMP107.fca.51.gep
  %p2GMP186.fca.0.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 0
  store double* %p2GMP186.fca.0.load, double** %p2GMP186.fca.0.gep
  %p2GMP186.fca.1.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 1
  store double* %p2GMP186.fca.1.load, double** %p2GMP186.fca.1.gep
  %p2GMP186.fca.2.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 2
  store double* %p2GMP186.fca.2.load, double** %p2GMP186.fca.2.gep
  %p2GMP186.fca.3.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 3
  store double* %p2GMP186.fca.3.load, double** %p2GMP186.fca.3.gep
  %p2GMP186.fca.4.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 4
  store double* %p2GMP186.fca.4.load, double** %p2GMP186.fca.4.gep
  %p2GMP186.fca.5.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 5
  store double* %p2GMP186.fca.5.load, double** %p2GMP186.fca.5.gep
  %p2GMP186.fca.6.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 6
  store <3 x double>* %p2GMP186.fca.6.load, <3 x double>** %p2GMP186.fca.6.gep
  %p2GMP186.fca.7.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 7
  store <3 x double>* %p2GMP186.fca.7.load, <3 x double>** %p2GMP186.fca.7.gep
  %p2GMP186.fca.8.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 8
  store <3 x double>* %p2GMP186.fca.8.load, <3 x double>** %p2GMP186.fca.8.gep
  %p2GMP186.fca.9.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 9
  store <3 x double>* %p2GMP186.fca.9.load, <3 x double>** %p2GMP186.fca.9.gep
  %p2GMP186.fca.10.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 10
  store <3 x double>* %p2GMP186.fca.10.load, <3 x double>** %p2GMP186.fca.10.gep
  %p2GMP186.fca.11.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 11
  store <3 x double>* %p2GMP186.fca.11.load, <3 x double>** %p2GMP186.fca.11.gep
  %p2GMP186.fca.12.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 12
  store <3 x double>* %p2GMP186.fca.12.load, <3 x double>** %p2GMP186.fca.12.gep
  %p2GMP186.fca.13.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 13
  store <2 x double>* %p2GMP186.fca.13.load, <2 x double>** %p2GMP186.fca.13.gep
  %p2GMP186.fca.14.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 14
  store <2 x double>* %p2GMP186.fca.14.load, <2 x double>** %p2GMP186.fca.14.gep
  %p2GMP186.fca.15.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 15
  store <2 x double>* %p2GMP186.fca.15.load, <2 x double>** %p2GMP186.fca.15.gep
  %p2GMP186.fca.16.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 16
  store <2 x double>* %p2GMP186.fca.16.load, <2 x double>** %p2GMP186.fca.16.gep
  %p2GMP186.fca.17.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 17
  store <2 x double>* %p2GMP186.fca.17.load, <2 x double>** %p2GMP186.fca.17.gep
  %p2GMP186.fca.18.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 18
  store <2 x double>* %p2GMP186.fca.18.load, <2 x double>** %p2GMP186.fca.18.gep
  %p2GMP186.fca.19.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 19
  store <2 x double>* %p2GMP186.fca.19.load, <2 x double>** %p2GMP186.fca.19.gep
  %p2GMP186.fca.20.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 20
  store <2 x double>* %p2GMP186.fca.20.load, <2 x double>** %p2GMP186.fca.20.gep
  %p2GMP186.fca.21.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 21
  store <2 x double>* %p2GMP186.fca.21.load, <2 x double>** %p2GMP186.fca.21.gep
  %p2GMP186.fca.22.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 22
  store <2 x double>* %p2GMP186.fca.22.load, <2 x double>** %p2GMP186.fca.22.gep
  %p2GMP186.fca.23.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 23
  store <2 x double>* %p2GMP186.fca.23.load, <2 x double>** %p2GMP186.fca.23.gep
  %p2GMP186.fca.24.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 24
  store <2 x double>* %p2GMP186.fca.24.load, <2 x double>** %p2GMP186.fca.24.gep
  %p2GMP186.fca.25.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 25
  store <2 x double>* %p2GMP186.fca.25.load, <2 x double>** %p2GMP186.fca.25.gep
  %p2GMP186.fca.26.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 26
  store <2 x double>* %p2GMP186.fca.26.load, <2 x double>** %p2GMP186.fca.26.gep
  %p2GMP186.fca.27.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 27
  store <2 x double>* %p2GMP186.fca.27.load, <2 x double>** %p2GMP186.fca.27.gep
  %p2GMP186.fca.28.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 28
  store <2 x double>* %p2GMP186.fca.28.load, <2 x double>** %p2GMP186.fca.28.gep
  %p2GMP186.fca.29.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 29
  store <2 x double>* %p2GMP186.fca.29.load, <2 x double>** %p2GMP186.fca.29.gep
  %p2GMP186.fca.30.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 30
  store <2 x double>* %p2GMP186.fca.30.load, <2 x double>** %p2GMP186.fca.30.gep
  %p2GMP186.fca.31.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 31
  store <2 x double>* %p2GMP186.fca.31.load, <2 x double>** %p2GMP186.fca.31.gep
  %p2GMP186.fca.32.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 32
  store <2 x double>* %p2GMP186.fca.32.load, <2 x double>** %p2GMP186.fca.32.gep
  %p2GMP186.fca.33.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 33
  store <2 x double>* %p2GMP186.fca.33.load, <2 x double>** %p2GMP186.fca.33.gep
  %p2GMP186.fca.34.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 34
  store <2 x double>* %p2GMP186.fca.34.load, <2 x double>** %p2GMP186.fca.34.gep
  %p2GMP186.fca.35.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 35
  store <2 x double>* %p2GMP186.fca.35.load, <2 x double>** %p2GMP186.fca.35.gep
  %p2GMP186.fca.36.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 36
  store <2 x double>* %p2GMP186.fca.36.load, <2 x double>** %p2GMP186.fca.36.gep
  %p2GMP186.fca.37.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 37
  store <2 x double>* %p2GMP186.fca.37.load, <2 x double>** %p2GMP186.fca.37.gep
  %p2GMP186.fca.38.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 38
  store <2 x double>* %p2GMP186.fca.38.load, <2 x double>** %p2GMP186.fca.38.gep
  %p2GMP186.fca.39.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 39
  store <2 x double>* %p2GMP186.fca.39.load, <2 x double>** %p2GMP186.fca.39.gep
  %p2GMP186.fca.40.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 40
  store <2 x double>* %p2GMP186.fca.40.load, <2 x double>** %p2GMP186.fca.40.gep
  %p2GMP186.fca.41.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 41
  store <2 x double>* %p2GMP186.fca.41.load, <2 x double>** %p2GMP186.fca.41.gep
  %p2GMP186.fca.42.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 42
  store <4 x double>* %p2GMP186.fca.42.load, <4 x double>** %p2GMP186.fca.42.gep
  %p2GMP186.fca.43.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 43
  store <4 x double>* %p2GMP186.fca.43.load, <4 x double>** %p2GMP186.fca.43.gep
  %p2GMP186.fca.44.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 44
  store <4 x double>* %p2GMP186.fca.44.load, <4 x double>** %p2GMP186.fca.44.gep
  %p2GMP186.fca.45.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 45
  store <4 x double>* %p2GMP186.fca.45.load, <4 x double>** %p2GMP186.fca.45.gep
  %p2GMP186.fca.46.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 46
  store <4 x double>* %p2GMP186.fca.46.load, <4 x double>** %p2GMP186.fca.46.gep
  %p2GMP186.fca.47.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 47
  store <4 x double>* %p2GMP186.fca.47.load, <4 x double>** %p2GMP186.fca.47.gep
  %p2GMP186.fca.48.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 48
  store <4 x double>* %p2GMP186.fca.48.load, <4 x double>** %p2GMP186.fca.48.gep
  %p2GMP186.fca.49.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 49
  store <4 x double>* %p2GMP186.fca.49.load, <4 x double>** %p2GMP186.fca.49.gep
  %p2GMP186.fca.50.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 50
  store <4 x double>* %p2GMP186.fca.50.load, <4 x double>** %p2GMP186.fca.50.gep
  %p2GMP186.fca.51.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 51
  store <3 x double>* %p2GMP186.fca.51.load, <3 x double>** %p2GMP186.fca.51.gep
  %idx187 = load i64, i64* %idx
  store i64 %idx187, i64* %35
  %idx189 = load i64, i64* %idx
  %return190 = call i64 @"getcomp@I[II"(i64* %GEM4.fca.14.load, i64 %idx189)
  store i64 %return190, i64* %36
  %mem191 = load <2 x double>, <2 x double>* %mem
  store <2 x double> %mem191, <2 x double>* %37
  store <2 x double> <double 1.000000e+00, double 0.000000e+00>, <2 x double>* %38
  store <2 x double> <double 0.000000e+00, double 1.000000e+00>, <2 x double>* %39
  store <2 x double> zeroinitializer, <2 x double>* %40
  %idx193 = load i64, i64* %idx
  %return194 = call double @"getcomp@F[FI"(double* %GEM4.fca.27.load, i64 %idx193)
  store double %return194, double* %41
  %FLAME = call <2 x double> @"FLAME@UZ6gemPrmM52N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PN8pc_DISC2[VIIUUUUF"(%gemPrm* %34, i64* %35, i64* %36, <2 x double>* %37, <2 x double>* %38, <2 x double>* %39, <2 x double>* %40, double* %41)
  store <2 x double> %FLAME, <2 x double>* %mem
  br label %end185

end185:                                           ; preds = %true184, %end171
  %idx196 = load i64, i64* %idx
  %return197 = call double @"getcomp@F[FI"(double* %GEM4.fca.22.load, i64 %idx196)
  %return198 = fcmp one double %return197, 0.000000e+00
  br i1 %return198, label %true200, label %end201

true200:                                          ; preds = %end185
  %tmp202 = load <2 x double>, <2 x double>* %tmp
  %v1GMP203.fca.0.load = load double*, double** %v1GMP108.fca.0.gep
  %v1GMP203.fca.0.insert = insertvalue %gemPrm undef, double* %v1GMP203.fca.0.load, 0
  %v1GMP203.fca.1.load = load double*, double** %v1GMP108.fca.1.gep
  %v1GMP203.fca.1.insert = insertvalue %gemPrm %v1GMP203.fca.0.insert, double* %v1GMP203.fca.1.load, 1
  %v1GMP203.fca.2.load = load double*, double** %v1GMP108.fca.2.gep
  %v1GMP203.fca.2.insert = insertvalue %gemPrm %v1GMP203.fca.1.insert, double* %v1GMP203.fca.2.load, 2
  %v1GMP203.fca.3.load = load double*, double** %v1GMP108.fca.3.gep
  %v1GMP203.fca.3.insert = insertvalue %gemPrm %v1GMP203.fca.2.insert, double* %v1GMP203.fca.3.load, 3
  %v1GMP203.fca.4.load = load double*, double** %v1GMP108.fca.4.gep
  %v1GMP203.fca.4.insert = insertvalue %gemPrm %v1GMP203.fca.3.insert, double* %v1GMP203.fca.4.load, 4
  %v1GMP203.fca.5.load = load double*, double** %v1GMP108.fca.5.gep
  %v1GMP203.fca.5.insert = insertvalue %gemPrm %v1GMP203.fca.4.insert, double* %v1GMP203.fca.5.load, 5
  %v1GMP203.fca.6.load = load <3 x double>*, <3 x double>** %v1GMP108.fca.6.gep
  %v1GMP203.fca.6.insert = insertvalue %gemPrm %v1GMP203.fca.5.insert, <3 x double>* %v1GMP203.fca.6.load, 6
  %v1GMP203.fca.7.load = load <3 x double>*, <3 x double>** %v1GMP108.fca.7.gep
  %v1GMP203.fca.7.insert = insertvalue %gemPrm %v1GMP203.fca.6.insert, <3 x double>* %v1GMP203.fca.7.load, 7
  %v1GMP203.fca.8.load = load <3 x double>*, <3 x double>** %v1GMP108.fca.8.gep
  %v1GMP203.fca.8.insert = insertvalue %gemPrm %v1GMP203.fca.7.insert, <3 x double>* %v1GMP203.fca.8.load, 8
  %v1GMP203.fca.9.load = load <3 x double>*, <3 x double>** %v1GMP108.fca.9.gep
  %v1GMP203.fca.9.insert = insertvalue %gemPrm %v1GMP203.fca.8.insert, <3 x double>* %v1GMP203.fca.9.load, 9
  %v1GMP203.fca.10.load = load <3 x double>*, <3 x double>** %v1GMP108.fca.10.gep
  %v1GMP203.fca.10.insert = insertvalue %gemPrm %v1GMP203.fca.9.insert, <3 x double>* %v1GMP203.fca.10.load, 10
  %v1GMP203.fca.11.load = load <3 x double>*, <3 x double>** %v1GMP108.fca.11.gep
  %v1GMP203.fca.11.insert = insertvalue %gemPrm %v1GMP203.fca.10.insert, <3 x double>* %v1GMP203.fca.11.load, 11
  %v1GMP203.fca.12.load = load <3 x double>*, <3 x double>** %v1GMP108.fca.12.gep
  %v1GMP203.fca.12.insert = insertvalue %gemPrm %v1GMP203.fca.11.insert, <3 x double>* %v1GMP203.fca.12.load, 12
  %v1GMP203.fca.13.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.13.gep
  %v1GMP203.fca.13.insert = insertvalue %gemPrm %v1GMP203.fca.12.insert, <2 x double>* %v1GMP203.fca.13.load, 13
  %v1GMP203.fca.14.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.14.gep
  %v1GMP203.fca.14.insert = insertvalue %gemPrm %v1GMP203.fca.13.insert, <2 x double>* %v1GMP203.fca.14.load, 14
  %v1GMP203.fca.15.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.15.gep
  %v1GMP203.fca.15.insert = insertvalue %gemPrm %v1GMP203.fca.14.insert, <2 x double>* %v1GMP203.fca.15.load, 15
  %v1GMP203.fca.16.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.16.gep
  %v1GMP203.fca.16.insert = insertvalue %gemPrm %v1GMP203.fca.15.insert, <2 x double>* %v1GMP203.fca.16.load, 16
  %v1GMP203.fca.17.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.17.gep
  %v1GMP203.fca.17.insert = insertvalue %gemPrm %v1GMP203.fca.16.insert, <2 x double>* %v1GMP203.fca.17.load, 17
  %v1GMP203.fca.18.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.18.gep
  %v1GMP203.fca.18.insert = insertvalue %gemPrm %v1GMP203.fca.17.insert, <2 x double>* %v1GMP203.fca.18.load, 18
  %v1GMP203.fca.19.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.19.gep
  %v1GMP203.fca.19.insert = insertvalue %gemPrm %v1GMP203.fca.18.insert, <2 x double>* %v1GMP203.fca.19.load, 19
  %v1GMP203.fca.20.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.20.gep
  %v1GMP203.fca.20.insert = insertvalue %gemPrm %v1GMP203.fca.19.insert, <2 x double>* %v1GMP203.fca.20.load, 20
  %v1GMP203.fca.21.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.21.gep
  %v1GMP203.fca.21.insert = insertvalue %gemPrm %v1GMP203.fca.20.insert, <2 x double>* %v1GMP203.fca.21.load, 21
  %v1GMP203.fca.22.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.22.gep
  %v1GMP203.fca.22.insert = insertvalue %gemPrm %v1GMP203.fca.21.insert, <2 x double>* %v1GMP203.fca.22.load, 22
  %v1GMP203.fca.23.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.23.gep
  %v1GMP203.fca.23.insert = insertvalue %gemPrm %v1GMP203.fca.22.insert, <2 x double>* %v1GMP203.fca.23.load, 23
  %v1GMP203.fca.24.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.24.gep
  %v1GMP203.fca.24.insert = insertvalue %gemPrm %v1GMP203.fca.23.insert, <2 x double>* %v1GMP203.fca.24.load, 24
  %v1GMP203.fca.25.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.25.gep
  %v1GMP203.fca.25.insert = insertvalue %gemPrm %v1GMP203.fca.24.insert, <2 x double>* %v1GMP203.fca.25.load, 25
  %v1GMP203.fca.26.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.26.gep
  %v1GMP203.fca.26.insert = insertvalue %gemPrm %v1GMP203.fca.25.insert, <2 x double>* %v1GMP203.fca.26.load, 26
  %v1GMP203.fca.27.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.27.gep
  %v1GMP203.fca.27.insert = insertvalue %gemPrm %v1GMP203.fca.26.insert, <2 x double>* %v1GMP203.fca.27.load, 27
  %v1GMP203.fca.28.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.28.gep
  %v1GMP203.fca.28.insert = insertvalue %gemPrm %v1GMP203.fca.27.insert, <2 x double>* %v1GMP203.fca.28.load, 28
  %v1GMP203.fca.29.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.29.gep
  %v1GMP203.fca.29.insert = insertvalue %gemPrm %v1GMP203.fca.28.insert, <2 x double>* %v1GMP203.fca.29.load, 29
  %v1GMP203.fca.30.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.30.gep
  %v1GMP203.fca.30.insert = insertvalue %gemPrm %v1GMP203.fca.29.insert, <2 x double>* %v1GMP203.fca.30.load, 30
  %v1GMP203.fca.31.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.31.gep
  %v1GMP203.fca.31.insert = insertvalue %gemPrm %v1GMP203.fca.30.insert, <2 x double>* %v1GMP203.fca.31.load, 31
  %v1GMP203.fca.32.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.32.gep
  %v1GMP203.fca.32.insert = insertvalue %gemPrm %v1GMP203.fca.31.insert, <2 x double>* %v1GMP203.fca.32.load, 32
  %v1GMP203.fca.33.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.33.gep
  %v1GMP203.fca.33.insert = insertvalue %gemPrm %v1GMP203.fca.32.insert, <2 x double>* %v1GMP203.fca.33.load, 33
  %v1GMP203.fca.34.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.34.gep
  %v1GMP203.fca.34.insert = insertvalue %gemPrm %v1GMP203.fca.33.insert, <2 x double>* %v1GMP203.fca.34.load, 34
  %v1GMP203.fca.35.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.35.gep
  %v1GMP203.fca.35.insert = insertvalue %gemPrm %v1GMP203.fca.34.insert, <2 x double>* %v1GMP203.fca.35.load, 35
  %v1GMP203.fca.36.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.36.gep
  %v1GMP203.fca.36.insert = insertvalue %gemPrm %v1GMP203.fca.35.insert, <2 x double>* %v1GMP203.fca.36.load, 36
  %v1GMP203.fca.37.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.37.gep
  %v1GMP203.fca.37.insert = insertvalue %gemPrm %v1GMP203.fca.36.insert, <2 x double>* %v1GMP203.fca.37.load, 37
  %v1GMP203.fca.38.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.38.gep
  %v1GMP203.fca.38.insert = insertvalue %gemPrm %v1GMP203.fca.37.insert, <2 x double>* %v1GMP203.fca.38.load, 38
  %v1GMP203.fca.39.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.39.gep
  %v1GMP203.fca.39.insert = insertvalue %gemPrm %v1GMP203.fca.38.insert, <2 x double>* %v1GMP203.fca.39.load, 39
  %v1GMP203.fca.40.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.40.gep
  %v1GMP203.fca.40.insert = insertvalue %gemPrm %v1GMP203.fca.39.insert, <2 x double>* %v1GMP203.fca.40.load, 40
  %v1GMP203.fca.41.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.41.gep
  %v1GMP203.fca.41.insert = insertvalue %gemPrm %v1GMP203.fca.40.insert, <2 x double>* %v1GMP203.fca.41.load, 41
  %v1GMP203.fca.42.load = load <4 x double>*, <4 x double>** %v1GMP108.fca.42.gep
  %v1GMP203.fca.42.insert = insertvalue %gemPrm %v1GMP203.fca.41.insert, <4 x double>* %v1GMP203.fca.42.load, 42
  %v1GMP203.fca.43.load = load <4 x double>*, <4 x double>** %v1GMP108.fca.43.gep
  %v1GMP203.fca.43.insert = insertvalue %gemPrm %v1GMP203.fca.42.insert, <4 x double>* %v1GMP203.fca.43.load, 43
  %v1GMP203.fca.44.load = load <4 x double>*, <4 x double>** %v1GMP108.fca.44.gep
  %v1GMP203.fca.44.insert = insertvalue %gemPrm %v1GMP203.fca.43.insert, <4 x double>* %v1GMP203.fca.44.load, 44
  %v1GMP203.fca.45.load = load <4 x double>*, <4 x double>** %v1GMP108.fca.45.gep
  %v1GMP203.fca.45.insert = insertvalue %gemPrm %v1GMP203.fca.44.insert, <4 x double>* %v1GMP203.fca.45.load, 45
  %v1GMP203.fca.46.load = load <4 x double>*, <4 x double>** %v1GMP108.fca.46.gep
  %v1GMP203.fca.46.insert = insertvalue %gemPrm %v1GMP203.fca.45.insert, <4 x double>* %v1GMP203.fca.46.load, 46
  %v1GMP203.fca.47.load = load <4 x double>*, <4 x double>** %v1GMP108.fca.47.gep
  %v1GMP203.fca.47.insert = insertvalue %gemPrm %v1GMP203.fca.46.insert, <4 x double>* %v1GMP203.fca.47.load, 47
  %v1GMP203.fca.48.load = load <4 x double>*, <4 x double>** %v1GMP108.fca.48.gep
  %v1GMP203.fca.48.insert = insertvalue %gemPrm %v1GMP203.fca.47.insert, <4 x double>* %v1GMP203.fca.48.load, 48
  %v1GMP203.fca.49.load = load <4 x double>*, <4 x double>** %v1GMP108.fca.49.gep
  %v1GMP203.fca.49.insert = insertvalue %gemPrm %v1GMP203.fca.48.insert, <4 x double>* %v1GMP203.fca.49.load, 49
  %v1GMP203.fca.50.load = load <4 x double>*, <4 x double>** %v1GMP108.fca.50.gep
  %v1GMP203.fca.50.insert = insertvalue %gemPrm %v1GMP203.fca.49.insert, <4 x double>* %v1GMP203.fca.50.load, 50
  %v1GMP203.fca.51.load = load <3 x double>*, <3 x double>** %v1GMP108.fca.51.gep
  %v1GMP203.fca.0.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 0
  store double* %v1GMP203.fca.0.load, double** %v1GMP203.fca.0.gep
  %v1GMP203.fca.1.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 1
  store double* %v1GMP203.fca.1.load, double** %v1GMP203.fca.1.gep
  %v1GMP203.fca.2.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 2
  store double* %v1GMP203.fca.2.load, double** %v1GMP203.fca.2.gep
  %v1GMP203.fca.3.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 3
  store double* %v1GMP203.fca.3.load, double** %v1GMP203.fca.3.gep
  %v1GMP203.fca.4.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 4
  store double* %v1GMP203.fca.4.load, double** %v1GMP203.fca.4.gep
  %v1GMP203.fca.5.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 5
  store double* %v1GMP203.fca.5.load, double** %v1GMP203.fca.5.gep
  %v1GMP203.fca.6.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 6
  store <3 x double>* %v1GMP203.fca.6.load, <3 x double>** %v1GMP203.fca.6.gep
  %v1GMP203.fca.7.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 7
  store <3 x double>* %v1GMP203.fca.7.load, <3 x double>** %v1GMP203.fca.7.gep
  %v1GMP203.fca.8.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 8
  store <3 x double>* %v1GMP203.fca.8.load, <3 x double>** %v1GMP203.fca.8.gep
  %v1GMP203.fca.9.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 9
  store <3 x double>* %v1GMP203.fca.9.load, <3 x double>** %v1GMP203.fca.9.gep
  %v1GMP203.fca.10.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 10
  store <3 x double>* %v1GMP203.fca.10.load, <3 x double>** %v1GMP203.fca.10.gep
  %v1GMP203.fca.11.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 11
  store <3 x double>* %v1GMP203.fca.11.load, <3 x double>** %v1GMP203.fca.11.gep
  %v1GMP203.fca.12.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 12
  store <3 x double>* %v1GMP203.fca.12.load, <3 x double>** %v1GMP203.fca.12.gep
  %v1GMP203.fca.13.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 13
  store <2 x double>* %v1GMP203.fca.13.load, <2 x double>** %v1GMP203.fca.13.gep
  %v1GMP203.fca.14.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 14
  store <2 x double>* %v1GMP203.fca.14.load, <2 x double>** %v1GMP203.fca.14.gep
  %v1GMP203.fca.15.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 15
  store <2 x double>* %v1GMP203.fca.15.load, <2 x double>** %v1GMP203.fca.15.gep
  %v1GMP203.fca.16.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 16
  store <2 x double>* %v1GMP203.fca.16.load, <2 x double>** %v1GMP203.fca.16.gep
  %v1GMP203.fca.17.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 17
  store <2 x double>* %v1GMP203.fca.17.load, <2 x double>** %v1GMP203.fca.17.gep
  %v1GMP203.fca.18.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 18
  store <2 x double>* %v1GMP203.fca.18.load, <2 x double>** %v1GMP203.fca.18.gep
  %v1GMP203.fca.19.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 19
  store <2 x double>* %v1GMP203.fca.19.load, <2 x double>** %v1GMP203.fca.19.gep
  %v1GMP203.fca.20.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 20
  store <2 x double>* %v1GMP203.fca.20.load, <2 x double>** %v1GMP203.fca.20.gep
  %v1GMP203.fca.21.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 21
  store <2 x double>* %v1GMP203.fca.21.load, <2 x double>** %v1GMP203.fca.21.gep
  %v1GMP203.fca.22.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 22
  store <2 x double>* %v1GMP203.fca.22.load, <2 x double>** %v1GMP203.fca.22.gep
  %v1GMP203.fca.23.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 23
  store <2 x double>* %v1GMP203.fca.23.load, <2 x double>** %v1GMP203.fca.23.gep
  %v1GMP203.fca.24.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 24
  store <2 x double>* %v1GMP203.fca.24.load, <2 x double>** %v1GMP203.fca.24.gep
  %v1GMP203.fca.25.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 25
  store <2 x double>* %v1GMP203.fca.25.load, <2 x double>** %v1GMP203.fca.25.gep
  %v1GMP203.fca.26.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 26
  store <2 x double>* %v1GMP203.fca.26.load, <2 x double>** %v1GMP203.fca.26.gep
  %v1GMP203.fca.27.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 27
  store <2 x double>* %v1GMP203.fca.27.load, <2 x double>** %v1GMP203.fca.27.gep
  %v1GMP203.fca.28.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 28
  store <2 x double>* %v1GMP203.fca.28.load, <2 x double>** %v1GMP203.fca.28.gep
  %v1GMP203.fca.29.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 29
  store <2 x double>* %v1GMP203.fca.29.load, <2 x double>** %v1GMP203.fca.29.gep
  %v1GMP203.fca.30.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 30
  store <2 x double>* %v1GMP203.fca.30.load, <2 x double>** %v1GMP203.fca.30.gep
  %v1GMP203.fca.31.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 31
  store <2 x double>* %v1GMP203.fca.31.load, <2 x double>** %v1GMP203.fca.31.gep
  %v1GMP203.fca.32.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 32
  store <2 x double>* %v1GMP203.fca.32.load, <2 x double>** %v1GMP203.fca.32.gep
  %v1GMP203.fca.33.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 33
  store <2 x double>* %v1GMP203.fca.33.load, <2 x double>** %v1GMP203.fca.33.gep
  %v1GMP203.fca.34.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 34
  store <2 x double>* %v1GMP203.fca.34.load, <2 x double>** %v1GMP203.fca.34.gep
  %v1GMP203.fca.35.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 35
  store <2 x double>* %v1GMP203.fca.35.load, <2 x double>** %v1GMP203.fca.35.gep
  %v1GMP203.fca.36.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 36
  store <2 x double>* %v1GMP203.fca.36.load, <2 x double>** %v1GMP203.fca.36.gep
  %v1GMP203.fca.37.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 37
  store <2 x double>* %v1GMP203.fca.37.load, <2 x double>** %v1GMP203.fca.37.gep
  %v1GMP203.fca.38.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 38
  store <2 x double>* %v1GMP203.fca.38.load, <2 x double>** %v1GMP203.fca.38.gep
  %v1GMP203.fca.39.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 39
  store <2 x double>* %v1GMP203.fca.39.load, <2 x double>** %v1GMP203.fca.39.gep
  %v1GMP203.fca.40.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 40
  store <2 x double>* %v1GMP203.fca.40.load, <2 x double>** %v1GMP203.fca.40.gep
  %v1GMP203.fca.41.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 41
  store <2 x double>* %v1GMP203.fca.41.load, <2 x double>** %v1GMP203.fca.41.gep
  %v1GMP203.fca.42.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 42
  store <4 x double>* %v1GMP203.fca.42.load, <4 x double>** %v1GMP203.fca.42.gep
  %v1GMP203.fca.43.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 43
  store <4 x double>* %v1GMP203.fca.43.load, <4 x double>** %v1GMP203.fca.43.gep
  %v1GMP203.fca.44.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 44
  store <4 x double>* %v1GMP203.fca.44.load, <4 x double>** %v1GMP203.fca.44.gep
  %v1GMP203.fca.45.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 45
  store <4 x double>* %v1GMP203.fca.45.load, <4 x double>** %v1GMP203.fca.45.gep
  %v1GMP203.fca.46.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 46
  store <4 x double>* %v1GMP203.fca.46.load, <4 x double>** %v1GMP203.fca.46.gep
  %v1GMP203.fca.47.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 47
  store <4 x double>* %v1GMP203.fca.47.load, <4 x double>** %v1GMP203.fca.47.gep
  %v1GMP203.fca.48.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 48
  store <4 x double>* %v1GMP203.fca.48.load, <4 x double>** %v1GMP203.fca.48.gep
  %v1GMP203.fca.49.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 49
  store <4 x double>* %v1GMP203.fca.49.load, <4 x double>** %v1GMP203.fca.49.gep
  %v1GMP203.fca.50.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 50
  store <4 x double>* %v1GMP203.fca.50.load, <4 x double>** %v1GMP203.fca.50.gep
  %v1GMP203.fca.51.gep = getelementptr inbounds %gemPrm, %gemPrm* %42, i32 0, i32 51
  store <3 x double>* %v1GMP203.fca.51.load, <3 x double>** %v1GMP203.fca.51.gep
  %idx204 = load i64, i64* %idx
  store i64 %idx204, i64* %43
  %idx206 = load i64, i64* %idx
  %return207 = call i64 @"getcomp@I[II"(i64* %GEM4.fca.9.load, i64 %idx206)
  store i64 %return207, i64* %44
  %mem208 = load <2 x double>, <2 x double>* %mem
  store <2 x double> %mem208, <2 x double>* %45
  %idx210 = load i64, i64* %idx
  %return211 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM4.fca.38.load, i64 %idx210)
  store <2 x double> %return211, <2 x double>* %46
  %idx213 = load i64, i64* %idx
  %return214 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM4.fca.39.load, i64 %idx213)
  store <2 x double> %return214, <2 x double>* %47
  %idx216 = load i64, i64* %idx
  %return217 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM4.fca.40.load, i64 %idx216)
  store <2 x double> %return217, <2 x double>* %48
  %idx219 = load i64, i64* %idx
  %return220 = call double @"getcomp@F[FI"(double* %GEM4.fca.22.load, i64 %idx219)
  store double %return220, double* %49
  %FLAME221 = call <2 x double> @"FLAME@UZ6gemPrmM52N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PN8pc_DISC2[VIIUUUUF"(%gemPrm* %42, i64* %43, i64* %44, <2 x double>* %45, <2 x double>* %46, <2 x double>* %47, <2 x double>* %48, double* %49)
  %output = call <2 x double> @"add@UU"(<2 x double> %tmp202, <2 x double> %FLAME221)
  store <2 x double> %output, <2 x double>* %tmp
  br label %end201

end201:                                           ; preds = %true200, %end185
  %idx223 = load i64, i64* %idx
  %return224 = call double @"getcomp@F[FI"(double* %GEM4.fca.23.load, i64 %idx223)
  %return225 = fcmp one double %return224, 0.000000e+00
  br i1 %return225, label %true227, label %end228

true227:                                          ; preds = %end201
  %tmp229 = load <2 x double>, <2 x double>* %tmp
  %v2GMP230.fca.0.load = load double*, double** %v2GMP109.fca.0.gep
  %v2GMP230.fca.0.insert = insertvalue %gemPrm undef, double* %v2GMP230.fca.0.load, 0
  %v2GMP230.fca.1.load = load double*, double** %v2GMP109.fca.1.gep
  %v2GMP230.fca.1.insert = insertvalue %gemPrm %v2GMP230.fca.0.insert, double* %v2GMP230.fca.1.load, 1
  %v2GMP230.fca.2.load = load double*, double** %v2GMP109.fca.2.gep
  %v2GMP230.fca.2.insert = insertvalue %gemPrm %v2GMP230.fca.1.insert, double* %v2GMP230.fca.2.load, 2
  %v2GMP230.fca.3.load = load double*, double** %v2GMP109.fca.3.gep
  %v2GMP230.fca.3.insert = insertvalue %gemPrm %v2GMP230.fca.2.insert, double* %v2GMP230.fca.3.load, 3
  %v2GMP230.fca.4.load = load double*, double** %v2GMP109.fca.4.gep
  %v2GMP230.fca.4.insert = insertvalue %gemPrm %v2GMP230.fca.3.insert, double* %v2GMP230.fca.4.load, 4
  %v2GMP230.fca.5.load = load double*, double** %v2GMP109.fca.5.gep
  %v2GMP230.fca.5.insert = insertvalue %gemPrm %v2GMP230.fca.4.insert, double* %v2GMP230.fca.5.load, 5
  %v2GMP230.fca.6.load = load <3 x double>*, <3 x double>** %v2GMP109.fca.6.gep
  %v2GMP230.fca.6.insert = insertvalue %gemPrm %v2GMP230.fca.5.insert, <3 x double>* %v2GMP230.fca.6.load, 6
  %v2GMP230.fca.7.load = load <3 x double>*, <3 x double>** %v2GMP109.fca.7.gep
  %v2GMP230.fca.7.insert = insertvalue %gemPrm %v2GMP230.fca.6.insert, <3 x double>* %v2GMP230.fca.7.load, 7
  %v2GMP230.fca.8.load = load <3 x double>*, <3 x double>** %v2GMP109.fca.8.gep
  %v2GMP230.fca.8.insert = insertvalue %gemPrm %v2GMP230.fca.7.insert, <3 x double>* %v2GMP230.fca.8.load, 8
  %v2GMP230.fca.9.load = load <3 x double>*, <3 x double>** %v2GMP109.fca.9.gep
  %v2GMP230.fca.9.insert = insertvalue %gemPrm %v2GMP230.fca.8.insert, <3 x double>* %v2GMP230.fca.9.load, 9
  %v2GMP230.fca.10.load = load <3 x double>*, <3 x double>** %v2GMP109.fca.10.gep
  %v2GMP230.fca.10.insert = insertvalue %gemPrm %v2GMP230.fca.9.insert, <3 x double>* %v2GMP230.fca.10.load, 10
  %v2GMP230.fca.11.load = load <3 x double>*, <3 x double>** %v2GMP109.fca.11.gep
  %v2GMP230.fca.11.insert = insertvalue %gemPrm %v2GMP230.fca.10.insert, <3 x double>* %v2GMP230.fca.11.load, 11
  %v2GMP230.fca.12.load = load <3 x double>*, <3 x double>** %v2GMP109.fca.12.gep
  %v2GMP230.fca.12.insert = insertvalue %gemPrm %v2GMP230.fca.11.insert, <3 x double>* %v2GMP230.fca.12.load, 12
  %v2GMP230.fca.13.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.13.gep
  %v2GMP230.fca.13.insert = insertvalue %gemPrm %v2GMP230.fca.12.insert, <2 x double>* %v2GMP230.fca.13.load, 13
  %v2GMP230.fca.14.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.14.gep
  %v2GMP230.fca.14.insert = insertvalue %gemPrm %v2GMP230.fca.13.insert, <2 x double>* %v2GMP230.fca.14.load, 14
  %v2GMP230.fca.15.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.15.gep
  %v2GMP230.fca.15.insert = insertvalue %gemPrm %v2GMP230.fca.14.insert, <2 x double>* %v2GMP230.fca.15.load, 15
  %v2GMP230.fca.16.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.16.gep
  %v2GMP230.fca.16.insert = insertvalue %gemPrm %v2GMP230.fca.15.insert, <2 x double>* %v2GMP230.fca.16.load, 16
  %v2GMP230.fca.17.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.17.gep
  %v2GMP230.fca.17.insert = insertvalue %gemPrm %v2GMP230.fca.16.insert, <2 x double>* %v2GMP230.fca.17.load, 17
  %v2GMP230.fca.18.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.18.gep
  %v2GMP230.fca.18.insert = insertvalue %gemPrm %v2GMP230.fca.17.insert, <2 x double>* %v2GMP230.fca.18.load, 18
  %v2GMP230.fca.19.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.19.gep
  %v2GMP230.fca.19.insert = insertvalue %gemPrm %v2GMP230.fca.18.insert, <2 x double>* %v2GMP230.fca.19.load, 19
  %v2GMP230.fca.20.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.20.gep
  %v2GMP230.fca.20.insert = insertvalue %gemPrm %v2GMP230.fca.19.insert, <2 x double>* %v2GMP230.fca.20.load, 20
  %v2GMP230.fca.21.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.21.gep
  %v2GMP230.fca.21.insert = insertvalue %gemPrm %v2GMP230.fca.20.insert, <2 x double>* %v2GMP230.fca.21.load, 21
  %v2GMP230.fca.22.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.22.gep
  %v2GMP230.fca.22.insert = insertvalue %gemPrm %v2GMP230.fca.21.insert, <2 x double>* %v2GMP230.fca.22.load, 22
  %v2GMP230.fca.23.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.23.gep
  %v2GMP230.fca.23.insert = insertvalue %gemPrm %v2GMP230.fca.22.insert, <2 x double>* %v2GMP230.fca.23.load, 23
  %v2GMP230.fca.24.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.24.gep
  %v2GMP230.fca.24.insert = insertvalue %gemPrm %v2GMP230.fca.23.insert, <2 x double>* %v2GMP230.fca.24.load, 24
  %v2GMP230.fca.25.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.25.gep
  %v2GMP230.fca.25.insert = insertvalue %gemPrm %v2GMP230.fca.24.insert, <2 x double>* %v2GMP230.fca.25.load, 25
  %v2GMP230.fca.26.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.26.gep
  %v2GMP230.fca.26.insert = insertvalue %gemPrm %v2GMP230.fca.25.insert, <2 x double>* %v2GMP230.fca.26.load, 26
  %v2GMP230.fca.27.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.27.gep
  %v2GMP230.fca.27.insert = insertvalue %gemPrm %v2GMP230.fca.26.insert, <2 x double>* %v2GMP230.fca.27.load, 27
  %v2GMP230.fca.28.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.28.gep
  %v2GMP230.fca.28.insert = insertvalue %gemPrm %v2GMP230.fca.27.insert, <2 x double>* %v2GMP230.fca.28.load, 28
  %v2GMP230.fca.29.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.29.gep
  %v2GMP230.fca.29.insert = insertvalue %gemPrm %v2GMP230.fca.28.insert, <2 x double>* %v2GMP230.fca.29.load, 29
  %v2GMP230.fca.30.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.30.gep
  %v2GMP230.fca.30.insert = insertvalue %gemPrm %v2GMP230.fca.29.insert, <2 x double>* %v2GMP230.fca.30.load, 30
  %v2GMP230.fca.31.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.31.gep
  %v2GMP230.fca.31.insert = insertvalue %gemPrm %v2GMP230.fca.30.insert, <2 x double>* %v2GMP230.fca.31.load, 31
  %v2GMP230.fca.32.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.32.gep
  %v2GMP230.fca.32.insert = insertvalue %gemPrm %v2GMP230.fca.31.insert, <2 x double>* %v2GMP230.fca.32.load, 32
  %v2GMP230.fca.33.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.33.gep
  %v2GMP230.fca.33.insert = insertvalue %gemPrm %v2GMP230.fca.32.insert, <2 x double>* %v2GMP230.fca.33.load, 33
  %v2GMP230.fca.34.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.34.gep
  %v2GMP230.fca.34.insert = insertvalue %gemPrm %v2GMP230.fca.33.insert, <2 x double>* %v2GMP230.fca.34.load, 34
  %v2GMP230.fca.35.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.35.gep
  %v2GMP230.fca.35.insert = insertvalue %gemPrm %v2GMP230.fca.34.insert, <2 x double>* %v2GMP230.fca.35.load, 35
  %v2GMP230.fca.36.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.36.gep
  %v2GMP230.fca.36.insert = insertvalue %gemPrm %v2GMP230.fca.35.insert, <2 x double>* %v2GMP230.fca.36.load, 36
  %v2GMP230.fca.37.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.37.gep
  %v2GMP230.fca.37.insert = insertvalue %gemPrm %v2GMP230.fca.36.insert, <2 x double>* %v2GMP230.fca.37.load, 37
  %v2GMP230.fca.38.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.38.gep
  %v2GMP230.fca.38.insert = insertvalue %gemPrm %v2GMP230.fca.37.insert, <2 x double>* %v2GMP230.fca.38.load, 38
  %v2GMP230.fca.39.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.39.gep
  %v2GMP230.fca.39.insert = insertvalue %gemPrm %v2GMP230.fca.38.insert, <2 x double>* %v2GMP230.fca.39.load, 39
  %v2GMP230.fca.40.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.40.gep
  %v2GMP230.fca.40.insert = insertvalue %gemPrm %v2GMP230.fca.39.insert, <2 x double>* %v2GMP230.fca.40.load, 40
  %v2GMP230.fca.41.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.41.gep
  %v2GMP230.fca.41.insert = insertvalue %gemPrm %v2GMP230.fca.40.insert, <2 x double>* %v2GMP230.fca.41.load, 41
  %v2GMP230.fca.42.load = load <4 x double>*, <4 x double>** %v2GMP109.fca.42.gep
  %v2GMP230.fca.42.insert = insertvalue %gemPrm %v2GMP230.fca.41.insert, <4 x double>* %v2GMP230.fca.42.load, 42
  %v2GMP230.fca.43.load = load <4 x double>*, <4 x double>** %v2GMP109.fca.43.gep
  %v2GMP230.fca.43.insert = insertvalue %gemPrm %v2GMP230.fca.42.insert, <4 x double>* %v2GMP230.fca.43.load, 43
  %v2GMP230.fca.44.load = load <4 x double>*, <4 x double>** %v2GMP109.fca.44.gep
  %v2GMP230.fca.44.insert = insertvalue %gemPrm %v2GMP230.fca.43.insert, <4 x double>* %v2GMP230.fca.44.load, 44
  %v2GMP230.fca.45.load = load <4 x double>*, <4 x double>** %v2GMP109.fca.45.gep
  %v2GMP230.fca.45.insert = insertvalue %gemPrm %v2GMP230.fca.44.insert, <4 x double>* %v2GMP230.fca.45.load, 45
  %v2GMP230.fca.46.load = load <4 x double>*, <4 x double>** %v2GMP109.fca.46.gep
  %v2GMP230.fca.46.insert = insertvalue %gemPrm %v2GMP230.fca.45.insert, <4 x double>* %v2GMP230.fca.46.load, 46
  %v2GMP230.fca.47.load = load <4 x double>*, <4 x double>** %v2GMP109.fca.47.gep
  %v2GMP230.fca.47.insert = insertvalue %gemPrm %v2GMP230.fca.46.insert, <4 x double>* %v2GMP230.fca.47.load, 47
  %v2GMP230.fca.48.load = load <4 x double>*, <4 x double>** %v2GMP109.fca.48.gep
  %v2GMP230.fca.48.insert = insertvalue %gemPrm %v2GMP230.fca.47.insert, <4 x double>* %v2GMP230.fca.48.load, 48
  %v2GMP230.fca.49.load = load <4 x double>*, <4 x double>** %v2GMP109.fca.49.gep
  %v2GMP230.fca.49.insert = insertvalue %gemPrm %v2GMP230.fca.48.insert, <4 x double>* %v2GMP230.fca.49.load, 49
  %v2GMP230.fca.50.load = load <4 x double>*, <4 x double>** %v2GMP109.fca.50.gep
  %v2GMP230.fca.50.insert = insertvalue %gemPrm %v2GMP230.fca.49.insert, <4 x double>* %v2GMP230.fca.50.load, 50
  %v2GMP230.fca.51.load = load <3 x double>*, <3 x double>** %v2GMP109.fca.51.gep
  %v2GMP230.fca.0.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 0
  store double* %v2GMP230.fca.0.load, double** %v2GMP230.fca.0.gep
  %v2GMP230.fca.1.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 1
  store double* %v2GMP230.fca.1.load, double** %v2GMP230.fca.1.gep
  %v2GMP230.fca.2.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 2
  store double* %v2GMP230.fca.2.load, double** %v2GMP230.fca.2.gep
  %v2GMP230.fca.3.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 3
  store double* %v2GMP230.fca.3.load, double** %v2GMP230.fca.3.gep
  %v2GMP230.fca.4.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 4
  store double* %v2GMP230.fca.4.load, double** %v2GMP230.fca.4.gep
  %v2GMP230.fca.5.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 5
  store double* %v2GMP230.fca.5.load, double** %v2GMP230.fca.5.gep
  %v2GMP230.fca.6.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 6
  store <3 x double>* %v2GMP230.fca.6.load, <3 x double>** %v2GMP230.fca.6.gep
  %v2GMP230.fca.7.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 7
  store <3 x double>* %v2GMP230.fca.7.load, <3 x double>** %v2GMP230.fca.7.gep
  %v2GMP230.fca.8.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 8
  store <3 x double>* %v2GMP230.fca.8.load, <3 x double>** %v2GMP230.fca.8.gep
  %v2GMP230.fca.9.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 9
  store <3 x double>* %v2GMP230.fca.9.load, <3 x double>** %v2GMP230.fca.9.gep
  %v2GMP230.fca.10.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 10
  store <3 x double>* %v2GMP230.fca.10.load, <3 x double>** %v2GMP230.fca.10.gep
  %v2GMP230.fca.11.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 11
  store <3 x double>* %v2GMP230.fca.11.load, <3 x double>** %v2GMP230.fca.11.gep
  %v2GMP230.fca.12.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 12
  store <3 x double>* %v2GMP230.fca.12.load, <3 x double>** %v2GMP230.fca.12.gep
  %v2GMP230.fca.13.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 13
  store <2 x double>* %v2GMP230.fca.13.load, <2 x double>** %v2GMP230.fca.13.gep
  %v2GMP230.fca.14.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 14
  store <2 x double>* %v2GMP230.fca.14.load, <2 x double>** %v2GMP230.fca.14.gep
  %v2GMP230.fca.15.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 15
  store <2 x double>* %v2GMP230.fca.15.load, <2 x double>** %v2GMP230.fca.15.gep
  %v2GMP230.fca.16.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 16
  store <2 x double>* %v2GMP230.fca.16.load, <2 x double>** %v2GMP230.fca.16.gep
  %v2GMP230.fca.17.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 17
  store <2 x double>* %v2GMP230.fca.17.load, <2 x double>** %v2GMP230.fca.17.gep
  %v2GMP230.fca.18.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 18
  store <2 x double>* %v2GMP230.fca.18.load, <2 x double>** %v2GMP230.fca.18.gep
  %v2GMP230.fca.19.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 19
  store <2 x double>* %v2GMP230.fca.19.load, <2 x double>** %v2GMP230.fca.19.gep
  %v2GMP230.fca.20.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 20
  store <2 x double>* %v2GMP230.fca.20.load, <2 x double>** %v2GMP230.fca.20.gep
  %v2GMP230.fca.21.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 21
  store <2 x double>* %v2GMP230.fca.21.load, <2 x double>** %v2GMP230.fca.21.gep
  %v2GMP230.fca.22.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 22
  store <2 x double>* %v2GMP230.fca.22.load, <2 x double>** %v2GMP230.fca.22.gep
  %v2GMP230.fca.23.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 23
  store <2 x double>* %v2GMP230.fca.23.load, <2 x double>** %v2GMP230.fca.23.gep
  %v2GMP230.fca.24.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 24
  store <2 x double>* %v2GMP230.fca.24.load, <2 x double>** %v2GMP230.fca.24.gep
  %v2GMP230.fca.25.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 25
  store <2 x double>* %v2GMP230.fca.25.load, <2 x double>** %v2GMP230.fca.25.gep
  %v2GMP230.fca.26.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 26
  store <2 x double>* %v2GMP230.fca.26.load, <2 x double>** %v2GMP230.fca.26.gep
  %v2GMP230.fca.27.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 27
  store <2 x double>* %v2GMP230.fca.27.load, <2 x double>** %v2GMP230.fca.27.gep
  %v2GMP230.fca.28.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 28
  store <2 x double>* %v2GMP230.fca.28.load, <2 x double>** %v2GMP230.fca.28.gep
  %v2GMP230.fca.29.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 29
  store <2 x double>* %v2GMP230.fca.29.load, <2 x double>** %v2GMP230.fca.29.gep
  %v2GMP230.fca.30.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 30
  store <2 x double>* %v2GMP230.fca.30.load, <2 x double>** %v2GMP230.fca.30.gep
  %v2GMP230.fca.31.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 31
  store <2 x double>* %v2GMP230.fca.31.load, <2 x double>** %v2GMP230.fca.31.gep
  %v2GMP230.fca.32.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 32
  store <2 x double>* %v2GMP230.fca.32.load, <2 x double>** %v2GMP230.fca.32.gep
  %v2GMP230.fca.33.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 33
  store <2 x double>* %v2GMP230.fca.33.load, <2 x double>** %v2GMP230.fca.33.gep
  %v2GMP230.fca.34.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 34
  store <2 x double>* %v2GMP230.fca.34.load, <2 x double>** %v2GMP230.fca.34.gep
  %v2GMP230.fca.35.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 35
  store <2 x double>* %v2GMP230.fca.35.load, <2 x double>** %v2GMP230.fca.35.gep
  %v2GMP230.fca.36.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 36
  store <2 x double>* %v2GMP230.fca.36.load, <2 x double>** %v2GMP230.fca.36.gep
  %v2GMP230.fca.37.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 37
  store <2 x double>* %v2GMP230.fca.37.load, <2 x double>** %v2GMP230.fca.37.gep
  %v2GMP230.fca.38.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 38
  store <2 x double>* %v2GMP230.fca.38.load, <2 x double>** %v2GMP230.fca.38.gep
  %v2GMP230.fca.39.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 39
  store <2 x double>* %v2GMP230.fca.39.load, <2 x double>** %v2GMP230.fca.39.gep
  %v2GMP230.fca.40.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 40
  store <2 x double>* %v2GMP230.fca.40.load, <2 x double>** %v2GMP230.fca.40.gep
  %v2GMP230.fca.41.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 41
  store <2 x double>* %v2GMP230.fca.41.load, <2 x double>** %v2GMP230.fca.41.gep
  %v2GMP230.fca.42.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 42
  store <4 x double>* %v2GMP230.fca.42.load, <4 x double>** %v2GMP230.fca.42.gep
  %v2GMP230.fca.43.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 43
  store <4 x double>* %v2GMP230.fca.43.load, <4 x double>** %v2GMP230.fca.43.gep
  %v2GMP230.fca.44.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 44
  store <4 x double>* %v2GMP230.fca.44.load, <4 x double>** %v2GMP230.fca.44.gep
  %v2GMP230.fca.45.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 45
  store <4 x double>* %v2GMP230.fca.45.load, <4 x double>** %v2GMP230.fca.45.gep
  %v2GMP230.fca.46.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 46
  store <4 x double>* %v2GMP230.fca.46.load, <4 x double>** %v2GMP230.fca.46.gep
  %v2GMP230.fca.47.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 47
  store <4 x double>* %v2GMP230.fca.47.load, <4 x double>** %v2GMP230.fca.47.gep
  %v2GMP230.fca.48.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 48
  store <4 x double>* %v2GMP230.fca.48.load, <4 x double>** %v2GMP230.fca.48.gep
  %v2GMP230.fca.49.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 49
  store <4 x double>* %v2GMP230.fca.49.load, <4 x double>** %v2GMP230.fca.49.gep
  %v2GMP230.fca.50.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 50
  store <4 x double>* %v2GMP230.fca.50.load, <4 x double>** %v2GMP230.fca.50.gep
  %v2GMP230.fca.51.gep = getelementptr inbounds %gemPrm, %gemPrm* %50, i32 0, i32 51
  store <3 x double>* %v2GMP230.fca.51.load, <3 x double>** %v2GMP230.fca.51.gep
  %idx231 = load i64, i64* %idx
  store i64 %idx231, i64* %51
  %idx233 = load i64, i64* %idx
  %return234 = call i64 @"getcomp@I[II"(i64* %GEM4.fca.10.load, i64 %idx233)
  store i64 %return234, i64* %52
  %mem235 = load <2 x double>, <2 x double>* %mem
  store <2 x double> %mem235, <2 x double>* %53
  %idx237 = load i64, i64* %idx
  %return238 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM4.fca.38.load, i64 %idx237)
  store <2 x double> %return238, <2 x double>* %54
  %idx240 = load i64, i64* %idx
  %return241 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM4.fca.39.load, i64 %idx240)
  store <2 x double> %return241, <2 x double>* %55
  %idx243 = load i64, i64* %idx
  %return244 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM4.fca.40.load, i64 %idx243)
  store <2 x double> %return244, <2 x double>* %56
  %idx246 = load i64, i64* %idx
  %return247 = call double @"getcomp@F[FI"(double* %GEM4.fca.23.load, i64 %idx246)
  store double %return247, double* %57
  %FLAME248 = call <2 x double> @"FLAME@UZ6gemPrmM52N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PN8pc_DISC2[VIIUUUUF"(%gemPrm* %50, i64* %51, i64* %52, <2 x double>* %53, <2 x double>* %54, <2 x double>* %55, <2 x double>* %56, double* %57)
  %output249 = call <2 x double> @"add@UU"(<2 x double> %tmp229, <2 x double> %FLAME248)
  store <2 x double> %output249, <2 x double>* %tmp
  br label %end228

end228:                                           ; preds = %true227, %end201
  %idx251 = load i64, i64* %idx
  %return252 = call double @"getcomp@F[FI"(double* %GEM4.fca.24.load, i64 %idx251)
  %return253 = fcmp one double %return252, 0.000000e+00
  br i1 %return253, label %true255, label %end256

true255:                                          ; preds = %end228
  %tmp257 = load <2 x double>, <2 x double>* %tmp
  %v3GMP258.fca.0.load = load double*, double** %v3GMP110.fca.0.gep
  %v3GMP258.fca.0.insert = insertvalue %gemPrm undef, double* %v3GMP258.fca.0.load, 0
  %v3GMP258.fca.1.load = load double*, double** %v3GMP110.fca.1.gep
  %v3GMP258.fca.1.insert = insertvalue %gemPrm %v3GMP258.fca.0.insert, double* %v3GMP258.fca.1.load, 1
  %v3GMP258.fca.2.load = load double*, double** %v3GMP110.fca.2.gep
  %v3GMP258.fca.2.insert = insertvalue %gemPrm %v3GMP258.fca.1.insert, double* %v3GMP258.fca.2.load, 2
  %v3GMP258.fca.3.load = load double*, double** %v3GMP110.fca.3.gep
  %v3GMP258.fca.3.insert = insertvalue %gemPrm %v3GMP258.fca.2.insert, double* %v3GMP258.fca.3.load, 3
  %v3GMP258.fca.4.load = load double*, double** %v3GMP110.fca.4.gep
  %v3GMP258.fca.4.insert = insertvalue %gemPrm %v3GMP258.fca.3.insert, double* %v3GMP258.fca.4.load, 4
  %v3GMP258.fca.5.load = load double*, double** %v3GMP110.fca.5.gep
  %v3GMP258.fca.5.insert = insertvalue %gemPrm %v3GMP258.fca.4.insert, double* %v3GMP258.fca.5.load, 5
  %v3GMP258.fca.6.load = load <3 x double>*, <3 x double>** %v3GMP110.fca.6.gep
  %v3GMP258.fca.6.insert = insertvalue %gemPrm %v3GMP258.fca.5.insert, <3 x double>* %v3GMP258.fca.6.load, 6
  %v3GMP258.fca.7.load = load <3 x double>*, <3 x double>** %v3GMP110.fca.7.gep
  %v3GMP258.fca.7.insert = insertvalue %gemPrm %v3GMP258.fca.6.insert, <3 x double>* %v3GMP258.fca.7.load, 7
  %v3GMP258.fca.8.load = load <3 x double>*, <3 x double>** %v3GMP110.fca.8.gep
  %v3GMP258.fca.8.insert = insertvalue %gemPrm %v3GMP258.fca.7.insert, <3 x double>* %v3GMP258.fca.8.load, 8
  %v3GMP258.fca.9.load = load <3 x double>*, <3 x double>** %v3GMP110.fca.9.gep
  %v3GMP258.fca.9.insert = insertvalue %gemPrm %v3GMP258.fca.8.insert, <3 x double>* %v3GMP258.fca.9.load, 9
  %v3GMP258.fca.10.load = load <3 x double>*, <3 x double>** %v3GMP110.fca.10.gep
  %v3GMP258.fca.10.insert = insertvalue %gemPrm %v3GMP258.fca.9.insert, <3 x double>* %v3GMP258.fca.10.load, 10
  %v3GMP258.fca.11.load = load <3 x double>*, <3 x double>** %v3GMP110.fca.11.gep
  %v3GMP258.fca.11.insert = insertvalue %gemPrm %v3GMP258.fca.10.insert, <3 x double>* %v3GMP258.fca.11.load, 11
  %v3GMP258.fca.12.load = load <3 x double>*, <3 x double>** %v3GMP110.fca.12.gep
  %v3GMP258.fca.12.insert = insertvalue %gemPrm %v3GMP258.fca.11.insert, <3 x double>* %v3GMP258.fca.12.load, 12
  %v3GMP258.fca.13.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.13.gep
  %v3GMP258.fca.13.insert = insertvalue %gemPrm %v3GMP258.fca.12.insert, <2 x double>* %v3GMP258.fca.13.load, 13
  %v3GMP258.fca.14.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.14.gep
  %v3GMP258.fca.14.insert = insertvalue %gemPrm %v3GMP258.fca.13.insert, <2 x double>* %v3GMP258.fca.14.load, 14
  %v3GMP258.fca.15.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.15.gep
  %v3GMP258.fca.15.insert = insertvalue %gemPrm %v3GMP258.fca.14.insert, <2 x double>* %v3GMP258.fca.15.load, 15
  %v3GMP258.fca.16.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.16.gep
  %v3GMP258.fca.16.insert = insertvalue %gemPrm %v3GMP258.fca.15.insert, <2 x double>* %v3GMP258.fca.16.load, 16
  %v3GMP258.fca.17.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.17.gep
  %v3GMP258.fca.17.insert = insertvalue %gemPrm %v3GMP258.fca.16.insert, <2 x double>* %v3GMP258.fca.17.load, 17
  %v3GMP258.fca.18.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.18.gep
  %v3GMP258.fca.18.insert = insertvalue %gemPrm %v3GMP258.fca.17.insert, <2 x double>* %v3GMP258.fca.18.load, 18
  %v3GMP258.fca.19.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.19.gep
  %v3GMP258.fca.19.insert = insertvalue %gemPrm %v3GMP258.fca.18.insert, <2 x double>* %v3GMP258.fca.19.load, 19
  %v3GMP258.fca.20.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.20.gep
  %v3GMP258.fca.20.insert = insertvalue %gemPrm %v3GMP258.fca.19.insert, <2 x double>* %v3GMP258.fca.20.load, 20
  %v3GMP258.fca.21.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.21.gep
  %v3GMP258.fca.21.insert = insertvalue %gemPrm %v3GMP258.fca.20.insert, <2 x double>* %v3GMP258.fca.21.load, 21
  %v3GMP258.fca.22.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.22.gep
  %v3GMP258.fca.22.insert = insertvalue %gemPrm %v3GMP258.fca.21.insert, <2 x double>* %v3GMP258.fca.22.load, 22
  %v3GMP258.fca.23.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.23.gep
  %v3GMP258.fca.23.insert = insertvalue %gemPrm %v3GMP258.fca.22.insert, <2 x double>* %v3GMP258.fca.23.load, 23
  %v3GMP258.fca.24.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.24.gep
  %v3GMP258.fca.24.insert = insertvalue %gemPrm %v3GMP258.fca.23.insert, <2 x double>* %v3GMP258.fca.24.load, 24
  %v3GMP258.fca.25.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.25.gep
  %v3GMP258.fca.25.insert = insertvalue %gemPrm %v3GMP258.fca.24.insert, <2 x double>* %v3GMP258.fca.25.load, 25
  %v3GMP258.fca.26.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.26.gep
  %v3GMP258.fca.26.insert = insertvalue %gemPrm %v3GMP258.fca.25.insert, <2 x double>* %v3GMP258.fca.26.load, 26
  %v3GMP258.fca.27.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.27.gep
  %v3GMP258.fca.27.insert = insertvalue %gemPrm %v3GMP258.fca.26.insert, <2 x double>* %v3GMP258.fca.27.load, 27
  %v3GMP258.fca.28.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.28.gep
  %v3GMP258.fca.28.insert = insertvalue %gemPrm %v3GMP258.fca.27.insert, <2 x double>* %v3GMP258.fca.28.load, 28
  %v3GMP258.fca.29.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.29.gep
  %v3GMP258.fca.29.insert = insertvalue %gemPrm %v3GMP258.fca.28.insert, <2 x double>* %v3GMP258.fca.29.load, 29
  %v3GMP258.fca.30.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.30.gep
  %v3GMP258.fca.30.insert = insertvalue %gemPrm %v3GMP258.fca.29.insert, <2 x double>* %v3GMP258.fca.30.load, 30
  %v3GMP258.fca.31.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.31.gep
  %v3GMP258.fca.31.insert = insertvalue %gemPrm %v3GMP258.fca.30.insert, <2 x double>* %v3GMP258.fca.31.load, 31
  %v3GMP258.fca.32.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.32.gep
  %v3GMP258.fca.32.insert = insertvalue %gemPrm %v3GMP258.fca.31.insert, <2 x double>* %v3GMP258.fca.32.load, 32
  %v3GMP258.fca.33.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.33.gep
  %v3GMP258.fca.33.insert = insertvalue %gemPrm %v3GMP258.fca.32.insert, <2 x double>* %v3GMP258.fca.33.load, 33
  %v3GMP258.fca.34.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.34.gep
  %v3GMP258.fca.34.insert = insertvalue %gemPrm %v3GMP258.fca.33.insert, <2 x double>* %v3GMP258.fca.34.load, 34
  %v3GMP258.fca.35.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.35.gep
  %v3GMP258.fca.35.insert = insertvalue %gemPrm %v3GMP258.fca.34.insert, <2 x double>* %v3GMP258.fca.35.load, 35
  %v3GMP258.fca.36.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.36.gep
  %v3GMP258.fca.36.insert = insertvalue %gemPrm %v3GMP258.fca.35.insert, <2 x double>* %v3GMP258.fca.36.load, 36
  %v3GMP258.fca.37.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.37.gep
  %v3GMP258.fca.37.insert = insertvalue %gemPrm %v3GMP258.fca.36.insert, <2 x double>* %v3GMP258.fca.37.load, 37
  %v3GMP258.fca.38.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.38.gep
  %v3GMP258.fca.38.insert = insertvalue %gemPrm %v3GMP258.fca.37.insert, <2 x double>* %v3GMP258.fca.38.load, 38
  %v3GMP258.fca.39.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.39.gep
  %v3GMP258.fca.39.insert = insertvalue %gemPrm %v3GMP258.fca.38.insert, <2 x double>* %v3GMP258.fca.39.load, 39
  %v3GMP258.fca.40.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.40.gep
  %v3GMP258.fca.40.insert = insertvalue %gemPrm %v3GMP258.fca.39.insert, <2 x double>* %v3GMP258.fca.40.load, 40
  %v3GMP258.fca.41.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.41.gep
  %v3GMP258.fca.41.insert = insertvalue %gemPrm %v3GMP258.fca.40.insert, <2 x double>* %v3GMP258.fca.41.load, 41
  %v3GMP258.fca.42.load = load <4 x double>*, <4 x double>** %v3GMP110.fca.42.gep
  %v3GMP258.fca.42.insert = insertvalue %gemPrm %v3GMP258.fca.41.insert, <4 x double>* %v3GMP258.fca.42.load, 42
  %v3GMP258.fca.43.load = load <4 x double>*, <4 x double>** %v3GMP110.fca.43.gep
  %v3GMP258.fca.43.insert = insertvalue %gemPrm %v3GMP258.fca.42.insert, <4 x double>* %v3GMP258.fca.43.load, 43
  %v3GMP258.fca.44.load = load <4 x double>*, <4 x double>** %v3GMP110.fca.44.gep
  %v3GMP258.fca.44.insert = insertvalue %gemPrm %v3GMP258.fca.43.insert, <4 x double>* %v3GMP258.fca.44.load, 44
  %v3GMP258.fca.45.load = load <4 x double>*, <4 x double>** %v3GMP110.fca.45.gep
  %v3GMP258.fca.45.insert = insertvalue %gemPrm %v3GMP258.fca.44.insert, <4 x double>* %v3GMP258.fca.45.load, 45
  %v3GMP258.fca.46.load = load <4 x double>*, <4 x double>** %v3GMP110.fca.46.gep
  %v3GMP258.fca.46.insert = insertvalue %gemPrm %v3GMP258.fca.45.insert, <4 x double>* %v3GMP258.fca.46.load, 46
  %v3GMP258.fca.47.load = load <4 x double>*, <4 x double>** %v3GMP110.fca.47.gep
  %v3GMP258.fca.47.insert = insertvalue %gemPrm %v3GMP258.fca.46.insert, <4 x double>* %v3GMP258.fca.47.load, 47
  %v3GMP258.fca.48.load = load <4 x double>*, <4 x double>** %v3GMP110.fca.48.gep
  %v3GMP258.fca.48.insert = insertvalue %gemPrm %v3GMP258.fca.47.insert, <4 x double>* %v3GMP258.fca.48.load, 48
  %v3GMP258.fca.49.load = load <4 x double>*, <4 x double>** %v3GMP110.fca.49.gep
  %v3GMP258.fca.49.insert = insertvalue %gemPrm %v3GMP258.fca.48.insert, <4 x double>* %v3GMP258.fca.49.load, 49
  %v3GMP258.fca.50.load = load <4 x double>*, <4 x double>** %v3GMP110.fca.50.gep
  %v3GMP258.fca.50.insert = insertvalue %gemPrm %v3GMP258.fca.49.insert, <4 x double>* %v3GMP258.fca.50.load, 50
  %v3GMP258.fca.51.load = load <3 x double>*, <3 x double>** %v3GMP110.fca.51.gep
  %v3GMP258.fca.0.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 0
  store double* %v3GMP258.fca.0.load, double** %v3GMP258.fca.0.gep
  %v3GMP258.fca.1.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 1
  store double* %v3GMP258.fca.1.load, double** %v3GMP258.fca.1.gep
  %v3GMP258.fca.2.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 2
  store double* %v3GMP258.fca.2.load, double** %v3GMP258.fca.2.gep
  %v3GMP258.fca.3.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 3
  store double* %v3GMP258.fca.3.load, double** %v3GMP258.fca.3.gep
  %v3GMP258.fca.4.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 4
  store double* %v3GMP258.fca.4.load, double** %v3GMP258.fca.4.gep
  %v3GMP258.fca.5.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 5
  store double* %v3GMP258.fca.5.load, double** %v3GMP258.fca.5.gep
  %v3GMP258.fca.6.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 6
  store <3 x double>* %v3GMP258.fca.6.load, <3 x double>** %v3GMP258.fca.6.gep
  %v3GMP258.fca.7.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 7
  store <3 x double>* %v3GMP258.fca.7.load, <3 x double>** %v3GMP258.fca.7.gep
  %v3GMP258.fca.8.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 8
  store <3 x double>* %v3GMP258.fca.8.load, <3 x double>** %v3GMP258.fca.8.gep
  %v3GMP258.fca.9.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 9
  store <3 x double>* %v3GMP258.fca.9.load, <3 x double>** %v3GMP258.fca.9.gep
  %v3GMP258.fca.10.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 10
  store <3 x double>* %v3GMP258.fca.10.load, <3 x double>** %v3GMP258.fca.10.gep
  %v3GMP258.fca.11.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 11
  store <3 x double>* %v3GMP258.fca.11.load, <3 x double>** %v3GMP258.fca.11.gep
  %v3GMP258.fca.12.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 12
  store <3 x double>* %v3GMP258.fca.12.load, <3 x double>** %v3GMP258.fca.12.gep
  %v3GMP258.fca.13.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 13
  store <2 x double>* %v3GMP258.fca.13.load, <2 x double>** %v3GMP258.fca.13.gep
  %v3GMP258.fca.14.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 14
  store <2 x double>* %v3GMP258.fca.14.load, <2 x double>** %v3GMP258.fca.14.gep
  %v3GMP258.fca.15.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 15
  store <2 x double>* %v3GMP258.fca.15.load, <2 x double>** %v3GMP258.fca.15.gep
  %v3GMP258.fca.16.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 16
  store <2 x double>* %v3GMP258.fca.16.load, <2 x double>** %v3GMP258.fca.16.gep
  %v3GMP258.fca.17.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 17
  store <2 x double>* %v3GMP258.fca.17.load, <2 x double>** %v3GMP258.fca.17.gep
  %v3GMP258.fca.18.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 18
  store <2 x double>* %v3GMP258.fca.18.load, <2 x double>** %v3GMP258.fca.18.gep
  %v3GMP258.fca.19.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 19
  store <2 x double>* %v3GMP258.fca.19.load, <2 x double>** %v3GMP258.fca.19.gep
  %v3GMP258.fca.20.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 20
  store <2 x double>* %v3GMP258.fca.20.load, <2 x double>** %v3GMP258.fca.20.gep
  %v3GMP258.fca.21.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 21
  store <2 x double>* %v3GMP258.fca.21.load, <2 x double>** %v3GMP258.fca.21.gep
  %v3GMP258.fca.22.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 22
  store <2 x double>* %v3GMP258.fca.22.load, <2 x double>** %v3GMP258.fca.22.gep
  %v3GMP258.fca.23.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 23
  store <2 x double>* %v3GMP258.fca.23.load, <2 x double>** %v3GMP258.fca.23.gep
  %v3GMP258.fca.24.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 24
  store <2 x double>* %v3GMP258.fca.24.load, <2 x double>** %v3GMP258.fca.24.gep
  %v3GMP258.fca.25.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 25
  store <2 x double>* %v3GMP258.fca.25.load, <2 x double>** %v3GMP258.fca.25.gep
  %v3GMP258.fca.26.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 26
  store <2 x double>* %v3GMP258.fca.26.load, <2 x double>** %v3GMP258.fca.26.gep
  %v3GMP258.fca.27.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 27
  store <2 x double>* %v3GMP258.fca.27.load, <2 x double>** %v3GMP258.fca.27.gep
  %v3GMP258.fca.28.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 28
  store <2 x double>* %v3GMP258.fca.28.load, <2 x double>** %v3GMP258.fca.28.gep
  %v3GMP258.fca.29.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 29
  store <2 x double>* %v3GMP258.fca.29.load, <2 x double>** %v3GMP258.fca.29.gep
  %v3GMP258.fca.30.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 30
  store <2 x double>* %v3GMP258.fca.30.load, <2 x double>** %v3GMP258.fca.30.gep
  %v3GMP258.fca.31.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 31
  store <2 x double>* %v3GMP258.fca.31.load, <2 x double>** %v3GMP258.fca.31.gep
  %v3GMP258.fca.32.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 32
  store <2 x double>* %v3GMP258.fca.32.load, <2 x double>** %v3GMP258.fca.32.gep
  %v3GMP258.fca.33.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 33
  store <2 x double>* %v3GMP258.fca.33.load, <2 x double>** %v3GMP258.fca.33.gep
  %v3GMP258.fca.34.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 34
  store <2 x double>* %v3GMP258.fca.34.load, <2 x double>** %v3GMP258.fca.34.gep
  %v3GMP258.fca.35.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 35
  store <2 x double>* %v3GMP258.fca.35.load, <2 x double>** %v3GMP258.fca.35.gep
  %v3GMP258.fca.36.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 36
  store <2 x double>* %v3GMP258.fca.36.load, <2 x double>** %v3GMP258.fca.36.gep
  %v3GMP258.fca.37.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 37
  store <2 x double>* %v3GMP258.fca.37.load, <2 x double>** %v3GMP258.fca.37.gep
  %v3GMP258.fca.38.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 38
  store <2 x double>* %v3GMP258.fca.38.load, <2 x double>** %v3GMP258.fca.38.gep
  %v3GMP258.fca.39.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 39
  store <2 x double>* %v3GMP258.fca.39.load, <2 x double>** %v3GMP258.fca.39.gep
  %v3GMP258.fca.40.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 40
  store <2 x double>* %v3GMP258.fca.40.load, <2 x double>** %v3GMP258.fca.40.gep
  %v3GMP258.fca.41.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 41
  store <2 x double>* %v3GMP258.fca.41.load, <2 x double>** %v3GMP258.fca.41.gep
  %v3GMP258.fca.42.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 42
  store <4 x double>* %v3GMP258.fca.42.load, <4 x double>** %v3GMP258.fca.42.gep
  %v3GMP258.fca.43.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 43
  store <4 x double>* %v3GMP258.fca.43.load, <4 x double>** %v3GMP258.fca.43.gep
  %v3GMP258.fca.44.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 44
  store <4 x double>* %v3GMP258.fca.44.load, <4 x double>** %v3GMP258.fca.44.gep
  %v3GMP258.fca.45.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 45
  store <4 x double>* %v3GMP258.fca.45.load, <4 x double>** %v3GMP258.fca.45.gep
  %v3GMP258.fca.46.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 46
  store <4 x double>* %v3GMP258.fca.46.load, <4 x double>** %v3GMP258.fca.46.gep
  %v3GMP258.fca.47.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 47
  store <4 x double>* %v3GMP258.fca.47.load, <4 x double>** %v3GMP258.fca.47.gep
  %v3GMP258.fca.48.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 48
  store <4 x double>* %v3GMP258.fca.48.load, <4 x double>** %v3GMP258.fca.48.gep
  %v3GMP258.fca.49.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 49
  store <4 x double>* %v3GMP258.fca.49.load, <4 x double>** %v3GMP258.fca.49.gep
  %v3GMP258.fca.50.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 50
  store <4 x double>* %v3GMP258.fca.50.load, <4 x double>** %v3GMP258.fca.50.gep
  %v3GMP258.fca.51.gep = getelementptr inbounds %gemPrm, %gemPrm* %58, i32 0, i32 51
  store <3 x double>* %v3GMP258.fca.51.load, <3 x double>** %v3GMP258.fca.51.gep
  %idx259 = load i64, i64* %idx
  store i64 %idx259, i64* %59
  %idx261 = load i64, i64* %idx
  %return262 = call i64 @"getcomp@I[II"(i64* %GEM4.fca.11.load, i64 %idx261)
  store i64 %return262, i64* %60
  %mem263 = load <2 x double>, <2 x double>* %mem
  store <2 x double> %mem263, <2 x double>* %61
  %idx265 = load i64, i64* %idx
  %return266 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM4.fca.38.load, i64 %idx265)
  store <2 x double> %return266, <2 x double>* %62
  %idx268 = load i64, i64* %idx
  %return269 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM4.fca.39.load, i64 %idx268)
  store <2 x double> %return269, <2 x double>* %63
  %idx271 = load i64, i64* %idx
  %return272 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM4.fca.40.load, i64 %idx271)
  store <2 x double> %return272, <2 x double>* %64
  %idx274 = load i64, i64* %idx
  %return275 = call double @"getcomp@F[FI"(double* %GEM4.fca.24.load, i64 %idx274)
  store double %return275, double* %65
  %FLAME276 = call <2 x double> @"FLAME@UZ6gemPrmM52N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PN8pc_DISC2[VIIUUUUF"(%gemPrm* %58, i64* %59, i64* %60, <2 x double>* %61, <2 x double>* %62, <2 x double>* %63, <2 x double>* %64, double* %65)
  %output277 = call <2 x double> @"add@UU"(<2 x double> %tmp257, <2 x double> %FLAME276)
  store <2 x double> %output277, <2 x double>* %tmp
  br label %end256

end256:                                           ; preds = %true255, %end228
  %idx279 = load i64, i64* %idx
  %return280 = call double @"getcomp@F[FI"(double* %GEM4.fca.25.load, i64 %idx279)
  %return281 = fcmp one double %return280, 0.000000e+00
  br i1 %return281, label %true283, label %end284

true283:                                          ; preds = %end256
  %tmp285 = load <2 x double>, <2 x double>* %tmp
  %v4GMP286.fca.0.load = load double*, double** %v4GMP111.fca.0.gep
  %v4GMP286.fca.0.insert = insertvalue %gemPrm undef, double* %v4GMP286.fca.0.load, 0
  %v4GMP286.fca.1.load = load double*, double** %v4GMP111.fca.1.gep
  %v4GMP286.fca.1.insert = insertvalue %gemPrm %v4GMP286.fca.0.insert, double* %v4GMP286.fca.1.load, 1
  %v4GMP286.fca.2.load = load double*, double** %v4GMP111.fca.2.gep
  %v4GMP286.fca.2.insert = insertvalue %gemPrm %v4GMP286.fca.1.insert, double* %v4GMP286.fca.2.load, 2
  %v4GMP286.fca.3.load = load double*, double** %v4GMP111.fca.3.gep
  %v4GMP286.fca.3.insert = insertvalue %gemPrm %v4GMP286.fca.2.insert, double* %v4GMP286.fca.3.load, 3
  %v4GMP286.fca.4.load = load double*, double** %v4GMP111.fca.4.gep
  %v4GMP286.fca.4.insert = insertvalue %gemPrm %v4GMP286.fca.3.insert, double* %v4GMP286.fca.4.load, 4
  %v4GMP286.fca.5.load = load double*, double** %v4GMP111.fca.5.gep
  %v4GMP286.fca.5.insert = insertvalue %gemPrm %v4GMP286.fca.4.insert, double* %v4GMP286.fca.5.load, 5
  %v4GMP286.fca.6.load = load <3 x double>*, <3 x double>** %v4GMP111.fca.6.gep
  %v4GMP286.fca.6.insert = insertvalue %gemPrm %v4GMP286.fca.5.insert, <3 x double>* %v4GMP286.fca.6.load, 6
  %v4GMP286.fca.7.load = load <3 x double>*, <3 x double>** %v4GMP111.fca.7.gep
  %v4GMP286.fca.7.insert = insertvalue %gemPrm %v4GMP286.fca.6.insert, <3 x double>* %v4GMP286.fca.7.load, 7
  %v4GMP286.fca.8.load = load <3 x double>*, <3 x double>** %v4GMP111.fca.8.gep
  %v4GMP286.fca.8.insert = insertvalue %gemPrm %v4GMP286.fca.7.insert, <3 x double>* %v4GMP286.fca.8.load, 8
  %v4GMP286.fca.9.load = load <3 x double>*, <3 x double>** %v4GMP111.fca.9.gep
  %v4GMP286.fca.9.insert = insertvalue %gemPrm %v4GMP286.fca.8.insert, <3 x double>* %v4GMP286.fca.9.load, 9
  %v4GMP286.fca.10.load = load <3 x double>*, <3 x double>** %v4GMP111.fca.10.gep
  %v4GMP286.fca.10.insert = insertvalue %gemPrm %v4GMP286.fca.9.insert, <3 x double>* %v4GMP286.fca.10.load, 10
  %v4GMP286.fca.11.load = load <3 x double>*, <3 x double>** %v4GMP111.fca.11.gep
  %v4GMP286.fca.11.insert = insertvalue %gemPrm %v4GMP286.fca.10.insert, <3 x double>* %v4GMP286.fca.11.load, 11
  %v4GMP286.fca.12.load = load <3 x double>*, <3 x double>** %v4GMP111.fca.12.gep
  %v4GMP286.fca.12.insert = insertvalue %gemPrm %v4GMP286.fca.11.insert, <3 x double>* %v4GMP286.fca.12.load, 12
  %v4GMP286.fca.13.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.13.gep
  %v4GMP286.fca.13.insert = insertvalue %gemPrm %v4GMP286.fca.12.insert, <2 x double>* %v4GMP286.fca.13.load, 13
  %v4GMP286.fca.14.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.14.gep
  %v4GMP286.fca.14.insert = insertvalue %gemPrm %v4GMP286.fca.13.insert, <2 x double>* %v4GMP286.fca.14.load, 14
  %v4GMP286.fca.15.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.15.gep
  %v4GMP286.fca.15.insert = insertvalue %gemPrm %v4GMP286.fca.14.insert, <2 x double>* %v4GMP286.fca.15.load, 15
  %v4GMP286.fca.16.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.16.gep
  %v4GMP286.fca.16.insert = insertvalue %gemPrm %v4GMP286.fca.15.insert, <2 x double>* %v4GMP286.fca.16.load, 16
  %v4GMP286.fca.17.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.17.gep
  %v4GMP286.fca.17.insert = insertvalue %gemPrm %v4GMP286.fca.16.insert, <2 x double>* %v4GMP286.fca.17.load, 17
  %v4GMP286.fca.18.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.18.gep
  %v4GMP286.fca.18.insert = insertvalue %gemPrm %v4GMP286.fca.17.insert, <2 x double>* %v4GMP286.fca.18.load, 18
  %v4GMP286.fca.19.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.19.gep
  %v4GMP286.fca.19.insert = insertvalue %gemPrm %v4GMP286.fca.18.insert, <2 x double>* %v4GMP286.fca.19.load, 19
  %v4GMP286.fca.20.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.20.gep
  %v4GMP286.fca.20.insert = insertvalue %gemPrm %v4GMP286.fca.19.insert, <2 x double>* %v4GMP286.fca.20.load, 20
  %v4GMP286.fca.21.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.21.gep
  %v4GMP286.fca.21.insert = insertvalue %gemPrm %v4GMP286.fca.20.insert, <2 x double>* %v4GMP286.fca.21.load, 21
  %v4GMP286.fca.22.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.22.gep
  %v4GMP286.fca.22.insert = insertvalue %gemPrm %v4GMP286.fca.21.insert, <2 x double>* %v4GMP286.fca.22.load, 22
  %v4GMP286.fca.23.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.23.gep
  %v4GMP286.fca.23.insert = insertvalue %gemPrm %v4GMP286.fca.22.insert, <2 x double>* %v4GMP286.fca.23.load, 23
  %v4GMP286.fca.24.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.24.gep
  %v4GMP286.fca.24.insert = insertvalue %gemPrm %v4GMP286.fca.23.insert, <2 x double>* %v4GMP286.fca.24.load, 24
  %v4GMP286.fca.25.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.25.gep
  %v4GMP286.fca.25.insert = insertvalue %gemPrm %v4GMP286.fca.24.insert, <2 x double>* %v4GMP286.fca.25.load, 25
  %v4GMP286.fca.26.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.26.gep
  %v4GMP286.fca.26.insert = insertvalue %gemPrm %v4GMP286.fca.25.insert, <2 x double>* %v4GMP286.fca.26.load, 26
  %v4GMP286.fca.27.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.27.gep
  %v4GMP286.fca.27.insert = insertvalue %gemPrm %v4GMP286.fca.26.insert, <2 x double>* %v4GMP286.fca.27.load, 27
  %v4GMP286.fca.28.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.28.gep
  %v4GMP286.fca.28.insert = insertvalue %gemPrm %v4GMP286.fca.27.insert, <2 x double>* %v4GMP286.fca.28.load, 28
  %v4GMP286.fca.29.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.29.gep
  %v4GMP286.fca.29.insert = insertvalue %gemPrm %v4GMP286.fca.28.insert, <2 x double>* %v4GMP286.fca.29.load, 29
  %v4GMP286.fca.30.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.30.gep
  %v4GMP286.fca.30.insert = insertvalue %gemPrm %v4GMP286.fca.29.insert, <2 x double>* %v4GMP286.fca.30.load, 30
  %v4GMP286.fca.31.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.31.gep
  %v4GMP286.fca.31.insert = insertvalue %gemPrm %v4GMP286.fca.30.insert, <2 x double>* %v4GMP286.fca.31.load, 31
  %v4GMP286.fca.32.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.32.gep
  %v4GMP286.fca.32.insert = insertvalue %gemPrm %v4GMP286.fca.31.insert, <2 x double>* %v4GMP286.fca.32.load, 32
  %v4GMP286.fca.33.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.33.gep
  %v4GMP286.fca.33.insert = insertvalue %gemPrm %v4GMP286.fca.32.insert, <2 x double>* %v4GMP286.fca.33.load, 33
  %v4GMP286.fca.34.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.34.gep
  %v4GMP286.fca.34.insert = insertvalue %gemPrm %v4GMP286.fca.33.insert, <2 x double>* %v4GMP286.fca.34.load, 34
  %v4GMP286.fca.35.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.35.gep
  %v4GMP286.fca.35.insert = insertvalue %gemPrm %v4GMP286.fca.34.insert, <2 x double>* %v4GMP286.fca.35.load, 35
  %v4GMP286.fca.36.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.36.gep
  %v4GMP286.fca.36.insert = insertvalue %gemPrm %v4GMP286.fca.35.insert, <2 x double>* %v4GMP286.fca.36.load, 36
  %v4GMP286.fca.37.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.37.gep
  %v4GMP286.fca.37.insert = insertvalue %gemPrm %v4GMP286.fca.36.insert, <2 x double>* %v4GMP286.fca.37.load, 37
  %v4GMP286.fca.38.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.38.gep
  %v4GMP286.fca.38.insert = insertvalue %gemPrm %v4GMP286.fca.37.insert, <2 x double>* %v4GMP286.fca.38.load, 38
  %v4GMP286.fca.39.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.39.gep
  %v4GMP286.fca.39.insert = insertvalue %gemPrm %v4GMP286.fca.38.insert, <2 x double>* %v4GMP286.fca.39.load, 39
  %v4GMP286.fca.40.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.40.gep
  %v4GMP286.fca.40.insert = insertvalue %gemPrm %v4GMP286.fca.39.insert, <2 x double>* %v4GMP286.fca.40.load, 40
  %v4GMP286.fca.41.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.41.gep
  %v4GMP286.fca.41.insert = insertvalue %gemPrm %v4GMP286.fca.40.insert, <2 x double>* %v4GMP286.fca.41.load, 41
  %v4GMP286.fca.42.load = load <4 x double>*, <4 x double>** %v4GMP111.fca.42.gep
  %v4GMP286.fca.42.insert = insertvalue %gemPrm %v4GMP286.fca.41.insert, <4 x double>* %v4GMP286.fca.42.load, 42
  %v4GMP286.fca.43.load = load <4 x double>*, <4 x double>** %v4GMP111.fca.43.gep
  %v4GMP286.fca.43.insert = insertvalue %gemPrm %v4GMP286.fca.42.insert, <4 x double>* %v4GMP286.fca.43.load, 43
  %v4GMP286.fca.44.load = load <4 x double>*, <4 x double>** %v4GMP111.fca.44.gep
  %v4GMP286.fca.44.insert = insertvalue %gemPrm %v4GMP286.fca.43.insert, <4 x double>* %v4GMP286.fca.44.load, 44
  %v4GMP286.fca.45.load = load <4 x double>*, <4 x double>** %v4GMP111.fca.45.gep
  %v4GMP286.fca.45.insert = insertvalue %gemPrm %v4GMP286.fca.44.insert, <4 x double>* %v4GMP286.fca.45.load, 45
  %v4GMP286.fca.46.load = load <4 x double>*, <4 x double>** %v4GMP111.fca.46.gep
  %v4GMP286.fca.46.insert = insertvalue %gemPrm %v4GMP286.fca.45.insert, <4 x double>* %v4GMP286.fca.46.load, 46
  %v4GMP286.fca.47.load = load <4 x double>*, <4 x double>** %v4GMP111.fca.47.gep
  %v4GMP286.fca.47.insert = insertvalue %gemPrm %v4GMP286.fca.46.insert, <4 x double>* %v4GMP286.fca.47.load, 47
  %v4GMP286.fca.48.load = load <4 x double>*, <4 x double>** %v4GMP111.fca.48.gep
  %v4GMP286.fca.48.insert = insertvalue %gemPrm %v4GMP286.fca.47.insert, <4 x double>* %v4GMP286.fca.48.load, 48
  %v4GMP286.fca.49.load = load <4 x double>*, <4 x double>** %v4GMP111.fca.49.gep
  %v4GMP286.fca.49.insert = insertvalue %gemPrm %v4GMP286.fca.48.insert, <4 x double>* %v4GMP286.fca.49.load, 49
  %v4GMP286.fca.50.load = load <4 x double>*, <4 x double>** %v4GMP111.fca.50.gep
  %v4GMP286.fca.50.insert = insertvalue %gemPrm %v4GMP286.fca.49.insert, <4 x double>* %v4GMP286.fca.50.load, 50
  %v4GMP286.fca.51.load = load <3 x double>*, <3 x double>** %v4GMP111.fca.51.gep
  %v4GMP286.fca.0.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 0
  store double* %v4GMP286.fca.0.load, double** %v4GMP286.fca.0.gep
  %v4GMP286.fca.1.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 1
  store double* %v4GMP286.fca.1.load, double** %v4GMP286.fca.1.gep
  %v4GMP286.fca.2.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 2
  store double* %v4GMP286.fca.2.load, double** %v4GMP286.fca.2.gep
  %v4GMP286.fca.3.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 3
  store double* %v4GMP286.fca.3.load, double** %v4GMP286.fca.3.gep
  %v4GMP286.fca.4.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 4
  store double* %v4GMP286.fca.4.load, double** %v4GMP286.fca.4.gep
  %v4GMP286.fca.5.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 5
  store double* %v4GMP286.fca.5.load, double** %v4GMP286.fca.5.gep
  %v4GMP286.fca.6.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 6
  store <3 x double>* %v4GMP286.fca.6.load, <3 x double>** %v4GMP286.fca.6.gep
  %v4GMP286.fca.7.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 7
  store <3 x double>* %v4GMP286.fca.7.load, <3 x double>** %v4GMP286.fca.7.gep
  %v4GMP286.fca.8.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 8
  store <3 x double>* %v4GMP286.fca.8.load, <3 x double>** %v4GMP286.fca.8.gep
  %v4GMP286.fca.9.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 9
  store <3 x double>* %v4GMP286.fca.9.load, <3 x double>** %v4GMP286.fca.9.gep
  %v4GMP286.fca.10.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 10
  store <3 x double>* %v4GMP286.fca.10.load, <3 x double>** %v4GMP286.fca.10.gep
  %v4GMP286.fca.11.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 11
  store <3 x double>* %v4GMP286.fca.11.load, <3 x double>** %v4GMP286.fca.11.gep
  %v4GMP286.fca.12.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 12
  store <3 x double>* %v4GMP286.fca.12.load, <3 x double>** %v4GMP286.fca.12.gep
  %v4GMP286.fca.13.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 13
  store <2 x double>* %v4GMP286.fca.13.load, <2 x double>** %v4GMP286.fca.13.gep
  %v4GMP286.fca.14.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 14
  store <2 x double>* %v4GMP286.fca.14.load, <2 x double>** %v4GMP286.fca.14.gep
  %v4GMP286.fca.15.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 15
  store <2 x double>* %v4GMP286.fca.15.load, <2 x double>** %v4GMP286.fca.15.gep
  %v4GMP286.fca.16.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 16
  store <2 x double>* %v4GMP286.fca.16.load, <2 x double>** %v4GMP286.fca.16.gep
  %v4GMP286.fca.17.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 17
  store <2 x double>* %v4GMP286.fca.17.load, <2 x double>** %v4GMP286.fca.17.gep
  %v4GMP286.fca.18.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 18
  store <2 x double>* %v4GMP286.fca.18.load, <2 x double>** %v4GMP286.fca.18.gep
  %v4GMP286.fca.19.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 19
  store <2 x double>* %v4GMP286.fca.19.load, <2 x double>** %v4GMP286.fca.19.gep
  %v4GMP286.fca.20.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 20
  store <2 x double>* %v4GMP286.fca.20.load, <2 x double>** %v4GMP286.fca.20.gep
  %v4GMP286.fca.21.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 21
  store <2 x double>* %v4GMP286.fca.21.load, <2 x double>** %v4GMP286.fca.21.gep
  %v4GMP286.fca.22.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 22
  store <2 x double>* %v4GMP286.fca.22.load, <2 x double>** %v4GMP286.fca.22.gep
  %v4GMP286.fca.23.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 23
  store <2 x double>* %v4GMP286.fca.23.load, <2 x double>** %v4GMP286.fca.23.gep
  %v4GMP286.fca.24.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 24
  store <2 x double>* %v4GMP286.fca.24.load, <2 x double>** %v4GMP286.fca.24.gep
  %v4GMP286.fca.25.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 25
  store <2 x double>* %v4GMP286.fca.25.load, <2 x double>** %v4GMP286.fca.25.gep
  %v4GMP286.fca.26.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 26
  store <2 x double>* %v4GMP286.fca.26.load, <2 x double>** %v4GMP286.fca.26.gep
  %v4GMP286.fca.27.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 27
  store <2 x double>* %v4GMP286.fca.27.load, <2 x double>** %v4GMP286.fca.27.gep
  %v4GMP286.fca.28.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 28
  store <2 x double>* %v4GMP286.fca.28.load, <2 x double>** %v4GMP286.fca.28.gep
  %v4GMP286.fca.29.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 29
  store <2 x double>* %v4GMP286.fca.29.load, <2 x double>** %v4GMP286.fca.29.gep
  %v4GMP286.fca.30.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 30
  store <2 x double>* %v4GMP286.fca.30.load, <2 x double>** %v4GMP286.fca.30.gep
  %v4GMP286.fca.31.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 31
  store <2 x double>* %v4GMP286.fca.31.load, <2 x double>** %v4GMP286.fca.31.gep
  %v4GMP286.fca.32.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 32
  store <2 x double>* %v4GMP286.fca.32.load, <2 x double>** %v4GMP286.fca.32.gep
  %v4GMP286.fca.33.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 33
  store <2 x double>* %v4GMP286.fca.33.load, <2 x double>** %v4GMP286.fca.33.gep
  %v4GMP286.fca.34.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 34
  store <2 x double>* %v4GMP286.fca.34.load, <2 x double>** %v4GMP286.fca.34.gep
  %v4GMP286.fca.35.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 35
  store <2 x double>* %v4GMP286.fca.35.load, <2 x double>** %v4GMP286.fca.35.gep
  %v4GMP286.fca.36.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 36
  store <2 x double>* %v4GMP286.fca.36.load, <2 x double>** %v4GMP286.fca.36.gep
  %v4GMP286.fca.37.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 37
  store <2 x double>* %v4GMP286.fca.37.load, <2 x double>** %v4GMP286.fca.37.gep
  %v4GMP286.fca.38.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 38
  store <2 x double>* %v4GMP286.fca.38.load, <2 x double>** %v4GMP286.fca.38.gep
  %v4GMP286.fca.39.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 39
  store <2 x double>* %v4GMP286.fca.39.load, <2 x double>** %v4GMP286.fca.39.gep
  %v4GMP286.fca.40.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 40
  store <2 x double>* %v4GMP286.fca.40.load, <2 x double>** %v4GMP286.fca.40.gep
  %v4GMP286.fca.41.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 41
  store <2 x double>* %v4GMP286.fca.41.load, <2 x double>** %v4GMP286.fca.41.gep
  %v4GMP286.fca.42.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 42
  store <4 x double>* %v4GMP286.fca.42.load, <4 x double>** %v4GMP286.fca.42.gep
  %v4GMP286.fca.43.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 43
  store <4 x double>* %v4GMP286.fca.43.load, <4 x double>** %v4GMP286.fca.43.gep
  %v4GMP286.fca.44.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 44
  store <4 x double>* %v4GMP286.fca.44.load, <4 x double>** %v4GMP286.fca.44.gep
  %v4GMP286.fca.45.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 45
  store <4 x double>* %v4GMP286.fca.45.load, <4 x double>** %v4GMP286.fca.45.gep
  %v4GMP286.fca.46.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 46
  store <4 x double>* %v4GMP286.fca.46.load, <4 x double>** %v4GMP286.fca.46.gep
  %v4GMP286.fca.47.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 47
  store <4 x double>* %v4GMP286.fca.47.load, <4 x double>** %v4GMP286.fca.47.gep
  %v4GMP286.fca.48.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 48
  store <4 x double>* %v4GMP286.fca.48.load, <4 x double>** %v4GMP286.fca.48.gep
  %v4GMP286.fca.49.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 49
  store <4 x double>* %v4GMP286.fca.49.load, <4 x double>** %v4GMP286.fca.49.gep
  %v4GMP286.fca.50.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 50
  store <4 x double>* %v4GMP286.fca.50.load, <4 x double>** %v4GMP286.fca.50.gep
  %v4GMP286.fca.51.gep = getelementptr inbounds %gemPrm, %gemPrm* %66, i32 0, i32 51
  store <3 x double>* %v4GMP286.fca.51.load, <3 x double>** %v4GMP286.fca.51.gep
  %idx287 = load i64, i64* %idx
  store i64 %idx287, i64* %67
  %idx289 = load i64, i64* %idx
  %return290 = call i64 @"getcomp@I[II"(i64* %GEM4.fca.12.load, i64 %idx289)
  store i64 %return290, i64* %68
  %mem291 = load <2 x double>, <2 x double>* %mem
  store <2 x double> %mem291, <2 x double>* %69
  %idx293 = load i64, i64* %idx
  %return294 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM4.fca.38.load, i64 %idx293)
  store <2 x double> %return294, <2 x double>* %70
  %idx296 = load i64, i64* %idx
  %return297 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM4.fca.39.load, i64 %idx296)
  store <2 x double> %return297, <2 x double>* %71
  %idx299 = load i64, i64* %idx
  %return300 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM4.fca.40.load, i64 %idx299)
  store <2 x double> %return300, <2 x double>* %72
  %idx302 = load i64, i64* %idx
  %return303 = call double @"getcomp@F[FI"(double* %GEM4.fca.25.load, i64 %idx302)
  store double %return303, double* %73
  %FLAME304 = call <2 x double> @"FLAME@UZ6gemPrmM52N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PN8pc_DISC2[VIIUUUUF"(%gemPrm* %66, i64* %67, i64* %68, <2 x double>* %69, <2 x double>* %70, <2 x double>* %71, <2 x double>* %72, double* %73)
  %output305 = call <2 x double> @"add@UU"(<2 x double> %tmp285, <2 x double> %FLAME304)
  store <2 x double> %output305, <2 x double>* %tmp
  br label %end284

end284:                                           ; preds = %true283, %end256
  %idx307 = load i64, i64* %idx
  %return308 = call double @"getcomp@F[FI"(double* %GEM4.fca.26.load, i64 %idx307)
  %return309 = fcmp ogt double %return308, 0.000000e+00
  br i1 %return309, label %true311, label %end312

true311:                                          ; preds = %end284
  %P1GMP313.fca.0.load = load double*, double** %P1GMP112.fca.0.gep
  %P1GMP313.fca.0.insert = insertvalue %gemPrm undef, double* %P1GMP313.fca.0.load, 0
  %P1GMP313.fca.1.load = load double*, double** %P1GMP112.fca.1.gep
  %P1GMP313.fca.1.insert = insertvalue %gemPrm %P1GMP313.fca.0.insert, double* %P1GMP313.fca.1.load, 1
  %P1GMP313.fca.2.load = load double*, double** %P1GMP112.fca.2.gep
  %P1GMP313.fca.2.insert = insertvalue %gemPrm %P1GMP313.fca.1.insert, double* %P1GMP313.fca.2.load, 2
  %P1GMP313.fca.3.load = load double*, double** %P1GMP112.fca.3.gep
  %P1GMP313.fca.3.insert = insertvalue %gemPrm %P1GMP313.fca.2.insert, double* %P1GMP313.fca.3.load, 3
  %P1GMP313.fca.4.load = load double*, double** %P1GMP112.fca.4.gep
  %P1GMP313.fca.4.insert = insertvalue %gemPrm %P1GMP313.fca.3.insert, double* %P1GMP313.fca.4.load, 4
  %P1GMP313.fca.5.load = load double*, double** %P1GMP112.fca.5.gep
  %P1GMP313.fca.5.insert = insertvalue %gemPrm %P1GMP313.fca.4.insert, double* %P1GMP313.fca.5.load, 5
  %P1GMP313.fca.6.load = load <3 x double>*, <3 x double>** %P1GMP112.fca.6.gep
  %P1GMP313.fca.6.insert = insertvalue %gemPrm %P1GMP313.fca.5.insert, <3 x double>* %P1GMP313.fca.6.load, 6
  %P1GMP313.fca.7.load = load <3 x double>*, <3 x double>** %P1GMP112.fca.7.gep
  %P1GMP313.fca.7.insert = insertvalue %gemPrm %P1GMP313.fca.6.insert, <3 x double>* %P1GMP313.fca.7.load, 7
  %P1GMP313.fca.8.load = load <3 x double>*, <3 x double>** %P1GMP112.fca.8.gep
  %P1GMP313.fca.8.insert = insertvalue %gemPrm %P1GMP313.fca.7.insert, <3 x double>* %P1GMP313.fca.8.load, 8
  %P1GMP313.fca.9.load = load <3 x double>*, <3 x double>** %P1GMP112.fca.9.gep
  %P1GMP313.fca.9.insert = insertvalue %gemPrm %P1GMP313.fca.8.insert, <3 x double>* %P1GMP313.fca.9.load, 9
  %P1GMP313.fca.10.load = load <3 x double>*, <3 x double>** %P1GMP112.fca.10.gep
  %P1GMP313.fca.10.insert = insertvalue %gemPrm %P1GMP313.fca.9.insert, <3 x double>* %P1GMP313.fca.10.load, 10
  %P1GMP313.fca.11.load = load <3 x double>*, <3 x double>** %P1GMP112.fca.11.gep
  %P1GMP313.fca.11.insert = insertvalue %gemPrm %P1GMP313.fca.10.insert, <3 x double>* %P1GMP313.fca.11.load, 11
  %P1GMP313.fca.12.load = load <3 x double>*, <3 x double>** %P1GMP112.fca.12.gep
  %P1GMP313.fca.12.insert = insertvalue %gemPrm %P1GMP313.fca.11.insert, <3 x double>* %P1GMP313.fca.12.load, 12
  %P1GMP313.fca.13.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.13.gep
  %P1GMP313.fca.13.insert = insertvalue %gemPrm %P1GMP313.fca.12.insert, <2 x double>* %P1GMP313.fca.13.load, 13
  %P1GMP313.fca.14.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.14.gep
  %P1GMP313.fca.14.insert = insertvalue %gemPrm %P1GMP313.fca.13.insert, <2 x double>* %P1GMP313.fca.14.load, 14
  %P1GMP313.fca.15.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.15.gep
  %P1GMP313.fca.15.insert = insertvalue %gemPrm %P1GMP313.fca.14.insert, <2 x double>* %P1GMP313.fca.15.load, 15
  %P1GMP313.fca.16.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.16.gep
  %P1GMP313.fca.16.insert = insertvalue %gemPrm %P1GMP313.fca.15.insert, <2 x double>* %P1GMP313.fca.16.load, 16
  %P1GMP313.fca.17.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.17.gep
  %P1GMP313.fca.17.insert = insertvalue %gemPrm %P1GMP313.fca.16.insert, <2 x double>* %P1GMP313.fca.17.load, 17
  %P1GMP313.fca.18.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.18.gep
  %P1GMP313.fca.18.insert = insertvalue %gemPrm %P1GMP313.fca.17.insert, <2 x double>* %P1GMP313.fca.18.load, 18
  %P1GMP313.fca.19.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.19.gep
  %P1GMP313.fca.19.insert = insertvalue %gemPrm %P1GMP313.fca.18.insert, <2 x double>* %P1GMP313.fca.19.load, 19
  %P1GMP313.fca.20.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.20.gep
  %P1GMP313.fca.20.insert = insertvalue %gemPrm %P1GMP313.fca.19.insert, <2 x double>* %P1GMP313.fca.20.load, 20
  %P1GMP313.fca.21.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.21.gep
  %P1GMP313.fca.21.insert = insertvalue %gemPrm %P1GMP313.fca.20.insert, <2 x double>* %P1GMP313.fca.21.load, 21
  %P1GMP313.fca.22.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.22.gep
  %P1GMP313.fca.22.insert = insertvalue %gemPrm %P1GMP313.fca.21.insert, <2 x double>* %P1GMP313.fca.22.load, 22
  %P1GMP313.fca.23.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.23.gep
  %P1GMP313.fca.23.insert = insertvalue %gemPrm %P1GMP313.fca.22.insert, <2 x double>* %P1GMP313.fca.23.load, 23
  %P1GMP313.fca.24.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.24.gep
  %P1GMP313.fca.24.insert = insertvalue %gemPrm %P1GMP313.fca.23.insert, <2 x double>* %P1GMP313.fca.24.load, 24
  %P1GMP313.fca.25.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.25.gep
  %P1GMP313.fca.25.insert = insertvalue %gemPrm %P1GMP313.fca.24.insert, <2 x double>* %P1GMP313.fca.25.load, 25
  %P1GMP313.fca.26.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.26.gep
  %P1GMP313.fca.26.insert = insertvalue %gemPrm %P1GMP313.fca.25.insert, <2 x double>* %P1GMP313.fca.26.load, 26
  %P1GMP313.fca.27.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.27.gep
  %P1GMP313.fca.27.insert = insertvalue %gemPrm %P1GMP313.fca.26.insert, <2 x double>* %P1GMP313.fca.27.load, 27
  %P1GMP313.fca.28.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.28.gep
  %P1GMP313.fca.28.insert = insertvalue %gemPrm %P1GMP313.fca.27.insert, <2 x double>* %P1GMP313.fca.28.load, 28
  %P1GMP313.fca.29.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.29.gep
  %P1GMP313.fca.29.insert = insertvalue %gemPrm %P1GMP313.fca.28.insert, <2 x double>* %P1GMP313.fca.29.load, 29
  %P1GMP313.fca.30.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.30.gep
  %P1GMP313.fca.30.insert = insertvalue %gemPrm %P1GMP313.fca.29.insert, <2 x double>* %P1GMP313.fca.30.load, 30
  %P1GMP313.fca.31.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.31.gep
  %P1GMP313.fca.31.insert = insertvalue %gemPrm %P1GMP313.fca.30.insert, <2 x double>* %P1GMP313.fca.31.load, 31
  %P1GMP313.fca.32.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.32.gep
  %P1GMP313.fca.32.insert = insertvalue %gemPrm %P1GMP313.fca.31.insert, <2 x double>* %P1GMP313.fca.32.load, 32
  %P1GMP313.fca.33.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.33.gep
  %P1GMP313.fca.33.insert = insertvalue %gemPrm %P1GMP313.fca.32.insert, <2 x double>* %P1GMP313.fca.33.load, 33
  %P1GMP313.fca.34.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.34.gep
  %P1GMP313.fca.34.insert = insertvalue %gemPrm %P1GMP313.fca.33.insert, <2 x double>* %P1GMP313.fca.34.load, 34
  %P1GMP313.fca.35.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.35.gep
  %P1GMP313.fca.35.insert = insertvalue %gemPrm %P1GMP313.fca.34.insert, <2 x double>* %P1GMP313.fca.35.load, 35
  %P1GMP313.fca.36.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.36.gep
  %P1GMP313.fca.36.insert = insertvalue %gemPrm %P1GMP313.fca.35.insert, <2 x double>* %P1GMP313.fca.36.load, 36
  %P1GMP313.fca.37.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.37.gep
  %P1GMP313.fca.37.insert = insertvalue %gemPrm %P1GMP313.fca.36.insert, <2 x double>* %P1GMP313.fca.37.load, 37
  %P1GMP313.fca.38.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.38.gep
  %P1GMP313.fca.38.insert = insertvalue %gemPrm %P1GMP313.fca.37.insert, <2 x double>* %P1GMP313.fca.38.load, 38
  %P1GMP313.fca.39.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.39.gep
  %P1GMP313.fca.39.insert = insertvalue %gemPrm %P1GMP313.fca.38.insert, <2 x double>* %P1GMP313.fca.39.load, 39
  %P1GMP313.fca.40.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.40.gep
  %P1GMP313.fca.40.insert = insertvalue %gemPrm %P1GMP313.fca.39.insert, <2 x double>* %P1GMP313.fca.40.load, 40
  %P1GMP313.fca.41.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.41.gep
  %P1GMP313.fca.41.insert = insertvalue %gemPrm %P1GMP313.fca.40.insert, <2 x double>* %P1GMP313.fca.41.load, 41
  %P1GMP313.fca.42.load = load <4 x double>*, <4 x double>** %P1GMP112.fca.42.gep
  %P1GMP313.fca.42.insert = insertvalue %gemPrm %P1GMP313.fca.41.insert, <4 x double>* %P1GMP313.fca.42.load, 42
  %P1GMP313.fca.43.load = load <4 x double>*, <4 x double>** %P1GMP112.fca.43.gep
  %P1GMP313.fca.43.insert = insertvalue %gemPrm %P1GMP313.fca.42.insert, <4 x double>* %P1GMP313.fca.43.load, 43
  %P1GMP313.fca.44.load = load <4 x double>*, <4 x double>** %P1GMP112.fca.44.gep
  %P1GMP313.fca.44.insert = insertvalue %gemPrm %P1GMP313.fca.43.insert, <4 x double>* %P1GMP313.fca.44.load, 44
  %P1GMP313.fca.45.load = load <4 x double>*, <4 x double>** %P1GMP112.fca.45.gep
  %P1GMP313.fca.45.insert = insertvalue %gemPrm %P1GMP313.fca.44.insert, <4 x double>* %P1GMP313.fca.45.load, 45
  %P1GMP313.fca.46.load = load <4 x double>*, <4 x double>** %P1GMP112.fca.46.gep
  %P1GMP313.fca.46.insert = insertvalue %gemPrm %P1GMP313.fca.45.insert, <4 x double>* %P1GMP313.fca.46.load, 46
  %P1GMP313.fca.47.load = load <4 x double>*, <4 x double>** %P1GMP112.fca.47.gep
  %P1GMP313.fca.47.insert = insertvalue %gemPrm %P1GMP313.fca.46.insert, <4 x double>* %P1GMP313.fca.47.load, 47
  %P1GMP313.fca.48.load = load <4 x double>*, <4 x double>** %P1GMP112.fca.48.gep
  %P1GMP313.fca.48.insert = insertvalue %gemPrm %P1GMP313.fca.47.insert, <4 x double>* %P1GMP313.fca.48.load, 48
  %P1GMP313.fca.49.load = load <4 x double>*, <4 x double>** %P1GMP112.fca.49.gep
  %P1GMP313.fca.49.insert = insertvalue %gemPrm %P1GMP313.fca.48.insert, <4 x double>* %P1GMP313.fca.49.load, 49
  %P1GMP313.fca.50.load = load <4 x double>*, <4 x double>** %P1GMP112.fca.50.gep
  %P1GMP313.fca.50.insert = insertvalue %gemPrm %P1GMP313.fca.49.insert, <4 x double>* %P1GMP313.fca.50.load, 50
  %P1GMP313.fca.51.load = load <3 x double>*, <3 x double>** %P1GMP112.fca.51.gep
  %P1GMP313.fca.0.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 0
  store double* %P1GMP313.fca.0.load, double** %P1GMP313.fca.0.gep
  %P1GMP313.fca.1.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 1
  store double* %P1GMP313.fca.1.load, double** %P1GMP313.fca.1.gep
  %P1GMP313.fca.2.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 2
  store double* %P1GMP313.fca.2.load, double** %P1GMP313.fca.2.gep
  %P1GMP313.fca.3.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 3
  store double* %P1GMP313.fca.3.load, double** %P1GMP313.fca.3.gep
  %P1GMP313.fca.4.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 4
  store double* %P1GMP313.fca.4.load, double** %P1GMP313.fca.4.gep
  %P1GMP313.fca.5.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 5
  store double* %P1GMP313.fca.5.load, double** %P1GMP313.fca.5.gep
  %P1GMP313.fca.6.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 6
  store <3 x double>* %P1GMP313.fca.6.load, <3 x double>** %P1GMP313.fca.6.gep
  %P1GMP313.fca.7.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 7
  store <3 x double>* %P1GMP313.fca.7.load, <3 x double>** %P1GMP313.fca.7.gep
  %P1GMP313.fca.8.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 8
  store <3 x double>* %P1GMP313.fca.8.load, <3 x double>** %P1GMP313.fca.8.gep
  %P1GMP313.fca.9.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 9
  store <3 x double>* %P1GMP313.fca.9.load, <3 x double>** %P1GMP313.fca.9.gep
  %P1GMP313.fca.10.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 10
  store <3 x double>* %P1GMP313.fca.10.load, <3 x double>** %P1GMP313.fca.10.gep
  %P1GMP313.fca.11.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 11
  store <3 x double>* %P1GMP313.fca.11.load, <3 x double>** %P1GMP313.fca.11.gep
  %P1GMP313.fca.12.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 12
  store <3 x double>* %P1GMP313.fca.12.load, <3 x double>** %P1GMP313.fca.12.gep
  %P1GMP313.fca.13.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 13
  store <2 x double>* %P1GMP313.fca.13.load, <2 x double>** %P1GMP313.fca.13.gep
  %P1GMP313.fca.14.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 14
  store <2 x double>* %P1GMP313.fca.14.load, <2 x double>** %P1GMP313.fca.14.gep
  %P1GMP313.fca.15.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 15
  store <2 x double>* %P1GMP313.fca.15.load, <2 x double>** %P1GMP313.fca.15.gep
  %P1GMP313.fca.16.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 16
  store <2 x double>* %P1GMP313.fca.16.load, <2 x double>** %P1GMP313.fca.16.gep
  %P1GMP313.fca.17.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 17
  store <2 x double>* %P1GMP313.fca.17.load, <2 x double>** %P1GMP313.fca.17.gep
  %P1GMP313.fca.18.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 18
  store <2 x double>* %P1GMP313.fca.18.load, <2 x double>** %P1GMP313.fca.18.gep
  %P1GMP313.fca.19.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 19
  store <2 x double>* %P1GMP313.fca.19.load, <2 x double>** %P1GMP313.fca.19.gep
  %P1GMP313.fca.20.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 20
  store <2 x double>* %P1GMP313.fca.20.load, <2 x double>** %P1GMP313.fca.20.gep
  %P1GMP313.fca.21.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 21
  store <2 x double>* %P1GMP313.fca.21.load, <2 x double>** %P1GMP313.fca.21.gep
  %P1GMP313.fca.22.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 22
  store <2 x double>* %P1GMP313.fca.22.load, <2 x double>** %P1GMP313.fca.22.gep
  %P1GMP313.fca.23.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 23
  store <2 x double>* %P1GMP313.fca.23.load, <2 x double>** %P1GMP313.fca.23.gep
  %P1GMP313.fca.24.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 24
  store <2 x double>* %P1GMP313.fca.24.load, <2 x double>** %P1GMP313.fca.24.gep
  %P1GMP313.fca.25.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 25
  store <2 x double>* %P1GMP313.fca.25.load, <2 x double>** %P1GMP313.fca.25.gep
  %P1GMP313.fca.26.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 26
  store <2 x double>* %P1GMP313.fca.26.load, <2 x double>** %P1GMP313.fca.26.gep
  %P1GMP313.fca.27.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 27
  store <2 x double>* %P1GMP313.fca.27.load, <2 x double>** %P1GMP313.fca.27.gep
  %P1GMP313.fca.28.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 28
  store <2 x double>* %P1GMP313.fca.28.load, <2 x double>** %P1GMP313.fca.28.gep
  %P1GMP313.fca.29.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 29
  store <2 x double>* %P1GMP313.fca.29.load, <2 x double>** %P1GMP313.fca.29.gep
  %P1GMP313.fca.30.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 30
  store <2 x double>* %P1GMP313.fca.30.load, <2 x double>** %P1GMP313.fca.30.gep
  %P1GMP313.fca.31.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 31
  store <2 x double>* %P1GMP313.fca.31.load, <2 x double>** %P1GMP313.fca.31.gep
  %P1GMP313.fca.32.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 32
  store <2 x double>* %P1GMP313.fca.32.load, <2 x double>** %P1GMP313.fca.32.gep
  %P1GMP313.fca.33.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 33
  store <2 x double>* %P1GMP313.fca.33.load, <2 x double>** %P1GMP313.fca.33.gep
  %P1GMP313.fca.34.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 34
  store <2 x double>* %P1GMP313.fca.34.load, <2 x double>** %P1GMP313.fca.34.gep
  %P1GMP313.fca.35.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 35
  store <2 x double>* %P1GMP313.fca.35.load, <2 x double>** %P1GMP313.fca.35.gep
  %P1GMP313.fca.36.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 36
  store <2 x double>* %P1GMP313.fca.36.load, <2 x double>** %P1GMP313.fca.36.gep
  %P1GMP313.fca.37.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 37
  store <2 x double>* %P1GMP313.fca.37.load, <2 x double>** %P1GMP313.fca.37.gep
  %P1GMP313.fca.38.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 38
  store <2 x double>* %P1GMP313.fca.38.load, <2 x double>** %P1GMP313.fca.38.gep
  %P1GMP313.fca.39.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 39
  store <2 x double>* %P1GMP313.fca.39.load, <2 x double>** %P1GMP313.fca.39.gep
  %P1GMP313.fca.40.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 40
  store <2 x double>* %P1GMP313.fca.40.load, <2 x double>** %P1GMP313.fca.40.gep
  %P1GMP313.fca.41.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 41
  store <2 x double>* %P1GMP313.fca.41.load, <2 x double>** %P1GMP313.fca.41.gep
  %P1GMP313.fca.42.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 42
  store <4 x double>* %P1GMP313.fca.42.load, <4 x double>** %P1GMP313.fca.42.gep
  %P1GMP313.fca.43.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 43
  store <4 x double>* %P1GMP313.fca.43.load, <4 x double>** %P1GMP313.fca.43.gep
  %P1GMP313.fca.44.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 44
  store <4 x double>* %P1GMP313.fca.44.load, <4 x double>** %P1GMP313.fca.44.gep
  %P1GMP313.fca.45.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 45
  store <4 x double>* %P1GMP313.fca.45.load, <4 x double>** %P1GMP313.fca.45.gep
  %P1GMP313.fca.46.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 46
  store <4 x double>* %P1GMP313.fca.46.load, <4 x double>** %P1GMP313.fca.46.gep
  %P1GMP313.fca.47.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 47
  store <4 x double>* %P1GMP313.fca.47.load, <4 x double>** %P1GMP313.fca.47.gep
  %P1GMP313.fca.48.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 48
  store <4 x double>* %P1GMP313.fca.48.load, <4 x double>** %P1GMP313.fca.48.gep
  %P1GMP313.fca.49.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 49
  store <4 x double>* %P1GMP313.fca.49.load, <4 x double>** %P1GMP313.fca.49.gep
  %P1GMP313.fca.50.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 50
  store <4 x double>* %P1GMP313.fca.50.load, <4 x double>** %P1GMP313.fca.50.gep
  %P1GMP313.fca.51.gep = getelementptr inbounds %gemPrm, %gemPrm* %74, i32 0, i32 51
  store <3 x double>* %P1GMP313.fca.51.load, <3 x double>** %P1GMP313.fca.51.gep
  %idx314 = load i64, i64* %idx
  store i64 %idx314, i64* %75
  %idx316 = load i64, i64* %idx
  %return317 = call i64 @"getcomp@I[II"(i64* %GEM4.fca.13.load, i64 %idx316)
  store i64 %return317, i64* %76
  %tmp318 = load <2 x double>, <2 x double>* %tmp
  store <2 x double> %tmp318, <2 x double>* %77
  store <2 x double> <double 1.000000e+00, double 0.000000e+00>, <2 x double>* %78
  store <2 x double> <double 0.000000e+00, double 1.000000e+00>, <2 x double>* %79
  store <2 x double> zeroinitializer, <2 x double>* %80
  %idx320 = load i64, i64* %idx
  %return321 = call double @"getcomp@F[FI"(double* %GEM4.fca.26.load, i64 %idx320)
  store double %return321, double* %81
  %FLAME322 = call <2 x double> @"FLAME@UZ6gemPrmM52N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PN8pc_DISC2[VIIUUUUF"(%gemPrm* %74, i64* %75, i64* %76, <2 x double>* %77, <2 x double>* %78, <2 x double>* %79, <2 x double>* %80, double* %81)
  store <2 x double> %FLAME322, <2 x double>* %tmp
  br label %end312

end312:                                           ; preds = %true311, %end284
  %idx324 = load i64, i64* %idx
  %return325 = call i64 @"getcomp@I[II"(i64* %GEM4.fca.16.load, i64 %idx324)
  %130 = icmp ne i64 %return325, 0
  br i1 %130, label %true326, label %end327

true326:                                          ; preds = %end312
  %return330 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM4.fca.41.load, i64 %idx324)
  store <2 x double> %return330, <2 x double>* %82
  %idx332 = load i64, i64* %idx
  %return333 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM4.fca.42.load, i64 %idx332)
  store <2 x double> %return333, <2 x double>* %83
  %idx335 = load i64, i64* %idx
  %return336 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM4.fca.43.load, i64 %idx335)
  store <2 x double> %return336, <2 x double>* %84
  call void @"affine@UUUU"(<2 x double>* %tmp, <2 x double>* %82, <2 x double>* %83, <2 x double>* %84)
  br label %end327

end327:                                           ; preds = %true326, %end312
  %131 = icmp ne i64 %GEM4.fca.0.load, 0
  br i1 %131, label %true338, label %end339

true338:                                          ; preds = %end327
  %tmp340 = load <2 x double>, <2 x double>* %tmp
  %output342 = call <2 x double> @"mul@U2"(<2 x double> %tmp340, <4 x double> %GEM4.fca.50.load)
  store <2 x double> %output342, <2 x double>* %tmp
  br label %end339

end339:                                           ; preds = %true338, %end327
  %idx344 = load i64, i64* %idx
  %return345 = call double @"getcomp@F[FI"(double* %GEM4.fca.30.load, i64 %idx344)
  %return348 = call double @"getcomp@F[FI"(double* %GEM4.fca.31.load, i64 %idx344)
  %output350 = fmul double %return348, %prv_clr.0
  %output351 = fadd double %return345, %output350
  %tmp352 = load <2 x double>, <2 x double>* %tmp
  store <2 x double> %tmp352, <2 x double>* %mem
  %output354 = add i64 %i.0, 1
  br label %cond

true356:                                          ; preds = %end144
  %cast358 = call <2 x double> @"set@UI"(i64 0)
  store <2 x double> %cast358, <2 x double>* %tmp
  %return360 = fcmp one double %GEM4.fca.33.load, 0.000000e+00
  br i1 %return360, label %true362, label %end363

end357:                                           ; preds = %end420, %end144
  %idx426 = load i64, i64* %idx
  %return427 = call double @"getcomp@F[FI"(double* %GEM4.fca.32.load, i64 %idx426)
  store i64 %GEM4.fca.3.load, i64* %85
  %mem429 = load <2 x double>, <2 x double>* %mem
  store <2 x double> %mem429, <2 x double>* %86
  store double %return427, double* %87
  %chkPT = call i64 @"chkPT@IIUF"(i64* %85, <2 x double>* %86, double* %87)
  %132 = icmp ne i64 %chkPT, 0
  br i1 %132, label %true431, label %false432

true362:                                          ; preds = %true356
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @166, i64 0, i64 0), i8** %88
  store i64 %GEM4.fca.17.load, i64* %89
  %mem366 = load <2 x double>, <2 x double>* %mem
  store <2 x double> %mem366, <2 x double>* %90
  store <2 x double> %GEM4.fca.44.load, <2 x double>* %91
  store <2 x double> %GEM4.fca.45.load, <2 x double>* %92
  store <2 x double> %GEM4.fca.46.load, <2 x double>* %93
  store double %GEM4.fca.33.load, double* %94
  %FLAMEFF = call <2 x double> @"FLAMEFF@USIUUUUF"(i8** %88, i64* %89, <2 x double>* %90, <2 x double>* %91, <2 x double>* %92, <2 x double>* %93, double* %94)
  %output371 = call <2 x double> @"add@UU"(<2 x double> %cast358, <2 x double> %FLAMEFF)
  store <2 x double> %output371, <2 x double>* %tmp
  br label %end363

end363:                                           ; preds = %true362, %true356
  %return373 = fcmp one double %GEM4.fca.34.load, 0.000000e+00
  br i1 %return373, label %true375, label %end376

true375:                                          ; preds = %end363
  %tmp377 = load <2 x double>, <2 x double>* %tmp
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @166, i64 0, i64 0), i8** %95
  store i64 %GEM4.fca.18.load, i64* %96
  %mem379 = load <2 x double>, <2 x double>* %mem
  store <2 x double> %mem379, <2 x double>* %97
  store <2 x double> %GEM4.fca.44.load, <2 x double>* %98
  store <2 x double> %GEM4.fca.45.load, <2 x double>* %99
  store <2 x double> %GEM4.fca.46.load, <2 x double>* %100
  store double %GEM4.fca.34.load, double* %101
  %FLAMEFF384 = call <2 x double> @"FLAMEFF@USIUUUUF"(i8** %95, i64* %96, <2 x double>* %97, <2 x double>* %98, <2 x double>* %99, <2 x double>* %100, double* %101)
  %output385 = call <2 x double> @"add@UU"(<2 x double> %tmp377, <2 x double> %FLAMEFF384)
  store <2 x double> %output385, <2 x double>* %tmp
  br label %end376

end376:                                           ; preds = %true375, %end363
  %return387 = fcmp one double %GEM4.fca.35.load, 0.000000e+00
  br i1 %return387, label %true389, label %end390

true389:                                          ; preds = %end376
  %tmp391 = load <2 x double>, <2 x double>* %tmp
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @166, i64 0, i64 0), i8** %102
  store i64 %GEM4.fca.19.load, i64* %103
  %mem393 = load <2 x double>, <2 x double>* %mem
  store <2 x double> %mem393, <2 x double>* %104
  store <2 x double> %GEM4.fca.44.load, <2 x double>* %105
  store <2 x double> %GEM4.fca.45.load, <2 x double>* %106
  store <2 x double> %GEM4.fca.46.load, <2 x double>* %107
  store double %GEM4.fca.35.load, double* %108
  %FLAMEFF398 = call <2 x double> @"FLAMEFF@USIUUUUF"(i8** %102, i64* %103, <2 x double>* %104, <2 x double>* %105, <2 x double>* %106, <2 x double>* %107, double* %108)
  %output399 = call <2 x double> @"add@UU"(<2 x double> %tmp391, <2 x double> %FLAMEFF398)
  store <2 x double> %output399, <2 x double>* %tmp
  br label %end390

end390:                                           ; preds = %true389, %end376
  %return401 = fcmp ogt double %GEM4.fca.36.load, 0.000000e+00
  br i1 %return401, label %true403, label %end404

true403:                                          ; preds = %end390
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @167, i64 0, i64 0), i8** %109
  store i64 %GEM4.fca.20.load, i64* %110
  %tmp406 = load <2 x double>, <2 x double>* %tmp
  store <2 x double> %tmp406, <2 x double>* %111
  store <2 x double> <double 1.000000e+00, double 0.000000e+00>, <2 x double>* %112
  store <2 x double> <double 0.000000e+00, double 1.000000e+00>, <2 x double>* %113
  store <2 x double> zeroinitializer, <2 x double>* %114
  store double %GEM4.fca.36.load, double* %115
  %FLAMEFF408 = call <2 x double> @"FLAMEFF@USIUUUUF"(i8** %109, i64* %110, <2 x double>* %111, <2 x double>* %112, <2 x double>* %113, <2 x double>* %114, double* %115)
  store <2 x double> %FLAMEFF408, <2 x double>* %tmp
  br label %end404

end404:                                           ; preds = %true403, %end390
  %return410 = fcmp ogt double %GEM4.fca.37.load, 0.000000e+00
  br i1 %return410, label %true412, label %end413

true412:                                          ; preds = %end404
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @167, i64 0, i64 0), i8** %116
  store i64 %GEM4.fca.21.load, i64* %117
  %tmp415 = load <2 x double>, <2 x double>* %tmp
  store <2 x double> %tmp415, <2 x double>* %118
  store <2 x double> <double 1.000000e+00, double 0.000000e+00>, <2 x double>* %119
  store <2 x double> <double 0.000000e+00, double 1.000000e+00>, <2 x double>* %120
  store <2 x double> zeroinitializer, <2 x double>* %121
  store double %GEM4.fca.37.load, double* %122
  %FLAMEFF417 = call <2 x double> @"FLAMEFF@USIUUUUF"(i8** %116, i64* %117, <2 x double>* %118, <2 x double>* %119, <2 x double>* %120, <2 x double>* %121, double* %122)
  store <2 x double> %FLAMEFF417, <2 x double>* %tmp
  br label %end413

end413:                                           ; preds = %true412, %end404
  %133 = icmp ne i64 %GEM4.fca.2.load, 0
  br i1 %133, label %true419, label %end420

true419:                                          ; preds = %end413
  store <2 x double> %GEM4.fca.47.load, <2 x double>* %123
  store <2 x double> %GEM4.fca.48.load, <2 x double>* %124
  store <2 x double> %GEM4.fca.49.load, <2 x double>* %125
  call void @"affine@UUUU"(<2 x double>* %tmp, <2 x double>* %123, <2 x double>* %124, <2 x double>* %125)
  br label %end420

end420:                                           ; preds = %true419, %end413
  %tmp424 = load <2 x double>, <2 x double>* %tmp
  store <2 x double> %tmp424, <2 x double>* %mem
  br label %end357

true431:                                          ; preds = %end357
  %_bound_ptnum434 = load i64, i64* %_bound_ptnum
  %return435 = call i64 @"removepoint@III"(i64 0, i64 %_bound_ptnum434)
  br label %end433

false432:                                         ; preds = %end357
  %output438 = fmul double 1.000000e-03, %return427
  %134 = icmp ne i64 %GEM4.fca.4.load, 0
  br i1 %134, label %true440, label %end441

end433:                                           ; preds = %end445, %true431
  ret void

true440:                                          ; preds = %false432
  store i64 %GEM4.fca.6.load, i64* %126
  call void @"V_SYM@UI"(<2 x double>* %mem, i64* %126)
  br label %end441

end441:                                           ; preds = %true440, %false432
  %135 = icmp ne i64 %GEM4.fca.7.load, 0
  br i1 %135, label %true444, label %end445

true444:                                          ; preds = %end441
  %output448 = fmul double %output438, %GEM4.fca.51.load
  %_bound_ptnum449 = load i64, i64* %_bound_ptnum
  %return451 = call i64 @"setpointattrib@IISIFS"(i64 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @168, i64 0, i64 0), i64 %_bound_ptnum449, double %GEM4.fca.51.load, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @169, i64 0, i64 0))
  br label %end445

end445:                                           ; preds = %true444, %end441
  %pscl.0 = phi double [ %output448, %true444 ], [ %output438, %end441 ]
  %mem452 = load <2 x double>, <2 x double>* %mem
  %cast453 = call <3 x double> @"set@VU"(<2 x double> %mem452)
  store <3 x double> %cast453, <3 x double>* %_bound_P
  store double %clr.0, double* %_bound_clr
  store double %pscl.0, double* %_bound_pscale
  store double %return427, double* %_bound_Alpha
  br label %end433
}

; Function Attrs: nounwind readnone
declare <2 x double> @"set@UI"(i64) #1

; Function Attrs: nounwind readnone
declare <2 x double> @"add@UU"(<2 x double>, <2 x double>) #1

; Function Attrs: nounwind
declare i64 @"removepoint@III"(i64, i64) #2

; Function Attrs: nounwind
declare i64 @"setpointattrib@IISIFS"(i64, i8*, i64, double, i8*) #2

; Function Attrs: nounwind readnone
declare <3 x double> @"set@VU"(<2 x double>) #1

; Function Attrs: nounwind
define void @FLAM3(i8** %sIDX, i64 %ptnum, i64 %XS, double* %IW, double* %XST, double %pscale, double %clr, double %Alpha, <3 x double> %P) #2 {
__llvm_entry:
  %"<pscale>" = alloca double
  %"<clr>" = alloca double
  %"<Alpha>" = alloca double
  %"<P>" = alloca <3 x double>
  %0 = alloca i8**
  %1 = alloca i64
  %2 = alloca i64
  %3 = alloca double*
  %4 = alloca double*
  store double %pscale, double* %"<pscale>"
  store double %clr, double* %"<clr>"
  store double %Alpha, double* %"<Alpha>"
  store <3 x double> %P, <3 x double>* %"<P>"
  store i8** %sIDX, i8*** %0
  store i64 %ptnum, i64* %1
  store i64 %XS, i64* %2
  store double* %IW, double** %3
  store double* %XST, double** %4
  call void @"_FLAM3@[SII[F[FFFFV"(i8*** %0, i64* %1, i64* %2, double** %3, double** %4, double* %"<pscale>", double* %"<clr>", double* %"<Alpha>", <3 x double>* %"<P>")
  %gvalue = call i64 @"_export@ISI"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @170, i64 0, i64 0), i64 %ptnum) #4
  %evalue6 = load double, double* %"<pscale>"
  %gvalue7 = call double @"_export@FSF"(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @171, i64 0, i64 0), double %evalue6) #4
  %evalue8 = load double, double* %"<clr>"
  %gvalue9 = call double @"_export@FSF"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @172, i64 0, i64 0), double %evalue8) #4
  %evalue10 = load double, double* %"<Alpha>"
  %gvalue11 = call double @"_export@FSF"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @173, i64 0, i64 0), double %evalue10) #4
  %evalue12 = load <3 x double>, <3 x double>* %"<P>"
  %gvalue13 = call <3 x double> @"_export@VSV"(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @174, i64 0, i64 0), <3 x double> %evalue12) #4
  store i64 %gvalue, i64* @ptnum
  store double %gvalue7, double* @pscale
  store double %gvalue9, double* @clr
  store double %gvalue11, double* @Alpha
  store <3 x double> %gvalue13, <3 x double>* @P
  ret void
}

declare i64 @"_export@ISI"(i8*, i64)

declare double @"_export@FSF"(i8*, double)

declare <3 x double> @"_export@VSV"(i8*, <3 x double>)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @FLAM3(i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @165, i64 0, i64 0), i64 0, i64 0, double* getelementptr inbounds ([0 x double], [0 x double]* @57, i64 0, i64 0), double* getelementptr inbounds ([0 x double], [0 x double]* @57, i64 0, i64 0), double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, <3 x double> zeroinitializer)
  ret void
}

attributes #0 = { alwaysinline nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind }
attributes #3 = { alwaysinline }
attributes #4 = { nounwind readonly }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"19.5.435"}
!2 = !{!"64"}
!3 = !{!""}

;_code_end
