;_name	FLAM3
; ModuleID = 'FLAM3'
source_filename = "FLAM3"

%gem = type { i64, i64, i64*, i64*, i64*, i64*, i64*, i64*, i64*, i64*, i64, i64, i64, i64, i64, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double, double, double, double, double, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>, <2 x double>, <2 x double>, <2 x double>, <2 x double>, <2 x double>, <4 x double> }
%gemPrm = type { double*, double*, double*, double*, double*, double*, <3 x double>*, <3 x double>*, <3 x double>*, <3 x double>*, <3 x double>*, <3 x double>*, <3 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <4 x double>*, <4 x double>*, <4 x double>*, <4 x double>*, <4 x double>*, <4 x double>*, <4 x double>*, <4 x double>*, <4 x double>*, <3 x double>* }

@0 = private constant [8 x i8] c"twister\00"
@1 = private constant [8 x i8] c"../clr_\00"
@2 = private constant [13 x i8] c"../clrspeed_\00"
@3 = private constant [10 x i8] c"../alpha_\00"
@4 = private constant [18 x i8] c"../preblurweight_\00"
@5 = private constant [15 x i8] c"../pre1weight_\00"
@6 = private constant [13 x i8] c"../pre1type_\00"
@7 = private constant [15 x i8] c"../pre2weight_\00"
@8 = private constant [13 x i8] c"../pre2type_\00"
@9 = private constant [13 x i8] c"../v1weight_\00"
@10 = private constant [11 x i8] c"../v1type_\00"
@11 = private constant [13 x i8] c"../v2weight_\00"
@12 = private constant [11 x i8] c"../v2type_\00"
@13 = private constant [13 x i8] c"../v3weight_\00"
@14 = private constant [11 x i8] c"../v3type_\00"
@15 = private constant [13 x i8] c"../v4weight_\00"
@16 = private constant [11 x i8] c"../v4type_\00"
@17 = private constant [13 x i8] c"../p1weight_\00"
@18 = private constant [11 x i8] c"../p1type_\00"
@19 = private constant [6 x i8] c"../x_\00"
@20 = private constant [6 x i8] c"../y_\00"
@21 = private constant [8 x i8] c"../ang_\00"
@22 = private constant [6 x i8] c"../o_\00"
@23 = private constant [11 x i8] c"../dopost_\00"
@24 = private constant [7 x i8] c"../px_\00"
@25 = private constant [7 x i8] c"../py_\00"
@26 = private constant [9 x i8] c"../pang_\00"
@27 = private constant [7 x i8] c"../po_\00"
@28 = private constant [8 x i8] c"../tmrt\00"
@29 = private constant [14 x i8] c"../ffv1weight\00"
@30 = private constant [12 x i8] c"../ffv1type\00"
@31 = private constant [14 x i8] c"../ffv2weight\00"
@32 = private constant [12 x i8] c"../ffv2type\00"
@33 = private constant [14 x i8] c"../ffv3weight\00"
@34 = private constant [12 x i8] c"../ffv3type\00"
@35 = private constant [14 x i8] c"../ffp1weight\00"
@36 = private constant [12 x i8] c"../ffp1type\00"
@37 = private constant [14 x i8] c"../ffp2weight\00"
@38 = private constant [12 x i8] c"../ffp2type\00"
@39 = private constant [7 x i8] c"../ffx\00"
@40 = private constant [7 x i8] c"../ffy\00"
@41 = private constant [9 x i8] c"../ffang\00"
@42 = private constant [7 x i8] c"../ffo\00"
@43 = private constant [12 x i8] c"../ffdopost\00"
@44 = private constant [8 x i8] c"../ffpx\00"
@45 = private constant [8 x i8] c"../ffpy\00"
@46 = private constant [10 x i8] c"../ffpang\00"
@47 = private constant [8 x i8] c"../ffpo\00"
@48 = private constant [0 x i64] zeroinitializer
@49 = private constant [0 x double] zeroinitializer
@50 = private constant [0 x <2 x double>] zeroinitializer
@51 = private constant [20 x double] [double 2.700000e+01, double 2.800000e+01, double 2.900000e+01, double 3.000000e+01, double 3.100000e+01, double 3.200000e+01, double 3.400000e+01, double 3.500000e+01, double 3.600000e+01, double 3.700000e+01, double 3.800000e+01, double 4.700000e+01, double 4.800000e+01, double 4.900000e+01, double 5.000000e+01, double 5.100000e+01, double 5.200000e+01, double 5.300000e+01, double 5.600000e+01, double 5.700000e+01]
@52 = private constant [10 x i8] c"../curlc_\00"
@53 = private constant [9 x i8] c"../ngon_\00"
@54 = private constant [9 x i8] c"../pdjw_\00"
@55 = private constant [9 x i8] c"../blob_\00"
@56 = private constant [11 x i8] c"../julian_\00"
@57 = private constant [15 x i8] c"../juliascope_\00"
@58 = private constant [9 x i8] c"../fan2_\00"
@59 = private constant [14 x i8] c"../rings2val_\00"
@60 = private constant [15 x i8] c"../rectangles_\00"
@61 = private constant [15 x i8] c"../radialblur_\00"
@62 = private constant [8 x i8] c"../pie_\00"
@63 = private constant [10 x i8] c"../disc2_\00"
@64 = private constant [15 x i8] c"../supershape_\00"
@65 = private constant [16 x i8] c"../supershapen_\00"
@66 = private constant [11 x i8] c"../flower_\00"
@67 = private constant [10 x i8] c"../conic_\00"
@68 = private constant [13 x i8] c"../parabola_\00"
@69 = private constant [12 x i8] c"../bent2xy_\00"
@70 = private constant [17 x i8] c"../bipolarshift_\00"
@71 = private constant [13 x i8] c"../cellsize_\00"
@72 = private constant [9 x i8] c"../cpow_\00"
@73 = private constant [21 x double] [double 6.100000e+01, double 6.300000e+01, double 6.600000e+01, double 6.700000e+01, double 6.900000e+01, double 7.100000e+01, double 7.200000e+01, double 7.300000e+01, double 7.400000e+01, double 7.500000e+01, double 7.600000e+01, double 7.700000e+01, double 7.800000e+01, double 7.900000e+01, double 9.400000e+01, double 9.500000e+01, double 9.600000e+01, double 9.700000e+01, double 9.800000e+01, double 9.900000e+01, double 1.010000e+02]
@74 = private constant [15 x i8] c"../escherbeta_\00"
@75 = private constant [17 x i8] c"../lazysusanxyz_\00"
@76 = private constant [14 x i8] c"../lazysusan_\00"
@77 = private constant [15 x i8] c"../modulusXYZ_\00"
@78 = private constant [11 x i8] c"../oscope_\00"
@79 = private constant [16 x i8] c"../popcorn2xyz_\00"
@80 = private constant [14 x i8] c"../popcorn2c_\00"
@81 = private constant [18 x i8] c"../separationxyz_\00"
@82 = private constant [24 x i8] c"../separationinsidexyz_\00"
@83 = private constant [13 x i8] c"../splitxyz_\00"
@84 = private constant [14 x i8] c"../splitsxyz_\00"
@85 = private constant [12 x i8] c"../stripes_\00"
@86 = private constant [10 x i8] c"../wedge_\00"
@87 = private constant [15 x i8] c"../wedgejulia_\00"
@88 = private constant [13 x i8] c"../wedgesph_\00"
@89 = private constant [10 x i8] c"../whorl_\00"
@90 = private constant [19 x i8] c"../waves2scalexyz_\00"
@91 = private constant [18 x i8] c"../waves2freqxyz_\00"
@92 = private constant [10 x i8] c"../auger_\00"
@93 = private constant [15 x i8] c"../fluxspread_\00"
@94 = private constant [13 x i8] c"../mobiusre_\00"
@95 = private constant [13 x i8] c"../mobiusim_\00"
@96 = private constant [19 x i8] c"../curvexyzlenght_\00"
@97 = private constant [16 x i8] c"../curvexyzamp_\00"
@98 = private constant [10 x i8] c"../persp_\00"
@99 = private constant [11 x i8] c"../bwraps_\00"
@100 = private constant [16 x i8] c"../bwrapstwist_\00"
@101 = private constant [18 x i8] c"../polynomialpow_\00"
@102 = private constant [17 x i8] c"../polynomiallc_\00"
@103 = private constant [17 x i8] c"../polynomialsc_\00"
@104 = private constant [0 x <3 x double>] zeroinitializer
@105 = private constant [0 x <4 x double>] zeroinitializer
@106 = private constant [6 x i8] c"curlc\00"
@107 = private constant [5 x i8] c"ngon\00"
@108 = private constant [5 x i8] c"pdjw\00"
@109 = private constant [5 x i8] c"blob\00"
@110 = private constant [7 x i8] c"julian\00"
@111 = private constant [11 x i8] c"juliascope\00"
@112 = private constant [5 x i8] c"fan2\00"
@113 = private constant [10 x i8] c"rings2val\00"
@114 = private constant [11 x i8] c"rectangles\00"
@115 = private constant [11 x i8] c"radialblur\00"
@116 = private constant [4 x i8] c"pie\00"
@117 = private constant [6 x i8] c"disc2\00"
@118 = private constant [11 x i8] c"supershape\00"
@119 = private constant [12 x i8] c"supershapen\00"
@120 = private constant [7 x i8] c"flower\00"
@121 = private constant [6 x i8] c"conic\00"
@122 = private constant [9 x i8] c"parabola\00"
@123 = private constant [8 x i8] c"bent2xy\00"
@124 = private constant [13 x i8] c"bipolarshift\00"
@125 = private constant [9 x i8] c"cellsize\00"
@126 = private constant [5 x i8] c"cpow\00"
@127 = private constant [11 x i8] c"escherbeta\00"
@128 = private constant [10 x i8] c"lazysusan\00"
@129 = private constant [13 x i8] c"lazysusanxyz\00"
@130 = private constant [11 x i8] c"modulusXYZ\00"
@131 = private constant [7 x i8] c"oscope\00"
@132 = private constant [10 x i8] c"popcorn2c\00"
@133 = private constant [12 x i8] c"popcorn2xyz\00"
@134 = private constant [14 x i8] c"separationxyz\00"
@135 = private constant [20 x i8] c"separationinsidexyz\00"
@136 = private constant [9 x i8] c"splitxyz\00"
@137 = private constant [10 x i8] c"splitsxyz\00"
@138 = private constant [8 x i8] c"stripes\00"
@139 = private constant [6 x i8] c"wedge\00"
@140 = private constant [11 x i8] c"wedgejulia\00"
@141 = private constant [9 x i8] c"wedgesph\00"
@142 = private constant [6 x i8] c"whorl\00"
@143 = private constant [15 x i8] c"waves2scalexyz\00"
@144 = private constant [14 x i8] c"waves2freqxyz\00"
@145 = private constant [6 x i8] c"auger\00"
@146 = private constant [11 x i8] c"fluxspread\00"
@147 = private constant [9 x i8] c"mobiusre\00"
@148 = private constant [9 x i8] c"mobiusim\00"
@149 = private constant [15 x i8] c"curvexyzlenght\00"
@150 = private constant [12 x i8] c"curvexyzamp\00"
@151 = private constant [6 x i8] c"persp\00"
@152 = private constant [7 x i8] c"bwraps\00"
@153 = private constant [12 x i8] c"bwrapstwist\00"
@154 = private constant [14 x i8] c"polynomialpow\00"
@155 = private constant [13 x i8] c"polynomiallc\00"
@156 = private constant [13 x i8] c"polynomialsc\00"
@157 = private constant [0 x i8*] zeroinitializer
@158 = private constant [7 x i8] c"../ff_\00"
@159 = private constant [8 x i8] c"../fp1_\00"
@160 = private constant [11 x i8] c"Tstep_mult\00"
@161 = private constant [7 x i8] c"mb_mod\00"
@162 = private constant [4 x i8] c"set\00"
@ptnum = external global i64
@pscale = external global double
@clr = external global double
@Alpha = external global double
@P = external global <3 x double>
@163 = private constant [6 x i8] c"ptnum\00"
@164 = private constant [7 x i8] c"pscale\00"
@165 = private constant [4 x i8] c"clr\00"
@166 = private constant [6 x i8] c"Alpha\00"
@167 = private constant [2 x i8] c"P\00"

; Function Attrs: alwaysinline nounwind
define private i64 @"XAOS@IIF[F"(i64* %idx, double* %res, double** %XST) #0 {
__llvm_entry:
  %res1 = load double, double* %res
  %return = fcmp olt double %res1, 1.500000e+01
  br i1 %return, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %return4 = fcmp oeq double %res1, 2.000000e+00
  br i1 %return4, label %true6, label %false7

false:                                            ; preds = %__llvm_entry
  %return1004 = fcmp olt double %res1, 2.100000e+01
  br i1 %return1004, label %true1006, label %end

end:                                              ; preds = %false1992, %false1903, %false1642, %false1804, %false1724, %false1624, %false1544, %false1453, %false1382, %false1291, %false1220, %false1138, %false1076, %false, %false989, %false927, %false751, %false855, %false733, %false620, %false516, %false421, %false335, %false258, %false190, %true153, %false131, %false81, %false40
  %idx2006 = load i64, i64* %idx
  br label %UnifiedReturnBlock

true6:                                            ; preds = %true
  %idx9 = load i64, i64* %idx
  %return10 = call i64 @"eq@III"(i64 %idx9, i64 0)
  %0 = icmp ne i64 %return10, 0
  %XST14 = load double*, double** %XST
  br i1 %0, label %true11, label %false12

false7:                                           ; preds = %true
  %return23 = fcmp oeq double %res1, 3.000000e+00
  br i1 %return23, label %true25, label %false26

true11:                                           ; preds = %true6
  %return15 = call double* @"slice@[F[FIIIIII"(double* %XST14, i64 1, i64 0, i64 1, i64 2, i64 0, i64 0)
  %return16 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return17 = call i64 @"sample_cdf@[FFI"(double* %return15, double %return16)
  br label %UnifiedReturnBlock

false12:                                          ; preds = %true6
  %return19 = call double* @"slice@[F[FIIIIII"(double* %XST14, i64 1, i64 2, i64 1, i64 4, i64 0, i64 0)
  %return20 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return21 = call i64 @"sample_cdf@[FFI"(double* %return19, double %return20)
  br label %UnifiedReturnBlock

true25:                                           ; preds = %false7
  %idx28 = load i64, i64* %idx
  %return29 = call i64 @"eq@III"(i64 %idx28, i64 0)
  %1 = icmp ne i64 %return29, 0
  br i1 %1, label %true30, label %false31

false26:                                          ; preds = %false7
  %return55 = fcmp oeq double %res1, 4.000000e+00
  br i1 %return55, label %true57, label %false58

true30:                                           ; preds = %true25
  %XST33 = load double*, double** %XST
  %return34 = call double* @"slice@[F[FIIIIII"(double* %XST33, i64 1, i64 0, i64 1, i64 3, i64 0, i64 0)
  %return35 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return36 = call i64 @"sample_cdf@[FFI"(double* %return34, double %return35)
  br label %UnifiedReturnBlock

false31:                                          ; preds = %true25
  %return38 = call i64 @"eq@III"(i64 %idx28, i64 1)
  %2 = icmp ne i64 %return38, 0
  br i1 %2, label %true39, label %false40

true39:                                           ; preds = %false31
  %XST42 = load double*, double** %XST
  %return43 = call double* @"slice@[F[FIIIIII"(double* %XST42, i64 1, i64 3, i64 1, i64 6, i64 0, i64 0)
  %return44 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return45 = call i64 @"sample_cdf@[FFI"(double* %return43, double %return44)
  br label %UnifiedReturnBlock

false40:                                          ; preds = %false31
  %return47 = call i64 @"eq@III"(i64 %idx28, i64 2)
  %3 = icmp ne i64 %return47, 0
  br i1 %3, label %true48, label %end

true48:                                           ; preds = %false40
  %XST50 = load double*, double** %XST
  %return51 = call double* @"slice@[F[FIIIIII"(double* %XST50, i64 1, i64 6, i64 1, i64 9, i64 0, i64 0)
  %return52 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return53 = call i64 @"sample_cdf@[FFI"(double* %return51, double %return52)
  br label %UnifiedReturnBlock

true57:                                           ; preds = %false26
  %idx60 = load i64, i64* %idx
  %return61 = call i64 @"eq@III"(i64 %idx60, i64 0)
  %4 = icmp ne i64 %return61, 0
  br i1 %4, label %true62, label %false63

false58:                                          ; preds = %false26
  %return96 = fcmp oeq double %res1, 5.000000e+00
  br i1 %return96, label %true98, label %false99

true62:                                           ; preds = %true57
  %XST65 = load double*, double** %XST
  %return66 = call double* @"slice@[F[FIIIIII"(double* %XST65, i64 1, i64 0, i64 1, i64 4, i64 0, i64 0)
  %return67 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return68 = call i64 @"sample_cdf@[FFI"(double* %return66, double %return67)
  br label %UnifiedReturnBlock

false63:                                          ; preds = %true57
  %return70 = call i64 @"eq@III"(i64 %idx60, i64 1)
  %5 = icmp ne i64 %return70, 0
  br i1 %5, label %true71, label %false72

true71:                                           ; preds = %false63
  %XST74 = load double*, double** %XST
  %return75 = call double* @"slice@[F[FIIIIII"(double* %XST74, i64 1, i64 4, i64 1, i64 8, i64 0, i64 0)
  %return76 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return77 = call i64 @"sample_cdf@[FFI"(double* %return75, double %return76)
  br label %UnifiedReturnBlock

false72:                                          ; preds = %false63
  %return79 = call i64 @"eq@III"(i64 %idx60, i64 2)
  %6 = icmp ne i64 %return79, 0
  br i1 %6, label %true80, label %false81

true80:                                           ; preds = %false72
  %XST83 = load double*, double** %XST
  %return84 = call double* @"slice@[F[FIIIIII"(double* %XST83, i64 1, i64 8, i64 1, i64 12, i64 0, i64 0)
  %return85 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return86 = call i64 @"sample_cdf@[FFI"(double* %return84, double %return85)
  br label %UnifiedReturnBlock

false81:                                          ; preds = %false72
  %return88 = call i64 @"eq@III"(i64 %idx60, i64 3)
  %7 = icmp ne i64 %return88, 0
  br i1 %7, label %true89, label %end

true89:                                           ; preds = %false81
  %XST91 = load double*, double** %XST
  %return92 = call double* @"slice@[F[FIIIIII"(double* %XST91, i64 1, i64 12, i64 1, i64 16, i64 0, i64 0)
  %return93 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return94 = call i64 @"sample_cdf@[FFI"(double* %return92, double %return93)
  br label %UnifiedReturnBlock

true98:                                           ; preds = %false58
  %idx101 = load i64, i64* %idx
  %return102 = call i64 @"eq@III"(i64 %idx101, i64 0)
  %8 = icmp ne i64 %return102, 0
  br i1 %8, label %true103, label %false104

false99:                                          ; preds = %false58
  %return146 = fcmp oeq double %res1, 6.000000e+00
  br i1 %return146, label %true148, label %false149

true103:                                          ; preds = %true98
  %XST106 = load double*, double** %XST
  %return107 = call double* @"slice@[F[FIIIIII"(double* %XST106, i64 1, i64 0, i64 1, i64 5, i64 0, i64 0)
  %return108 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return109 = call i64 @"sample_cdf@[FFI"(double* %return107, double %return108)
  br label %UnifiedReturnBlock

false104:                                         ; preds = %true98
  %return111 = call i64 @"eq@III"(i64 %idx101, i64 1)
  %9 = icmp ne i64 %return111, 0
  br i1 %9, label %true112, label %false113

true112:                                          ; preds = %false104
  %XST115 = load double*, double** %XST
  %return116 = call double* @"slice@[F[FIIIIII"(double* %XST115, i64 1, i64 5, i64 1, i64 10, i64 0, i64 0)
  %return117 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return118 = call i64 @"sample_cdf@[FFI"(double* %return116, double %return117)
  br label %UnifiedReturnBlock

false113:                                         ; preds = %false104
  %return120 = call i64 @"eq@III"(i64 %idx101, i64 2)
  %10 = icmp ne i64 %return120, 0
  br i1 %10, label %true121, label %false122

true121:                                          ; preds = %false113
  %XST124 = load double*, double** %XST
  %return125 = call double* @"slice@[F[FIIIIII"(double* %XST124, i64 1, i64 10, i64 1, i64 15, i64 0, i64 0)
  %return126 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return127 = call i64 @"sample_cdf@[FFI"(double* %return125, double %return126)
  br label %UnifiedReturnBlock

false122:                                         ; preds = %false113
  %return129 = call i64 @"eq@III"(i64 %idx101, i64 3)
  %11 = icmp ne i64 %return129, 0
  br i1 %11, label %true130, label %false131

true130:                                          ; preds = %false122
  %XST133 = load double*, double** %XST
  %return134 = call double* @"slice@[F[FIIIIII"(double* %XST133, i64 1, i64 15, i64 1, i64 20, i64 0, i64 0)
  %return135 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return136 = call i64 @"sample_cdf@[FFI"(double* %return134, double %return135)
  br label %UnifiedReturnBlock

false131:                                         ; preds = %false122
  %return138 = call i64 @"eq@III"(i64 %idx101, i64 4)
  %12 = icmp ne i64 %return138, 0
  br i1 %12, label %true139, label %end

true139:                                          ; preds = %false131
  %XST141 = load double*, double** %XST
  %return142 = call double* @"slice@[F[FIIIIII"(double* %XST141, i64 1, i64 20, i64 1, i64 25, i64 0, i64 0)
  %return143 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return144 = call i64 @"sample_cdf@[FFI"(double* %return142, double %return143)
  br label %UnifiedReturnBlock

true148:                                          ; preds = %false99
  %idx151 = load i64, i64* %idx
  %return152 = call i64 @"eq@III"(i64 %idx151, i64 0)
  %13 = icmp ne i64 %return152, 0
  br i1 %13, label %true153, label %false154

false149:                                         ; preds = %false99
  %return205 = fcmp oeq double %res1, 7.000000e+00
  br i1 %return205, label %true207, label %false208

true153:                                          ; preds = %true148
  %XST156 = load double*, double** %XST
  %return157 = call double* @"slice@[F[FIIIIII"(double* %XST156, i64 1, i64 0, i64 1, i64 6, i64 0, i64 0)
  %return158 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return159 = call i64 @"sample_cdf@[FFI"(double* %return157, double %return158)
  store i64 %return159, i64* %idx
  br label %end

false154:                                         ; preds = %true148
  %return161 = call i64 @"eq@III"(i64 %idx151, i64 1)
  %14 = icmp ne i64 %return161, 0
  br i1 %14, label %true162, label %false163

true162:                                          ; preds = %false154
  %XST165 = load double*, double** %XST
  %return166 = call double* @"slice@[F[FIIIIII"(double* %XST165, i64 1, i64 6, i64 1, i64 12, i64 0, i64 0)
  %return167 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return168 = call i64 @"sample_cdf@[FFI"(double* %return166, double %return167)
  br label %UnifiedReturnBlock

false163:                                         ; preds = %false154
  %return170 = call i64 @"eq@III"(i64 %idx151, i64 2)
  %15 = icmp ne i64 %return170, 0
  br i1 %15, label %true171, label %false172

true171:                                          ; preds = %false163
  %XST174 = load double*, double** %XST
  %return175 = call double* @"slice@[F[FIIIIII"(double* %XST174, i64 1, i64 12, i64 1, i64 18, i64 0, i64 0)
  %return176 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return177 = call i64 @"sample_cdf@[FFI"(double* %return175, double %return176)
  br label %UnifiedReturnBlock

false172:                                         ; preds = %false163
  %return179 = call i64 @"eq@III"(i64 %idx151, i64 3)
  %16 = icmp ne i64 %return179, 0
  br i1 %16, label %true180, label %false181

true180:                                          ; preds = %false172
  %XST183 = load double*, double** %XST
  %return184 = call double* @"slice@[F[FIIIIII"(double* %XST183, i64 1, i64 18, i64 1, i64 24, i64 0, i64 0)
  %return185 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return186 = call i64 @"sample_cdf@[FFI"(double* %return184, double %return185)
  br label %UnifiedReturnBlock

false181:                                         ; preds = %false172
  %return188 = call i64 @"eq@III"(i64 %idx151, i64 4)
  %17 = icmp ne i64 %return188, 0
  br i1 %17, label %true189, label %false190

true189:                                          ; preds = %false181
  %XST192 = load double*, double** %XST
  %return193 = call double* @"slice@[F[FIIIIII"(double* %XST192, i64 1, i64 24, i64 1, i64 30, i64 0, i64 0)
  %return194 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return195 = call i64 @"sample_cdf@[FFI"(double* %return193, double %return194)
  br label %UnifiedReturnBlock

false190:                                         ; preds = %false181
  %return197 = call i64 @"eq@III"(i64 %idx151, i64 5)
  %18 = icmp ne i64 %return197, 0
  br i1 %18, label %true198, label %end

true198:                                          ; preds = %false190
  %XST200 = load double*, double** %XST
  %return201 = call double* @"slice@[F[FIIIIII"(double* %XST200, i64 1, i64 30, i64 1, i64 36, i64 0, i64 0)
  %return202 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return203 = call i64 @"sample_cdf@[FFI"(double* %return201, double %return202)
  br label %UnifiedReturnBlock

true207:                                          ; preds = %false149
  %idx210 = load i64, i64* %idx
  %return211 = call i64 @"eq@III"(i64 %idx210, i64 0)
  %19 = icmp ne i64 %return211, 0
  br i1 %19, label %true212, label %false213

false208:                                         ; preds = %false149
  %return273 = fcmp oeq double %res1, 8.000000e+00
  br i1 %return273, label %true275, label %false276

true212:                                          ; preds = %true207
  %XST215 = load double*, double** %XST
  %return216 = call double* @"slice@[F[FIIIIII"(double* %XST215, i64 1, i64 0, i64 1, i64 7, i64 0, i64 0)
  %return217 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return218 = call i64 @"sample_cdf@[FFI"(double* %return216, double %return217)
  br label %UnifiedReturnBlock

false213:                                         ; preds = %true207
  %return220 = call i64 @"eq@III"(i64 %idx210, i64 1)
  %20 = icmp ne i64 %return220, 0
  br i1 %20, label %true221, label %false222

true221:                                          ; preds = %false213
  %XST224 = load double*, double** %XST
  %return225 = call double* @"slice@[F[FIIIIII"(double* %XST224, i64 1, i64 7, i64 1, i64 14, i64 0, i64 0)
  %return226 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return227 = call i64 @"sample_cdf@[FFI"(double* %return225, double %return226)
  br label %UnifiedReturnBlock

false222:                                         ; preds = %false213
  %return229 = call i64 @"eq@III"(i64 %idx210, i64 2)
  %21 = icmp ne i64 %return229, 0
  br i1 %21, label %true230, label %false231

true230:                                          ; preds = %false222
  %XST233 = load double*, double** %XST
  %return234 = call double* @"slice@[F[FIIIIII"(double* %XST233, i64 1, i64 14, i64 1, i64 21, i64 0, i64 0)
  %return235 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return236 = call i64 @"sample_cdf@[FFI"(double* %return234, double %return235)
  br label %UnifiedReturnBlock

false231:                                         ; preds = %false222
  %return238 = call i64 @"eq@III"(i64 %idx210, i64 3)
  %22 = icmp ne i64 %return238, 0
  br i1 %22, label %true239, label %false240

true239:                                          ; preds = %false231
  %XST242 = load double*, double** %XST
  %return243 = call double* @"slice@[F[FIIIIII"(double* %XST242, i64 1, i64 21, i64 1, i64 28, i64 0, i64 0)
  %return244 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return245 = call i64 @"sample_cdf@[FFI"(double* %return243, double %return244)
  br label %UnifiedReturnBlock

false240:                                         ; preds = %false231
  %return247 = call i64 @"eq@III"(i64 %idx210, i64 4)
  %23 = icmp ne i64 %return247, 0
  br i1 %23, label %true248, label %false249

true248:                                          ; preds = %false240
  %XST251 = load double*, double** %XST
  %return252 = call double* @"slice@[F[FIIIIII"(double* %XST251, i64 1, i64 28, i64 1, i64 35, i64 0, i64 0)
  %return253 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return254 = call i64 @"sample_cdf@[FFI"(double* %return252, double %return253)
  br label %UnifiedReturnBlock

false249:                                         ; preds = %false240
  %return256 = call i64 @"eq@III"(i64 %idx210, i64 5)
  %24 = icmp ne i64 %return256, 0
  br i1 %24, label %true257, label %false258

true257:                                          ; preds = %false249
  %XST260 = load double*, double** %XST
  %return261 = call double* @"slice@[F[FIIIIII"(double* %XST260, i64 1, i64 35, i64 1, i64 42, i64 0, i64 0)
  %return262 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return263 = call i64 @"sample_cdf@[FFI"(double* %return261, double %return262)
  br label %UnifiedReturnBlock

false258:                                         ; preds = %false249
  %return265 = call i64 @"eq@III"(i64 %idx210, i64 6)
  %25 = icmp ne i64 %return265, 0
  br i1 %25, label %true266, label %end

true266:                                          ; preds = %false258
  %XST268 = load double*, double** %XST
  %return269 = call double* @"slice@[F[FIIIIII"(double* %XST268, i64 1, i64 42, i64 1, i64 49, i64 0, i64 0)
  %return270 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return271 = call i64 @"sample_cdf@[FFI"(double* %return269, double %return270)
  br label %UnifiedReturnBlock

true275:                                          ; preds = %false208
  %idx278 = load i64, i64* %idx
  %return279 = call i64 @"eq@III"(i64 %idx278, i64 0)
  %26 = icmp ne i64 %return279, 0
  br i1 %26, label %true280, label %false281

false276:                                         ; preds = %false208
  %return350 = fcmp oeq double %res1, 9.000000e+00
  br i1 %return350, label %true352, label %false353

true280:                                          ; preds = %true275
  %XST283 = load double*, double** %XST
  %return284 = call double* @"slice@[F[FIIIIII"(double* %XST283, i64 1, i64 0, i64 1, i64 8, i64 0, i64 0)
  %return285 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return286 = call i64 @"sample_cdf@[FFI"(double* %return284, double %return285)
  br label %UnifiedReturnBlock

false281:                                         ; preds = %true275
  %return288 = call i64 @"eq@III"(i64 %idx278, i64 1)
  %27 = icmp ne i64 %return288, 0
  br i1 %27, label %true289, label %false290

true289:                                          ; preds = %false281
  %XST292 = load double*, double** %XST
  %return293 = call double* @"slice@[F[FIIIIII"(double* %XST292, i64 1, i64 8, i64 1, i64 16, i64 0, i64 0)
  %return294 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return295 = call i64 @"sample_cdf@[FFI"(double* %return293, double %return294)
  br label %UnifiedReturnBlock

false290:                                         ; preds = %false281
  %return297 = call i64 @"eq@III"(i64 %idx278, i64 2)
  %28 = icmp ne i64 %return297, 0
  br i1 %28, label %true298, label %false299

true298:                                          ; preds = %false290
  %XST301 = load double*, double** %XST
  %return302 = call double* @"slice@[F[FIIIIII"(double* %XST301, i64 1, i64 16, i64 1, i64 24, i64 0, i64 0)
  %return303 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return304 = call i64 @"sample_cdf@[FFI"(double* %return302, double %return303)
  br label %UnifiedReturnBlock

false299:                                         ; preds = %false290
  %return306 = call i64 @"eq@III"(i64 %idx278, i64 3)
  %29 = icmp ne i64 %return306, 0
  br i1 %29, label %true307, label %false308

true307:                                          ; preds = %false299
  %XST310 = load double*, double** %XST
  %return311 = call double* @"slice@[F[FIIIIII"(double* %XST310, i64 1, i64 24, i64 1, i64 32, i64 0, i64 0)
  %return312 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return313 = call i64 @"sample_cdf@[FFI"(double* %return311, double %return312)
  br label %UnifiedReturnBlock

false308:                                         ; preds = %false299
  %return315 = call i64 @"eq@III"(i64 %idx278, i64 4)
  %30 = icmp ne i64 %return315, 0
  br i1 %30, label %true316, label %false317

true316:                                          ; preds = %false308
  %XST319 = load double*, double** %XST
  %return320 = call double* @"slice@[F[FIIIIII"(double* %XST319, i64 1, i64 32, i64 1, i64 40, i64 0, i64 0)
  %return321 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return322 = call i64 @"sample_cdf@[FFI"(double* %return320, double %return321)
  br label %UnifiedReturnBlock

false317:                                         ; preds = %false308
  %return324 = call i64 @"eq@III"(i64 %idx278, i64 5)
  %31 = icmp ne i64 %return324, 0
  br i1 %31, label %true325, label %false326

true325:                                          ; preds = %false317
  %XST328 = load double*, double** %XST
  %return329 = call double* @"slice@[F[FIIIIII"(double* %XST328, i64 1, i64 40, i64 1, i64 48, i64 0, i64 0)
  %return330 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return331 = call i64 @"sample_cdf@[FFI"(double* %return329, double %return330)
  br label %UnifiedReturnBlock

false326:                                         ; preds = %false317
  %return333 = call i64 @"eq@III"(i64 %idx278, i64 6)
  %32 = icmp ne i64 %return333, 0
  br i1 %32, label %true334, label %false335

true334:                                          ; preds = %false326
  %XST337 = load double*, double** %XST
  %return338 = call double* @"slice@[F[FIIIIII"(double* %XST337, i64 1, i64 48, i64 1, i64 56, i64 0, i64 0)
  %return339 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return340 = call i64 @"sample_cdf@[FFI"(double* %return338, double %return339)
  br label %UnifiedReturnBlock

false335:                                         ; preds = %false326
  %return342 = call i64 @"eq@III"(i64 %idx278, i64 7)
  %33 = icmp ne i64 %return342, 0
  br i1 %33, label %true343, label %end

true343:                                          ; preds = %false335
  %XST345 = load double*, double** %XST
  %return346 = call double* @"slice@[F[FIIIIII"(double* %XST345, i64 1, i64 56, i64 1, i64 64, i64 0, i64 0)
  %return347 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return348 = call i64 @"sample_cdf@[FFI"(double* %return346, double %return347)
  br label %UnifiedReturnBlock

true352:                                          ; preds = %false276
  %idx355 = load i64, i64* %idx
  %return356 = call i64 @"eq@III"(i64 %idx355, i64 0)
  %34 = icmp ne i64 %return356, 0
  br i1 %34, label %true357, label %false358

false353:                                         ; preds = %false276
  %return436 = fcmp oeq double %res1, 1.000000e+01
  br i1 %return436, label %true438, label %false439

true357:                                          ; preds = %true352
  %XST360 = load double*, double** %XST
  %return361 = call double* @"slice@[F[FIIIIII"(double* %XST360, i64 1, i64 0, i64 1, i64 9, i64 0, i64 0)
  %return362 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return363 = call i64 @"sample_cdf@[FFI"(double* %return361, double %return362)
  br label %UnifiedReturnBlock

false358:                                         ; preds = %true352
  %return365 = call i64 @"eq@III"(i64 %idx355, i64 1)
  %35 = icmp ne i64 %return365, 0
  br i1 %35, label %true366, label %false367

true366:                                          ; preds = %false358
  %XST369 = load double*, double** %XST
  %return370 = call double* @"slice@[F[FIIIIII"(double* %XST369, i64 1, i64 9, i64 1, i64 18, i64 0, i64 0)
  %return371 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return372 = call i64 @"sample_cdf@[FFI"(double* %return370, double %return371)
  br label %UnifiedReturnBlock

false367:                                         ; preds = %false358
  %return374 = call i64 @"eq@III"(i64 %idx355, i64 2)
  %36 = icmp ne i64 %return374, 0
  br i1 %36, label %true375, label %false376

true375:                                          ; preds = %false367
  %XST378 = load double*, double** %XST
  %return379 = call double* @"slice@[F[FIIIIII"(double* %XST378, i64 1, i64 18, i64 1, i64 27, i64 0, i64 0)
  %return380 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return381 = call i64 @"sample_cdf@[FFI"(double* %return379, double %return380)
  br label %UnifiedReturnBlock

false376:                                         ; preds = %false367
  %return383 = call i64 @"eq@III"(i64 %idx355, i64 3)
  %37 = icmp ne i64 %return383, 0
  br i1 %37, label %true384, label %false385

true384:                                          ; preds = %false376
  %XST387 = load double*, double** %XST
  %return388 = call double* @"slice@[F[FIIIIII"(double* %XST387, i64 1, i64 27, i64 1, i64 36, i64 0, i64 0)
  %return389 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return390 = call i64 @"sample_cdf@[FFI"(double* %return388, double %return389)
  br label %UnifiedReturnBlock

false385:                                         ; preds = %false376
  %return392 = call i64 @"eq@III"(i64 %idx355, i64 4)
  %38 = icmp ne i64 %return392, 0
  br i1 %38, label %true393, label %false394

true393:                                          ; preds = %false385
  %XST396 = load double*, double** %XST
  %return397 = call double* @"slice@[F[FIIIIII"(double* %XST396, i64 1, i64 36, i64 1, i64 45, i64 0, i64 0)
  %return398 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return399 = call i64 @"sample_cdf@[FFI"(double* %return397, double %return398)
  br label %UnifiedReturnBlock

false394:                                         ; preds = %false385
  %return401 = call i64 @"eq@III"(i64 %idx355, i64 5)
  %39 = icmp ne i64 %return401, 0
  br i1 %39, label %true402, label %false403

true402:                                          ; preds = %false394
  %XST405 = load double*, double** %XST
  %return406 = call double* @"slice@[F[FIIIIII"(double* %XST405, i64 1, i64 45, i64 1, i64 54, i64 0, i64 0)
  %return407 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return408 = call i64 @"sample_cdf@[FFI"(double* %return406, double %return407)
  br label %UnifiedReturnBlock

false403:                                         ; preds = %false394
  %return410 = call i64 @"eq@III"(i64 %idx355, i64 6)
  %40 = icmp ne i64 %return410, 0
  br i1 %40, label %true411, label %false412

true411:                                          ; preds = %false403
  %XST414 = load double*, double** %XST
  %return415 = call double* @"slice@[F[FIIIIII"(double* %XST414, i64 1, i64 54, i64 1, i64 63, i64 0, i64 0)
  %return416 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return417 = call i64 @"sample_cdf@[FFI"(double* %return415, double %return416)
  br label %UnifiedReturnBlock

false412:                                         ; preds = %false403
  %return419 = call i64 @"eq@III"(i64 %idx355, i64 7)
  %41 = icmp ne i64 %return419, 0
  br i1 %41, label %true420, label %false421

true420:                                          ; preds = %false412
  %XST423 = load double*, double** %XST
  %return424 = call double* @"slice@[F[FIIIIII"(double* %XST423, i64 1, i64 63, i64 1, i64 72, i64 0, i64 0)
  %return425 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return426 = call i64 @"sample_cdf@[FFI"(double* %return424, double %return425)
  br label %UnifiedReturnBlock

false421:                                         ; preds = %false412
  %return428 = call i64 @"eq@III"(i64 %idx355, i64 8)
  %42 = icmp ne i64 %return428, 0
  br i1 %42, label %true429, label %end

true429:                                          ; preds = %false421
  %XST431 = load double*, double** %XST
  %return432 = call double* @"slice@[F[FIIIIII"(double* %XST431, i64 1, i64 72, i64 1, i64 81, i64 0, i64 0)
  %return433 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return434 = call i64 @"sample_cdf@[FFI"(double* %return432, double %return433)
  br label %UnifiedReturnBlock

true438:                                          ; preds = %false353
  %idx441 = load i64, i64* %idx
  %return442 = call i64 @"eq@III"(i64 %idx441, i64 0)
  %43 = icmp ne i64 %return442, 0
  br i1 %43, label %true443, label %false444

false439:                                         ; preds = %false353
  %return531 = fcmp oeq double %res1, 1.100000e+01
  br i1 %return531, label %true533, label %false534

true443:                                          ; preds = %true438
  %XST446 = load double*, double** %XST
  %return447 = call double* @"slice@[F[FIIIIII"(double* %XST446, i64 1, i64 0, i64 1, i64 10, i64 0, i64 0)
  %return448 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return449 = call i64 @"sample_cdf@[FFI"(double* %return447, double %return448)
  br label %UnifiedReturnBlock

false444:                                         ; preds = %true438
  %return451 = call i64 @"eq@III"(i64 %idx441, i64 1)
  %44 = icmp ne i64 %return451, 0
  br i1 %44, label %true452, label %false453

true452:                                          ; preds = %false444
  %XST455 = load double*, double** %XST
  %return456 = call double* @"slice@[F[FIIIIII"(double* %XST455, i64 1, i64 10, i64 1, i64 20, i64 0, i64 0)
  %return457 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return458 = call i64 @"sample_cdf@[FFI"(double* %return456, double %return457)
  br label %UnifiedReturnBlock

false453:                                         ; preds = %false444
  %return460 = call i64 @"eq@III"(i64 %idx441, i64 2)
  %45 = icmp ne i64 %return460, 0
  br i1 %45, label %true461, label %false462

true461:                                          ; preds = %false453
  %XST464 = load double*, double** %XST
  %return465 = call double* @"slice@[F[FIIIIII"(double* %XST464, i64 1, i64 20, i64 1, i64 30, i64 0, i64 0)
  %return466 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return467 = call i64 @"sample_cdf@[FFI"(double* %return465, double %return466)
  br label %UnifiedReturnBlock

false462:                                         ; preds = %false453
  %return469 = call i64 @"eq@III"(i64 %idx441, i64 3)
  %46 = icmp ne i64 %return469, 0
  br i1 %46, label %true470, label %false471

true470:                                          ; preds = %false462
  %XST473 = load double*, double** %XST
  %return474 = call double* @"slice@[F[FIIIIII"(double* %XST473, i64 1, i64 30, i64 1, i64 40, i64 0, i64 0)
  %return475 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return476 = call i64 @"sample_cdf@[FFI"(double* %return474, double %return475)
  br label %UnifiedReturnBlock

false471:                                         ; preds = %false462
  %return478 = call i64 @"eq@III"(i64 %idx441, i64 4)
  %47 = icmp ne i64 %return478, 0
  br i1 %47, label %true479, label %false480

true479:                                          ; preds = %false471
  %XST482 = load double*, double** %XST
  %return483 = call double* @"slice@[F[FIIIIII"(double* %XST482, i64 1, i64 40, i64 1, i64 50, i64 0, i64 0)
  %return484 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return485 = call i64 @"sample_cdf@[FFI"(double* %return483, double %return484)
  br label %UnifiedReturnBlock

false480:                                         ; preds = %false471
  %return487 = call i64 @"eq@III"(i64 %idx441, i64 5)
  %48 = icmp ne i64 %return487, 0
  br i1 %48, label %true488, label %false489

true488:                                          ; preds = %false480
  %XST491 = load double*, double** %XST
  %return492 = call double* @"slice@[F[FIIIIII"(double* %XST491, i64 1, i64 50, i64 1, i64 60, i64 0, i64 0)
  %return493 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return494 = call i64 @"sample_cdf@[FFI"(double* %return492, double %return493)
  br label %UnifiedReturnBlock

false489:                                         ; preds = %false480
  %return496 = call i64 @"eq@III"(i64 %idx441, i64 6)
  %49 = icmp ne i64 %return496, 0
  br i1 %49, label %true497, label %false498

true497:                                          ; preds = %false489
  %XST500 = load double*, double** %XST
  %return501 = call double* @"slice@[F[FIIIIII"(double* %XST500, i64 1, i64 60, i64 1, i64 70, i64 0, i64 0)
  %return502 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return503 = call i64 @"sample_cdf@[FFI"(double* %return501, double %return502)
  br label %UnifiedReturnBlock

false498:                                         ; preds = %false489
  %return505 = call i64 @"eq@III"(i64 %idx441, i64 7)
  %50 = icmp ne i64 %return505, 0
  br i1 %50, label %true506, label %false507

true506:                                          ; preds = %false498
  %XST509 = load double*, double** %XST
  %return510 = call double* @"slice@[F[FIIIIII"(double* %XST509, i64 1, i64 70, i64 1, i64 80, i64 0, i64 0)
  %return511 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return512 = call i64 @"sample_cdf@[FFI"(double* %return510, double %return511)
  br label %UnifiedReturnBlock

false507:                                         ; preds = %false498
  %return514 = call i64 @"eq@III"(i64 %idx441, i64 8)
  %51 = icmp ne i64 %return514, 0
  br i1 %51, label %true515, label %false516

true515:                                          ; preds = %false507
  %XST518 = load double*, double** %XST
  %return519 = call double* @"slice@[F[FIIIIII"(double* %XST518, i64 1, i64 80, i64 1, i64 90, i64 0, i64 0)
  %return520 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return521 = call i64 @"sample_cdf@[FFI"(double* %return519, double %return520)
  br label %UnifiedReturnBlock

false516:                                         ; preds = %false507
  %return523 = call i64 @"eq@III"(i64 %idx441, i64 9)
  %52 = icmp ne i64 %return523, 0
  br i1 %52, label %true524, label %end

true524:                                          ; preds = %false516
  %XST526 = load double*, double** %XST
  %return527 = call double* @"slice@[F[FIIIIII"(double* %XST526, i64 1, i64 90, i64 1, i64 100, i64 0, i64 0)
  %return528 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return529 = call i64 @"sample_cdf@[FFI"(double* %return527, double %return528)
  br label %UnifiedReturnBlock

true533:                                          ; preds = %false439
  %idx536 = load i64, i64* %idx
  %return537 = call i64 @"eq@III"(i64 %idx536, i64 0)
  %53 = icmp ne i64 %return537, 0
  br i1 %53, label %true538, label %false539

false534:                                         ; preds = %false439
  %return635 = fcmp oeq double %res1, 1.200000e+01
  br i1 %return635, label %true637, label %false638

true538:                                          ; preds = %true533
  %XST541 = load double*, double** %XST
  %return542 = call double* @"slice@[F[FIIIIII"(double* %XST541, i64 1, i64 0, i64 1, i64 11, i64 0, i64 0)
  %return543 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return544 = call i64 @"sample_cdf@[FFI"(double* %return542, double %return543)
  br label %UnifiedReturnBlock

false539:                                         ; preds = %true533
  %return546 = call i64 @"eq@III"(i64 %idx536, i64 1)
  %54 = icmp ne i64 %return546, 0
  br i1 %54, label %true547, label %false548

true547:                                          ; preds = %false539
  %XST550 = load double*, double** %XST
  %return551 = call double* @"slice@[F[FIIIIII"(double* %XST550, i64 1, i64 11, i64 1, i64 22, i64 0, i64 0)
  %return552 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return553 = call i64 @"sample_cdf@[FFI"(double* %return551, double %return552)
  br label %UnifiedReturnBlock

false548:                                         ; preds = %false539
  %return555 = call i64 @"eq@III"(i64 %idx536, i64 2)
  %55 = icmp ne i64 %return555, 0
  br i1 %55, label %true556, label %false557

true556:                                          ; preds = %false548
  %XST559 = load double*, double** %XST
  %return560 = call double* @"slice@[F[FIIIIII"(double* %XST559, i64 1, i64 22, i64 1, i64 33, i64 0, i64 0)
  %return561 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return562 = call i64 @"sample_cdf@[FFI"(double* %return560, double %return561)
  br label %UnifiedReturnBlock

false557:                                         ; preds = %false548
  %return564 = call i64 @"eq@III"(i64 %idx536, i64 3)
  %56 = icmp ne i64 %return564, 0
  br i1 %56, label %true565, label %false566

true565:                                          ; preds = %false557
  %XST568 = load double*, double** %XST
  %return569 = call double* @"slice@[F[FIIIIII"(double* %XST568, i64 1, i64 33, i64 1, i64 44, i64 0, i64 0)
  %return570 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return571 = call i64 @"sample_cdf@[FFI"(double* %return569, double %return570)
  br label %UnifiedReturnBlock

false566:                                         ; preds = %false557
  %return573 = call i64 @"eq@III"(i64 %idx536, i64 4)
  %57 = icmp ne i64 %return573, 0
  br i1 %57, label %true574, label %false575

true574:                                          ; preds = %false566
  %XST577 = load double*, double** %XST
  %return578 = call double* @"slice@[F[FIIIIII"(double* %XST577, i64 1, i64 44, i64 1, i64 55, i64 0, i64 0)
  %return579 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return580 = call i64 @"sample_cdf@[FFI"(double* %return578, double %return579)
  br label %UnifiedReturnBlock

false575:                                         ; preds = %false566
  %return582 = call i64 @"eq@III"(i64 %idx536, i64 5)
  %58 = icmp ne i64 %return582, 0
  br i1 %58, label %true583, label %false584

true583:                                          ; preds = %false575
  %XST586 = load double*, double** %XST
  %return587 = call double* @"slice@[F[FIIIIII"(double* %XST586, i64 1, i64 55, i64 1, i64 66, i64 0, i64 0)
  %return588 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return589 = call i64 @"sample_cdf@[FFI"(double* %return587, double %return588)
  br label %UnifiedReturnBlock

false584:                                         ; preds = %false575
  %return591 = call i64 @"eq@III"(i64 %idx536, i64 6)
  %59 = icmp ne i64 %return591, 0
  br i1 %59, label %true592, label %false593

true592:                                          ; preds = %false584
  %XST595 = load double*, double** %XST
  %return596 = call double* @"slice@[F[FIIIIII"(double* %XST595, i64 1, i64 66, i64 1, i64 77, i64 0, i64 0)
  %return597 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return598 = call i64 @"sample_cdf@[FFI"(double* %return596, double %return597)
  br label %UnifiedReturnBlock

false593:                                         ; preds = %false584
  %return600 = call i64 @"eq@III"(i64 %idx536, i64 7)
  %60 = icmp ne i64 %return600, 0
  br i1 %60, label %true601, label %false602

true601:                                          ; preds = %false593
  %XST604 = load double*, double** %XST
  %return605 = call double* @"slice@[F[FIIIIII"(double* %XST604, i64 1, i64 77, i64 1, i64 88, i64 0, i64 0)
  %return606 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return607 = call i64 @"sample_cdf@[FFI"(double* %return605, double %return606)
  br label %UnifiedReturnBlock

false602:                                         ; preds = %false593
  %return609 = call i64 @"eq@III"(i64 %idx536, i64 8)
  %61 = icmp ne i64 %return609, 0
  br i1 %61, label %true610, label %false611

true610:                                          ; preds = %false602
  %XST613 = load double*, double** %XST
  %return614 = call double* @"slice@[F[FIIIIII"(double* %XST613, i64 1, i64 88, i64 1, i64 99, i64 0, i64 0)
  %return615 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return616 = call i64 @"sample_cdf@[FFI"(double* %return614, double %return615)
  br label %UnifiedReturnBlock

false611:                                         ; preds = %false602
  %return618 = call i64 @"eq@III"(i64 %idx536, i64 9)
  %62 = icmp ne i64 %return618, 0
  br i1 %62, label %true619, label %false620

true619:                                          ; preds = %false611
  %XST622 = load double*, double** %XST
  %return623 = call double* @"slice@[F[FIIIIII"(double* %XST622, i64 1, i64 99, i64 1, i64 110, i64 0, i64 0)
  %return624 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return625 = call i64 @"sample_cdf@[FFI"(double* %return623, double %return624)
  br label %UnifiedReturnBlock

false620:                                         ; preds = %false611
  %return627 = call i64 @"eq@III"(i64 %idx536, i64 10)
  %63 = icmp ne i64 %return627, 0
  br i1 %63, label %true628, label %end

true628:                                          ; preds = %false620
  %XST630 = load double*, double** %XST
  %return631 = call double* @"slice@[F[FIIIIII"(double* %XST630, i64 1, i64 110, i64 1, i64 121, i64 0, i64 0)
  %return632 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return633 = call i64 @"sample_cdf@[FFI"(double* %return631, double %return632)
  br label %UnifiedReturnBlock

true637:                                          ; preds = %false534
  %idx640 = load i64, i64* %idx
  %return641 = call i64 @"eq@III"(i64 %idx640, i64 0)
  %64 = icmp ne i64 %return641, 0
  br i1 %64, label %true642, label %false643

false638:                                         ; preds = %false534
  %return748 = fcmp oeq double %res1, 1.300000e+01
  br i1 %return748, label %true750, label %false751

true642:                                          ; preds = %true637
  %XST645 = load double*, double** %XST
  %return646 = call double* @"slice@[F[FIIIIII"(double* %XST645, i64 1, i64 0, i64 1, i64 12, i64 0, i64 0)
  %return647 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return648 = call i64 @"sample_cdf@[FFI"(double* %return646, double %return647)
  br label %UnifiedReturnBlock

false643:                                         ; preds = %true637
  %return650 = call i64 @"eq@III"(i64 %idx640, i64 1)
  %65 = icmp ne i64 %return650, 0
  br i1 %65, label %true651, label %false652

true651:                                          ; preds = %false643
  %XST654 = load double*, double** %XST
  %return655 = call double* @"slice@[F[FIIIIII"(double* %XST654, i64 1, i64 12, i64 1, i64 24, i64 0, i64 0)
  %return656 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return657 = call i64 @"sample_cdf@[FFI"(double* %return655, double %return656)
  br label %UnifiedReturnBlock

false652:                                         ; preds = %false643
  %return659 = call i64 @"eq@III"(i64 %idx640, i64 2)
  %66 = icmp ne i64 %return659, 0
  br i1 %66, label %true660, label %false661

true660:                                          ; preds = %false652
  %XST663 = load double*, double** %XST
  %return664 = call double* @"slice@[F[FIIIIII"(double* %XST663, i64 1, i64 24, i64 1, i64 36, i64 0, i64 0)
  %return665 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return666 = call i64 @"sample_cdf@[FFI"(double* %return664, double %return665)
  br label %UnifiedReturnBlock

false661:                                         ; preds = %false652
  %return668 = call i64 @"eq@III"(i64 %idx640, i64 3)
  %67 = icmp ne i64 %return668, 0
  br i1 %67, label %true669, label %false670

true669:                                          ; preds = %false661
  %XST672 = load double*, double** %XST
  %return673 = call double* @"slice@[F[FIIIIII"(double* %XST672, i64 1, i64 36, i64 1, i64 48, i64 0, i64 0)
  %return674 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return675 = call i64 @"sample_cdf@[FFI"(double* %return673, double %return674)
  br label %UnifiedReturnBlock

false670:                                         ; preds = %false661
  %return677 = call i64 @"eq@III"(i64 %idx640, i64 4)
  %68 = icmp ne i64 %return677, 0
  br i1 %68, label %true678, label %false679

true678:                                          ; preds = %false670
  %XST681 = load double*, double** %XST
  %return682 = call double* @"slice@[F[FIIIIII"(double* %XST681, i64 1, i64 48, i64 1, i64 60, i64 0, i64 0)
  %return683 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return684 = call i64 @"sample_cdf@[FFI"(double* %return682, double %return683)
  br label %UnifiedReturnBlock

false679:                                         ; preds = %false670
  %return686 = call i64 @"eq@III"(i64 %idx640, i64 5)
  %69 = icmp ne i64 %return686, 0
  br i1 %69, label %true687, label %false688

true687:                                          ; preds = %false679
  %XST690 = load double*, double** %XST
  %return691 = call double* @"slice@[F[FIIIIII"(double* %XST690, i64 1, i64 60, i64 1, i64 72, i64 0, i64 0)
  %return692 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return693 = call i64 @"sample_cdf@[FFI"(double* %return691, double %return692)
  br label %UnifiedReturnBlock

false688:                                         ; preds = %false679
  %return695 = call i64 @"eq@III"(i64 %idx640, i64 6)
  %70 = icmp ne i64 %return695, 0
  br i1 %70, label %true696, label %false697

true696:                                          ; preds = %false688
  %XST699 = load double*, double** %XST
  %return700 = call double* @"slice@[F[FIIIIII"(double* %XST699, i64 1, i64 72, i64 1, i64 84, i64 0, i64 0)
  %return701 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return702 = call i64 @"sample_cdf@[FFI"(double* %return700, double %return701)
  br label %UnifiedReturnBlock

false697:                                         ; preds = %false688
  %return704 = call i64 @"eq@III"(i64 %idx640, i64 7)
  %71 = icmp ne i64 %return704, 0
  br i1 %71, label %true705, label %false706

true705:                                          ; preds = %false697
  %XST708 = load double*, double** %XST
  %return709 = call double* @"slice@[F[FIIIIII"(double* %XST708, i64 1, i64 84, i64 1, i64 96, i64 0, i64 0)
  %return710 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return711 = call i64 @"sample_cdf@[FFI"(double* %return709, double %return710)
  br label %UnifiedReturnBlock

false706:                                         ; preds = %false697
  %return713 = call i64 @"eq@III"(i64 %idx640, i64 8)
  %72 = icmp ne i64 %return713, 0
  br i1 %72, label %true714, label %false715

true714:                                          ; preds = %false706
  %XST717 = load double*, double** %XST
  %return718 = call double* @"slice@[F[FIIIIII"(double* %XST717, i64 1, i64 96, i64 1, i64 108, i64 0, i64 0)
  %return719 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return720 = call i64 @"sample_cdf@[FFI"(double* %return718, double %return719)
  br label %UnifiedReturnBlock

false715:                                         ; preds = %false706
  %return722 = call i64 @"eq@III"(i64 %idx640, i64 9)
  %73 = icmp ne i64 %return722, 0
  br i1 %73, label %true723, label %false724

true723:                                          ; preds = %false715
  %XST726 = load double*, double** %XST
  %return727 = call double* @"slice@[F[FIIIIII"(double* %XST726, i64 1, i64 108, i64 1, i64 120, i64 0, i64 0)
  %return728 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return729 = call i64 @"sample_cdf@[FFI"(double* %return727, double %return728)
  br label %UnifiedReturnBlock

false724:                                         ; preds = %false715
  %return731 = call i64 @"eq@III"(i64 %idx640, i64 10)
  %74 = icmp ne i64 %return731, 0
  br i1 %74, label %true732, label %false733

true732:                                          ; preds = %false724
  %XST735 = load double*, double** %XST
  %return736 = call double* @"slice@[F[FIIIIII"(double* %XST735, i64 1, i64 120, i64 1, i64 132, i64 0, i64 0)
  %return737 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return738 = call i64 @"sample_cdf@[FFI"(double* %return736, double %return737)
  br label %UnifiedReturnBlock

false733:                                         ; preds = %false724
  %return740 = call i64 @"eq@III"(i64 %idx640, i64 11)
  %75 = icmp ne i64 %return740, 0
  br i1 %75, label %true741, label %end

true741:                                          ; preds = %false733
  %XST743 = load double*, double** %XST
  %return744 = call double* @"slice@[F[FIIIIII"(double* %XST743, i64 1, i64 132, i64 1, i64 144, i64 0, i64 0)
  %return745 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return746 = call i64 @"sample_cdf@[FFI"(double* %return744, double %return745)
  br label %UnifiedReturnBlock

true750:                                          ; preds = %false638
  %idx753 = load i64, i64* %idx
  %return754 = call i64 @"eq@III"(i64 %idx753, i64 0)
  %76 = icmp ne i64 %return754, 0
  br i1 %76, label %true755, label %false756

false751:                                         ; preds = %false638
  %return870 = fcmp oeq double %res1, 1.400000e+01
  br i1 %return870, label %true872, label %end

true755:                                          ; preds = %true750
  %XST758 = load double*, double** %XST
  %return759 = call double* @"slice@[F[FIIIIII"(double* %XST758, i64 1, i64 0, i64 1, i64 13, i64 0, i64 0)
  %return760 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return761 = call i64 @"sample_cdf@[FFI"(double* %return759, double %return760)
  br label %UnifiedReturnBlock

false756:                                         ; preds = %true750
  %return763 = call i64 @"eq@III"(i64 %idx753, i64 1)
  %77 = icmp ne i64 %return763, 0
  br i1 %77, label %true764, label %false765

true764:                                          ; preds = %false756
  %XST767 = load double*, double** %XST
  %return768 = call double* @"slice@[F[FIIIIII"(double* %XST767, i64 1, i64 13, i64 1, i64 26, i64 0, i64 0)
  %return769 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return770 = call i64 @"sample_cdf@[FFI"(double* %return768, double %return769)
  br label %UnifiedReturnBlock

false765:                                         ; preds = %false756
  %return772 = call i64 @"eq@III"(i64 %idx753, i64 2)
  %78 = icmp ne i64 %return772, 0
  br i1 %78, label %true773, label %false774

true773:                                          ; preds = %false765
  %XST776 = load double*, double** %XST
  %return777 = call double* @"slice@[F[FIIIIII"(double* %XST776, i64 1, i64 26, i64 1, i64 39, i64 0, i64 0)
  %return778 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return779 = call i64 @"sample_cdf@[FFI"(double* %return777, double %return778)
  br label %UnifiedReturnBlock

false774:                                         ; preds = %false765
  %return781 = call i64 @"eq@III"(i64 %idx753, i64 3)
  %79 = icmp ne i64 %return781, 0
  br i1 %79, label %true782, label %false783

true782:                                          ; preds = %false774
  %XST785 = load double*, double** %XST
  %return786 = call double* @"slice@[F[FIIIIII"(double* %XST785, i64 1, i64 39, i64 1, i64 52, i64 0, i64 0)
  %return787 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return788 = call i64 @"sample_cdf@[FFI"(double* %return786, double %return787)
  br label %UnifiedReturnBlock

false783:                                         ; preds = %false774
  %return790 = call i64 @"eq@III"(i64 %idx753, i64 4)
  %80 = icmp ne i64 %return790, 0
  br i1 %80, label %true791, label %false792

true791:                                          ; preds = %false783
  %XST794 = load double*, double** %XST
  %return795 = call double* @"slice@[F[FIIIIII"(double* %XST794, i64 1, i64 52, i64 1, i64 65, i64 0, i64 0)
  %return796 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return797 = call i64 @"sample_cdf@[FFI"(double* %return795, double %return796)
  br label %UnifiedReturnBlock

false792:                                         ; preds = %false783
  %return799 = call i64 @"eq@III"(i64 %idx753, i64 5)
  %81 = icmp ne i64 %return799, 0
  br i1 %81, label %true800, label %false801

true800:                                          ; preds = %false792
  %XST803 = load double*, double** %XST
  %return804 = call double* @"slice@[F[FIIIIII"(double* %XST803, i64 1, i64 65, i64 1, i64 78, i64 0, i64 0)
  %return805 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return806 = call i64 @"sample_cdf@[FFI"(double* %return804, double %return805)
  br label %UnifiedReturnBlock

false801:                                         ; preds = %false792
  %return808 = call i64 @"eq@III"(i64 %idx753, i64 6)
  %82 = icmp ne i64 %return808, 0
  br i1 %82, label %true809, label %false810

true809:                                          ; preds = %false801
  %XST812 = load double*, double** %XST
  %return813 = call double* @"slice@[F[FIIIIII"(double* %XST812, i64 1, i64 78, i64 1, i64 91, i64 0, i64 0)
  %return814 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return815 = call i64 @"sample_cdf@[FFI"(double* %return813, double %return814)
  br label %UnifiedReturnBlock

false810:                                         ; preds = %false801
  %return817 = call i64 @"eq@III"(i64 %idx753, i64 7)
  %83 = icmp ne i64 %return817, 0
  br i1 %83, label %true818, label %false819

true818:                                          ; preds = %false810
  %XST821 = load double*, double** %XST
  %return822 = call double* @"slice@[F[FIIIIII"(double* %XST821, i64 1, i64 91, i64 1, i64 104, i64 0, i64 0)
  %return823 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return824 = call i64 @"sample_cdf@[FFI"(double* %return822, double %return823)
  br label %UnifiedReturnBlock

false819:                                         ; preds = %false810
  %return826 = call i64 @"eq@III"(i64 %idx753, i64 8)
  %84 = icmp ne i64 %return826, 0
  br i1 %84, label %true827, label %false828

true827:                                          ; preds = %false819
  %XST830 = load double*, double** %XST
  %return831 = call double* @"slice@[F[FIIIIII"(double* %XST830, i64 1, i64 104, i64 1, i64 117, i64 0, i64 0)
  %return832 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return833 = call i64 @"sample_cdf@[FFI"(double* %return831, double %return832)
  br label %UnifiedReturnBlock

false828:                                         ; preds = %false819
  %return835 = call i64 @"eq@III"(i64 %idx753, i64 9)
  %85 = icmp ne i64 %return835, 0
  br i1 %85, label %true836, label %false837

true836:                                          ; preds = %false828
  %XST839 = load double*, double** %XST
  %return840 = call double* @"slice@[F[FIIIIII"(double* %XST839, i64 1, i64 117, i64 1, i64 130, i64 0, i64 0)
  %return841 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return842 = call i64 @"sample_cdf@[FFI"(double* %return840, double %return841)
  br label %UnifiedReturnBlock

false837:                                         ; preds = %false828
  %return844 = call i64 @"eq@III"(i64 %idx753, i64 10)
  %86 = icmp ne i64 %return844, 0
  br i1 %86, label %true845, label %false846

true845:                                          ; preds = %false837
  %XST848 = load double*, double** %XST
  %return849 = call double* @"slice@[F[FIIIIII"(double* %XST848, i64 1, i64 130, i64 1, i64 143, i64 0, i64 0)
  %return850 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return851 = call i64 @"sample_cdf@[FFI"(double* %return849, double %return850)
  br label %UnifiedReturnBlock

false846:                                         ; preds = %false837
  %return853 = call i64 @"eq@III"(i64 %idx753, i64 11)
  %87 = icmp ne i64 %return853, 0
  br i1 %87, label %true854, label %false855

true854:                                          ; preds = %false846
  %XST857 = load double*, double** %XST
  %return858 = call double* @"slice@[F[FIIIIII"(double* %XST857, i64 1, i64 143, i64 1, i64 156, i64 0, i64 0)
  %return859 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return860 = call i64 @"sample_cdf@[FFI"(double* %return858, double %return859)
  br label %UnifiedReturnBlock

false855:                                         ; preds = %false846
  %return862 = call i64 @"eq@III"(i64 %idx753, i64 12)
  %88 = icmp ne i64 %return862, 0
  br i1 %88, label %true863, label %end

true863:                                          ; preds = %false855
  %XST865 = load double*, double** %XST
  %return866 = call double* @"slice@[F[FIIIIII"(double* %XST865, i64 1, i64 156, i64 1, i64 169, i64 0, i64 0)
  %return867 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return868 = call i64 @"sample_cdf@[FFI"(double* %return866, double %return867)
  br label %UnifiedReturnBlock

true872:                                          ; preds = %false751
  %idx874 = load i64, i64* %idx
  %return875 = call i64 @"lt@III"(i64 %idx874, i64 7)
  %89 = icmp ne i64 %return875, 0
  br i1 %89, label %true876, label %false877

true876:                                          ; preds = %true872
  %return880 = call i64 @"eq@III"(i64 %idx874, i64 0)
  %90 = icmp ne i64 %return880, 0
  br i1 %90, label %true881, label %false882

false877:                                         ; preds = %true872
  %return942 = call i64 @"eq@III"(i64 %idx874, i64 7)
  %91 = icmp ne i64 %return942, 0
  br i1 %91, label %true943, label %false944

true881:                                          ; preds = %true876
  %XST884 = load double*, double** %XST
  %return885 = call double* @"slice@[F[FIIIIII"(double* %XST884, i64 1, i64 0, i64 1, i64 14, i64 0, i64 0)
  %return886 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return887 = call i64 @"sample_cdf@[FFI"(double* %return885, double %return886)
  br label %UnifiedReturnBlock

false882:                                         ; preds = %true876
  %return889 = call i64 @"eq@III"(i64 %idx874, i64 1)
  %92 = icmp ne i64 %return889, 0
  br i1 %92, label %true890, label %false891

true890:                                          ; preds = %false882
  %XST893 = load double*, double** %XST
  %return894 = call double* @"slice@[F[FIIIIII"(double* %XST893, i64 1, i64 14, i64 1, i64 28, i64 0, i64 0)
  %return895 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return896 = call i64 @"sample_cdf@[FFI"(double* %return894, double %return895)
  br label %UnifiedReturnBlock

false891:                                         ; preds = %false882
  %return898 = call i64 @"eq@III"(i64 %idx874, i64 2)
  %93 = icmp ne i64 %return898, 0
  br i1 %93, label %true899, label %false900

true899:                                          ; preds = %false891
  %XST902 = load double*, double** %XST
  %return903 = call double* @"slice@[F[FIIIIII"(double* %XST902, i64 1, i64 28, i64 1, i64 42, i64 0, i64 0)
  %return904 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return905 = call i64 @"sample_cdf@[FFI"(double* %return903, double %return904)
  br label %UnifiedReturnBlock

false900:                                         ; preds = %false891
  %return907 = call i64 @"eq@III"(i64 %idx874, i64 3)
  %94 = icmp ne i64 %return907, 0
  br i1 %94, label %true908, label %false909

true908:                                          ; preds = %false900
  %XST911 = load double*, double** %XST
  %return912 = call double* @"slice@[F[FIIIIII"(double* %XST911, i64 1, i64 42, i64 1, i64 56, i64 0, i64 0)
  %return913 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return914 = call i64 @"sample_cdf@[FFI"(double* %return912, double %return913)
  br label %UnifiedReturnBlock

false909:                                         ; preds = %false900
  %return916 = call i64 @"eq@III"(i64 %idx874, i64 4)
  %95 = icmp ne i64 %return916, 0
  br i1 %95, label %true917, label %false918

true917:                                          ; preds = %false909
  %XST920 = load double*, double** %XST
  %return921 = call double* @"slice@[F[FIIIIII"(double* %XST920, i64 1, i64 56, i64 1, i64 70, i64 0, i64 0)
  %return922 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return923 = call i64 @"sample_cdf@[FFI"(double* %return921, double %return922)
  br label %UnifiedReturnBlock

false918:                                         ; preds = %false909
  %return925 = call i64 @"eq@III"(i64 %idx874, i64 5)
  %96 = icmp ne i64 %return925, 0
  br i1 %96, label %true926, label %false927

true926:                                          ; preds = %false918
  %XST929 = load double*, double** %XST
  %return930 = call double* @"slice@[F[FIIIIII"(double* %XST929, i64 1, i64 70, i64 1, i64 84, i64 0, i64 0)
  %return931 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return932 = call i64 @"sample_cdf@[FFI"(double* %return930, double %return931)
  br label %UnifiedReturnBlock

false927:                                         ; preds = %false918
  %return934 = call i64 @"eq@III"(i64 %idx874, i64 6)
  %97 = icmp ne i64 %return934, 0
  br i1 %97, label %true935, label %end

true935:                                          ; preds = %false927
  %XST937 = load double*, double** %XST
  %return938 = call double* @"slice@[F[FIIIIII"(double* %XST937, i64 1, i64 84, i64 1, i64 98, i64 0, i64 0)
  %return939 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return940 = call i64 @"sample_cdf@[FFI"(double* %return938, double %return939)
  br label %UnifiedReturnBlock

true943:                                          ; preds = %false877
  %XST946 = load double*, double** %XST
  %return947 = call double* @"slice@[F[FIIIIII"(double* %XST946, i64 1, i64 98, i64 1, i64 112, i64 0, i64 0)
  %return948 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return949 = call i64 @"sample_cdf@[FFI"(double* %return947, double %return948)
  br label %UnifiedReturnBlock

false944:                                         ; preds = %false877
  %return951 = call i64 @"eq@III"(i64 %idx874, i64 8)
  %98 = icmp ne i64 %return951, 0
  br i1 %98, label %true952, label %false953

true952:                                          ; preds = %false944
  %XST955 = load double*, double** %XST
  %return956 = call double* @"slice@[F[FIIIIII"(double* %XST955, i64 1, i64 112, i64 1, i64 126, i64 0, i64 0)
  %return957 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return958 = call i64 @"sample_cdf@[FFI"(double* %return956, double %return957)
  br label %UnifiedReturnBlock

false953:                                         ; preds = %false944
  %return960 = call i64 @"eq@III"(i64 %idx874, i64 9)
  %99 = icmp ne i64 %return960, 0
  br i1 %99, label %true961, label %false962

true961:                                          ; preds = %false953
  %XST964 = load double*, double** %XST
  %return965 = call double* @"slice@[F[FIIIIII"(double* %XST964, i64 1, i64 126, i64 1, i64 140, i64 0, i64 0)
  %return966 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return967 = call i64 @"sample_cdf@[FFI"(double* %return965, double %return966)
  br label %UnifiedReturnBlock

false962:                                         ; preds = %false953
  %return969 = call i64 @"eq@III"(i64 %idx874, i64 10)
  %100 = icmp ne i64 %return969, 0
  br i1 %100, label %true970, label %false971

true970:                                          ; preds = %false962
  %XST973 = load double*, double** %XST
  %return974 = call double* @"slice@[F[FIIIIII"(double* %XST973, i64 1, i64 140, i64 1, i64 154, i64 0, i64 0)
  %return975 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return976 = call i64 @"sample_cdf@[FFI"(double* %return974, double %return975)
  br label %UnifiedReturnBlock

false971:                                         ; preds = %false962
  %return978 = call i64 @"eq@III"(i64 %idx874, i64 11)
  %101 = icmp ne i64 %return978, 0
  br i1 %101, label %true979, label %false980

true979:                                          ; preds = %false971
  %XST982 = load double*, double** %XST
  %return983 = call double* @"slice@[F[FIIIIII"(double* %XST982, i64 1, i64 154, i64 1, i64 168, i64 0, i64 0)
  %return984 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return985 = call i64 @"sample_cdf@[FFI"(double* %return983, double %return984)
  br label %UnifiedReturnBlock

false980:                                         ; preds = %false971
  %return987 = call i64 @"eq@III"(i64 %idx874, i64 12)
  %102 = icmp ne i64 %return987, 0
  br i1 %102, label %true988, label %false989

true988:                                          ; preds = %false980
  %XST991 = load double*, double** %XST
  %return992 = call double* @"slice@[F[FIIIIII"(double* %XST991, i64 1, i64 168, i64 1, i64 182, i64 0, i64 0)
  %return993 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return994 = call i64 @"sample_cdf@[FFI"(double* %return992, double %return993)
  br label %UnifiedReturnBlock

false989:                                         ; preds = %false980
  %return996 = call i64 @"eq@III"(i64 %idx874, i64 13)
  %103 = icmp ne i64 %return996, 0
  br i1 %103, label %true997, label %end

true997:                                          ; preds = %false989
  %XST999 = load double*, double** %XST
  %return1000 = call double* @"slice@[F[FIIIIII"(double* %XST999, i64 1, i64 182, i64 1, i64 196, i64 0, i64 0)
  %return1001 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1002 = call i64 @"sample_cdf@[FFI"(double* %return1000, double %return1001)
  br label %UnifiedReturnBlock

true1006:                                         ; preds = %false
  %return1009 = fcmp oeq double %res1, 1.500000e+01
  br i1 %return1009, label %true1011, label %false1012

true1011:                                         ; preds = %true1006
  %idx1014 = load i64, i64* %idx
  %return1015 = call i64 @"lt@III"(i64 %idx1014, i64 8)
  %104 = icmp ne i64 %return1015, 0
  br i1 %104, label %true1016, label %false1017

false1012:                                        ; preds = %true1006
  %return1153 = fcmp oeq double %res1, 1.600000e+01
  br i1 %return1153, label %true1155, label %false1156

true1016:                                         ; preds = %true1011
  %return1020 = call i64 @"eq@III"(i64 %idx1014, i64 0)
  %105 = icmp ne i64 %return1020, 0
  br i1 %105, label %true1021, label %false1022

false1017:                                        ; preds = %true1011
  %return1091 = call i64 @"eq@III"(i64 %idx1014, i64 8)
  %106 = icmp ne i64 %return1091, 0
  br i1 %106, label %true1092, label %false1093

true1021:                                         ; preds = %true1016
  %XST1024 = load double*, double** %XST
  %return1025 = call double* @"slice@[F[FIIIIII"(double* %XST1024, i64 1, i64 0, i64 1, i64 15, i64 0, i64 0)
  %return1026 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1027 = call i64 @"sample_cdf@[FFI"(double* %return1025, double %return1026)
  br label %UnifiedReturnBlock

false1022:                                        ; preds = %true1016
  %return1029 = call i64 @"eq@III"(i64 %idx1014, i64 1)
  %107 = icmp ne i64 %return1029, 0
  br i1 %107, label %true1030, label %false1031

true1030:                                         ; preds = %false1022
  %XST1033 = load double*, double** %XST
  %return1034 = call double* @"slice@[F[FIIIIII"(double* %XST1033, i64 1, i64 15, i64 1, i64 30, i64 0, i64 0)
  %return1035 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1036 = call i64 @"sample_cdf@[FFI"(double* %return1034, double %return1035)
  br label %UnifiedReturnBlock

false1031:                                        ; preds = %false1022
  %return1038 = call i64 @"eq@III"(i64 %idx1014, i64 2)
  %108 = icmp ne i64 %return1038, 0
  br i1 %108, label %true1039, label %false1040

true1039:                                         ; preds = %false1031
  %XST1042 = load double*, double** %XST
  %return1043 = call double* @"slice@[F[FIIIIII"(double* %XST1042, i64 1, i64 30, i64 1, i64 45, i64 0, i64 0)
  %return1044 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1045 = call i64 @"sample_cdf@[FFI"(double* %return1043, double %return1044)
  br label %UnifiedReturnBlock

false1040:                                        ; preds = %false1031
  %return1047 = call i64 @"eq@III"(i64 %idx1014, i64 3)
  %109 = icmp ne i64 %return1047, 0
  br i1 %109, label %true1048, label %false1049

true1048:                                         ; preds = %false1040
  %XST1051 = load double*, double** %XST
  %return1052 = call double* @"slice@[F[FIIIIII"(double* %XST1051, i64 1, i64 45, i64 1, i64 60, i64 0, i64 0)
  %return1053 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1054 = call i64 @"sample_cdf@[FFI"(double* %return1052, double %return1053)
  br label %UnifiedReturnBlock

false1049:                                        ; preds = %false1040
  %return1056 = call i64 @"eq@III"(i64 %idx1014, i64 4)
  %110 = icmp ne i64 %return1056, 0
  br i1 %110, label %true1057, label %false1058

true1057:                                         ; preds = %false1049
  %XST1060 = load double*, double** %XST
  %return1061 = call double* @"slice@[F[FIIIIII"(double* %XST1060, i64 1, i64 60, i64 1, i64 75, i64 0, i64 0)
  %return1062 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1063 = call i64 @"sample_cdf@[FFI"(double* %return1061, double %return1062)
  br label %UnifiedReturnBlock

false1058:                                        ; preds = %false1049
  %return1065 = call i64 @"eq@III"(i64 %idx1014, i64 5)
  %111 = icmp ne i64 %return1065, 0
  br i1 %111, label %true1066, label %false1067

true1066:                                         ; preds = %false1058
  %XST1069 = load double*, double** %XST
  %return1070 = call double* @"slice@[F[FIIIIII"(double* %XST1069, i64 1, i64 75, i64 1, i64 90, i64 0, i64 0)
  %return1071 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1072 = call i64 @"sample_cdf@[FFI"(double* %return1070, double %return1071)
  br label %UnifiedReturnBlock

false1067:                                        ; preds = %false1058
  %return1074 = call i64 @"eq@III"(i64 %idx1014, i64 6)
  %112 = icmp ne i64 %return1074, 0
  br i1 %112, label %true1075, label %false1076

true1075:                                         ; preds = %false1067
  %XST1078 = load double*, double** %XST
  %return1079 = call double* @"slice@[F[FIIIIII"(double* %XST1078, i64 1, i64 90, i64 1, i64 105, i64 0, i64 0)
  %return1080 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1081 = call i64 @"sample_cdf@[FFI"(double* %return1079, double %return1080)
  br label %UnifiedReturnBlock

false1076:                                        ; preds = %false1067
  %return1083 = call i64 @"eq@III"(i64 %idx1014, i64 7)
  %113 = icmp ne i64 %return1083, 0
  br i1 %113, label %true1084, label %end

true1084:                                         ; preds = %false1076
  %XST1086 = load double*, double** %XST
  %return1087 = call double* @"slice@[F[FIIIIII"(double* %XST1086, i64 1, i64 105, i64 1, i64 120, i64 0, i64 0)
  %return1088 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1089 = call i64 @"sample_cdf@[FFI"(double* %return1087, double %return1088)
  br label %UnifiedReturnBlock

true1092:                                         ; preds = %false1017
  %XST1095 = load double*, double** %XST
  %return1096 = call double* @"slice@[F[FIIIIII"(double* %XST1095, i64 1, i64 120, i64 1, i64 135, i64 0, i64 0)
  %return1097 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1098 = call i64 @"sample_cdf@[FFI"(double* %return1096, double %return1097)
  br label %UnifiedReturnBlock

false1093:                                        ; preds = %false1017
  %return1100 = call i64 @"eq@III"(i64 %idx1014, i64 9)
  %114 = icmp ne i64 %return1100, 0
  br i1 %114, label %true1101, label %false1102

true1101:                                         ; preds = %false1093
  %XST1104 = load double*, double** %XST
  %return1105 = call double* @"slice@[F[FIIIIII"(double* %XST1104, i64 1, i64 135, i64 1, i64 150, i64 0, i64 0)
  %return1106 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1107 = call i64 @"sample_cdf@[FFI"(double* %return1105, double %return1106)
  br label %UnifiedReturnBlock

false1102:                                        ; preds = %false1093
  %return1109 = call i64 @"eq@III"(i64 %idx1014, i64 10)
  %115 = icmp ne i64 %return1109, 0
  br i1 %115, label %true1110, label %false1111

true1110:                                         ; preds = %false1102
  %XST1113 = load double*, double** %XST
  %return1114 = call double* @"slice@[F[FIIIIII"(double* %XST1113, i64 1, i64 150, i64 1, i64 165, i64 0, i64 0)
  %return1115 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1116 = call i64 @"sample_cdf@[FFI"(double* %return1114, double %return1115)
  br label %UnifiedReturnBlock

false1111:                                        ; preds = %false1102
  %return1118 = call i64 @"eq@III"(i64 %idx1014, i64 11)
  %116 = icmp ne i64 %return1118, 0
  br i1 %116, label %true1119, label %false1120

true1119:                                         ; preds = %false1111
  %XST1122 = load double*, double** %XST
  %return1123 = call double* @"slice@[F[FIIIIII"(double* %XST1122, i64 1, i64 165, i64 1, i64 180, i64 0, i64 0)
  %return1124 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1125 = call i64 @"sample_cdf@[FFI"(double* %return1123, double %return1124)
  br label %UnifiedReturnBlock

false1120:                                        ; preds = %false1111
  %return1127 = call i64 @"eq@III"(i64 %idx1014, i64 12)
  %117 = icmp ne i64 %return1127, 0
  br i1 %117, label %true1128, label %false1129

true1128:                                         ; preds = %false1120
  %XST1131 = load double*, double** %XST
  %return1132 = call double* @"slice@[F[FIIIIII"(double* %XST1131, i64 1, i64 180, i64 1, i64 195, i64 0, i64 0)
  %return1133 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1134 = call i64 @"sample_cdf@[FFI"(double* %return1132, double %return1133)
  br label %UnifiedReturnBlock

false1129:                                        ; preds = %false1120
  %return1136 = call i64 @"eq@III"(i64 %idx1014, i64 13)
  %118 = icmp ne i64 %return1136, 0
  br i1 %118, label %true1137, label %false1138

true1137:                                         ; preds = %false1129
  %XST1140 = load double*, double** %XST
  %return1141 = call double* @"slice@[F[FIIIIII"(double* %XST1140, i64 1, i64 195, i64 1, i64 210, i64 0, i64 0)
  %return1142 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1143 = call i64 @"sample_cdf@[FFI"(double* %return1141, double %return1142)
  br label %UnifiedReturnBlock

false1138:                                        ; preds = %false1129
  %return1145 = call i64 @"eq@III"(i64 %idx1014, i64 14)
  %119 = icmp ne i64 %return1145, 0
  br i1 %119, label %true1146, label %end

true1146:                                         ; preds = %false1138
  %XST1148 = load double*, double** %XST
  %return1149 = call double* @"slice@[F[FIIIIII"(double* %XST1148, i64 1, i64 210, i64 1, i64 225, i64 0, i64 0)
  %return1150 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1151 = call i64 @"sample_cdf@[FFI"(double* %return1149, double %return1150)
  br label %UnifiedReturnBlock

true1155:                                         ; preds = %false1012
  %idx1158 = load i64, i64* %idx
  %return1159 = call i64 @"lt@III"(i64 %idx1158, i64 8)
  %120 = icmp ne i64 %return1159, 0
  br i1 %120, label %true1160, label %false1161

false1156:                                        ; preds = %false1012
  %return1306 = fcmp oeq double %res1, 1.700000e+01
  br i1 %return1306, label %true1308, label %false1309

true1160:                                         ; preds = %true1155
  %return1164 = call i64 @"eq@III"(i64 %idx1158, i64 0)
  %121 = icmp ne i64 %return1164, 0
  br i1 %121, label %true1165, label %false1166

false1161:                                        ; preds = %true1155
  %return1235 = call i64 @"eq@III"(i64 %idx1158, i64 8)
  %122 = icmp ne i64 %return1235, 0
  br i1 %122, label %true1236, label %false1237

true1165:                                         ; preds = %true1160
  %XST1168 = load double*, double** %XST
  %return1169 = call double* @"slice@[F[FIIIIII"(double* %XST1168, i64 1, i64 0, i64 1, i64 16, i64 0, i64 0)
  %return1170 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1171 = call i64 @"sample_cdf@[FFI"(double* %return1169, double %return1170)
  br label %UnifiedReturnBlock

false1166:                                        ; preds = %true1160
  %return1173 = call i64 @"eq@III"(i64 %idx1158, i64 1)
  %123 = icmp ne i64 %return1173, 0
  br i1 %123, label %true1174, label %false1175

true1174:                                         ; preds = %false1166
  %XST1177 = load double*, double** %XST
  %return1178 = call double* @"slice@[F[FIIIIII"(double* %XST1177, i64 1, i64 16, i64 1, i64 32, i64 0, i64 0)
  %return1179 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1180 = call i64 @"sample_cdf@[FFI"(double* %return1178, double %return1179)
  br label %UnifiedReturnBlock

false1175:                                        ; preds = %false1166
  %return1182 = call i64 @"eq@III"(i64 %idx1158, i64 2)
  %124 = icmp ne i64 %return1182, 0
  br i1 %124, label %true1183, label %false1184

true1183:                                         ; preds = %false1175
  %XST1186 = load double*, double** %XST
  %return1187 = call double* @"slice@[F[FIIIIII"(double* %XST1186, i64 1, i64 32, i64 1, i64 48, i64 0, i64 0)
  %return1188 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1189 = call i64 @"sample_cdf@[FFI"(double* %return1187, double %return1188)
  br label %UnifiedReturnBlock

false1184:                                        ; preds = %false1175
  %return1191 = call i64 @"eq@III"(i64 %idx1158, i64 3)
  %125 = icmp ne i64 %return1191, 0
  br i1 %125, label %true1192, label %false1193

true1192:                                         ; preds = %false1184
  %XST1195 = load double*, double** %XST
  %return1196 = call double* @"slice@[F[FIIIIII"(double* %XST1195, i64 1, i64 48, i64 1, i64 64, i64 0, i64 0)
  %return1197 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1198 = call i64 @"sample_cdf@[FFI"(double* %return1196, double %return1197)
  br label %UnifiedReturnBlock

false1193:                                        ; preds = %false1184
  %return1200 = call i64 @"eq@III"(i64 %idx1158, i64 4)
  %126 = icmp ne i64 %return1200, 0
  br i1 %126, label %true1201, label %false1202

true1201:                                         ; preds = %false1193
  %XST1204 = load double*, double** %XST
  %return1205 = call double* @"slice@[F[FIIIIII"(double* %XST1204, i64 1, i64 64, i64 1, i64 80, i64 0, i64 0)
  %return1206 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1207 = call i64 @"sample_cdf@[FFI"(double* %return1205, double %return1206)
  br label %UnifiedReturnBlock

false1202:                                        ; preds = %false1193
  %return1209 = call i64 @"eq@III"(i64 %idx1158, i64 5)
  %127 = icmp ne i64 %return1209, 0
  br i1 %127, label %true1210, label %false1211

true1210:                                         ; preds = %false1202
  %XST1213 = load double*, double** %XST
  %return1214 = call double* @"slice@[F[FIIIIII"(double* %XST1213, i64 1, i64 80, i64 1, i64 96, i64 0, i64 0)
  %return1215 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1216 = call i64 @"sample_cdf@[FFI"(double* %return1214, double %return1215)
  br label %UnifiedReturnBlock

false1211:                                        ; preds = %false1202
  %return1218 = call i64 @"eq@III"(i64 %idx1158, i64 6)
  %128 = icmp ne i64 %return1218, 0
  br i1 %128, label %true1219, label %false1220

true1219:                                         ; preds = %false1211
  %XST1222 = load double*, double** %XST
  %return1223 = call double* @"slice@[F[FIIIIII"(double* %XST1222, i64 1, i64 96, i64 1, i64 112, i64 0, i64 0)
  %return1224 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1225 = call i64 @"sample_cdf@[FFI"(double* %return1223, double %return1224)
  br label %UnifiedReturnBlock

false1220:                                        ; preds = %false1211
  %return1227 = call i64 @"eq@III"(i64 %idx1158, i64 7)
  %129 = icmp ne i64 %return1227, 0
  br i1 %129, label %true1228, label %end

true1228:                                         ; preds = %false1220
  %XST1230 = load double*, double** %XST
  %return1231 = call double* @"slice@[F[FIIIIII"(double* %XST1230, i64 1, i64 112, i64 1, i64 128, i64 0, i64 0)
  %return1232 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1233 = call i64 @"sample_cdf@[FFI"(double* %return1231, double %return1232)
  br label %UnifiedReturnBlock

true1236:                                         ; preds = %false1161
  %XST1239 = load double*, double** %XST
  %return1240 = call double* @"slice@[F[FIIIIII"(double* %XST1239, i64 1, i64 128, i64 1, i64 144, i64 0, i64 0)
  %return1241 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1242 = call i64 @"sample_cdf@[FFI"(double* %return1240, double %return1241)
  br label %UnifiedReturnBlock

false1237:                                        ; preds = %false1161
  %return1244 = call i64 @"eq@III"(i64 %idx1158, i64 9)
  %130 = icmp ne i64 %return1244, 0
  br i1 %130, label %true1245, label %false1246

true1245:                                         ; preds = %false1237
  %XST1248 = load double*, double** %XST
  %return1249 = call double* @"slice@[F[FIIIIII"(double* %XST1248, i64 1, i64 144, i64 1, i64 160, i64 0, i64 0)
  %return1250 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1251 = call i64 @"sample_cdf@[FFI"(double* %return1249, double %return1250)
  br label %UnifiedReturnBlock

false1246:                                        ; preds = %false1237
  %return1253 = call i64 @"eq@III"(i64 %idx1158, i64 10)
  %131 = icmp ne i64 %return1253, 0
  br i1 %131, label %true1254, label %false1255

true1254:                                         ; preds = %false1246
  %XST1257 = load double*, double** %XST
  %return1258 = call double* @"slice@[F[FIIIIII"(double* %XST1257, i64 1, i64 160, i64 1, i64 176, i64 0, i64 0)
  %return1259 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1260 = call i64 @"sample_cdf@[FFI"(double* %return1258, double %return1259)
  br label %UnifiedReturnBlock

false1255:                                        ; preds = %false1246
  %return1262 = call i64 @"eq@III"(i64 %idx1158, i64 11)
  %132 = icmp ne i64 %return1262, 0
  br i1 %132, label %true1263, label %false1264

true1263:                                         ; preds = %false1255
  %XST1266 = load double*, double** %XST
  %return1267 = call double* @"slice@[F[FIIIIII"(double* %XST1266, i64 1, i64 176, i64 1, i64 192, i64 0, i64 0)
  %return1268 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1269 = call i64 @"sample_cdf@[FFI"(double* %return1267, double %return1268)
  br label %UnifiedReturnBlock

false1264:                                        ; preds = %false1255
  %return1271 = call i64 @"eq@III"(i64 %idx1158, i64 12)
  %133 = icmp ne i64 %return1271, 0
  br i1 %133, label %true1272, label %false1273

true1272:                                         ; preds = %false1264
  %XST1275 = load double*, double** %XST
  %return1276 = call double* @"slice@[F[FIIIIII"(double* %XST1275, i64 1, i64 192, i64 1, i64 208, i64 0, i64 0)
  %return1277 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1278 = call i64 @"sample_cdf@[FFI"(double* %return1276, double %return1277)
  br label %UnifiedReturnBlock

false1273:                                        ; preds = %false1264
  %return1280 = call i64 @"eq@III"(i64 %idx1158, i64 13)
  %134 = icmp ne i64 %return1280, 0
  br i1 %134, label %true1281, label %false1282

true1281:                                         ; preds = %false1273
  %XST1284 = load double*, double** %XST
  %return1285 = call double* @"slice@[F[FIIIIII"(double* %XST1284, i64 1, i64 208, i64 1, i64 224, i64 0, i64 0)
  %return1286 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1287 = call i64 @"sample_cdf@[FFI"(double* %return1285, double %return1286)
  br label %UnifiedReturnBlock

false1282:                                        ; preds = %false1273
  %return1289 = call i64 @"eq@III"(i64 %idx1158, i64 14)
  %135 = icmp ne i64 %return1289, 0
  br i1 %135, label %true1290, label %false1291

true1290:                                         ; preds = %false1282
  %XST1293 = load double*, double** %XST
  %return1294 = call double* @"slice@[F[FIIIIII"(double* %XST1293, i64 1, i64 224, i64 1, i64 240, i64 0, i64 0)
  %return1295 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1296 = call i64 @"sample_cdf@[FFI"(double* %return1294, double %return1295)
  br label %UnifiedReturnBlock

false1291:                                        ; preds = %false1282
  %return1298 = call i64 @"eq@III"(i64 %idx1158, i64 15)
  %136 = icmp ne i64 %return1298, 0
  br i1 %136, label %true1299, label %end

true1299:                                         ; preds = %false1291
  %XST1301 = load double*, double** %XST
  %return1302 = call double* @"slice@[F[FIIIIII"(double* %XST1301, i64 1, i64 240, i64 1, i64 256, i64 0, i64 0)
  %return1303 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1304 = call i64 @"sample_cdf@[FFI"(double* %return1302, double %return1303)
  br label %UnifiedReturnBlock

true1308:                                         ; preds = %false1156
  %idx1311 = load i64, i64* %idx
  %return1312 = call i64 @"lt@III"(i64 %idx1311, i64 9)
  %137 = icmp ne i64 %return1312, 0
  br i1 %137, label %true1313, label %false1314

false1309:                                        ; preds = %false1156
  %return1468 = fcmp oeq double %res1, 1.800000e+01
  br i1 %return1468, label %true1470, label %false1471

true1313:                                         ; preds = %true1308
  %return1317 = call i64 @"eq@III"(i64 %idx1311, i64 0)
  %138 = icmp ne i64 %return1317, 0
  br i1 %138, label %true1318, label %false1319

false1314:                                        ; preds = %true1308
  %return1397 = call i64 @"eq@III"(i64 %idx1311, i64 9)
  %139 = icmp ne i64 %return1397, 0
  br i1 %139, label %true1398, label %false1399

true1318:                                         ; preds = %true1313
  %XST1321 = load double*, double** %XST
  %return1322 = call double* @"slice@[F[FIIIIII"(double* %XST1321, i64 1, i64 0, i64 1, i64 17, i64 0, i64 0)
  %return1323 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1324 = call i64 @"sample_cdf@[FFI"(double* %return1322, double %return1323)
  br label %UnifiedReturnBlock

false1319:                                        ; preds = %true1313
  %return1326 = call i64 @"eq@III"(i64 %idx1311, i64 1)
  %140 = icmp ne i64 %return1326, 0
  br i1 %140, label %true1327, label %false1328

true1327:                                         ; preds = %false1319
  %XST1330 = load double*, double** %XST
  %return1331 = call double* @"slice@[F[FIIIIII"(double* %XST1330, i64 1, i64 17, i64 1, i64 34, i64 0, i64 0)
  %return1332 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1333 = call i64 @"sample_cdf@[FFI"(double* %return1331, double %return1332)
  br label %UnifiedReturnBlock

false1328:                                        ; preds = %false1319
  %return1335 = call i64 @"eq@III"(i64 %idx1311, i64 2)
  %141 = icmp ne i64 %return1335, 0
  br i1 %141, label %true1336, label %false1337

true1336:                                         ; preds = %false1328
  %XST1339 = load double*, double** %XST
  %return1340 = call double* @"slice@[F[FIIIIII"(double* %XST1339, i64 1, i64 34, i64 1, i64 51, i64 0, i64 0)
  %return1341 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1342 = call i64 @"sample_cdf@[FFI"(double* %return1340, double %return1341)
  br label %UnifiedReturnBlock

false1337:                                        ; preds = %false1328
  %return1344 = call i64 @"eq@III"(i64 %idx1311, i64 3)
  %142 = icmp ne i64 %return1344, 0
  br i1 %142, label %true1345, label %false1346

true1345:                                         ; preds = %false1337
  %XST1348 = load double*, double** %XST
  %return1349 = call double* @"slice@[F[FIIIIII"(double* %XST1348, i64 1, i64 51, i64 1, i64 68, i64 0, i64 0)
  %return1350 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1351 = call i64 @"sample_cdf@[FFI"(double* %return1349, double %return1350)
  br label %UnifiedReturnBlock

false1346:                                        ; preds = %false1337
  %return1353 = call i64 @"eq@III"(i64 %idx1311, i64 4)
  %143 = icmp ne i64 %return1353, 0
  br i1 %143, label %true1354, label %false1355

true1354:                                         ; preds = %false1346
  %XST1357 = load double*, double** %XST
  %return1358 = call double* @"slice@[F[FIIIIII"(double* %XST1357, i64 1, i64 68, i64 1, i64 85, i64 0, i64 0)
  %return1359 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1360 = call i64 @"sample_cdf@[FFI"(double* %return1358, double %return1359)
  br label %UnifiedReturnBlock

false1355:                                        ; preds = %false1346
  %return1362 = call i64 @"eq@III"(i64 %idx1311, i64 5)
  %144 = icmp ne i64 %return1362, 0
  br i1 %144, label %true1363, label %false1364

true1363:                                         ; preds = %false1355
  %XST1366 = load double*, double** %XST
  %return1367 = call double* @"slice@[F[FIIIIII"(double* %XST1366, i64 1, i64 85, i64 1, i64 102, i64 0, i64 0)
  %return1368 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1369 = call i64 @"sample_cdf@[FFI"(double* %return1367, double %return1368)
  br label %UnifiedReturnBlock

false1364:                                        ; preds = %false1355
  %return1371 = call i64 @"eq@III"(i64 %idx1311, i64 6)
  %145 = icmp ne i64 %return1371, 0
  br i1 %145, label %true1372, label %false1373

true1372:                                         ; preds = %false1364
  %XST1375 = load double*, double** %XST
  %return1376 = call double* @"slice@[F[FIIIIII"(double* %XST1375, i64 1, i64 102, i64 1, i64 119, i64 0, i64 0)
  %return1377 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1378 = call i64 @"sample_cdf@[FFI"(double* %return1376, double %return1377)
  br label %UnifiedReturnBlock

false1373:                                        ; preds = %false1364
  %return1380 = call i64 @"eq@III"(i64 %idx1311, i64 7)
  %146 = icmp ne i64 %return1380, 0
  br i1 %146, label %true1381, label %false1382

true1381:                                         ; preds = %false1373
  %XST1384 = load double*, double** %XST
  %return1385 = call double* @"slice@[F[FIIIIII"(double* %XST1384, i64 1, i64 119, i64 1, i64 136, i64 0, i64 0)
  %return1386 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1387 = call i64 @"sample_cdf@[FFI"(double* %return1385, double %return1386)
  br label %UnifiedReturnBlock

false1382:                                        ; preds = %false1373
  %return1389 = call i64 @"eq@III"(i64 %idx1311, i64 8)
  %147 = icmp ne i64 %return1389, 0
  br i1 %147, label %true1390, label %end

true1390:                                         ; preds = %false1382
  %XST1392 = load double*, double** %XST
  %return1393 = call double* @"slice@[F[FIIIIII"(double* %XST1392, i64 1, i64 136, i64 1, i64 153, i64 0, i64 0)
  %return1394 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1395 = call i64 @"sample_cdf@[FFI"(double* %return1393, double %return1394)
  br label %UnifiedReturnBlock

true1398:                                         ; preds = %false1314
  %XST1401 = load double*, double** %XST
  %return1402 = call double* @"slice@[F[FIIIIII"(double* %XST1401, i64 1, i64 153, i64 1, i64 170, i64 0, i64 0)
  %return1403 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1404 = call i64 @"sample_cdf@[FFI"(double* %return1402, double %return1403)
  br label %UnifiedReturnBlock

false1399:                                        ; preds = %false1314
  %return1406 = call i64 @"eq@III"(i64 %idx1311, i64 10)
  %148 = icmp ne i64 %return1406, 0
  br i1 %148, label %true1407, label %false1408

true1407:                                         ; preds = %false1399
  %XST1410 = load double*, double** %XST
  %return1411 = call double* @"slice@[F[FIIIIII"(double* %XST1410, i64 1, i64 170, i64 1, i64 187, i64 0, i64 0)
  %return1412 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1413 = call i64 @"sample_cdf@[FFI"(double* %return1411, double %return1412)
  br label %UnifiedReturnBlock

false1408:                                        ; preds = %false1399
  %return1415 = call i64 @"eq@III"(i64 %idx1311, i64 11)
  %149 = icmp ne i64 %return1415, 0
  br i1 %149, label %true1416, label %false1417

true1416:                                         ; preds = %false1408
  %XST1419 = load double*, double** %XST
  %return1420 = call double* @"slice@[F[FIIIIII"(double* %XST1419, i64 1, i64 187, i64 1, i64 204, i64 0, i64 0)
  %return1421 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1422 = call i64 @"sample_cdf@[FFI"(double* %return1420, double %return1421)
  br label %UnifiedReturnBlock

false1417:                                        ; preds = %false1408
  %return1424 = call i64 @"eq@III"(i64 %idx1311, i64 12)
  %150 = icmp ne i64 %return1424, 0
  br i1 %150, label %true1425, label %false1426

true1425:                                         ; preds = %false1417
  %XST1428 = load double*, double** %XST
  %return1429 = call double* @"slice@[F[FIIIIII"(double* %XST1428, i64 1, i64 204, i64 1, i64 221, i64 0, i64 0)
  %return1430 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1431 = call i64 @"sample_cdf@[FFI"(double* %return1429, double %return1430)
  br label %UnifiedReturnBlock

false1426:                                        ; preds = %false1417
  %return1433 = call i64 @"eq@III"(i64 %idx1311, i64 13)
  %151 = icmp ne i64 %return1433, 0
  br i1 %151, label %true1434, label %false1435

true1434:                                         ; preds = %false1426
  %XST1437 = load double*, double** %XST
  %return1438 = call double* @"slice@[F[FIIIIII"(double* %XST1437, i64 1, i64 221, i64 1, i64 238, i64 0, i64 0)
  %return1439 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1440 = call i64 @"sample_cdf@[FFI"(double* %return1438, double %return1439)
  br label %UnifiedReturnBlock

false1435:                                        ; preds = %false1426
  %return1442 = call i64 @"eq@III"(i64 %idx1311, i64 14)
  %152 = icmp ne i64 %return1442, 0
  br i1 %152, label %true1443, label %false1444

true1443:                                         ; preds = %false1435
  %XST1446 = load double*, double** %XST
  %return1447 = call double* @"slice@[F[FIIIIII"(double* %XST1446, i64 1, i64 238, i64 1, i64 255, i64 0, i64 0)
  %return1448 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1449 = call i64 @"sample_cdf@[FFI"(double* %return1447, double %return1448)
  br label %UnifiedReturnBlock

false1444:                                        ; preds = %false1435
  %return1451 = call i64 @"eq@III"(i64 %idx1311, i64 15)
  %153 = icmp ne i64 %return1451, 0
  br i1 %153, label %true1452, label %false1453

true1452:                                         ; preds = %false1444
  %XST1455 = load double*, double** %XST
  %return1456 = call double* @"slice@[F[FIIIIII"(double* %XST1455, i64 1, i64 255, i64 1, i64 272, i64 0, i64 0)
  %return1457 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1458 = call i64 @"sample_cdf@[FFI"(double* %return1456, double %return1457)
  br label %UnifiedReturnBlock

false1453:                                        ; preds = %false1444
  %return1460 = call i64 @"eq@III"(i64 %idx1311, i64 16)
  %154 = icmp ne i64 %return1460, 0
  br i1 %154, label %true1461, label %end

true1461:                                         ; preds = %false1453
  %XST1463 = load double*, double** %XST
  %return1464 = call double* @"slice@[F[FIIIIII"(double* %XST1463, i64 1, i64 272, i64 1, i64 289, i64 0, i64 0)
  %return1465 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1466 = call i64 @"sample_cdf@[FFI"(double* %return1464, double %return1465)
  br label %UnifiedReturnBlock

true1470:                                         ; preds = %false1309
  %idx1473 = load i64, i64* %idx
  %return1474 = call i64 @"lt@III"(i64 %idx1473, i64 9)
  %155 = icmp ne i64 %return1474, 0
  br i1 %155, label %true1475, label %false1476

false1471:                                        ; preds = %false1309
  %return1639 = fcmp oeq double %res1, 1.900000e+01
  br i1 %return1639, label %true1641, label %false1642

true1475:                                         ; preds = %true1470
  %return1479 = call i64 @"eq@III"(i64 %idx1473, i64 0)
  %156 = icmp ne i64 %return1479, 0
  br i1 %156, label %true1480, label %false1481

false1476:                                        ; preds = %true1470
  %return1559 = call i64 @"eq@III"(i64 %idx1473, i64 9)
  %157 = icmp ne i64 %return1559, 0
  br i1 %157, label %true1560, label %false1561

true1480:                                         ; preds = %true1475
  %XST1483 = load double*, double** %XST
  %return1484 = call double* @"slice@[F[FIIIIII"(double* %XST1483, i64 1, i64 0, i64 1, i64 18, i64 0, i64 0)
  %return1485 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1486 = call i64 @"sample_cdf@[FFI"(double* %return1484, double %return1485)
  br label %UnifiedReturnBlock

false1481:                                        ; preds = %true1475
  %return1488 = call i64 @"eq@III"(i64 %idx1473, i64 1)
  %158 = icmp ne i64 %return1488, 0
  br i1 %158, label %true1489, label %false1490

true1489:                                         ; preds = %false1481
  %XST1492 = load double*, double** %XST
  %return1493 = call double* @"slice@[F[FIIIIII"(double* %XST1492, i64 1, i64 18, i64 1, i64 36, i64 0, i64 0)
  %return1494 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1495 = call i64 @"sample_cdf@[FFI"(double* %return1493, double %return1494)
  br label %UnifiedReturnBlock

false1490:                                        ; preds = %false1481
  %return1497 = call i64 @"eq@III"(i64 %idx1473, i64 2)
  %159 = icmp ne i64 %return1497, 0
  br i1 %159, label %true1498, label %false1499

true1498:                                         ; preds = %false1490
  %XST1501 = load double*, double** %XST
  %return1502 = call double* @"slice@[F[FIIIIII"(double* %XST1501, i64 1, i64 36, i64 1, i64 54, i64 0, i64 0)
  %return1503 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1504 = call i64 @"sample_cdf@[FFI"(double* %return1502, double %return1503)
  br label %UnifiedReturnBlock

false1499:                                        ; preds = %false1490
  %return1506 = call i64 @"eq@III"(i64 %idx1473, i64 3)
  %160 = icmp ne i64 %return1506, 0
  br i1 %160, label %true1507, label %false1508

true1507:                                         ; preds = %false1499
  %XST1510 = load double*, double** %XST
  %return1511 = call double* @"slice@[F[FIIIIII"(double* %XST1510, i64 1, i64 54, i64 1, i64 72, i64 0, i64 0)
  %return1512 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1513 = call i64 @"sample_cdf@[FFI"(double* %return1511, double %return1512)
  br label %UnifiedReturnBlock

false1508:                                        ; preds = %false1499
  %return1515 = call i64 @"eq@III"(i64 %idx1473, i64 4)
  %161 = icmp ne i64 %return1515, 0
  br i1 %161, label %true1516, label %false1517

true1516:                                         ; preds = %false1508
  %XST1519 = load double*, double** %XST
  %return1520 = call double* @"slice@[F[FIIIIII"(double* %XST1519, i64 1, i64 72, i64 1, i64 90, i64 0, i64 0)
  %return1521 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1522 = call i64 @"sample_cdf@[FFI"(double* %return1520, double %return1521)
  br label %UnifiedReturnBlock

false1517:                                        ; preds = %false1508
  %return1524 = call i64 @"eq@III"(i64 %idx1473, i64 5)
  %162 = icmp ne i64 %return1524, 0
  br i1 %162, label %true1525, label %false1526

true1525:                                         ; preds = %false1517
  %XST1528 = load double*, double** %XST
  %return1529 = call double* @"slice@[F[FIIIIII"(double* %XST1528, i64 1, i64 90, i64 1, i64 108, i64 0, i64 0)
  %return1530 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1531 = call i64 @"sample_cdf@[FFI"(double* %return1529, double %return1530)
  br label %UnifiedReturnBlock

false1526:                                        ; preds = %false1517
  %return1533 = call i64 @"eq@III"(i64 %idx1473, i64 6)
  %163 = icmp ne i64 %return1533, 0
  br i1 %163, label %true1534, label %false1535

true1534:                                         ; preds = %false1526
  %XST1537 = load double*, double** %XST
  %return1538 = call double* @"slice@[F[FIIIIII"(double* %XST1537, i64 1, i64 108, i64 1, i64 126, i64 0, i64 0)
  %return1539 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1540 = call i64 @"sample_cdf@[FFI"(double* %return1538, double %return1539)
  br label %UnifiedReturnBlock

false1535:                                        ; preds = %false1526
  %return1542 = call i64 @"eq@III"(i64 %idx1473, i64 7)
  %164 = icmp ne i64 %return1542, 0
  br i1 %164, label %true1543, label %false1544

true1543:                                         ; preds = %false1535
  %XST1546 = load double*, double** %XST
  %return1547 = call double* @"slice@[F[FIIIIII"(double* %XST1546, i64 1, i64 126, i64 1, i64 144, i64 0, i64 0)
  %return1548 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1549 = call i64 @"sample_cdf@[FFI"(double* %return1547, double %return1548)
  br label %UnifiedReturnBlock

false1544:                                        ; preds = %false1535
  %return1551 = call i64 @"eq@III"(i64 %idx1473, i64 8)
  %165 = icmp ne i64 %return1551, 0
  br i1 %165, label %true1552, label %end

true1552:                                         ; preds = %false1544
  %XST1554 = load double*, double** %XST
  %return1555 = call double* @"slice@[F[FIIIIII"(double* %XST1554, i64 1, i64 144, i64 1, i64 162, i64 0, i64 0)
  %return1556 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1557 = call i64 @"sample_cdf@[FFI"(double* %return1555, double %return1556)
  br label %UnifiedReturnBlock

true1560:                                         ; preds = %false1476
  %XST1563 = load double*, double** %XST
  %return1564 = call double* @"slice@[F[FIIIIII"(double* %XST1563, i64 1, i64 162, i64 1, i64 180, i64 0, i64 0)
  %return1565 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1566 = call i64 @"sample_cdf@[FFI"(double* %return1564, double %return1565)
  br label %UnifiedReturnBlock

false1561:                                        ; preds = %false1476
  %return1568 = call i64 @"eq@III"(i64 %idx1473, i64 10)
  %166 = icmp ne i64 %return1568, 0
  br i1 %166, label %true1569, label %false1570

true1569:                                         ; preds = %false1561
  %XST1572 = load double*, double** %XST
  %return1573 = call double* @"slice@[F[FIIIIII"(double* %XST1572, i64 1, i64 180, i64 1, i64 198, i64 0, i64 0)
  %return1574 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1575 = call i64 @"sample_cdf@[FFI"(double* %return1573, double %return1574)
  br label %UnifiedReturnBlock

false1570:                                        ; preds = %false1561
  %return1577 = call i64 @"eq@III"(i64 %idx1473, i64 11)
  %167 = icmp ne i64 %return1577, 0
  br i1 %167, label %true1578, label %false1579

true1578:                                         ; preds = %false1570
  %XST1581 = load double*, double** %XST
  %return1582 = call double* @"slice@[F[FIIIIII"(double* %XST1581, i64 1, i64 198, i64 1, i64 216, i64 0, i64 0)
  %return1583 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1584 = call i64 @"sample_cdf@[FFI"(double* %return1582, double %return1583)
  br label %UnifiedReturnBlock

false1579:                                        ; preds = %false1570
  %return1586 = call i64 @"eq@III"(i64 %idx1473, i64 12)
  %168 = icmp ne i64 %return1586, 0
  br i1 %168, label %true1587, label %false1588

true1587:                                         ; preds = %false1579
  %XST1590 = load double*, double** %XST
  %return1591 = call double* @"slice@[F[FIIIIII"(double* %XST1590, i64 1, i64 216, i64 1, i64 234, i64 0, i64 0)
  %return1592 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1593 = call i64 @"sample_cdf@[FFI"(double* %return1591, double %return1592)
  br label %UnifiedReturnBlock

false1588:                                        ; preds = %false1579
  %return1595 = call i64 @"eq@III"(i64 %idx1473, i64 13)
  %169 = icmp ne i64 %return1595, 0
  br i1 %169, label %true1596, label %false1597

true1596:                                         ; preds = %false1588
  %XST1599 = load double*, double** %XST
  %return1600 = call double* @"slice@[F[FIIIIII"(double* %XST1599, i64 1, i64 234, i64 1, i64 252, i64 0, i64 0)
  %return1601 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1602 = call i64 @"sample_cdf@[FFI"(double* %return1600, double %return1601)
  br label %UnifiedReturnBlock

false1597:                                        ; preds = %false1588
  %return1604 = call i64 @"eq@III"(i64 %idx1473, i64 14)
  %170 = icmp ne i64 %return1604, 0
  br i1 %170, label %true1605, label %false1606

true1605:                                         ; preds = %false1597
  %XST1608 = load double*, double** %XST
  %return1609 = call double* @"slice@[F[FIIIIII"(double* %XST1608, i64 1, i64 252, i64 1, i64 270, i64 0, i64 0)
  %return1610 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1611 = call i64 @"sample_cdf@[FFI"(double* %return1609, double %return1610)
  br label %UnifiedReturnBlock

false1606:                                        ; preds = %false1597
  %return1613 = call i64 @"eq@III"(i64 %idx1473, i64 15)
  %171 = icmp ne i64 %return1613, 0
  br i1 %171, label %true1614, label %false1615

true1614:                                         ; preds = %false1606
  %XST1617 = load double*, double** %XST
  %return1618 = call double* @"slice@[F[FIIIIII"(double* %XST1617, i64 1, i64 270, i64 1, i64 288, i64 0, i64 0)
  %return1619 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1620 = call i64 @"sample_cdf@[FFI"(double* %return1618, double %return1619)
  br label %UnifiedReturnBlock

false1615:                                        ; preds = %false1606
  %return1622 = call i64 @"eq@III"(i64 %idx1473, i64 16)
  %172 = icmp ne i64 %return1622, 0
  br i1 %172, label %true1623, label %false1624

true1623:                                         ; preds = %false1615
  %XST1626 = load double*, double** %XST
  %return1627 = call double* @"slice@[F[FIIIIII"(double* %XST1626, i64 1, i64 288, i64 1, i64 306, i64 0, i64 0)
  %return1628 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1629 = call i64 @"sample_cdf@[FFI"(double* %return1627, double %return1628)
  br label %UnifiedReturnBlock

false1624:                                        ; preds = %false1615
  %return1631 = call i64 @"eq@III"(i64 %idx1473, i64 17)
  %173 = icmp ne i64 %return1631, 0
  br i1 %173, label %true1632, label %end

true1632:                                         ; preds = %false1624
  %XST1634 = load double*, double** %XST
  %return1635 = call double* @"slice@[F[FIIIIII"(double* %XST1634, i64 1, i64 306, i64 1, i64 324, i64 0, i64 0)
  %return1636 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1637 = call i64 @"sample_cdf@[FFI"(double* %return1635, double %return1636)
  br label %UnifiedReturnBlock

true1641:                                         ; preds = %false1471
  %idx1644 = load i64, i64* %idx
  %return1645 = call i64 @"lt@III"(i64 %idx1644, i64 10)
  %174 = icmp ne i64 %return1645, 0
  br i1 %174, label %true1646, label %false1647

false1642:                                        ; preds = %false1471
  %return1819 = fcmp oeq double %res1, 2.000000e+01
  br i1 %return1819, label %true1821, label %end

true1646:                                         ; preds = %true1641
  %return1650 = call i64 @"eq@III"(i64 %idx1644, i64 0)
  %175 = icmp ne i64 %return1650, 0
  br i1 %175, label %true1651, label %false1652

false1647:                                        ; preds = %true1641
  %return1739 = call i64 @"eq@III"(i64 %idx1644, i64 10)
  %176 = icmp ne i64 %return1739, 0
  br i1 %176, label %true1740, label %false1741

true1651:                                         ; preds = %true1646
  %XST1654 = load double*, double** %XST
  %return1655 = call double* @"slice@[F[FIIIIII"(double* %XST1654, i64 1, i64 0, i64 1, i64 19, i64 0, i64 0)
  %return1656 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1657 = call i64 @"sample_cdf@[FFI"(double* %return1655, double %return1656)
  br label %UnifiedReturnBlock

false1652:                                        ; preds = %true1646
  %return1659 = call i64 @"eq@III"(i64 %idx1644, i64 1)
  %177 = icmp ne i64 %return1659, 0
  br i1 %177, label %true1660, label %false1661

true1660:                                         ; preds = %false1652
  %XST1663 = load double*, double** %XST
  %return1664 = call double* @"slice@[F[FIIIIII"(double* %XST1663, i64 1, i64 19, i64 1, i64 38, i64 0, i64 0)
  %return1665 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1666 = call i64 @"sample_cdf@[FFI"(double* %return1664, double %return1665)
  br label %UnifiedReturnBlock

false1661:                                        ; preds = %false1652
  %return1668 = call i64 @"eq@III"(i64 %idx1644, i64 2)
  %178 = icmp ne i64 %return1668, 0
  br i1 %178, label %true1669, label %false1670

true1669:                                         ; preds = %false1661
  %XST1672 = load double*, double** %XST
  %return1673 = call double* @"slice@[F[FIIIIII"(double* %XST1672, i64 1, i64 38, i64 1, i64 57, i64 0, i64 0)
  %return1674 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1675 = call i64 @"sample_cdf@[FFI"(double* %return1673, double %return1674)
  br label %UnifiedReturnBlock

false1670:                                        ; preds = %false1661
  %return1677 = call i64 @"eq@III"(i64 %idx1644, i64 3)
  %179 = icmp ne i64 %return1677, 0
  br i1 %179, label %true1678, label %false1679

true1678:                                         ; preds = %false1670
  %XST1681 = load double*, double** %XST
  %return1682 = call double* @"slice@[F[FIIIIII"(double* %XST1681, i64 1, i64 57, i64 1, i64 76, i64 0, i64 0)
  %return1683 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1684 = call i64 @"sample_cdf@[FFI"(double* %return1682, double %return1683)
  br label %UnifiedReturnBlock

false1679:                                        ; preds = %false1670
  %return1686 = call i64 @"eq@III"(i64 %idx1644, i64 4)
  %180 = icmp ne i64 %return1686, 0
  br i1 %180, label %true1687, label %false1688

true1687:                                         ; preds = %false1679
  %XST1690 = load double*, double** %XST
  %return1691 = call double* @"slice@[F[FIIIIII"(double* %XST1690, i64 1, i64 76, i64 1, i64 95, i64 0, i64 0)
  %return1692 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1693 = call i64 @"sample_cdf@[FFI"(double* %return1691, double %return1692)
  br label %UnifiedReturnBlock

false1688:                                        ; preds = %false1679
  %return1695 = call i64 @"eq@III"(i64 %idx1644, i64 5)
  %181 = icmp ne i64 %return1695, 0
  br i1 %181, label %true1696, label %false1697

true1696:                                         ; preds = %false1688
  %XST1699 = load double*, double** %XST
  %return1700 = call double* @"slice@[F[FIIIIII"(double* %XST1699, i64 1, i64 95, i64 1, i64 114, i64 0, i64 0)
  %return1701 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1702 = call i64 @"sample_cdf@[FFI"(double* %return1700, double %return1701)
  br label %UnifiedReturnBlock

false1697:                                        ; preds = %false1688
  %return1704 = call i64 @"eq@III"(i64 %idx1644, i64 6)
  %182 = icmp ne i64 %return1704, 0
  br i1 %182, label %true1705, label %false1706

true1705:                                         ; preds = %false1697
  %XST1708 = load double*, double** %XST
  %return1709 = call double* @"slice@[F[FIIIIII"(double* %XST1708, i64 1, i64 114, i64 1, i64 133, i64 0, i64 0)
  %return1710 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1711 = call i64 @"sample_cdf@[FFI"(double* %return1709, double %return1710)
  br label %UnifiedReturnBlock

false1706:                                        ; preds = %false1697
  %return1713 = call i64 @"eq@III"(i64 %idx1644, i64 7)
  %183 = icmp ne i64 %return1713, 0
  br i1 %183, label %true1714, label %false1715

true1714:                                         ; preds = %false1706
  %XST1717 = load double*, double** %XST
  %return1718 = call double* @"slice@[F[FIIIIII"(double* %XST1717, i64 1, i64 133, i64 1, i64 152, i64 0, i64 0)
  %return1719 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1720 = call i64 @"sample_cdf@[FFI"(double* %return1718, double %return1719)
  br label %UnifiedReturnBlock

false1715:                                        ; preds = %false1706
  %return1722 = call i64 @"eq@III"(i64 %idx1644, i64 8)
  %184 = icmp ne i64 %return1722, 0
  br i1 %184, label %true1723, label %false1724

true1723:                                         ; preds = %false1715
  %XST1726 = load double*, double** %XST
  %return1727 = call double* @"slice@[F[FIIIIII"(double* %XST1726, i64 1, i64 152, i64 1, i64 171, i64 0, i64 0)
  %return1728 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1729 = call i64 @"sample_cdf@[FFI"(double* %return1727, double %return1728)
  br label %UnifiedReturnBlock

false1724:                                        ; preds = %false1715
  %return1731 = call i64 @"eq@III"(i64 %idx1644, i64 9)
  %185 = icmp ne i64 %return1731, 0
  br i1 %185, label %true1732, label %end

true1732:                                         ; preds = %false1724
  %XST1734 = load double*, double** %XST
  %return1735 = call double* @"slice@[F[FIIIIII"(double* %XST1734, i64 1, i64 171, i64 1, i64 190, i64 0, i64 0)
  %return1736 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1737 = call i64 @"sample_cdf@[FFI"(double* %return1735, double %return1736)
  br label %UnifiedReturnBlock

true1740:                                         ; preds = %false1647
  %XST1743 = load double*, double** %XST
  %return1744 = call double* @"slice@[F[FIIIIII"(double* %XST1743, i64 1, i64 190, i64 1, i64 209, i64 0, i64 0)
  %return1745 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1746 = call i64 @"sample_cdf@[FFI"(double* %return1744, double %return1745)
  br label %UnifiedReturnBlock

false1741:                                        ; preds = %false1647
  %return1748 = call i64 @"eq@III"(i64 %idx1644, i64 11)
  %186 = icmp ne i64 %return1748, 0
  br i1 %186, label %true1749, label %false1750

true1749:                                         ; preds = %false1741
  %XST1752 = load double*, double** %XST
  %return1753 = call double* @"slice@[F[FIIIIII"(double* %XST1752, i64 1, i64 209, i64 1, i64 228, i64 0, i64 0)
  %return1754 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1755 = call i64 @"sample_cdf@[FFI"(double* %return1753, double %return1754)
  br label %UnifiedReturnBlock

false1750:                                        ; preds = %false1741
  %return1757 = call i64 @"eq@III"(i64 %idx1644, i64 12)
  %187 = icmp ne i64 %return1757, 0
  br i1 %187, label %true1758, label %false1759

true1758:                                         ; preds = %false1750
  %XST1761 = load double*, double** %XST
  %return1762 = call double* @"slice@[F[FIIIIII"(double* %XST1761, i64 1, i64 228, i64 1, i64 247, i64 0, i64 0)
  %return1763 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1764 = call i64 @"sample_cdf@[FFI"(double* %return1762, double %return1763)
  br label %UnifiedReturnBlock

false1759:                                        ; preds = %false1750
  %return1766 = call i64 @"eq@III"(i64 %idx1644, i64 13)
  %188 = icmp ne i64 %return1766, 0
  br i1 %188, label %true1767, label %false1768

true1767:                                         ; preds = %false1759
  %XST1770 = load double*, double** %XST
  %return1771 = call double* @"slice@[F[FIIIIII"(double* %XST1770, i64 1, i64 247, i64 1, i64 266, i64 0, i64 0)
  %return1772 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1773 = call i64 @"sample_cdf@[FFI"(double* %return1771, double %return1772)
  br label %UnifiedReturnBlock

false1768:                                        ; preds = %false1759
  %return1775 = call i64 @"eq@III"(i64 %idx1644, i64 14)
  %189 = icmp ne i64 %return1775, 0
  br i1 %189, label %true1776, label %false1777

true1776:                                         ; preds = %false1768
  %XST1779 = load double*, double** %XST
  %return1780 = call double* @"slice@[F[FIIIIII"(double* %XST1779, i64 1, i64 266, i64 1, i64 285, i64 0, i64 0)
  %return1781 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1782 = call i64 @"sample_cdf@[FFI"(double* %return1780, double %return1781)
  br label %UnifiedReturnBlock

false1777:                                        ; preds = %false1768
  %return1784 = call i64 @"eq@III"(i64 %idx1644, i64 15)
  %190 = icmp ne i64 %return1784, 0
  br i1 %190, label %true1785, label %false1786

true1785:                                         ; preds = %false1777
  %XST1788 = load double*, double** %XST
  %return1789 = call double* @"slice@[F[FIIIIII"(double* %XST1788, i64 1, i64 285, i64 1, i64 304, i64 0, i64 0)
  %return1790 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1791 = call i64 @"sample_cdf@[FFI"(double* %return1789, double %return1790)
  br label %UnifiedReturnBlock

false1786:                                        ; preds = %false1777
  %return1793 = call i64 @"eq@III"(i64 %idx1644, i64 16)
  %191 = icmp ne i64 %return1793, 0
  br i1 %191, label %true1794, label %false1795

true1794:                                         ; preds = %false1786
  %XST1797 = load double*, double** %XST
  %return1798 = call double* @"slice@[F[FIIIIII"(double* %XST1797, i64 1, i64 304, i64 1, i64 323, i64 0, i64 0)
  %return1799 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1800 = call i64 @"sample_cdf@[FFI"(double* %return1798, double %return1799)
  br label %UnifiedReturnBlock

false1795:                                        ; preds = %false1786
  %return1802 = call i64 @"eq@III"(i64 %idx1644, i64 17)
  %192 = icmp ne i64 %return1802, 0
  br i1 %192, label %true1803, label %false1804

true1803:                                         ; preds = %false1795
  %XST1806 = load double*, double** %XST
  %return1807 = call double* @"slice@[F[FIIIIII"(double* %XST1806, i64 1, i64 323, i64 1, i64 342, i64 0, i64 0)
  %return1808 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1809 = call i64 @"sample_cdf@[FFI"(double* %return1807, double %return1808)
  br label %UnifiedReturnBlock

false1804:                                        ; preds = %false1795
  %return1811 = call i64 @"eq@III"(i64 %idx1644, i64 18)
  %193 = icmp ne i64 %return1811, 0
  br i1 %193, label %true1812, label %end

true1812:                                         ; preds = %false1804
  %XST1814 = load double*, double** %XST
  %return1815 = call double* @"slice@[F[FIIIIII"(double* %XST1814, i64 1, i64 342, i64 1, i64 361, i64 0, i64 0)
  %return1816 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1817 = call i64 @"sample_cdf@[FFI"(double* %return1815, double %return1816)
  br label %UnifiedReturnBlock

true1821:                                         ; preds = %false1642
  %idx1823 = load i64, i64* %idx
  %return1824 = call i64 @"lt@III"(i64 %idx1823, i64 10)
  %194 = icmp ne i64 %return1824, 0
  br i1 %194, label %true1825, label %false1826

true1825:                                         ; preds = %true1821
  %return1829 = call i64 @"eq@III"(i64 %idx1823, i64 0)
  %195 = icmp ne i64 %return1829, 0
  br i1 %195, label %true1830, label %false1831

false1826:                                        ; preds = %true1821
  %return1918 = call i64 @"eq@III"(i64 %idx1823, i64 10)
  %196 = icmp ne i64 %return1918, 0
  br i1 %196, label %true1919, label %false1920

true1830:                                         ; preds = %true1825
  %XST1833 = load double*, double** %XST
  %return1834 = call double* @"slice@[F[FIIIIII"(double* %XST1833, i64 1, i64 0, i64 1, i64 20, i64 0, i64 0)
  %return1835 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1836 = call i64 @"sample_cdf@[FFI"(double* %return1834, double %return1835)
  br label %UnifiedReturnBlock

false1831:                                        ; preds = %true1825
  %return1838 = call i64 @"eq@III"(i64 %idx1823, i64 1)
  %197 = icmp ne i64 %return1838, 0
  br i1 %197, label %true1839, label %false1840

true1839:                                         ; preds = %false1831
  %XST1842 = load double*, double** %XST
  %return1843 = call double* @"slice@[F[FIIIIII"(double* %XST1842, i64 1, i64 20, i64 1, i64 40, i64 0, i64 0)
  %return1844 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1845 = call i64 @"sample_cdf@[FFI"(double* %return1843, double %return1844)
  br label %UnifiedReturnBlock

false1840:                                        ; preds = %false1831
  %return1847 = call i64 @"eq@III"(i64 %idx1823, i64 2)
  %198 = icmp ne i64 %return1847, 0
  br i1 %198, label %true1848, label %false1849

true1848:                                         ; preds = %false1840
  %XST1851 = load double*, double** %XST
  %return1852 = call double* @"slice@[F[FIIIIII"(double* %XST1851, i64 1, i64 40, i64 1, i64 60, i64 0, i64 0)
  %return1853 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1854 = call i64 @"sample_cdf@[FFI"(double* %return1852, double %return1853)
  br label %UnifiedReturnBlock

false1849:                                        ; preds = %false1840
  %return1856 = call i64 @"eq@III"(i64 %idx1823, i64 3)
  %199 = icmp ne i64 %return1856, 0
  br i1 %199, label %true1857, label %false1858

true1857:                                         ; preds = %false1849
  %XST1860 = load double*, double** %XST
  %return1861 = call double* @"slice@[F[FIIIIII"(double* %XST1860, i64 1, i64 60, i64 1, i64 80, i64 0, i64 0)
  %return1862 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1863 = call i64 @"sample_cdf@[FFI"(double* %return1861, double %return1862)
  br label %UnifiedReturnBlock

false1858:                                        ; preds = %false1849
  %return1865 = call i64 @"eq@III"(i64 %idx1823, i64 4)
  %200 = icmp ne i64 %return1865, 0
  br i1 %200, label %true1866, label %false1867

true1866:                                         ; preds = %false1858
  %XST1869 = load double*, double** %XST
  %return1870 = call double* @"slice@[F[FIIIIII"(double* %XST1869, i64 1, i64 80, i64 1, i64 100, i64 0, i64 0)
  %return1871 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1872 = call i64 @"sample_cdf@[FFI"(double* %return1870, double %return1871)
  br label %UnifiedReturnBlock

false1867:                                        ; preds = %false1858
  %return1874 = call i64 @"eq@III"(i64 %idx1823, i64 5)
  %201 = icmp ne i64 %return1874, 0
  br i1 %201, label %true1875, label %false1876

true1875:                                         ; preds = %false1867
  %XST1878 = load double*, double** %XST
  %return1879 = call double* @"slice@[F[FIIIIII"(double* %XST1878, i64 1, i64 100, i64 1, i64 120, i64 0, i64 0)
  %return1880 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1881 = call i64 @"sample_cdf@[FFI"(double* %return1879, double %return1880)
  br label %UnifiedReturnBlock

false1876:                                        ; preds = %false1867
  %return1883 = call i64 @"eq@III"(i64 %idx1823, i64 6)
  %202 = icmp ne i64 %return1883, 0
  br i1 %202, label %true1884, label %false1885

true1884:                                         ; preds = %false1876
  %XST1887 = load double*, double** %XST
  %return1888 = call double* @"slice@[F[FIIIIII"(double* %XST1887, i64 1, i64 120, i64 1, i64 140, i64 0, i64 0)
  %return1889 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1890 = call i64 @"sample_cdf@[FFI"(double* %return1888, double %return1889)
  br label %UnifiedReturnBlock

false1885:                                        ; preds = %false1876
  %return1892 = call i64 @"eq@III"(i64 %idx1823, i64 7)
  %203 = icmp ne i64 %return1892, 0
  br i1 %203, label %true1893, label %false1894

true1893:                                         ; preds = %false1885
  %XST1896 = load double*, double** %XST
  %return1897 = call double* @"slice@[F[FIIIIII"(double* %XST1896, i64 1, i64 140, i64 1, i64 160, i64 0, i64 0)
  %return1898 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1899 = call i64 @"sample_cdf@[FFI"(double* %return1897, double %return1898)
  br label %UnifiedReturnBlock

false1894:                                        ; preds = %false1885
  %return1901 = call i64 @"eq@III"(i64 %idx1823, i64 8)
  %204 = icmp ne i64 %return1901, 0
  br i1 %204, label %true1902, label %false1903

true1902:                                         ; preds = %false1894
  %XST1905 = load double*, double** %XST
  %return1906 = call double* @"slice@[F[FIIIIII"(double* %XST1905, i64 1, i64 160, i64 1, i64 180, i64 0, i64 0)
  %return1907 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1908 = call i64 @"sample_cdf@[FFI"(double* %return1906, double %return1907)
  br label %UnifiedReturnBlock

false1903:                                        ; preds = %false1894
  %return1910 = call i64 @"eq@III"(i64 %idx1823, i64 9)
  %205 = icmp ne i64 %return1910, 0
  br i1 %205, label %true1911, label %end

true1911:                                         ; preds = %false1903
  %XST1913 = load double*, double** %XST
  %return1914 = call double* @"slice@[F[FIIIIII"(double* %XST1913, i64 1, i64 180, i64 1, i64 200, i64 0, i64 0)
  %return1915 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1916 = call i64 @"sample_cdf@[FFI"(double* %return1914, double %return1915)
  br label %UnifiedReturnBlock

true1919:                                         ; preds = %false1826
  %XST1922 = load double*, double** %XST
  %return1923 = call double* @"slice@[F[FIIIIII"(double* %XST1922, i64 1, i64 200, i64 1, i64 220, i64 0, i64 0)
  %return1924 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1925 = call i64 @"sample_cdf@[FFI"(double* %return1923, double %return1924)
  br label %UnifiedReturnBlock

false1920:                                        ; preds = %false1826
  %return1927 = call i64 @"eq@III"(i64 %idx1823, i64 11)
  %206 = icmp ne i64 %return1927, 0
  br i1 %206, label %true1928, label %false1929

true1928:                                         ; preds = %false1920
  %XST1931 = load double*, double** %XST
  %return1932 = call double* @"slice@[F[FIIIIII"(double* %XST1931, i64 1, i64 220, i64 1, i64 240, i64 0, i64 0)
  %return1933 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1934 = call i64 @"sample_cdf@[FFI"(double* %return1932, double %return1933)
  br label %UnifiedReturnBlock

false1929:                                        ; preds = %false1920
  %return1936 = call i64 @"eq@III"(i64 %idx1823, i64 12)
  %207 = icmp ne i64 %return1936, 0
  br i1 %207, label %true1937, label %false1938

true1937:                                         ; preds = %false1929
  %XST1940 = load double*, double** %XST
  %return1941 = call double* @"slice@[F[FIIIIII"(double* %XST1940, i64 1, i64 240, i64 1, i64 260, i64 0, i64 0)
  %return1942 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1943 = call i64 @"sample_cdf@[FFI"(double* %return1941, double %return1942)
  br label %UnifiedReturnBlock

false1938:                                        ; preds = %false1929
  %return1945 = call i64 @"eq@III"(i64 %idx1823, i64 13)
  %208 = icmp ne i64 %return1945, 0
  br i1 %208, label %true1946, label %false1947

true1946:                                         ; preds = %false1938
  %XST1949 = load double*, double** %XST
  %return1950 = call double* @"slice@[F[FIIIIII"(double* %XST1949, i64 1, i64 260, i64 1, i64 280, i64 0, i64 0)
  %return1951 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1952 = call i64 @"sample_cdf@[FFI"(double* %return1950, double %return1951)
  br label %UnifiedReturnBlock

false1947:                                        ; preds = %false1938
  %return1954 = call i64 @"eq@III"(i64 %idx1823, i64 14)
  %209 = icmp ne i64 %return1954, 0
  br i1 %209, label %true1955, label %false1956

true1955:                                         ; preds = %false1947
  %XST1958 = load double*, double** %XST
  %return1959 = call double* @"slice@[F[FIIIIII"(double* %XST1958, i64 1, i64 280, i64 1, i64 300, i64 0, i64 0)
  %return1960 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1961 = call i64 @"sample_cdf@[FFI"(double* %return1959, double %return1960)
  br label %UnifiedReturnBlock

false1956:                                        ; preds = %false1947
  %return1963 = call i64 @"eq@III"(i64 %idx1823, i64 15)
  %210 = icmp ne i64 %return1963, 0
  br i1 %210, label %true1964, label %false1965

true1964:                                         ; preds = %false1956
  %XST1967 = load double*, double** %XST
  %return1968 = call double* @"slice@[F[FIIIIII"(double* %XST1967, i64 1, i64 300, i64 1, i64 320, i64 0, i64 0)
  %return1969 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1970 = call i64 @"sample_cdf@[FFI"(double* %return1968, double %return1969)
  br label %UnifiedReturnBlock

false1965:                                        ; preds = %false1956
  %return1972 = call i64 @"eq@III"(i64 %idx1823, i64 16)
  %211 = icmp ne i64 %return1972, 0
  br i1 %211, label %true1973, label %false1974

true1973:                                         ; preds = %false1965
  %XST1976 = load double*, double** %XST
  %return1977 = call double* @"slice@[F[FIIIIII"(double* %XST1976, i64 1, i64 320, i64 1, i64 340, i64 0, i64 0)
  %return1978 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1979 = call i64 @"sample_cdf@[FFI"(double* %return1977, double %return1978)
  br label %UnifiedReturnBlock

false1974:                                        ; preds = %false1965
  %return1981 = call i64 @"eq@III"(i64 %idx1823, i64 17)
  %212 = icmp ne i64 %return1981, 0
  br i1 %212, label %true1982, label %false1983

true1982:                                         ; preds = %false1974
  %XST1985 = load double*, double** %XST
  %return1986 = call double* @"slice@[F[FIIIIII"(double* %XST1985, i64 1, i64 340, i64 1, i64 360, i64 0, i64 0)
  %return1987 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1988 = call i64 @"sample_cdf@[FFI"(double* %return1986, double %return1987)
  br label %UnifiedReturnBlock

false1983:                                        ; preds = %false1974
  %return1990 = call i64 @"eq@III"(i64 %idx1823, i64 18)
  %213 = icmp ne i64 %return1990, 0
  br i1 %213, label %true1991, label %false1992

true1991:                                         ; preds = %false1983
  %XST1994 = load double*, double** %XST
  %return1995 = call double* @"slice@[F[FIIIIII"(double* %XST1994, i64 1, i64 360, i64 1, i64 380, i64 0, i64 0)
  %return1996 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1997 = call i64 @"sample_cdf@[FFI"(double* %return1995, double %return1996)
  br label %UnifiedReturnBlock

false1992:                                        ; preds = %false1983
  %return1999 = call i64 @"eq@III"(i64 %idx1823, i64 19)
  %214 = icmp ne i64 %return1999, 0
  br i1 %214, label %true2000, label %end

true2000:                                         ; preds = %false1992
  %XST2002 = load double*, double** %XST
  %return2003 = call double* @"slice@[F[FIIIIII"(double* %XST2002, i64 1, i64 380, i64 1, i64 400, i64 0, i64 0)
  %return2004 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return2005 = call i64 @"sample_cdf@[FFI"(double* %return2003, double %return2004)
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %true2000, %true1991, %true1982, %true1973, %true1964, %true1955, %true1946, %true1937, %true1928, %true1919, %true1911, %true1902, %true1893, %true1884, %true1875, %true1866, %true1857, %true1848, %true1839, %true1830, %true1812, %true1803, %true1794, %true1785, %true1776, %true1767, %true1758, %true1749, %true1740, %true1732, %true1723, %true1714, %true1705, %true1696, %true1687, %true1678, %true1669, %true1660, %true1651, %true1632, %true1623, %true1614, %true1605, %true1596, %true1587, %true1578, %true1569, %true1560, %true1552, %true1543, %true1534, %true1525, %true1516, %true1507, %true1498, %true1489, %true1480, %true1461, %true1452, %true1443, %true1434, %true1425, %true1416, %true1407, %true1398, %true1390, %true1381, %true1372, %true1363, %true1354, %true1345, %true1336, %true1327, %true1318, %true1299, %true1290, %true1281, %true1272, %true1263, %true1254, %true1245, %true1236, %true1228, %true1219, %true1210, %true1201, %true1192, %true1183, %true1174, %true1165, %true1146, %true1137, %true1128, %true1119, %true1110, %true1101, %true1092, %true1084, %true1075, %true1066, %true1057, %true1048, %true1039, %true1030, %true1021, %true997, %true988, %true979, %true970, %true961, %true952, %true943, %true935, %true926, %true917, %true908, %true899, %true890, %true881, %true863, %true854, %true845, %true836, %true827, %true818, %true809, %true800, %true791, %true782, %true773, %true764, %true755, %true741, %true732, %true723, %true714, %true705, %true696, %true687, %true678, %true669, %true660, %true651, %true642, %true628, %true619, %true610, %true601, %true592, %true583, %true574, %true565, %true556, %true547, %true538, %true524, %true515, %true506, %true497, %true488, %true479, %true470, %true461, %true452, %true443, %true429, %true420, %true411, %true402, %true393, %true384, %true375, %true366, %true357, %true343, %true334, %true325, %true316, %true307, %true298, %true289, %true280, %true266, %true257, %true248, %true239, %true230, %true221, %true212, %true198, %true189, %true180, %true171, %true162, %true139, %true130, %true121, %true112, %true103, %true89, %true80, %true71, %true62, %true48, %true39, %true30, %false12, %true11, %end
  %UnifiedRetVal = phi i64 [ %idx2006, %end ], [ %return17, %true11 ], [ %return21, %false12 ], [ %return36, %true30 ], [ %return45, %true39 ], [ %return53, %true48 ], [ %return68, %true62 ], [ %return77, %true71 ], [ %return86, %true80 ], [ %return94, %true89 ], [ %return109, %true103 ], [ %return118, %true112 ], [ %return127, %true121 ], [ %return136, %true130 ], [ %return144, %true139 ], [ %return168, %true162 ], [ %return177, %true171 ], [ %return186, %true180 ], [ %return195, %true189 ], [ %return203, %true198 ], [ %return218, %true212 ], [ %return227, %true221 ], [ %return236, %true230 ], [ %return245, %true239 ], [ %return254, %true248 ], [ %return263, %true257 ], [ %return271, %true266 ], [ %return286, %true280 ], [ %return295, %true289 ], [ %return304, %true298 ], [ %return313, %true307 ], [ %return322, %true316 ], [ %return331, %true325 ], [ %return340, %true334 ], [ %return348, %true343 ], [ %return363, %true357 ], [ %return372, %true366 ], [ %return381, %true375 ], [ %return390, %true384 ], [ %return399, %true393 ], [ %return408, %true402 ], [ %return417, %true411 ], [ %return426, %true420 ], [ %return434, %true429 ], [ %return449, %true443 ], [ %return458, %true452 ], [ %return467, %true461 ], [ %return476, %true470 ], [ %return485, %true479 ], [ %return494, %true488 ], [ %return503, %true497 ], [ %return512, %true506 ], [ %return521, %true515 ], [ %return529, %true524 ], [ %return544, %true538 ], [ %return553, %true547 ], [ %return562, %true556 ], [ %return571, %true565 ], [ %return580, %true574 ], [ %return589, %true583 ], [ %return598, %true592 ], [ %return607, %true601 ], [ %return616, %true610 ], [ %return625, %true619 ], [ %return633, %true628 ], [ %return648, %true642 ], [ %return657, %true651 ], [ %return666, %true660 ], [ %return675, %true669 ], [ %return684, %true678 ], [ %return693, %true687 ], [ %return702, %true696 ], [ %return711, %true705 ], [ %return720, %true714 ], [ %return729, %true723 ], [ %return738, %true732 ], [ %return746, %true741 ], [ %return761, %true755 ], [ %return770, %true764 ], [ %return779, %true773 ], [ %return788, %true782 ], [ %return797, %true791 ], [ %return806, %true800 ], [ %return815, %true809 ], [ %return824, %true818 ], [ %return833, %true827 ], [ %return842, %true836 ], [ %return851, %true845 ], [ %return860, %true854 ], [ %return868, %true863 ], [ %return887, %true881 ], [ %return896, %true890 ], [ %return905, %true899 ], [ %return914, %true908 ], [ %return923, %true917 ], [ %return932, %true926 ], [ %return940, %true935 ], [ %return949, %true943 ], [ %return958, %true952 ], [ %return967, %true961 ], [ %return976, %true970 ], [ %return985, %true979 ], [ %return994, %true988 ], [ %return1002, %true997 ], [ %return1027, %true1021 ], [ %return1036, %true1030 ], [ %return1045, %true1039 ], [ %return1054, %true1048 ], [ %return1063, %true1057 ], [ %return1072, %true1066 ], [ %return1081, %true1075 ], [ %return1089, %true1084 ], [ %return1098, %true1092 ], [ %return1107, %true1101 ], [ %return1116, %true1110 ], [ %return1125, %true1119 ], [ %return1134, %true1128 ], [ %return1143, %true1137 ], [ %return1151, %true1146 ], [ %return1171, %true1165 ], [ %return1180, %true1174 ], [ %return1189, %true1183 ], [ %return1198, %true1192 ], [ %return1207, %true1201 ], [ %return1216, %true1210 ], [ %return1225, %true1219 ], [ %return1233, %true1228 ], [ %return1242, %true1236 ], [ %return1251, %true1245 ], [ %return1260, %true1254 ], [ %return1269, %true1263 ], [ %return1278, %true1272 ], [ %return1287, %true1281 ], [ %return1296, %true1290 ], [ %return1304, %true1299 ], [ %return1324, %true1318 ], [ %return1333, %true1327 ], [ %return1342, %true1336 ], [ %return1351, %true1345 ], [ %return1360, %true1354 ], [ %return1369, %true1363 ], [ %return1378, %true1372 ], [ %return1387, %true1381 ], [ %return1395, %true1390 ], [ %return1404, %true1398 ], [ %return1413, %true1407 ], [ %return1422, %true1416 ], [ %return1431, %true1425 ], [ %return1440, %true1434 ], [ %return1449, %true1443 ], [ %return1458, %true1452 ], [ %return1466, %true1461 ], [ %return1486, %true1480 ], [ %return1495, %true1489 ], [ %return1504, %true1498 ], [ %return1513, %true1507 ], [ %return1522, %true1516 ], [ %return1531, %true1525 ], [ %return1540, %true1534 ], [ %return1549, %true1543 ], [ %return1557, %true1552 ], [ %return1566, %true1560 ], [ %return1575, %true1569 ], [ %return1584, %true1578 ], [ %return1593, %true1587 ], [ %return1602, %true1596 ], [ %return1611, %true1605 ], [ %return1620, %true1614 ], [ %return1629, %true1623 ], [ %return1637, %true1632 ], [ %return1657, %true1651 ], [ %return1666, %true1660 ], [ %return1675, %true1669 ], [ %return1684, %true1678 ], [ %return1693, %true1687 ], [ %return1702, %true1696 ], [ %return1711, %true1705 ], [ %return1720, %true1714 ], [ %return1729, %true1723 ], [ %return1737, %true1732 ], [ %return1746, %true1740 ], [ %return1755, %true1749 ], [ %return1764, %true1758 ], [ %return1773, %true1767 ], [ %return1782, %true1776 ], [ %return1791, %true1785 ], [ %return1800, %true1794 ], [ %return1809, %true1803 ], [ %return1817, %true1812 ], [ %return1836, %true1830 ], [ %return1845, %true1839 ], [ %return1854, %true1848 ], [ %return1863, %true1857 ], [ %return1872, %true1866 ], [ %return1881, %true1875 ], [ %return1890, %true1884 ], [ %return1899, %true1893 ], [ %return1908, %true1902 ], [ %return1916, %true1911 ], [ %return1925, %true1919 ], [ %return1934, %true1928 ], [ %return1943, %true1937 ], [ %return1952, %true1946 ], [ %return1961, %true1955 ], [ %return1970, %true1964 ], [ %return1979, %true1973 ], [ %return1988, %true1982 ], [ %return1997, %true1991 ], [ %return2005, %true2000 ]
  ret i64 %UnifiedRetVal
}

; Function Attrs: nounwind readnone
declare i64 @"eq@III"(i64, i64) #1

; Function Attrs: nounwind
declare double* @"slice@[F[FIIIIII"(double*, i64, i64, i64, i64, i64, i64) #2

; Function Attrs: nounwind
declare double @"nrandom@F:S"(i8*) #2

; Function Attrs: alwaysinline
define private i64 @"sample_cdf@[FFI"(double* %rw01, double %rw12) #3 {
__llvm_entry:
  %rw24 = call { i64, double, double } @"sample_cdf@[FFIFF"(double* %rw01, double %rw12)
  %rw25 = extractvalue { i64, double, double } %rw24, 0
  ret i64 %rw25
}

; Function Attrs: nounwind readnone
declare { i64, double, double } @"sample_cdf@[FFIFF"(double*, double) #1

; Function Attrs: nounwind readnone
declare i64 @"lt@III"(i64, i64) #1

; Function Attrs: alwaysinline nounwind
define private double @"ATAN@FU"(<2 x double>* %p) #0 {
__llvm_entry:
  %p1 = load <2 x double>, <2 x double>* %p
  %return = call double @"getcomp@FUI"(<2 x double> %p1, i64 0)
  %return3 = call double @"getcomp@FUI"(<2 x double> %p1, i64 1)
  %return4 = call double @"atan2@FFF"(double %return, double %return3)
  ret double %return4
}

; Function Attrs: nounwind readnone
declare double @"getcomp@FUI"(<2 x double>, i64) #1

; Function Attrs: nounwind readnone
declare double @"atan2@FFF"(double, double) #1

; Function Attrs: alwaysinline nounwind
define private double @"ATANYX@FU"(<2 x double>* %p) #0 {
__llvm_entry:
  %p1 = load <2 x double>, <2 x double>* %p
  %return = call double @"getcomp@FUI"(<2 x double> %p1, i64 1)
  %return3 = call double @"getcomp@FUI"(<2 x double> %p1, i64 0)
  %return4 = call double @"atan2@FFF"(double %return, double %return3)
  ret double %return4
}

; Function Attrs: alwaysinline nounwind
define private double @"SUMSQ@FU"(<2 x double>* %p) #0 {
__llvm_entry:
  %p1 = load <2 x double>, <2 x double>* %p
  %return = call double @"getcomp@FUI"(<2 x double> %p1, i64 0)
  %output = fmul double %return, %return
  %return5 = call double @"getcomp@FUI"(<2 x double> %p1, i64 1)
  %output8 = fmul double %return5, %return5
  %output9 = fadd double %output, %output8
  ret double %output9
}

; Function Attrs: alwaysinline nounwind
define private double @"SQRT@FU"(<2 x double>* %p) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %p1 = load <2 x double>, <2 x double>* %p
  store <2 x double> %p1, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %return = call double @"sqrt@FF"(double %SUMSQ)
  ret double %return
}

; Function Attrs: nounwind readnone
declare double @"sqrt@FF"(double) #1

; Function Attrs: alwaysinline nounwind
define private double @"SafeTan@FF"(double* %x) #0 {
__llvm_entry:
  %x1 = load double, double* %x
  %return = call double @"neg@FF"(double 8.388607e+06)
  %return2 = call double @"clamp@FFFF"(double %x1, double %return, double 8.388607e+06)
  %return3 = call double @"tan@FF"(double %return2)
  ret double %return3
}

; Function Attrs: nounwind readnone
declare double @"neg@FF"(double) #1

; Function Attrs: nounwind
declare double @"clamp@FFFF"(double, double, double) #2

; Function Attrs: nounwind readnone
declare double @"tan@FF"(double) #1

; Function Attrs: alwaysinline nounwind
define private double @"Zeps@FF"(double* %x) #0 {
__llvm_entry:
  %x1 = load double, double* %x
  %return = fcmp oeq double %x1, 0.000000e+00
  br i1 %return, label %end, label %false

false:                                            ; preds = %__llvm_entry
  br label %end

end:                                              ; preds = %__llvm_entry, %false
  %phi = phi double [ %x1, %false ], [ 0x3CB0000000000000, %__llvm_entry ]
  ret double %phi
}

; Function Attrs: alwaysinline nounwind
define private double @"sgn@FF"(double* %n) #0 {
__llvm_entry:
  %n1 = load double, double* %n
  %return = fcmp olt double %n1, 0.000000e+00
  br i1 %return, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %return3 = call i64 @"neg@II"(i64 1)
  br label %end

false:                                            ; preds = %__llvm_entry
  %return5 = fcmp ogt double %n1, 0.000000e+00
  %. = select i1 %return5, i64 1, i64 0
  br label %end

end:                                              ; preds = %false, %true
  %phi10 = phi i64 [ %return3, %true ], [ %., %false ]
  %cast = sitofp i64 %phi10 to double
  ret double %cast
}

; Function Attrs: nounwind readnone
declare i64 @"neg@II"(i64) #1

; Function Attrs: alwaysinline nounwind
define private double @"fmod@FFF"(double* %a, double* %b) #0 {
__llvm_entry:
  %a1 = load double, double* %a
  %b3 = load double, double* %b
  %output = call double @"div@FF"(double %a1, double %b3)
  %return = call double @"floor@FF"(double %output)
  %output5 = fmul double %return, %b3
  %output6 = fsub double %a1, %output5
  ret double %output6
}

; Function Attrs: nounwind readnone
declare double @"div@FF"(double, double) #1

; Function Attrs: nounwind readnone
declare double @"floor@FF"(double) #1

; Function Attrs: alwaysinline nounwind
define private void @"sincos@FFF"(double* %a, double* %sa, double* %ca) #0 {
__llvm_entry:
  %a1 = load double, double* %a
  %return = call double @"sin@FF"(double %a1)
  store double %return, double* %sa
  %a2 = load double, double* %a
  %return3 = call double @"cos@FF"(double %a2)
  store double %return3, double* %ca
  ret void
}

; Function Attrs: nounwind readnone
declare double @"sin@FF"(double) #1

; Function Attrs: nounwind readnone
declare double @"cos@FF"(double) #1

; Function Attrs: alwaysinline nounwind
define private void @"precalc_V_DISC2@VFF"(<3 x double>* %disc2_precalc, double* %rot, double* %twist) #0 {
__llvm_entry:
  %0 = alloca double
  %1 = alloca double
  %2 = alloca double
  %rot1 = load double, double* %rot
  %output = fmul double %rot1, 0x400921FB4D12D84A
  %tmp = load <3 x double>, <3 x double>* %disc2_precalc
  %return = call { double, <3 x double> } @"setcomp@FVFI"(<3 x double> %tmp, double %output, i64 0)
  %output3 = extractvalue { double, <3 x double> } %return, 1
  store <3 x double> %output3, <3 x double>* %disc2_precalc
  %twist4 = load double, double* %twist
  store double %twist4, double* %0
  call void @"sincos@FFF"(double* %0, double* %1, double* %2)
  %arg = load double, double* %1
  %tmp5 = load <3 x double>, <3 x double>* %disc2_precalc
  %return6 = call { double, <3 x double> } @"setcomp@FVFI"(<3 x double> %tmp5, double %arg, i64 1)
  %output8 = extractvalue { double, <3 x double> } %return6, 1
  store <3 x double> %output8, <3 x double>* %disc2_precalc
  %arg9 = load double, double* %2
  %return11 = call { double, <3 x double> } @"setcomp@FVFI"(<3 x double> %output8, double %arg9, i64 2)
  %output13 = extractvalue { double, <3 x double> } %return11, 1
  store <3 x double> %output13, <3 x double>* %disc2_precalc
  %return15 = call double @"getcomp@FVI"(<3 x double> %output13, i64 2)
  %output16 = fsub double %return15, 1.000000e+00
  %return18 = call { double, <3 x double> } @"setcomp@FVFI"(<3 x double> %output13, double %output16, i64 2)
  %output20 = extractvalue { double, <3 x double> } %return18, 1
  store <3 x double> %output20, <3 x double>* %disc2_precalc
  %twist21 = load double, double* %twist
  %return22 = fcmp ogt double %twist21, 0x401921FB4D12D84A
  br i1 %return22, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %output25 = fadd double 1.000000e+00, %twist21
  %output26 = fsub double %output25, 0x401921FB4D12D84A
  %return28 = call double @"getcomp@FVI"(<3 x double> %output20, i64 2)
  %output30 = fmul double %return28, %output26
  %return32 = call { double, <3 x double> } @"setcomp@FVFI"(<3 x double> %output20, double %output30, i64 2)
  %output34 = extractvalue { double, <3 x double> } %return32, 1
  store <3 x double> %output34, <3 x double>* %disc2_precalc
  %return36 = call double @"getcomp@FVI"(<3 x double> %output34, i64 1)
  %output38 = fmul double %return36, %output26
  %return40 = call { double, <3 x double> } @"setcomp@FVFI"(<3 x double> %output34, double %output38, i64 1)
  %output42 = extractvalue { double, <3 x double> } %return40, 1
  store <3 x double> %output42, <3 x double>* %disc2_precalc
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %twist43 = load double, double* %twist
  %return44 = call i64 @"neg@II"(i64 2)
  %cast = sitofp i64 %return44 to double
  %output45 = fmul double %cast, 0x400921FB4D12D84A
  %return46 = fcmp olt double %twist43, %output45
  br i1 %return46, label %true48, label %end49

true48:                                           ; preds = %end
  %output51 = fadd double 1.000000e+00, %twist43
  %output52 = fadd double %output51, 0x401921FB4D12D84A
  %disc2_precalc53 = load <3 x double>, <3 x double>* %disc2_precalc
  %return54 = call double @"getcomp@FVI"(<3 x double> %disc2_precalc53, i64 2)
  %output56 = fmul double %return54, %output52
  %return58 = call { double, <3 x double> } @"setcomp@FVFI"(<3 x double> %disc2_precalc53, double %output56, i64 2)
  %output60 = extractvalue { double, <3 x double> } %return58, 1
  store <3 x double> %output60, <3 x double>* %disc2_precalc
  %return62 = call double @"getcomp@FVI"(<3 x double> %output60, i64 1)
  %output64 = fmul double %return62, %output52
  %return66 = call { double, <3 x double> } @"setcomp@FVFI"(<3 x double> %output60, double %output64, i64 1)
  %output68 = extractvalue { double, <3 x double> } %return66, 1
  store <3 x double> %output68, <3 x double>* %disc2_precalc
  br label %end49

end49:                                            ; preds = %true48, %end
  ret void
}

; Function Attrs: alwaysinline
define private { double, <3 x double> } @"setcomp@FVFI"(<3 x double> %rw11, double %rw22, i64 %rw33) #3 {
__llvm_entry:
  %rw16 = call <3 x double> @"setcomp@VFI"(<3 x double> %rw11, double %rw22, i64 %rw33)
  %mrv = insertvalue { double, <3 x double> } undef, double %rw22, 0
  %mrv9 = insertvalue { double, <3 x double> } %mrv, <3 x double> %rw16, 1
  ret { double, <3 x double> } %mrv9
}

; Function Attrs: nounwind readnone
declare <3 x double> @"setcomp@VFI"(<3 x double>, double, i64) #1

; Function Attrs: nounwind readnone
declare double @"getcomp@FVI"(<3 x double>, i64) #1

; Function Attrs: alwaysinline
define private { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %rw11, double %rw22, i64 %rw33) #3 {
__llvm_entry:
  %rw16 = call <2 x double> @"setcomp@UFI"(<2 x double> %rw11, double %rw22, i64 %rw33)
  %mrv = insertvalue { double, <2 x double> } undef, double %rw22, 0
  %mrv9 = insertvalue { double, <2 x double> } %mrv, <2 x double> %rw16, 1
  ret { double, <2 x double> } %mrv9
}

; Function Attrs: nounwind readnone
declare <2 x double> @"setcomp@UFI"(<2 x double>, double, i64) #1

; Function Attrs: nounwind
declare double @"abs@FF"(double) #2

; Function Attrs: alwaysinline nounwind
define private <2 x double> @"biunit@U"() #0 {
__llvm_entry:
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output = fmul double 2.000000e+00, %return
  %output1 = fsub double %output, 1.000000e+00
  %return2 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output3 = fmul double 2.000000e+00, %return2
  %output4 = fsub double %output3, 1.000000e+00
  %return5 = call <2 x double> @"set@UFF"(double %output1, double %output4)
  ret <2 x double> %return5
}

; Function Attrs: nounwind readnone
declare <2 x double> @"set@UFF"(double, double) #1

; Function Attrs: alwaysinline nounwind
define private i64 @"chkPT@IIUF"(i64* %ACTIVE, <2 x double>* %vec, double* %alpha) #0 {
__llvm_entry:
  %ACTIVE1 = load i64, i64* %ACTIVE
  %0 = icmp ne i64 %ACTIVE1, 0
  br i1 %0, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %vec2 = load <2 x double>, <2 x double>* %vec
  %return = call double @"getcomp@FUI"(<2 x double> %vec2, i64 0)
  %return3 = call i64 @"isfinite@IF"(double %return)
  %return4 = call i64 @"not@II"(i64 %return3)
  %return6 = call double @"getcomp@FUI"(<2 x double> %vec2, i64 1)
  %return7 = call i64 @"isfinite@IF"(double %return6)
  %return8 = call i64 @"not@II"(i64 %return7)
  %return9 = call i64 @"or@III"(i64 %return4, i64 %return8)
  %return12 = call i64 @"isnan@IF"(double %return)
  %return13 = call i64 @"or@III"(i64 %return9, i64 %return12)
  %return16 = call i64 @"isnan@IF"(double %return6)
  %return17 = call i64 @"or@III"(i64 %return13, i64 %return16)
  %return19 = call double @"length@FU"(<2 x double> %vec2)
  %return20 = fcmp ogt double %return19, 1.000000e+03
  %return21 = zext i1 %return20 to i64
  %return22 = call i64 @"or@III"(i64 %return17, i64 %return21)
  %alpha23 = load double, double* %alpha
  %return24 = fcmp oeq double %alpha23, 0.000000e+00
  %return25 = zext i1 %return24 to i64
  %return26 = call i64 @"or@III"(i64 %return22, i64 %return25)
  %1 = icmp ne i64 %return26, 0
  %. = select i1 %1, i64 1, i64 0
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %merge = phi i64 [ 0, %__llvm_entry ], [ %., %true ]
  ret i64 %merge
}

; Function Attrs: nounwind readnone
declare i64 @"isfinite@IF"(double) #1

; Function Attrs: nounwind readnone
declare i64 @"not@II"(i64) #1

; Function Attrs: nounwind readnone
declare i64 @"or@III"(i64, i64) #1

; Function Attrs: nounwind readnone
declare i64 @"isnan@IF"(double) #1

; Function Attrs: nounwind
declare double @"length@FU"(<2 x double>) #2

; Function Attrs: alwaysinline nounwind
define private void @"V_SYM@UI"(<2 x double>* %p, i64* %num) #0 {
__llvm_entry:
  %num1 = load i64, i64* %num
  %return = call i64 @"not@II"(i64 %num1)
  %0 = icmp ne i64 %return, 0
  br i1 %0, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %return2 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output = call double @"div@FF"(double 1.000000e+00, double 3.000000e+00)
  %return3 = fcmp ogt double %return2, %output
  br i1 %return3, label %true5, label %end

false:                                            ; preds = %__llvm_entry
  %1 = icmp ne i64 %num1, 0
  br i1 %1, label %true13, label %end

end:                                              ; preds = %false45, %true53, %true44, %true35, %true26, %true13, %false, %true5, %true10, %true
  %ang.0 = phi double [ 2.400000e+02, %true10 ], [ 1.200000e+02, %true5 ], [ 0.000000e+00, %true ], [ 7.200000e+01, %true26 ], [ 1.440000e+02, %true35 ], [ 2.160000e+02, %true44 ], [ 2.880000e+02, %true53 ], [ 0.000000e+00, %false45 ], [ 0.000000e+00, %true13 ], [ 0.000000e+00, %false ]
  %p55 = load <2 x double>, <2 x double>* %p
  %return57 = call <3 x double> @"set@VFFF"(double 0.000000e+00, double 0.000000e+00, double %ang.0)
  %return58 = call <9 x double> @"maketransform@3IV"(i64 0, <3 x double> %return57)
  %cast59 = call <4 x double> @"set@23"(<9 x double> %return58)
  %output60 = call <2 x double> @"mul@U2"(<2 x double> %p55, <4 x double> %cast59)
  store <2 x double> %output60, <2 x double>* %p
  ret void

true5:                                            ; preds = %true
  %return7 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return8 = fcmp ogt double %return7, 5.000000e-01
  br i1 %return8, label %true10, label %end

true10:                                           ; preds = %true5
  br label %end

true13:                                           ; preds = %false
  %return15 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return16 = fcmp oge double %return15, 2.000000e-01
  br i1 %return16, label %true18, label %end

true18:                                           ; preds = %true13
  %return20 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return22 = fcmp olt double 2.000000e-01, %return20
  %return23 = zext i1 %return22 to i64
  %cast = sitofp i64 %return23 to double
  %return24 = fcmp ole double %cast, 4.000000e-01
  br i1 %return24, label %true26, label %false27

true26:                                           ; preds = %true18
  br label %end

false27:                                          ; preds = %true18
  %return30 = fcmp olt double 4.000000e-01, %return20
  %return31 = zext i1 %return30 to i64
  %cast32 = sitofp i64 %return31 to double
  %return33 = fcmp ole double %cast32, 6.000000e-01
  br i1 %return33, label %true35, label %false36

true35:                                           ; preds = %false27
  br label %end

false36:                                          ; preds = %false27
  %return39 = fcmp olt double 6.000000e-01, %return20
  %return40 = zext i1 %return39 to i64
  %cast41 = sitofp i64 %return40 to double
  %return42 = fcmp ole double %cast41, 8.000000e-01
  br i1 %return42, label %true44, label %false45

true44:                                           ; preds = %false36
  br label %end

false45:                                          ; preds = %false36
  %return48 = fcmp olt double 8.000000e-01, %return20
  %return49 = zext i1 %return48 to i64
  %cast50 = sitofp i64 %return49 to double
  %return51 = fcmp ole double %cast50, 1.000000e+00
  br i1 %return51, label %true53, label %end

true53:                                           ; preds = %false45
  br label %end
}

; Function Attrs: nounwind readnone
declare <3 x double> @"set@VFFF"(double, double, double) #1

; Function Attrs: nounwind readnone
declare <9 x double> @"maketransform@3IV"(i64, <3 x double>) #1

; Function Attrs: nounwind
declare <4 x double> @"set@23"(<9 x double>) #2

; Function Attrs: nounwind readnone
declare <2 x double> @"mul@U2"(<2 x double>, <4 x double>) #1

; Function Attrs: alwaysinline nounwind
define private void @"affine@UUUU"(<2 x double>* %p, <2 x double>* %x, <2 x double>* %y, <2 x double>* %o) #0 {
__llvm_entry:
  %x1 = load <2 x double>, <2 x double>* %x
  %return = call double @"getcomp@FUI"(<2 x double> %x1, i64 0)
  %p2 = load <2 x double>, <2 x double>* %p
  %return3 = call double @"getcomp@FUI"(<2 x double> %p2, i64 0)
  %output = fmul double %return, %return3
  %y4 = load <2 x double>, <2 x double>* %y
  %return5 = call double @"getcomp@FUI"(<2 x double> %y4, i64 0)
  %return7 = call double @"getcomp@FUI"(<2 x double> %p2, i64 1)
  %output8 = fmul double %return5, %return7
  %output9 = fadd double %output, %output8
  %o10 = load <2 x double>, <2 x double>* %o
  %return11 = call double @"getcomp@FUI"(<2 x double> %o10, i64 0)
  %output12 = fadd double %output9, %return11
  %return14 = call double @"getcomp@FUI"(<2 x double> %x1, i64 1)
  %output17 = fmul double %return14, %return3
  %return19 = call double @"getcomp@FUI"(<2 x double> %y4, i64 1)
  %output22 = fmul double %return19, %return7
  %output23 = fadd double %output17, %output22
  %return25 = call double @"getcomp@FUI"(<2 x double> %o10, i64 1)
  %output26 = fadd double %output23, %return25
  %return27 = call <2 x double> @"set@UFF"(double %output12, double %output26)
  store <2 x double> %return27, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"affineRot@2UUF"(<4 x double>* %m2, <2 x double>* %x, <2 x double>* %y, double* %ang) #0 {
__llvm_entry:
  %x1 = load <2 x double>, <2 x double>* %x
  %y2 = load <2 x double>, <2 x double>* %y
  %return = call <4 x double> @"set@2UU"(<2 x double> %x1, <2 x double> %y2)
  store <4 x double> %return, <4 x double>* %m2
  %ang4 = load double, double* %ang
  %output = call <4 x double> @"rotate@2F"(<4 x double> %return, double %ang4)
  store <4 x double> %output, <4 x double>* %m2
  ret void
}

; Function Attrs: nounwind
declare <4 x double> @"set@2UU"(<2 x double>, <2 x double>) #2

; Function Attrs: nounwind readnone
declare <4 x double> @"rotate@2F"(<4 x double>, double) #1

; Function Attrs: nounwind readnone
declare i8* @"getcomp@S[SI"(i8**, i64) #1

; Function Attrs: nounwind
declare i8** @"append@[SS"(i8**, i8*) #2

; Function Attrs: alwaysinline nounwind
define private void @"gemBuild@Z3gemM44N3PFFIN3resIN3v1t[IN3v2t[IN3v3t[IN3v4t[IN3p1t[IN3p2t[IN3P1t[IN3PPL[IN4fv1tIN4fv2tIN4fv3tIN4fp1tIN4fp2tIN3v1w[FN3v2w[FN3v3w[FN3v4w[FN3pbw[FN3p1w[FN3p2w[FN3P1w[FN3CLR[FN2OM[FN1A[FN4fv1wFN4fv2wFN4fv3wFN4fp1wFN4fp2wFN1x[UN1y[UN1o[UN2px[UN2py[UN2po[UN2fxUN2fyUN2foUN3pfxUN3pfyUN3pfoUN4TMm22[SII"(%gem* %this, i8*** %sIDX, i64* %TM, i64* %FF) #0 {
__llvm_entry:
  %_m2 = alloca <4 x double>
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  %3 = alloca <2 x double>
  %4 = alloca <2 x double>
  %5 = alloca double
  %6 = alloca <2 x double>
  %7 = alloca <2 x double>
  %8 = alloca double
  %9 = alloca <2 x double>
  %10 = alloca <2 x double>
  %11 = alloca double
  %sIDX1 = load i8**, i8*** %sIDX
  %return = call i64 @"len@I[S"(i8** %sIDX1)
  %tmp = load %gem, %gem* %this
  %12 = insertvalue %gem %tmp, i64 %return, 1
  %v1t = extractvalue %gem %12, 2
  %output = call i64* @"resize@[II"(i64* %v1t, i64 %return)
  %13 = insertvalue %gem %12, i64* %output, 2
  %14 = insertvalue %gem %13, i64* %output, 9
  %15 = insertvalue %gem %14, i64* %output, 8
  %16 = insertvalue %gem %15, i64* %output, 7
  %17 = insertvalue %gem %16, i64* %output, 6
  %18 = insertvalue %gem %17, i64* %output, 5
  %19 = insertvalue %gem %18, i64* %output, 4
  %20 = insertvalue %gem %19, i64* %output, 3
  %v1w = extractvalue %gem %20, 15
  %output17 = call double* @"resize@[FI"(double* %v1w, i64 %return)
  %21 = insertvalue %gem %20, double* %output17, 15
  %22 = insertvalue %gem %21, double* %output17, 25
  %23 = insertvalue %gem %22, double* %output17, 24
  %24 = insertvalue %gem %23, double* %output17, 23
  %25 = insertvalue %gem %24, double* %output17, 19
  %26 = insertvalue %gem %25, double* %output17, 22
  %27 = insertvalue %gem %26, double* %output17, 21
  %28 = insertvalue %gem %27, double* %output17, 20
  %29 = insertvalue %gem %28, double* %output17, 18
  %30 = insertvalue %gem %29, double* %output17, 17
  %31 = insertvalue %gem %30, double* %output17, 16
  %x = extractvalue %gem %31, 31
  %output34 = call <2 x double>* @"resize@[UI"(<2 x double>* %x, i64 %return)
  %32 = insertvalue %gem %31, <2 x double>* %output34, 31
  %33 = insertvalue %gem %32, <2 x double>* %output34, 36
  %34 = insertvalue %gem %33, <2 x double>* %output34, 35
  %35 = insertvalue %gem %34, <2 x double>* %output34, 34
  %36 = insertvalue %gem %35, <2 x double>* %output34, 33
  %37 = insertvalue %gem %36, <2 x double>* %output34, 32
  store %gem %37, %gem* %this
  store <4 x double> zeroinitializer, <4 x double>* %_m2, !vex-initializer-store !3
  br label %cond

cond:                                             ; preds = %end341, %__llvm_entry
  %i.0 = phi i64 [ 0, %__llvm_entry ], [ %output395, %end341 ]
  %this44 = load %gem, %gem* %this
  %res45 = extractvalue %gem %this44, 1
  %return46 = call i64 @"lt@III"(i64 %i.0, i64 %res45)
  %38 = icmp ne i64 %return46, 0
  br i1 %38, label %body, label %end

body:                                             ; preds = %cond
  %sIDX47 = load i8**, i8*** %sIDX
  %return49 = call i8* @"getcomp@S[SI"(i8** %sIDX47, i64 %i.0)
  %return51 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1, i64 0, i64 0), i8* %return49)
  %return52 = call double @"chf@FS"(i8* %return51)
  %return54 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @2, i64 0, i64 0), i8* %return49)
  %return55 = call double @"chf@FS"(i8* %return54)
  %output59 = fsub double 1.000000e+00, %return55
  %output60 = fmul double %return52, %output59
  %output61 = call double @"div@FF"(double %output60, double 2.000000e+00)
  %tmp63 = extractvalue %gem %this44, 23
  %return64 = call { double, double* } @"setcomp@F[FFI"(double* %tmp63, double %output61, i64 %i.0)
  %output66 = extractvalue { double, double* } %return64, 1
  %39 = insertvalue %gem %this44, double* %output66, 23
  %output69 = fadd double 1.000000e+00, %return55
  %output70 = call double @"div@FF"(double %output69, double 2.000000e+00)
  %tmp72 = extractvalue %gem %39, 24
  %return73 = call { double, double* } @"setcomp@F[FFI"(double* %tmp72, double %output70, i64 %i.0)
  %output75 = extractvalue { double, double* } %return73, 1
  %40 = insertvalue %gem %39, double* %output75, 24
  %return78 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @3, i64 0, i64 0), i8* %return49)
  %return79 = call double @"chf@FS"(i8* %return78)
  %tmp81 = extractvalue %gem %40, 25
  %return82 = call { double, double* } @"setcomp@F[FFI"(double* %tmp81, double %return79, i64 %i.0)
  %output84 = extractvalue { double, double* } %return82, 1
  %41 = insertvalue %gem %40, double* %output84, 25
  %return87 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @4, i64 0, i64 0), i8* %return49)
  %return88 = call double @"chf@FS"(i8* %return87)
  %tmp90 = extractvalue %gem %41, 19
  %return91 = call { double, double* } @"setcomp@F[FFI"(double* %tmp90, double %return88, i64 %i.0)
  %output93 = extractvalue { double, double* } %return91, 1
  %42 = insertvalue %gem %41, double* %output93, 19
  %return96 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @5, i64 0, i64 0), i8* %return49)
  %return97 = call double @"chf@FS"(i8* %return96)
  %tmp99 = extractvalue %gem %42, 20
  %return100 = call { double, double* } @"setcomp@F[FFI"(double* %tmp99, double %return97, i64 %i.0)
  %output102 = extractvalue { double, double* } %return100, 1
  %43 = insertvalue %gem %42, double* %output102, 20
  store %gem %43, %gem* %this
  %return105 = call double @"getcomp@F[FI"(double* %output102, i64 %i.0)
  %return106 = fcmp ogt double %return105, 0.000000e+00
  br i1 %return106, label %true, label %end108

end:                                              ; preds = %cond
  %TM396 = load i64, i64* %TM
  %44 = icmp ne i64 %TM396, 0
  br i1 %44, label %true397, label %end398

true:                                             ; preds = %body
  %return111 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @6, i64 0, i64 0), i8* %return49)
  %return112 = call i8* @"chs@SS"(i8* %return111)
  %return113 = call i64 @"atoi@IS"(i8* %return112)
  %tmp115 = extractvalue %gem %43, 6
  %return116 = call { i64, i64* } @"setcomp@I[III"(i64* %tmp115, i64 %return113, i64 %i.0)
  %output118 = extractvalue { i64, i64* } %return116, 1
  %45 = insertvalue %gem %43, i64* %output118, 6
  store %gem %45, %gem* %this
  br label %end108

end108:                                           ; preds = %true, %body
  %return121 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @7, i64 0, i64 0), i8* %return49)
  %return122 = call double @"chf@FS"(i8* %return121)
  %tmp123 = load %gem, %gem* %this
  %tmp124 = extractvalue %gem %tmp123, 21
  %return125 = call { double, double* } @"setcomp@F[FFI"(double* %tmp124, double %return122, i64 %i.0)
  %output127 = extractvalue { double, double* } %return125, 1
  %46 = insertvalue %gem %tmp123, double* %output127, 21
  store %gem %46, %gem* %this
  %return130 = call double @"getcomp@F[FI"(double* %output127, i64 %i.0)
  %return131 = fcmp ogt double %return130, 0.000000e+00
  br i1 %return131, label %true133, label %end134

true133:                                          ; preds = %end108
  %return137 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @8, i64 0, i64 0), i8* %return49)
  %return138 = call i8* @"chs@SS"(i8* %return137)
  %return139 = call i64 @"atoi@IS"(i8* %return138)
  %tmp141 = extractvalue %gem %46, 7
  %return142 = call { i64, i64* } @"setcomp@I[III"(i64* %tmp141, i64 %return139, i64 %i.0)
  %output144 = extractvalue { i64, i64* } %return142, 1
  %47 = insertvalue %gem %46, i64* %output144, 7
  store %gem %47, %gem* %this
  br label %end134

end134:                                           ; preds = %true133, %end108
  %return147 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @9, i64 0, i64 0), i8* %return49)
  %return148 = call double @"chf@FS"(i8* %return147)
  %tmp149 = load %gem, %gem* %this
  %tmp150 = extractvalue %gem %tmp149, 15
  %return151 = call { double, double* } @"setcomp@F[FFI"(double* %tmp150, double %return148, i64 %i.0)
  %output153 = extractvalue { double, double* } %return151, 1
  %48 = insertvalue %gem %tmp149, double* %output153, 15
  store %gem %48, %gem* %this
  %return157 = call double @"getcomp@F[FI"(double* %output153, i64 %i.0)
  %return158 = fcmp one double %return157, 0.000000e+00
  br i1 %return158, label %true160, label %end161

true160:                                          ; preds = %end134
  %return164 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @10, i64 0, i64 0), i8* %return49)
  %return165 = call i8* @"chs@SS"(i8* %return164)
  %return166 = call i64 @"atoi@IS"(i8* %return165)
  %tmp168 = extractvalue %gem %48, 2
  %return169 = call { i64, i64* } @"setcomp@I[III"(i64* %tmp168, i64 %return166, i64 %i.0)
  %output171 = extractvalue { i64, i64* } %return169, 1
  %49 = insertvalue %gem %48, i64* %output171, 2
  store %gem %49, %gem* %this
  br label %end161

end161:                                           ; preds = %true160, %end134
  %return174 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @11, i64 0, i64 0), i8* %return49)
  %return175 = call double @"chf@FS"(i8* %return174)
  %tmp176 = load %gem, %gem* %this
  %tmp177 = extractvalue %gem %tmp176, 16
  %return178 = call { double, double* } @"setcomp@F[FFI"(double* %tmp177, double %return175, i64 %i.0)
  %output180 = extractvalue { double, double* } %return178, 1
  %50 = insertvalue %gem %tmp176, double* %output180, 16
  store %gem %50, %gem* %this
  %return183 = call double @"getcomp@F[FI"(double* %output180, i64 %i.0)
  %return184 = fcmp one double %return183, 0.000000e+00
  br i1 %return184, label %true186, label %end187

true186:                                          ; preds = %end161
  %return190 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @12, i64 0, i64 0), i8* %return49)
  %return191 = call i8* @"chs@SS"(i8* %return190)
  %return192 = call i64 @"atoi@IS"(i8* %return191)
  %tmp194 = extractvalue %gem %50, 3
  %return195 = call { i64, i64* } @"setcomp@I[III"(i64* %tmp194, i64 %return192, i64 %i.0)
  %output197 = extractvalue { i64, i64* } %return195, 1
  %51 = insertvalue %gem %50, i64* %output197, 3
  store %gem %51, %gem* %this
  br label %end187

end187:                                           ; preds = %true186, %end161
  %return200 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @13, i64 0, i64 0), i8* %return49)
  %return201 = call double @"chf@FS"(i8* %return200)
  %tmp202 = load %gem, %gem* %this
  %tmp203 = extractvalue %gem %tmp202, 17
  %return204 = call { double, double* } @"setcomp@F[FFI"(double* %tmp203, double %return201, i64 %i.0)
  %output206 = extractvalue { double, double* } %return204, 1
  %52 = insertvalue %gem %tmp202, double* %output206, 17
  store %gem %52, %gem* %this
  %return209 = call double @"getcomp@F[FI"(double* %output206, i64 %i.0)
  %return210 = fcmp one double %return209, 0.000000e+00
  br i1 %return210, label %true212, label %end213

true212:                                          ; preds = %end187
  %return216 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @14, i64 0, i64 0), i8* %return49)
  %return217 = call i8* @"chs@SS"(i8* %return216)
  %return218 = call i64 @"atoi@IS"(i8* %return217)
  %tmp220 = extractvalue %gem %52, 4
  %return221 = call { i64, i64* } @"setcomp@I[III"(i64* %tmp220, i64 %return218, i64 %i.0)
  %output223 = extractvalue { i64, i64* } %return221, 1
  %53 = insertvalue %gem %52, i64* %output223, 4
  store %gem %53, %gem* %this
  br label %end213

end213:                                           ; preds = %true212, %end187
  %return226 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @15, i64 0, i64 0), i8* %return49)
  %return227 = call double @"chf@FS"(i8* %return226)
  %tmp228 = load %gem, %gem* %this
  %tmp229 = extractvalue %gem %tmp228, 18
  %return230 = call { double, double* } @"setcomp@F[FFI"(double* %tmp229, double %return227, i64 %i.0)
  %output232 = extractvalue { double, double* } %return230, 1
  %54 = insertvalue %gem %tmp228, double* %output232, 18
  store %gem %54, %gem* %this
  %return235 = call double @"getcomp@F[FI"(double* %output232, i64 %i.0)
  %return236 = fcmp one double %return235, 0.000000e+00
  br i1 %return236, label %true238, label %end239

true238:                                          ; preds = %end213
  %return242 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @16, i64 0, i64 0), i8* %return49)
  %return243 = call i8* @"chs@SS"(i8* %return242)
  %return244 = call i64 @"atoi@IS"(i8* %return243)
  %tmp246 = extractvalue %gem %54, 5
  %return247 = call { i64, i64* } @"setcomp@I[III"(i64* %tmp246, i64 %return244, i64 %i.0)
  %output249 = extractvalue { i64, i64* } %return247, 1
  %55 = insertvalue %gem %54, i64* %output249, 5
  store %gem %55, %gem* %this
  br label %end239

end239:                                           ; preds = %true238, %end213
  %return252 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @17, i64 0, i64 0), i8* %return49)
  %return253 = call double @"chf@FS"(i8* %return252)
  %tmp254 = load %gem, %gem* %this
  %tmp255 = extractvalue %gem %tmp254, 22
  %return256 = call { double, double* } @"setcomp@F[FFI"(double* %tmp255, double %return253, i64 %i.0)
  %output258 = extractvalue { double, double* } %return256, 1
  %56 = insertvalue %gem %tmp254, double* %output258, 22
  store %gem %56, %gem* %this
  %return261 = call double @"getcomp@F[FI"(double* %output258, i64 %i.0)
  %return262 = fcmp ogt double %return261, 0.000000e+00
  br i1 %return262, label %true264, label %end265

true264:                                          ; preds = %end239
  %return268 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @18, i64 0, i64 0), i8* %return49)
  %return269 = call i8* @"chs@SS"(i8* %return268)
  %return270 = call i64 @"atoi@IS"(i8* %return269)
  %tmp272 = extractvalue %gem %56, 8
  %return273 = call { i64, i64* } @"setcomp@I[III"(i64* %tmp272, i64 %return270, i64 %i.0)
  %output275 = extractvalue { i64, i64* } %return273, 1
  %57 = insertvalue %gem %56, i64* %output275, 8
  store %gem %57, %gem* %this
  br label %end265

end265:                                           ; preds = %true264, %end239
  %return277 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @19, i64 0, i64 0), i8* %return49)
  %return278 = call <2 x double> @"chu@US"(i8* %return277)
  %return280 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @20, i64 0, i64 0), i8* %return49)
  %return281 = call <2 x double> @"chu@US"(i8* %return280)
  %return283 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @21, i64 0, i64 0), i8* %return49)
  %return284 = call double @"chf@FS"(i8* %return283)
  %return286 = fcmp one double %return284, 0.000000e+00
  br i1 %return286, label %true288, label %end289

true288:                                          ; preds = %end265
  store <2 x double> %return278, <2 x double>* %0
  store <2 x double> %return281, <2 x double>* %1
  %return293 = call double @"radians@FF"(double %return284)
  %return294 = call double @"neg@FF"(double %return293)
  store double %return294, double* %2
  call void @"affineRot@2UUF"(<4 x double>* %_m2, <2 x double>* %0, <2 x double>* %1, double* %2)
  %_m2295 = load <4 x double>, <4 x double>* %_m2
  %return296 = call double @"getcomp@F2II"(<4 x double> %_m2295, i64 0, i64 0)
  %return298 = call double @"getcomp@F2II"(<4 x double> %_m2295, i64 0, i64 1)
  %return299 = call <2 x double> @"set@UFF"(double %return296, double %return298)
  %return301 = call double @"getcomp@F2II"(<4 x double> %_m2295, i64 1, i64 0)
  %return303 = call double @"getcomp@F2II"(<4 x double> %_m2295, i64 1, i64 1)
  %return304 = call <2 x double> @"set@UFF"(double %return301, double %return303)
  br label %end289

end289:                                           ; preds = %true288, %end265
  %_x.0 = phi <2 x double> [ %return299, %true288 ], [ %return278, %end265 ]
  %_y.0 = phi <2 x double> [ %return304, %true288 ], [ %return281, %end265 ]
  %tmp307 = load %gem, %gem* %this
  %tmp308 = extractvalue %gem %tmp307, 31
  %return309 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp308, <2 x double> %_x.0, i64 %i.0)
  %output311 = extractvalue { <2 x double>, <2 x double>* } %return309, 1
  %58 = insertvalue %gem %tmp307, <2 x double>* %output311, 31
  %tmp315 = extractvalue %gem %58, 32
  %return316 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp315, <2 x double> %_y.0, i64 %i.0)
  %output318 = extractvalue { <2 x double>, <2 x double>* } %return316, 1
  %59 = insertvalue %gem %58, <2 x double>* %output318, 32
  %return321 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @22, i64 0, i64 0), i8* %return49)
  %return322 = call <2 x double> @"chu@US"(i8* %return321)
  %tmp324 = extractvalue %gem %59, 33
  %return325 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp324, <2 x double> %return322, i64 %i.0)
  %output327 = extractvalue { <2 x double>, <2 x double>* } %return325, 1
  %60 = insertvalue %gem %59, <2 x double>* %output327, 33
  %return330 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @23, i64 0, i64 0), i8* %return49)
  %return331 = call i64 @"chi@IS"(i8* %return330)
  %tmp333 = extractvalue %gem %60, 9
  %return334 = call { i64, i64* } @"setcomp@I[III"(i64* %tmp333, i64 %return331, i64 %i.0)
  %output336 = extractvalue { i64, i64* } %return334, 1
  %61 = insertvalue %gem %60, i64* %output336, 9
  store %gem %61, %gem* %this
  %return339 = call i64 @"getcomp@I[II"(i64* %output336, i64 %i.0)
  %62 = icmp ne i64 %return339, 0
  br i1 %62, label %true340, label %end341

true340:                                          ; preds = %end289
  %return343 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @24, i64 0, i64 0), i8* %return49)
  %return344 = call <2 x double> @"chu@US"(i8* %return343)
  %return346 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @25, i64 0, i64 0), i8* %return49)
  %return347 = call <2 x double> @"chu@US"(i8* %return346)
  %return349 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @26, i64 0, i64 0), i8* %return49)
  %return350 = call double @"chf@FS"(i8* %return349)
  %return352 = fcmp one double %return350, 0.000000e+00
  br i1 %return352, label %true354, label %end355

end341:                                           ; preds = %end355, %end289
  %output395 = add i64 %i.0, 1
  br label %cond

true354:                                          ; preds = %true340
  store <2 x double> %return344, <2 x double>* %3
  store <2 x double> %return347, <2 x double>* %4
  %return359 = call double @"radians@FF"(double %return350)
  %return360 = call double @"neg@FF"(double %return359)
  store double %return360, double* %5
  call void @"affineRot@2UUF"(<4 x double>* %_m2, <2 x double>* %3, <2 x double>* %4, double* %5)
  %_m2361 = load <4 x double>, <4 x double>* %_m2
  %return362 = call double @"getcomp@F2II"(<4 x double> %_m2361, i64 0, i64 0)
  %return364 = call double @"getcomp@F2II"(<4 x double> %_m2361, i64 0, i64 1)
  %return365 = call <2 x double> @"set@UFF"(double %return362, double %return364)
  %return367 = call double @"getcomp@F2II"(<4 x double> %_m2361, i64 1, i64 0)
  %return369 = call double @"getcomp@F2II"(<4 x double> %_m2361, i64 1, i64 1)
  %return370 = call <2 x double> @"set@UFF"(double %return367, double %return369)
  br label %end355

end355:                                           ; preds = %true354, %true340
  %_x.1 = phi <2 x double> [ %return365, %true354 ], [ %return344, %true340 ]
  %_y.1 = phi <2 x double> [ %return370, %true354 ], [ %return347, %true340 ]
  %tmp373 = load %gem, %gem* %this
  %tmp374 = extractvalue %gem %tmp373, 34
  %return375 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp374, <2 x double> %_x.1, i64 %i.0)
  %output377 = extractvalue { <2 x double>, <2 x double>* } %return375, 1
  %63 = insertvalue %gem %tmp373, <2 x double>* %output377, 34
  %tmp381 = extractvalue %gem %63, 35
  %return382 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp381, <2 x double> %_y.1, i64 %i.0)
  %output384 = extractvalue { <2 x double>, <2 x double>* } %return382, 1
  %64 = insertvalue %gem %63, <2 x double>* %output384, 35
  %return387 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @27, i64 0, i64 0), i8* %return49)
  %return388 = call <2 x double> @"chu@US"(i8* %return387)
  %tmp390 = extractvalue %gem %64, 36
  %return391 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp390, <2 x double> %return388, i64 %i.0)
  %output393 = extractvalue { <2 x double>, <2 x double>* } %return391, 1
  %65 = insertvalue %gem %64, <2 x double>* %output393, 36
  store %gem %65, %gem* %this
  br label %end341

true397:                                          ; preds = %end
  %return399 = call double @"chf@FS"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @28, i64 0, i64 0))
  %return401 = call <3 x double> @"set@VFFF"(double 0.000000e+00, double 0.000000e+00, double %return399)
  %return402 = call <9 x double> @"maketransform@3IV"(i64 0, <3 x double> %return401)
  %cast = call <4 x double> @"set@23"(<9 x double> %return402)
  %tmp403 = load %gem, %gem* %this
  %66 = insertvalue %gem %tmp403, <4 x double> %cast, 43
  store %gem %66, %gem* %this
  br label %end398

end398:                                           ; preds = %true397, %end
  %FF404 = load i64, i64* %FF
  %67 = icmp ne i64 %FF404, 0
  br i1 %67, label %true405, label %end406

true405:                                          ; preds = %end398
  %return407 = call double @"chf@FS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @29, i64 0, i64 0))
  %tmp408 = load %gem, %gem* %this
  %68 = insertvalue %gem %tmp408, double %return407, 26
  store %gem %68, %gem* %this
  %return410 = fcmp one double %return407, 0.000000e+00
  br i1 %return410, label %true412, label %end413

end406:                                           ; preds = %end459, %end493, %end398
  ret void

true412:                                          ; preds = %true405
  %return414 = call i64 @"chi@IS"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @30, i64 0, i64 0))
  %69 = insertvalue %gem %68, i64 %return414, 10
  store %gem %69, %gem* %this
  br label %end413

end413:                                           ; preds = %true412, %true405
  %return416 = call double @"chf@FS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @31, i64 0, i64 0))
  %tmp417 = load %gem, %gem* %this
  %70 = insertvalue %gem %tmp417, double %return416, 27
  store %gem %70, %gem* %this
  %return419 = fcmp one double %return416, 0.000000e+00
  br i1 %return419, label %true421, label %end422

true421:                                          ; preds = %end413
  %return423 = call i64 @"chi@IS"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @32, i64 0, i64 0))
  %71 = insertvalue %gem %70, i64 %return423, 11
  store %gem %71, %gem* %this
  br label %end422

end422:                                           ; preds = %true421, %end413
  %return425 = call double @"chf@FS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @33, i64 0, i64 0))
  %tmp426 = load %gem, %gem* %this
  %72 = insertvalue %gem %tmp426, double %return425, 28
  store %gem %72, %gem* %this
  %return428 = fcmp one double %return425, 0.000000e+00
  br i1 %return428, label %true430, label %end431

true430:                                          ; preds = %end422
  %return432 = call i64 @"chi@IS"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @34, i64 0, i64 0))
  %73 = insertvalue %gem %72, i64 %return432, 12
  store %gem %73, %gem* %this
  br label %end431

end431:                                           ; preds = %true430, %end422
  %return434 = call double @"chf@FS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @35, i64 0, i64 0))
  %tmp435 = load %gem, %gem* %this
  %74 = insertvalue %gem %tmp435, double %return434, 29
  store %gem %74, %gem* %this
  %return437 = fcmp ogt double %return434, 0.000000e+00
  br i1 %return437, label %true439, label %end440

true439:                                          ; preds = %end431
  %return441 = call i64 @"chi@IS"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @36, i64 0, i64 0))
  %75 = insertvalue %gem %74, i64 %return441, 13
  store %gem %75, %gem* %this
  br label %end440

end440:                                           ; preds = %true439, %end431
  %return443 = call double @"chf@FS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @37, i64 0, i64 0))
  %tmp444 = load %gem, %gem* %this
  %76 = insertvalue %gem %tmp444, double %return443, 30
  store %gem %76, %gem* %this
  %return446 = fcmp ogt double %return443, 0.000000e+00
  br i1 %return446, label %true448, label %end449

true448:                                          ; preds = %end440
  %return450 = call i64 @"chi@IS"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @38, i64 0, i64 0))
  %77 = insertvalue %gem %76, i64 %return450, 14
  store %gem %77, %gem* %this
  br label %end449

end449:                                           ; preds = %true448, %end440
  %return452 = call <2 x double> @"chu@US"(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @39, i64 0, i64 0))
  %return453 = call <2 x double> @"chu@US"(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @40, i64 0, i64 0))
  %return454 = call double @"chf@FS"(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @41, i64 0, i64 0))
  %return456 = fcmp one double %return454, 0.000000e+00
  br i1 %return456, label %true458, label %end459

true458:                                          ; preds = %end449
  store <2 x double> %return452, <2 x double>* %6
  store <2 x double> %return453, <2 x double>* %7
  %return463 = call double @"radians@FF"(double %return454)
  %return464 = call double @"neg@FF"(double %return463)
  store double %return464, double* %8
  call void @"affineRot@2UUF"(<4 x double>* %_m2, <2 x double>* %6, <2 x double>* %7, double* %8)
  %_m2465 = load <4 x double>, <4 x double>* %_m2
  %return466 = call double @"getcomp@F2II"(<4 x double> %_m2465, i64 0, i64 0)
  %return468 = call double @"getcomp@F2II"(<4 x double> %_m2465, i64 0, i64 1)
  %return469 = call <2 x double> @"set@UFF"(double %return466, double %return468)
  %return471 = call double @"getcomp@F2II"(<4 x double> %_m2465, i64 1, i64 0)
  %return473 = call double @"getcomp@F2II"(<4 x double> %_m2465, i64 1, i64 1)
  %return474 = call <2 x double> @"set@UFF"(double %return471, double %return473)
  br label %end459

end459:                                           ; preds = %true458, %end449
  %_x.2 = phi <2 x double> [ %return469, %true458 ], [ %return452, %end449 ]
  %_y.2 = phi <2 x double> [ %return474, %true458 ], [ %return453, %end449 ]
  %tmp476 = load %gem, %gem* %this
  %78 = insertvalue %gem %tmp476, <2 x double> %_x.2, 37
  %79 = insertvalue %gem %78, <2 x double> %_y.2, 38
  %return479 = call <2 x double> @"chu@US"(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @42, i64 0, i64 0))
  %80 = insertvalue %gem %79, <2 x double> %return479, 39
  %return481 = call i64 @"chi@IS"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @43, i64 0, i64 0))
  %81 = insertvalue %gem %80, i64 %return481, 0
  store %gem %81, %gem* %this
  %82 = icmp ne i64 %return481, 0
  br i1 %82, label %true484, label %end406

true484:                                          ; preds = %end459
  %return486 = call <2 x double> @"chu@US"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @44, i64 0, i64 0))
  %return487 = call <2 x double> @"chu@US"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @45, i64 0, i64 0))
  %return488 = call double @"chf@FS"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @46, i64 0, i64 0))
  %return490 = fcmp one double %return488, 0.000000e+00
  br i1 %return490, label %true492, label %end493

true492:                                          ; preds = %true484
  store <2 x double> %return486, <2 x double>* %9
  store <2 x double> %return487, <2 x double>* %10
  %return497 = call double @"radians@FF"(double %return488)
  %return498 = call double @"neg@FF"(double %return497)
  store double %return498, double* %11
  call void @"affineRot@2UUF"(<4 x double>* %_m2, <2 x double>* %9, <2 x double>* %10, double* %11)
  %_m2499 = load <4 x double>, <4 x double>* %_m2
  %return500 = call double @"getcomp@F2II"(<4 x double> %_m2499, i64 0, i64 0)
  %return502 = call double @"getcomp@F2II"(<4 x double> %_m2499, i64 0, i64 1)
  %return503 = call <2 x double> @"set@UFF"(double %return500, double %return502)
  %return505 = call double @"getcomp@F2II"(<4 x double> %_m2499, i64 1, i64 0)
  %return507 = call double @"getcomp@F2II"(<4 x double> %_m2499, i64 1, i64 1)
  %return508 = call <2 x double> @"set@UFF"(double %return505, double %return507)
  br label %end493

end493:                                           ; preds = %true492, %true484
  %_x.3 = phi <2 x double> [ %return503, %true492 ], [ %return486, %true484 ]
  %_y.3 = phi <2 x double> [ %return508, %true492 ], [ %return487, %true484 ]
  %tmp510 = load %gem, %gem* %this
  %83 = insertvalue %gem %tmp510, <2 x double> %_x.3, 40
  %84 = insertvalue %gem %83, <2 x double> %_y.3, 41
  %return513 = call <2 x double> @"chu@US"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @47, i64 0, i64 0))
  %85 = insertvalue %gem %84, <2 x double> %return513, 42
  store %gem %85, %gem* %this
  br label %end406
}

; Function Attrs: nounwind readnone
declare i64 @"len@I[S"(i8**) #1

; Function Attrs: nounwind readnone
declare i64* @"resize@[II"(i64*, i64) #1

; Function Attrs: nounwind readnone
declare double* @"resize@[FI"(double*, i64) #1

; Function Attrs: nounwind readnone
declare <2 x double>* @"resize@[UI"(<2 x double>*, i64) #1

; Function Attrs: nounwind readnone
declare i8* @"concat@SSS"(i8*, i8*) #1

; Function Attrs: nounwind readnone
declare double @"chf@FS"(i8*) #1

; Function Attrs: nounwind readnone
declare { double, double* } @"setcomp@F[FFI"(double*, double, i64) #1

; Function Attrs: nounwind readnone
declare double @"getcomp@F[FI"(double*, i64) #1

; Function Attrs: nounwind readnone
declare i8* @"chs@SS"(i8*) #1

; Function Attrs: nounwind readnone
declare i64 @"atoi@IS"(i8*) #1

; Function Attrs: nounwind readnone
declare { i64, i64* } @"setcomp@I[III"(i64*, i64, i64) #1

; Function Attrs: nounwind readnone
declare <2 x double> @"chu@US"(i8*) #1

; Function Attrs: nounwind
declare double @"radians@FF"(double) #2

; Function Attrs: nounwind readnone
declare double @"getcomp@F2II"(<4 x double>, i64, i64) #1

; Function Attrs: nounwind readnone
declare { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>*, <2 x double>, i64) #1

; Function Attrs: nounwind readnone
declare i64 @"chi@IS"(i8*) #1

; Function Attrs: nounwind readnone
declare i64 @"getcomp@I[II"(i64*, i64) #1

; Function Attrs: alwaysinline nounwind
define private %gem @"gem@Z3gemM44N3PFFIN3resIN3v1t[IN3v2t[IN3v3t[IN3v4t[IN3p1t[IN3p2t[IN3P1t[IN3PPL[IN4fv1tIN4fv2tIN4fv3tIN4fp1tIN4fp2tIN3v1w[FN3v2w[FN3v3w[FN3v4w[FN3pbw[FN3p1w[FN3p2w[FN3P1w[FN3CLR[FN2OM[FN1A[FN4fv1wFN4fv2wFN4fv3wFN4fp1wFN4fp2wFN1x[UN1y[UN1o[UN2px[UN2py[UN2po[UN2fxUN2fyUN2foUN3pfxUN3pfyUN3pfoUN4TMm22II[I[I[I[I[I[I[I[IIIIII[F[F[F[F[F[F[F[F[F[F[FFFFFF[U[U[U[U[U[UUUUUUU2"(i64* %PFF, i64* %res, i64** %v1t, i64** %v2t, i64** %v3t, i64** %v4t, i64** %p1t, i64** %p2t, i64** %P1t, i64** %PPL, i64* %fv1t, i64* %fv2t, i64* %fv3t, i64* %fp1t, i64* %fp2t, double** %v1w, double** %v2w, double** %v3w, double** %v4w, double** %pbw, double** %p1w, double** %p2w, double** %P1w, double** %CLR, double** %OM, double** %A, double* %fv1w, double* %fv2w, double* %fv3w, double* %fp1w, double* %fp2w, <2 x double>** %x, <2 x double>** %y, <2 x double>** %o, <2 x double>** %px, <2 x double>** %py, <2 x double>** %po, <2 x double>* %fx, <2 x double>* %fy, <2 x double>* %fo, <2 x double>* %pfx, <2 x double>* %pfy, <2 x double>* %pfo, <4 x double>* %TMm2) #0 {
__llvm_entry:
  %PFF1 = load i64, i64* %PFF
  %0 = insertvalue %gem undef, i64 %PFF1, 0
  %res2 = load i64, i64* %res
  %1 = insertvalue %gem %0, i64 %res2, 1
  %v1t4 = load i64*, i64** %v1t
  %2 = insertvalue %gem %1, i64* %v1t4, 2
  %v2t6 = load i64*, i64** %v2t
  %3 = insertvalue %gem %2, i64* %v2t6, 3
  %v3t8 = load i64*, i64** %v3t
  %4 = insertvalue %gem %3, i64* %v3t8, 4
  %v4t10 = load i64*, i64** %v4t
  %5 = insertvalue %gem %4, i64* %v4t10, 5
  %p1t12 = load i64*, i64** %p1t
  %6 = insertvalue %gem %5, i64* %p1t12, 6
  %p2t14 = load i64*, i64** %p2t
  %7 = insertvalue %gem %6, i64* %p2t14, 7
  %P1t16 = load i64*, i64** %P1t
  %8 = insertvalue %gem %7, i64* %P1t16, 8
  %PPL18 = load i64*, i64** %PPL
  %9 = insertvalue %gem %8, i64* %PPL18, 9
  %fv1t20 = load i64, i64* %fv1t
  %10 = insertvalue %gem %9, i64 %fv1t20, 10
  %fv2t22 = load i64, i64* %fv2t
  %11 = insertvalue %gem %10, i64 %fv2t22, 11
  %fv3t24 = load i64, i64* %fv3t
  %12 = insertvalue %gem %11, i64 %fv3t24, 12
  %fp1t26 = load i64, i64* %fp1t
  %13 = insertvalue %gem %12, i64 %fp1t26, 13
  %fp2t28 = load i64, i64* %fp2t
  %14 = insertvalue %gem %13, i64 %fp2t28, 14
  %v1w30 = load double*, double** %v1w
  %15 = insertvalue %gem %14, double* %v1w30, 15
  %v2w32 = load double*, double** %v2w
  %16 = insertvalue %gem %15, double* %v2w32, 16
  %v3w34 = load double*, double** %v3w
  %17 = insertvalue %gem %16, double* %v3w34, 17
  %v4w36 = load double*, double** %v4w
  %18 = insertvalue %gem %17, double* %v4w36, 18
  %pbw38 = load double*, double** %pbw
  %19 = insertvalue %gem %18, double* %pbw38, 19
  %p1w40 = load double*, double** %p1w
  %20 = insertvalue %gem %19, double* %p1w40, 20
  %p2w42 = load double*, double** %p2w
  %21 = insertvalue %gem %20, double* %p2w42, 21
  %P1w44 = load double*, double** %P1w
  %22 = insertvalue %gem %21, double* %P1w44, 22
  %CLR46 = load double*, double** %CLR
  %23 = insertvalue %gem %22, double* %CLR46, 23
  %OM48 = load double*, double** %OM
  %24 = insertvalue %gem %23, double* %OM48, 24
  %A50 = load double*, double** %A
  %25 = insertvalue %gem %24, double* %A50, 25
  %fv1w52 = load double, double* %fv1w
  %26 = insertvalue %gem %25, double %fv1w52, 26
  %fv2w54 = load double, double* %fv2w
  %27 = insertvalue %gem %26, double %fv2w54, 27
  %fv3w56 = load double, double* %fv3w
  %28 = insertvalue %gem %27, double %fv3w56, 28
  %fp1w58 = load double, double* %fp1w
  %29 = insertvalue %gem %28, double %fp1w58, 29
  %fp2w60 = load double, double* %fp2w
  %30 = insertvalue %gem %29, double %fp2w60, 30
  %x62 = load <2 x double>*, <2 x double>** %x
  %31 = insertvalue %gem %30, <2 x double>* %x62, 31
  %y64 = load <2 x double>*, <2 x double>** %y
  %32 = insertvalue %gem %31, <2 x double>* %y64, 32
  %o66 = load <2 x double>*, <2 x double>** %o
  %33 = insertvalue %gem %32, <2 x double>* %o66, 33
  %px68 = load <2 x double>*, <2 x double>** %px
  %34 = insertvalue %gem %33, <2 x double>* %px68, 34
  %py70 = load <2 x double>*, <2 x double>** %py
  %35 = insertvalue %gem %34, <2 x double>* %py70, 35
  %po72 = load <2 x double>*, <2 x double>** %po
  %36 = insertvalue %gem %35, <2 x double>* %po72, 36
  %fx74 = load <2 x double>, <2 x double>* %fx
  %37 = insertvalue %gem %36, <2 x double> %fx74, 37
  %fy76 = load <2 x double>, <2 x double>* %fy
  %38 = insertvalue %gem %37, <2 x double> %fy76, 38
  %fo78 = load <2 x double>, <2 x double>* %fo
  %39 = insertvalue %gem %38, <2 x double> %fo78, 39
  %pfx80 = load <2 x double>, <2 x double>* %pfx
  %40 = insertvalue %gem %39, <2 x double> %pfx80, 40
  %pfy82 = load <2 x double>, <2 x double>* %pfy
  %41 = insertvalue %gem %40, <2 x double> %pfy82, 41
  %pfo84 = load <2 x double>, <2 x double>* %pfo
  %42 = insertvalue %gem %41, <2 x double> %pfo84, 42
  %TMm286 = load <4 x double>, <4 x double>* %TMm2
  %43 = insertvalue %gem %42, <4 x double> %TMm286, 43
  ret %gem %43
}

; Function Attrs: alwaysinline nounwind
define private %gem @"gem@Z3gemM44N3PFFIN3resIN3v1t[IN3v2t[IN3v3t[IN3v4t[IN3p1t[IN3p2t[IN3P1t[IN3PPL[IN4fv1tIN4fv2tIN4fv3tIN4fp1tIN4fp2tIN3v1w[FN3v2w[FN3v3w[FN3v4w[FN3pbw[FN3p1w[FN3p2w[FN3P1w[FN3CLR[FN2OM[FN1A[FN4fv1wFN4fv2wFN4fv3wFN4fp1wFN4fp2wFN1x[UN1y[UN1o[UN2px[UN2py[UN2po[UN2fxUN2fyUN2foUN3pfxUN3pfyUN3pfoUN4TMm22"() #0 {
__llvm_entry:
  %0 = alloca i64
  %1 = alloca i64*
  %2 = alloca i64*
  %3 = alloca i64*
  %4 = alloca i64*
  %5 = alloca i64*
  %6 = alloca i64*
  %7 = alloca i64*
  %8 = alloca i64*
  %9 = alloca i64
  %10 = alloca i64
  %11 = alloca i64
  %12 = alloca i64
  %13 = alloca i64
  %14 = alloca double*
  %15 = alloca double*
  %16 = alloca double*
  %17 = alloca double*
  %18 = alloca double*
  %19 = alloca double*
  %20 = alloca double*
  %21 = alloca double*
  %22 = alloca double*
  %23 = alloca double*
  %24 = alloca double*
  %25 = alloca double
  %26 = alloca double
  %27 = alloca double
  %28 = alloca double
  %29 = alloca double
  %30 = alloca <2 x double>*
  %31 = alloca <2 x double>*
  %32 = alloca <2 x double>*
  %33 = alloca <2 x double>*
  %34 = alloca <2 x double>*
  %35 = alloca <2 x double>*
  %36 = alloca <2 x double>
  %37 = alloca <2 x double>
  %38 = alloca <2 x double>
  %39 = alloca <2 x double>
  %40 = alloca <2 x double>
  %41 = alloca <2 x double>
  %42 = alloca <4 x double>
  %43 = alloca i64
  store i64 0, i64* %43
  store i64 0, i64* %0
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @48, i64 0, i64 0), i64** %1
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @48, i64 0, i64 0), i64** %2
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @48, i64 0, i64 0), i64** %3
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @48, i64 0, i64 0), i64** %4
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @48, i64 0, i64 0), i64** %5
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @48, i64 0, i64 0), i64** %6
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @48, i64 0, i64 0), i64** %7
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @48, i64 0, i64 0), i64** %8
  store i64 0, i64* %9
  store i64 0, i64* %10
  store i64 0, i64* %11
  store i64 0, i64* %12
  store i64 0, i64* %13
  store double* getelementptr inbounds ([0 x double], [0 x double]* @49, i64 0, i64 0), double** %14
  store double* getelementptr inbounds ([0 x double], [0 x double]* @49, i64 0, i64 0), double** %15
  store double* getelementptr inbounds ([0 x double], [0 x double]* @49, i64 0, i64 0), double** %16
  store double* getelementptr inbounds ([0 x double], [0 x double]* @49, i64 0, i64 0), double** %17
  store double* getelementptr inbounds ([0 x double], [0 x double]* @49, i64 0, i64 0), double** %18
  store double* getelementptr inbounds ([0 x double], [0 x double]* @49, i64 0, i64 0), double** %19
  store double* getelementptr inbounds ([0 x double], [0 x double]* @49, i64 0, i64 0), double** %20
  store double* getelementptr inbounds ([0 x double], [0 x double]* @49, i64 0, i64 0), double** %21
  store double* getelementptr inbounds ([0 x double], [0 x double]* @49, i64 0, i64 0), double** %22
  store double* getelementptr inbounds ([0 x double], [0 x double]* @49, i64 0, i64 0), double** %23
  store double* getelementptr inbounds ([0 x double], [0 x double]* @49, i64 0, i64 0), double** %24
  store double 0.000000e+00, double* %25
  store double 0.000000e+00, double* %26
  store double 0.000000e+00, double* %27
  store double 0.000000e+00, double* %28
  store double 0.000000e+00, double* %29
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @50, i64 0, i64 0), <2 x double>** %30
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @50, i64 0, i64 0), <2 x double>** %31
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @50, i64 0, i64 0), <2 x double>** %32
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @50, i64 0, i64 0), <2 x double>** %33
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @50, i64 0, i64 0), <2 x double>** %34
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @50, i64 0, i64 0), <2 x double>** %35
  store <2 x double> zeroinitializer, <2 x double>* %36
  store <2 x double> zeroinitializer, <2 x double>* %37
  store <2 x double> zeroinitializer, <2 x double>* %38
  store <2 x double> zeroinitializer, <2 x double>* %39
  store <2 x double> zeroinitializer, <2 x double>* %40
  store <2 x double> zeroinitializer, <2 x double>* %41
  store <4 x double> zeroinitializer, <4 x double>* %42
  %gem = call %gem @"gem@Z3gemM44N3PFFIN3resIN3v1t[IN3v2t[IN3v3t[IN3v4t[IN3p1t[IN3p2t[IN3P1t[IN3PPL[IN4fv1tIN4fv2tIN4fv3tIN4fp1tIN4fp2tIN3v1w[FN3v2w[FN3v3w[FN3v4w[FN3pbw[FN3p1w[FN3p2w[FN3P1w[FN3CLR[FN2OM[FN1A[FN4fv1wFN4fv2wFN4fv3wFN4fp1wFN4fp2wFN1x[UN1y[UN1o[UN2px[UN2py[UN2po[UN2fxUN2fyUN2foUN3pfxUN3pfyUN3pfoUN4TMm22II[I[I[I[I[I[I[I[IIIIII[F[F[F[F[F[F[F[F[F[F[FFFFFF[U[U[U[U[U[UUUUUUU2"(i64* %43, i64* %0, i64** %1, i64** %2, i64** %3, i64** %4, i64** %5, i64** %6, i64** %7, i64** %8, i64* %9, i64* %10, i64* %11, i64* %12, i64* %13, double** %14, double** %15, double** %16, double** %17, double** %18, double** %19, double** %20, double** %21, double** %22, double** %23, double** %24, double* %25, double* %26, double* %27, double* %28, double* %29, <2 x double>** %30, <2 x double>** %31, <2 x double>** %32, <2 x double>** %33, <2 x double>** %34, <2 x double>** %35, <2 x double>* %36, <2 x double>* %37, <2 x double>* %38, <2 x double>* %39, <2 x double>* %40, <2 x double>* %41, <4 x double>* %42)
  ret %gem %gem
}

; Function Attrs: alwaysinline nounwind
define private void @"gemPrmBuild@Z6gemPrmM52N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PN8pc_DISC2[V[SI[I[F"(%gemPrm* %this, i8*** %sIDX, i64* %res, i64** %TYPE, double** %w) #0 {
__llvm_entry:
  %calc = alloca <3 x double>
  %0 = alloca double
  %1 = alloca double
  %TYPE1 = load i64*, i64** %TYPE
  %return = call i64 @"max@I[I"(i64* %TYPE1)
  %return2 = call i64 @"gt@III"(i64 %return, i64 26)
  %2 = icmp ne i64 %return2, 0
  br i1 %2, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %this3 = load %gemPrm, %gemPrm* %this
  %rings2_val = extractvalue %gemPrm %this3, 0
  %res4 = load i64, i64* %res
  %output = call double* @"resize@[FI"(double* %rings2_val, i64 %res4)
  %3 = insertvalue %gemPrm %this3, double* %output, 0
  %4 = insertvalue %gemPrm %3, double* %output, 5
  %5 = insertvalue %gemPrm %4, double* %output, 4
  %6 = insertvalue %gemPrm %5, double* %output, 3
  %7 = insertvalue %gemPrm %6, double* %output, 2
  %8 = insertvalue %gemPrm %7, double* %output, 1
  store %gemPrm %8, %gemPrm* %this
  %blob = extractvalue %gemPrm %8, 6
  %res13 = load i64, i64* %res
  %output14 = call <3 x double>* @"resize@[VI"(<3 x double>* %blob, i64 %res13)
  %9 = insertvalue %gemPrm %8, <3 x double>* %output14, 6
  %10 = insertvalue %gemPrm %9, <3 x double>* %output14, 11
  %11 = insertvalue %gemPrm %10, <3 x double>* %output14, 10
  %12 = insertvalue %gemPrm %11, <3 x double>* %output14, 9
  %13 = insertvalue %gemPrm %12, <3 x double>* %output14, 8
  %14 = insertvalue %gemPrm %13, <3 x double>* %output14, 7
  %15 = insertvalue %gemPrm %14, <3 x double>* %output14, 51
  store %gemPrm %15, %gemPrm* %this
  %curl_c = extractvalue %gemPrm %15, 13
  %res25 = load i64, i64* %res
  %output26 = call <2 x double>* @"resize@[UI"(<2 x double>* %curl_c, i64 %res25)
  %16 = insertvalue %gemPrm %15, <2 x double>* %output26, 13
  %17 = insertvalue %gemPrm %16, <2 x double>* %output26, 41
  %18 = insertvalue %gemPrm %17, <2 x double>* %output26, 40
  %19 = insertvalue %gemPrm %18, <2 x double>* %output26, 39
  %20 = insertvalue %gemPrm %19, <2 x double>* %output26, 38
  %21 = insertvalue %gemPrm %20, <2 x double>* %output26, 37
  %22 = insertvalue %gemPrm %21, <2 x double>* %output26, 36
  %23 = insertvalue %gemPrm %22, <2 x double>* %output26, 35
  %24 = insertvalue %gemPrm %23, <2 x double>* %output26, 34
  %25 = insertvalue %gemPrm %24, <2 x double>* %output26, 33
  %26 = insertvalue %gemPrm %25, <2 x double>* %output26, 32
  %27 = insertvalue %gemPrm %26, <2 x double>* %output26, 31
  %28 = insertvalue %gemPrm %27, <2 x double>* %output26, 30
  %29 = insertvalue %gemPrm %28, <2 x double>* %output26, 29
  %30 = insertvalue %gemPrm %29, <2 x double>* %output26, 28
  %31 = insertvalue %gemPrm %30, <2 x double>* %output26, 27
  %32 = insertvalue %gemPrm %31, <2 x double>* %output26, 26
  %33 = insertvalue %gemPrm %32, <2 x double>* %output26, 25
  %34 = insertvalue %gemPrm %33, <2 x double>* %output26, 24
  %35 = insertvalue %gemPrm %34, <2 x double>* %output26, 23
  %36 = insertvalue %gemPrm %35, <2 x double>* %output26, 22
  %37 = insertvalue %gemPrm %36, <2 x double>* %output26, 21
  %38 = insertvalue %gemPrm %37, <2 x double>* %output26, 20
  %39 = insertvalue %gemPrm %38, <2 x double>* %output26, 19
  %40 = insertvalue %gemPrm %39, <2 x double>* %output26, 18
  %41 = insertvalue %gemPrm %40, <2 x double>* %output26, 17
  %42 = insertvalue %gemPrm %41, <2 x double>* %output26, 16
  %43 = insertvalue %gemPrm %42, <2 x double>* %output26, 15
  %44 = insertvalue %gemPrm %43, <2 x double>* %output26, 14
  store %gemPrm %44, %gemPrm* %this
  %ngon = extractvalue %gemPrm %44, 42
  %res59 = load i64, i64* %res
  %output60 = call <4 x double>* @"resize@[PI"(<4 x double>* %ngon, i64 %res59)
  %45 = insertvalue %gemPrm %44, <4 x double>* %output60, 42
  %46 = insertvalue %gemPrm %45, <4 x double>* %output60, 50
  %47 = insertvalue %gemPrm %46, <4 x double>* %output60, 49
  %48 = insertvalue %gemPrm %47, <4 x double>* %output60, 48
  %49 = insertvalue %gemPrm %48, <4 x double>* %output60, 47
  %50 = insertvalue %gemPrm %49, <4 x double>* %output60, 46
  %51 = insertvalue %gemPrm %50, <4 x double>* %output60, 45
  %52 = insertvalue %gemPrm %51, <4 x double>* %output60, 44
  %53 = insertvalue %gemPrm %52, <4 x double>* %output60, 43
  store %gemPrm %53, %gemPrm* %this
  br label %cond

end:                                              ; preds = %cond, %__llvm_entry
  ret void

cond:                                             ; preds = %iter, %true
  %i.0 = phi i64 [ 0, %true ], [ %output793, %iter ]
  %res73 = load i64, i64* %res
  %return74 = call i64 @"lt@III"(i64 %i.0, i64 %res73)
  %54 = icmp ne i64 %return74, 0
  br i1 %54, label %body, label %end

body:                                             ; preds = %cond
  %TYPE76 = load i64*, i64** %TYPE
  %return78 = call i64 @"getcomp@I[II"(i64* %TYPE76, i64 %i.0)
  %sIDX79 = load i8**, i8*** %sIDX
  %return81 = call i8* @"getcomp@S[SI"(i8** %sIDX79, i64 %i.0)
  %return83 = call i64 @"lt@III"(i64 %return78, i64 27)
  %w84 = load double*, double** %w
  %return86 = call double @"getcomp@F[FI"(double* %w84, i64 %i.0)
  %return87 = fcmp oeq double %return86, 0.000000e+00
  %return88 = zext i1 %return87 to i64
  %return89 = call i64 @"or@III"(i64 %return83, i64 %return88)
  %55 = icmp ne i64 %return89, 0
  br i1 %55, label %iter, label %false

iter:                                             ; preds = %false741, %false575, %false96, %false384, %false218, %body, %true763, %true740, %true726, %true703, %true680, %true666, %true652, %true629, %true615, %true601, %true588, %true574, %true560, %true546, %true532, %true509, %true486, %true472, %true458, %true435, %true421, %true397, %true383, %true369, %true355, %true341, %true327, %true313, %true290, %true258, %true244, %true231, %true217, %true203, %true189, %true175, %true161, %true147, %true133, %true119, %true105
  %output793 = add i64 %i.0, 1
  br label %cond

false:                                            ; preds = %body
  %cast = sitofp i64 %return78 to double
  %return93 = call i64 @"find@I[FF"(double* getelementptr inbounds ([20 x double], [20 x double]* @51, i64 0, i64 0), double %cast)
  %return94 = call i64 @"ge@III"(i64 %return93, i64 0)
  %56 = icmp ne i64 %return94, 0
  br i1 %56, label %true95, label %false96

true95:                                           ; preds = %false
  %return99 = call i64 @"lt@III"(i64 %return78, i64 38)
  %57 = icmp ne i64 %return99, 0
  br i1 %57, label %true100, label %false101

false96:                                          ; preds = %false
  %return410 = call i64 @"find@I[FF"(double* getelementptr inbounds ([21 x double], [21 x double]* @73, i64 0, i64 0), double %cast)
  %return411 = call i64 @"ge@III"(i64 %return410, i64 0)
  %58 = icmp ne i64 %return411, 0
  br i1 %58, label %true412, label %iter

true100:                                          ; preds = %true95
  %return104 = call i64 @"eq@III"(i64 %return78, i64 27)
  %59 = icmp ne i64 %return104, 0
  br i1 %59, label %true105, label %false106

false101:                                         ; preds = %true95
  %return243 = call i64 @"eq@III"(i64 %return78, i64 38)
  %60 = icmp ne i64 %return243, 0
  br i1 %60, label %true244, label %false245

true105:                                          ; preds = %true100
  %return110 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @52, i64 0, i64 0), i8* %return81)
  %return111 = call <2 x double> @"chu@US"(i8* %return110)
  %tmp112 = load %gemPrm, %gemPrm* %this
  %tmp113 = extractvalue %gemPrm %tmp112, 13
  %return114 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp113, <2 x double> %return111, i64 %i.0)
  %output116 = extractvalue { <2 x double>, <2 x double>* } %return114, 1
  %61 = insertvalue %gemPrm %tmp112, <2 x double>* %output116, 13
  store %gemPrm %61, %gemPrm* %this
  br label %iter

false106:                                         ; preds = %true100
  %return118 = call i64 @"eq@III"(i64 %return78, i64 28)
  %62 = icmp ne i64 %return118, 0
  br i1 %62, label %true119, label %false120

true119:                                          ; preds = %false106
  %return124 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @53, i64 0, i64 0), i8* %return81)
  %return125 = call <4 x double> @"chp@PS"(i8* %return124)
  %tmp126 = load %gemPrm, %gemPrm* %this
  %tmp127 = extractvalue %gemPrm %tmp126, 42
  %return128 = call { <4 x double>, <4 x double>* } @"setcomp@P[PPI"(<4 x double>* %tmp127, <4 x double> %return125, i64 %i.0)
  %output130 = extractvalue { <4 x double>, <4 x double>* } %return128, 1
  %63 = insertvalue %gemPrm %tmp126, <4 x double>* %output130, 42
  store %gemPrm %63, %gemPrm* %this
  br label %iter

false120:                                         ; preds = %false106
  %return132 = call i64 @"eq@III"(i64 %return78, i64 29)
  %64 = icmp ne i64 %return132, 0
  br i1 %64, label %true133, label %false134

true133:                                          ; preds = %false120
  %return138 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @54, i64 0, i64 0), i8* %return81)
  %return139 = call <4 x double> @"chp@PS"(i8* %return138)
  %tmp140 = load %gemPrm, %gemPrm* %this
  %tmp141 = extractvalue %gemPrm %tmp140, 43
  %return142 = call { <4 x double>, <4 x double>* } @"setcomp@P[PPI"(<4 x double>* %tmp141, <4 x double> %return139, i64 %i.0)
  %output144 = extractvalue { <4 x double>, <4 x double>* } %return142, 1
  %65 = insertvalue %gemPrm %tmp140, <4 x double>* %output144, 43
  store %gemPrm %65, %gemPrm* %this
  br label %iter

false134:                                         ; preds = %false120
  %return146 = call i64 @"eq@III"(i64 %return78, i64 30)
  %66 = icmp ne i64 %return146, 0
  br i1 %66, label %true147, label %false148

true147:                                          ; preds = %false134
  %return152 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @55, i64 0, i64 0), i8* %return81)
  %return153 = call <3 x double> @"chv@VS"(i8* %return152)
  %tmp154 = load %gemPrm, %gemPrm* %this
  %tmp155 = extractvalue %gemPrm %tmp154, 6
  %return156 = call { <3 x double>, <3 x double>* } @"setcomp@V[VVI"(<3 x double>* %tmp155, <3 x double> %return153, i64 %i.0)
  %output158 = extractvalue { <3 x double>, <3 x double>* } %return156, 1
  %67 = insertvalue %gemPrm %tmp154, <3 x double>* %output158, 6
  store %gemPrm %67, %gemPrm* %this
  br label %iter

false148:                                         ; preds = %false134
  %return160 = call i64 @"eq@III"(i64 %return78, i64 31)
  %68 = icmp ne i64 %return160, 0
  br i1 %68, label %true161, label %false162

true161:                                          ; preds = %false148
  %return166 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @56, i64 0, i64 0), i8* %return81)
  %return167 = call <2 x double> @"chu@US"(i8* %return166)
  %tmp168 = load %gemPrm, %gemPrm* %this
  %tmp169 = extractvalue %gemPrm %tmp168, 32
  %return170 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp169, <2 x double> %return167, i64 %i.0)
  %output172 = extractvalue { <2 x double>, <2 x double>* } %return170, 1
  %69 = insertvalue %gemPrm %tmp168, <2 x double>* %output172, 32
  store %gemPrm %69, %gemPrm* %this
  br label %iter

false162:                                         ; preds = %false148
  %return174 = call i64 @"eq@III"(i64 %return78, i64 32)
  %70 = icmp ne i64 %return174, 0
  br i1 %70, label %true175, label %false176

true175:                                          ; preds = %false162
  %return180 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @57, i64 0, i64 0), i8* %return81)
  %return181 = call <2 x double> @"chu@US"(i8* %return180)
  %tmp182 = load %gemPrm, %gemPrm* %this
  %tmp183 = extractvalue %gemPrm %tmp182, 33
  %return184 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp183, <2 x double> %return181, i64 %i.0)
  %output186 = extractvalue { <2 x double>, <2 x double>* } %return184, 1
  %71 = insertvalue %gemPrm %tmp182, <2 x double>* %output186, 33
  store %gemPrm %71, %gemPrm* %this
  br label %iter

false176:                                         ; preds = %false162
  %return188 = call i64 @"eq@III"(i64 %return78, i64 34)
  %72 = icmp ne i64 %return188, 0
  br i1 %72, label %true189, label %false190

true189:                                          ; preds = %false176
  %return194 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @58, i64 0, i64 0), i8* %return81)
  %return195 = call <2 x double> @"chu@US"(i8* %return194)
  %tmp196 = load %gemPrm, %gemPrm* %this
  %tmp197 = extractvalue %gemPrm %tmp196, 15
  %return198 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp197, <2 x double> %return195, i64 %i.0)
  %output200 = extractvalue { <2 x double>, <2 x double>* } %return198, 1
  %73 = insertvalue %gemPrm %tmp196, <2 x double>* %output200, 15
  store %gemPrm %73, %gemPrm* %this
  br label %iter

false190:                                         ; preds = %false176
  %return202 = call i64 @"eq@III"(i64 %return78, i64 35)
  %74 = icmp ne i64 %return202, 0
  br i1 %74, label %true203, label %false204

true203:                                          ; preds = %false190
  %return208 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @59, i64 0, i64 0), i8* %return81)
  %return209 = call double @"chf@FS"(i8* %return208)
  %tmp210 = load %gemPrm, %gemPrm* %this
  %tmp211 = extractvalue %gemPrm %tmp210, 0
  %return212 = call { double, double* } @"setcomp@F[FFI"(double* %tmp211, double %return209, i64 %i.0)
  %output214 = extractvalue { double, double* } %return212, 1
  %75 = insertvalue %gemPrm %tmp210, double* %output214, 0
  store %gemPrm %75, %gemPrm* %this
  br label %iter

false204:                                         ; preds = %false190
  %return216 = call i64 @"eq@III"(i64 %return78, i64 36)
  %76 = icmp ne i64 %return216, 0
  br i1 %76, label %true217, label %false218

true217:                                          ; preds = %false204
  %return222 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @60, i64 0, i64 0), i8* %return81)
  %return223 = call <2 x double> @"chu@US"(i8* %return222)
  %tmp224 = load %gemPrm, %gemPrm* %this
  %tmp225 = extractvalue %gemPrm %tmp224, 16
  %return226 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp225, <2 x double> %return223, i64 %i.0)
  %output228 = extractvalue { <2 x double>, <2 x double>* } %return226, 1
  %77 = insertvalue %gemPrm %tmp224, <2 x double>* %output228, 16
  store %gemPrm %77, %gemPrm* %this
  br label %iter

false218:                                         ; preds = %false204
  %return230 = call i64 @"eq@III"(i64 %return78, i64 37)
  %78 = icmp ne i64 %return230, 0
  br i1 %78, label %true231, label %iter

true231:                                          ; preds = %false218
  %return235 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @61, i64 0, i64 0), i8* %return81)
  %return236 = call <2 x double> @"chu@US"(i8* %return235)
  %tmp237 = load %gemPrm, %gemPrm* %this
  %tmp238 = extractvalue %gemPrm %tmp237, 34
  %return239 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp238, <2 x double> %return236, i64 %i.0)
  %output241 = extractvalue { <2 x double>, <2 x double>* } %return239, 1
  %79 = insertvalue %gemPrm %tmp237, <2 x double>* %output241, 34
  store %gemPrm %79, %gemPrm* %this
  br label %iter

true244:                                          ; preds = %false101
  %return249 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @62, i64 0, i64 0), i8* %return81)
  %return250 = call <3 x double> @"chv@VS"(i8* %return249)
  %tmp251 = load %gemPrm, %gemPrm* %this
  %tmp252 = extractvalue %gemPrm %tmp251, 7
  %return253 = call { <3 x double>, <3 x double>* } @"setcomp@V[VVI"(<3 x double>* %tmp252, <3 x double> %return250, i64 %i.0)
  %output255 = extractvalue { <3 x double>, <3 x double>* } %return253, 1
  %80 = insertvalue %gemPrm %tmp251, <3 x double>* %output255, 7
  store %gemPrm %80, %gemPrm* %this
  br label %iter

false245:                                         ; preds = %false101
  %return257 = call i64 @"eq@III"(i64 %return78, i64 47)
  %81 = icmp ne i64 %return257, 0
  br i1 %81, label %true258, label %false259

true258:                                          ; preds = %false245
  %return263 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @63, i64 0, i64 0), i8* %return81)
  %return264 = call <2 x double> @"chu@US"(i8* %return263)
  %tmp265 = load %gemPrm, %gemPrm* %this
  %tmp266 = extractvalue %gemPrm %tmp265, 35
  %return267 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp266, <2 x double> %return264, i64 %i.0)
  %output269 = extractvalue { <2 x double>, <2 x double>* } %return267, 1
  %82 = insertvalue %gemPrm %tmp265, <2 x double>* %output269, 35
  store %gemPrm %82, %gemPrm* %this
  %return272 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %output269, i64 %i.0)
  %return273 = call double @"getcomp@FUI"(<2 x double> %return272, i64 0)
  %return278 = call double @"getcomp@FUI"(<2 x double> %return272, i64 1)
  store <3 x double> zeroinitializer, <3 x double>* %calc, !vex-initializer-store !3
  store double %return273, double* %0
  store double %return278, double* %1
  call void @"precalc_V_DISC2@VFF"(<3 x double>* %calc, double* %0, double* %1)
  %calc282 = load <3 x double>, <3 x double>* %calc
  %tmp283 = load %gemPrm, %gemPrm* %this
  %tmp284 = extractvalue %gemPrm %tmp283, 51
  %return285 = call { <3 x double>, <3 x double>* } @"setcomp@V[VVI"(<3 x double>* %tmp284, <3 x double> %calc282, i64 %i.0)
  %output287 = extractvalue { <3 x double>, <3 x double>* } %return285, 1
  %83 = insertvalue %gemPrm %tmp283, <3 x double>* %output287, 51
  store %gemPrm %83, %gemPrm* %this
  br label %iter

false259:                                         ; preds = %false245
  %return289 = call i64 @"eq@III"(i64 %return78, i64 48)
  %84 = icmp ne i64 %return289, 0
  br i1 %84, label %true290, label %false291

true290:                                          ; preds = %false259
  %return295 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @64, i64 0, i64 0), i8* %return81)
  %return296 = call <3 x double> @"chv@VS"(i8* %return295)
  %tmp297 = load %gemPrm, %gemPrm* %this
  %tmp298 = extractvalue %gemPrm %tmp297, 8
  %return299 = call { <3 x double>, <3 x double>* } @"setcomp@V[VVI"(<3 x double>* %tmp298, <3 x double> %return296, i64 %i.0)
  %output301 = extractvalue { <3 x double>, <3 x double>* } %return299, 1
  %85 = insertvalue %gemPrm %tmp297, <3 x double>* %output301, 8
  %return304 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @65, i64 0, i64 0), i8* %return81)
  %return305 = call <3 x double> @"chv@VS"(i8* %return304)
  %tmp307 = extractvalue %gemPrm %85, 9
  %return308 = call { <3 x double>, <3 x double>* } @"setcomp@V[VVI"(<3 x double>* %tmp307, <3 x double> %return305, i64 %i.0)
  %output310 = extractvalue { <3 x double>, <3 x double>* } %return308, 1
  %86 = insertvalue %gemPrm %85, <3 x double>* %output310, 9
  store %gemPrm %86, %gemPrm* %this
  br label %iter

false291:                                         ; preds = %false259
  %return312 = call i64 @"eq@III"(i64 %return78, i64 49)
  %87 = icmp ne i64 %return312, 0
  br i1 %87, label %true313, label %false314

true313:                                          ; preds = %false291
  %return318 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @66, i64 0, i64 0), i8* %return81)
  %return319 = call <2 x double> @"chu@US"(i8* %return318)
  %tmp320 = load %gemPrm, %gemPrm* %this
  %tmp321 = extractvalue %gemPrm %tmp320, 36
  %return322 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp321, <2 x double> %return319, i64 %i.0)
  %output324 = extractvalue { <2 x double>, <2 x double>* } %return322, 1
  %88 = insertvalue %gemPrm %tmp320, <2 x double>* %output324, 36
  store %gemPrm %88, %gemPrm* %this
  br label %iter

false314:                                         ; preds = %false291
  %return326 = call i64 @"eq@III"(i64 %return78, i64 50)
  %89 = icmp ne i64 %return326, 0
  br i1 %89, label %true327, label %false328

true327:                                          ; preds = %false314
  %return332 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @67, i64 0, i64 0), i8* %return81)
  %return333 = call <2 x double> @"chu@US"(i8* %return332)
  %tmp334 = load %gemPrm, %gemPrm* %this
  %tmp335 = extractvalue %gemPrm %tmp334, 37
  %return336 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp335, <2 x double> %return333, i64 %i.0)
  %output338 = extractvalue { <2 x double>, <2 x double>* } %return336, 1
  %90 = insertvalue %gemPrm %tmp334, <2 x double>* %output338, 37
  store %gemPrm %90, %gemPrm* %this
  br label %iter

false328:                                         ; preds = %false314
  %return340 = call i64 @"eq@III"(i64 %return78, i64 51)
  %91 = icmp ne i64 %return340, 0
  br i1 %91, label %true341, label %false342

true341:                                          ; preds = %false328
  %return346 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @68, i64 0, i64 0), i8* %return81)
  %return347 = call <2 x double> @"chu@US"(i8* %return346)
  %tmp348 = load %gemPrm, %gemPrm* %this
  %tmp349 = extractvalue %gemPrm %tmp348, 14
  %return350 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp349, <2 x double> %return347, i64 %i.0)
  %output352 = extractvalue { <2 x double>, <2 x double>* } %return350, 1
  %92 = insertvalue %gemPrm %tmp348, <2 x double>* %output352, 14
  store %gemPrm %92, %gemPrm* %this
  br label %iter

false342:                                         ; preds = %false328
  %return354 = call i64 @"eq@III"(i64 %return78, i64 52)
  %93 = icmp ne i64 %return354, 0
  br i1 %93, label %true355, label %false356

true355:                                          ; preds = %false342
  %return360 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @69, i64 0, i64 0), i8* %return81)
  %return361 = call <2 x double> @"chu@US"(i8* %return360)
  %tmp362 = load %gemPrm, %gemPrm* %this
  %tmp363 = extractvalue %gemPrm %tmp362, 17
  %return364 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp363, <2 x double> %return361, i64 %i.0)
  %output366 = extractvalue { <2 x double>, <2 x double>* } %return364, 1
  %94 = insertvalue %gemPrm %tmp362, <2 x double>* %output366, 17
  store %gemPrm %94, %gemPrm* %this
  br label %iter

false356:                                         ; preds = %false342
  %return368 = call i64 @"eq@III"(i64 %return78, i64 53)
  %95 = icmp ne i64 %return368, 0
  br i1 %95, label %true369, label %false370

true369:                                          ; preds = %false356
  %return374 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @70, i64 0, i64 0), i8* %return81)
  %return375 = call double @"chf@FS"(i8* %return374)
  %tmp376 = load %gemPrm, %gemPrm* %this
  %tmp377 = extractvalue %gemPrm %tmp376, 1
  %return378 = call { double, double* } @"setcomp@F[FFI"(double* %tmp377, double %return375, i64 %i.0)
  %output380 = extractvalue { double, double* } %return378, 1
  %96 = insertvalue %gemPrm %tmp376, double* %output380, 1
  store %gemPrm %96, %gemPrm* %this
  br label %iter

false370:                                         ; preds = %false356
  %return382 = call i64 @"eq@III"(i64 %return78, i64 56)
  %97 = icmp ne i64 %return382, 0
  br i1 %97, label %true383, label %false384

true383:                                          ; preds = %false370
  %return388 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @71, i64 0, i64 0), i8* %return81)
  %return389 = call double @"chf@FS"(i8* %return388)
  %tmp390 = load %gemPrm, %gemPrm* %this
  %tmp391 = extractvalue %gemPrm %tmp390, 2
  %return392 = call { double, double* } @"setcomp@F[FFI"(double* %tmp391, double %return389, i64 %i.0)
  %output394 = extractvalue { double, double* } %return392, 1
  %98 = insertvalue %gemPrm %tmp390, double* %output394, 2
  store %gemPrm %98, %gemPrm* %this
  br label %iter

false384:                                         ; preds = %false370
  %return396 = call i64 @"eq@III"(i64 %return78, i64 57)
  %99 = icmp ne i64 %return396, 0
  br i1 %99, label %true397, label %iter

true397:                                          ; preds = %false384
  %return401 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @72, i64 0, i64 0), i8* %return81)
  %return402 = call <3 x double> @"chv@VS"(i8* %return401)
  %tmp403 = load %gemPrm, %gemPrm* %this
  %tmp404 = extractvalue %gemPrm %tmp403, 10
  %return405 = call { <3 x double>, <3 x double>* } @"setcomp@V[VVI"(<3 x double>* %tmp404, <3 x double> %return402, i64 %i.0)
  %output407 = extractvalue { <3 x double>, <3 x double>* } %return405, 1
  %100 = insertvalue %gemPrm %tmp403, <3 x double>* %output407, 10
  store %gemPrm %100, %gemPrm* %this
  br label %iter

true412:                                          ; preds = %false96
  %return415 = call i64 @"lt@III"(i64 %return78, i64 77)
  %101 = icmp ne i64 %return415, 0
  br i1 %101, label %true416, label %false417

true416:                                          ; preds = %true412
  %return420 = call i64 @"eq@III"(i64 %return78, i64 61)
  %102 = icmp ne i64 %return420, 0
  br i1 %102, label %true421, label %false422

false417:                                         ; preds = %true412
  %return600 = call i64 @"eq@III"(i64 %return78, i64 77)
  %103 = icmp ne i64 %return600, 0
  br i1 %103, label %true601, label %false602

true421:                                          ; preds = %true416
  %return426 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @74, i64 0, i64 0), i8* %return81)
  %return427 = call double @"chf@FS"(i8* %return426)
  %tmp428 = load %gemPrm, %gemPrm* %this
  %tmp429 = extractvalue %gemPrm %tmp428, 3
  %return430 = call { double, double* } @"setcomp@F[FFI"(double* %tmp429, double %return427, i64 %i.0)
  %output432 = extractvalue { double, double* } %return430, 1
  %104 = insertvalue %gemPrm %tmp428, double* %output432, 3
  store %gemPrm %104, %gemPrm* %this
  br label %iter

false422:                                         ; preds = %true416
  %return434 = call i64 @"eq@III"(i64 %return78, i64 63)
  %105 = icmp ne i64 %return434, 0
  br i1 %105, label %true435, label %false436

true435:                                          ; preds = %false422
  %return440 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @75, i64 0, i64 0), i8* %return81)
  %return441 = call <2 x double> @"chu@US"(i8* %return440)
  %tmp442 = load %gemPrm, %gemPrm* %this
  %tmp443 = extractvalue %gemPrm %tmp442, 18
  %return444 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp443, <2 x double> %return441, i64 %i.0)
  %output446 = extractvalue { <2 x double>, <2 x double>* } %return444, 1
  %106 = insertvalue %gemPrm %tmp442, <2 x double>* %output446, 18
  %return449 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @76, i64 0, i64 0), i8* %return81)
  %return450 = call <3 x double> @"chv@VS"(i8* %return449)
  %tmp452 = extractvalue %gemPrm %106, 11
  %return453 = call { <3 x double>, <3 x double>* } @"setcomp@V[VVI"(<3 x double>* %tmp452, <3 x double> %return450, i64 %i.0)
  %output455 = extractvalue { <3 x double>, <3 x double>* } %return453, 1
  %107 = insertvalue %gemPrm %106, <3 x double>* %output455, 11
  store %gemPrm %107, %gemPrm* %this
  br label %iter

false436:                                         ; preds = %false422
  %return457 = call i64 @"eq@III"(i64 %return78, i64 66)
  %108 = icmp ne i64 %return457, 0
  br i1 %108, label %true458, label %false459

true458:                                          ; preds = %false436
  %return463 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @77, i64 0, i64 0), i8* %return81)
  %return464 = call <2 x double> @"chu@US"(i8* %return463)
  %tmp465 = load %gemPrm, %gemPrm* %this
  %tmp466 = extractvalue %gemPrm %tmp465, 19
  %return467 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp466, <2 x double> %return464, i64 %i.0)
  %output469 = extractvalue { <2 x double>, <2 x double>* } %return467, 1
  %109 = insertvalue %gemPrm %tmp465, <2 x double>* %output469, 19
  store %gemPrm %109, %gemPrm* %this
  br label %iter

false459:                                         ; preds = %false436
  %return471 = call i64 @"eq@III"(i64 %return78, i64 67)
  %110 = icmp ne i64 %return471, 0
  br i1 %110, label %true472, label %false473

true472:                                          ; preds = %false459
  %return477 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @78, i64 0, i64 0), i8* %return81)
  %return478 = call <4 x double> @"chp@PS"(i8* %return477)
  %tmp479 = load %gemPrm, %gemPrm* %this
  %tmp480 = extractvalue %gemPrm %tmp479, 44
  %return481 = call { <4 x double>, <4 x double>* } @"setcomp@P[PPI"(<4 x double>* %tmp480, <4 x double> %return478, i64 %i.0)
  %output483 = extractvalue { <4 x double>, <4 x double>* } %return481, 1
  %111 = insertvalue %gemPrm %tmp479, <4 x double>* %output483, 44
  store %gemPrm %111, %gemPrm* %this
  br label %iter

false473:                                         ; preds = %false459
  %return485 = call i64 @"eq@III"(i64 %return78, i64 69)
  %112 = icmp ne i64 %return485, 0
  br i1 %112, label %true486, label %false487

true486:                                          ; preds = %false473
  %return491 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @79, i64 0, i64 0), i8* %return81)
  %return492 = call <2 x double> @"chu@US"(i8* %return491)
  %tmp493 = load %gemPrm, %gemPrm* %this
  %tmp494 = extractvalue %gemPrm %tmp493, 20
  %return495 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp494, <2 x double> %return492, i64 %i.0)
  %output497 = extractvalue { <2 x double>, <2 x double>* } %return495, 1
  %113 = insertvalue %gemPrm %tmp493, <2 x double>* %output497, 20
  %return500 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @80, i64 0, i64 0), i8* %return81)
  %return501 = call double @"chf@FS"(i8* %return500)
  %tmp503 = extractvalue %gemPrm %113, 4
  %return504 = call { double, double* } @"setcomp@F[FFI"(double* %tmp503, double %return501, i64 %i.0)
  %output506 = extractvalue { double, double* } %return504, 1
  %114 = insertvalue %gemPrm %113, double* %output506, 4
  store %gemPrm %114, %gemPrm* %this
  br label %iter

false487:                                         ; preds = %false473
  %return508 = call i64 @"eq@III"(i64 %return78, i64 71)
  %115 = icmp ne i64 %return508, 0
  br i1 %115, label %true509, label %false510

true509:                                          ; preds = %false487
  %return514 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @81, i64 0, i64 0), i8* %return81)
  %return515 = call <2 x double> @"chu@US"(i8* %return514)
  %tmp516 = load %gemPrm, %gemPrm* %this
  %tmp517 = extractvalue %gemPrm %tmp516, 21
  %return518 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp517, <2 x double> %return515, i64 %i.0)
  %output520 = extractvalue { <2 x double>, <2 x double>* } %return518, 1
  %116 = insertvalue %gemPrm %tmp516, <2 x double>* %output520, 21
  %return523 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @82, i64 0, i64 0), i8* %return81)
  %return524 = call <2 x double> @"chu@US"(i8* %return523)
  %tmp526 = extractvalue %gemPrm %116, 22
  %return527 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp526, <2 x double> %return524, i64 %i.0)
  %output529 = extractvalue { <2 x double>, <2 x double>* } %return527, 1
  %117 = insertvalue %gemPrm %116, <2 x double>* %output529, 22
  store %gemPrm %117, %gemPrm* %this
  br label %iter

false510:                                         ; preds = %false487
  %return531 = call i64 @"eq@III"(i64 %return78, i64 72)
  %118 = icmp ne i64 %return531, 0
  br i1 %118, label %true532, label %false533

true532:                                          ; preds = %false510
  %return537 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @83, i64 0, i64 0), i8* %return81)
  %return538 = call <2 x double> @"chu@US"(i8* %return537)
  %tmp539 = load %gemPrm, %gemPrm* %this
  %tmp540 = extractvalue %gemPrm %tmp539, 23
  %return541 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp540, <2 x double> %return538, i64 %i.0)
  %output543 = extractvalue { <2 x double>, <2 x double>* } %return541, 1
  %119 = insertvalue %gemPrm %tmp539, <2 x double>* %output543, 23
  store %gemPrm %119, %gemPrm* %this
  br label %iter

false533:                                         ; preds = %false510
  %return545 = call i64 @"eq@III"(i64 %return78, i64 73)
  %120 = icmp ne i64 %return545, 0
  br i1 %120, label %true546, label %false547

true546:                                          ; preds = %false533
  %return551 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @84, i64 0, i64 0), i8* %return81)
  %return552 = call <2 x double> @"chu@US"(i8* %return551)
  %tmp553 = load %gemPrm, %gemPrm* %this
  %tmp554 = extractvalue %gemPrm %tmp553, 24
  %return555 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp554, <2 x double> %return552, i64 %i.0)
  %output557 = extractvalue { <2 x double>, <2 x double>* } %return555, 1
  %121 = insertvalue %gemPrm %tmp553, <2 x double>* %output557, 24
  store %gemPrm %121, %gemPrm* %this
  br label %iter

false547:                                         ; preds = %false533
  %return559 = call i64 @"eq@III"(i64 %return78, i64 74)
  %122 = icmp ne i64 %return559, 0
  br i1 %122, label %true560, label %false561

true560:                                          ; preds = %false547
  %return565 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @85, i64 0, i64 0), i8* %return81)
  %return566 = call <2 x double> @"chu@US"(i8* %return565)
  %tmp567 = load %gemPrm, %gemPrm* %this
  %tmp568 = extractvalue %gemPrm %tmp567, 38
  %return569 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp568, <2 x double> %return566, i64 %i.0)
  %output571 = extractvalue { <2 x double>, <2 x double>* } %return569, 1
  %123 = insertvalue %gemPrm %tmp567, <2 x double>* %output571, 38
  store %gemPrm %123, %gemPrm* %this
  br label %iter

false561:                                         ; preds = %false547
  %return573 = call i64 @"eq@III"(i64 %return78, i64 75)
  %124 = icmp ne i64 %return573, 0
  br i1 %124, label %true574, label %false575

true574:                                          ; preds = %false561
  %return579 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @86, i64 0, i64 0), i8* %return81)
  %return580 = call <4 x double> @"chp@PS"(i8* %return579)
  %tmp581 = load %gemPrm, %gemPrm* %this
  %tmp582 = extractvalue %gemPrm %tmp581, 45
  %return583 = call { <4 x double>, <4 x double>* } @"setcomp@P[PPI"(<4 x double>* %tmp582, <4 x double> %return580, i64 %i.0)
  %output585 = extractvalue { <4 x double>, <4 x double>* } %return583, 1
  %125 = insertvalue %gemPrm %tmp581, <4 x double>* %output585, 45
  store %gemPrm %125, %gemPrm* %this
  br label %iter

false575:                                         ; preds = %false561
  %return587 = call i64 @"eq@III"(i64 %return78, i64 76)
  %126 = icmp ne i64 %return587, 0
  br i1 %126, label %true588, label %iter

true588:                                          ; preds = %false575
  %return592 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @87, i64 0, i64 0), i8* %return81)
  %return593 = call <4 x double> @"chp@PS"(i8* %return592)
  %tmp594 = load %gemPrm, %gemPrm* %this
  %tmp595 = extractvalue %gemPrm %tmp594, 46
  %return596 = call { <4 x double>, <4 x double>* } @"setcomp@P[PPI"(<4 x double>* %tmp595, <4 x double> %return593, i64 %i.0)
  %output598 = extractvalue { <4 x double>, <4 x double>* } %return596, 1
  %127 = insertvalue %gemPrm %tmp594, <4 x double>* %output598, 46
  store %gemPrm %127, %gemPrm* %this
  br label %iter

true601:                                          ; preds = %false417
  %return606 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @88, i64 0, i64 0), i8* %return81)
  %return607 = call <4 x double> @"chp@PS"(i8* %return606)
  %tmp608 = load %gemPrm, %gemPrm* %this
  %tmp609 = extractvalue %gemPrm %tmp608, 47
  %return610 = call { <4 x double>, <4 x double>* } @"setcomp@P[PPI"(<4 x double>* %tmp609, <4 x double> %return607, i64 %i.0)
  %output612 = extractvalue { <4 x double>, <4 x double>* } %return610, 1
  %128 = insertvalue %gemPrm %tmp608, <4 x double>* %output612, 47
  store %gemPrm %128, %gemPrm* %this
  br label %iter

false602:                                         ; preds = %false417
  %return614 = call i64 @"eq@III"(i64 %return78, i64 78)
  %129 = icmp ne i64 %return614, 0
  br i1 %129, label %true615, label %false616

true615:                                          ; preds = %false602
  %return620 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @89, i64 0, i64 0), i8* %return81)
  %return621 = call <2 x double> @"chu@US"(i8* %return620)
  %tmp622 = load %gemPrm, %gemPrm* %this
  %tmp623 = extractvalue %gemPrm %tmp622, 39
  %return624 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp623, <2 x double> %return621, i64 %i.0)
  %output626 = extractvalue { <2 x double>, <2 x double>* } %return624, 1
  %130 = insertvalue %gemPrm %tmp622, <2 x double>* %output626, 39
  store %gemPrm %130, %gemPrm* %this
  br label %iter

false616:                                         ; preds = %false602
  %return628 = call i64 @"eq@III"(i64 %return78, i64 79)
  %131 = icmp ne i64 %return628, 0
  br i1 %131, label %true629, label %false630

true629:                                          ; preds = %false616
  %return634 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @90, i64 0, i64 0), i8* %return81)
  %return635 = call <2 x double> @"chu@US"(i8* %return634)
  %tmp636 = load %gemPrm, %gemPrm* %this
  %tmp637 = extractvalue %gemPrm %tmp636, 25
  %return638 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp637, <2 x double> %return635, i64 %i.0)
  %output640 = extractvalue { <2 x double>, <2 x double>* } %return638, 1
  %132 = insertvalue %gemPrm %tmp636, <2 x double>* %output640, 25
  %return643 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @91, i64 0, i64 0), i8* %return81)
  %return644 = call <2 x double> @"chu@US"(i8* %return643)
  %tmp646 = extractvalue %gemPrm %132, 26
  %return647 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp646, <2 x double> %return644, i64 %i.0)
  %output649 = extractvalue { <2 x double>, <2 x double>* } %return647, 1
  %133 = insertvalue %gemPrm %132, <2 x double>* %output649, 26
  store %gemPrm %133, %gemPrm* %this
  br label %iter

false630:                                         ; preds = %false616
  %return651 = call i64 @"eq@III"(i64 %return78, i64 94)
  %134 = icmp ne i64 %return651, 0
  br i1 %134, label %true652, label %false653

true652:                                          ; preds = %false630
  %return657 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @92, i64 0, i64 0), i8* %return81)
  %return658 = call <4 x double> @"chp@PS"(i8* %return657)
  %tmp659 = load %gemPrm, %gemPrm* %this
  %tmp660 = extractvalue %gemPrm %tmp659, 48
  %return661 = call { <4 x double>, <4 x double>* } @"setcomp@P[PPI"(<4 x double>* %tmp660, <4 x double> %return658, i64 %i.0)
  %output663 = extractvalue { <4 x double>, <4 x double>* } %return661, 1
  %135 = insertvalue %gemPrm %tmp659, <4 x double>* %output663, 48
  store %gemPrm %135, %gemPrm* %this
  br label %iter

false653:                                         ; preds = %false630
  %return665 = call i64 @"eq@III"(i64 %return78, i64 95)
  %136 = icmp ne i64 %return665, 0
  br i1 %136, label %true666, label %false667

true666:                                          ; preds = %false653
  %return671 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @93, i64 0, i64 0), i8* %return81)
  %return672 = call double @"chf@FS"(i8* %return671)
  %tmp673 = load %gemPrm, %gemPrm* %this
  %tmp674 = extractvalue %gemPrm %tmp673, 5
  %return675 = call { double, double* } @"setcomp@F[FFI"(double* %tmp674, double %return672, i64 %i.0)
  %output677 = extractvalue { double, double* } %return675, 1
  %137 = insertvalue %gemPrm %tmp673, double* %output677, 5
  store %gemPrm %137, %gemPrm* %this
  br label %iter

false667:                                         ; preds = %false653
  %return679 = call i64 @"eq@III"(i64 %return78, i64 96)
  %138 = icmp ne i64 %return679, 0
  br i1 %138, label %true680, label %false681

true680:                                          ; preds = %false667
  %return685 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @94, i64 0, i64 0), i8* %return81)
  %return686 = call <4 x double> @"chp@PS"(i8* %return685)
  %tmp687 = load %gemPrm, %gemPrm* %this
  %tmp688 = extractvalue %gemPrm %tmp687, 49
  %return689 = call { <4 x double>, <4 x double>* } @"setcomp@P[PPI"(<4 x double>* %tmp688, <4 x double> %return686, i64 %i.0)
  %output691 = extractvalue { <4 x double>, <4 x double>* } %return689, 1
  %139 = insertvalue %gemPrm %tmp687, <4 x double>* %output691, 49
  %return694 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @95, i64 0, i64 0), i8* %return81)
  %return695 = call <4 x double> @"chp@PS"(i8* %return694)
  %tmp697 = extractvalue %gemPrm %139, 50
  %return698 = call { <4 x double>, <4 x double>* } @"setcomp@P[PPI"(<4 x double>* %tmp697, <4 x double> %return695, i64 %i.0)
  %output700 = extractvalue { <4 x double>, <4 x double>* } %return698, 1
  %140 = insertvalue %gemPrm %139, <4 x double>* %output700, 50
  store %gemPrm %140, %gemPrm* %this
  br label %iter

false681:                                         ; preds = %false667
  %return702 = call i64 @"eq@III"(i64 %return78, i64 97)
  %141 = icmp ne i64 %return702, 0
  br i1 %141, label %true703, label %false704

true703:                                          ; preds = %false681
  %return708 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @96, i64 0, i64 0), i8* %return81)
  %return709 = call <2 x double> @"chu@US"(i8* %return708)
  %tmp710 = load %gemPrm, %gemPrm* %this
  %tmp711 = extractvalue %gemPrm %tmp710, 27
  %return712 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp711, <2 x double> %return709, i64 %i.0)
  %output714 = extractvalue { <2 x double>, <2 x double>* } %return712, 1
  %142 = insertvalue %gemPrm %tmp710, <2 x double>* %output714, 27
  %return717 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @97, i64 0, i64 0), i8* %return81)
  %return718 = call <2 x double> @"chu@US"(i8* %return717)
  %tmp720 = extractvalue %gemPrm %142, 28
  %return721 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp720, <2 x double> %return718, i64 %i.0)
  %output723 = extractvalue { <2 x double>, <2 x double>* } %return721, 1
  %143 = insertvalue %gemPrm %142, <2 x double>* %output723, 28
  store %gemPrm %143, %gemPrm* %this
  br label %iter

false704:                                         ; preds = %false681
  %return725 = call i64 @"eq@III"(i64 %return78, i64 98)
  %144 = icmp ne i64 %return725, 0
  br i1 %144, label %true726, label %false727

true726:                                          ; preds = %false704
  %return731 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @98, i64 0, i64 0), i8* %return81)
  %return732 = call <2 x double> @"chu@US"(i8* %return731)
  %tmp733 = load %gemPrm, %gemPrm* %this
  %tmp734 = extractvalue %gemPrm %tmp733, 40
  %return735 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp734, <2 x double> %return732, i64 %i.0)
  %output737 = extractvalue { <2 x double>, <2 x double>* } %return735, 1
  %145 = insertvalue %gemPrm %tmp733, <2 x double>* %output737, 40
  store %gemPrm %145, %gemPrm* %this
  br label %iter

false727:                                         ; preds = %false704
  %return739 = call i64 @"eq@III"(i64 %return78, i64 99)
  %146 = icmp ne i64 %return739, 0
  br i1 %146, label %true740, label %false741

true740:                                          ; preds = %false727
  %return745 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @99, i64 0, i64 0), i8* %return81)
  %return746 = call <3 x double> @"chv@VS"(i8* %return745)
  %tmp747 = load %gemPrm, %gemPrm* %this
  %tmp748 = extractvalue %gemPrm %tmp747, 12
  %return749 = call { <3 x double>, <3 x double>* } @"setcomp@V[VVI"(<3 x double>* %tmp748, <3 x double> %return746, i64 %i.0)
  %output751 = extractvalue { <3 x double>, <3 x double>* } %return749, 1
  %147 = insertvalue %gemPrm %tmp747, <3 x double>* %output751, 12
  %return754 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @100, i64 0, i64 0), i8* %return81)
  %return755 = call <2 x double> @"chu@US"(i8* %return754)
  %tmp757 = extractvalue %gemPrm %147, 41
  %return758 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp757, <2 x double> %return755, i64 %i.0)
  %output760 = extractvalue { <2 x double>, <2 x double>* } %return758, 1
  %148 = insertvalue %gemPrm %147, <2 x double>* %output760, 41
  store %gemPrm %148, %gemPrm* %this
  br label %iter

false741:                                         ; preds = %false727
  %return762 = call i64 @"eq@III"(i64 %return78, i64 101)
  %149 = icmp ne i64 %return762, 0
  br i1 %149, label %true763, label %iter

true763:                                          ; preds = %false741
  %return767 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @101, i64 0, i64 0), i8* %return81)
  %return768 = call <2 x double> @"chu@US"(i8* %return767)
  %tmp769 = load %gemPrm, %gemPrm* %this
  %tmp770 = extractvalue %gemPrm %tmp769, 29
  %return771 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp770, <2 x double> %return768, i64 %i.0)
  %output773 = extractvalue { <2 x double>, <2 x double>* } %return771, 1
  %150 = insertvalue %gemPrm %tmp769, <2 x double>* %output773, 29
  %return776 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @102, i64 0, i64 0), i8* %return81)
  %return777 = call <2 x double> @"chu@US"(i8* %return776)
  %tmp779 = extractvalue %gemPrm %150, 30
  %return780 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp779, <2 x double> %return777, i64 %i.0)
  %output782 = extractvalue { <2 x double>, <2 x double>* } %return780, 1
  %151 = insertvalue %gemPrm %150, <2 x double>* %output782, 30
  %return785 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @103, i64 0, i64 0), i8* %return81)
  %return786 = call <2 x double> @"chu@US"(i8* %return785)
  %tmp788 = extractvalue %gemPrm %151, 31
  %return789 = call { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>* %tmp788, <2 x double> %return786, i64 %i.0)
  %output791 = extractvalue { <2 x double>, <2 x double>* } %return789, 1
  %152 = insertvalue %gemPrm %151, <2 x double>* %output791, 31
  store %gemPrm %152, %gemPrm* %this
  br label %iter
}

; Function Attrs: nounwind
declare i64 @"max@I[I"(i64*) #2

; Function Attrs: nounwind readnone
declare i64 @"gt@III"(i64, i64) #1

; Function Attrs: nounwind readnone
declare <3 x double>* @"resize@[VI"(<3 x double>*, i64) #1

; Function Attrs: nounwind readnone
declare <4 x double>* @"resize@[PI"(<4 x double>*, i64) #1

; Function Attrs: nounwind
declare i64 @"find@I[FF"(double*, double) #2

; Function Attrs: nounwind readnone
declare i64 @"ge@III"(i64, i64) #1

; Function Attrs: nounwind readnone
declare <4 x double> @"chp@PS"(i8*) #1

; Function Attrs: nounwind readnone
declare { <4 x double>, <4 x double>* } @"setcomp@P[PPI"(<4 x double>*, <4 x double>, i64) #1

; Function Attrs: nounwind readnone
declare <3 x double> @"chv@VS"(i8*) #1

; Function Attrs: nounwind readnone
declare { <3 x double>, <3 x double>* } @"setcomp@V[VVI"(<3 x double>*, <3 x double>, i64) #1

; Function Attrs: nounwind readnone
declare <2 x double> @"getcomp@U[UI"(<2 x double>*, i64) #1

; Function Attrs: alwaysinline nounwind
define private %gemPrm @"gemPrm@Z6gemPrmM52N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PN8pc_DISC2[V[F[F[F[F[F[F[V[V[V[V[V[V[V[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[P[P[P[P[P[P[P[P[P[V"(double** %rings2_val, double** %bipolar_shift, double** %cell_size, double** %escher_beta, double** %popcorn2_c, double** %flux_spread, <3 x double>** %blob, <3 x double>** %pie, <3 x double>** %supershape, <3 x double>** %supershape_n, <3 x double>** %cpow, <3 x double>** %lazysusan, <3 x double>** %bwraps, <2 x double>** %curl_c, <2 x double>** %parabola, <2 x double>** %fan2, <2 x double>** %rectangles, <2 x double>** %bent2, <2 x double>** %lazysusanxyz, <2 x double>** %modulus, <2 x double>** %popcorn2, <2 x double>** %separation, <2 x double>** %separation_inside, <2 x double>** %split, <2 x double>** %splits, <2 x double>** %waves2_scale, <2 x double>** %waves2_freq, <2 x double>** %curve_lenght, <2 x double>** %curve_amp, <2 x double>** %polynomial_pow, <2 x double>** %polynomial_lc, <2 x double>** %polynomial_sc, <2 x double>** %julian, <2 x double>** %juliascope, <2 x double>** %radialblur, <2 x double>** %disc2, <2 x double>** %flower, <2 x double>** %conic, <2 x double>** %stripes, <2 x double>** %whorl, <2 x double>** %persp, <2 x double>** %bwrapstwist, <4 x double>** %ngon, <4 x double>** %pdj_w, <4 x double>** %oscope, <4 x double>** %wedge, <4 x double>** %wedgejulia, <4 x double>** %wedgesph, <4 x double>** %auger, <4 x double>** %mobius_re, <4 x double>** %mobius_im, <3 x double>** %pc_DISC2) #0 {
__llvm_entry:
  %rings2_val1 = load double*, double** %rings2_val
  %0 = insertvalue %gemPrm undef, double* %rings2_val1, 0
  %bipolar_shift2 = load double*, double** %bipolar_shift
  %1 = insertvalue %gemPrm %0, double* %bipolar_shift2, 1
  %cell_size4 = load double*, double** %cell_size
  %2 = insertvalue %gemPrm %1, double* %cell_size4, 2
  %escher_beta6 = load double*, double** %escher_beta
  %3 = insertvalue %gemPrm %2, double* %escher_beta6, 3
  %popcorn2_c8 = load double*, double** %popcorn2_c
  %4 = insertvalue %gemPrm %3, double* %popcorn2_c8, 4
  %flux_spread10 = load double*, double** %flux_spread
  %5 = insertvalue %gemPrm %4, double* %flux_spread10, 5
  %blob12 = load <3 x double>*, <3 x double>** %blob
  %6 = insertvalue %gemPrm %5, <3 x double>* %blob12, 6
  %pie14 = load <3 x double>*, <3 x double>** %pie
  %7 = insertvalue %gemPrm %6, <3 x double>* %pie14, 7
  %supershape16 = load <3 x double>*, <3 x double>** %supershape
  %8 = insertvalue %gemPrm %7, <3 x double>* %supershape16, 8
  %supershape_n18 = load <3 x double>*, <3 x double>** %supershape_n
  %9 = insertvalue %gemPrm %8, <3 x double>* %supershape_n18, 9
  %cpow20 = load <3 x double>*, <3 x double>** %cpow
  %10 = insertvalue %gemPrm %9, <3 x double>* %cpow20, 10
  %lazysusan22 = load <3 x double>*, <3 x double>** %lazysusan
  %11 = insertvalue %gemPrm %10, <3 x double>* %lazysusan22, 11
  %bwraps24 = load <3 x double>*, <3 x double>** %bwraps
  %12 = insertvalue %gemPrm %11, <3 x double>* %bwraps24, 12
  %curl_c26 = load <2 x double>*, <2 x double>** %curl_c
  %13 = insertvalue %gemPrm %12, <2 x double>* %curl_c26, 13
  %parabola28 = load <2 x double>*, <2 x double>** %parabola
  %14 = insertvalue %gemPrm %13, <2 x double>* %parabola28, 14
  %fan230 = load <2 x double>*, <2 x double>** %fan2
  %15 = insertvalue %gemPrm %14, <2 x double>* %fan230, 15
  %rectangles32 = load <2 x double>*, <2 x double>** %rectangles
  %16 = insertvalue %gemPrm %15, <2 x double>* %rectangles32, 16
  %bent234 = load <2 x double>*, <2 x double>** %bent2
  %17 = insertvalue %gemPrm %16, <2 x double>* %bent234, 17
  %lazysusanxyz36 = load <2 x double>*, <2 x double>** %lazysusanxyz
  %18 = insertvalue %gemPrm %17, <2 x double>* %lazysusanxyz36, 18
  %modulus38 = load <2 x double>*, <2 x double>** %modulus
  %19 = insertvalue %gemPrm %18, <2 x double>* %modulus38, 19
  %popcorn240 = load <2 x double>*, <2 x double>** %popcorn2
  %20 = insertvalue %gemPrm %19, <2 x double>* %popcorn240, 20
  %separation42 = load <2 x double>*, <2 x double>** %separation
  %21 = insertvalue %gemPrm %20, <2 x double>* %separation42, 21
  %separation_inside44 = load <2 x double>*, <2 x double>** %separation_inside
  %22 = insertvalue %gemPrm %21, <2 x double>* %separation_inside44, 22
  %split46 = load <2 x double>*, <2 x double>** %split
  %23 = insertvalue %gemPrm %22, <2 x double>* %split46, 23
  %splits48 = load <2 x double>*, <2 x double>** %splits
  %24 = insertvalue %gemPrm %23, <2 x double>* %splits48, 24
  %waves2_scale50 = load <2 x double>*, <2 x double>** %waves2_scale
  %25 = insertvalue %gemPrm %24, <2 x double>* %waves2_scale50, 25
  %waves2_freq52 = load <2 x double>*, <2 x double>** %waves2_freq
  %26 = insertvalue %gemPrm %25, <2 x double>* %waves2_freq52, 26
  %curve_lenght54 = load <2 x double>*, <2 x double>** %curve_lenght
  %27 = insertvalue %gemPrm %26, <2 x double>* %curve_lenght54, 27
  %curve_amp56 = load <2 x double>*, <2 x double>** %curve_amp
  %28 = insertvalue %gemPrm %27, <2 x double>* %curve_amp56, 28
  %polynomial_pow58 = load <2 x double>*, <2 x double>** %polynomial_pow
  %29 = insertvalue %gemPrm %28, <2 x double>* %polynomial_pow58, 29
  %polynomial_lc60 = load <2 x double>*, <2 x double>** %polynomial_lc
  %30 = insertvalue %gemPrm %29, <2 x double>* %polynomial_lc60, 30
  %polynomial_sc62 = load <2 x double>*, <2 x double>** %polynomial_sc
  %31 = insertvalue %gemPrm %30, <2 x double>* %polynomial_sc62, 31
  %julian64 = load <2 x double>*, <2 x double>** %julian
  %32 = insertvalue %gemPrm %31, <2 x double>* %julian64, 32
  %juliascope66 = load <2 x double>*, <2 x double>** %juliascope
  %33 = insertvalue %gemPrm %32, <2 x double>* %juliascope66, 33
  %radialblur68 = load <2 x double>*, <2 x double>** %radialblur
  %34 = insertvalue %gemPrm %33, <2 x double>* %radialblur68, 34
  %disc270 = load <2 x double>*, <2 x double>** %disc2
  %35 = insertvalue %gemPrm %34, <2 x double>* %disc270, 35
  %flower72 = load <2 x double>*, <2 x double>** %flower
  %36 = insertvalue %gemPrm %35, <2 x double>* %flower72, 36
  %conic74 = load <2 x double>*, <2 x double>** %conic
  %37 = insertvalue %gemPrm %36, <2 x double>* %conic74, 37
  %stripes76 = load <2 x double>*, <2 x double>** %stripes
  %38 = insertvalue %gemPrm %37, <2 x double>* %stripes76, 38
  %whorl78 = load <2 x double>*, <2 x double>** %whorl
  %39 = insertvalue %gemPrm %38, <2 x double>* %whorl78, 39
  %persp80 = load <2 x double>*, <2 x double>** %persp
  %40 = insertvalue %gemPrm %39, <2 x double>* %persp80, 40
  %bwrapstwist82 = load <2 x double>*, <2 x double>** %bwrapstwist
  %41 = insertvalue %gemPrm %40, <2 x double>* %bwrapstwist82, 41
  %ngon84 = load <4 x double>*, <4 x double>** %ngon
  %42 = insertvalue %gemPrm %41, <4 x double>* %ngon84, 42
  %pdj_w86 = load <4 x double>*, <4 x double>** %pdj_w
  %43 = insertvalue %gemPrm %42, <4 x double>* %pdj_w86, 43
  %oscope88 = load <4 x double>*, <4 x double>** %oscope
  %44 = insertvalue %gemPrm %43, <4 x double>* %oscope88, 44
  %wedge90 = load <4 x double>*, <4 x double>** %wedge
  %45 = insertvalue %gemPrm %44, <4 x double>* %wedge90, 45
  %wedgejulia92 = load <4 x double>*, <4 x double>** %wedgejulia
  %46 = insertvalue %gemPrm %45, <4 x double>* %wedgejulia92, 46
  %wedgesph94 = load <4 x double>*, <4 x double>** %wedgesph
  %47 = insertvalue %gemPrm %46, <4 x double>* %wedgesph94, 47
  %auger96 = load <4 x double>*, <4 x double>** %auger
  %48 = insertvalue %gemPrm %47, <4 x double>* %auger96, 48
  %mobius_re98 = load <4 x double>*, <4 x double>** %mobius_re
  %49 = insertvalue %gemPrm %48, <4 x double>* %mobius_re98, 49
  %mobius_im100 = load <4 x double>*, <4 x double>** %mobius_im
  %50 = insertvalue %gemPrm %49, <4 x double>* %mobius_im100, 50
  %pc_DISC2102 = load <3 x double>*, <3 x double>** %pc_DISC2
  %51 = insertvalue %gemPrm %50, <3 x double>* %pc_DISC2102, 51
  ret %gemPrm %51
}

; Function Attrs: alwaysinline nounwind
define private %gemPrm @"gemPrm@Z6gemPrmM52N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PN8pc_DISC2[V"() #0 {
__llvm_entry:
  %0 = alloca double*
  %1 = alloca double*
  %2 = alloca double*
  %3 = alloca double*
  %4 = alloca double*
  %5 = alloca <3 x double>*
  %6 = alloca <3 x double>*
  %7 = alloca <3 x double>*
  %8 = alloca <3 x double>*
  %9 = alloca <3 x double>*
  %10 = alloca <3 x double>*
  %11 = alloca <3 x double>*
  %12 = alloca <2 x double>*
  %13 = alloca <2 x double>*
  %14 = alloca <2 x double>*
  %15 = alloca <2 x double>*
  %16 = alloca <2 x double>*
  %17 = alloca <2 x double>*
  %18 = alloca <2 x double>*
  %19 = alloca <2 x double>*
  %20 = alloca <2 x double>*
  %21 = alloca <2 x double>*
  %22 = alloca <2 x double>*
  %23 = alloca <2 x double>*
  %24 = alloca <2 x double>*
  %25 = alloca <2 x double>*
  %26 = alloca <2 x double>*
  %27 = alloca <2 x double>*
  %28 = alloca <2 x double>*
  %29 = alloca <2 x double>*
  %30 = alloca <2 x double>*
  %31 = alloca <2 x double>*
  %32 = alloca <2 x double>*
  %33 = alloca <2 x double>*
  %34 = alloca <2 x double>*
  %35 = alloca <2 x double>*
  %36 = alloca <2 x double>*
  %37 = alloca <2 x double>*
  %38 = alloca <2 x double>*
  %39 = alloca <2 x double>*
  %40 = alloca <2 x double>*
  %41 = alloca <4 x double>*
  %42 = alloca <4 x double>*
  %43 = alloca <4 x double>*
  %44 = alloca <4 x double>*
  %45 = alloca <4 x double>*
  %46 = alloca <4 x double>*
  %47 = alloca <4 x double>*
  %48 = alloca <4 x double>*
  %49 = alloca <4 x double>*
  %50 = alloca <3 x double>*
  %51 = alloca double*
  store double* getelementptr inbounds ([0 x double], [0 x double]* @49, i64 0, i64 0), double** %51
  store double* getelementptr inbounds ([0 x double], [0 x double]* @49, i64 0, i64 0), double** %0
  store double* getelementptr inbounds ([0 x double], [0 x double]* @49, i64 0, i64 0), double** %1
  store double* getelementptr inbounds ([0 x double], [0 x double]* @49, i64 0, i64 0), double** %2
  store double* getelementptr inbounds ([0 x double], [0 x double]* @49, i64 0, i64 0), double** %3
  store double* getelementptr inbounds ([0 x double], [0 x double]* @49, i64 0, i64 0), double** %4
  store <3 x double>* getelementptr inbounds ([0 x <3 x double>], [0 x <3 x double>]* @104, i64 0, i64 0), <3 x double>** %5
  store <3 x double>* getelementptr inbounds ([0 x <3 x double>], [0 x <3 x double>]* @104, i64 0, i64 0), <3 x double>** %6
  store <3 x double>* getelementptr inbounds ([0 x <3 x double>], [0 x <3 x double>]* @104, i64 0, i64 0), <3 x double>** %7
  store <3 x double>* getelementptr inbounds ([0 x <3 x double>], [0 x <3 x double>]* @104, i64 0, i64 0), <3 x double>** %8
  store <3 x double>* getelementptr inbounds ([0 x <3 x double>], [0 x <3 x double>]* @104, i64 0, i64 0), <3 x double>** %9
  store <3 x double>* getelementptr inbounds ([0 x <3 x double>], [0 x <3 x double>]* @104, i64 0, i64 0), <3 x double>** %10
  store <3 x double>* getelementptr inbounds ([0 x <3 x double>], [0 x <3 x double>]* @104, i64 0, i64 0), <3 x double>** %11
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @50, i64 0, i64 0), <2 x double>** %12
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @50, i64 0, i64 0), <2 x double>** %13
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @50, i64 0, i64 0), <2 x double>** %14
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @50, i64 0, i64 0), <2 x double>** %15
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @50, i64 0, i64 0), <2 x double>** %16
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @50, i64 0, i64 0), <2 x double>** %17
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @50, i64 0, i64 0), <2 x double>** %18
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @50, i64 0, i64 0), <2 x double>** %19
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @50, i64 0, i64 0), <2 x double>** %20
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @50, i64 0, i64 0), <2 x double>** %21
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @50, i64 0, i64 0), <2 x double>** %22
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @50, i64 0, i64 0), <2 x double>** %23
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @50, i64 0, i64 0), <2 x double>** %24
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @50, i64 0, i64 0), <2 x double>** %25
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @50, i64 0, i64 0), <2 x double>** %26
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @50, i64 0, i64 0), <2 x double>** %27
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @50, i64 0, i64 0), <2 x double>** %28
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @50, i64 0, i64 0), <2 x double>** %29
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @50, i64 0, i64 0), <2 x double>** %30
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @50, i64 0, i64 0), <2 x double>** %31
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @50, i64 0, i64 0), <2 x double>** %32
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @50, i64 0, i64 0), <2 x double>** %33
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @50, i64 0, i64 0), <2 x double>** %34
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @50, i64 0, i64 0), <2 x double>** %35
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @50, i64 0, i64 0), <2 x double>** %36
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @50, i64 0, i64 0), <2 x double>** %37
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @50, i64 0, i64 0), <2 x double>** %38
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @50, i64 0, i64 0), <2 x double>** %39
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @50, i64 0, i64 0), <2 x double>** %40
  store <4 x double>* getelementptr inbounds ([0 x <4 x double>], [0 x <4 x double>]* @105, i64 0, i64 0), <4 x double>** %41
  store <4 x double>* getelementptr inbounds ([0 x <4 x double>], [0 x <4 x double>]* @105, i64 0, i64 0), <4 x double>** %42
  store <4 x double>* getelementptr inbounds ([0 x <4 x double>], [0 x <4 x double>]* @105, i64 0, i64 0), <4 x double>** %43
  store <4 x double>* getelementptr inbounds ([0 x <4 x double>], [0 x <4 x double>]* @105, i64 0, i64 0), <4 x double>** %44
  store <4 x double>* getelementptr inbounds ([0 x <4 x double>], [0 x <4 x double>]* @105, i64 0, i64 0), <4 x double>** %45
  store <4 x double>* getelementptr inbounds ([0 x <4 x double>], [0 x <4 x double>]* @105, i64 0, i64 0), <4 x double>** %46
  store <4 x double>* getelementptr inbounds ([0 x <4 x double>], [0 x <4 x double>]* @105, i64 0, i64 0), <4 x double>** %47
  store <4 x double>* getelementptr inbounds ([0 x <4 x double>], [0 x <4 x double>]* @105, i64 0, i64 0), <4 x double>** %48
  store <4 x double>* getelementptr inbounds ([0 x <4 x double>], [0 x <4 x double>]* @105, i64 0, i64 0), <4 x double>** %49
  store <3 x double>* getelementptr inbounds ([0 x <3 x double>], [0 x <3 x double>]* @104, i64 0, i64 0), <3 x double>** %50
  %gemPrm = call %gemPrm @"gemPrm@Z6gemPrmM52N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PN8pc_DISC2[V[F[F[F[F[F[F[V[V[V[V[V[V[V[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[U[P[P[P[P[P[P[P[P[P[V"(double** %51, double** %0, double** %1, double** %2, double** %3, double** %4, <3 x double>** %5, <3 x double>** %6, <3 x double>** %7, <3 x double>** %8, <3 x double>** %9, <3 x double>** %10, <3 x double>** %11, <2 x double>** %12, <2 x double>** %13, <2 x double>** %14, <2 x double>** %15, <2 x double>** %16, <2 x double>** %17, <2 x double>** %18, <2 x double>** %19, <2 x double>** %20, <2 x double>** %21, <2 x double>** %22, <2 x double>** %23, <2 x double>** %24, <2 x double>** %25, <2 x double>** %26, <2 x double>** %27, <2 x double>** %28, <2 x double>** %29, <2 x double>** %30, <2 x double>** %31, <2 x double>** %32, <2 x double>** %33, <2 x double>** %34, <2 x double>** %35, <2 x double>** %36, <2 x double>** %37, <2 x double>** %38, <2 x double>** %39, <2 x double>** %40, <4 x double>** %41, <4 x double>** %42, <4 x double>** %43, <4 x double>** %44, <4 x double>** %45, <4 x double>** %46, <4 x double>** %47, <4 x double>** %48, <4 x double>** %49, <3 x double>** %50)
  ret %gemPrm %gemPrm
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SINUSOIDAL@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %w1 = load double, double* %w
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %return3 = call double @"sin@FF"(double %return)
  %output = fmul double %w1, %return3
  %tmp = load <2 x double>, <2 x double>* %p
  %return4 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output, i64 0)
  %output6 = extractvalue { double, <2 x double> } %return4, 1
  store <2 x double> %output6, <2 x double>* %p
  %w7 = load double, double* %w
  %_p8 = load <2 x double>, <2 x double>* %_p
  %return9 = call double @"getcomp@FUI"(<2 x double> %_p8, i64 1)
  %return10 = call double @"sin@FF"(double %return9)
  %output11 = fmul double %w7, %return10
  %return13 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output6, double %output11, i64 1)
  %output15 = extractvalue { double, <2 x double> } %return13, 1
  store <2 x double> %output15, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SPHERICAL@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %w1 = load double, double* %w
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %output = fadd double %SUMSQ, 0x3CB0000000000000
  %output3 = call double @"div@FF"(double %w1, double %output)
  %_p5 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p5, i64 0)
  %output6 = fmul double %output3, %return
  %tmp = load <2 x double>, <2 x double>* %p
  %return7 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output6, i64 0)
  %output9 = extractvalue { double, <2 x double> } %return7, 1
  store <2 x double> %output9, <2 x double>* %p
  %_p11 = load <2 x double>, <2 x double>* %_p
  %return12 = call double @"getcomp@FUI"(<2 x double> %_p11, i64 1)
  %output13 = fmul double %output3, %return12
  %return15 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output9, double %output13, i64 1)
  %output17 = extractvalue { double, <2 x double> } %return15, 1
  store <2 x double> %output17, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SWIRL@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %return = call double @"sin@FF"(double %SUMSQ)
  %return4 = call double @"cos@FF"(double %SUMSQ)
  %_p6 = load <2 x double>, <2 x double>* %_p
  %return7 = call double @"getcomp@FUI"(<2 x double> %_p6, i64 0)
  %output = fmul double %return, %return7
  %return10 = call double @"getcomp@FUI"(<2 x double> %_p6, i64 1)
  %output11 = fmul double %return4, %return10
  %output12 = fsub double %output, %output11
  %output16 = fmul double %return4, %return7
  %output20 = fmul double %return, %return10
  %output21 = fadd double %output16, %output20
  %w22 = load double, double* %w
  %output24 = fmul double %w22, %output12
  %tmp = load <2 x double>, <2 x double>* %p
  %return25 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output24, i64 0)
  %output27 = extractvalue { double, <2 x double> } %return25, 1
  store <2 x double> %output27, <2 x double>* %p
  %w28 = load double, double* %w
  %output30 = fmul double %w28, %output21
  %return32 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output27, double %output30, i64 1)
  %output34 = extractvalue { double, <2 x double> } %return32, 1
  store <2 x double> %output34, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_HORSESHOE@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %w1 = load double, double* %w
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %output = fadd double %SQRT, 0x3CB0000000000000
  %output3 = call double @"div@FF"(double %w1, double %output)
  %_p4 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p4, i64 0)
  %return6 = call double @"getcomp@FUI"(<2 x double> %_p4, i64 1)
  %output7 = fsub double %return, %return6
  %output12 = fadd double %return, %return6
  %output13 = fmul double %output7, %output12
  %output15 = fmul double %output13, %output3
  %tmp = load <2 x double>, <2 x double>* %p
  %return16 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output15, i64 0)
  %output18 = extractvalue { double, <2 x double> } %return16, 1
  store <2 x double> %output18, <2 x double>* %p
  %_p19 = load <2 x double>, <2 x double>* %_p
  %return20 = call double @"getcomp@FUI"(<2 x double> %_p19, i64 0)
  %output21 = fmul double 2.000000e+00, %return20
  %return23 = call double @"getcomp@FUI"(<2 x double> %_p19, i64 1)
  %output24 = fmul double %output21, %return23
  %output26 = fmul double %output24, %output3
  %return28 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output18, double %output26, i64 1)
  %output30 = extractvalue { double, <2 x double> } %return28, 1
  store <2 x double> %output30, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_POLAR@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %ATAN = call double @"ATAN@FU"(<2 x double>* %0)
  %output = fmul double %ATAN, 0x3FD45F306DC9C883
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %1
  %SQRT = call double @"SQRT@FU"(<2 x double>* %1)
  %output3 = fsub double %SQRT, 1.000000e+00
  %w4 = load double, double* %w
  %output6 = fmul double %w4, %output
  %tmp = load <2 x double>, <2 x double>* %p
  %return = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output6, i64 0)
  %output8 = extractvalue { double, <2 x double> } %return, 1
  store <2 x double> %output8, <2 x double>* %p
  %w9 = load double, double* %w
  %output11 = fmul double %w9, %output3
  %return13 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output8, double %output11, i64 1)
  %output15 = extractvalue { double, <2 x double> } %return13, 1
  store <2 x double> %output15, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_HANDKERCHIEF@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca <2 x double>
  %3 = alloca <2 x double>
  %4 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %ATAN = call double @"ATAN@FU"(<2 x double>* %0)
  %w2 = load double, double* %w
  %_p3 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p3, <2 x double>* %1
  %SQRT = call double @"SQRT@FU"(<2 x double>* %1)
  %output = fmul double %w2, %SQRT
  %_p5 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p5, <2 x double>* %2
  %SQRT6 = call double @"SQRT@FU"(<2 x double>* %2)
  %output7 = fadd double %ATAN, %SQRT6
  %return = call double @"sin@FF"(double %output7)
  %output8 = fmul double %output, %return
  %tmp = load <2 x double>, <2 x double>* %p
  %return9 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output8, i64 0)
  %output11 = extractvalue { double, <2 x double> } %return9, 1
  store <2 x double> %output11, <2 x double>* %p
  %w12 = load double, double* %w
  %_p13 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p13, <2 x double>* %3
  %SQRT14 = call double @"SQRT@FU"(<2 x double>* %3)
  %output15 = fmul double %w12, %SQRT14
  %_p17 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p17, <2 x double>* %4
  %SQRT18 = call double @"SQRT@FU"(<2 x double>* %4)
  %output19 = fsub double %ATAN, %SQRT18
  %return20 = call double @"cos@FF"(double %output19)
  %output21 = fmul double %output15, %return20
  %tmp22 = load <2 x double>, <2 x double>* %p
  %return23 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp22, double %output21, i64 1)
  %output25 = extractvalue { double, <2 x double> } %return23, 1
  store <2 x double> %output25, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_HEART@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %1
  %ATAN = call double @"ATAN@FU"(<2 x double>* %1)
  %output = fmul double %SUMSQ, %ATAN
  %w3 = load double, double* %w
  %_p4 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p4, <2 x double>* %2
  %SUMSQ5 = call double @"SUMSQ@FU"(<2 x double>* %2)
  %output6 = fmul double %w3, %SUMSQ5
  %return = call double @"sin@FF"(double %output)
  %output9 = fmul double %output6, %return
  %tmp = load <2 x double>, <2 x double>* %p
  %return10 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output9, i64 0)
  %output12 = extractvalue { double, <2 x double> } %return10, 1
  store <2 x double> %output12, <2 x double>* %p
  %return14 = call double @"neg@FF"(double %output6)
  %return16 = call double @"cos@FF"(double %output)
  %output17 = fmul double %return14, %return16
  %return19 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output12, double %output17, i64 1)
  %output21 = extractvalue { double, <2 x double> } %return19, 1
  store <2 x double> %output21, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_DISC@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %sr = alloca double
  %cr = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sr, !vex-initializer-store !3
  store double 0.000000e+00, double* %cr, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %ATAN = call double @"ATAN@FU"(<2 x double>* %0)
  %output = call double @"div@FF"(double 1.000000e+00, double 0x400921FB4D12D84A)
  %output2 = fmul double %ATAN, %output
  %_p3 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p3, <2 x double>* %1
  %SQRT = call double @"SQRT@FU"(<2 x double>* %1)
  %output4 = fmul double 0x400921FB4D12D84A, %SQRT
  store double %output4, double* %2
  call void @"sincos@FFF"(double* %2, double* %sr, double* %cr)
  %w6 = load double, double* %w
  %sr7 = load double, double* %sr
  %output8 = fmul double %w6, %sr7
  %output10 = fmul double %output8, %output2
  %tmp = load <2 x double>, <2 x double>* %p
  %return = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output10, i64 0)
  %output12 = extractvalue { double, <2 x double> } %return, 1
  store <2 x double> %output12, <2 x double>* %p
  %w13 = load double, double* %w
  %cr14 = load double, double* %cr
  %output15 = fmul double %w13, %cr14
  %output17 = fmul double %output15, %output2
  %return19 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output12, double %output17, i64 1)
  %output21 = extractvalue { double, <2 x double> } %return19, 1
  store <2 x double> %output21, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SPIRAL@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %sr = alloca double
  %cr = alloca double
  %1 = alloca <2 x double>
  %2 = alloca double
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %cast = call <2 x double> @"set@UF"(double %SQRT)
  %output = call <2 x double> @"div@UU"(<2 x double> %_p1, <2 x double> %cast)
  store double 0.000000e+00, double* %sr, !vex-initializer-store !3
  store double 0.000000e+00, double* %cr, !vex-initializer-store !3
  %_p3 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p3, <2 x double>* %1
  %SQRT4 = call double @"SQRT@FU"(<2 x double>* %1)
  %output5 = fadd double %SQRT4, 0x3CB0000000000000
  %w6 = load double, double* %w
  %output8 = call double @"div@FF"(double %w6, double %output5)
  store double %output5, double* %2
  call void @"sincos@FFF"(double* %2, double* %sr, double* %cr)
  %return = call double @"getcomp@FUI"(<2 x double> %output, i64 1)
  %sr12 = load double, double* %sr
  %output13 = fadd double %return, %sr12
  %output14 = fmul double %output8, %output13
  %tmp = load <2 x double>, <2 x double>* %p
  %return15 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output14, i64 0)
  %output17 = extractvalue { double, <2 x double> } %return15, 1
  store <2 x double> %output17, <2 x double>* %p
  %return20 = call double @"getcomp@FUI"(<2 x double> %output, i64 0)
  %cr21 = load double, double* %cr
  %output22 = fsub double %return20, %cr21
  %output23 = fmul double %output8, %output22
  %return25 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output17, double %output23, i64 1)
  %output27 = extractvalue { double, <2 x double> } %return25, 1
  store <2 x double> %output27, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind readnone
declare <2 x double> @"set@UF"(double) #1

; Function Attrs: nounwind readnone
declare <2 x double> @"div@UU"(<2 x double>, <2 x double>) #1

; Function Attrs: alwaysinline nounwind
define private void @"V_HIPERBOLIC@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %cast = call <2 x double> @"set@UF"(double %SQRT)
  %output = call <2 x double> @"div@UU"(<2 x double> %_p1, <2 x double> %cast)
  %_p3 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p3, <2 x double>* %1
  %SQRT4 = call double @"SQRT@FU"(<2 x double>* %1)
  %output5 = fadd double %SQRT4, 0x3CB0000000000000
  %w6 = load double, double* %w
  %return = call double @"getcomp@FUI"(<2 x double> %output, i64 0)
  %output8 = fmul double %w6, %return
  %output10 = call double @"div@FF"(double %output8, double %output5)
  %tmp = load <2 x double>, <2 x double>* %p
  %return11 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output10, i64 0)
  %output13 = extractvalue { double, <2 x double> } %return11, 1
  store <2 x double> %output13, <2 x double>* %p
  %w14 = load double, double* %w
  %return16 = call double @"getcomp@FUI"(<2 x double> %output, i64 1)
  %output17 = fmul double %w14, %return16
  %output19 = fmul double %output17, %output5
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output13, double %output19, i64 1)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_DIAMOND@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %sr = alloca double
  %cr = alloca double
  %1 = alloca <2 x double>
  %2 = alloca double
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %cast = call <2 x double> @"set@UF"(double %SQRT)
  %output = call <2 x double> @"div@UU"(<2 x double> %_p1, <2 x double> %cast)
  store double 0.000000e+00, double* %sr, !vex-initializer-store !3
  store double 0.000000e+00, double* %cr, !vex-initializer-store !3
  %_p3 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p3, <2 x double>* %1
  %SQRT4 = call double @"SQRT@FU"(<2 x double>* %1)
  store double %SQRT4, double* %2
  call void @"sincos@FFF"(double* %2, double* %sr, double* %cr)
  %w6 = load double, double* %w
  %return = call double @"getcomp@FUI"(<2 x double> %output, i64 0)
  %cr8 = load double, double* %cr
  %output9 = fmul double %return, %cr8
  %output10 = fmul double %w6, %output9
  %tmp = load <2 x double>, <2 x double>* %p
  %return11 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output10, i64 0)
  %output13 = extractvalue { double, <2 x double> } %return11, 1
  store <2 x double> %output13, <2 x double>* %p
  %w14 = load double, double* %w
  %return16 = call double @"getcomp@FUI"(<2 x double> %output, i64 1)
  %sr17 = load double, double* %sr
  %output18 = fmul double %return16, %sr17
  %output19 = fmul double %w14, %output18
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output13, double %output19, i64 1)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_EX@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %ATAN = call double @"ATAN@FU"(<2 x double>* %0)
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %1
  %SQRT = call double @"SQRT@FU"(<2 x double>* %1)
  %output = fadd double %ATAN, %SQRT
  %return = call double @"sin@FF"(double %output)
  %output7 = fsub double %ATAN, %SQRT
  %return8 = call double @"cos@FF"(double %output7)
  %output11 = fmul double %return, %return
  %output13 = fmul double %output11, %return
  %output15 = fmul double %output13, %SQRT
  %output18 = fmul double %return8, %return8
  %output20 = fmul double %output18, %return8
  %output22 = fmul double %output20, %SQRT
  %w23 = load double, double* %w
  %output26 = fadd double %output15, %output22
  %output27 = fmul double %w23, %output26
  %tmp = load <2 x double>, <2 x double>* %p
  %return28 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output27, i64 0)
  %output30 = extractvalue { double, <2 x double> } %return28, 1
  store <2 x double> %output30, <2 x double>* %p
  %w31 = load double, double* %w
  %output34 = fsub double %output15, %output22
  %output35 = fmul double %w31, %output34
  %return37 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output30, double %output35, i64 1)
  %output39 = extractvalue { double, <2 x double> } %return37, 1
  store <2 x double> %output39, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_JULIA@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %ATAN = call double @"ATAN@FU"(<2 x double>* %0)
  %output = fmul double 5.000000e-01, %ATAN
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return2 = fcmp olt double %return, 5.000000e-01
  br i1 %return2, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %output5 = fadd double %output, 0x400921FB4D12D84A
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %aa.0 = phi double [ %output5, %true ], [ %output, %__llvm_entry ]
  %w6 = load double, double* %w
  %_p7 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p7, <2 x double>* %1
  %SQRT = call double @"SQRT@FU"(<2 x double>* %1)
  %return8 = call double @"sqrt@FF"(double %SQRT)
  %output9 = fmul double %w6, %return8
  store double %aa.0, double* %2
  call void @"sincos@FFF"(double* %2, double* %sa, double* %ca)
  %ca12 = load double, double* %ca
  %output13 = fmul double %output9, %ca12
  %tmp = load <2 x double>, <2 x double>* %p
  %return14 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output13, i64 0)
  %output16 = extractvalue { double, <2 x double> } %return14, 1
  store <2 x double> %output16, <2 x double>* %p
  %sa18 = load double, double* %sa
  %output19 = fmul double %output9, %sa18
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output16, double %output19, i64 1)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_BENT@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  %return3 = call double @"getcomp@FUI"(<2 x double> %_p1, i64 1)
  %return5 = fcmp olt double %return, 0.000000e+00
  br i1 %return5, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %output = fmul double %return, 2.000000e+00
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %nx.0 = phi double [ %output, %true ], [ %return, %__llvm_entry ]
  %return9 = fcmp olt double %return3, 0.000000e+00
  br i1 %return9, label %true11, label %end12

true11:                                           ; preds = %end
  %output14 = call double @"div@FF"(double %return3, double 2.000000e+00)
  br label %end12

end12:                                            ; preds = %true11, %end
  %ny.0 = phi double [ %output14, %true11 ], [ %return3, %end ]
  %w15 = load double, double* %w
  %output17 = fmul double %w15, %nx.0
  %tmp = load <2 x double>, <2 x double>* %p
  %return18 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output17, i64 0)
  %output20 = extractvalue { double, <2 x double> } %return18, 1
  store <2 x double> %output20, <2 x double>* %p
  %w21 = load double, double* %w
  %output23 = fmul double %w21, %ny.0
  %return25 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output20, double %output23, i64 1)
  %output27 = extractvalue { double, <2 x double> } %return25, 1
  store <2 x double> %output27, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_WAVES@UUFFFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %b, double* %c, double* %e, double* %f) #0 {
__llvm_entry:
  %0 = alloca double
  %1 = alloca double
  %c1 = load double, double* %c
  %f2 = load double, double* %f
  %output = fmul double %c1, %c1
  store double %output, double* %0
  %Zeps = call double @"Zeps@FF"(double* %0)
  %output5 = call double @"div@FF"(double 1.000000e+00, double %Zeps)
  %output8 = fmul double %f2, %f2
  store double %output8, double* %1
  %Zeps9 = call double @"Zeps@FF"(double* %1)
  %output10 = call double @"div@FF"(double 1.000000e+00, double %Zeps9)
  %b11 = load double, double* %b
  %e12 = load double, double* %e
  %_p13 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p13, i64 0)
  %return16 = call double @"getcomp@FUI"(<2 x double> %_p13, i64 1)
  %output18 = fmul double %return16, %output5
  %return19 = call double @"sin@FF"(double %output18)
  %output20 = fmul double %b11, %return19
  %output21 = fadd double %return, %output20
  %output28 = fmul double %return, %output10
  %return29 = call double @"sin@FF"(double %output28)
  %output30 = fmul double %e12, %return29
  %output31 = fadd double %return16, %output30
  %w32 = load double, double* %w
  %output34 = fmul double %w32, %output21
  %tmp = load <2 x double>, <2 x double>* %p
  %return35 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output34, i64 0)
  %output37 = extractvalue { double, <2 x double> } %return35, 1
  store <2 x double> %output37, <2 x double>* %p
  %w38 = load double, double* %w
  %output40 = fmul double %w38, %output31
  %return42 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output37, double %output40, i64 1)
  %output44 = extractvalue { double, <2 x double> } %return42, 1
  store <2 x double> %output44, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_FISHEYE@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %w2 = load double, double* %w
  %output = fmul double 2.000000e+00, %w2
  %output4 = fadd double %SQRT, 1.000000e+00
  %output5 = call double @"div@FF"(double %output, double %output4)
  %_p7 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p7, i64 1)
  %output8 = fmul double %output5, %return
  %tmp = load <2 x double>, <2 x double>* %p
  %return9 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output8, i64 0)
  %output11 = extractvalue { double, <2 x double> } %return9, 1
  store <2 x double> %output11, <2 x double>* %p
  %_p13 = load <2 x double>, <2 x double>* %_p
  %return14 = call double @"getcomp@FUI"(<2 x double> %_p13, i64 0)
  %output15 = fmul double %output5, %return14
  %return17 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output11, double %output15, i64 1)
  %output19 = extractvalue { double, <2 x double> } %return17, 1
  store <2 x double> %output19, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_POPCORN@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %d, double* %h) #0 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 1)
  %output = fmul double 3.000000e+00, %return
  %return2 = call double @"tan@FF"(double %output)
  %return4 = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  %output5 = fmul double 3.000000e+00, %return4
  %return6 = call double @"tan@FF"(double %output5)
  %d9 = load double, double* %d
  %return11 = call double @"sin@FF"(double %return2)
  %output12 = fmul double %d9, %return11
  %output13 = fadd double %return4, %output12
  %h16 = load double, double* %h
  %return18 = call double @"sin@FF"(double %return6)
  %output19 = fmul double %h16, %return18
  %output20 = fadd double %return, %output19
  %w21 = load double, double* %w
  %output23 = fmul double %w21, %output13
  %tmp = load <2 x double>, <2 x double>* %p
  %return24 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output23, i64 0)
  %output26 = extractvalue { double, <2 x double> } %return24, 1
  store <2 x double> %output26, <2 x double>* %p
  %w27 = load double, double* %w
  %output29 = fmul double %w27, %output20
  %return31 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output26, double %output29, i64 1)
  %output33 = extractvalue { double, <2 x double> } %return31, 1
  store <2 x double> %output33, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_EXPONENTIAL@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %sdy = alloca double
  %cdy = alloca double
  %0 = alloca double
  store double 0.000000e+00, double* %sdy, !vex-initializer-store !3
  store double 0.000000e+00, double* %cdy, !vex-initializer-store !3
  %w1 = load double, double* %w
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %output = fsub double %return, 1.000000e+00
  %return3 = call double @"exp@FF"(double %output)
  %output4 = fmul double %w1, %return3
  %return6 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  %output7 = fmul double 0x400921FB4D12D84A, %return6
  store double %output7, double* %0
  call void @"sincos@FFF"(double* %0, double* %sdy, double* %cdy)
  %cdy10 = load double, double* %cdy
  %output11 = fmul double %output4, %cdy10
  %tmp = load <2 x double>, <2 x double>* %p
  %return12 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output11, i64 0)
  %output14 = extractvalue { double, <2 x double> } %return12, 1
  store <2 x double> %output14, <2 x double>* %p
  %sdy16 = load double, double* %sdy
  %output17 = fmul double %output4, %sdy16
  %return19 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output14, double %output17, i64 1)
  %output21 = extractvalue { double, <2 x double> } %return19, 1
  store <2 x double> %output21, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind readnone
declare double @"exp@FF"(double) #1

; Function Attrs: alwaysinline nounwind
define private void @"V_POWER@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %cast = call <2 x double> @"set@UF"(double %SQRT)
  %output = call <2 x double> @"div@UU"(<2 x double> %_p1, <2 x double> %cast)
  %w3 = load double, double* %w
  %_p4 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p4, <2 x double>* %1
  %SQRT5 = call double @"SQRT@FU"(<2 x double>* %1)
  %return = call double @"getcomp@FUI"(<2 x double> %output, i64 0)
  %return7 = call double @"pow@FFF"(double %SQRT5, double %return)
  %output8 = fmul double %w3, %return7
  %return11 = call double @"getcomp@FUI"(<2 x double> %output, i64 1)
  %output12 = fmul double %output8, %return11
  %tmp = load <2 x double>, <2 x double>* %p
  %return13 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output12, i64 0)
  %output15 = extractvalue { double, <2 x double> } %return13, 1
  store <2 x double> %output15, <2 x double>* %p
  %output19 = fmul double %output8, %return
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output15, double %output19, i64 1)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind readnone
declare double @"pow@FFF"(double, double) #1

; Function Attrs: alwaysinline nounwind
define private void @"V_COSINE@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  %output = fmul double %return, 0x400921FB4D12D84A
  store double %output, double* %0
  call void @"sincos@FFF"(double* %0, double* %sa, double* %ca)
  %ca3 = load double, double* %ca
  %_p4 = load <2 x double>, <2 x double>* %_p
  %return5 = call double @"getcomp@FUI"(<2 x double> %_p4, i64 1)
  %return6 = call double @"cosh@FF"(double %return5)
  %output7 = fmul double %ca3, %return6
  %sa8 = load double, double* %sa
  %return9 = call double @"neg@FF"(double %sa8)
  %return12 = call double @"sinh@FF"(double %return5)
  %output13 = fmul double %return9, %return12
  %w14 = load double, double* %w
  %output16 = fmul double %w14, %output7
  %tmp = load <2 x double>, <2 x double>* %p
  %return17 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output16, i64 0)
  %output19 = extractvalue { double, <2 x double> } %return17, 1
  store <2 x double> %output19, <2 x double>* %p
  %w20 = load double, double* %w
  %output22 = fmul double %w20, %output13
  %return24 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output19, double %output22, i64 1)
  %output26 = extractvalue { double, <2 x double> } %return24, 1
  store <2 x double> %output26, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind readnone
declare double @"cosh@FF"(double) #1

; Function Attrs: nounwind readnone
declare double @"sinh@FF"(double) #1

; Function Attrs: alwaysinline nounwind
define private void @"V_RINGS@UUFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %d) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  %3 = alloca double
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %cast = call <2 x double> @"set@UF"(double %SQRT)
  %output = call <2 x double> @"div@UU"(<2 x double> %_p1, <2 x double> %cast)
  %d3 = load double, double* %d
  %output5 = fmul double %d3, %d3
  %output6 = fadd double %output5, 0x3CB0000000000000
  %_p7 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p7, <2 x double>* %1
  %SQRT8 = call double @"SQRT@FU"(<2 x double>* %1)
  %w9 = load double, double* %w
  %output12 = fadd double %SQRT8, %output6
  store double %output12, double* %2
  %output14 = fmul double 2.000000e+00, %output6
  store double %output14, double* %3
  %fmod = call double @"fmod@FFF"(double* %2, double* %3)
  %output16 = fsub double %fmod, %output6
  %output19 = fsub double 1.000000e+00, %output6
  %output20 = fmul double %SQRT8, %output19
  %output21 = fadd double %output16, %output20
  %output22 = fmul double %w9, %output21
  %return = call double @"getcomp@FUI"(<2 x double> %output, i64 1)
  %output25 = fmul double %output22, %return
  %tmp = load <2 x double>, <2 x double>* %p
  %return26 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output25, i64 0)
  %output28 = extractvalue { double, <2 x double> } %return26, 1
  store <2 x double> %output28, <2 x double>* %p
  %return31 = call double @"getcomp@FUI"(<2 x double> %output, i64 0)
  %output32 = fmul double %output22, %return31
  %return34 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output28, double %output32, i64 1)
  %output36 = extractvalue { double, <2 x double> } %return34, 1
  store <2 x double> %output36, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_FAN@UUFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %d) #0 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  %3 = alloca double
  %4 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %d1 = load double, double* %d
  %output = fmul double %d1, %d1
  %output3 = fadd double %output, 0x3CB0000000000000
  %output4 = fmul double 0x400921FB4D12D84A, %output3
  %output7 = fmul double 5.000000e-01, %output4
  %_p8 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p8, <2 x double>* %0
  %ATAN = call double @"ATAN@FU"(<2 x double>* %0)
  %w9 = load double, double* %w
  %_p10 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p10, <2 x double>* %1
  %SQRT = call double @"SQRT@FU"(<2 x double>* %1)
  %output11 = fmul double %w9, %SQRT
  %output15 = fadd double %ATAN, %d1
  store double %output15, double* %2
  store double %output4, double* %3
  %fmod = call double @"fmod@FFF"(double* %2, double* %3)
  %return = fcmp ogt double %fmod, %output7
  br i1 %return, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %return20 = call double @"neg@FF"(double %output7)
  br label %end

end:                                              ; preds = %__llvm_entry, %true
  %phi = phi double [ %return20, %true ], [ %output7, %__llvm_entry ]
  %output22 = fadd double %ATAN, %phi
  store double %output22, double* %4
  call void @"sincos@FFF"(double* %4, double* %sa, double* %ca)
  %ca25 = load double, double* %ca
  %output26 = fmul double %output11, %ca25
  %tmp = load <2 x double>, <2 x double>* %p
  %return27 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output26, i64 0)
  %output29 = extractvalue { double, <2 x double> } %return27, 1
  store <2 x double> %output29, <2 x double>* %p
  %sa31 = load double, double* %sa
  %output32 = fmul double %output11, %sa31
  %return34 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output29, double %output32, i64 1)
  %output36 = extractvalue { double, <2 x double> } %return34, 1
  store <2 x double> %output36, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_BUBBLE@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %w1 = load double, double* %w
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %output = fmul double 2.500000e-01, %SUMSQ
  %output3 = fadd double %output, 1.000000e+00
  %output4 = call double @"div@FF"(double %w1, double %output3)
  %_p6 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p6, i64 0)
  %output7 = fmul double %output4, %return
  %tmp = load <2 x double>, <2 x double>* %p
  %return8 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output7, i64 0)
  %output10 = extractvalue { double, <2 x double> } %return8, 1
  store <2 x double> %output10, <2 x double>* %p
  %_p12 = load <2 x double>, <2 x double>* %_p
  %return13 = call double @"getcomp@FUI"(<2 x double> %_p12, i64 1)
  %output14 = fmul double %output4, %return13
  %return16 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output10, double %output14, i64 1)
  %output18 = extractvalue { double, <2 x double> } %return16, 1
  store <2 x double> %output18, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_CYLINDER@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %w1 = load double, double* %w
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %return3 = call double @"sin@FF"(double %return)
  %output = fmul double %w1, %return3
  %tmp = load <2 x double>, <2 x double>* %p
  %return4 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output, i64 0)
  %output6 = extractvalue { double, <2 x double> } %return4, 1
  store <2 x double> %output6, <2 x double>* %p
  %w7 = load double, double* %w
  %_p8 = load <2 x double>, <2 x double>* %_p
  %return9 = call double @"getcomp@FUI"(<2 x double> %_p8, i64 1)
  %output10 = fmul double %w7, %return9
  %return12 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output6, double %output10, i64 1)
  %output14 = extractvalue { double, <2 x double> } %return12, 1
  store <2 x double> %output14, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_EYEFISH@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %w1 = load double, double* %w
  %output = fmul double %w1, 2.000000e+00
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %output3 = fadd double 1.000000e+00, %SQRT
  %output4 = call double @"div@FF"(double %output, double %output3)
  %_p6 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p6, i64 0)
  %output7 = fmul double %output4, %return
  %tmp = load <2 x double>, <2 x double>* %p
  %return8 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output7, i64 0)
  %output10 = extractvalue { double, <2 x double> } %return8, 1
  store <2 x double> %output10, <2 x double>* %p
  %_p12 = load <2 x double>, <2 x double>* %_p
  %return13 = call double @"getcomp@FUI"(<2 x double> %_p12, i64 1)
  %output14 = fmul double %output4, %return13
  %return16 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output10, double %output14, i64 1)
  %output18 = extractvalue { double, <2 x double> } %return16, 1
  store <2 x double> %output18, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_BLUR@UF"(<2 x double>* %p, double* %w) #0 {
__llvm_entry:
  %sinr = alloca double
  %cosr = alloca double
  %0 = alloca double
  store double 0.000000e+00, double* %sinr, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosr, !vex-initializer-store !3
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output = fmul double %return, 2.000000e+00
  %output1 = fmul double %output, 0x400921FB4D12D84A
  store double %output1, double* %0
  call void @"sincos@FFF"(double* %0, double* %sinr, double* %cosr)
  %w3 = load double, double* %w
  %return4 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output5 = fmul double %w3, %return4
  %cosr7 = load double, double* %cosr
  %output8 = fmul double %output5, %cosr7
  %tmp = load <2 x double>, <2 x double>* %p
  %return9 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output8, i64 0)
  %output11 = extractvalue { double, <2 x double> } %return9, 1
  store <2 x double> %output11, <2 x double>* %p
  %sinr13 = load double, double* %sinr
  %output14 = fmul double %output5, %sinr13
  %return16 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output11, double %output14, i64 1)
  %output18 = extractvalue { double, <2 x double> } %return16, 1
  store <2 x double> %output18, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_CURL@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %c1, double* %c2) #0 {
__llvm_entry:
  %c11 = load double, double* %c1
  %return = fcmp oeq double %c11, 0.000000e+00
  %c23 = load double, double* %c2
  %return4 = fcmp oeq double %c23, 0.000000e+00
  br i1 %return, label %true, label %false

true:                                             ; preds = %__llvm_entry
  br i1 %return4, label %true6, label %false7

false:                                            ; preds = %__llvm_entry
  %_p87 = load <2 x double>, <2 x double>* %_p
  %return88 = call double @"getcomp@FUI"(<2 x double> %_p87, i64 0)
  %output89 = fmul double %c11, %return88
  %output90 = fadd double 1.000000e+00, %output89
  br i1 %return4, label %true83, label %false84

end:                                              ; preds = %true83, %false84, %true6, %false7
  ret void

true6:                                            ; preds = %true
  %w9 = load double, double* %w
  %_p10 = load <2 x double>, <2 x double>* %_p
  %return11 = call double @"getcomp@FUI"(<2 x double> %_p10, i64 0)
  %output = fmul double %w9, %return11
  %tmp = load <2 x double>, <2 x double>* %p
  %return12 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output, i64 0)
  %output14 = extractvalue { double, <2 x double> } %return12, 1
  store <2 x double> %output14, <2 x double>* %p
  %w15 = load double, double* %w
  %_p16 = load <2 x double>, <2 x double>* %_p
  %return17 = call double @"getcomp@FUI"(<2 x double> %_p16, i64 1)
  %output18 = fmul double %w15, %return17
  %return20 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output14, double %output18, i64 1)
  %output22 = extractvalue { double, <2 x double> } %return20, 1
  store <2 x double> %output22, <2 x double>* %p
  br label %end

false7:                                           ; preds = %true
  %_p24 = load <2 x double>, <2 x double>* %_p
  %return25 = call double @"getcomp@FUI"(<2 x double> %_p24, i64 0)
  %return26 = call double @"sqrt@FF"(double %return25)
  %return28 = call double @"getcomp@FUI"(<2 x double> %_p24, i64 1)
  %return29 = call double @"sqrt@FF"(double %return28)
  %output30 = fsub double %return26, %return29
  %output31 = fmul double %c23, %output30
  %output32 = fadd double 1.000000e+00, %output31
  %output34 = fmul double %c23, 2.000000e+00
  %output37 = fmul double %output34, %return25
  %output40 = fmul double %output37, %return28
  %w41 = load double, double* %w
  %output44 = fmul double %output32, %output32
  %output47 = fmul double %output40, %output40
  %output48 = fadd double %output44, %output47
  %output49 = call double @"div@FF"(double %w41, double %output48)
  %output53 = fmul double %return25, %output32
  %output57 = fmul double %return28, %output40
  %output58 = fadd double %output53, %output57
  %output60 = fmul double %output58, %output49
  %tmp61 = load <2 x double>, <2 x double>* %p
  %return62 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp61, double %output60, i64 0)
  %output64 = extractvalue { double, <2 x double> } %return62, 1
  store <2 x double> %output64, <2 x double>* %p
  %_p65 = load <2 x double>, <2 x double>* %_p
  %return66 = call double @"getcomp@FUI"(<2 x double> %_p65, i64 1)
  %output68 = fmul double %return66, %output32
  %return70 = call double @"getcomp@FUI"(<2 x double> %_p65, i64 0)
  %output72 = fmul double %return70, %output40
  %output73 = fsub double %output68, %output72
  %output75 = fmul double %output73, %output49
  %return77 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output64, double %output75, i64 1)
  %output79 = extractvalue { double, <2 x double> } %return77, 1
  store <2 x double> %output79, <2 x double>* %p
  br label %end

true83:                                           ; preds = %false
  %return93 = call double @"getcomp@FUI"(<2 x double> %_p87, i64 1)
  %output94 = fmul double %c11, %return93
  %w95 = load double, double* %w
  %output98 = fmul double %output90, %output90
  %output101 = fmul double %output94, %output94
  %output102 = fadd double %output98, %output101
  %output103 = call double @"div@FF"(double %w95, double %output102)
  %output107 = fmul double %return88, %output90
  %output111 = fmul double %return93, %output94
  %output112 = fadd double %output107, %output111
  %output114 = fmul double %output112, %output103
  %tmp115 = load <2 x double>, <2 x double>* %p
  %return116 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp115, double %output114, i64 0)
  %output118 = extractvalue { double, <2 x double> } %return116, 1
  store <2 x double> %output118, <2 x double>* %p
  %_p119 = load <2 x double>, <2 x double>* %_p
  %return120 = call double @"getcomp@FUI"(<2 x double> %_p119, i64 1)
  %output122 = fmul double %return120, %output90
  %return124 = call double @"getcomp@FUI"(<2 x double> %_p119, i64 0)
  %output126 = fmul double %return124, %output94
  %output127 = fsub double %output122, %output126
  %output129 = fmul double %output127, %output103
  %return131 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output118, double %output129, i64 1)
  %output133 = extractvalue { double, <2 x double> } %return131, 1
  store <2 x double> %output133, <2 x double>* %p
  br label %end

false84:                                          ; preds = %false
  %return142 = call double @"sqrt@FF"(double %return88)
  %return144 = call double @"getcomp@FUI"(<2 x double> %_p87, i64 1)
  %return145 = call double @"sqrt@FF"(double %return144)
  %output146 = fsub double %return142, %return145
  %output147 = fmul double %c23, %output146
  %output148 = fadd double %output90, %output147
  %output152 = fmul double %c11, %return144
  %output154 = fmul double %c23, 2.000000e+00
  %output157 = fmul double %output154, %return88
  %output160 = fmul double %output157, %return144
  %output161 = fadd double %output152, %output160
  %w162 = load double, double* %w
  %output165 = fmul double %output148, %output148
  %output168 = fmul double %output161, %output161
  %output169 = fadd double %output165, %output168
  %output170 = call double @"div@FF"(double %w162, double %output169)
  %output174 = fmul double %return88, %output148
  %output178 = fmul double %return144, %output161
  %output179 = fadd double %output174, %output178
  %output181 = fmul double %output179, %output170
  %tmp182 = load <2 x double>, <2 x double>* %p
  %return183 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp182, double %output181, i64 0)
  %output185 = extractvalue { double, <2 x double> } %return183, 1
  store <2 x double> %output185, <2 x double>* %p
  %_p186 = load <2 x double>, <2 x double>* %_p
  %return187 = call double @"getcomp@FUI"(<2 x double> %_p186, i64 1)
  %output189 = fmul double %return187, %output148
  %return191 = call double @"getcomp@FUI"(<2 x double> %_p186, i64 0)
  %output193 = fmul double %return191, %output161
  %output194 = fsub double %output189, %output193
  %output196 = fmul double %output194, %output170
  %return198 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output185, double %output196, i64 1)
  %output200 = extractvalue { double, <2 x double> } %return198, 1
  store <2 x double> %output200, <2 x double>* %p
  br label %end
}

; Function Attrs: alwaysinline nounwind
define private void @"V_NGON@UUFFFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %pow, double* %sides, double* %corners, double* %circle) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %return = call double @"neg@FF"(double 5.000000e-01)
  %pow1 = load double, double* %pow
  %output = fmul double %return, %pow1
  %sides2 = load double, double* %sides
  %output3 = call double @"div@FF"(double 0x401921FB4D12D84A, double %sides2)
  %output5 = call double @"div@FF"(double 1.000000e+00, double %output3)
  %_p6 = load <2 x double>, <2 x double>* %_p
  %return7 = call double @"getcomp@FUI"(<2 x double> %_p6, i64 0)
  %return8 = fcmp oeq double %return7, 0.000000e+00
  %return9 = zext i1 %return8 to i64
  %return11 = call double @"getcomp@FUI"(<2 x double> %_p6, i64 1)
  %return12 = fcmp oeq double %return11, 0.000000e+00
  %return13 = zext i1 %return12 to i64
  %return14 = call i64 @"and@III"(i64 %return9, i64 %return13)
  %2 = icmp ne i64 %return14, 0
  br i1 %2, label %end, label %false

false:                                            ; preds = %__llvm_entry
  store <2 x double> %_p6, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %return17 = call double @"pow@FFF"(double %SUMSQ, double %output)
  br label %end

end:                                              ; preds = %__llvm_entry, %false
  %phi18 = phi double [ %return17, %false ], [ 0.000000e+00, %__llvm_entry ]
  %_p19 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p19, <2 x double>* %1
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %1)
  %output24 = fmul double %ATANYX, %output5
  %return25 = call double @"floor@FF"(double %output24)
  %output26 = fmul double %output3, %return25
  %output27 = fsub double %ATANYX, %output26
  %output30 = fmul double 5.000000e-01, %output3
  %return31 = fcmp ogt double %output27, %output30
  br i1 %return31, label %true33, label %end34

true33:                                           ; preds = %end
  %output37 = fsub double %output27, %output3
  br label %end34

end34:                                            ; preds = %true33, %end
  %phi.0 = phi double [ %output37, %true33 ], [ %output27, %end ]
  %corners38 = load double, double* %corners
  %return40 = call double @"cos@FF"(double %phi.0)
  %output41 = call double @"div@FF"(double 1.000000e+00, double %return40)
  %output42 = fsub double %output41, 1.000000e+00
  %output43 = fmul double %corners38, %output42
  %circle44 = load double, double* %circle
  %output45 = fadd double %output43, %circle44
  %w46 = load double, double* %w
  %output47 = fmul double %output45, %w46
  %output49 = fmul double %output47, %phi18
  %_p51 = load <2 x double>, <2 x double>* %_p
  %return52 = call double @"getcomp@FUI"(<2 x double> %_p51, i64 0)
  %output53 = fmul double %output49, %return52
  %tmp = load <2 x double>, <2 x double>* %p
  %return54 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output53, i64 0)
  %output56 = extractvalue { double, <2 x double> } %return54, 1
  store <2 x double> %output56, <2 x double>* %p
  %_p58 = load <2 x double>, <2 x double>* %_p
  %return59 = call double @"getcomp@FUI"(<2 x double> %_p58, i64 1)
  %output60 = fmul double %output49, %return59
  %return62 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output56, double %output60, i64 1)
  %output64 = extractvalue { double, <2 x double> } %return62, 1
  store <2 x double> %output64, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind readnone
declare i64 @"and@III"(i64, i64) #1

; Function Attrs: alwaysinline nounwind
define private void @"V_PDJ@UUFP"(<2 x double>* %p, <2 x double>* %_p, double* %w, <4 x double>* %pp) #0 {
__llvm_entry:
  %pp1 = load <4 x double>, <4 x double>* %pp
  %return = call double @"getcomp@FPI"(<4 x double> %pp1, i64 1)
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return3 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %output = fmul double %return, %return3
  %return4 = call double @"cos@FF"(double %output)
  %return6 = call double @"getcomp@FPI"(<4 x double> %pp1, i64 2)
  %output9 = fmul double %return6, %return3
  %return10 = call double @"sin@FF"(double %output9)
  %return12 = call double @"getcomp@FPI"(<4 x double> %pp1, i64 0)
  %return14 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  %output15 = fmul double %return12, %return14
  %return16 = call double @"sin@FF"(double %output15)
  %return18 = call double @"getcomp@FPI"(<4 x double> %pp1, i64 3)
  %output21 = fmul double %return18, %return14
  %return22 = call double @"cos@FF"(double %output21)
  %w23 = load double, double* %w
  %output26 = fsub double %return16, %return4
  %output27 = fmul double %w23, %output26
  %tmp = load <2 x double>, <2 x double>* %p
  %return28 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output27, i64 0)
  %output30 = extractvalue { double, <2 x double> } %return28, 1
  store <2 x double> %output30, <2 x double>* %p
  %w31 = load double, double* %w
  %output34 = fsub double %return10, %return22
  %output35 = fmul double %w31, %output34
  %return37 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output30, double %output35, i64 1)
  %output39 = extractvalue { double, <2 x double> } %return37, 1
  store <2 x double> %output39, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind readnone
declare double @"getcomp@FPI"(<4 x double>, i64) #1

; Function Attrs: alwaysinline nounwind
define private void @"V_BLOB@UUFFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %pp1, double* %pp2, double* %pp3) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %cast = call <2 x double> @"set@UF"(double %SQRT)
  %output = call <2 x double> @"div@UU"(<2 x double> %_p1, <2 x double> %cast)
  %_p4 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p4, <2 x double>* %1
  %SQRT5 = call double @"SQRT@FU"(<2 x double>* %1)
  %_p7 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p7, <2 x double>* %2
  %ATAN = call double @"ATAN@FU"(<2 x double>* %2)
  %pp18 = load double, double* %pp1
  %pp29 = load double, double* %pp2
  %output10 = fsub double %pp18, %pp29
  %pp314 = load double, double* %pp3
  %output16 = fmul double %pp314, %ATAN
  %return = call double @"sin@FF"(double %output16)
  %output17 = fmul double 5.000000e-01, %return
  %output18 = fadd double 5.000000e-01, %output17
  %output19 = fmul double %output10, %output18
  %output20 = fadd double %pp29, %output19
  %output21 = fmul double %SQRT5, %output20
  %w22 = load double, double* %w
  %return24 = call double @"getcomp@FUI"(<2 x double> %output, i64 0)
  %output25 = fmul double %w22, %return24
  %output27 = fmul double %output25, %output21
  %tmp = load <2 x double>, <2 x double>* %p
  %return28 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output27, i64 0)
  %output30 = extractvalue { double, <2 x double> } %return28, 1
  store <2 x double> %output30, <2 x double>* %p
  %w31 = load double, double* %w
  %return33 = call double @"getcomp@FUI"(<2 x double> %output, i64 1)
  %output34 = fmul double %w31, %return33
  %output36 = fmul double %output34, %output21
  %return38 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output30, double %output36, i64 1)
  %output40 = extractvalue { double, <2 x double> } %return38, 1
  store <2 x double> %output40, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_JULIAN@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %power, double* %jdist) #0 {
__llvm_entry:
  %sina = alloca double
  %cosa = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sina, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosa, !vex-initializer-store !3
  %power1 = load double, double* %power
  %jdist2 = load double, double* %jdist
  %output = call double @"div@FF"(double %jdist2, double %power1)
  %output4 = call double @"div@FF"(double %output, double 2.000000e+00)
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output6 = fmul double %power1, %return
  %return7 = call double @"trunc@FF"(double %output6)
  %cast = fptosi double %return7 to i64
  %_p8 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p8, <2 x double>* %0
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %0)
  %cast10 = sitofp i64 %cast to double
  %output11 = fmul double 0x401921FB4D12D84A, %cast10
  %output12 = fadd double %ATANYX, %output11
  %power13 = load double, double* %power
  %output14 = call double @"div@FF"(double %output12, double %power13)
  %w15 = load double, double* %w
  %_p16 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p16, <2 x double>* %1
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %1)
  %return18 = call double @"pow@FFF"(double %SUMSQ, double %output4)
  %output19 = fmul double %w15, %return18
  store double %output14, double* %2
  call void @"sincos@FFF"(double* %2, double* %sina, double* %cosa)
  %cosa22 = load double, double* %cosa
  %output23 = fmul double %output19, %cosa22
  %tmp = load <2 x double>, <2 x double>* %p
  %return24 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output23, i64 0)
  %output26 = extractvalue { double, <2 x double> } %return24, 1
  store <2 x double> %output26, <2 x double>* %p
  %sina28 = load double, double* %sina
  %output29 = fmul double %output19, %sina28
  %return31 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output26, double %output29, i64 1)
  %output33 = extractvalue { double, <2 x double> } %return31, 1
  store <2 x double> %output33, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind readnone
declare double @"trunc@FF"(double) #1

; Function Attrs: alwaysinline nounwind
define private void @"V_JULIASCOPE@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %power, double* %jdist) #0 {
__llvm_entry:
  %sina = alloca double
  %cosa = alloca double
  %0 = alloca <2 x double>
  %1 = alloca double
  %2 = alloca <2 x double>
  store double 0.000000e+00, double* %sina, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosa, !vex-initializer-store !3
  %power1 = load double, double* %power
  %jdist2 = load double, double* %jdist
  %output = call double @"div@FF"(double %jdist2, double %power1)
  %output4 = call double @"div@FF"(double %output, double 2.000000e+00)
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output6 = fmul double %power1, %return
  %return7 = call double @"trunc@FF"(double %output6)
  %cast = fptosi double %return7 to i64
  %return9 = and i64 %cast, 1
  %return10 = call i64 @"eq@III"(i64 %return9, i64 0)
  %3 = icmp ne i64 %return10, 0
  %cast12 = sitofp i64 %cast to double
  %output13 = fmul double 0x401921FB4D12D84A, %cast12
  %_p14 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p14, <2 x double>* %0
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %0)
  br i1 %3, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output15 = fadd double %output13, %ATANYX
  %power16 = load double, double* %power
  %output17 = call double @"div@FF"(double %output15, double %power16)
  br label %end

false:                                            ; preds = %__llvm_entry
  %output23 = fsub double %output13, %ATANYX
  %power24 = load double, double* %power
  %output25 = call double @"div@FF"(double %output23, double %power24)
  br label %end

end:                                              ; preds = %false, %true
  %phi = phi double [ %output17, %true ], [ %output25, %false ]
  store double %phi, double* %1
  call void @"sincos@FFF"(double* %1, double* %sina, double* %cosa)
  %w27 = load double, double* %w
  %_p28 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p28, <2 x double>* %2
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %2)
  %return30 = call double @"pow@FFF"(double %SUMSQ, double %output4)
  %output31 = fmul double %w27, %return30
  %cosa33 = load double, double* %cosa
  %output34 = fmul double %output31, %cosa33
  %tmp = load <2 x double>, <2 x double>* %p
  %return35 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output34, i64 0)
  %output37 = extractvalue { double, <2 x double> } %return35, 1
  store <2 x double> %output37, <2 x double>* %p
  %sina39 = load double, double* %sina
  %output40 = fmul double %output31, %sina39
  %return42 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output37, double %output40, i64 1)
  %output44 = extractvalue { double, <2 x double> } %return42, 1
  store <2 x double> %output44, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_GAUSSIAN_BLUR@UF"(<2 x double>* %p, double* %w) #0 {
__llvm_entry:
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output = fmul double %return, 2.000000e+00
  %output1 = fmul double %output, 0x400921FB4D12D84A
  %w2 = load double, double* %w
  %return3 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return4 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output5 = fadd double %return3, %return4
  %return6 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output7 = fadd double %output5, %return6
  %return8 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output9 = fadd double %output7, %return8
  %output10 = fsub double %output9, 2.000000e+00
  %output11 = fmul double %w2, %output10
  %return14 = call double @"cos@FF"(double %output1)
  %output15 = fmul double %output11, %return14
  %tmp = load <2 x double>, <2 x double>* %p
  %return16 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output15, i64 0)
  %output18 = extractvalue { double, <2 x double> } %return16, 1
  store <2 x double> %output18, <2 x double>* %p
  %return21 = call double @"sin@FF"(double %output1)
  %output22 = fmul double %output11, %return21
  %return24 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output18, double %output22, i64 1)
  %output26 = extractvalue { double, <2 x double> } %return24, 1
  store <2 x double> %output26, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_FAN2@UUFU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %fan2) #0 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %fan21 = load <2 x double>, <2 x double>* %fan2
  %return = call double @"getcomp@FUI"(<2 x double> %fan21, i64 1)
  %return3 = call double @"getcomp@FUI"(<2 x double> %fan21, i64 0)
  %output = fmul double %return3, %return3
  %output6 = fadd double %output, 0x3CB0000000000000
  %output7 = fmul double 0x400921FB4D12D84A, %output6
  %output9 = fmul double 5.000000e-01, %output7
  %_p10 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p10, <2 x double>* %0
  %ATAN = call double @"ATAN@FU"(<2 x double>* %0)
  %w11 = load double, double* %w
  %_p12 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p12, <2 x double>* %1
  %SQRT = call double @"SQRT@FU"(<2 x double>* %1)
  %output13 = fmul double %w11, %SQRT
  %output16 = fadd double %ATAN, %return
  %output22 = call double @"div@FF"(double %output16, double %output7)
  %cast = fptosi double %output22 to i64
  %cast23 = sitofp i64 %cast to double
  %output24 = fmul double %output7, %cast23
  %output25 = fsub double %output16, %output24
  %return28 = fcmp ogt double %output25, %output9
  %output32 = fsub double %ATAN, %output9
  %output35 = fadd double %ATAN, %output9
  %phi = select i1 %return28, double %output32, double %output35
  store double %phi, double* %2
  call void @"sincos@FFF"(double* %2, double* %sa, double* %ca)
  %sa38 = load double, double* %sa
  %output39 = fmul double %output13, %sa38
  %tmp = load <2 x double>, <2 x double>* %p
  %return40 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output39, i64 0)
  %output42 = extractvalue { double, <2 x double> } %return40, 1
  store <2 x double> %output42, <2 x double>* %p
  %ca44 = load double, double* %ca
  %output45 = fmul double %output13, %ca44
  %return47 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output42, double %output45, i64 1)
  %output49 = extractvalue { double, <2 x double> } %return47, 1
  store <2 x double> %output49, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_RINGS2@UUFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %rings2val) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %cast = call <2 x double> @"set@UF"(double %SQRT)
  %output = call <2 x double> @"div@UU"(<2 x double> %_p1, <2 x double> %cast)
  %_p3 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p3, <2 x double>* %1
  %SQRT4 = call double @"SQRT@FU"(<2 x double>* %1)
  %rings2val5 = load double, double* %rings2val
  %output7 = fmul double %rings2val5, %rings2val5
  %return = call double @"neg@FF"(double 2.000000e+00)
  %output10 = fmul double %return, %output7
  %output13 = fadd double %SQRT4, %output7
  %output15 = fmul double 2.000000e+00, %output7
  %output16 = call double @"div@FF"(double %output13, double %output15)
  %cast17 = fptosi double %output16 to i64
  %cast18 = sitofp i64 %cast17 to double
  %output19 = fmul double %output10, %cast18
  %output22 = fsub double 1.000000e+00, %output7
  %output23 = fmul double %SQRT4, %output22
  %output24 = fadd double %output19, %output23
  %output25 = fadd double %SQRT4, %output24
  %w26 = load double, double* %w
  %return28 = call double @"getcomp@FUI"(<2 x double> %output, i64 0)
  %output29 = fmul double %w26, %return28
  %output31 = fmul double %output29, %output25
  %tmp = load <2 x double>, <2 x double>* %p
  %return32 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output31, i64 0)
  %output34 = extractvalue { double, <2 x double> } %return32, 1
  store <2 x double> %output34, <2 x double>* %p
  %w35 = load double, double* %w
  %return37 = call double @"getcomp@FUI"(<2 x double> %output, i64 1)
  %output38 = fmul double %w35, %return37
  %output40 = fmul double %output38, %output25
  %return42 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output34, double %output40, i64 1)
  %output44 = extractvalue { double, <2 x double> } %return42, 1
  store <2 x double> %output44, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_RECTANGLES@UUFU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %rect) #0 {
__llvm_entry:
  %rect1 = load <2 x double>, <2 x double>* %rect
  %return = call double @"getcomp@FUI"(<2 x double> %rect1, i64 0)
  %return2 = fcmp oeq double %return, 0.000000e+00
  %w4 = load double, double* %w
  %_p5 = load <2 x double>, <2 x double>* %_p
  %return6 = call double @"getcomp@FUI"(<2 x double> %_p5, i64 0)
  br i1 %return2, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output = fmul double %w4, %return6
  %tmp = load <2 x double>, <2 x double>* %p
  %return7 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output, i64 0)
  %output9 = extractvalue { double, <2 x double> } %return7, 1
  store <2 x double> %output9, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %output15 = call double @"div@FF"(double %return6, double %return)
  %return16 = call i64 @"floor@IF"(double %output15)
  %output17 = mul i64 2, %return16
  %output18 = add i64 %output17, 1
  %rect19 = load <2 x double>, <2 x double>* %rect
  %return20 = call double @"getcomp@FUI"(<2 x double> %rect19, i64 0)
  %cast = sitofp i64 %output18 to double
  %output21 = fmul double %cast, %return20
  %_p22 = load <2 x double>, <2 x double>* %_p
  %return23 = call double @"getcomp@FUI"(<2 x double> %_p22, i64 0)
  %output24 = fsub double %output21, %return23
  %output25 = fmul double %w4, %output24
  %tmp26 = load <2 x double>, <2 x double>* %p
  %return27 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp26, double %output25, i64 0)
  %output29 = extractvalue { double, <2 x double> } %return27, 1
  store <2 x double> %output29, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  %rect30 = load <2 x double>, <2 x double>* %rect
  %return31 = call double @"getcomp@FUI"(<2 x double> %rect30, i64 1)
  %return32 = fcmp oeq double %return31, 0.000000e+00
  %w37 = load double, double* %w
  %_p38 = load <2 x double>, <2 x double>* %_p
  %return39 = call double @"getcomp@FUI"(<2 x double> %_p38, i64 1)
  br i1 %return32, label %true34, label %false35

true34:                                           ; preds = %end
  %output40 = fmul double %w37, %return39
  %tmp41 = load <2 x double>, <2 x double>* %p
  %return42 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp41, double %output40, i64 1)
  %output44 = extractvalue { double, <2 x double> } %return42, 1
  store <2 x double> %output44, <2 x double>* %p
  br label %end36

false35:                                          ; preds = %end
  %output50 = call double @"div@FF"(double %return39, double %return31)
  %return51 = call i64 @"floor@IF"(double %output50)
  %output52 = mul i64 2, %return51
  %output53 = add i64 %output52, 1
  %rect54 = load <2 x double>, <2 x double>* %rect
  %return55 = call double @"getcomp@FUI"(<2 x double> %rect54, i64 1)
  %cast56 = sitofp i64 %output53 to double
  %output57 = fmul double %cast56, %return55
  %_p58 = load <2 x double>, <2 x double>* %_p
  %return59 = call double @"getcomp@FUI"(<2 x double> %_p58, i64 1)
  %output60 = fsub double %output57, %return59
  %output61 = fmul double %w37, %output60
  %tmp62 = load <2 x double>, <2 x double>* %p
  %return63 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp62, double %output61, i64 1)
  %output65 = extractvalue { double, <2 x double> } %return63, 1
  store <2 x double> %output65, <2 x double>* %p
  br label %end36

end36:                                            ; preds = %false35, %true34
  ret void
}

; Function Attrs: nounwind
declare i64 @"floor@IF"(double) #2

; Function Attrs: alwaysinline nounwind
define private void @"V_RADIALBLUR@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %spin, double* %zoom) #0 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %w1 = load double, double* %w
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return2 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output = fadd double %return, %return2
  %return3 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output4 = fadd double %output, %return3
  %return5 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output6 = fadd double %output4, %return5
  %output7 = fsub double %output6, 2.000000e+00
  %output8 = fmul double %w1, %output7
  %_p9 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p9, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %_p10 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p10, <2 x double>* %1
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %1)
  %spin11 = load double, double* %spin
  %output13 = fmul double %spin11, %output8
  %output14 = fadd double %ATANYX, %output13
  store double %output14, double* %2
  call void @"sincos@FFF"(double* %2, double* %sa, double* %ca)
  %zoom16 = load double, double* %zoom
  %output18 = fmul double %zoom16, %output8
  %output19 = fsub double %output18, 1.000000e+00
  %ca21 = load double, double* %ca
  %output22 = fmul double %SQRT, %ca21
  %_p24 = load <2 x double>, <2 x double>* %_p
  %return25 = call double @"getcomp@FUI"(<2 x double> %_p24, i64 0)
  %output26 = fmul double %output19, %return25
  %output27 = fadd double %output22, %output26
  %tmp = load <2 x double>, <2 x double>* %p
  %return28 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output27, i64 0)
  %output30 = extractvalue { double, <2 x double> } %return28, 1
  store <2 x double> %output30, <2 x double>* %p
  %sa32 = load double, double* %sa
  %output33 = fmul double %SQRT, %sa32
  %_p35 = load <2 x double>, <2 x double>* %_p
  %return36 = call double @"getcomp@FUI"(<2 x double> %_p35, i64 1)
  %output37 = fmul double %output19, %return36
  %output38 = fadd double %output33, %output37
  %return40 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output30, double %output38, i64 1)
  %output42 = extractvalue { double, <2 x double> } %return40, 1
  store <2 x double> %output42, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_PIE@UFFFF"(<2 x double>* %p, double* %w, double* %slices, double* %thickness, double* %rotation) #0 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %slices1 = load double, double* %slices
  %output = fmul double %return, %slices1
  %cast = fptosi double %output to i64
  %cast2 = sitofp i64 %cast to double
  %rotation3 = load double, double* %rotation
  %return5 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %thickness6 = load double, double* %thickness
  %output7 = fmul double %return5, %thickness6
  %output8 = fadd double %cast2, %output7
  %output9 = fmul double 0x401921FB4D12D84A, %output8
  %slices10 = load double, double* %slices
  %output11 = call double @"div@FF"(double %output9, double %slices10)
  %output12 = fadd double %rotation3, %output11
  %w13 = load double, double* %w
  %return14 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output15 = fmul double %w13, %return14
  store double %output12, double* %0
  call void @"sincos@FFF"(double* %0, double* %sa, double* %ca)
  %ca18 = load double, double* %ca
  %output19 = fmul double %output15, %ca18
  %tmp = load <2 x double>, <2 x double>* %p
  %return20 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output19, i64 0)
  %output22 = extractvalue { double, <2 x double> } %return20, 1
  store <2 x double> %output22, <2 x double>* %p
  %sa24 = load double, double* %sa
  %output25 = fmul double %output15, %sa24
  %return27 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output22, double %output25, i64 1)
  %output29 = extractvalue { double, <2 x double> } %return27, 1
  store <2 x double> %output29, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_ARCH@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %sinr = alloca double
  %cosr = alloca double
  %0 = alloca double
  store double 0.000000e+00, double* %sinr, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosr, !vex-initializer-store !3
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %w1 = load double, double* %w
  %output = fmul double %return, %w1
  %output2 = fmul double %output, 0x400921FB4D12D84A
  store double %output2, double* %0
  call void @"sincos@FFF"(double* %0, double* %sinr, double* %cosr)
  %w4 = load double, double* %w
  %sinr5 = load double, double* %sinr
  %output6 = fmul double %w4, %sinr5
  %tmp = load <2 x double>, <2 x double>* %p
  %return7 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output6, i64 0)
  %output9 = extractvalue { double, <2 x double> } %return7, 1
  store <2 x double> %output9, <2 x double>* %p
  %w10 = load double, double* %w
  %sinr11 = load double, double* %sinr
  %output13 = fmul double %sinr11, %sinr11
  %output14 = fmul double %w10, %output13
  %cosr15 = load double, double* %cosr
  %output16 = call double @"div@FF"(double %output14, double %cosr15)
  %return18 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output9, double %output16, i64 1)
  %output20 = extractvalue { double, <2 x double> } %return18, 1
  store <2 x double> %output20, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_TANGENT@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %w1 = load double, double* %w
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %return3 = call double @"sin@FF"(double %return)
  %return5 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  %return6 = call double @"cos@FF"(double %return5)
  %output = call double @"div@FF"(double %return3, double %return6)
  %output7 = fmul double %w1, %output
  %tmp = load <2 x double>, <2 x double>* %p
  %return8 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output7, i64 0)
  %output10 = extractvalue { double, <2 x double> } %return8, 1
  store <2 x double> %output10, <2 x double>* %p
  %w11 = load double, double* %w
  %_p12 = load <2 x double>, <2 x double>* %_p
  %return13 = call double @"getcomp@FUI"(<2 x double> %_p12, i64 1)
  %return14 = call double @"tan@FF"(double %return13)
  %output15 = fmul double %w11, %return14
  %return17 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output10, double %output15, i64 1)
  %output19 = extractvalue { double, <2 x double> } %return17, 1
  store <2 x double> %output19, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SQUARE@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %w1 = load double, double* %w
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output = fsub double %return, 5.000000e-01
  %output2 = fmul double %w1, %output
  %tmp = load <2 x double>, <2 x double>* %p
  %return3 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output2, i64 0)
  %output5 = extractvalue { double, <2 x double> } %return3, 1
  store <2 x double> %output5, <2 x double>* %p
  %w6 = load double, double* %w
  %return7 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output8 = fsub double %return7, 5.000000e-01
  %output9 = fmul double %w6, %output8
  %tmp10 = load <2 x double>, <2 x double>* %p
  %return11 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp10, double %output9, i64 1)
  %output13 = extractvalue { double, <2 x double> } %return11, 1
  store <2 x double> %output13, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_RAYS@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %w1 = load double, double* %w
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output = fmul double %w1, %return
  %output2 = fmul double %output, 0x400921FB4D12D84A
  %w3 = load double, double* %w
  %_p4 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p4, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %output5 = fadd double %SUMSQ, 0x3CB0000000000000
  %output6 = call double @"div@FF"(double %w3, double %output5)
  %w7 = load double, double* %w
  %return9 = call double @"tan@FF"(double %output2)
  %output10 = fmul double %w7, %return9
  %output12 = fmul double %output10, %output6
  %_p14 = load <2 x double>, <2 x double>* %_p
  %return15 = call double @"getcomp@FUI"(<2 x double> %_p14, i64 0)
  %return16 = call double @"cos@FF"(double %return15)
  %output17 = fmul double %output12, %return16
  %tmp = load <2 x double>, <2 x double>* %p
  %return18 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output17, i64 0)
  %output20 = extractvalue { double, <2 x double> } %return18, 1
  store <2 x double> %output20, <2 x double>* %p
  %_p22 = load <2 x double>, <2 x double>* %_p
  %return23 = call double @"getcomp@FUI"(<2 x double> %_p22, i64 1)
  %return24 = call double @"sin@FF"(double %return23)
  %output25 = fmul double %output12, %return24
  %return27 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output20, double %output25, i64 1)
  %output29 = extractvalue { double, <2 x double> } %return27, 1
  store <2 x double> %output29, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_BLADE@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %sinr = alloca double
  %cosr = alloca double
  %0 = alloca <2 x double>
  %1 = alloca double
  store double 0.000000e+00, double* %sinr, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosr, !vex-initializer-store !3
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %w1 = load double, double* %w
  %output = fmul double %return, %w1
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %output3 = fmul double %output, %SQRT
  store double %output3, double* %1
  call void @"sincos@FFF"(double* %1, double* %sinr, double* %cosr)
  %w5 = load double, double* %w
  %_p6 = load <2 x double>, <2 x double>* %_p
  %return7 = call double @"getcomp@FUI"(<2 x double> %_p6, i64 0)
  %output8 = fmul double %w5, %return7
  %cosr9 = load double, double* %cosr
  %sinr10 = load double, double* %sinr
  %output11 = fadd double %cosr9, %sinr10
  %output12 = fmul double %output8, %output11
  %tmp = load <2 x double>, <2 x double>* %p
  %return13 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output12, i64 0)
  %output15 = extractvalue { double, <2 x double> } %return13, 1
  store <2 x double> %output15, <2 x double>* %p
  %w16 = load double, double* %w
  %_p17 = load <2 x double>, <2 x double>* %_p
  %return18 = call double @"getcomp@FUI"(<2 x double> %_p17, i64 0)
  %output19 = fmul double %w16, %return18
  %cosr20 = load double, double* %cosr
  %sinr21 = load double, double* %sinr
  %output22 = fsub double %cosr20, %sinr21
  %output23 = fmul double %output19, %output22
  %return25 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output15, double %output23, i64 1)
  %output27 = extractvalue { double, <2 x double> } %return25, 1
  store <2 x double> %output27, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SECANT2@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %w1 = load double, double* %w
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %output = fmul double %w1, %SQRT
  %return = call double @"cos@FF"(double %output)
  %output7 = call double @"div@FF"(double 1.000000e+00, double %return)
  %w8 = load double, double* %w
  %_p9 = load <2 x double>, <2 x double>* %_p
  %return10 = call double @"getcomp@FUI"(<2 x double> %_p9, i64 0)
  %output11 = fmul double %w8, %return10
  %tmp = load <2 x double>, <2 x double>* %p
  %return12 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output11, i64 0)
  %output14 = extractvalue { double, <2 x double> } %return12, 1
  store <2 x double> %output14, <2 x double>* %p
  %return16 = fcmp olt double %return, 0.000000e+00
  %w18 = load double, double* %w
  %output20 = fadd double %output7, 1.000000e+00
  %output21 = fmul double %w18, %output20
  %output24 = fsub double %output7, 1.000000e+00
  %output25 = fmul double %w18, %output24
  %phi = select i1 %return16, double %output21, double %output25
  %return27 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output14, double %phi, i64 1)
  %output29 = extractvalue { double, <2 x double> } %return27, 1
  store <2 x double> %output29, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_TWINTRIAN@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %sinr = alloca double
  %cosr = alloca double
  %0 = alloca <2 x double>
  %1 = alloca double
  store double 0.000000e+00, double* %sinr, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosr, !vex-initializer-store !3
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %w1 = load double, double* %w
  %output = fmul double %return, %w1
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %output3 = fmul double %output, %SQRT
  store double %output3, double* %1
  call void @"sincos@FFF"(double* %1, double* %sinr, double* %cosr)
  %sinr5 = load double, double* %sinr
  %output7 = fmul double %sinr5, %sinr5
  %return8 = call double @"log10@FF"(double %output7)
  %cosr9 = load double, double* %cosr
  %output10 = fadd double %return8, %cosr9
  %return12 = call i64 @"isfinite@IF"(double %output10)
  %return13 = call i64 @"not@II"(i64 %return12)
  %return15 = call i64 @"isnan@IF"(double %output10)
  %return16 = call i64 @"or@III"(i64 %return13, i64 %return15)
  %2 = icmp ne i64 %return16, 0
  br i1 %2, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %return17 = call double @"neg@FF"(double 3.000000e+01)
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %diff.0 = phi double [ %return17, %true ], [ %output10, %__llvm_entry ]
  %w18 = load double, double* %w
  %_p19 = load <2 x double>, <2 x double>* %_p
  %return20 = call double @"getcomp@FUI"(<2 x double> %_p19, i64 0)
  %output21 = fmul double %w18, %return20
  %output23 = fmul double %output21, %diff.0
  %tmp = load <2 x double>, <2 x double>* %p
  %return24 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output23, i64 0)
  %output26 = extractvalue { double, <2 x double> } %return24, 1
  store <2 x double> %output26, <2 x double>* %p
  %w27 = load double, double* %w
  %_p28 = load <2 x double>, <2 x double>* %_p
  %return29 = call double @"getcomp@FUI"(<2 x double> %_p28, i64 0)
  %output30 = fmul double %w27, %return29
  %sinr32 = load double, double* %sinr
  %output33 = fmul double %sinr32, 0x400921FB4D12D84A
  %output34 = fsub double %diff.0, %output33
  %output35 = fmul double %output30, %output34
  %return37 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output26, double %output35, i64 1)
  %output39 = extractvalue { double, <2 x double> } %return37, 1
  store <2 x double> %output39, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind readnone
declare double @"log10@FF"(double) #1

; Function Attrs: alwaysinline nounwind
define private void @"V_CROSS@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  %output = fmul double %return, %return
  %return5 = call double @"getcomp@FUI"(<2 x double> %_p1, i64 1)
  %output8 = fmul double %return5, %return5
  %output9 = fsub double %output, %output8
  %w10 = load double, double* %w
  %output13 = fmul double %output9, %output9
  %output14 = fadd double %output13, 0x3CB0000000000000
  %output15 = call double @"div@FF"(double 1.000000e+00, double %output14)
  %return16 = call double @"sqrt@FF"(double %output15)
  %output17 = fmul double %w10, %return16
  %output21 = fmul double %return, %output17
  %tmp = load <2 x double>, <2 x double>* %p
  %return22 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output21, i64 0)
  %output24 = extractvalue { double, <2 x double> } %return22, 1
  store <2 x double> %output24, <2 x double>* %p
  %_p25 = load <2 x double>, <2 x double>* %_p
  %return26 = call double @"getcomp@FUI"(<2 x double> %_p25, i64 1)
  %output28 = fmul double %return26, %output17
  %return30 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output24, double %output28, i64 1)
  %output32 = extractvalue { double, <2 x double> } %return30, 1
  store <2 x double> %output32, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_DISC2@UUFFFFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %rot, double* %twist, double* %disc2_timespi, double* %disc2_sinadd, double* %disc2_cosadd) #0 {
__llvm_entry:
  %sinr = alloca double
  %cosr = alloca double
  %0 = alloca double
  %1 = alloca <2 x double>
  store double 0.000000e+00, double* %sinr, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosr, !vex-initializer-store !3
  %disc2_timespi1 = load double, double* %disc2_timespi
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %return4 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  %output = fadd double %return, %return4
  %output5 = fmul double %disc2_timespi1, %output
  store double %output5, double* %0
  call void @"sincos@FFF"(double* %0, double* %sinr, double* %cosr)
  %w7 = load double, double* %w
  %_p8 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p8, <2 x double>* %1
  %ATAN = call double @"ATAN@FU"(<2 x double>* %1)
  %output9 = fmul double %w7, %ATAN
  %output10 = call double @"div@FF"(double %output9, double 0x400921FB4D12D84A)
  %sinr11 = load double, double* %sinr
  %disc2_cosadd12 = load double, double* %disc2_cosadd
  %output13 = fadd double %sinr11, %disc2_cosadd12
  %output15 = fmul double %output13, %output10
  %tmp = load <2 x double>, <2 x double>* %p
  %return16 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output15, i64 0)
  %output18 = extractvalue { double, <2 x double> } %return16, 1
  store <2 x double> %output18, <2 x double>* %p
  %cosr19 = load double, double* %cosr
  %disc2_sinadd20 = load double, double* %disc2_sinadd
  %output21 = fadd double %cosr19, %disc2_sinadd20
  %output23 = fmul double %output21, %output10
  %return25 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output18, double %output23, i64 1)
  %output27 = extractvalue { double, <2 x double> } %return25, 1
  store <2 x double> %output27, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_DISC2_L@UUFFFV"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %rot, double* %twist, <3 x double>* %precalc) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca double
  %2 = alloca double
  %3 = alloca double
  %4 = alloca double
  %5 = alloca double
  %6 = alloca double
  %precalc1 = load <3 x double>, <3 x double>* %precalc
  %return = call double @"getcomp@FVI"(<3 x double> %precalc1, i64 0)
  %return3 = call double @"getcomp@FVI"(<3 x double> %precalc1, i64 1)
  %return5 = call double @"getcomp@FVI"(<3 x double> %precalc1, i64 2)
  %_p6 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p6, <2 x double>* %0
  %w7 = load double, double* %w
  store double %w7, double* %1
  store double %return, double* %4
  store double %return3, double* %5
  store double %return5, double* %6
  call void @"V_DISC2@UUFFFFFF"(<2 x double>* %p, <2 x double>* %0, double* %1, double* %2, double* %3, double* %4, double* %5, double* %6)
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_DISC2_FF@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %rot, double* %twist) #0 {
__llvm_entry:
  %precalc = alloca <3 x double>
  %0 = alloca double
  %1 = alloca double
  %2 = alloca <2 x double>
  %3 = alloca double
  %4 = alloca double
  %5 = alloca double
  %6 = alloca double
  %7 = alloca double
  %8 = alloca double
  store <3 x double> zeroinitializer, <3 x double>* %precalc, !vex-initializer-store !3
  %rot1 = load double, double* %rot
  store double %rot1, double* %0
  %twist2 = load double, double* %twist
  store double %twist2, double* %1
  call void @"precalc_V_DISC2@VFF"(<3 x double>* %precalc, double* %0, double* %1)
  %precalc3 = load <3 x double>, <3 x double>* %precalc
  %return = call double @"getcomp@FVI"(<3 x double> %precalc3, i64 0)
  %return5 = call double @"getcomp@FVI"(<3 x double> %precalc3, i64 1)
  %return7 = call double @"getcomp@FVI"(<3 x double> %precalc3, i64 2)
  %_p8 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p8, <2 x double>* %2
  %w9 = load double, double* %w
  store double %w9, double* %3
  store double %return, double* %6
  store double %return5, double* %7
  store double %return7, double* %8
  call void @"V_DISC2@UUFFFFFF"(<2 x double>* %p, <2 x double>* %2, double* %3, double* %4, double* %5, double* %6, double* %7, double* %8)
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SUPERSHAPE@UUFFFFV"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %ss_rnd, double* %ss_m, double* %ss_holes, <3 x double>* %ss_n) #0 {
__llvm_entry:
  %st = alloca double
  %ct = alloca double
  %0 = alloca <2 x double>
  %1 = alloca double
  %2 = alloca <2 x double>
  store double 0.000000e+00, double* %st, !vex-initializer-store !3
  store double 0.000000e+00, double* %ct, !vex-initializer-store !3
  %ss_m1 = load double, double* %ss_m
  %output = call double @"div@FF"(double %ss_m1, double 4.000000e+00)
  %return = call double @"neg@FF"(double 1.000000e+00)
  %ss_n2 = load <3 x double>, <3 x double>* %ss_n
  %return3 = call double @"getcomp@FVI"(<3 x double> %ss_n2, i64 0)
  %output4 = call double @"div@FF"(double %return, double %return3)
  %_p6 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p6, <2 x double>* %0
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %0)
  %output7 = fmul double %output, %ATANYX
  %output8 = fadd double %output7, 7.853981e-01
  store double %output8, double* %1
  call void @"sincos@FFF"(double* %1, double* %st, double* %ct)
  %ct10 = load double, double* %ct
  %return11 = call double @"abs@FF"(double %ct10)
  %ss_n13 = load <3 x double>, <3 x double>* %ss_n
  %return14 = call double @"getcomp@FVI"(<3 x double> %ss_n13, i64 1)
  %return15 = call double @"pow@FFF"(double %return11, double %return14)
  %st16 = load double, double* %st
  %return17 = call double @"abs@FF"(double %st16)
  %ss_n19 = load <3 x double>, <3 x double>* %ss_n
  %return20 = call double @"getcomp@FVI"(<3 x double> %ss_n19, i64 2)
  %return21 = call double @"pow@FFF"(double %return17, double %return20)
  %_p22 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p22, <2 x double>* %2
  %SQRT23 = call double @"SQRT@FU"(<2 x double>* %2)
  %w24 = load double, double* %w
  %ss_rnd25 = load double, double* %ss_rnd
  %return26 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output27 = fmul double %ss_rnd25, %return26
  %ss_rnd28 = load double, double* %ss_rnd
  %output29 = fsub double 1.000000e+00, %ss_rnd28
  %output31 = fmul double %output29, %SQRT23
  %output32 = fadd double %output27, %output31
  %ss_holes33 = load double, double* %ss_holes
  %output34 = fsub double %output32, %ss_holes33
  %output35 = fmul double %w24, %output34
  %output38 = fadd double %return15, %return21
  %return40 = call double @"pow@FFF"(double %output38, double %output4)
  %output41 = fmul double %output35, %return40
  %output43 = call double @"div@FF"(double %output41, double %SQRT23)
  %_p45 = load <2 x double>, <2 x double>* %_p
  %return46 = call double @"getcomp@FUI"(<2 x double> %_p45, i64 0)
  %output47 = fmul double %output43, %return46
  %tmp = load <2 x double>, <2 x double>* %p
  %return48 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output47, i64 0)
  %output50 = extractvalue { double, <2 x double> } %return48, 1
  store <2 x double> %output50, <2 x double>* %p
  %_p52 = load <2 x double>, <2 x double>* %_p
  %return53 = call double @"getcomp@FUI"(<2 x double> %_p52, i64 1)
  %output54 = fmul double %output43, %return53
  %return56 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output50, double %output54, i64 1)
  %output58 = extractvalue { double, <2 x double> } %return56, 1
  store <2 x double> %output58, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_FLOWER@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %petals, double* %holes) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %0)
  %w2 = load double, double* %w
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %holes3 = load double, double* %holes
  %output = fsub double %return, %holes3
  %output4 = fmul double %w2, %output
  %petals5 = load double, double* %petals
  %output7 = fmul double %petals5, %ATANYX
  %return8 = call double @"cos@FF"(double %output7)
  %output9 = fmul double %output4, %return8
  %_p10 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p10, <2 x double>* %1
  %SQRT = call double @"SQRT@FU"(<2 x double>* %1)
  %output11 = call double @"div@FF"(double %output9, double %SQRT)
  %_p13 = load <2 x double>, <2 x double>* %_p
  %return14 = call double @"getcomp@FUI"(<2 x double> %_p13, i64 0)
  %output15 = fmul double %output11, %return14
  %tmp = load <2 x double>, <2 x double>* %p
  %return16 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output15, i64 0)
  %output18 = extractvalue { double, <2 x double> } %return16, 1
  store <2 x double> %output18, <2 x double>* %p
  %_p20 = load <2 x double>, <2 x double>* %_p
  %return21 = call double @"getcomp@FUI"(<2 x double> %_p20, i64 1)
  %output22 = fmul double %output11, %return21
  %return24 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output18, double %output22, i64 1)
  %output26 = extractvalue { double, <2 x double> } %return24, 1
  store <2 x double> %output26, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_CONIC@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %eccentricity, double* %holes) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT2 = call double @"SQRT@FU"(<2 x double>* %0)
  %_p3 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p3, i64 0)
  %output = call double @"div@FF"(double %return, double %SQRT2)
  %w5 = load double, double* %w
  %return6 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %holes7 = load double, double* %holes
  %output8 = fsub double %return6, %holes7
  %output9 = fmul double %w5, %output8
  %eccentricity10 = load double, double* %eccentricity
  %output11 = fmul double %output9, %eccentricity10
  %output14 = fmul double %eccentricity10, %output
  %output15 = fadd double 1.000000e+00, %output14
  %output16 = call double @"div@FF"(double %output11, double %output15)
  %output18 = call double @"div@FF"(double %output16, double %SQRT2)
  %_p20 = load <2 x double>, <2 x double>* %_p
  %return21 = call double @"getcomp@FUI"(<2 x double> %_p20, i64 0)
  %output22 = fmul double %output18, %return21
  %tmp = load <2 x double>, <2 x double>* %p
  %return23 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output22, i64 0)
  %output25 = extractvalue { double, <2 x double> } %return23, 1
  store <2 x double> %output25, <2 x double>* %p
  %_p27 = load <2 x double>, <2 x double>* %_p
  %return28 = call double @"getcomp@FUI"(<2 x double> %_p27, i64 1)
  %output29 = fmul double %output18, %return28
  %return31 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output25, double %output29, i64 1)
  %output33 = extractvalue { double, <2 x double> } %return31, 1
  store <2 x double> %output33, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_PARABOLA@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %height, double* %width) #0 {
__llvm_entry:
  %sr = alloca double
  %cr = alloca double
  %0 = alloca <2 x double>
  %1 = alloca double
  store double 0.000000e+00, double* %sr, !vex-initializer-store !3
  store double 0.000000e+00, double* %cr, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  store double %SQRT, double* %1
  call void @"sincos@FFF"(double* %1, double* %sr, double* %cr)
  %height3 = load double, double* %height
  %w4 = load double, double* %w
  %output = fmul double %height3, %w4
  %sr5 = load double, double* %sr
  %output6 = fmul double %output, %sr5
  %output8 = fmul double %output6, %sr5
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output9 = fmul double %output8, %return
  %tmp = load <2 x double>, <2 x double>* %p
  %return10 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output9, i64 0)
  %output12 = extractvalue { double, <2 x double> } %return10, 1
  store <2 x double> %output12, <2 x double>* %p
  %width13 = load double, double* %width
  %w14 = load double, double* %w
  %output15 = fmul double %width13, %w14
  %cr16 = load double, double* %cr
  %output17 = fmul double %output15, %cr16
  %return18 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output19 = fmul double %output17, %return18
  %tmp20 = load <2 x double>, <2 x double>* %p
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp20, double %output19, i64 1)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_BENT2@UUFU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %bent2) #0 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  %return3 = call double @"getcomp@FUI"(<2 x double> %_p1, i64 1)
  %return5 = fcmp olt double %return, 0.000000e+00
  br i1 %return5, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %bent28 = load <2 x double>, <2 x double>* %bent2
  %return9 = call double @"getcomp@FUI"(<2 x double> %bent28, i64 0)
  %output = fmul double %return, %return9
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %nx.0 = phi double [ %output, %true ], [ %return, %__llvm_entry ]
  %return11 = fcmp olt double %return3, 0.000000e+00
  br i1 %return11, label %true13, label %end14

true13:                                           ; preds = %end
  %bent216 = load <2 x double>, <2 x double>* %bent2
  %return17 = call double @"getcomp@FUI"(<2 x double> %bent216, i64 1)
  %output18 = fmul double %return3, %return17
  br label %end14

end14:                                            ; preds = %true13, %end
  %ny.0 = phi double [ %output18, %true13 ], [ %return3, %end ]
  %w19 = load double, double* %w
  %output21 = fmul double %w19, %nx.0
  %tmp = load <2 x double>, <2 x double>* %p
  %return22 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output21, i64 0)
  %output24 = extractvalue { double, <2 x double> } %return22, 1
  store <2 x double> %output24, <2 x double>* %p
  %w25 = load double, double* %w
  %output27 = fmul double %w25, %ny.0
  %return29 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output24, double %output27, i64 1)
  %output31 = extractvalue { double, <2 x double> } %return29, 1
  store <2 x double> %output31, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_BIPOLAR@UUFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %shift) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca double
  %2 = alloca double
  %3 = alloca double
  %4 = alloca double
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %output = fadd double %SUMSQ, 1.000000e+00
  %_p3 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p3, i64 0)
  %output4 = fmul double 2.000000e+00, %return
  %return5 = call double @"neg@FF"(double 0x3FF921FB4D12D84A)
  %shift6 = load double, double* %shift
  %output7 = fmul double %return5, %shift6
  %return9 = call double @"getcomp@FUI"(<2 x double> %_p3, i64 1)
  %output10 = fmul double 2.000000e+00, %return9
  %output12 = fsub double %SUMSQ, 1.000000e+00
  %return13 = call double @"atan2@FFF"(double %output10, double %output12)
  %output14 = fmul double 5.000000e-01, %return13
  %output16 = fadd double %output14, %output7
  %return18 = fcmp ogt double %output16, 0x3FF921FB4D12D84A
  br i1 %return18, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output22 = fadd double %output16, 0x3FF921FB4D12D84A
  store double %output22, double* %1
  store double 0x400921FB4D12D84A, double* %2
  %fmod = call double @"fmod@FFF"(double* %1, double* %2)
  %output23 = fadd double %return5, %fmod
  br label %end

false:                                            ; preds = %__llvm_entry
  %return26 = fcmp olt double %output16, %return5
  br i1 %return26, label %true28, label %end

end:                                              ; preds = %false, %true28, %true
  %y.0 = phi double [ %output23, %true ], [ %output33, %true28 ], [ %output16, %false ]
  %w34 = load double, double* %w
  %output35 = fmul double %w34, 2.500000e-01
  %output36 = fmul double %output35, 0x3FE45F306DC9C883
  %output39 = fadd double %output, %output4
  %output42 = fsub double %output, %output4
  %output43 = call double @"div@FF"(double %output39, double %output42)
  %return44 = call double @"log@FF"(double %output43)
  %output45 = fmul double %output36, %return44
  %tmp = load <2 x double>, <2 x double>* %p
  %return46 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output45, i64 0)
  %output48 = extractvalue { double, <2 x double> } %return46, 1
  store <2 x double> %output48, <2 x double>* %p
  %w49 = load double, double* %w
  %output50 = fmul double %w49, 0x3FE45F306DC9C883
  %output52 = fmul double %output50, %y.0
  %return54 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output48, double %output52, i64 1)
  %output56 = extractvalue { double, <2 x double> } %return54, 1
  store <2 x double> %output56, <2 x double>* %p
  ret void

true28:                                           ; preds = %false
  %output31 = fsub double 0x3FF921FB4D12D84A, %output16
  store double %output31, double* %3
  store double 0x400921FB4D12D84A, double* %4
  %fmod32 = call double @"fmod@FFF"(double* %3, double* %4)
  %output33 = fsub double 0x3FF921FB4D12D84A, %fmod32
  br label %end
}

; Function Attrs: nounwind readnone
declare double @"log@FF"(double) #1

; Function Attrs: alwaysinline nounwind
define private void @"V_BOARDERS@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  %return2 = call double @"rint@FF"(double %return)
  %return4 = call double @"getcomp@FUI"(<2 x double> %_p1, i64 1)
  %return5 = call double @"rint@FF"(double %return4)
  %output = fsub double %return, %return2
  %output12 = fsub double %return4, %return5
  %return13 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return14 = fcmp oge double %return13, 7.500000e-01
  br i1 %return14, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output17 = fmul double %output, 5.000000e-01
  %output19 = fadd double %output17, %return2
  %tmp = load <2 x double>, <2 x double>* %p
  %return20 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output19, i64 0)
  %output22 = extractvalue { double, <2 x double> } %return20, 1
  store <2 x double> %output22, <2 x double>* %p
  %output24 = fmul double %output12, 5.000000e-01
  %output26 = fadd double %output24, %return5
  %return28 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output22, double %output26, i64 1)
  %output30 = extractvalue { double, <2 x double> } %return28, 1
  store <2 x double> %output30, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %return32 = call double @"abs@FF"(double %output)
  %return34 = call double @"abs@FF"(double %output12)
  %return35 = fcmp oge double %return32, %return34
  br i1 %return35, label %true37, label %false38

end:                                              ; preds = %true101, %false102, %true43, %false44, %true
  ret void

true37:                                           ; preds = %false
  %return41 = fcmp oge double %output, 0.000000e+00
  %w46 = load double, double* %w
  %output48 = fmul double %output, 5.000000e-01
  %output50 = fadd double %output48, %return2
  br i1 %return41, label %true43, label %false44

false38:                                          ; preds = %false
  %return99 = fcmp oge double %output12, 0.000000e+00
  %w104 = load double, double* %w
  %output106 = fmul double %output12, 5.000000e-01
  %output108 = fadd double %output106, %return5
  br i1 %return99, label %true101, label %false102

true43:                                           ; preds = %true37
  %output51 = fadd double %output50, 2.500000e-01
  %output52 = fmul double %w46, %output51
  %tmp53 = load <2 x double>, <2 x double>* %p
  %return54 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp53, double %output52, i64 0)
  %output56 = extractvalue { double, <2 x double> } %return54, 1
  store <2 x double> %output56, <2 x double>* %p
  %w57 = load double, double* %w
  %output59 = fmul double %output12, 5.000000e-01
  %output61 = fadd double %output59, %return5
  %output63 = fmul double 2.500000e-01, %output12
  %output65 = call double @"div@FF"(double %output63, double %output)
  %output66 = fadd double %output61, %output65
  %output67 = fmul double %w57, %output66
  %return69 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output56, double %output67, i64 1)
  %output71 = extractvalue { double, <2 x double> } %return69, 1
  store <2 x double> %output71, <2 x double>* %p
  br label %end

false44:                                          ; preds = %true37
  %output77 = fsub double %output50, 2.500000e-01
  %output78 = fmul double %w46, %output77
  %tmp79 = load <2 x double>, <2 x double>* %p
  %return80 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp79, double %output78, i64 0)
  %output82 = extractvalue { double, <2 x double> } %return80, 1
  store <2 x double> %output82, <2 x double>* %p
  %w83 = load double, double* %w
  %output85 = fmul double %output12, 5.000000e-01
  %output87 = fadd double %output85, %return5
  %output89 = fmul double 2.500000e-01, %output12
  %output91 = call double @"div@FF"(double %output89, double %output)
  %output92 = fsub double %output87, %output91
  %output93 = fmul double %w83, %output92
  %return95 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output82, double %output93, i64 1)
  %output97 = extractvalue { double, <2 x double> } %return95, 1
  store <2 x double> %output97, <2 x double>* %p
  br label %end

true101:                                          ; preds = %false38
  %output109 = fadd double %output108, 2.500000e-01
  %output110 = fmul double %w104, %output109
  %tmp111 = load <2 x double>, <2 x double>* %p
  %return112 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp111, double %output110, i64 1)
  %output114 = extractvalue { double, <2 x double> } %return112, 1
  store <2 x double> %output114, <2 x double>* %p
  %w115 = load double, double* %w
  %output117 = fmul double %output, 5.000000e-01
  %output119 = fadd double %output117, %return2
  %output122 = call double @"div@FF"(double %output, double %output12)
  %output123 = fmul double %output122, 2.500000e-01
  %output124 = fadd double %output119, %output123
  %output125 = fmul double %w115, %output124
  %return127 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output114, double %output125, i64 0)
  %output129 = extractvalue { double, <2 x double> } %return127, 1
  store <2 x double> %output129, <2 x double>* %p
  br label %end

false102:                                         ; preds = %false38
  %output135 = fsub double %output108, 2.500000e-01
  %output136 = fmul double %w104, %output135
  %tmp137 = load <2 x double>, <2 x double>* %p
  %return138 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp137, double %output136, i64 1)
  %output140 = extractvalue { double, <2 x double> } %return138, 1
  store <2 x double> %output140, <2 x double>* %p
  %w141 = load double, double* %w
  %output143 = fmul double %output, 5.000000e-01
  %output145 = fadd double %output143, %return2
  %output148 = call double @"div@FF"(double %output, double %output12)
  %output149 = fmul double %output148, 2.500000e-01
  %output150 = fsub double %output145, %output149
  %output151 = fmul double %w141, %output150
  %return153 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output140, double %output151, i64 0)
  %output155 = extractvalue { double, <2 x double> } %return153, 1
  store <2 x double> %output155, <2 x double>* %p
  br label %end
}

; Function Attrs: nounwind readnone
declare double @"rint@FF"(double) #1

; Function Attrs: alwaysinline nounwind
define private void @"V_BUTTERFLY@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %w1 = load double, double* %w
  %output = fmul double %w1, 0x3FF4D8D7A58FA311
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  %output3 = fmul double %return, 2.000000e+00
  %return8 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %output9 = fmul double %return, %return8
  %return10 = call double @"abs@FF"(double %output9)
  %_p11 = load <2 x double>, <2 x double>* %_p
  %return12 = call double @"getcomp@FUI"(<2 x double> %_p11, i64 0)
  %output15 = fmul double %return12, %return12
  %output16 = fadd double 0x3CB0000000000000, %output15
  %output19 = fmul double %output3, %output3
  %output20 = fadd double %output16, %output19
  %output21 = call double @"div@FF"(double %return10, double %output20)
  %return22 = call double @"sqrt@FF"(double %output21)
  %output23 = fmul double %output, %return22
  %output27 = fmul double %output23, %return12
  %tmp = load <2 x double>, <2 x double>* %p
  %return28 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output27, i64 0)
  %output30 = extractvalue { double, <2 x double> } %return28, 1
  store <2 x double> %output30, <2 x double>* %p
  %output33 = fmul double %output23, %output3
  %return35 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output30, double %output33, i64 1)
  %output37 = extractvalue { double, <2 x double> } %return35, 1
  store <2 x double> %output37, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_CELL@UUFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %size) #0 {
__llvm_entry:
  %size1 = load double, double* %size
  %output = call double @"div@FF"(double 1.000000e+00, double %size1)
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %output4 = fmul double %return, %output
  %return5 = call double @"floor@FF"(double %output4)
  %return7 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  %output9 = fmul double %return7, %output
  %return10 = call double @"floor@FF"(double %output9)
  %output15 = fmul double %return5, %size1
  %output16 = fsub double %return, %output15
  %output21 = fmul double %return10, %size1
  %output22 = fsub double %return7, %output21
  %return24 = fcmp oge double %return10, 0.000000e+00
  %return27 = fcmp oge double %return5, 0.000000e+00
  br i1 %return24, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output33 = fmul double %return10, 2.000000e+00
  br i1 %return27, label %true29, label %false30

false:                                            ; preds = %__llvm_entry
  %output49 = fmul double 2.000000e+00, %return10
  %output50 = fadd double %output49, 1.000000e+00
  %return51 = call double @"neg@FF"(double %output50)
  br i1 %return27, label %true45, label %false46

end:                                              ; preds = %true45, %false46, %true29, %false30
  %y.0 = phi double [ %output33, %true29 ], [ %output33, %false30 ], [ %return51, %true45 ], [ %return51, %false46 ]
  %x.0 = phi double [ %output35, %true29 ], [ %return41, %false30 ], [ %output53, %true45 ], [ %return61, %false46 ]
  %size64 = load double, double* %size
  %output65 = fmul double %x.0, %size64
  %output66 = fadd double %output16, %output65
  %tmp = load <2 x double>, <2 x double>* %p
  %return67 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output66, i64 0)
  %output69 = extractvalue { double, <2 x double> } %return67, 1
  store <2 x double> %output69, <2 x double>* %p
  %size72 = load double, double* %size
  %output73 = fmul double %y.0, %size72
  %output74 = fadd double %output22, %output73
  %return75 = call double @"neg@FF"(double %output74)
  %return77 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output69, double %return75, i64 1)
  %output79 = extractvalue { double, <2 x double> } %return77, 1
  store <2 x double> %output79, <2 x double>* %p
  ret void

true29:                                           ; preds = %true
  %output35 = fmul double %return5, 2.000000e+00
  br label %end

false30:                                          ; preds = %true
  %output39 = fmul double 2.000000e+00, %return5
  %output40 = fadd double %output39, 1.000000e+00
  %return41 = call double @"neg@FF"(double %output40)
  br label %end

true45:                                           ; preds = %false
  %output53 = fmul double %return5, 2.000000e+00
  br label %end

false46:                                          ; preds = %false
  %output59 = fmul double 2.000000e+00, %return5
  %output60 = fadd double %output59, 1.000000e+00
  %return61 = call double @"neg@FF"(double %output60)
  br label %end
}

; Function Attrs: alwaysinline nounwind
define private void @"V_CPOW@UUFFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %power, double* %pow_r, double* %pow_i) #0 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %0)
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %1
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %1)
  %return = call double @"log@FF"(double %SUMSQ)
  %output = fmul double 5.000000e-01, %return
  %power3 = load double, double* %power
  %output4 = call double @"div@FF"(double 0x401921FB4D12D84A, double %power3)
  %pow_r5 = load double, double* %pow_r
  %output7 = call double @"div@FF"(double %pow_r5, double %power3)
  %pow_i8 = load double, double* %pow_i
  %output10 = call double @"div@FF"(double %pow_i8, double %power3)
  %output13 = fmul double %output7, %ATANYX
  %output16 = fmul double %output10, %output
  %output17 = fadd double %output13, %output16
  %return20 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output21 = fmul double %power3, %return20
  %return22 = call double @"floor@FF"(double %output21)
  %output23 = fmul double %output4, %return22
  %output24 = fadd double %output17, %output23
  %w25 = load double, double* %w
  %output28 = fmul double %output7, %output
  %output31 = fmul double %output10, %ATANYX
  %output32 = fsub double %output28, %output31
  %return33 = call double @"exp@FF"(double %output32)
  %output34 = fmul double %w25, %return33
  store double %output24, double* %2
  call void @"sincos@FFF"(double* %2, double* %sa, double* %ca)
  %ca37 = load double, double* %ca
  %output38 = fmul double %output34, %ca37
  %tmp = load <2 x double>, <2 x double>* %p
  %return39 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output38, i64 0)
  %output41 = extractvalue { double, <2 x double> } %return39, 1
  store <2 x double> %output41, <2 x double>* %p
  %sa43 = load double, double* %sa
  %output44 = fmul double %output34, %sa43
  %return46 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output41, double %output44, i64 1)
  %output48 = extractvalue { double, <2 x double> } %return46, 1
  store <2 x double> %output48, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_EDISC@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %snv = alloca double
  %csv = alloca double
  %0 = alloca <2 x double>
  %1 = alloca double
  %2 = alloca double
  store double 0.000000e+00, double* %snv, !vex-initializer-store !3
  store double 0.000000e+00, double* %csv, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %output = fadd double %SUMSQ, 1.000000e+00
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %output3 = fmul double 2.000000e+00, %return
  %output6 = fadd double %output, %output3
  %return7 = call double @"sqrt@FF"(double %output6)
  %output10 = fsub double %output, %output3
  %return11 = call double @"sqrt@FF"(double %output10)
  %output14 = fadd double %return7, %return11
  %output15 = fmul double %output14, 5.000000e-01
  store double %output15, double* %1
  %Zeps = call double @"Zeps@FF"(double* %1)
  %output18 = fsub double %Zeps, 1.000000e+00
  %return19 = call double @"sqrt@FF"(double %output18)
  %output20 = fadd double %Zeps, %return19
  %return21 = call double @"log@FF"(double %output20)
  %_p22 = load <2 x double>, <2 x double>* %_p
  %return23 = call double @"getcomp@FUI"(<2 x double> %_p22, i64 0)
  %output25 = call double @"div@FF"(double %return23, double %Zeps)
  %return26 = call double @"acos@FF"(double %output25)
  %return27 = call double @"neg@FF"(double %return26)
  %w28 = load double, double* %w
  %output29 = call double @"div@FF"(double %w28, double 0x402724046ECF9681)
  store double %return21, double* %2
  call void @"sincos@FFF"(double* %2, double* %snv, double* %csv)
  %return32 = call double @"sinh@FF"(double %return27)
  %return34 = call double @"cosh@FF"(double %return27)
  %_p35 = load <2 x double>, <2 x double>* %_p
  %return36 = call double @"getcomp@FUI"(<2 x double> %_p35, i64 1)
  %return37 = fcmp ogt double %return36, 0.000000e+00
  br i1 %return37, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %snv39 = load double, double* %snv
  %return40 = call double @"neg@FF"(double %snv39)
  store double %return40, double* %snv
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %output43 = fmul double %output29, %return34
  %csv44 = load double, double* %csv
  %output45 = fmul double %output43, %csv44
  %tmp46 = load <2 x double>, <2 x double>* %p
  %return47 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp46, double %output45, i64 0)
  %output49 = extractvalue { double, <2 x double> } %return47, 1
  store <2 x double> %output49, <2 x double>* %p
  %output52 = fmul double %output29, %return32
  %snv53 = load double, double* %snv
  %output54 = fmul double %output52, %snv53
  %return56 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output49, double %output54, i64 1)
  %output58 = extractvalue { double, <2 x double> } %return56, 1
  store <2 x double> %output58, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind readnone
declare double @"acos@FF"(double) #1

; Function Attrs: alwaysinline nounwind
define private void @"V_ELLIPTIC@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %output = fadd double %SUMSQ, 1.000000e+00
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %output3 = fmul double 2.000000e+00, %return
  %output6 = fadd double %output, %output3
  %return7 = call double @"sqrt@FF"(double %output6)
  %output10 = fsub double %output, %output3
  %return11 = call double @"sqrt@FF"(double %output10)
  %output12 = fadd double %return7, %return11
  %output13 = fmul double 5.000000e-01, %output12
  %output17 = call double @"div@FF"(double %return, double %output13)
  %output20 = fmul double %output17, %output17
  %output21 = fsub double 1.000000e+00, %output20
  %output23 = fsub double %output13, 1.000000e+00
  %w24 = load double, double* %w
  %output25 = call double @"div@FF"(double %w24, double 0x3FF921FB4D12D84A)
  %return27 = fcmp olt double %output21, 0.000000e+00
  br i1 %return27, label %end, label %false

false:                                            ; preds = %__llvm_entry
  %return30 = call double @"sqrt@FF"(double %output21)
  br label %end

end:                                              ; preds = %__llvm_entry, %false
  %phi = phi double [ %return30, %false ], [ 0.000000e+00, %__llvm_entry ]
  %return32 = fcmp olt double %output23, 0.000000e+00
  br i1 %return32, label %end36, label %false35

false35:                                          ; preds = %end
  %return38 = call double @"sqrt@FF"(double %output23)
  br label %end36

end36:                                            ; preds = %end, %false35
  %phi39 = phi double [ %return38, %false35 ], [ 0.000000e+00, %end ]
  %return43 = call double @"atan2@FFF"(double %output17, double %phi)
  %output44 = fmul double %output25, %return43
  %tmp45 = load <2 x double>, <2 x double>* %p
  %return46 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp45, double %output44, i64 0)
  %output48 = extractvalue { double, <2 x double> } %return46, 1
  store <2 x double> %output48, <2 x double>* %p
  %_p49 = load <2 x double>, <2 x double>* %_p
  %return50 = call double @"getcomp@FUI"(<2 x double> %_p49, i64 1)
  %return51 = fcmp ogt double %return50, 0.000000e+00
  %output59 = fadd double %output13, %phi39
  %return60 = call double @"log@FF"(double %output59)
  br i1 %return51, label %true53, label %false54

true53:                                           ; preds = %end36
  %output61 = fmul double %output25, %return60
  br label %end55

false54:                                          ; preds = %end36
  %return67 = call double @"neg@FF"(double %return60)
  %output68 = fmul double %output25, %return67
  br label %end55

end55:                                            ; preds = %false54, %true53
  %phi69 = phi double [ %output61, %true53 ], [ %output68, %false54 ]
  %tmp70 = load <2 x double>, <2 x double>* %p
  %return71 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp70, double %phi69, i64 1)
  %output73 = extractvalue { double, <2 x double> } %return71, 1
  store <2 x double> %output73, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_NOISE@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %sinr = alloca double
  %cosr = alloca double
  %0 = alloca double
  store double 0.000000e+00, double* %sinr, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosr, !vex-initializer-store !3
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output = fmul double %return, 2.000000e+00
  %output1 = fmul double %output, 0x400921FB4D12D84A
  store double %output1, double* %0
  call void @"sincos@FFF"(double* %0, double* %sinr, double* %cosr)
  %w3 = load double, double* %w
  %return4 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output5 = fmul double %w3, %return4
  %_p6 = load <2 x double>, <2 x double>* %_p
  %return7 = call double @"getcomp@FUI"(<2 x double> %_p6, i64 0)
  %output9 = fmul double %return7, %output5
  %cosr10 = load double, double* %cosr
  %output11 = fmul double %output9, %cosr10
  %tmp = load <2 x double>, <2 x double>* %p
  %return12 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output11, i64 0)
  %output14 = extractvalue { double, <2 x double> } %return12, 1
  store <2 x double> %output14, <2 x double>* %p
  %_p15 = load <2 x double>, <2 x double>* %_p
  %return16 = call double @"getcomp@FUI"(<2 x double> %_p15, i64 1)
  %output18 = fmul double %return16, %output5
  %sinr19 = load double, double* %sinr
  %output20 = fmul double %output18, %sinr19
  %return22 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output14, double %output20, i64 1)
  %output24 = extractvalue { double, <2 x double> } %return22, 1
  store <2 x double> %output24, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_ESCHER@UUFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %beta) #0 {
__llvm_entry:
  %seb = alloca double
  %ceb = alloca double
  %sn = alloca double
  %cn = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  %3 = alloca double
  store double 0.000000e+00, double* %seb, !vex-initializer-store !3
  store double 0.000000e+00, double* %ceb, !vex-initializer-store !3
  store double 0.000000e+00, double* %sn, !vex-initializer-store !3
  store double 0.000000e+00, double* %cn, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %0)
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %1
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %1)
  %return = call double @"log@FF"(double %SUMSQ)
  %output = fmul double 5.000000e-01, %return
  %beta3 = load double, double* %beta
  store double %beta3, double* %2
  call void @"sincos@FFF"(double* %2, double* %seb, double* %ceb)
  %ceb4 = load double, double* %ceb
  %output5 = fadd double 1.000000e+00, %ceb4
  %output6 = fmul double 5.000000e-01, %output5
  %seb7 = load double, double* %seb
  %output8 = fmul double 5.000000e-01, %seb7
  %w9 = load double, double* %w
  %output12 = fmul double %output6, %output
  %output15 = fmul double %output8, %ATANYX
  %output16 = fsub double %output12, %output15
  %return17 = call double @"exp@FF"(double %output16)
  %output18 = fmul double %w9, %return17
  %output21 = fmul double %output6, %ATANYX
  %output24 = fmul double %output8, %output
  %output25 = fadd double %output21, %output24
  store double %output25, double* %3
  call void @"sincos@FFF"(double* %3, double* %sn, double* %cn)
  %cn28 = load double, double* %cn
  %output29 = fmul double %output18, %cn28
  %tmp = load <2 x double>, <2 x double>* %p
  %return30 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output29, i64 0)
  %output32 = extractvalue { double, <2 x double> } %return30, 1
  store <2 x double> %output32, <2 x double>* %p
  %sn34 = load double, double* %sn
  %output35 = fmul double %output18, %sn34
  %return37 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output32, double %output35, i64 1)
  %output39 = extractvalue { double, <2 x double> } %return37, 1
  store <2 x double> %output39, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_FOCI@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %sn = alloca double
  %cn = alloca double
  %0 = alloca double
  store double 0.000000e+00, double* %sn, !vex-initializer-store !3
  store double 0.000000e+00, double* %cn, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  %return2 = call double @"exp@FF"(double %return)
  %output = fmul double %return2, 5.000000e-01
  %output4 = call double @"div@FF"(double 2.500000e-01, double %output)
  %return6 = call double @"getcomp@FUI"(<2 x double> %_p1, i64 1)
  store double %return6, double* %0
  call void @"sincos@FFF"(double* %0, double* %sn, double* %cn)
  %w7 = load double, double* %w
  %output10 = fadd double %output, %output4
  %cn11 = load double, double* %cn
  %output12 = fsub double %output10, %cn11
  %output13 = call double @"div@FF"(double %w7, double %output12)
  %output17 = fsub double %output, %output4
  %output18 = fmul double %output13, %output17
  %tmp19 = load <2 x double>, <2 x double>* %p
  %return20 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp19, double %output18, i64 0)
  %output22 = extractvalue { double, <2 x double> } %return20, 1
  store <2 x double> %output22, <2 x double>* %p
  %sn24 = load double, double* %sn
  %output25 = fmul double %output13, %sn24
  %return27 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output22, double %output25, i64 1)
  %output29 = extractvalue { double, <2 x double> } %return27, 1
  store <2 x double> %output29, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_LAZYSUSAN@UUFFFFU"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %spin, double* %twist, double* %space, <2 x double>* %lazy) #0 {
__llvm_entry:
  %sina = alloca double
  %cosa = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sina, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosa, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  %lazy2 = load <2 x double>, <2 x double>* %lazy
  %return3 = call double @"getcomp@FUI"(<2 x double> %lazy2, i64 0)
  %output = fsub double %return, %return3
  %return5 = call double @"getcomp@FUI"(<2 x double> %_p1, i64 1)
  %return7 = call double @"getcomp@FUI"(<2 x double> %lazy2, i64 1)
  %output8 = fadd double %return5, %return7
  %return11 = call <2 x double> @"set@UFF"(double %output, double %output8)
  store <2 x double> %return11, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %w13 = load double, double* %w
  %return14 = fcmp olt double %SQRT, %w13
  br i1 %return14, label %true, label %false

true:                                             ; preds = %__llvm_entry
  store <2 x double> %return11, <2 x double>* %1
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %1)
  %spin19 = load double, double* %spin
  %output20 = fadd double %ATANYX, %spin19
  %twist21 = load double, double* %twist
  %w22 = load double, double* %w
  %output24 = fsub double %w22, %SQRT
  %output25 = fmul double %twist21, %output24
  %output26 = fadd double %output20, %output25
  store double %output26, double* %2
  call void @"sincos@FFF"(double* %2, double* %sina, double* %cosa)
  %w28 = load double, double* %w
  %output30 = fmul double %w28, %SQRT
  %cosa32 = load double, double* %cosa
  %output33 = fmul double %output30, %cosa32
  %lazy34 = load <2 x double>, <2 x double>* %lazy
  %return35 = call double @"getcomp@FUI"(<2 x double> %lazy34, i64 0)
  %output36 = fadd double %output33, %return35
  %tmp = load <2 x double>, <2 x double>* %p
  %return37 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output36, i64 0)
  %output39 = extractvalue { double, <2 x double> } %return37, 1
  store <2 x double> %output39, <2 x double>* %p
  %sina41 = load double, double* %sina
  %output42 = fmul double %output30, %sina41
  %lazy43 = load <2 x double>, <2 x double>* %lazy
  %return44 = call double @"getcomp@FUI"(<2 x double> %lazy43, i64 1)
  %output45 = fsub double %output42, %return44
  %return47 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output39, double %output45, i64 1)
  %output49 = extractvalue { double, <2 x double> } %return47, 1
  store <2 x double> %output49, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %space51 = load double, double* %space
  %output53 = call double @"div@FF"(double %space51, double %SQRT)
  %output54 = fadd double 1.000000e+00, %output53
  %output55 = fmul double %w13, %output54
  %output58 = fmul double %output55, %output
  %lazy59 = load <2 x double>, <2 x double>* %lazy
  %return60 = call double @"getcomp@FUI"(<2 x double> %lazy59, i64 0)
  %output61 = fadd double %output58, %return60
  %tmp62 = load <2 x double>, <2 x double>* %p
  %return63 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp62, double %output61, i64 0)
  %output65 = extractvalue { double, <2 x double> } %return63, 1
  store <2 x double> %output65, <2 x double>* %p
  %output68 = fmul double %output55, %output8
  %lazy69 = load <2 x double>, <2 x double>* %lazy
  %return70 = call double @"getcomp@FUI"(<2 x double> %lazy69, i64 1)
  %output71 = fsub double %output68, %return70
  %return73 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output65, double %output71, i64 1)
  %output75 = extractvalue { double, <2 x double> } %return73, 1
  store <2 x double> %output75, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_LOONIE@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %w3 = load double, double* %w
  %output = fmul double %w3, %w3
  %return = fcmp olt double %SUMSQ, %output
  br i1 %return, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output11 = call double @"div@FF"(double %output, double %SUMSQ)
  %output12 = fsub double %output11, 1.000000e+00
  %return13 = call double @"sqrt@FF"(double %output12)
  %output14 = fmul double %w3, %return13
  %_p16 = load <2 x double>, <2 x double>* %_p
  %return17 = call double @"getcomp@FUI"(<2 x double> %_p16, i64 0)
  %output18 = fmul double %output14, %return17
  %tmp = load <2 x double>, <2 x double>* %p
  %return19 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output18, i64 0)
  %output21 = extractvalue { double, <2 x double> } %return19, 1
  store <2 x double> %output21, <2 x double>* %p
  %_p23 = load <2 x double>, <2 x double>* %_p
  %return24 = call double @"getcomp@FUI"(<2 x double> %_p23, i64 1)
  %output25 = fmul double %output14, %return24
  %return27 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output21, double %output25, i64 1)
  %output29 = extractvalue { double, <2 x double> } %return27, 1
  store <2 x double> %output29, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %_p31 = load <2 x double>, <2 x double>* %_p
  %return32 = call double @"getcomp@FUI"(<2 x double> %_p31, i64 0)
  %output33 = fmul double %w3, %return32
  %tmp34 = load <2 x double>, <2 x double>* %p
  %return35 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp34, double %output33, i64 0)
  %output37 = extractvalue { double, <2 x double> } %return35, 1
  store <2 x double> %output37, <2 x double>* %p
  %w38 = load double, double* %w
  %_p39 = load <2 x double>, <2 x double>* %_p
  %return40 = call double @"getcomp@FUI"(<2 x double> %_p39, i64 1)
  %output41 = fmul double %w38, %return40
  %return43 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output37, double %output41, i64 1)
  %output45 = extractvalue { double, <2 x double> } %return43, 1
  store <2 x double> %output45, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_PREBLUR@UF"(<2 x double>* %p, double* %w) #0 {
__llvm_entry:
  %sinA = alloca double
  %cosA = alloca double
  %0 = alloca double
  store double 0.000000e+00, double* %sinA, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosA, !vex-initializer-store !3
  %w1 = load double, double* %w
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return2 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output = fadd double %return, %return2
  %return3 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output4 = fadd double %output, %return3
  %return5 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output6 = fadd double %output4, %return5
  %output7 = fsub double %output6, 2.000000e+00
  %output8 = fmul double %w1, %output7
  %return9 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output10 = fmul double %return9, 2.000000e+00
  %output11 = fmul double %output10, 0x400921FB4D12D84A
  store double %output11, double* %0
  call void @"sincos@FFF"(double* %0, double* %sinA, double* %cosA)
  %p13 = load <2 x double>, <2 x double>* %p
  %return14 = call double @"getcomp@FUI"(<2 x double> %p13, i64 0)
  %cosA16 = load double, double* %cosA
  %output17 = fmul double %output8, %cosA16
  %output18 = fadd double %return14, %output17
  %return19 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %p13, double %output18, i64 0)
  %output21 = extractvalue { double, <2 x double> } %return19, 1
  store <2 x double> %output21, <2 x double>* %p
  %return23 = call double @"getcomp@FUI"(<2 x double> %output21, i64 1)
  %sinA25 = load double, double* %sinA
  %output26 = fmul double %output8, %sinA25
  %output27 = fadd double %return23, %output26
  %return29 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output21, double %output27, i64 1)
  %output31 = extractvalue { double, <2 x double> } %return29, 1
  store <2 x double> %output31, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_MODULUS@UUFU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %m) #0 {
__llvm_entry:
  %0 = alloca double
  %1 = alloca double
  %2 = alloca double
  %3 = alloca double
  %4 = alloca double
  %5 = alloca double
  %6 = alloca double
  %7 = alloca double
  %m1 = load <2 x double>, <2 x double>* %m
  %return = call double @"getcomp@FUI"(<2 x double> %m1, i64 0)
  %output = fmul double 2.000000e+00, %return
  %return3 = call double @"getcomp@FUI"(<2 x double> %m1, i64 1)
  %output4 = fmul double 2.000000e+00, %return3
  %_p5 = load <2 x double>, <2 x double>* %_p
  %return6 = call double @"getcomp@FUI"(<2 x double> %_p5, i64 0)
  %return9 = fcmp ogt double %return6, %return
  br i1 %return9, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %w11 = load double, double* %w
  %return14 = call double @"neg@FF"(double %return)
  %output19 = fadd double %return6, %return
  store double %output19, double* %0
  store double %output, double* %1
  %fmod = call double @"fmod@FFF"(double* %0, double* %1)
  %output21 = fadd double %return14, %fmod
  %output22 = fmul double %w11, %output21
  %tmp = load <2 x double>, <2 x double>* %p
  %return23 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output22, i64 0)
  %output25 = extractvalue { double, <2 x double> } %return23, 1
  store <2 x double> %output25, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %return30 = call double @"neg@FF"(double %return)
  %return31 = fcmp olt double %return6, %return30
  %w36 = load double, double* %w
  br i1 %return31, label %true33, label %false34

end:                                              ; preds = %true33, %false34, %true
  %_p60 = load <2 x double>, <2 x double>* %_p
  %return61 = call double @"getcomp@FUI"(<2 x double> %_p60, i64 1)
  %m62 = load <2 x double>, <2 x double>* %m
  %return63 = call double @"getcomp@FUI"(<2 x double> %m62, i64 1)
  %return64 = fcmp ogt double %return61, %return63
  br i1 %return64, label %true66, label %false67

true33:                                           ; preds = %false
  %output43 = fsub double %return, %return6
  store double %output43, double* %2
  store double %output, double* %3
  %fmod45 = call double @"fmod@FFF"(double* %2, double* %3)
  %output46 = fsub double %return, %fmod45
  %output47 = fmul double %w36, %output46
  %tmp48 = load <2 x double>, <2 x double>* %p
  %return49 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp48, double %output47, i64 0)
  %output51 = extractvalue { double, <2 x double> } %return49, 1
  store <2 x double> %output51, <2 x double>* %p
  br label %end

false34:                                          ; preds = %false
  %output55 = fmul double %w36, %return6
  %tmp56 = load <2 x double>, <2 x double>* %p
  %return57 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp56, double %output55, i64 0)
  %output59 = extractvalue { double, <2 x double> } %return57, 1
  store <2 x double> %output59, <2 x double>* %p
  br label %end

true66:                                           ; preds = %end
  %w69 = load double, double* %w
  %return72 = call double @"neg@FF"(double %return63)
  %output77 = fadd double %return61, %return63
  store double %output77, double* %4
  store double %output4, double* %5
  %fmod79 = call double @"fmod@FFF"(double* %4, double* %5)
  %output80 = fadd double %return72, %fmod79
  %output81 = fmul double %w69, %output80
  %tmp82 = load <2 x double>, <2 x double>* %p
  %return83 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp82, double %output81, i64 1)
  %output85 = extractvalue { double, <2 x double> } %return83, 1
  store <2 x double> %output85, <2 x double>* %p
  br label %end68

false67:                                          ; preds = %end
  %return90 = call double @"neg@FF"(double %return63)
  %return91 = fcmp olt double %return61, %return90
  %w96 = load double, double* %w
  br i1 %return91, label %true93, label %false94

end68:                                            ; preds = %true93, %false94, %true66
  ret void

true93:                                           ; preds = %false67
  %output103 = fsub double %return63, %return61
  store double %output103, double* %6
  store double %output4, double* %7
  %fmod105 = call double @"fmod@FFF"(double* %6, double* %7)
  %output106 = fsub double %return63, %fmod105
  %output107 = fmul double %w96, %output106
  %tmp108 = load <2 x double>, <2 x double>* %p
  %return109 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp108, double %output107, i64 1)
  %output111 = extractvalue { double, <2 x double> } %return109, 1
  store <2 x double> %output111, <2 x double>* %p
  br label %end68

false94:                                          ; preds = %false67
  %output115 = fmul double %w96, %return61
  %tmp116 = load <2 x double>, <2 x double>* %p
  %return117 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp116, double %output115, i64 1)
  %output119 = extractvalue { double, <2 x double> } %return117, 1
  store <2 x double> %output119, <2 x double>* %p
  br label %end68
}

; Function Attrs: alwaysinline nounwind
define private void @"V_OSCOPE@UUFFFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %freq, double* %amp, double* %damp, double* %sep) #0 {
__llvm_entry:
  %freq1 = load double, double* %freq
  %output = fmul double 0x401921FB4D12D84A, %freq1
  %damp2 = load double, double* %damp
  %return = fcmp oeq double %damp2, 0.000000e+00
  %amp4 = load double, double* %amp
  br i1 %return, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %_p6 = load <2 x double>, <2 x double>* %_p
  %return7 = call double @"getcomp@FUI"(<2 x double> %_p6, i64 0)
  %output8 = fmul double %output, %return7
  %return9 = call double @"cos@FF"(double %output8)
  %output10 = fmul double %amp4, %return9
  %sep11 = load double, double* %sep
  %output12 = fadd double %output10, %sep11
  br label %end

false:                                            ; preds = %__llvm_entry
  %_p14 = load <2 x double>, <2 x double>* %_p
  %return15 = call double @"getcomp@FUI"(<2 x double> %_p14, i64 0)
  %return16 = call double @"abs@FF"(double %return15)
  %return17 = call double @"neg@FF"(double %return16)
  %damp18 = load double, double* %damp
  %output19 = fmul double %return17, %damp18
  %return20 = call double @"exp@FF"(double %output19)
  %output21 = fmul double %amp4, %return20
  %_p23 = load <2 x double>, <2 x double>* %_p
  %return24 = call double @"getcomp@FUI"(<2 x double> %_p23, i64 0)
  %output25 = fmul double %output, %return24
  %return26 = call double @"cos@FF"(double %output25)
  %output27 = fmul double %output21, %return26
  %sep28 = load double, double* %sep
  %output29 = fadd double %output27, %sep28
  br label %end

end:                                              ; preds = %false, %true
  %tt.0 = phi double [ %output12, %true ], [ %output29, %false ]
  %_p30 = load <2 x double>, <2 x double>* %_p
  %return31 = call double @"getcomp@FUI"(<2 x double> %_p30, i64 1)
  %return32 = call double @"abs@FF"(double %return31)
  %return34 = fcmp ole double %return32, %tt.0
  %w39 = load double, double* %w
  %_p40 = load <2 x double>, <2 x double>* %_p
  %return41 = call double @"getcomp@FUI"(<2 x double> %_p40, i64 0)
  %output42 = fmul double %w39, %return41
  %tmp = load <2 x double>, <2 x double>* %p
  %return43 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output42, i64 0)
  %output45 = extractvalue { double, <2 x double> } %return43, 1
  store <2 x double> %output45, <2 x double>* %p
  %w46 = load double, double* %w
  %_p47 = load <2 x double>, <2 x double>* %_p
  %return48 = call double @"getcomp@FUI"(<2 x double> %_p47, i64 1)
  br i1 %return34, label %true36, label %false37

true36:                                           ; preds = %end
  %return49 = call double @"neg@FF"(double %return48)
  %output50 = fmul double %w46, %return49
  %return52 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output45, double %output50, i64 1)
  %output54 = extractvalue { double, <2 x double> } %return52, 1
  store <2 x double> %output54, <2 x double>* %p
  br label %end38

false37:                                          ; preds = %end
  %output66 = fmul double %w46, %return48
  %return68 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output45, double %output66, i64 1)
  %output70 = extractvalue { double, <2 x double> } %return68, 1
  store <2 x double> %output70, <2 x double>* %p
  br label %end38

end38:                                            ; preds = %false37, %true36
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_POLAR2@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %w1 = load double, double* %w
  %output = call double @"div@FF"(double %w1, double 0x400921FB4D12D84A)
  %_p3 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p3, <2 x double>* %0
  %ATAN = call double @"ATAN@FU"(<2 x double>* %0)
  %output4 = fmul double %output, %ATAN
  %tmp = load <2 x double>, <2 x double>* %p
  %return = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output4, i64 0)
  %output6 = extractvalue { double, <2 x double> } %return, 1
  store <2 x double> %output6, <2 x double>* %p
  %output8 = call double @"div@FF"(double %output, double 2.000000e+00)
  %_p9 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p9, <2 x double>* %1
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %1)
  %return10 = call double @"log@FF"(double %SUMSQ)
  %output11 = fmul double %output8, %return10
  %tmp12 = load <2 x double>, <2 x double>* %p
  %return13 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp12, double %output11, i64 1)
  %output15 = extractvalue { double, <2 x double> } %return13, 1
  store <2 x double> %output15, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_POPCORN2@UUFFU"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %pop2c, <2 x double>* %pop2) #0 {
__llvm_entry:
  %0 = alloca double
  %1 = alloca double
  %w1 = load double, double* %w
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %pop23 = load <2 x double>, <2 x double>* %pop2
  %return4 = call double @"getcomp@FUI"(<2 x double> %pop23, i64 0)
  %return6 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  %pop2c7 = load double, double* %pop2c
  %output = fmul double %return6, %pop2c7
  store double %output, double* %0
  %SafeTan = call double @"SafeTan@FF"(double* %0)
  %return8 = call double @"sin@FF"(double %SafeTan)
  %output9 = fmul double %return4, %return8
  %output10 = fadd double %return, %output9
  %output11 = fmul double %w1, %output10
  %tmp = load <2 x double>, <2 x double>* %p
  %return12 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output11, i64 0)
  %output14 = extractvalue { double, <2 x double> } %return12, 1
  store <2 x double> %output14, <2 x double>* %p
  %w15 = load double, double* %w
  %_p16 = load <2 x double>, <2 x double>* %_p
  %return17 = call double @"getcomp@FUI"(<2 x double> %_p16, i64 1)
  %pop218 = load <2 x double>, <2 x double>* %pop2
  %return19 = call double @"getcomp@FUI"(<2 x double> %pop218, i64 1)
  %return21 = call double @"getcomp@FUI"(<2 x double> %_p16, i64 0)
  %pop2c22 = load double, double* %pop2c
  %output23 = fmul double %return21, %pop2c22
  store double %output23, double* %1
  %SafeTan24 = call double @"SafeTan@FF"(double* %1)
  %return25 = call double @"sin@FF"(double %SafeTan24)
  %output26 = fmul double %return19, %return25
  %output27 = fadd double %return17, %output26
  %output28 = fmul double %w15, %output27
  %tmp29 = load <2 x double>, <2 x double>* %p
  %return30 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp29, double %output28, i64 1)
  %output32 = extractvalue { double, <2 x double> } %return30, 1
  store <2 x double> %output32, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SCRY@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %1
  %SQRT = call double @"SQRT@FU"(<2 x double>* %1)
  %w4 = load double, double* %w
  %output = fadd double %w4, 0x3CB0000000000000
  %output5 = call double @"div@FF"(double 1.000000e+00, double %output)
  %output6 = fadd double %SUMSQ, %output5
  %output7 = fmul double %SQRT, %output6
  %output8 = call double @"div@FF"(double 1.000000e+00, double %output7)
  %_p9 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p9, i64 0)
  %output11 = fmul double %return, %output8
  %tmp = load <2 x double>, <2 x double>* %p
  %return12 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output11, i64 0)
  %output14 = extractvalue { double, <2 x double> } %return12, 1
  store <2 x double> %output14, <2 x double>* %p
  %_p15 = load <2 x double>, <2 x double>* %_p
  %return16 = call double @"getcomp@FUI"(<2 x double> %_p15, i64 1)
  %output18 = fmul double %return16, %output8
  %return20 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output14, double %output18, i64 1)
  %output22 = extractvalue { double, <2 x double> } %return20, 1
  store <2 x double> %output22, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SEPARATION@UUFUU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %sep, <2 x double>* %ins) #0 {
__llvm_entry:
  %sep1 = load <2 x double>, <2 x double>* %sep
  %return = call double @"getcomp@FUI"(<2 x double> %sep1, i64 0)
  %output = fmul double %return, %return
  %return5 = call double @"getcomp@FUI"(<2 x double> %sep1, i64 1)
  %output8 = fmul double %return5, %return5
  %_p9 = load <2 x double>, <2 x double>* %_p
  %return10 = call double @"getcomp@FUI"(<2 x double> %_p9, i64 0)
  %return11 = fcmp ogt double %return10, 0.000000e+00
  %w13 = load double, double* %w
  %output18 = fmul double %return10, %return10
  %output20 = fadd double %output18, %output
  %return21 = call double @"sqrt@FF"(double %output20)
  %ins24 = load <2 x double>, <2 x double>* %ins
  %return25 = call double @"getcomp@FUI"(<2 x double> %ins24, i64 0)
  %output26 = fmul double %return10, %return25
  br i1 %return11, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output27 = fsub double %return21, %output26
  %output28 = fmul double %w13, %output27
  %tmp = load <2 x double>, <2 x double>* %p
  %return29 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output28, i64 0)
  %output31 = extractvalue { double, <2 x double> } %return29, 1
  store <2 x double> %output31, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %output46 = fadd double %return21, %output26
  %return47 = call double @"neg@FF"(double %output46)
  %output48 = fmul double %w13, %return47
  %tmp49 = load <2 x double>, <2 x double>* %p
  %return50 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp49, double %output48, i64 0)
  %output52 = extractvalue { double, <2 x double> } %return50, 1
  store <2 x double> %output52, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  %_p53 = load <2 x double>, <2 x double>* %_p
  %return54 = call double @"getcomp@FUI"(<2 x double> %_p53, i64 1)
  %return55 = fcmp ogt double %return54, 0.000000e+00
  %w60 = load double, double* %w
  %output65 = fmul double %return54, %return54
  %output67 = fadd double %output65, %output8
  %return68 = call double @"sqrt@FF"(double %output67)
  %ins71 = load <2 x double>, <2 x double>* %ins
  %return72 = call double @"getcomp@FUI"(<2 x double> %ins71, i64 1)
  %output73 = fmul double %return54, %return72
  br i1 %return55, label %true57, label %false58

true57:                                           ; preds = %end
  %output74 = fsub double %return68, %output73
  %output75 = fmul double %w60, %output74
  %tmp76 = load <2 x double>, <2 x double>* %p
  %return77 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp76, double %output75, i64 1)
  %output79 = extractvalue { double, <2 x double> } %return77, 1
  store <2 x double> %output79, <2 x double>* %p
  br label %end59

false58:                                          ; preds = %end
  %output94 = fadd double %return68, %output73
  %return95 = call double @"neg@FF"(double %output94)
  %output96 = fmul double %w60, %return95
  %tmp97 = load <2 x double>, <2 x double>* %p
  %return98 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp97, double %output96, i64 1)
  %output100 = extractvalue { double, <2 x double> } %return98, 1
  store <2 x double> %output100, <2 x double>* %p
  br label %end59

end59:                                            ; preds = %false58, %true57
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SPLIT@UUFU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %split) #0 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  %split2 = load <2 x double>, <2 x double>* %split
  %return3 = call double @"getcomp@FUI"(<2 x double> %split2, i64 0)
  %output = fmul double %return, %return3
  %output4 = fmul double %output, 0x400921FB4D12D84A
  %return5 = call double @"cos@FF"(double %output4)
  %return6 = fcmp oge double %return5, 0.000000e+00
  %w8 = load double, double* %w
  %return10 = call double @"getcomp@FUI"(<2 x double> %_p1, i64 1)
  br i1 %return6, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output11 = fmul double %w8, %return10
  %tmp = load <2 x double>, <2 x double>* %p
  %return12 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output11, i64 1)
  %output14 = extractvalue { double, <2 x double> } %return12, 1
  store <2 x double> %output14, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %return18 = call double @"neg@FF"(double %return10)
  %output19 = fmul double %w8, %return18
  %tmp20 = load <2 x double>, <2 x double>* %p
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp20, double %output19, i64 1)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  %_p24 = load <2 x double>, <2 x double>* %_p
  %return25 = call double @"getcomp@FUI"(<2 x double> %_p24, i64 1)
  %split26 = load <2 x double>, <2 x double>* %split
  %return27 = call double @"getcomp@FUI"(<2 x double> %split26, i64 1)
  %output28 = fmul double %return25, %return27
  %output29 = fmul double %output28, 0x400921FB4D12D84A
  %return30 = call double @"cos@FF"(double %output29)
  %return31 = fcmp oge double %return30, 0.000000e+00
  %w36 = load double, double* %w
  %return38 = call double @"getcomp@FUI"(<2 x double> %_p24, i64 0)
  br i1 %return31, label %true33, label %false34

true33:                                           ; preds = %end
  %output39 = fmul double %w36, %return38
  %tmp40 = load <2 x double>, <2 x double>* %p
  %return41 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp40, double %output39, i64 0)
  %output43 = extractvalue { double, <2 x double> } %return41, 1
  store <2 x double> %output43, <2 x double>* %p
  br label %end35

false34:                                          ; preds = %end
  %return47 = call double @"neg@FF"(double %return38)
  %output48 = fmul double %w36, %return47
  %tmp49 = load <2 x double>, <2 x double>* %p
  %return50 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp49, double %output48, i64 0)
  %output52 = extractvalue { double, <2 x double> } %return50, 1
  store <2 x double> %output52, <2 x double>* %p
  br label %end35

end35:                                            ; preds = %false34, %true33
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SPLITS@UUFU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %splits) #0 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  %return2 = fcmp oge double %return, 0.000000e+00
  %w4 = load double, double* %w
  %splits7 = load <2 x double>, <2 x double>* %splits
  %return8 = call double @"getcomp@FUI"(<2 x double> %splits7, i64 0)
  br i1 %return2, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output = fadd double %return, %return8
  %output9 = fmul double %w4, %output
  %tmp = load <2 x double>, <2 x double>* %p
  %return10 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output9, i64 0)
  %output12 = extractvalue { double, <2 x double> } %return10, 1
  store <2 x double> %output12, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %output18 = fsub double %return, %return8
  %output19 = fmul double %w4, %output18
  %tmp20 = load <2 x double>, <2 x double>* %p
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp20, double %output19, i64 0)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  %_p24 = load <2 x double>, <2 x double>* %_p
  %return25 = call double @"getcomp@FUI"(<2 x double> %_p24, i64 1)
  %return26 = fcmp oge double %return25, 0.000000e+00
  %w31 = load double, double* %w
  %splits34 = load <2 x double>, <2 x double>* %splits
  %return35 = call double @"getcomp@FUI"(<2 x double> %splits34, i64 1)
  br i1 %return26, label %true28, label %false29

true28:                                           ; preds = %end
  %output36 = fadd double %return25, %return35
  %output37 = fmul double %w31, %output36
  %tmp38 = load <2 x double>, <2 x double>* %p
  %return39 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp38, double %output37, i64 1)
  %output41 = extractvalue { double, <2 x double> } %return39, 1
  store <2 x double> %output41, <2 x double>* %p
  br label %end30

false29:                                          ; preds = %end
  %output47 = fsub double %return25, %return35
  %output48 = fmul double %w31, %output47
  %tmp49 = load <2 x double>, <2 x double>* %p
  %return50 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp49, double %output48, i64 1)
  %output52 = extractvalue { double, <2 x double> } %return50, 1
  store <2 x double> %output52, <2 x double>* %p
  br label %end30

end30:                                            ; preds = %false29, %true28
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_STRIPES@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %space, double* %warp) #0 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  %output = fadd double %return, 5.000000e-01
  %return2 = call double @"floor@FF"(double %output)
  %output6 = fsub double %return, %return2
  %w7 = load double, double* %w
  %space9 = load double, double* %space
  %output10 = fsub double 1.000000e+00, %space9
  %output11 = fmul double %output6, %output10
  %output13 = fadd double %output11, %return2
  %output14 = fmul double %w7, %output13
  %tmp = load <2 x double>, <2 x double>* %p
  %return15 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output14, i64 0)
  %output17 = extractvalue { double, <2 x double> } %return15, 1
  store <2 x double> %output17, <2 x double>* %p
  %w18 = load double, double* %w
  %_p19 = load <2 x double>, <2 x double>* %_p
  %return20 = call double @"getcomp@FUI"(<2 x double> %_p19, i64 1)
  %output23 = fmul double %output6, %output6
  %warp24 = load double, double* %warp
  %output25 = fmul double %output23, %warp24
  %output26 = fadd double %return20, %output25
  %output27 = fmul double %w18, %output26
  %return29 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output17, double %output27, i64 1)
  %output31 = extractvalue { double, <2 x double> } %return29, 1
  store <2 x double> %output31, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_WEDGE@UUFFFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %swirl, double* %angle, double* %hole, double* %count) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %angle1 = load double, double* %angle
  %count2 = load double, double* %count
  %output = fmul double %angle1, %count2
  %output3 = fmul double %output, 0x3FD45F306DC9C883
  %output4 = fmul double %output3, 5.000000e-01
  %output5 = fsub double 1.000000e+00, %output4
  %_p6 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p6, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %_p7 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p7, <2 x double>* %1
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %1)
  %swirl8 = load double, double* %swirl
  %output10 = fmul double %swirl8, %SUMSQ
  %output11 = fadd double %ATANYX, %output10
  %count12 = load double, double* %count
  %output14 = fmul double %count12, %output11
  %output15 = fadd double %output14, 0x400921FB4D12D84A
  %output16 = fmul double %output15, 0x3FD45F306DC9C883
  %output17 = fmul double %output16, 5.000000e-01
  %return = call double @"floor@FF"(double %output17)
  %output20 = fmul double %output11, %output5
  %angle22 = load double, double* %angle
  %output23 = fmul double %return, %angle22
  %output24 = fadd double %output20, %output23
  %w25 = load double, double* %w
  %hole27 = load double, double* %hole
  %output28 = fadd double %SUMSQ, %hole27
  %output29 = fmul double %w25, %output28
  %return32 = call double @"cos@FF"(double %output24)
  %output33 = fmul double %output29, %return32
  %tmp = load <2 x double>, <2 x double>* %p
  %return34 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output33, i64 0)
  %output36 = extractvalue { double, <2 x double> } %return34, 1
  store <2 x double> %output36, <2 x double>* %p
  %return39 = call double @"sin@FF"(double %output24)
  %output40 = fmul double %output29, %return39
  %return42 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output36, double %output40, i64 1)
  %output44 = extractvalue { double, <2 x double> } %return42, 1
  store <2 x double> %output44, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_WEDGEJULIA@UUFFFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %power, double* %angle, double* %dist, double* %count) #0 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %angle1 = load double, double* %angle
  %count2 = load double, double* %count
  %output = fmul double %angle1, %count2
  %output3 = fmul double %output, 0x3FD45F306DC9C883
  %output4 = fmul double %output3, 5.000000e-01
  %output5 = fsub double 1.000000e+00, %output4
  %power6 = load double, double* %power
  %return = call double @"abs@FF"(double %power6)
  %dist7 = load double, double* %dist
  %power8 = load double, double* %power
  %output9 = call double @"div@FF"(double %dist7, double %power8)
  %output10 = call double @"div@FF"(double %output9, double 2.000000e+00)
  %w11 = load double, double* %w
  %_p12 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p12, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %return14 = call double @"pow@FFF"(double %SUMSQ, double %output10)
  %output15 = fmul double %w11, %return14
  %return17 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output18 = fmul double %return, %return17
  %cast = fptosi double %output18 to i64
  %cast19 = sitofp i64 %cast to double
  %_p20 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p20, <2 x double>* %1
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %1)
  %output22 = fmul double 0x401921FB4D12D84A, %cast19
  %output23 = fadd double %ATANYX, %output22
  %power24 = load double, double* %power
  %output25 = call double @"div@FF"(double %output23, double %power24)
  %count26 = load double, double* %count
  %output28 = fmul double %count26, %output25
  %output29 = fadd double %output28, 0x400921FB4D12D84A
  %output30 = fmul double %output29, 0x3FD45F306DC9C883
  %output31 = fmul double %output30, 5.000000e-01
  %return32 = call double @"floor@FF"(double %output31)
  %output35 = fmul double %output25, %output5
  %angle37 = load double, double* %angle
  %output38 = fmul double %return32, %angle37
  %output39 = fadd double %output35, %output38
  store double %output39, double* %2
  call void @"sincos@FFF"(double* %2, double* %sa, double* %ca)
  %ca42 = load double, double* %ca
  %output43 = fmul double %output15, %ca42
  %tmp = load <2 x double>, <2 x double>* %p
  %return44 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output43, i64 0)
  %output46 = extractvalue { double, <2 x double> } %return44, 1
  store <2 x double> %output46, <2 x double>* %p
  %sa48 = load double, double* %sa
  %output49 = fmul double %output15, %sa48
  %return51 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output46, double %output49, i64 1)
  %output53 = extractvalue { double, <2 x double> } %return51, 1
  store <2 x double> %output53, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_WEDGESPH@UUFFFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %swirl, double* %angle, double* %hole, double* %count) #0 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %output = fadd double %SQRT, 0x3CB0000000000000
  %output2 = call double @"div@FF"(double 1.000000e+00, double %output)
  %_p3 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p3, <2 x double>* %1
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %1)
  %swirl4 = load double, double* %swirl
  %output6 = fmul double %swirl4, %output2
  %output7 = fadd double %ATANYX, %output6
  %count8 = load double, double* %count
  %output10 = fmul double %count8, %output7
  %output11 = fadd double %output10, 0x400921FB4D12D84A
  %output12 = fmul double %output11, 0x3FD45F306DC9C883
  %output13 = fmul double %output12, 5.000000e-01
  %return = call double @"floor@FF"(double %output13)
  %angle14 = load double, double* %angle
  %output16 = fmul double %angle14, %count8
  %output17 = fmul double %output16, 0x3FD45F306DC9C883
  %output18 = fmul double %output17, 5.000000e-01
  %output19 = fsub double 1.000000e+00, %output18
  %output22 = fmul double %output7, %output19
  %output25 = fmul double %return, %angle14
  %output26 = fadd double %output22, %output25
  store double %output26, double* %2
  call void @"sincos@FFF"(double* %2, double* %sa, double* %ca)
  %w28 = load double, double* %w
  %hole30 = load double, double* %hole
  %output31 = fadd double %output2, %hole30
  %output32 = fmul double %w28, %output31
  %ca34 = load double, double* %ca
  %output35 = fmul double %output32, %ca34
  %tmp = load <2 x double>, <2 x double>* %p
  %return36 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output35, i64 0)
  %output38 = extractvalue { double, <2 x double> } %return36, 1
  store <2 x double> %output38, <2 x double>* %p
  %sa40 = load double, double* %sa
  %output41 = fmul double %output32, %sa40
  %return43 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output38, double %output41, i64 1)
  %output45 = extractvalue { double, <2 x double> } %return43, 1
  store <2 x double> %output45, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_WHORL@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %inside, double* %outside) #0 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %w3 = load double, double* %w
  %return = fcmp olt double %SQRT, %w3
  %_p5 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p5, <2 x double>* %1
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %1)
  br i1 %return, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %inside6 = load double, double* %inside
  %w7 = load double, double* %w
  %output = fsub double %w7, %SQRT
  %output9 = call double @"div@FF"(double %inside6, double %output)
  %output10 = fadd double %ATANYX, %output9
  br label %end

false:                                            ; preds = %__llvm_entry
  %outside13 = load double, double* %outside
  %w14 = load double, double* %w
  %output16 = fsub double %w14, %SQRT
  %output17 = call double @"div@FF"(double %outside13, double %output16)
  %output18 = fadd double %ATANYX, %output17
  br label %end

end:                                              ; preds = %false, %true
  %aa.0 = phi double [ %output10, %true ], [ %output18, %false ]
  store double %aa.0, double* %2
  call void @"sincos@FFF"(double* %2, double* %sa, double* %ca)
  %w20 = load double, double* %w
  %output22 = fmul double %w20, %SQRT
  %ca23 = load double, double* %ca
  %output24 = fmul double %output22, %ca23
  %tmp = load <2 x double>, <2 x double>* %p
  %return25 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output24, i64 0)
  %output27 = extractvalue { double, <2 x double> } %return25, 1
  store <2 x double> %output27, <2 x double>* %p
  %w28 = load double, double* %w
  %output30 = fmul double %w28, %SQRT
  %sa31 = load double, double* %sa
  %output32 = fmul double %output30, %sa31
  %return34 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output27, double %output32, i64 1)
  %output36 = extractvalue { double, <2 x double> } %return34, 1
  store <2 x double> %output36, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_WAVES2@UUFUU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %scl, <2 x double>* %freq) #0 {
__llvm_entry:
  %w1 = load double, double* %w
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %scl3 = load <2 x double>, <2 x double>* %scl
  %return4 = call double @"getcomp@FUI"(<2 x double> %scl3, i64 0)
  %return6 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  %freq7 = load <2 x double>, <2 x double>* %freq
  %return8 = call double @"getcomp@FUI"(<2 x double> %freq7, i64 0)
  %output = fmul double %return6, %return8
  %return9 = call double @"sin@FF"(double %output)
  %output10 = fmul double %return4, %return9
  %output11 = fadd double %return, %output10
  %output12 = fmul double %w1, %output11
  %tmp = load <2 x double>, <2 x double>* %p
  %return13 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output12, i64 0)
  %output15 = extractvalue { double, <2 x double> } %return13, 1
  store <2 x double> %output15, <2 x double>* %p
  %w16 = load double, double* %w
  %_p17 = load <2 x double>, <2 x double>* %_p
  %return18 = call double @"getcomp@FUI"(<2 x double> %_p17, i64 1)
  %scl19 = load <2 x double>, <2 x double>* %scl
  %return20 = call double @"getcomp@FUI"(<2 x double> %scl19, i64 1)
  %return22 = call double @"getcomp@FUI"(<2 x double> %_p17, i64 0)
  %freq23 = load <2 x double>, <2 x double>* %freq
  %return24 = call double @"getcomp@FUI"(<2 x double> %freq23, i64 1)
  %output25 = fmul double %return22, %return24
  %return26 = call double @"sin@FF"(double %output25)
  %output27 = fmul double %return20, %return26
  %output28 = fadd double %return18, %output27
  %output29 = fmul double %w16, %output28
  %return31 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output15, double %output29, i64 1)
  %output33 = extractvalue { double, <2 x double> } %return31, 1
  store <2 x double> %output33, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_EXP@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %w1 = load double, double* %w
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %return3 = call double @"exp@FF"(double %return)
  %output = fmul double %w1, %return3
  %return6 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  %return7 = call double @"cos@FF"(double %return6)
  %output8 = fmul double %output, %return7
  %tmp = load <2 x double>, <2 x double>* %p
  %return9 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output8, i64 0)
  %output11 = extractvalue { double, <2 x double> } %return9, 1
  store <2 x double> %output11, <2 x double>* %p
  %_p13 = load <2 x double>, <2 x double>* %_p
  %return14 = call double @"getcomp@FUI"(<2 x double> %_p13, i64 1)
  %return15 = call double @"sin@FF"(double %return14)
  %output16 = fmul double %output, %return15
  %return18 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output11, double %output16, i64 1)
  %output20 = extractvalue { double, <2 x double> } %return18, 1
  store <2 x double> %output20, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_LOG@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %w1 = load double, double* %w
  %output = fmul double %w1, 5.000000e-01
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %return = call double @"log@FF"(double %SUMSQ)
  %output3 = fmul double %output, %return
  %tmp = load <2 x double>, <2 x double>* %p
  %return4 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output3, i64 0)
  %output6 = extractvalue { double, <2 x double> } %return4, 1
  store <2 x double> %output6, <2 x double>* %p
  %w7 = load double, double* %w
  %_p8 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p8, <2 x double>* %1
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %1)
  %output9 = fmul double %w7, %ATANYX
  %tmp10 = load <2 x double>, <2 x double>* %p
  %return11 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp10, double %output9, i64 1)
  %output13 = extractvalue { double, <2 x double> } %return11, 1
  store <2 x double> %output13, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SIN@IUUF"(i64* %f3c, <2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %f3c1 = load i64, i64* %f3c
  %0 = icmp ne i64 %f3c1, 0
  br i1 %0, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %w2 = load double, double* %w
  %_p3 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p3, i64 0)
  %return4 = call double @"sin@FF"(double %return)
  %output = fmul double %w2, %return4
  %return6 = call double @"getcomp@FUI"(<2 x double> %_p3, i64 1)
  %return7 = call double @"cosh@FF"(double %return6)
  %output8 = fmul double %output, %return7
  %tmp = load <2 x double>, <2 x double>* %p
  %return9 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output8, i64 0)
  %output11 = extractvalue { double, <2 x double> } %return9, 1
  store <2 x double> %output11, <2 x double>* %p
  %w12 = load double, double* %w
  %_p13 = load <2 x double>, <2 x double>* %_p
  %return14 = call double @"getcomp@FUI"(<2 x double> %_p13, i64 0)
  %return15 = call double @"cos@FF"(double %return14)
  %output16 = fmul double %w12, %return15
  %return18 = call double @"getcomp@FUI"(<2 x double> %_p13, i64 1)
  %return19 = call double @"sinh@FF"(double %return18)
  %output20 = fmul double %output16, %return19
  %return22 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output11, double %output20, i64 1)
  %output24 = extractvalue { double, <2 x double> } %return22, 1
  store <2 x double> %output24, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %_p25 = load <2 x double>, <2 x double>* %_p
  %return26 = call double @"getcomp@FUI"(<2 x double> %_p25, i64 0)
  %output27 = fmul double %return26, 0x3FF921FB4D12D84A
  %return29 = call double @"getcomp@FUI"(<2 x double> %_p25, i64 1)
  %output30 = fmul double %return29, 0x3FF921FB4D12D84A
  %w31 = load double, double* %w
  %return33 = call double @"sin@FF"(double %output27)
  %output34 = fmul double %w31, %return33
  %return36 = call double @"cosh@FF"(double %output30)
  %output37 = fmul double %output34, %return36
  %tmp38 = load <2 x double>, <2 x double>* %p
  %return39 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp38, double %output37, i64 0)
  %output41 = extractvalue { double, <2 x double> } %return39, 1
  store <2 x double> %output41, <2 x double>* %p
  %w42 = load double, double* %w
  %return44 = call double @"cos@FF"(double %output27)
  %output45 = fmul double %w42, %return44
  %return47 = call double @"sinh@FF"(double %output30)
  %output48 = fmul double %output45, %return47
  %return50 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output41, double %output48, i64 1)
  %output52 = extractvalue { double, <2 x double> } %return50, 1
  store <2 x double> %output52, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_COS@IUUF"(i64* %f3c, <2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %f3c1 = load i64, i64* %f3c
  %0 = icmp ne i64 %f3c1, 0
  br i1 %0, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %w2 = load double, double* %w
  %_p3 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p3, i64 0)
  %return4 = call double @"cos@FF"(double %return)
  %output = fmul double %w2, %return4
  %return6 = call double @"getcomp@FUI"(<2 x double> %_p3, i64 1)
  %return7 = call double @"cosh@FF"(double %return6)
  %output8 = fmul double %output, %return7
  %tmp = load <2 x double>, <2 x double>* %p
  %return9 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output8, i64 0)
  %output11 = extractvalue { double, <2 x double> } %return9, 1
  store <2 x double> %output11, <2 x double>* %p
  %w12 = load double, double* %w
  %_p13 = load <2 x double>, <2 x double>* %_p
  %return14 = call double @"getcomp@FUI"(<2 x double> %_p13, i64 0)
  %return15 = call double @"sin@FF"(double %return14)
  %output16 = fmul double %w12, %return15
  %return18 = call double @"getcomp@FUI"(<2 x double> %_p13, i64 1)
  %return19 = call double @"sinh@FF"(double %return18)
  %output20 = fmul double %output16, %return19
  %return21 = call double @"neg@FF"(double %output20)
  %return23 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output11, double %return21, i64 1)
  %output25 = extractvalue { double, <2 x double> } %return23, 1
  store <2 x double> %output25, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %_p26 = load <2 x double>, <2 x double>* %_p
  %return27 = call double @"getcomp@FUI"(<2 x double> %_p26, i64 0)
  %output28 = fmul double %return27, 0x3FF921FB4D12D84A
  %return30 = call double @"getcomp@FUI"(<2 x double> %_p26, i64 1)
  %output31 = fmul double %return30, 0x3FF921FB4D12D84A
  %w32 = load double, double* %w
  %return34 = call double @"cos@FF"(double %output28)
  %output35 = fmul double %w32, %return34
  %return37 = call double @"cosh@FF"(double %output31)
  %output38 = fmul double %output35, %return37
  %tmp39 = load <2 x double>, <2 x double>* %p
  %return40 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp39, double %output38, i64 0)
  %output42 = extractvalue { double, <2 x double> } %return40, 1
  store <2 x double> %output42, <2 x double>* %p
  %w43 = load double, double* %w
  %return45 = call double @"sin@FF"(double %output28)
  %return46 = call double @"neg@FF"(double %return45)
  %output47 = fmul double %w43, %return46
  %return49 = call double @"sinh@FF"(double %output31)
  %output50 = fmul double %output47, %return49
  %return52 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output42, double %output50, i64 1)
  %output54 = extractvalue { double, <2 x double> } %return52, 1
  store <2 x double> %output54, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_TAN@IUUF"(i64* %f3c, <2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %tancos = alloca double
  %0 = alloca double
  %1 = alloca double
  %2 = alloca double
  %tansin = alloca double
  store double 0.000000e+00, double* %tansin, !vex-initializer-store !3
  store double 0.000000e+00, double* %tancos, !vex-initializer-store !3
  %f3c1 = load i64, i64* %f3c
  %3 = icmp ne i64 %f3c1, 0
  br i1 %3, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %output = fmul double 2.000000e+00, %return
  store double %output, double* %0
  call void @"sincos@FFF"(double* %0, double* %tansin, double* %tancos)
  %_p3 = load <2 x double>, <2 x double>* %_p
  %return4 = call double @"getcomp@FUI"(<2 x double> %_p3, i64 1)
  %output5 = fmul double 2.000000e+00, %return4
  %return6 = call double @"sinh@FF"(double %output5)
  %return10 = call double @"cosh@FF"(double %output5)
  %tancos11 = load double, double* %tancos
  %output13 = fadd double %tancos11, %return10
  store double %output13, double* %1
  %Zeps = call double @"Zeps@FF"(double* %1)
  %output14 = call double @"div@FF"(double 1.000000e+00, double %Zeps)
  %w15 = load double, double* %w
  %output17 = fmul double %w15, %output14
  %tansin18 = load double, double* %tansin
  %output19 = fmul double %output17, %tansin18
  %tmp = load <2 x double>, <2 x double>* %p
  %return20 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output19, i64 0)
  %output22 = extractvalue { double, <2 x double> } %return20, 1
  store <2 x double> %output22, <2 x double>* %p
  %w23 = load double, double* %w
  %output25 = fmul double %w23, %output14
  %output27 = fmul double %output25, %return6
  %return29 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output22, double %output27, i64 1)
  %output31 = extractvalue { double, <2 x double> } %return29, 1
  store <2 x double> %output31, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %_p32 = load <2 x double>, <2 x double>* %_p
  %return33 = call double @"getcomp@FUI"(<2 x double> %_p32, i64 0)
  %output34 = fmul double %return33, 0x3FF921FB4D12D84A
  store double %output34, double* %0
  %_p35 = load <2 x double>, <2 x double>* %_p
  %return36 = call double @"getcomp@FUI"(<2 x double> %_p35, i64 1)
  %output37 = fmul double %return36, 0x3FF921FB4D12D84A
  %w38 = load double, double* %w
  %return40 = call double @"cos@FF"(double %output34)
  %return42 = call double @"cosh@FF"(double %output37)
  %output43 = fadd double %return40, %return42
  store double %output43, double* %2
  %Zeps44 = call double @"Zeps@FF"(double* %2)
  %output45 = call double @"div@FF"(double %w38, double %Zeps44)
  %x46 = load double, double* %0
  %return47 = call double @"sin@FF"(double %x46)
  %output49 = fmul double %return47, %output45
  %tmp50 = load <2 x double>, <2 x double>* %p
  %return51 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp50, double %output49, i64 0)
  %output53 = extractvalue { double, <2 x double> } %return51, 1
  store <2 x double> %output53, <2 x double>* %p
  %return55 = call double @"sinh@FF"(double %output37)
  %output57 = fmul double %return55, %output45
  %return59 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output53, double %output57, i64 1)
  %output61 = extractvalue { double, <2 x double> } %return59, 1
  store <2 x double> %output61, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SEC@IUUF"(i64* %f3c, <2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %seccos = alloca double
  %0 = alloca double
  %1 = alloca double
  %2 = alloca double
  %secsin = alloca double
  store double 0.000000e+00, double* %secsin, !vex-initializer-store !3
  store double 0.000000e+00, double* %seccos, !vex-initializer-store !3
  %f3c1 = load i64, i64* %f3c
  %3 = icmp ne i64 %f3c1, 0
  br i1 %3, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  store double %return, double* %0
  call void @"sincos@FFF"(double* %0, double* %secsin, double* %seccos)
  %_p3 = load <2 x double>, <2 x double>* %_p
  %return4 = call double @"getcomp@FUI"(<2 x double> %_p3, i64 1)
  %return5 = call double @"sinh@FF"(double %return4)
  %return8 = call double @"cosh@FF"(double %return4)
  %return10 = call double @"getcomp@FUI"(<2 x double> %_p3, i64 0)
  %output = fmul double 2.000000e+00, %return10
  %return11 = call double @"cos@FF"(double %output)
  %output14 = fmul double 2.000000e+00, %return4
  %return15 = call double @"cosh@FF"(double %output14)
  %output16 = fadd double %return11, %return15
  %output17 = call double @"div@FF"(double 2.000000e+00, double %output16)
  %w18 = load double, double* %w
  %output20 = fmul double %w18, %output17
  %seccos21 = load double, double* %seccos
  %output22 = fmul double %output20, %seccos21
  %output24 = fmul double %output22, %return8
  %tmp = load <2 x double>, <2 x double>* %p
  %return25 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output24, i64 0)
  %output27 = extractvalue { double, <2 x double> } %return25, 1
  store <2 x double> %output27, <2 x double>* %p
  %w28 = load double, double* %w
  %output30 = fmul double %w28, %output17
  %secsin31 = load double, double* %secsin
  %output32 = fmul double %output30, %secsin31
  %output34 = fmul double %output32, %return5
  %return36 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output27, double %output34, i64 1)
  %output38 = extractvalue { double, <2 x double> } %return36, 1
  store <2 x double> %output38, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %_p39 = load <2 x double>, <2 x double>* %_p
  %return40 = call double @"getcomp@FUI"(<2 x double> %_p39, i64 0)
  %output41 = fmul double %return40, 0x400921FB4D12D84A
  store double %output41, double* %0
  %_p42 = load <2 x double>, <2 x double>* %_p
  %return43 = call double @"getcomp@FUI"(<2 x double> %_p42, i64 1)
  %output44 = fmul double %return43, 0x400921FB4D12D84A
  store double %output41, double* %1
  call void @"sincos@FFF"(double* %1, double* %secsin, double* %seccos)
  %return47 = call double @"sinh@FF"(double %output44)
  %return49 = call double @"cosh@FF"(double %output44)
  %w50 = load double, double* %w
  %x51 = load double, double* %0
  %output52 = fmul double 2.000000e+00, %x51
  %return53 = call double @"cos@FF"(double %output52)
  %output55 = fmul double 2.000000e+00, %output44
  %return56 = call double @"cosh@FF"(double %output55)
  %output57 = fadd double %return53, %return56
  store double %output57, double* %2
  %Zeps = call double @"Zeps@FF"(double* %2)
  %output58 = call double @"div@FF"(double 2.000000e+00, double %Zeps)
  %output59 = fmul double %w50, %output58
  %seccos61 = load double, double* %seccos
  %output62 = fmul double %output59, %seccos61
  %output64 = fmul double %output62, %return49
  %tmp65 = load <2 x double>, <2 x double>* %p
  %return66 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp65, double %output64, i64 0)
  %output68 = extractvalue { double, <2 x double> } %return66, 1
  store <2 x double> %output68, <2 x double>* %p
  %secsin70 = load double, double* %secsin
  %output71 = fmul double %output59, %secsin70
  %output73 = fmul double %output71, %return47
  %return75 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output68, double %output73, i64 1)
  %output77 = extractvalue { double, <2 x double> } %return75, 1
  store <2 x double> %output77, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_CSC@IUUF"(i64* %f3c, <2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %csccos = alloca double
  %0 = alloca double
  %1 = alloca double
  %2 = alloca double
  %cscsin = alloca double
  store double 0.000000e+00, double* %cscsin, !vex-initializer-store !3
  store double 0.000000e+00, double* %csccos, !vex-initializer-store !3
  %f3c1 = load i64, i64* %f3c
  %3 = icmp ne i64 %f3c1, 0
  br i1 %3, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  store double %return, double* %0
  call void @"sincos@FFF"(double* %0, double* %cscsin, double* %csccos)
  %_p3 = load <2 x double>, <2 x double>* %_p
  %return4 = call double @"getcomp@FUI"(<2 x double> %_p3, i64 1)
  %return5 = call double @"sinh@FF"(double %return4)
  %return8 = call double @"cosh@FF"(double %return4)
  %output = fmul double 2.000000e+00, %return4
  %return11 = call double @"cosh@FF"(double %output)
  %return13 = call double @"getcomp@FUI"(<2 x double> %_p3, i64 0)
  %output14 = fmul double 2.000000e+00, %return13
  %return15 = call double @"cos@FF"(double %output14)
  %output16 = fsub double %return11, %return15
  store double %output16, double* %1
  %Zeps = call double @"Zeps@FF"(double* %1)
  %output17 = call double @"div@FF"(double 2.000000e+00, double %Zeps)
  %w18 = load double, double* %w
  %output20 = fmul double %w18, %output17
  %cscsin21 = load double, double* %cscsin
  %output22 = fmul double %output20, %cscsin21
  %output24 = fmul double %output22, %return8
  %tmp = load <2 x double>, <2 x double>* %p
  %return25 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output24, i64 0)
  %output27 = extractvalue { double, <2 x double> } %return25, 1
  store <2 x double> %output27, <2 x double>* %p
  %w28 = load double, double* %w
  %output30 = fmul double %w28, %output17
  %csccos31 = load double, double* %csccos
  %output32 = fmul double %output30, %csccos31
  %output34 = fmul double %output32, %return5
  %return35 = call double @"neg@FF"(double %output34)
  %return37 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output27, double %return35, i64 1)
  %output39 = extractvalue { double, <2 x double> } %return37, 1
  store <2 x double> %output39, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %_p40 = load <2 x double>, <2 x double>* %_p
  %return41 = call double @"getcomp@FUI"(<2 x double> %_p40, i64 0)
  %output42 = fmul double %return41, 0x3FF921FB4D12D84A
  store double %output42, double* %0
  %_p43 = load <2 x double>, <2 x double>* %_p
  %return44 = call double @"getcomp@FUI"(<2 x double> %_p43, i64 1)
  %output45 = fmul double %return44, 0x3FF921FB4D12D84A
  store double %output42, double* %2
  call void @"sincos@FFF"(double* %2, double* %cscsin, double* %csccos)
  %return48 = call double @"sinh@FF"(double %output45)
  %return50 = call double @"cosh@FF"(double %output45)
  %output52 = fmul double 2.000000e+00, %return48
  %output54 = fmul double %output52, %return48
  %output55 = fadd double 1.000000e+00, %output54
  %x56 = load double, double* %0
  %output57 = fmul double 2.000000e+00, %x56
  %return58 = call double @"cos@FF"(double %output57)
  %output59 = fsub double %output55, %return58
  %w60 = load double, double* %w
  %output61 = fmul double 2.000000e+00, %w60
  %output63 = call double @"div@FF"(double %output61, double %output59)
  %cscsin65 = load double, double* %cscsin
  %output66 = fmul double %output63, %cscsin65
  %output68 = fmul double %output66, %return50
  %tmp69 = load <2 x double>, <2 x double>* %p
  %return70 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp69, double %output68, i64 0)
  %output72 = extractvalue { double, <2 x double> } %return70, 1
  store <2 x double> %output72, <2 x double>* %p
  %csccos74 = load double, double* %csccos
  %output75 = fmul double %output63, %csccos74
  %output77 = fmul double %output75, %return48
  %return79 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output72, double %output77, i64 1)
  %output81 = extractvalue { double, <2 x double> } %return79, 1
  store <2 x double> %output81, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_COT@IUUF"(i64* %f3c, <2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %cotcos = alloca double
  %0 = alloca double
  %1 = alloca double
  %2 = alloca double
  %cotsin = alloca double
  store double 0.000000e+00, double* %cotsin, !vex-initializer-store !3
  store double 0.000000e+00, double* %cotcos, !vex-initializer-store !3
  %f3c1 = load i64, i64* %f3c
  %3 = icmp ne i64 %f3c1, 0
  br i1 %3, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %output = fmul double 2.000000e+00, %return
  store double %output, double* %0
  call void @"sincos@FFF"(double* %0, double* %cotsin, double* %cotcos)
  %_p3 = load <2 x double>, <2 x double>* %_p
  %return4 = call double @"getcomp@FUI"(<2 x double> %_p3, i64 1)
  %output5 = fmul double 2.000000e+00, %return4
  %return6 = call double @"sinh@FF"(double %output5)
  %return10 = call double @"cosh@FF"(double %output5)
  %cotcos12 = load double, double* %cotcos
  %output13 = fsub double %return10, %cotcos12
  %output14 = call double @"div@FF"(double 1.000000e+00, double %output13)
  %w15 = load double, double* %w
  %output17 = fmul double %w15, %output14
  %cotsin18 = load double, double* %cotsin
  %output19 = fmul double %output17, %cotsin18
  %tmp = load <2 x double>, <2 x double>* %p
  %return20 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output19, i64 0)
  %output22 = extractvalue { double, <2 x double> } %return20, 1
  store <2 x double> %output22, <2 x double>* %p
  %w23 = load double, double* %w
  %output25 = fmul double %w23, %output14
  %return26 = call i64 @"neg@II"(i64 1)
  %cast = sitofp i64 %return26 to double
  %output27 = fmul double %output25, %cast
  %output29 = fmul double %output27, %return6
  %return31 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output22, double %output29, i64 1)
  %output33 = extractvalue { double, <2 x double> } %return31, 1
  store <2 x double> %output33, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %_p34 = load <2 x double>, <2 x double>* %_p
  %return35 = call double @"getcomp@FUI"(<2 x double> %_p34, i64 0)
  %output36 = fmul double %return35, 0x3FF921FB4D12D84A
  store double %output36, double* %0
  %_p37 = load <2 x double>, <2 x double>* %_p
  %return38 = call double @"getcomp@FUI"(<2 x double> %_p37, i64 1)
  %output39 = fmul double %return38, 0x3FF921FB4D12D84A
  store double %output36, double* %1
  call void @"sincos@FFF"(double* %1, double* %cotsin, double* %cotcos)
  %return42 = call double @"sinh@FF"(double %output39)
  %return44 = call double @"cosh@FF"(double %output39)
  %w45 = load double, double* %w
  %cotcos47 = load double, double* %cotcos
  %output48 = fsub double %return44, %cotcos47
  store double %output48, double* %2
  %Zeps = call double @"Zeps@FF"(double* %2)
  %output49 = call double @"div@FF"(double %w45, double %Zeps)
  %cotsin51 = load double, double* %cotsin
  %output52 = fmul double %output49, %cotsin51
  %tmp53 = load <2 x double>, <2 x double>* %p
  %return54 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp53, double %output52, i64 0)
  %output56 = extractvalue { double, <2 x double> } %return54, 1
  store <2 x double> %output56, <2 x double>* %p
  %output59 = fmul double %output49, %return42
  %return61 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output56, double %output59, i64 1)
  %output63 = extractvalue { double, <2 x double> } %return61, 1
  store <2 x double> %output63, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SINH@IUUF"(i64* %f3c, <2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %sinhcos = alloca double
  %0 = alloca double
  %1 = alloca double
  %sinhsin = alloca double
  store double 0.000000e+00, double* %sinhsin, !vex-initializer-store !3
  store double 0.000000e+00, double* %sinhcos, !vex-initializer-store !3
  %f3c1 = load i64, i64* %f3c
  %2 = icmp ne i64 %f3c1, 0
  br i1 %2, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  store double %return, double* %0
  call void @"sincos@FFF"(double* %0, double* %sinhsin, double* %sinhcos)
  %_p3 = load <2 x double>, <2 x double>* %_p
  %return4 = call double @"getcomp@FUI"(<2 x double> %_p3, i64 0)
  %return5 = call double @"sinh@FF"(double %return4)
  %return8 = call double @"cosh@FF"(double %return4)
  %w9 = load double, double* %w
  %output = fmul double %w9, %return5
  %sinhcos11 = load double, double* %sinhcos
  %output12 = fmul double %output, %sinhcos11
  %tmp = load <2 x double>, <2 x double>* %p
  %return13 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output12, i64 0)
  %output15 = extractvalue { double, <2 x double> } %return13, 1
  store <2 x double> %output15, <2 x double>* %p
  %w16 = load double, double* %w
  %output18 = fmul double %w16, %return8
  %sinhsin19 = load double, double* %sinhsin
  %output20 = fmul double %output18, %sinhsin19
  %return22 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output15, double %output20, i64 1)
  %output24 = extractvalue { double, <2 x double> } %return22, 1
  store <2 x double> %output24, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %_p25 = load <2 x double>, <2 x double>* %_p
  %return26 = call double @"getcomp@FUI"(<2 x double> %_p25, i64 0)
  %output27 = fmul double %return26, 7.853981e-01
  store double %output27, double* %0
  %_p28 = load <2 x double>, <2 x double>* %_p
  %return29 = call double @"getcomp@FUI"(<2 x double> %_p28, i64 1)
  %output30 = fmul double %return29, 7.853981e-01
  store double %output30, double* %1
  call void @"sincos@FFF"(double* %1, double* %sinhsin, double* %sinhcos)
  %x32 = load double, double* %0
  %return33 = call double @"sinh@FF"(double %x32)
  %return35 = call double @"cosh@FF"(double %x32)
  %w36 = load double, double* %w
  %output38 = fmul double %w36, %return33
  %sinhcos39 = load double, double* %sinhcos
  %output40 = fmul double %output38, %sinhcos39
  %tmp41 = load <2 x double>, <2 x double>* %p
  %return42 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp41, double %output40, i64 0)
  %output44 = extractvalue { double, <2 x double> } %return42, 1
  store <2 x double> %output44, <2 x double>* %p
  %w45 = load double, double* %w
  %output47 = fmul double %w45, %return35
  %sinhsin48 = load double, double* %sinhsin
  %output49 = fmul double %output47, %sinhsin48
  %return51 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output44, double %output49, i64 1)
  %output53 = extractvalue { double, <2 x double> } %return51, 1
  store <2 x double> %output53, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_COSH@IUUF"(i64* %f3c, <2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %coshcos = alloca double
  %0 = alloca double
  %1 = alloca double
  %coshsin = alloca double
  store double 0.000000e+00, double* %coshsin, !vex-initializer-store !3
  store double 0.000000e+00, double* %coshcos, !vex-initializer-store !3
  %f3c1 = load i64, i64* %f3c
  %2 = icmp ne i64 %f3c1, 0
  br i1 %2, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  store double %return, double* %0
  call void @"sincos@FFF"(double* %0, double* %coshsin, double* %coshcos)
  %_p3 = load <2 x double>, <2 x double>* %_p
  %return4 = call double @"getcomp@FUI"(<2 x double> %_p3, i64 0)
  %return5 = call double @"sinh@FF"(double %return4)
  %return8 = call double @"cosh@FF"(double %return4)
  %w9 = load double, double* %w
  %output = fmul double %w9, %return8
  %coshcos11 = load double, double* %coshcos
  %output12 = fmul double %output, %coshcos11
  %tmp = load <2 x double>, <2 x double>* %p
  %return13 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output12, i64 0)
  %output15 = extractvalue { double, <2 x double> } %return13, 1
  store <2 x double> %output15, <2 x double>* %p
  %w16 = load double, double* %w
  %output18 = fmul double %w16, %return5
  %coshsin19 = load double, double* %coshsin
  %output20 = fmul double %output18, %coshsin19
  %return22 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output15, double %output20, i64 1)
  %output24 = extractvalue { double, <2 x double> } %return22, 1
  store <2 x double> %output24, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %_p25 = load <2 x double>, <2 x double>* %_p
  %return26 = call double @"getcomp@FUI"(<2 x double> %_p25, i64 0)
  %output27 = fmul double %return26, 0x3FF921FB4D12D84A
  store double %output27, double* %0
  %_p28 = load <2 x double>, <2 x double>* %_p
  %return29 = call double @"getcomp@FUI"(<2 x double> %_p28, i64 1)
  %output30 = fmul double %return29, 0x3FF921FB4D12D84A
  store double %output30, double* %1
  call void @"sincos@FFF"(double* %1, double* %coshsin, double* %coshcos)
  %x32 = load double, double* %0
  %return33 = call double @"sinh@FF"(double %x32)
  %return35 = call double @"cosh@FF"(double %x32)
  %w36 = load double, double* %w
  %output38 = fmul double %w36, %return35
  %coshcos39 = load double, double* %coshcos
  %output40 = fmul double %output38, %coshcos39
  %tmp41 = load <2 x double>, <2 x double>* %p
  %return42 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp41, double %output40, i64 0)
  %output44 = extractvalue { double, <2 x double> } %return42, 1
  store <2 x double> %output44, <2 x double>* %p
  %w45 = load double, double* %w
  %output47 = fmul double %w45, %return33
  %coshsin48 = load double, double* %coshsin
  %output49 = fmul double %output47, %coshsin48
  %return51 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output44, double %output49, i64 1)
  %output53 = extractvalue { double, <2 x double> } %return51, 1
  store <2 x double> %output53, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_TANH@IUUF"(i64* %f3c, <2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %tanhcos = alloca double
  %0 = alloca double
  %1 = alloca double
  %2 = alloca double
  %3 = alloca double
  %tanhsin = alloca double
  store double 0.000000e+00, double* %tanhsin, !vex-initializer-store !3
  store double 0.000000e+00, double* %tanhcos, !vex-initializer-store !3
  %f3c1 = load i64, i64* %f3c
  %4 = icmp ne i64 %f3c1, 0
  br i1 %4, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  %output = fmul double 2.000000e+00, %return
  store double %output, double* %0
  call void @"sincos@FFF"(double* %0, double* %tanhsin, double* %tanhcos)
  %_p3 = load <2 x double>, <2 x double>* %_p
  %return4 = call double @"getcomp@FUI"(<2 x double> %_p3, i64 0)
  %output5 = fmul double 2.000000e+00, %return4
  %return6 = call double @"sinh@FF"(double %output5)
  %return10 = call double @"cosh@FF"(double %output5)
  %tanhcos11 = load double, double* %tanhcos
  %output13 = fadd double %tanhcos11, %return10
  store double %output13, double* %1
  %Zeps = call double @"Zeps@FF"(double* %1)
  %output14 = call double @"div@FF"(double 1.000000e+00, double %Zeps)
  %w15 = load double, double* %w
  %output17 = fmul double %w15, %output14
  %output19 = fmul double %output17, %return6
  %tmp = load <2 x double>, <2 x double>* %p
  %return20 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output19, i64 0)
  %output22 = extractvalue { double, <2 x double> } %return20, 1
  store <2 x double> %output22, <2 x double>* %p
  %w23 = load double, double* %w
  %output25 = fmul double %w23, %output14
  %tanhsin26 = load double, double* %tanhsin
  %output27 = fmul double %output25, %tanhsin26
  %return29 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output22, double %output27, i64 1)
  %output31 = extractvalue { double, <2 x double> } %return29, 1
  store <2 x double> %output31, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %_p32 = load <2 x double>, <2 x double>* %_p
  %return33 = call double @"getcomp@FUI"(<2 x double> %_p32, i64 0)
  %output34 = fmul double %return33, 0x3FF921FB4D12D84A
  store double %output34, double* %0
  %_p35 = load <2 x double>, <2 x double>* %_p
  %return36 = call double @"getcomp@FUI"(<2 x double> %_p35, i64 1)
  %output37 = fmul double %return36, 0x3FF921FB4D12D84A
  store double %output37, double* %2
  call void @"sincos@FFF"(double* %2, double* %tanhsin, double* %tanhcos)
  %x39 = load double, double* %0
  %return40 = call double @"sinh@FF"(double %x39)
  %return42 = call double @"cosh@FF"(double %x39)
  %w43 = load double, double* %w
  %tanhcos44 = load double, double* %tanhcos
  %output46 = fadd double %tanhcos44, %return42
  store double %output46, double* %3
  %Zeps47 = call double @"Zeps@FF"(double* %3)
  %output48 = call double @"div@FF"(double %w43, double %Zeps47)
  %output51 = fmul double %output48, %return40
  %tmp52 = load <2 x double>, <2 x double>* %p
  %return53 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp52, double %output51, i64 0)
  %output55 = extractvalue { double, <2 x double> } %return53, 1
  store <2 x double> %output55, <2 x double>* %p
  %tanhsin57 = load double, double* %tanhsin
  %output58 = fmul double %output48, %tanhsin57
  %return60 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output55, double %output58, i64 1)
  %output62 = extractvalue { double, <2 x double> } %return60, 1
  store <2 x double> %output62, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SECH@IUUF"(i64* %f3c, <2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %sechcos = alloca double
  %0 = alloca double
  %1 = alloca double
  %2 = alloca double
  %3 = alloca double
  %sechsin = alloca double
  store double 0.000000e+00, double* %sechsin, !vex-initializer-store !3
  store double 0.000000e+00, double* %sechcos, !vex-initializer-store !3
  %f3c1 = load i64, i64* %f3c
  %4 = icmp ne i64 %f3c1, 0
  br i1 %4, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  store double %return, double* %0
  call void @"sincos@FFF"(double* %0, double* %sechsin, double* %sechcos)
  %_p3 = load <2 x double>, <2 x double>* %_p
  %return4 = call double @"getcomp@FUI"(<2 x double> %_p3, i64 0)
  %return5 = call double @"sinh@FF"(double %return4)
  %return8 = call double @"cosh@FF"(double %return4)
  %return10 = call double @"getcomp@FUI"(<2 x double> %_p3, i64 1)
  %output = fmul double 2.000000e+00, %return10
  %return11 = call double @"cos@FF"(double %output)
  %output14 = fmul double 2.000000e+00, %return4
  %return15 = call double @"cosh@FF"(double %output14)
  %output16 = fadd double %return11, %return15
  store double %output16, double* %1
  %Zeps = call double @"Zeps@FF"(double* %1)
  %output17 = call double @"div@FF"(double 2.000000e+00, double %Zeps)
  %w18 = load double, double* %w
  %output20 = fmul double %w18, %output17
  %sechcos21 = load double, double* %sechcos
  %output22 = fmul double %output20, %sechcos21
  %output24 = fmul double %output22, %return8
  %tmp = load <2 x double>, <2 x double>* %p
  %return25 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output24, i64 0)
  %output27 = extractvalue { double, <2 x double> } %return25, 1
  store <2 x double> %output27, <2 x double>* %p
  %w28 = load double, double* %w
  %output30 = fmul double %w28, %output17
  %sechsin31 = load double, double* %sechsin
  %output32 = fmul double %output30, %sechsin31
  %output34 = fmul double %output32, %return5
  %return35 = call double @"neg@FF"(double %output34)
  %return37 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output27, double %return35, i64 1)
  %output39 = extractvalue { double, <2 x double> } %return37, 1
  store <2 x double> %output39, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %_p40 = load <2 x double>, <2 x double>* %_p
  %return41 = call double @"getcomp@FUI"(<2 x double> %_p40, i64 0)
  %output42 = fmul double %return41, 7.853981e-01
  store double %output42, double* %0
  %_p43 = load <2 x double>, <2 x double>* %_p
  %return44 = call double @"getcomp@FUI"(<2 x double> %_p43, i64 1)
  %output45 = fmul double %return44, 7.853981e-01
  store double %output45, double* %2
  call void @"sincos@FFF"(double* %2, double* %sechsin, double* %sechcos)
  %x47 = load double, double* %0
  %return48 = call double @"sinh@FF"(double %x47)
  %return50 = call double @"cosh@FF"(double %x47)
  %w51 = load double, double* %w
  %output53 = fmul double %output45, 2.000000e+00
  %return54 = call double @"cos@FF"(double %output53)
  %output56 = fmul double %x47, 2.000000e+00
  %return57 = call double @"cosh@FF"(double %output56)
  %output58 = fadd double %return54, %return57
  store double %output58, double* %3
  %Zeps59 = call double @"Zeps@FF"(double* %3)
  %output60 = call double @"div@FF"(double 2.000000e+00, double %Zeps59)
  %output61 = fmul double %w51, %output60
  %sechcos63 = load double, double* %sechcos
  %output64 = fmul double %output61, %sechcos63
  %output66 = fmul double %output64, %return50
  %tmp67 = load <2 x double>, <2 x double>* %p
  %return68 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp67, double %output66, i64 0)
  %output70 = extractvalue { double, <2 x double> } %return68, 1
  store <2 x double> %output70, <2 x double>* %p
  %sechsin72 = load double, double* %sechsin
  %output73 = fmul double %output61, %sechsin72
  %output75 = fmul double %output73, %return48
  %return77 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output70, double %output75, i64 1)
  %output79 = extractvalue { double, <2 x double> } %return77, 1
  store <2 x double> %output79, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_CSCH@IUUF"(i64* %f3c, <2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %cschcos = alloca double
  %0 = alloca double
  %1 = alloca double
  %2 = alloca double
  %3 = alloca double
  %cschsin = alloca double
  store double 0.000000e+00, double* %cschsin, !vex-initializer-store !3
  store double 0.000000e+00, double* %cschcos, !vex-initializer-store !3
  %f3c1 = load i64, i64* %f3c
  %4 = icmp ne i64 %f3c1, 0
  br i1 %4, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  store double %return, double* %0
  call void @"sincos@FFF"(double* %0, double* %cschsin, double* %cschcos)
  %_p3 = load <2 x double>, <2 x double>* %_p
  %return4 = call double @"getcomp@FUI"(<2 x double> %_p3, i64 0)
  %return5 = call double @"sinh@FF"(double %return4)
  %return8 = call double @"cosh@FF"(double %return4)
  %output = fmul double 2.000000e+00, %return4
  %return11 = call double @"cosh@FF"(double %output)
  %return13 = call double @"getcomp@FUI"(<2 x double> %_p3, i64 1)
  %output14 = fmul double 2.000000e+00, %return13
  %return15 = call double @"cos@FF"(double %output14)
  %output16 = fsub double %return11, %return15
  store double %output16, double* %1
  %Zeps = call double @"Zeps@FF"(double* %1)
  %output17 = call double @"div@FF"(double 2.000000e+00, double %Zeps)
  %w18 = load double, double* %w
  %output20 = fmul double %w18, %output17
  %output22 = fmul double %output20, %return5
  %cschcos23 = load double, double* %cschcos
  %output24 = fmul double %output22, %cschcos23
  %tmp = load <2 x double>, <2 x double>* %p
  %return25 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output24, i64 0)
  %output27 = extractvalue { double, <2 x double> } %return25, 1
  store <2 x double> %output27, <2 x double>* %p
  %w28 = load double, double* %w
  %output30 = fmul double %w28, %output17
  %output32 = fmul double %output30, %return8
  %cschsin33 = load double, double* %cschsin
  %output34 = fmul double %output32, %cschsin33
  %return35 = call double @"neg@FF"(double %output34)
  %return37 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output27, double %return35, i64 1)
  %output39 = extractvalue { double, <2 x double> } %return37, 1
  store <2 x double> %output39, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %_p40 = load <2 x double>, <2 x double>* %_p
  %return41 = call double @"getcomp@FUI"(<2 x double> %_p40, i64 0)
  %output42 = fmul double %return41, 7.853981e-01
  store double %output42, double* %0
  %_p43 = load <2 x double>, <2 x double>* %_p
  %return44 = call double @"getcomp@FUI"(<2 x double> %_p43, i64 1)
  %output45 = fmul double %return44, 7.853981e-01
  store double %output45, double* %2
  call void @"sincos@FFF"(double* %2, double* %cschsin, double* %cschcos)
  %x47 = load double, double* %0
  %return48 = call double @"sinh@FF"(double %x47)
  %return50 = call double @"cosh@FF"(double %x47)
  %w51 = load double, double* %w
  %output53 = fmul double 2.000000e+00, %x47
  %return54 = call double @"cosh@FF"(double %output53)
  %output56 = fmul double 2.000000e+00, %output45
  %return57 = call double @"cos@FF"(double %output56)
  %output58 = fsub double %return54, %return57
  store double %output58, double* %3
  %Zeps59 = call double @"Zeps@FF"(double* %3)
  %output60 = call double @"div@FF"(double 2.000000e+00, double %Zeps59)
  %output61 = fmul double %w51, %output60
  %output64 = fmul double %output61, %return48
  %cschcos65 = load double, double* %cschcos
  %output66 = fmul double %output64, %cschcos65
  %tmp67 = load <2 x double>, <2 x double>* %p
  %return68 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp67, double %output66, i64 0)
  %output70 = extractvalue { double, <2 x double> } %return68, 1
  store <2 x double> %output70, <2 x double>* %p
  %output73 = fmul double %output61, %return50
  %cschsin74 = load double, double* %cschsin
  %output75 = fmul double %output73, %cschsin74
  %return77 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output70, double %output75, i64 1)
  %output79 = extractvalue { double, <2 x double> } %return77, 1
  store <2 x double> %output79, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_COTH@IUUF"(i64* %f3c, <2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %cothcos = alloca double
  %0 = alloca double
  %1 = alloca double
  %2 = alloca double
  %3 = alloca double
  %cothsin = alloca double
  store double 0.000000e+00, double* %cothsin, !vex-initializer-store !3
  store double 0.000000e+00, double* %cothcos, !vex-initializer-store !3
  %f3c1 = load i64, i64* %f3c
  %4 = icmp ne i64 %f3c1, 0
  br i1 %4, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  %output = fmul double 2.000000e+00, %return
  store double %output, double* %0
  call void @"sincos@FFF"(double* %0, double* %cothsin, double* %cothcos)
  %_p3 = load <2 x double>, <2 x double>* %_p
  %return4 = call double @"getcomp@FUI"(<2 x double> %_p3, i64 0)
  %output5 = fmul double 2.000000e+00, %return4
  %return6 = call double @"sinh@FF"(double %output5)
  %return10 = call double @"cosh@FF"(double %output5)
  %cothcos12 = load double, double* %cothcos
  %output13 = fsub double %return10, %cothcos12
  store double %output13, double* %1
  %Zeps = call double @"Zeps@FF"(double* %1)
  %output14 = call double @"div@FF"(double 1.000000e+00, double %Zeps)
  %w15 = load double, double* %w
  %output17 = fmul double %w15, %output14
  %output19 = fmul double %output17, %return6
  %tmp = load <2 x double>, <2 x double>* %p
  %return20 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output19, i64 0)
  %output22 = extractvalue { double, <2 x double> } %return20, 1
  store <2 x double> %output22, <2 x double>* %p
  %w23 = load double, double* %w
  %output25 = fmul double %w23, %output14
  %cothsin26 = load double, double* %cothsin
  %output27 = fmul double %output25, %cothsin26
  %return29 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output22, double %output27, i64 1)
  %output31 = extractvalue { double, <2 x double> } %return29, 1
  store <2 x double> %output31, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %_p32 = load <2 x double>, <2 x double>* %_p
  %return33 = call double @"getcomp@FUI"(<2 x double> %_p32, i64 0)
  %output34 = fmul double %return33, 0x3FF921FB4D12D84A
  store double %output34, double* %0
  %_p35 = load <2 x double>, <2 x double>* %_p
  %return36 = call double @"getcomp@FUI"(<2 x double> %_p35, i64 1)
  %output37 = fmul double %return36, 0x3FF921FB4D12D84A
  store double %output37, double* %2
  call void @"sincos@FFF"(double* %2, double* %cothsin, double* %cothcos)
  %x39 = load double, double* %0
  %return40 = call double @"sinh@FF"(double %x39)
  %return42 = call double @"cosh@FF"(double %x39)
  %w43 = load double, double* %w
  %cothcos45 = load double, double* %cothcos
  %output46 = fsub double %return42, %cothcos45
  store double %output46, double* %3
  %Zeps47 = call double @"Zeps@FF"(double* %3)
  %output48 = call double @"div@FF"(double %w43, double %Zeps47)
  %output51 = fmul double %output48, %return40
  %tmp52 = load <2 x double>, <2 x double>* %p
  %return53 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp52, double %output51, i64 0)
  %output55 = extractvalue { double, <2 x double> } %return53, 1
  store <2 x double> %output55, <2 x double>* %p
  %cothsin57 = load double, double* %cothsin
  %output58 = fmul double %output48, %cothsin57
  %return60 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output55, double %output58, i64 1)
  %output62 = extractvalue { double, <2 x double> } %return60, 1
  store <2 x double> %output62, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_AUGER@UUFFFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %freq, double* %scale, double* %sym, double* %ww) #0 {
__llvm_entry:
  %scale1 = load double, double* %scale
  %output = call double @"div@FF"(double %scale1, double 2.000000e+00)
  %freq2 = load double, double* %freq
  %_p3 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p3, i64 0)
  %output4 = fmul double %freq2, %return
  %return5 = call double @"sin@FF"(double %output4)
  %return8 = call double @"getcomp@FUI"(<2 x double> %_p3, i64 1)
  %output9 = fmul double %freq2, %return8
  %return10 = call double @"sin@FF"(double %output9)
  %ww13 = load double, double* %ww
  %return17 = call double @"abs@FF"(double %return)
  %output19 = fmul double %return17, %return10
  %output20 = fadd double %output, %output19
  %output21 = fmul double %ww13, %output20
  %output22 = fadd double %return, %output21
  %_p23 = load <2 x double>, <2 x double>* %_p
  %return24 = call double @"getcomp@FUI"(<2 x double> %_p23, i64 1)
  %ww25 = load double, double* %ww
  %return29 = call double @"abs@FF"(double %return24)
  %output31 = fmul double %return29, %return5
  %output32 = fadd double %output, %output31
  %output33 = fmul double %ww25, %output32
  %output34 = fadd double %return24, %output33
  %w35 = load double, double* %w
  %_p36 = load <2 x double>, <2 x double>* %_p
  %return37 = call double @"getcomp@FUI"(<2 x double> %_p36, i64 0)
  %sym38 = load double, double* %sym
  %output42 = fsub double %output22, %return37
  %output43 = fmul double %sym38, %output42
  %output44 = fadd double %return37, %output43
  %output45 = fmul double %w35, %output44
  %tmp = load <2 x double>, <2 x double>* %p
  %return46 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output45, i64 0)
  %output48 = extractvalue { double, <2 x double> } %return46, 1
  store <2 x double> %output48, <2 x double>* %p
  %w49 = load double, double* %w
  %output51 = fmul double %w49, %output34
  %return53 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output48, double %output51, i64 1)
  %output55 = extractvalue { double, <2 x double> } %return53, 1
  store <2 x double> %output55, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_FLUX@UUFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %spread) #0 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  %w2 = load double, double* %w
  %output = fadd double %return, %w2
  %output6 = fsub double %return, %w2
  %spread8 = load double, double* %spread
  %output9 = fadd double 2.000000e+00, %spread8
  %output10 = fmul double %w2, %output9
  %return12 = call double @"getcomp@FUI"(<2 x double> %_p1, i64 1)
  %output15 = fmul double %return12, %return12
  %output18 = fmul double %output, %output
  %output19 = fadd double %output15, %output18
  %return20 = call double @"sqrt@FF"(double %output19)
  %output28 = fmul double %output6, %output6
  %output29 = fadd double %output15, %output28
  %return30 = call double @"sqrt@FF"(double %output29)
  %output31 = call double @"div@FF"(double %return20, double %return30)
  %return32 = call double @"sqrt@FF"(double %output31)
  %output33 = fmul double %output10, %return32
  %return37 = call double @"atan2@FFF"(double %return12, double %output6)
  %return41 = call double @"atan2@FFF"(double %return12, double %output)
  %output42 = fsub double %return37, %return41
  %output43 = fmul double %output42, 5.000000e-01
  %return46 = call double @"cos@FF"(double %output43)
  %output47 = fmul double %output33, %return46
  %tmp = load <2 x double>, <2 x double>* %p
  %return48 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output47, i64 0)
  %output50 = extractvalue { double, <2 x double> } %return48, 1
  store <2 x double> %output50, <2 x double>* %p
  %return53 = call double @"sin@FF"(double %output43)
  %output54 = fmul double %output33, %return53
  %return56 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output50, double %output54, i64 1)
  %output58 = extractvalue { double, <2 x double> } %return56, 1
  store <2 x double> %output58, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_MOBIUS@UUFPP"(<2 x double>* %p, <2 x double>* %_p, double* %w, <4 x double>* %re, <4 x double>* %im) #0 {
__llvm_entry:
  %re1 = load <4 x double>, <4 x double>* %re
  %return = call double @"getcomp@FPI"(<4 x double> %re1, i64 0)
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return3 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %output = fmul double %return, %return3
  %im4 = load <4 x double>, <4 x double>* %im
  %return5 = call double @"getcomp@FPI"(<4 x double> %im4, i64 0)
  %return7 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  %output8 = fmul double %return5, %return7
  %output9 = fsub double %output, %output8
  %return11 = call double @"getcomp@FPI"(<4 x double> %re1, i64 1)
  %output12 = fadd double %output9, %return11
  %output17 = fmul double %return, %return7
  %output22 = fmul double %return5, %return3
  %output23 = fadd double %output17, %output22
  %return25 = call double @"getcomp@FPI"(<4 x double> %im4, i64 1)
  %output26 = fadd double %output23, %return25
  %return28 = call double @"getcomp@FPI"(<4 x double> %re1, i64 2)
  %output31 = fmul double %return28, %return3
  %return33 = call double @"getcomp@FPI"(<4 x double> %im4, i64 2)
  %output36 = fmul double %return33, %return7
  %output37 = fsub double %output31, %output36
  %return39 = call double @"getcomp@FPI"(<4 x double> %re1, i64 3)
  %output40 = fadd double %output37, %return39
  %output45 = fmul double %return28, %return7
  %output50 = fmul double %return33, %return3
  %output51 = fadd double %output45, %output50
  %return53 = call double @"getcomp@FPI"(<4 x double> %im4, i64 3)
  %output54 = fadd double %output51, %return53
  %w55 = load double, double* %w
  %output58 = fmul double %output40, %output40
  %output61 = fmul double %output54, %output54
  %output62 = fadd double %output58, %output61
  %output63 = call double @"div@FF"(double %w55, double %output62)
  %output67 = fmul double %output12, %output40
  %output70 = fmul double %output26, %output54
  %output71 = fadd double %output67, %output70
  %output72 = fmul double %output63, %output71
  %tmp = load <2 x double>, <2 x double>* %p
  %return73 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output72, i64 0)
  %output75 = extractvalue { double, <2 x double> } %return73, 1
  store <2 x double> %output75, <2 x double>* %p
  %output79 = fmul double %output26, %output40
  %output82 = fmul double %output12, %output54
  %output83 = fsub double %output79, %output82
  %output84 = fmul double %output63, %output83
  %return86 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output75, double %output84, i64 1)
  %output88 = extractvalue { double, <2 x double> } %return86, 1
  store <2 x double> %output88, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_CURVE@UUFUU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %l, <2 x double>* %a) #0 {
__llvm_entry:
  %w1 = load double, double* %w
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %output = fmul double %w1, %return
  %a3 = load <2 x double>, <2 x double>* %a
  %return4 = call double @"getcomp@FUI"(<2 x double> %a3, i64 0)
  %return6 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 1)
  %return7 = call double @"neg@FF"(double %return6)
  %output10 = fmul double %return7, %return6
  %l11 = load <2 x double>, <2 x double>* %l
  %return12 = call double @"getcomp@FUI"(<2 x double> %l11, i64 0)
  %output13 = fmul double %output10, %return12
  %return14 = call double @"exp@FF"(double %output13)
  %output15 = fmul double %return4, %return14
  %output16 = fadd double %output, %output15
  %tmp = load <2 x double>, <2 x double>* %p
  %return17 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output16, i64 0)
  %output19 = extractvalue { double, <2 x double> } %return17, 1
  store <2 x double> %output19, <2 x double>* %p
  %w20 = load double, double* %w
  %_p21 = load <2 x double>, <2 x double>* %_p
  %return22 = call double @"getcomp@FUI"(<2 x double> %_p21, i64 1)
  %output23 = fmul double %w20, %return22
  %a24 = load <2 x double>, <2 x double>* %a
  %return25 = call double @"getcomp@FUI"(<2 x double> %a24, i64 1)
  %return27 = call double @"getcomp@FUI"(<2 x double> %_p21, i64 0)
  %return28 = call double @"neg@FF"(double %return27)
  %output31 = fmul double %return28, %return27
  %l32 = load <2 x double>, <2 x double>* %l
  %return33 = call double @"getcomp@FUI"(<2 x double> %l32, i64 1)
  %output34 = fmul double %output31, %return33
  %return35 = call double @"exp@FF"(double %output34)
  %output36 = fmul double %return25, %return35
  %output37 = fadd double %output23, %output36
  %return39 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output19, double %output37, i64 1)
  %output41 = extractvalue { double, <2 x double> } %return39, 1
  store <2 x double> %output41, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_PERSPECTIVE@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %angle, double* %dist) #0 {
__llvm_entry:
  %angle1 = load double, double* %angle
  %output = fmul double %angle1, 0x400921FB4D12D84A
  %output2 = call double @"div@FF"(double %output, double 2.000000e+00)
  %return = call double @"sin@FF"(double %output2)
  %dist4 = load double, double* %dist
  %return6 = call double @"cos@FF"(double %output2)
  %output7 = fmul double %dist4, %return6
  %_p9 = load <2 x double>, <2 x double>* %_p
  %return10 = call double @"getcomp@FUI"(<2 x double> %_p9, i64 1)
  %output12 = fmul double %return10, %return
  %output13 = fsub double %dist4, %output12
  %output14 = call double @"div@FF"(double 1.000000e+00, double %output13)
  %w15 = load double, double* %w
  %output17 = fmul double %w15, %dist4
  %return19 = call double @"getcomp@FUI"(<2 x double> %_p9, i64 0)
  %output20 = fmul double %output17, %return19
  %output22 = fmul double %output20, %output14
  %tmp = load <2 x double>, <2 x double>* %p
  %return23 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output22, i64 0)
  %output25 = extractvalue { double, <2 x double> } %return23, 1
  store <2 x double> %output25, <2 x double>* %p
  %w26 = load double, double* %w
  %output28 = fmul double %w26, %output7
  %_p29 = load <2 x double>, <2 x double>* %_p
  %return30 = call double @"getcomp@FUI"(<2 x double> %_p29, i64 1)
  %output31 = fmul double %output28, %return30
  %output33 = fmul double %output31, %output14
  %return35 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output25, double %output33, i64 1)
  %output37 = extractvalue { double, <2 x double> } %return35, 1
  store <2 x double> %output37, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_BWRAPS@UUFFFFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %cellsize, double* %space, double* %gain, double* %innertwist, double* %outertwist) #0 {
__llvm_entry:
  %ss = alloca double
  %cc = alloca double
  %0 = alloca double
  store double 0.000000e+00, double* %ss, !vex-initializer-store !3
  store double 0.000000e+00, double* %cc, !vex-initializer-store !3
  %cellsize1 = load double, double* %cellsize
  %space2 = load double, double* %space
  %output = fmul double %space2, %space2
  %output4 = fadd double 1.000000e+00, %output
  %output5 = call double @"div@FF"(double %cellsize1, double %output4)
  %output6 = fmul double 5.000000e-01, %output5
  %gain7 = load double, double* %gain
  %return = call double @"sqrt@FF"(double %gain7)
  %output9 = call double @"div@FF"(double %return, double %cellsize1)
  %output10 = fadd double %output9, 1.000000e-06
  %output13 = fmul double %output10, %output6
  %return15 = fcmp ogt double %output13, 2.000000e+00
  br i1 %return15, label %end, label %false

false:                                            ; preds = %__llvm_entry
  %output21 = fmul double %output13, %output13
  %output22 = call double @"div@FF"(double %output21, double 4.000000e+00)
  %output23 = fadd double %output22, 1.000000e+00
  %output24 = call double @"div@FF"(double %output13, double %output23)
  br label %end

end:                                              ; preds = %__llvm_entry, %false
  %phi = phi double [ %output24, %false ], [ 1.000000e+00, %__llvm_entry ]
  %output27 = fmul double %output6, %output6
  %output30 = call double @"div@FF"(double %output6, double %phi)
  %_p31 = load <2 x double>, <2 x double>* %_p
  %return32 = call double @"getcomp@FUI"(<2 x double> %_p31, i64 0)
  %return34 = call double @"getcomp@FUI"(<2 x double> %_p31, i64 1)
  %cellsize35 = load double, double* %cellsize
  %return36 = fcmp oeq double %cellsize35, 0.000000e+00
  br i1 %return36, label %true38, label %false39

true38:                                           ; preds = %end
  %w41 = load double, double* %w
  %output43 = fmul double %w41, %return32
  %tmp = load <2 x double>, <2 x double>* %p
  %return44 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output43, i64 0)
  %output46 = extractvalue { double, <2 x double> } %return44, 1
  store <2 x double> %output46, <2 x double>* %p
  %w47 = load double, double* %w
  %output49 = fmul double %w47, %return34
  %return51 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output46, double %output49, i64 1)
  %output53 = extractvalue { double, <2 x double> } %return51, 1
  store <2 x double> %output53, <2 x double>* %p
  br label %end40

false39:                                          ; preds = %end
  %output56 = call double @"div@FF"(double %return32, double %cellsize35)
  %return57 = call double @"floor@FF"(double %output56)
  %output58 = fadd double %return57, 5.000000e-01
  %output60 = fmul double %output58, %cellsize35
  %output63 = call double @"div@FF"(double %return34, double %cellsize35)
  %return64 = call double @"floor@FF"(double %output63)
  %output65 = fadd double %return64, 5.000000e-01
  %output67 = fmul double %output65, %cellsize35
  %output70 = fsub double %return32, %output60
  %output73 = fsub double %return34, %output67
  %output76 = fmul double %output70, %output70
  %output79 = fmul double %output73, %output73
  %output80 = fadd double %output76, %output79
  %return82 = fcmp ogt double %output80, %output27
  br i1 %return82, label %true84, label %false85

end40:                                            ; preds = %true84, %false85, %true38
  ret void

true84:                                           ; preds = %false39
  %w87 = load double, double* %w
  %output89 = fmul double %w87, %return32
  %tmp90 = load <2 x double>, <2 x double>* %p
  %return91 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp90, double %output89, i64 0)
  %output93 = extractvalue { double, <2 x double> } %return91, 1
  store <2 x double> %output93, <2 x double>* %p
  %w94 = load double, double* %w
  %output96 = fmul double %w94, %return34
  %return98 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output93, double %output96, i64 1)
  %output100 = extractvalue { double, <2 x double> } %return98, 1
  store <2 x double> %output100, <2 x double>* %p
  br label %end40

false85:                                          ; preds = %false39
  %output103 = fmul double %output70, %output10
  %output106 = fmul double %output73, %output10
  %output110 = fmul double %output103, %output103
  %output113 = fmul double %output106, %output106
  %output114 = fadd double %output110, %output113
  %output115 = call double @"div@FF"(double %output114, double 4.000000e+00)
  %output116 = fadd double %output115, 1.000000e+00
  %output117 = call double @"div@FF"(double %output30, double %output116)
  %output120 = fmul double %output103, %output117
  %output123 = fmul double %output106, %output117
  %output126 = fmul double %output120, %output120
  %output129 = fmul double %output123, %output123
  %output130 = fadd double %output126, %output129
  %output132 = call double @"div@FF"(double %output130, double %output27)
  %innertwist133 = load double, double* %innertwist
  %output135 = fsub double 1.000000e+00, %output132
  %output136 = fmul double %innertwist133, %output135
  %outertwist137 = load double, double* %outertwist
  %output139 = fmul double %outertwist137, %output132
  %output140 = fadd double %output136, %output139
  store double %output140, double* %0
  call void @"sincos@FFF"(double* %0, double* %ss, double* %cc)
  %cc143 = load double, double* %cc
  %output145 = fmul double %cc143, %output120
  %output146 = fadd double %output60, %output145
  %ss147 = load double, double* %ss
  %output149 = fmul double %ss147, %output123
  %output150 = fadd double %output146, %output149
  %output154 = fmul double %ss147, %output120
  %output155 = fsub double %output67, %output154
  %output158 = fmul double %cc143, %output123
  %output159 = fadd double %output155, %output158
  %w160 = load double, double* %w
  %output162 = fmul double %w160, %output150
  %tmp163 = load <2 x double>, <2 x double>* %p
  %return164 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp163, double %output162, i64 0)
  %output166 = extractvalue { double, <2 x double> } %return164, 1
  store <2 x double> %output166, <2 x double>* %p
  %w167 = load double, double* %w
  %output169 = fmul double %w167, %output159
  %return171 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output166, double %output169, i64 1)
  %output173 = extractvalue { double, <2 x double> } %return171, 1
  store <2 x double> %output173, <2 x double>* %p
  br label %end40
}

; Function Attrs: alwaysinline nounwind
define private void @"V_HEMISPHERE@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %w1 = load double, double* %w
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %output = fadd double %SUMSQ, 1.000000e+00
  %return = call double @"sqrt@FF"(double %output)
  %output3 = call double @"div@FF"(double %w1, double %return)
  %_p4 = load <2 x double>, <2 x double>* %_p
  %return5 = call double @"getcomp@FUI"(<2 x double> %_p4, i64 0)
  %output7 = fmul double %return5, %output3
  %tmp = load <2 x double>, <2 x double>* %p
  %return8 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output7, i64 0)
  %output10 = extractvalue { double, <2 x double> } %return8, 1
  store <2 x double> %output10, <2 x double>* %p
  %_p11 = load <2 x double>, <2 x double>* %_p
  %return12 = call double @"getcomp@FUI"(<2 x double> %_p11, i64 1)
  %output14 = fmul double %return12, %output3
  %return16 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output10, double %output14, i64 1)
  %output18 = extractvalue { double, <2 x double> } %return16, 1
  store <2 x double> %output18, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_POLYNOMIAL@UUFUUU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %pow, <2 x double>* %lc, <2 x double>* %sc) #0 {
__llvm_entry:
  %0 = alloca double
  %1 = alloca double
  %w1 = load double, double* %w
  %return = call double @"abs@FF"(double %w1)
  %_p2 = load <2 x double>, <2 x double>* %_p
  %return3 = call double @"getcomp@FUI"(<2 x double> %_p2, i64 0)
  %return4 = call double @"abs@FF"(double %return3)
  %output = fmul double %return, %return4
  %pow5 = load <2 x double>, <2 x double>* %pow
  %return6 = call double @"getcomp@FUI"(<2 x double> %pow5, i64 0)
  %return7 = call double @"pow@FFF"(double %output, double %return6)
  %w8 = load double, double* %w
  %return9 = call double @"abs@FF"(double %w8)
  %_p10 = load <2 x double>, <2 x double>* %_p
  %return11 = call double @"getcomp@FUI"(<2 x double> %_p10, i64 1)
  %return12 = call double @"abs@FF"(double %return11)
  %output13 = fmul double %return9, %return12
  %pow14 = load <2 x double>, <2 x double>* %pow
  %return15 = call double @"getcomp@FUI"(<2 x double> %pow14, i64 1)
  %return16 = call double @"pow@FFF"(double %output13, double %return15)
  %_p18 = load <2 x double>, <2 x double>* %_p
  %return19 = call double @"getcomp@FUI"(<2 x double> %_p18, i64 0)
  store double %return19, double* %0
  %sgn = call double @"sgn@FF"(double* %0)
  %output20 = fmul double %return7, %sgn
  %lc21 = load <2 x double>, <2 x double>* %lc
  %return22 = call double @"getcomp@FUI"(<2 x double> %lc21, i64 0)
  %_p23 = load <2 x double>, <2 x double>* %_p
  %return24 = call double @"getcomp@FUI"(<2 x double> %_p23, i64 0)
  %output25 = fmul double %return22, %return24
  %output26 = fadd double %output20, %output25
  %sc27 = load <2 x double>, <2 x double>* %sc
  %return28 = call double @"getcomp@FUI"(<2 x double> %sc27, i64 0)
  %output29 = fadd double %output26, %return28
  %tmp = load <2 x double>, <2 x double>* %p
  %return30 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output29, i64 0)
  %output32 = extractvalue { double, <2 x double> } %return30, 1
  store <2 x double> %output32, <2 x double>* %p
  %_p34 = load <2 x double>, <2 x double>* %_p
  %return35 = call double @"getcomp@FUI"(<2 x double> %_p34, i64 1)
  store double %return35, double* %1
  %sgn36 = call double @"sgn@FF"(double* %1)
  %output37 = fmul double %return16, %sgn36
  %lc38 = load <2 x double>, <2 x double>* %lc
  %return39 = call double @"getcomp@FUI"(<2 x double> %lc38, i64 1)
  %_p40 = load <2 x double>, <2 x double>* %_p
  %return41 = call double @"getcomp@FUI"(<2 x double> %_p40, i64 1)
  %output42 = fmul double %return39, %return41
  %output43 = fadd double %output37, %output42
  %sc44 = load <2 x double>, <2 x double>* %sc
  %return45 = call double @"getcomp@FUI"(<2 x double> %sc44, i64 1)
  %output46 = fadd double %output43, %return45
  %tmp47 = load <2 x double>, <2 x double>* %p
  %return48 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp47, double %output46, i64 1)
  %output50 = extractvalue { double, <2 x double> } %return48, 1
  store <2 x double> %output50, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private <2 x double> @"FLAME@UZ6gemPrmM52N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PN8pc_DISC2[VIIIUUUUF"(%gemPrm* %GMP, i64* %idx, i64* %T, i64* %f3c, <2 x double>* %pos, <2 x double>* %x, <2 x double>* %y, <2 x double>* %o, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca double
  %2 = alloca <2 x double>
  %3 = alloca double
  %4 = alloca <2 x double>
  %5 = alloca double
  %6 = alloca <2 x double>
  %7 = alloca double
  %8 = alloca <2 x double>
  %9 = alloca double
  %10 = alloca <2 x double>
  %11 = alloca double
  %12 = alloca <2 x double>
  %13 = alloca double
  %14 = alloca <2 x double>
  %15 = alloca double
  %16 = alloca <2 x double>
  %17 = alloca double
  %18 = alloca <2 x double>
  %19 = alloca double
  %20 = alloca <2 x double>
  %21 = alloca double
  %22 = alloca <2 x double>
  %23 = alloca double
  %24 = alloca <2 x double>
  %25 = alloca double
  %26 = alloca <2 x double>
  %27 = alloca double
  %28 = alloca <2 x double>
  %29 = alloca double
  %30 = alloca double
  %31 = alloca double
  %32 = alloca double
  %33 = alloca double
  %34 = alloca <2 x double>
  %35 = alloca double
  %36 = alloca <2 x double>
  %37 = alloca double
  %38 = alloca double
  %39 = alloca double
  %40 = alloca <2 x double>
  %41 = alloca double
  %42 = alloca <2 x double>
  %43 = alloca double
  %44 = alloca <2 x double>
  %45 = alloca double
  %46 = alloca <2 x double>
  %47 = alloca double
  %48 = alloca double
  %49 = alloca <2 x double>
  %50 = alloca double
  %51 = alloca double
  %52 = alloca <2 x double>
  %53 = alloca double
  %54 = alloca <2 x double>
  %55 = alloca double
  %56 = alloca <2 x double>
  %57 = alloca double
  %58 = alloca double
  %59 = alloca <2 x double>
  %60 = alloca double
  %61 = alloca double
  %62 = alloca double
  %63 = alloca <2 x double>
  %64 = alloca double
  %65 = alloca double
  %66 = alloca double
  %67 = alloca double
  %68 = alloca double
  %69 = alloca <2 x double>
  %70 = alloca double
  %71 = alloca <4 x double>
  %72 = alloca <2 x double>
  %73 = alloca double
  %74 = alloca double
  %75 = alloca double
  %76 = alloca double
  %77 = alloca <2 x double>
  %78 = alloca double
  %79 = alloca double
  %80 = alloca double
  %81 = alloca <2 x double>
  %82 = alloca double
  %83 = alloca double
  %84 = alloca double
  %85 = alloca double
  %86 = alloca <2 x double>
  %87 = alloca double
  %88 = alloca <2 x double>
  %89 = alloca <2 x double>
  %90 = alloca double
  %91 = alloca double
  %92 = alloca <2 x double>
  %93 = alloca double
  %94 = alloca <2 x double>
  %95 = alloca <2 x double>
  %96 = alloca double
  %97 = alloca double
  %98 = alloca double
  %99 = alloca double
  %100 = alloca double
  %101 = alloca double
  %102 = alloca double
  %103 = alloca <2 x double>
  %104 = alloca double
  %105 = alloca <2 x double>
  %106 = alloca double
  %107 = alloca <2 x double>
  %108 = alloca double
  %109 = alloca <2 x double>
  %110 = alloca double
  %111 = alloca <2 x double>
  %112 = alloca double
  %113 = alloca <2 x double>
  %114 = alloca double
  %115 = alloca <2 x double>
  %116 = alloca double
  %117 = alloca <2 x double>
  %118 = alloca double
  %119 = alloca <2 x double>
  %120 = alloca double
  %121 = alloca double
  %122 = alloca double
  %123 = alloca <3 x double>
  %124 = alloca <2 x double>
  %125 = alloca double
  %126 = alloca double
  %127 = alloca double
  %128 = alloca double
  %129 = alloca <3 x double>
  %130 = alloca <2 x double>
  %131 = alloca double
  %132 = alloca double
  %133 = alloca double
  %134 = alloca <2 x double>
  %135 = alloca double
  %136 = alloca double
  %137 = alloca double
  %138 = alloca <2 x double>
  %139 = alloca double
  %140 = alloca double
  %141 = alloca double
  %142 = alloca <2 x double>
  %143 = alloca double
  %144 = alloca <2 x double>
  %145 = alloca <2 x double>
  %146 = alloca double
  %147 = alloca double
  %148 = alloca <2 x double>
  %149 = alloca double
  %150 = alloca <2 x double>
  %151 = alloca double
  %152 = alloca <2 x double>
  %153 = alloca double
  %154 = alloca double
  %155 = alloca <2 x double>
  %156 = alloca double
  %157 = alloca double
  %158 = alloca double
  %159 = alloca double
  %160 = alloca <2 x double>
  %161 = alloca double
  %162 = alloca <2 x double>
  %163 = alloca double
  %164 = alloca <2 x double>
  %165 = alloca double
  %166 = alloca <2 x double>
  %167 = alloca double
  %168 = alloca double
  %169 = alloca <2 x double>
  %170 = alloca double
  %171 = alloca <2 x double>
  %172 = alloca double
  %173 = alloca double
  %174 = alloca double
  %175 = alloca double
  %176 = alloca <2 x double>
  %177 = alloca <2 x double>
  %178 = alloca double
  %179 = alloca <2 x double>
  %180 = alloca double
  %181 = alloca <2 x double>
  %182 = alloca <2 x double>
  %183 = alloca double
  %184 = alloca double
  %185 = alloca double
  %186 = alloca double
  %187 = alloca double
  %188 = alloca <2 x double>
  %189 = alloca double
  %190 = alloca <2 x double>
  %191 = alloca double
  %192 = alloca double
  %193 = alloca <2 x double>
  %194 = alloca <2 x double>
  %195 = alloca double
  %196 = alloca <2 x double>
  %197 = alloca double
  %198 = alloca <2 x double>
  %199 = alloca <2 x double>
  %200 = alloca <2 x double>
  %201 = alloca double
  %202 = alloca <2 x double>
  %203 = alloca <2 x double>
  %204 = alloca double
  %205 = alloca <2 x double>
  %206 = alloca <2 x double>
  %207 = alloca double
  %208 = alloca double
  %209 = alloca double
  %210 = alloca <2 x double>
  %211 = alloca double
  %212 = alloca double
  %213 = alloca double
  %214 = alloca double
  %215 = alloca double
  %216 = alloca <2 x double>
  %217 = alloca double
  %218 = alloca double
  %219 = alloca double
  %220 = alloca double
  %221 = alloca double
  %222 = alloca <2 x double>
  %223 = alloca double
  %224 = alloca double
  %225 = alloca double
  %226 = alloca double
  %227 = alloca double
  %228 = alloca <2 x double>
  %229 = alloca double
  %230 = alloca double
  %231 = alloca double
  %232 = alloca <2 x double>
  %233 = alloca double
  %234 = alloca <2 x double>
  %235 = alloca <2 x double>
  %236 = alloca <2 x double>
  %237 = alloca double
  %238 = alloca <2 x double>
  %239 = alloca double
  %240 = alloca i64
  %241 = alloca <2 x double>
  %242 = alloca double
  %243 = alloca i64
  %244 = alloca <2 x double>
  %245 = alloca double
  %246 = alloca i64
  %247 = alloca <2 x double>
  %248 = alloca double
  %249 = alloca i64
  %250 = alloca <2 x double>
  %251 = alloca double
  %252 = alloca i64
  %253 = alloca <2 x double>
  %254 = alloca double
  %255 = alloca i64
  %256 = alloca <2 x double>
  %257 = alloca double
  %258 = alloca i64
  %259 = alloca <2 x double>
  %260 = alloca double
  %261 = alloca i64
  %262 = alloca <2 x double>
  %263 = alloca double
  %264 = alloca i64
  %265 = alloca <2 x double>
  %266 = alloca double
  %267 = alloca i64
  %268 = alloca <2 x double>
  %269 = alloca double
  %270 = alloca i64
  %271 = alloca <2 x double>
  %272 = alloca double
  %273 = alloca i64
  %274 = alloca <2 x double>
  %275 = alloca double
  %276 = alloca <2 x double>
  %277 = alloca double
  %278 = alloca double
  %279 = alloca double
  %280 = alloca double
  %281 = alloca double
  %282 = alloca <2 x double>
  %283 = alloca double
  %284 = alloca double
  %285 = alloca <2 x double>
  %286 = alloca double
  %287 = alloca <4 x double>
  %288 = alloca <4 x double>
  %289 = alloca <2 x double>
  %290 = alloca double
  %291 = alloca <2 x double>
  %292 = alloca <2 x double>
  %293 = alloca <2 x double>
  %294 = alloca double
  %295 = alloca double
  %296 = alloca double
  %297 = alloca <2 x double>
  %298 = alloca double
  %299 = alloca double
  %300 = alloca double
  %301 = alloca double
  %302 = alloca double
  %303 = alloca double
  %304 = alloca <2 x double>
  %305 = alloca double
  %306 = alloca <2 x double>
  %307 = alloca double
  %308 = alloca <2 x double>
  %309 = alloca <2 x double>
  %310 = alloca <2 x double>
  %p = alloca <2 x double>
  store <2 x double> zeroinitializer, <2 x double>* %p, !vex-initializer-store !3
  %x1 = load <2 x double>, <2 x double>* %x
  %return = call double @"getcomp@FUI"(<2 x double> %x1, i64 0)
  %pos2 = load <2 x double>, <2 x double>* %pos
  %return3 = call double @"getcomp@FUI"(<2 x double> %pos2, i64 0)
  %output = fmul double %return, %return3
  %y4 = load <2 x double>, <2 x double>* %y
  %return5 = call double @"getcomp@FUI"(<2 x double> %y4, i64 0)
  %return7 = call double @"getcomp@FUI"(<2 x double> %pos2, i64 1)
  %output8 = fmul double %return5, %return7
  %output9 = fadd double %output, %output8
  %o10 = load <2 x double>, <2 x double>* %o
  %return11 = call double @"getcomp@FUI"(<2 x double> %o10, i64 0)
  %output12 = fadd double %output9, %return11
  %return14 = call double @"getcomp@FUI"(<2 x double> %x1, i64 1)
  %output17 = fmul double %return14, %return3
  %return19 = call double @"getcomp@FUI"(<2 x double> %y4, i64 1)
  %output22 = fmul double %return19, %return7
  %output23 = fadd double %output17, %output22
  %return25 = call double @"getcomp@FUI"(<2 x double> %o10, i64 1)
  %output26 = fadd double %output23, %return25
  %return27 = call <2 x double> @"set@UFF"(double %output12, double %output26)
  %T28 = load i64, i64* %T
  %return29 = call i64 @"not@II"(i64 %T28)
  %311 = icmp ne i64 %return29, 0
  br i1 %311, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %w31 = load double, double* %w
  %cast = call <2 x double> @"set@UF"(double %w31)
  %output32 = call <2 x double> @"mul@UU"(<2 x double> %return27, <2 x double> %cast)
  br label %UnifiedReturnBlock

false:                                            ; preds = %__llvm_entry
  %return34 = call i64 @"lt@III"(i64 %T28, i64 35)
  %312 = icmp ne i64 %return34, 0
  br i1 %312, label %true35, label %false36

true35:                                           ; preds = %false
  %return39 = call i64 @"lt@III"(i64 %T28, i64 18)
  %313 = icmp ne i64 %return39, 0
  br i1 %313, label %true40, label %false41

false36:                                          ; preds = %false
  %return383 = call i64 @"lt@III"(i64 %T28, i64 70)
  %314 = icmp ne i64 %return383, 0
  br i1 %314, label %true384, label %false385

end37:                                            ; preds = %false1194, %false999, %false385, %false775, %false530, %false366, %false174
  br label %UnifiedReturnBlock

true40:                                           ; preds = %true35
  %return44 = call i64 @"eq@III"(i64 %T28, i64 1)
  %315 = icmp ne i64 %return44, 0
  br i1 %315, label %true45, label %false46

false41:                                          ; preds = %true35
  %return191 = call i64 @"eq@III"(i64 %T28, i64 18)
  %316 = icmp ne i64 %return191, 0
  br i1 %316, label %true192, label %false193

true45:                                           ; preds = %true40
  store <2 x double> %return27, <2 x double>* %0
  %w49 = load double, double* %w
  store double %w49, double* %1
  call void @"V_SINUSOIDAL@UUF"(<2 x double>* %p, <2 x double>* %0, double* %1)
  %p50 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false46:                                          ; preds = %true40
  %return52 = call i64 @"eq@III"(i64 %T28, i64 2)
  %317 = icmp ne i64 %return52, 0
  br i1 %317, label %true53, label %false54

true53:                                           ; preds = %false46
  store <2 x double> %return27, <2 x double>* %2
  %w57 = load double, double* %w
  store double %w57, double* %3
  call void @"V_SPHERICAL@UUF"(<2 x double>* %p, <2 x double>* %2, double* %3)
  %p58 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false54:                                          ; preds = %false46
  %return60 = call i64 @"eq@III"(i64 %T28, i64 3)
  %318 = icmp ne i64 %return60, 0
  br i1 %318, label %true61, label %false62

true61:                                           ; preds = %false54
  store <2 x double> %return27, <2 x double>* %4
  %w65 = load double, double* %w
  store double %w65, double* %5
  call void @"V_SWIRL@UUF"(<2 x double>* %p, <2 x double>* %4, double* %5)
  %p66 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false62:                                          ; preds = %false54
  %return68 = call i64 @"eq@III"(i64 %T28, i64 4)
  %319 = icmp ne i64 %return68, 0
  br i1 %319, label %true69, label %false70

true69:                                           ; preds = %false62
  store <2 x double> %return27, <2 x double>* %6
  %w73 = load double, double* %w
  store double %w73, double* %7
  call void @"V_HORSESHOE@UUF"(<2 x double>* %p, <2 x double>* %6, double* %7)
  %p74 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false70:                                          ; preds = %false62
  %return76 = call i64 @"eq@III"(i64 %T28, i64 5)
  %320 = icmp ne i64 %return76, 0
  br i1 %320, label %true77, label %false78

true77:                                           ; preds = %false70
  store <2 x double> %return27, <2 x double>* %8
  %w81 = load double, double* %w
  store double %w81, double* %9
  call void @"V_POLAR@UUF"(<2 x double>* %p, <2 x double>* %8, double* %9)
  %p82 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false78:                                          ; preds = %false70
  %return84 = call i64 @"eq@III"(i64 %T28, i64 6)
  %321 = icmp ne i64 %return84, 0
  br i1 %321, label %true85, label %false86

true85:                                           ; preds = %false78
  store <2 x double> %return27, <2 x double>* %10
  %w89 = load double, double* %w
  store double %w89, double* %11
  call void @"V_HANDKERCHIEF@UUF"(<2 x double>* %p, <2 x double>* %10, double* %11)
  %p90 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false86:                                          ; preds = %false78
  %return92 = call i64 @"eq@III"(i64 %T28, i64 7)
  %322 = icmp ne i64 %return92, 0
  br i1 %322, label %true93, label %false94

true93:                                           ; preds = %false86
  store <2 x double> %return27, <2 x double>* %12
  %w97 = load double, double* %w
  store double %w97, double* %13
  call void @"V_HEART@UUF"(<2 x double>* %p, <2 x double>* %12, double* %13)
  %p98 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false94:                                          ; preds = %false86
  %return100 = call i64 @"eq@III"(i64 %T28, i64 8)
  %323 = icmp ne i64 %return100, 0
  br i1 %323, label %true101, label %false102

true101:                                          ; preds = %false94
  store <2 x double> %return27, <2 x double>* %14
  %w105 = load double, double* %w
  store double %w105, double* %15
  call void @"V_DISC@UUF"(<2 x double>* %p, <2 x double>* %14, double* %15)
  %p106 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false102:                                         ; preds = %false94
  %return108 = call i64 @"eq@III"(i64 %T28, i64 9)
  %324 = icmp ne i64 %return108, 0
  br i1 %324, label %true109, label %false110

true109:                                          ; preds = %false102
  store <2 x double> %return27, <2 x double>* %16
  %w113 = load double, double* %w
  store double %w113, double* %17
  call void @"V_SPIRAL@UUF"(<2 x double>* %p, <2 x double>* %16, double* %17)
  %p114 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false110:                                         ; preds = %false102
  %return116 = call i64 @"eq@III"(i64 %T28, i64 10)
  %325 = icmp ne i64 %return116, 0
  br i1 %325, label %true117, label %false118

true117:                                          ; preds = %false110
  store <2 x double> %return27, <2 x double>* %18
  %w121 = load double, double* %w
  store double %w121, double* %19
  call void @"V_HIPERBOLIC@UUF"(<2 x double>* %p, <2 x double>* %18, double* %19)
  %p122 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false118:                                         ; preds = %false110
  %return124 = call i64 @"eq@III"(i64 %T28, i64 11)
  %326 = icmp ne i64 %return124, 0
  br i1 %326, label %true125, label %false126

true125:                                          ; preds = %false118
  store <2 x double> %return27, <2 x double>* %20
  %w129 = load double, double* %w
  store double %w129, double* %21
  call void @"V_DIAMOND@UUF"(<2 x double>* %p, <2 x double>* %20, double* %21)
  %p130 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false126:                                         ; preds = %false118
  %return132 = call i64 @"eq@III"(i64 %T28, i64 12)
  %327 = icmp ne i64 %return132, 0
  br i1 %327, label %true133, label %false134

true133:                                          ; preds = %false126
  store <2 x double> %return27, <2 x double>* %22
  %w137 = load double, double* %w
  store double %w137, double* %23
  call void @"V_EX@UUF"(<2 x double>* %p, <2 x double>* %22, double* %23)
  %p138 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false134:                                         ; preds = %false126
  %return140 = call i64 @"eq@III"(i64 %T28, i64 13)
  %328 = icmp ne i64 %return140, 0
  br i1 %328, label %true141, label %false142

true141:                                          ; preds = %false134
  store <2 x double> %return27, <2 x double>* %24
  %w145 = load double, double* %w
  store double %w145, double* %25
  call void @"V_JULIA@UUF"(<2 x double>* %p, <2 x double>* %24, double* %25)
  %p146 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false142:                                         ; preds = %false134
  %return148 = call i64 @"eq@III"(i64 %T28, i64 14)
  %329 = icmp ne i64 %return148, 0
  br i1 %329, label %true149, label %false150

true149:                                          ; preds = %false142
  store <2 x double> %return27, <2 x double>* %26
  %w153 = load double, double* %w
  store double %w153, double* %27
  call void @"V_BENT@UUF"(<2 x double>* %p, <2 x double>* %26, double* %27)
  %p154 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false150:                                         ; preds = %false142
  %return156 = call i64 @"eq@III"(i64 %T28, i64 15)
  %330 = icmp ne i64 %return156, 0
  br i1 %330, label %true157, label %false158

true157:                                          ; preds = %false150
  store <2 x double> %return27, <2 x double>* %28
  %w161 = load double, double* %w
  store double %w161, double* %29
  %x162 = load <2 x double>, <2 x double>* %x
  %return163 = call double @"getcomp@FUI"(<2 x double> %x162, i64 1)
  store double %return163, double* %30
  %y164 = load <2 x double>, <2 x double>* %y
  %return165 = call double @"getcomp@FUI"(<2 x double> %y164, i64 0)
  store double %return165, double* %31
  %o166 = load <2 x double>, <2 x double>* %o
  %return167 = call double @"getcomp@FUI"(<2 x double> %o166, i64 0)
  store double %return167, double* %32
  %o168 = load <2 x double>, <2 x double>* %o
  %return169 = call double @"getcomp@FUI"(<2 x double> %o168, i64 1)
  store double %return169, double* %33
  call void @"V_WAVES@UUFFFFF"(<2 x double>* %p, <2 x double>* %28, double* %29, double* %30, double* %31, double* %32, double* %33)
  %p170 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false158:                                         ; preds = %false150
  %return172 = call i64 @"eq@III"(i64 %T28, i64 16)
  %331 = icmp ne i64 %return172, 0
  br i1 %331, label %true173, label %false174

true173:                                          ; preds = %false158
  store <2 x double> %return27, <2 x double>* %34
  %w177 = load double, double* %w
  store double %w177, double* %35
  call void @"V_FISHEYE@UUF"(<2 x double>* %p, <2 x double>* %34, double* %35)
  %p178 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false174:                                         ; preds = %false158
  %return180 = call i64 @"eq@III"(i64 %T28, i64 17)
  %332 = icmp ne i64 %return180, 0
  br i1 %332, label %true181, label %end37

true181:                                          ; preds = %false174
  store <2 x double> %return27, <2 x double>* %36
  %w184 = load double, double* %w
  store double %w184, double* %37
  %o185 = load <2 x double>, <2 x double>* %o
  %return186 = call double @"getcomp@FUI"(<2 x double> %o185, i64 0)
  store double %return186, double* %38
  %o187 = load <2 x double>, <2 x double>* %o
  %return188 = call double @"getcomp@FUI"(<2 x double> %o187, i64 1)
  store double %return188, double* %39
  call void @"V_POPCORN@UUFFF"(<2 x double>* %p, <2 x double>* %36, double* %37, double* %38, double* %39)
  %p189 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true192:                                          ; preds = %false41
  store <2 x double> %return27, <2 x double>* %40
  %w196 = load double, double* %w
  store double %w196, double* %41
  call void @"V_EXPONENTIAL@UUF"(<2 x double>* %p, <2 x double>* %40, double* %41)
  %p197 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false193:                                         ; preds = %false41
  %return199 = call i64 @"eq@III"(i64 %T28, i64 19)
  %333 = icmp ne i64 %return199, 0
  br i1 %333, label %true200, label %false201

true200:                                          ; preds = %false193
  store <2 x double> %return27, <2 x double>* %42
  %w204 = load double, double* %w
  store double %w204, double* %43
  call void @"V_POWER@UUF"(<2 x double>* %p, <2 x double>* %42, double* %43)
  %p205 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false201:                                         ; preds = %false193
  %return207 = call i64 @"eq@III"(i64 %T28, i64 20)
  %334 = icmp ne i64 %return207, 0
  br i1 %334, label %true208, label %false209

true208:                                          ; preds = %false201
  store <2 x double> %return27, <2 x double>* %44
  %w212 = load double, double* %w
  store double %w212, double* %45
  call void @"V_COSINE@UUF"(<2 x double>* %p, <2 x double>* %44, double* %45)
  %p213 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false209:                                         ; preds = %false201
  %return215 = call i64 @"eq@III"(i64 %T28, i64 21)
  %335 = icmp ne i64 %return215, 0
  br i1 %335, label %true216, label %false217

true216:                                          ; preds = %false209
  store <2 x double> %return27, <2 x double>* %46
  %w220 = load double, double* %w
  store double %w220, double* %47
  %o221 = load <2 x double>, <2 x double>* %o
  %return222 = call double @"getcomp@FUI"(<2 x double> %o221, i64 0)
  store double %return222, double* %48
  call void @"V_RINGS@UUFF"(<2 x double>* %p, <2 x double>* %46, double* %47, double* %48)
  %p223 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false217:                                         ; preds = %false209
  %return225 = call i64 @"eq@III"(i64 %T28, i64 22)
  %336 = icmp ne i64 %return225, 0
  br i1 %336, label %true226, label %false227

true226:                                          ; preds = %false217
  store <2 x double> %return27, <2 x double>* %49
  %w230 = load double, double* %w
  store double %w230, double* %50
  %o231 = load <2 x double>, <2 x double>* %o
  %return232 = call double @"getcomp@FUI"(<2 x double> %o231, i64 0)
  store double %return232, double* %51
  call void @"V_FAN@UUFF"(<2 x double>* %p, <2 x double>* %49, double* %50, double* %51)
  %p233 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false227:                                         ; preds = %false217
  %return235 = call i64 @"eq@III"(i64 %T28, i64 23)
  %337 = icmp ne i64 %return235, 0
  br i1 %337, label %true236, label %false237

true236:                                          ; preds = %false227
  store <2 x double> %return27, <2 x double>* %52
  %w240 = load double, double* %w
  store double %w240, double* %53
  call void @"V_BUBBLE@UUF"(<2 x double>* %p, <2 x double>* %52, double* %53)
  %p241 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false237:                                         ; preds = %false227
  %return243 = call i64 @"eq@III"(i64 %T28, i64 24)
  %338 = icmp ne i64 %return243, 0
  br i1 %338, label %true244, label %false245

true244:                                          ; preds = %false237
  store <2 x double> %return27, <2 x double>* %54
  %w248 = load double, double* %w
  store double %w248, double* %55
  call void @"V_CYLINDER@UUF"(<2 x double>* %p, <2 x double>* %54, double* %55)
  %p249 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false245:                                         ; preds = %false237
  %return251 = call i64 @"eq@III"(i64 %T28, i64 25)
  %339 = icmp ne i64 %return251, 0
  br i1 %339, label %true252, label %false253

true252:                                          ; preds = %false245
  store <2 x double> %return27, <2 x double>* %56
  %w256 = load double, double* %w
  store double %w256, double* %57
  call void @"V_EYEFISH@UUF"(<2 x double>* %p, <2 x double>* %56, double* %57)
  %p257 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false253:                                         ; preds = %false245
  %return259 = call i64 @"eq@III"(i64 %T28, i64 26)
  %340 = icmp ne i64 %return259, 0
  br i1 %340, label %true260, label %false261

true260:                                          ; preds = %false253
  %w263 = load double, double* %w
  store double %w263, double* %58
  call void @"V_BLUR@UF"(<2 x double>* %p, double* %58)
  %p264 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false261:                                         ; preds = %false253
  %return266 = call i64 @"eq@III"(i64 %T28, i64 27)
  %341 = icmp ne i64 %return266, 0
  br i1 %341, label %true267, label %false268

true267:                                          ; preds = %false261
  %GMP270 = load %gemPrm, %gemPrm* %GMP
  %curl_c271 = extractvalue %gemPrm %GMP270, 13
  %idx272 = load i64, i64* %idx
  %return273 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %curl_c271, i64 %idx272)
  store <2 x double> %return27, <2 x double>* %59
  %w275 = load double, double* %w
  store double %w275, double* %60
  %return277 = call double @"getcomp@FUI"(<2 x double> %return273, i64 0)
  store double %return277, double* %61
  %return279 = call double @"getcomp@FUI"(<2 x double> %return273, i64 1)
  store double %return279, double* %62
  call void @"V_CURL@UUFFF"(<2 x double>* %p, <2 x double>* %59, double* %60, double* %61, double* %62)
  %p280 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false268:                                         ; preds = %false261
  %return282 = call i64 @"eq@III"(i64 %T28, i64 28)
  %342 = icmp ne i64 %return282, 0
  br i1 %342, label %true283, label %false284

true283:                                          ; preds = %false268
  %GMP286 = load %gemPrm, %gemPrm* %GMP
  %ngon287 = extractvalue %gemPrm %GMP286, 42
  %idx288 = load i64, i64* %idx
  %return289 = call <4 x double> @"getcomp@P[PI"(<4 x double>* %ngon287, i64 %idx288)
  store <2 x double> %return27, <2 x double>* %63
  %w291 = load double, double* %w
  store double %w291, double* %64
  %return293 = call double @"getcomp@FPI"(<4 x double> %return289, i64 0)
  store double %return293, double* %65
  %return295 = call double @"getcomp@FPI"(<4 x double> %return289, i64 1)
  store double %return295, double* %66
  %return297 = call double @"getcomp@FPI"(<4 x double> %return289, i64 2)
  store double %return297, double* %67
  %return299 = call double @"getcomp@FPI"(<4 x double> %return289, i64 3)
  store double %return299, double* %68
  call void @"V_NGON@UUFFFFF"(<2 x double>* %p, <2 x double>* %63, double* %64, double* %65, double* %66, double* %67, double* %68)
  %p300 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false284:                                         ; preds = %false268
  %return302 = call i64 @"eq@III"(i64 %T28, i64 29)
  %343 = icmp ne i64 %return302, 0
  br i1 %343, label %true303, label %false304

true303:                                          ; preds = %false284
  %GMP306 = load %gemPrm, %gemPrm* %GMP
  %pdj_w = extractvalue %gemPrm %GMP306, 43
  %idx307 = load i64, i64* %idx
  %return308 = call <4 x double> @"getcomp@P[PI"(<4 x double>* %pdj_w, i64 %idx307)
  store <2 x double> %return27, <2 x double>* %69
  %w310 = load double, double* %w
  store double %w310, double* %70
  store <4 x double> %return308, <4 x double>* %71
  call void @"V_PDJ@UUFP"(<2 x double>* %p, <2 x double>* %69, double* %70, <4 x double>* %71)
  %p312 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false304:                                         ; preds = %false284
  %return314 = call i64 @"eq@III"(i64 %T28, i64 30)
  %344 = icmp ne i64 %return314, 0
  br i1 %344, label %true315, label %false316

true315:                                          ; preds = %false304
  %GMP318 = load %gemPrm, %gemPrm* %GMP
  %blob319 = extractvalue %gemPrm %GMP318, 6
  %idx320 = load i64, i64* %idx
  %return321 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %blob319, i64 %idx320)
  store <2 x double> %return27, <2 x double>* %72
  %w323 = load double, double* %w
  store double %w323, double* %73
  %return325 = call double @"getcomp@FVI"(<3 x double> %return321, i64 1)
  store double %return325, double* %74
  %return327 = call double @"getcomp@FVI"(<3 x double> %return321, i64 0)
  store double %return327, double* %75
  %return329 = call double @"getcomp@FVI"(<3 x double> %return321, i64 2)
  store double %return329, double* %76
  call void @"V_BLOB@UUFFFF"(<2 x double>* %p, <2 x double>* %72, double* %73, double* %74, double* %75, double* %76)
  %p330 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false316:                                         ; preds = %false304
  %return332 = call i64 @"eq@III"(i64 %T28, i64 31)
  %345 = icmp ne i64 %return332, 0
  br i1 %345, label %true333, label %false334

true333:                                          ; preds = %false316
  %GMP336 = load %gemPrm, %gemPrm* %GMP
  %julian337 = extractvalue %gemPrm %GMP336, 32
  %idx338 = load i64, i64* %idx
  %return339 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %julian337, i64 %idx338)
  store <2 x double> %return27, <2 x double>* %77
  %w341 = load double, double* %w
  store double %w341, double* %78
  %return343 = call double @"getcomp@FUI"(<2 x double> %return339, i64 0)
  store double %return343, double* %79
  %return345 = call double @"getcomp@FUI"(<2 x double> %return339, i64 1)
  store double %return345, double* %80
  call void @"V_JULIAN@UUFFF"(<2 x double>* %p, <2 x double>* %77, double* %78, double* %79, double* %80)
  %p346 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false334:                                         ; preds = %false316
  %return348 = call i64 @"eq@III"(i64 %T28, i64 32)
  %346 = icmp ne i64 %return348, 0
  br i1 %346, label %true349, label %false350

true349:                                          ; preds = %false334
  %GMP352 = load %gemPrm, %gemPrm* %GMP
  %juliascope353 = extractvalue %gemPrm %GMP352, 33
  %idx354 = load i64, i64* %idx
  %return355 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %juliascope353, i64 %idx354)
  store <2 x double> %return27, <2 x double>* %81
  %w357 = load double, double* %w
  store double %w357, double* %82
  %return359 = call double @"getcomp@FUI"(<2 x double> %return355, i64 0)
  store double %return359, double* %83
  %return361 = call double @"getcomp@FUI"(<2 x double> %return355, i64 1)
  store double %return361, double* %84
  call void @"V_JULIASCOPE@UUFFF"(<2 x double>* %p, <2 x double>* %81, double* %82, double* %83, double* %84)
  %p362 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false350:                                         ; preds = %false334
  %return364 = call i64 @"eq@III"(i64 %T28, i64 33)
  %347 = icmp ne i64 %return364, 0
  br i1 %347, label %true365, label %false366

true365:                                          ; preds = %false350
  %w368 = load double, double* %w
  store double %w368, double* %85
  call void @"V_GAUSSIAN_BLUR@UF"(<2 x double>* %p, double* %85)
  %p369 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false366:                                         ; preds = %false350
  %return371 = call i64 @"eq@III"(i64 %T28, i64 34)
  %348 = icmp ne i64 %return371, 0
  br i1 %348, label %true372, label %end37

true372:                                          ; preds = %false366
  %GMP374 = load %gemPrm, %gemPrm* %GMP
  %fan2375 = extractvalue %gemPrm %GMP374, 15
  %idx376 = load i64, i64* %idx
  %return377 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %fan2375, i64 %idx376)
  store <2 x double> %return27, <2 x double>* %86
  %w379 = load double, double* %w
  store double %w379, double* %87
  store <2 x double> %return377, <2 x double>* %88
  call void @"V_FAN2@UUFU"(<2 x double>* %p, <2 x double>* %86, double* %87, <2 x double>* %88)
  %p381 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true384:                                          ; preds = %false36
  %return388 = call i64 @"lt@III"(i64 %T28, i64 50)
  %349 = icmp ne i64 %return388, 0
  br i1 %349, label %true389, label %false390

false385:                                         ; preds = %false36
  %return796 = call i64 @"lt@III"(i64 %T28, i64 102)
  %350 = icmp ne i64 %return796, 0
  br i1 %350, label %true797, label %end37

true389:                                          ; preds = %true384
  %return393 = call i64 @"eq@III"(i64 %T28, i64 35)
  %351 = icmp ne i64 %return393, 0
  br i1 %351, label %true394, label %false395

false390:                                         ; preds = %true384
  %return564 = call i64 @"eq@III"(i64 %T28, i64 50)
  %352 = icmp ne i64 %return564, 0
  br i1 %352, label %true565, label %false566

true394:                                          ; preds = %true389
  %GMP397 = load %gemPrm, %gemPrm* %GMP
  %rings2_val = extractvalue %gemPrm %GMP397, 0
  %idx398 = load i64, i64* %idx
  %return399 = call double @"getcomp@F[FI"(double* %rings2_val, i64 %idx398)
  store <2 x double> %return27, <2 x double>* %89
  %w401 = load double, double* %w
  store double %w401, double* %90
  store double %return399, double* %91
  call void @"V_RINGS2@UUFF"(<2 x double>* %p, <2 x double>* %89, double* %90, double* %91)
  %p403 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false395:                                         ; preds = %true389
  %return405 = call i64 @"eq@III"(i64 %T28, i64 36)
  %353 = icmp ne i64 %return405, 0
  br i1 %353, label %true406, label %false407

true406:                                          ; preds = %false395
  %GMP409 = load %gemPrm, %gemPrm* %GMP
  %rectangles = extractvalue %gemPrm %GMP409, 16
  %idx410 = load i64, i64* %idx
  %return411 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %rectangles, i64 %idx410)
  store <2 x double> %return27, <2 x double>* %92
  %w413 = load double, double* %w
  store double %w413, double* %93
  store <2 x double> %return411, <2 x double>* %94
  call void @"V_RECTANGLES@UUFU"(<2 x double>* %p, <2 x double>* %92, double* %93, <2 x double>* %94)
  %p415 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false407:                                         ; preds = %false395
  %return417 = call i64 @"eq@III"(i64 %T28, i64 37)
  %354 = icmp ne i64 %return417, 0
  br i1 %354, label %true418, label %false419

true418:                                          ; preds = %false407
  %GMP421 = load %gemPrm, %gemPrm* %GMP
  %radialblur422 = extractvalue %gemPrm %GMP421, 34
  %idx423 = load i64, i64* %idx
  %return424 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %radialblur422, i64 %idx423)
  store <2 x double> %return27, <2 x double>* %95
  %w426 = load double, double* %w
  store double %w426, double* %96
  %return428 = call double @"getcomp@FUI"(<2 x double> %return424, i64 0)
  store double %return428, double* %97
  %return430 = call double @"getcomp@FUI"(<2 x double> %return424, i64 1)
  store double %return430, double* %98
  call void @"V_RADIALBLUR@UUFFF"(<2 x double>* %p, <2 x double>* %95, double* %96, double* %97, double* %98)
  %p431 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false419:                                         ; preds = %false407
  %return433 = call i64 @"eq@III"(i64 %T28, i64 38)
  %355 = icmp ne i64 %return433, 0
  br i1 %355, label %true434, label %false435

true434:                                          ; preds = %false419
  %GMP437 = load %gemPrm, %gemPrm* %GMP
  %pie438 = extractvalue %gemPrm %GMP437, 7
  %idx439 = load i64, i64* %idx
  %return440 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %pie438, i64 %idx439)
  %w441 = load double, double* %w
  store double %w441, double* %99
  %return443 = call double @"getcomp@FVI"(<3 x double> %return440, i64 0)
  store double %return443, double* %100
  %return445 = call double @"getcomp@FVI"(<3 x double> %return440, i64 1)
  store double %return445, double* %101
  %return447 = call double @"getcomp@FVI"(<3 x double> %return440, i64 2)
  store double %return447, double* %102
  call void @"V_PIE@UFFFF"(<2 x double>* %p, double* %99, double* %100, double* %101, double* %102)
  %p448 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false435:                                         ; preds = %false419
  %return450 = call i64 @"eq@III"(i64 %T28, i64 39)
  %356 = icmp ne i64 %return450, 0
  br i1 %356, label %true451, label %false452

true451:                                          ; preds = %false435
  %w454 = load double, double* %w
  store double %w454, double* %104
  call void @"V_ARCH@UUF"(<2 x double>* %p, <2 x double>* %103, double* %104)
  %p455 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false452:                                         ; preds = %false435
  %return457 = call i64 @"eq@III"(i64 %T28, i64 40)
  %357 = icmp ne i64 %return457, 0
  br i1 %357, label %true458, label %false459

true458:                                          ; preds = %false452
  store <2 x double> %return27, <2 x double>* %105
  %w462 = load double, double* %w
  store double %w462, double* %106
  call void @"V_TANGENT@UUF"(<2 x double>* %p, <2 x double>* %105, double* %106)
  %p463 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false459:                                         ; preds = %false452
  %return465 = call i64 @"eq@III"(i64 %T28, i64 41)
  %358 = icmp ne i64 %return465, 0
  br i1 %358, label %true466, label %false467

true466:                                          ; preds = %false459
  %w469 = load double, double* %w
  store double %w469, double* %108
  call void @"V_SQUARE@UUF"(<2 x double>* %p, <2 x double>* %107, double* %108)
  %p470 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false467:                                         ; preds = %false459
  %return472 = call i64 @"eq@III"(i64 %T28, i64 42)
  %359 = icmp ne i64 %return472, 0
  br i1 %359, label %true473, label %false474

true473:                                          ; preds = %false467
  store <2 x double> %return27, <2 x double>* %109
  %w477 = load double, double* %w
  store double %w477, double* %110
  call void @"V_RAYS@UUF"(<2 x double>* %p, <2 x double>* %109, double* %110)
  %p478 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false474:                                         ; preds = %false467
  %return480 = call i64 @"eq@III"(i64 %T28, i64 43)
  %360 = icmp ne i64 %return480, 0
  br i1 %360, label %true481, label %false482

true481:                                          ; preds = %false474
  store <2 x double> %return27, <2 x double>* %111
  %w485 = load double, double* %w
  store double %w485, double* %112
  call void @"V_BLADE@UUF"(<2 x double>* %p, <2 x double>* %111, double* %112)
  %p486 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false482:                                         ; preds = %false474
  %return488 = call i64 @"eq@III"(i64 %T28, i64 44)
  %361 = icmp ne i64 %return488, 0
  br i1 %361, label %true489, label %false490

true489:                                          ; preds = %false482
  store <2 x double> %return27, <2 x double>* %113
  %w493 = load double, double* %w
  store double %w493, double* %114
  call void @"V_SECANT2@UUF"(<2 x double>* %p, <2 x double>* %113, double* %114)
  %p494 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false490:                                         ; preds = %false482
  %return496 = call i64 @"eq@III"(i64 %T28, i64 45)
  %362 = icmp ne i64 %return496, 0
  br i1 %362, label %true497, label %false498

true497:                                          ; preds = %false490
  store <2 x double> %return27, <2 x double>* %115
  %w501 = load double, double* %w
  store double %w501, double* %116
  call void @"V_TWINTRIAN@UUF"(<2 x double>* %p, <2 x double>* %115, double* %116)
  %p502 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false498:                                         ; preds = %false490
  %return504 = call i64 @"eq@III"(i64 %T28, i64 46)
  %363 = icmp ne i64 %return504, 0
  br i1 %363, label %true505, label %false506

true505:                                          ; preds = %false498
  store <2 x double> %return27, <2 x double>* %117
  %w509 = load double, double* %w
  store double %w509, double* %118
  call void @"V_CROSS@UUF"(<2 x double>* %p, <2 x double>* %117, double* %118)
  %p510 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false506:                                         ; preds = %false498
  %return512 = call i64 @"eq@III"(i64 %T28, i64 47)
  %364 = icmp ne i64 %return512, 0
  br i1 %364, label %true513, label %false514

true513:                                          ; preds = %false506
  %GMP516 = load %gemPrm, %gemPrm* %GMP
  %idx518 = load i64, i64* %idx
  %pc_DISC2 = extractvalue %gemPrm %GMP516, 51
  %return522 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %pc_DISC2, i64 %idx518)
  store <2 x double> %return27, <2 x double>* %119
  %w524 = load double, double* %w
  store double %w524, double* %120
  store <3 x double> %return522, <3 x double>* %123
  call void @"V_DISC2_L@UUFFFV"(<2 x double>* %p, <2 x double>* %119, double* %120, double* %121, double* %122, <3 x double>* %123)
  %p526 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false514:                                         ; preds = %false506
  %return528 = call i64 @"eq@III"(i64 %T28, i64 48)
  %365 = icmp ne i64 %return528, 0
  br i1 %365, label %true529, label %false530

true529:                                          ; preds = %false514
  %GMP532 = load %gemPrm, %gemPrm* %GMP
  %supershape = extractvalue %gemPrm %GMP532, 8
  %idx533 = load i64, i64* %idx
  %return534 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %supershape, i64 %idx533)
  %supershape_n = extractvalue %gemPrm %GMP532, 9
  %return537 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %supershape_n, i64 %idx533)
  store <2 x double> %return27, <2 x double>* %124
  %w539 = load double, double* %w
  store double %w539, double* %125
  %return541 = call double @"getcomp@FVI"(<3 x double> %return534, i64 1)
  store double %return541, double* %126
  %return543 = call double @"getcomp@FVI"(<3 x double> %return534, i64 0)
  store double %return543, double* %127
  %return545 = call double @"getcomp@FVI"(<3 x double> %return534, i64 2)
  store double %return545, double* %128
  store <3 x double> %return537, <3 x double>* %129
  call void @"V_SUPERSHAPE@UUFFFFV"(<2 x double>* %p, <2 x double>* %124, double* %125, double* %126, double* %127, double* %128, <3 x double>* %129)
  %p547 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false530:                                         ; preds = %false514
  %return549 = call i64 @"eq@III"(i64 %T28, i64 49)
  %366 = icmp ne i64 %return549, 0
  br i1 %366, label %true550, label %end37

true550:                                          ; preds = %false530
  %GMP552 = load %gemPrm, %gemPrm* %GMP
  %flower553 = extractvalue %gemPrm %GMP552, 36
  %idx554 = load i64, i64* %idx
  %return555 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %flower553, i64 %idx554)
  store <2 x double> %return27, <2 x double>* %130
  %w557 = load double, double* %w
  store double %w557, double* %131
  %return559 = call double @"getcomp@FUI"(<2 x double> %return555, i64 0)
  store double %return559, double* %132
  %return561 = call double @"getcomp@FUI"(<2 x double> %return555, i64 1)
  store double %return561, double* %133
  call void @"V_FLOWER@UUFFF"(<2 x double>* %p, <2 x double>* %130, double* %131, double* %132, double* %133)
  %p562 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true565:                                          ; preds = %false390
  %GMP568 = load %gemPrm, %gemPrm* %GMP
  %conic569 = extractvalue %gemPrm %GMP568, 37
  %idx570 = load i64, i64* %idx
  %return571 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %conic569, i64 %idx570)
  store <2 x double> %return27, <2 x double>* %134
  %w573 = load double, double* %w
  store double %w573, double* %135
  %return575 = call double @"getcomp@FUI"(<2 x double> %return571, i64 0)
  store double %return575, double* %136
  %return577 = call double @"getcomp@FUI"(<2 x double> %return571, i64 1)
  store double %return577, double* %137
  call void @"V_CONIC@UUFFF"(<2 x double>* %p, <2 x double>* %134, double* %135, double* %136, double* %137)
  %p578 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false566:                                         ; preds = %false390
  %return580 = call i64 @"eq@III"(i64 %T28, i64 51)
  %367 = icmp ne i64 %return580, 0
  br i1 %367, label %true581, label %false582

true581:                                          ; preds = %false566
  %GMP584 = load %gemPrm, %gemPrm* %GMP
  %parabola585 = extractvalue %gemPrm %GMP584, 14
  %idx586 = load i64, i64* %idx
  %return587 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %parabola585, i64 %idx586)
  store <2 x double> %return27, <2 x double>* %138
  %w589 = load double, double* %w
  store double %w589, double* %139
  %return591 = call double @"getcomp@FUI"(<2 x double> %return587, i64 0)
  store double %return591, double* %140
  %return593 = call double @"getcomp@FUI"(<2 x double> %return587, i64 1)
  store double %return593, double* %141
  call void @"V_PARABOLA@UUFFF"(<2 x double>* %p, <2 x double>* %138, double* %139, double* %140, double* %141)
  %p594 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false582:                                         ; preds = %false566
  %return596 = call i64 @"eq@III"(i64 %T28, i64 52)
  %368 = icmp ne i64 %return596, 0
  br i1 %368, label %true597, label %false598

true597:                                          ; preds = %false582
  %GMP600 = load %gemPrm, %gemPrm* %GMP
  %bent2601 = extractvalue %gemPrm %GMP600, 17
  %idx602 = load i64, i64* %idx
  %return603 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %bent2601, i64 %idx602)
  store <2 x double> %return27, <2 x double>* %142
  %w605 = load double, double* %w
  store double %w605, double* %143
  store <2 x double> %return603, <2 x double>* %144
  call void @"V_BENT2@UUFU"(<2 x double>* %p, <2 x double>* %142, double* %143, <2 x double>* %144)
  %p607 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false598:                                         ; preds = %false582
  %return609 = call i64 @"eq@III"(i64 %T28, i64 53)
  %369 = icmp ne i64 %return609, 0
  br i1 %369, label %true610, label %false611

true610:                                          ; preds = %false598
  %GMP613 = load %gemPrm, %gemPrm* %GMP
  %bipolar_shift = extractvalue %gemPrm %GMP613, 1
  %idx614 = load i64, i64* %idx
  %return615 = call double @"getcomp@F[FI"(double* %bipolar_shift, i64 %idx614)
  store <2 x double> %return27, <2 x double>* %145
  %w617 = load double, double* %w
  store double %w617, double* %146
  store double %return615, double* %147
  call void @"V_BIPOLAR@UUFF"(<2 x double>* %p, <2 x double>* %145, double* %146, double* %147)
  %p619 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false611:                                         ; preds = %false598
  %return621 = call i64 @"eq@III"(i64 %T28, i64 54)
  %370 = icmp ne i64 %return621, 0
  br i1 %370, label %true622, label %false623

true622:                                          ; preds = %false611
  store <2 x double> %return27, <2 x double>* %148
  %w626 = load double, double* %w
  store double %w626, double* %149
  call void @"V_BOARDERS@UUF"(<2 x double>* %p, <2 x double>* %148, double* %149)
  %p627 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false623:                                         ; preds = %false611
  %return629 = call i64 @"eq@III"(i64 %T28, i64 55)
  %371 = icmp ne i64 %return629, 0
  br i1 %371, label %true630, label %false631

true630:                                          ; preds = %false623
  store <2 x double> %return27, <2 x double>* %150
  %w634 = load double, double* %w
  store double %w634, double* %151
  call void @"V_BUTTERFLY@UUF"(<2 x double>* %p, <2 x double>* %150, double* %151)
  %p635 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false631:                                         ; preds = %false623
  %return637 = call i64 @"eq@III"(i64 %T28, i64 56)
  %372 = icmp ne i64 %return637, 0
  br i1 %372, label %true638, label %false639

true638:                                          ; preds = %false631
  %GMP641 = load %gemPrm, %gemPrm* %GMP
  %cell_size = extractvalue %gemPrm %GMP641, 2
  %idx642 = load i64, i64* %idx
  %return643 = call double @"getcomp@F[FI"(double* %cell_size, i64 %idx642)
  store <2 x double> %return27, <2 x double>* %152
  store double %return643, double* %154
  call void @"V_CELL@UUFF"(<2 x double>* %p, <2 x double>* %152, double* %153, double* %154)
  %p646 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false639:                                         ; preds = %false631
  %return648 = call i64 @"eq@III"(i64 %T28, i64 57)
  %373 = icmp ne i64 %return648, 0
  br i1 %373, label %true649, label %false650

true649:                                          ; preds = %false639
  %GMP652 = load %gemPrm, %gemPrm* %GMP
  %cpow653 = extractvalue %gemPrm %GMP652, 10
  %idx654 = load i64, i64* %idx
  %return655 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %cpow653, i64 %idx654)
  store <2 x double> %return27, <2 x double>* %155
  %w657 = load double, double* %w
  store double %w657, double* %156
  %return659 = call double @"getcomp@FVI"(<3 x double> %return655, i64 0)
  store double %return659, double* %157
  %return661 = call double @"getcomp@FVI"(<3 x double> %return655, i64 1)
  store double %return661, double* %158
  %return663 = call double @"getcomp@FVI"(<3 x double> %return655, i64 2)
  store double %return663, double* %159
  call void @"V_CPOW@UUFFFF"(<2 x double>* %p, <2 x double>* %155, double* %156, double* %157, double* %158, double* %159)
  %p664 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false650:                                         ; preds = %false639
  %return666 = call i64 @"eq@III"(i64 %T28, i64 58)
  %374 = icmp ne i64 %return666, 0
  br i1 %374, label %true667, label %false668

true667:                                          ; preds = %false650
  store <2 x double> %return27, <2 x double>* %160
  %w671 = load double, double* %w
  store double %w671, double* %161
  call void @"V_EDISC@UUF"(<2 x double>* %p, <2 x double>* %160, double* %161)
  %p672 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false668:                                         ; preds = %false650
  %return674 = call i64 @"eq@III"(i64 %T28, i64 59)
  %375 = icmp ne i64 %return674, 0
  br i1 %375, label %true675, label %false676

true675:                                          ; preds = %false668
  store <2 x double> %return27, <2 x double>* %162
  %w679 = load double, double* %w
  store double %w679, double* %163
  call void @"V_ELLIPTIC@UUF"(<2 x double>* %p, <2 x double>* %162, double* %163)
  %p680 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false676:                                         ; preds = %false668
  %return682 = call i64 @"eq@III"(i64 %T28, i64 60)
  %376 = icmp ne i64 %return682, 0
  br i1 %376, label %true683, label %false684

true683:                                          ; preds = %false676
  store <2 x double> %return27, <2 x double>* %164
  %w687 = load double, double* %w
  store double %w687, double* %165
  call void @"V_NOISE@UUF"(<2 x double>* %p, <2 x double>* %164, double* %165)
  %p688 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false684:                                         ; preds = %false676
  %return690 = call i64 @"eq@III"(i64 %T28, i64 61)
  %377 = icmp ne i64 %return690, 0
  br i1 %377, label %true691, label %false692

true691:                                          ; preds = %false684
  %GMP694 = load %gemPrm, %gemPrm* %GMP
  %escher_beta = extractvalue %gemPrm %GMP694, 3
  %idx695 = load i64, i64* %idx
  %return696 = call double @"getcomp@F[FI"(double* %escher_beta, i64 %idx695)
  store <2 x double> %return27, <2 x double>* %166
  %w698 = load double, double* %w
  store double %w698, double* %167
  store double %return696, double* %168
  call void @"V_ESCHER@UUFF"(<2 x double>* %p, <2 x double>* %166, double* %167, double* %168)
  %p700 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false692:                                         ; preds = %false684
  %return702 = call i64 @"eq@III"(i64 %T28, i64 62)
  %378 = icmp ne i64 %return702, 0
  br i1 %378, label %true703, label %false704

true703:                                          ; preds = %false692
  store <2 x double> %return27, <2 x double>* %169
  %w707 = load double, double* %w
  store double %w707, double* %170
  call void @"V_FOCI@UUF"(<2 x double>* %p, <2 x double>* %169, double* %170)
  %p708 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false704:                                         ; preds = %false692
  %return710 = call i64 @"eq@III"(i64 %T28, i64 63)
  %379 = icmp ne i64 %return710, 0
  br i1 %379, label %true711, label %false712

true711:                                          ; preds = %false704
  %GMP714 = load %gemPrm, %gemPrm* %GMP
  %lazysusan715 = extractvalue %gemPrm %GMP714, 11
  %idx716 = load i64, i64* %idx
  %return717 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %lazysusan715, i64 %idx716)
  %lazysusanxyz719 = extractvalue %gemPrm %GMP714, 18
  %return721 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %lazysusanxyz719, i64 %idx716)
  store <2 x double> %return27, <2 x double>* %171
  %w723 = load double, double* %w
  store double %w723, double* %172
  %return725 = call double @"getcomp@FVI"(<3 x double> %return717, i64 0)
  store double %return725, double* %173
  %return727 = call double @"getcomp@FVI"(<3 x double> %return717, i64 1)
  store double %return727, double* %174
  %return729 = call double @"getcomp@FVI"(<3 x double> %return717, i64 2)
  store double %return729, double* %175
  store <2 x double> %return721, <2 x double>* %176
  call void @"V_LAZYSUSAN@UUFFFFU"(<2 x double>* %p, <2 x double>* %171, double* %172, double* %173, double* %174, double* %175, <2 x double>* %176)
  %p731 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false712:                                         ; preds = %false704
  %return733 = call i64 @"eq@III"(i64 %T28, i64 64)
  %380 = icmp ne i64 %return733, 0
  br i1 %380, label %true734, label %false735

true734:                                          ; preds = %false712
  store <2 x double> %return27, <2 x double>* %177
  %w738 = load double, double* %w
  store double %w738, double* %178
  call void @"V_LOONIE@UUF"(<2 x double>* %p, <2 x double>* %177, double* %178)
  %p739 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false735:                                         ; preds = %false712
  %return741 = call i64 @"eq@III"(i64 %T28, i64 66)
  %381 = icmp ne i64 %return741, 0
  br i1 %381, label %true742, label %false743

true742:                                          ; preds = %false735
  %GMP745 = load %gemPrm, %gemPrm* %GMP
  %modulus = extractvalue %gemPrm %GMP745, 19
  %idx746 = load i64, i64* %idx
  %return747 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %modulus, i64 %idx746)
  store <2 x double> %return27, <2 x double>* %179
  %w749 = load double, double* %w
  store double %w749, double* %180
  store <2 x double> %return747, <2 x double>* %181
  call void @"V_MODULUS@UUFU"(<2 x double>* %p, <2 x double>* %179, double* %180, <2 x double>* %181)
  %p751 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false743:                                         ; preds = %false735
  %return753 = call i64 @"eq@III"(i64 %T28, i64 67)
  %382 = icmp ne i64 %return753, 0
  br i1 %382, label %true754, label %false755

true754:                                          ; preds = %false743
  %GMP757 = load %gemPrm, %gemPrm* %GMP
  %oscope758 = extractvalue %gemPrm %GMP757, 44
  %idx759 = load i64, i64* %idx
  %return760 = call <4 x double> @"getcomp@P[PI"(<4 x double>* %oscope758, i64 %idx759)
  store <2 x double> %return27, <2 x double>* %182
  %w762 = load double, double* %w
  store double %w762, double* %183
  %return764 = call double @"getcomp@FPI"(<4 x double> %return760, i64 0)
  store double %return764, double* %184
  %return766 = call double @"getcomp@FPI"(<4 x double> %return760, i64 1)
  store double %return766, double* %185
  %return768 = call double @"getcomp@FPI"(<4 x double> %return760, i64 2)
  store double %return768, double* %186
  %return770 = call double @"getcomp@FPI"(<4 x double> %return760, i64 3)
  store double %return770, double* %187
  call void @"V_OSCOPE@UUFFFFF"(<2 x double>* %p, <2 x double>* %182, double* %183, double* %184, double* %185, double* %186, double* %187)
  %p771 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false755:                                         ; preds = %false743
  %return773 = call i64 @"eq@III"(i64 %T28, i64 68)
  %383 = icmp ne i64 %return773, 0
  br i1 %383, label %true774, label %false775

true774:                                          ; preds = %false755
  store <2 x double> %return27, <2 x double>* %188
  %w778 = load double, double* %w
  store double %w778, double* %189
  call void @"V_POLAR2@UUF"(<2 x double>* %p, <2 x double>* %188, double* %189)
  %p779 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false775:                                         ; preds = %false755
  %return781 = call i64 @"eq@III"(i64 %T28, i64 69)
  %384 = icmp ne i64 %return781, 0
  br i1 %384, label %true782, label %end37

true782:                                          ; preds = %false775
  %GMP784 = load %gemPrm, %gemPrm* %GMP
  %popcorn2_c = extractvalue %gemPrm %GMP784, 4
  %idx785 = load i64, i64* %idx
  %return786 = call double @"getcomp@F[FI"(double* %popcorn2_c, i64 %idx785)
  %popcorn2 = extractvalue %gemPrm %GMP784, 20
  %return789 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %popcorn2, i64 %idx785)
  store <2 x double> %return27, <2 x double>* %190
  %w791 = load double, double* %w
  store double %w791, double* %191
  store double %return786, double* %192
  store <2 x double> %return789, <2 x double>* %193
  call void @"V_POPCORN2@UUFFU"(<2 x double>* %p, <2 x double>* %190, double* %191, double* %192, <2 x double>* %193)
  %p794 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true797:                                          ; preds = %false385
  %return800 = call i64 @"lt@III"(i64 %T28, i64 86)
  %385 = icmp ne i64 %return800, 0
  br i1 %385, label %true801, label %false802

true801:                                          ; preds = %true797
  %return805 = call i64 @"eq@III"(i64 %T28, i64 70)
  %386 = icmp ne i64 %return805, 0
  br i1 %386, label %true806, label %false807

false802:                                         ; preds = %true797
  %return1014 = call i64 @"eq@III"(i64 %T28, i64 86)
  %387 = icmp ne i64 %return1014, 0
  br i1 %387, label %true1015, label %false1016

true806:                                          ; preds = %true801
  store <2 x double> %return27, <2 x double>* %194
  %w810 = load double, double* %w
  store double %w810, double* %195
  call void @"V_SCRY@UUF"(<2 x double>* %p, <2 x double>* %194, double* %195)
  %p811 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false807:                                         ; preds = %true801
  %return813 = call i64 @"eq@III"(i64 %T28, i64 71)
  %388 = icmp ne i64 %return813, 0
  br i1 %388, label %true814, label %false815

true814:                                          ; preds = %false807
  %GMP817 = load %gemPrm, %gemPrm* %GMP
  %separation = extractvalue %gemPrm %GMP817, 21
  %idx818 = load i64, i64* %idx
  %return819 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %separation, i64 %idx818)
  %separation_inside = extractvalue %gemPrm %GMP817, 22
  %return822 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %separation_inside, i64 %idx818)
  store <2 x double> %return27, <2 x double>* %196
  %w824 = load double, double* %w
  store double %w824, double* %197
  store <2 x double> %return819, <2 x double>* %198
  store <2 x double> %return822, <2 x double>* %199
  call void @"V_SEPARATION@UUFUU"(<2 x double>* %p, <2 x double>* %196, double* %197, <2 x double>* %198, <2 x double>* %199)
  %p827 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false815:                                         ; preds = %false807
  %return829 = call i64 @"eq@III"(i64 %T28, i64 72)
  %389 = icmp ne i64 %return829, 0
  br i1 %389, label %true830, label %false831

true830:                                          ; preds = %false815
  %GMP833 = load %gemPrm, %gemPrm* %GMP
  %split834 = extractvalue %gemPrm %GMP833, 23
  %idx835 = load i64, i64* %idx
  %return836 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %split834, i64 %idx835)
  store <2 x double> %return27, <2 x double>* %200
  %w838 = load double, double* %w
  store double %w838, double* %201
  store <2 x double> %return836, <2 x double>* %202
  call void @"V_SPLIT@UUFU"(<2 x double>* %p, <2 x double>* %200, double* %201, <2 x double>* %202)
  %p840 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false831:                                         ; preds = %false815
  %return842 = call i64 @"eq@III"(i64 %T28, i64 73)
  %390 = icmp ne i64 %return842, 0
  br i1 %390, label %true843, label %false844

true843:                                          ; preds = %false831
  %GMP846 = load %gemPrm, %gemPrm* %GMP
  %splits847 = extractvalue %gemPrm %GMP846, 24
  %idx848 = load i64, i64* %idx
  %return849 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %splits847, i64 %idx848)
  store <2 x double> %return27, <2 x double>* %203
  %w851 = load double, double* %w
  store double %w851, double* %204
  store <2 x double> %return849, <2 x double>* %205
  call void @"V_SPLITS@UUFU"(<2 x double>* %p, <2 x double>* %203, double* %204, <2 x double>* %205)
  %p853 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false844:                                         ; preds = %false831
  %return855 = call i64 @"eq@III"(i64 %T28, i64 74)
  %391 = icmp ne i64 %return855, 0
  br i1 %391, label %true856, label %false857

true856:                                          ; preds = %false844
  %GMP859 = load %gemPrm, %gemPrm* %GMP
  %stripes860 = extractvalue %gemPrm %GMP859, 38
  %idx861 = load i64, i64* %idx
  %return862 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %stripes860, i64 %idx861)
  store <2 x double> %return27, <2 x double>* %206
  %w864 = load double, double* %w
  store double %w864, double* %207
  %return866 = call double @"getcomp@FUI"(<2 x double> %return862, i64 0)
  store double %return866, double* %208
  %return868 = call double @"getcomp@FUI"(<2 x double> %return862, i64 1)
  store double %return868, double* %209
  call void @"V_STRIPES@UUFFF"(<2 x double>* %p, <2 x double>* %206, double* %207, double* %208, double* %209)
  %p869 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false857:                                         ; preds = %false844
  %return871 = call i64 @"eq@III"(i64 %T28, i64 75)
  %392 = icmp ne i64 %return871, 0
  br i1 %392, label %true872, label %false873

true872:                                          ; preds = %false857
  %GMP875 = load %gemPrm, %gemPrm* %GMP
  %wedge876 = extractvalue %gemPrm %GMP875, 45
  %idx877 = load i64, i64* %idx
  %return878 = call <4 x double> @"getcomp@P[PI"(<4 x double>* %wedge876, i64 %idx877)
  store <2 x double> %return27, <2 x double>* %210
  %w880 = load double, double* %w
  store double %w880, double* %211
  %return882 = call double @"getcomp@FPI"(<4 x double> %return878, i64 0)
  store double %return882, double* %212
  %return884 = call double @"getcomp@FPI"(<4 x double> %return878, i64 1)
  store double %return884, double* %213
  %return886 = call double @"getcomp@FPI"(<4 x double> %return878, i64 2)
  store double %return886, double* %214
  %return888 = call double @"getcomp@FPI"(<4 x double> %return878, i64 3)
  store double %return888, double* %215
  call void @"V_WEDGE@UUFFFFF"(<2 x double>* %p, <2 x double>* %210, double* %211, double* %212, double* %213, double* %214, double* %215)
  %p889 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false873:                                         ; preds = %false857
  %return891 = call i64 @"eq@III"(i64 %T28, i64 76)
  %393 = icmp ne i64 %return891, 0
  br i1 %393, label %true892, label %false893

true892:                                          ; preds = %false873
  %GMP895 = load %gemPrm, %gemPrm* %GMP
  %wedgejulia896 = extractvalue %gemPrm %GMP895, 46
  %idx897 = load i64, i64* %idx
  %return898 = call <4 x double> @"getcomp@P[PI"(<4 x double>* %wedgejulia896, i64 %idx897)
  store <2 x double> %return27, <2 x double>* %216
  %w900 = load double, double* %w
  store double %w900, double* %217
  %return902 = call double @"getcomp@FPI"(<4 x double> %return898, i64 0)
  store double %return902, double* %218
  %return904 = call double @"getcomp@FPI"(<4 x double> %return898, i64 1)
  store double %return904, double* %219
  %return906 = call double @"getcomp@FPI"(<4 x double> %return898, i64 2)
  store double %return906, double* %220
  %return908 = call double @"getcomp@FPI"(<4 x double> %return898, i64 3)
  store double %return908, double* %221
  call void @"V_WEDGEJULIA@UUFFFFF"(<2 x double>* %p, <2 x double>* %216, double* %217, double* %218, double* %219, double* %220, double* %221)
  %p909 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false893:                                         ; preds = %false873
  %return911 = call i64 @"eq@III"(i64 %T28, i64 77)
  %394 = icmp ne i64 %return911, 0
  br i1 %394, label %true912, label %false913

true912:                                          ; preds = %false893
  %GMP915 = load %gemPrm, %gemPrm* %GMP
  %wedgesph916 = extractvalue %gemPrm %GMP915, 47
  %idx917 = load i64, i64* %idx
  %return918 = call <4 x double> @"getcomp@P[PI"(<4 x double>* %wedgesph916, i64 %idx917)
  store <2 x double> %return27, <2 x double>* %222
  %w920 = load double, double* %w
  store double %w920, double* %223
  %return922 = call double @"getcomp@FPI"(<4 x double> %return918, i64 0)
  store double %return922, double* %224
  %return924 = call double @"getcomp@FPI"(<4 x double> %return918, i64 1)
  store double %return924, double* %225
  %return926 = call double @"getcomp@FPI"(<4 x double> %return918, i64 2)
  store double %return926, double* %226
  %return928 = call double @"getcomp@FPI"(<4 x double> %return918, i64 3)
  store double %return928, double* %227
  call void @"V_WEDGESPH@UUFFFFF"(<2 x double>* %p, <2 x double>* %222, double* %223, double* %224, double* %225, double* %226, double* %227)
  %p929 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false913:                                         ; preds = %false893
  %return931 = call i64 @"eq@III"(i64 %T28, i64 78)
  %395 = icmp ne i64 %return931, 0
  br i1 %395, label %true932, label %false933

true932:                                          ; preds = %false913
  %GMP935 = load %gemPrm, %gemPrm* %GMP
  %whorl936 = extractvalue %gemPrm %GMP935, 39
  %idx937 = load i64, i64* %idx
  %return938 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %whorl936, i64 %idx937)
  store <2 x double> %return27, <2 x double>* %228
  %w940 = load double, double* %w
  store double %w940, double* %229
  %return942 = call double @"getcomp@FUI"(<2 x double> %return938, i64 0)
  store double %return942, double* %230
  %return944 = call double @"getcomp@FUI"(<2 x double> %return938, i64 1)
  store double %return944, double* %231
  call void @"V_WHORL@UUFFF"(<2 x double>* %p, <2 x double>* %228, double* %229, double* %230, double* %231)
  %p945 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false933:                                         ; preds = %false913
  %return947 = call i64 @"eq@III"(i64 %T28, i64 79)
  %396 = icmp ne i64 %return947, 0
  br i1 %396, label %true948, label %false949

true948:                                          ; preds = %false933
  %GMP951 = load %gemPrm, %gemPrm* %GMP
  %waves2_scale = extractvalue %gemPrm %GMP951, 25
  %idx952 = load i64, i64* %idx
  %return953 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %waves2_scale, i64 %idx952)
  %waves2_freq = extractvalue %gemPrm %GMP951, 26
  %return956 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %waves2_freq, i64 %idx952)
  store <2 x double> %return27, <2 x double>* %232
  %w958 = load double, double* %w
  store double %w958, double* %233
  store <2 x double> %return953, <2 x double>* %234
  store <2 x double> %return956, <2 x double>* %235
  call void @"V_WAVES2@UUFUU"(<2 x double>* %p, <2 x double>* %232, double* %233, <2 x double>* %234, <2 x double>* %235)
  %p961 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false949:                                         ; preds = %false933
  %return963 = call i64 @"eq@III"(i64 %T28, i64 80)
  %397 = icmp ne i64 %return963, 0
  br i1 %397, label %true964, label %false965

true964:                                          ; preds = %false949
  store <2 x double> %return27, <2 x double>* %236
  %w968 = load double, double* %w
  store double %w968, double* %237
  call void @"V_EXP@UUF"(<2 x double>* %p, <2 x double>* %236, double* %237)
  %p969 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false965:                                         ; preds = %false949
  %return971 = call i64 @"eq@III"(i64 %T28, i64 81)
  %398 = icmp ne i64 %return971, 0
  br i1 %398, label %true972, label %false973

true972:                                          ; preds = %false965
  store <2 x double> %return27, <2 x double>* %238
  %w976 = load double, double* %w
  store double %w976, double* %239
  call void @"V_LOG@UUF"(<2 x double>* %p, <2 x double>* %238, double* %239)
  %p977 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false973:                                         ; preds = %false965
  %return979 = call i64 @"eq@III"(i64 %T28, i64 82)
  %399 = icmp ne i64 %return979, 0
  br i1 %399, label %true980, label %false981

true980:                                          ; preds = %false973
  %f3c983 = load i64, i64* %f3c
  store i64 %f3c983, i64* %240
  store <2 x double> %return27, <2 x double>* %241
  %w985 = load double, double* %w
  store double %w985, double* %242
  call void @"V_SIN@IUUF"(i64* %240, <2 x double>* %p, <2 x double>* %241, double* %242)
  %p986 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false981:                                         ; preds = %false973
  %return988 = call i64 @"eq@III"(i64 %T28, i64 83)
  %400 = icmp ne i64 %return988, 0
  br i1 %400, label %true989, label %false990

true989:                                          ; preds = %false981
  %f3c992 = load i64, i64* %f3c
  store i64 %f3c992, i64* %243
  store <2 x double> %return27, <2 x double>* %244
  %w994 = load double, double* %w
  store double %w994, double* %245
  call void @"V_COS@IUUF"(i64* %243, <2 x double>* %p, <2 x double>* %244, double* %245)
  %p995 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false990:                                         ; preds = %false981
  %return997 = call i64 @"eq@III"(i64 %T28, i64 84)
  %401 = icmp ne i64 %return997, 0
  br i1 %401, label %true998, label %false999

true998:                                          ; preds = %false990
  %f3c1001 = load i64, i64* %f3c
  store i64 %f3c1001, i64* %246
  store <2 x double> %return27, <2 x double>* %247
  %w1003 = load double, double* %w
  store double %w1003, double* %248
  call void @"V_TAN@IUUF"(i64* %246, <2 x double>* %p, <2 x double>* %247, double* %248)
  %p1004 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false999:                                         ; preds = %false990
  %return1006 = call i64 @"eq@III"(i64 %T28, i64 85)
  %402 = icmp ne i64 %return1006, 0
  br i1 %402, label %true1007, label %end37

true1007:                                         ; preds = %false999
  %f3c1009 = load i64, i64* %f3c
  store i64 %f3c1009, i64* %249
  store <2 x double> %return27, <2 x double>* %250
  %w1011 = load double, double* %w
  store double %w1011, double* %251
  call void @"V_SEC@IUUF"(i64* %249, <2 x double>* %p, <2 x double>* %250, double* %251)
  %p1012 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true1015:                                         ; preds = %false802
  %f3c1018 = load i64, i64* %f3c
  store i64 %f3c1018, i64* %252
  store <2 x double> %return27, <2 x double>* %253
  %w1020 = load double, double* %w
  store double %w1020, double* %254
  call void @"V_CSC@IUUF"(i64* %252, <2 x double>* %p, <2 x double>* %253, double* %254)
  %p1021 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1016:                                        ; preds = %false802
  %return1023 = call i64 @"eq@III"(i64 %T28, i64 87)
  %403 = icmp ne i64 %return1023, 0
  br i1 %403, label %true1024, label %false1025

true1024:                                         ; preds = %false1016
  %f3c1027 = load i64, i64* %f3c
  store i64 %f3c1027, i64* %255
  store <2 x double> %return27, <2 x double>* %256
  %w1029 = load double, double* %w
  store double %w1029, double* %257
  call void @"V_COT@IUUF"(i64* %255, <2 x double>* %p, <2 x double>* %256, double* %257)
  %p1030 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1025:                                        ; preds = %false1016
  %return1032 = call i64 @"eq@III"(i64 %T28, i64 88)
  %404 = icmp ne i64 %return1032, 0
  br i1 %404, label %true1033, label %false1034

true1033:                                         ; preds = %false1025
  %f3c1036 = load i64, i64* %f3c
  store i64 %f3c1036, i64* %258
  store <2 x double> %return27, <2 x double>* %259
  %w1038 = load double, double* %w
  store double %w1038, double* %260
  call void @"V_SINH@IUUF"(i64* %258, <2 x double>* %p, <2 x double>* %259, double* %260)
  %p1039 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1034:                                        ; preds = %false1025
  %return1041 = call i64 @"eq@III"(i64 %T28, i64 89)
  %405 = icmp ne i64 %return1041, 0
  br i1 %405, label %true1042, label %false1043

true1042:                                         ; preds = %false1034
  %f3c1045 = load i64, i64* %f3c
  store i64 %f3c1045, i64* %261
  store <2 x double> %return27, <2 x double>* %262
  %w1047 = load double, double* %w
  store double %w1047, double* %263
  call void @"V_COSH@IUUF"(i64* %261, <2 x double>* %p, <2 x double>* %262, double* %263)
  %p1048 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1043:                                        ; preds = %false1034
  %return1050 = call i64 @"eq@III"(i64 %T28, i64 90)
  %406 = icmp ne i64 %return1050, 0
  br i1 %406, label %true1051, label %false1052

true1051:                                         ; preds = %false1043
  %f3c1054 = load i64, i64* %f3c
  store i64 %f3c1054, i64* %264
  store <2 x double> %return27, <2 x double>* %265
  %w1056 = load double, double* %w
  store double %w1056, double* %266
  call void @"V_TANH@IUUF"(i64* %264, <2 x double>* %p, <2 x double>* %265, double* %266)
  %p1057 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1052:                                        ; preds = %false1043
  %return1059 = call i64 @"eq@III"(i64 %T28, i64 91)
  %407 = icmp ne i64 %return1059, 0
  br i1 %407, label %true1060, label %false1061

true1060:                                         ; preds = %false1052
  %f3c1063 = load i64, i64* %f3c
  store i64 %f3c1063, i64* %267
  store <2 x double> %return27, <2 x double>* %268
  %w1065 = load double, double* %w
  store double %w1065, double* %269
  call void @"V_SECH@IUUF"(i64* %267, <2 x double>* %p, <2 x double>* %268, double* %269)
  %p1066 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1061:                                        ; preds = %false1052
  %return1068 = call i64 @"eq@III"(i64 %T28, i64 92)
  %408 = icmp ne i64 %return1068, 0
  br i1 %408, label %true1069, label %false1070

true1069:                                         ; preds = %false1061
  %f3c1072 = load i64, i64* %f3c
  store i64 %f3c1072, i64* %270
  store <2 x double> %return27, <2 x double>* %271
  %w1074 = load double, double* %w
  store double %w1074, double* %272
  call void @"V_CSCH@IUUF"(i64* %270, <2 x double>* %p, <2 x double>* %271, double* %272)
  %p1075 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1070:                                        ; preds = %false1061
  %return1077 = call i64 @"eq@III"(i64 %T28, i64 93)
  %409 = icmp ne i64 %return1077, 0
  br i1 %409, label %true1078, label %false1079

true1078:                                         ; preds = %false1070
  %f3c1081 = load i64, i64* %f3c
  store i64 %f3c1081, i64* %273
  store <2 x double> %return27, <2 x double>* %274
  %w1083 = load double, double* %w
  store double %w1083, double* %275
  call void @"V_COTH@IUUF"(i64* %273, <2 x double>* %p, <2 x double>* %274, double* %275)
  %p1084 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1079:                                        ; preds = %false1070
  %return1086 = call i64 @"eq@III"(i64 %T28, i64 94)
  %410 = icmp ne i64 %return1086, 0
  br i1 %410, label %true1087, label %false1088

true1087:                                         ; preds = %false1079
  %GMP1090 = load %gemPrm, %gemPrm* %GMP
  %auger1091 = extractvalue %gemPrm %GMP1090, 48
  %idx1092 = load i64, i64* %idx
  %return1093 = call <4 x double> @"getcomp@P[PI"(<4 x double>* %auger1091, i64 %idx1092)
  store <2 x double> %return27, <2 x double>* %276
  %w1095 = load double, double* %w
  store double %w1095, double* %277
  %return1097 = call double @"getcomp@FPI"(<4 x double> %return1093, i64 0)
  store double %return1097, double* %278
  %return1099 = call double @"getcomp@FPI"(<4 x double> %return1093, i64 1)
  store double %return1099, double* %279
  %return1101 = call double @"getcomp@FPI"(<4 x double> %return1093, i64 2)
  store double %return1101, double* %280
  %return1103 = call double @"getcomp@FPI"(<4 x double> %return1093, i64 3)
  store double %return1103, double* %281
  call void @"V_AUGER@UUFFFFF"(<2 x double>* %p, <2 x double>* %276, double* %277, double* %278, double* %279, double* %280, double* %281)
  %p1104 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1088:                                        ; preds = %false1079
  %return1106 = call i64 @"eq@III"(i64 %T28, i64 95)
  %411 = icmp ne i64 %return1106, 0
  br i1 %411, label %true1107, label %false1108

true1107:                                         ; preds = %false1088
  %GMP1110 = load %gemPrm, %gemPrm* %GMP
  %flux_spread = extractvalue %gemPrm %GMP1110, 5
  %idx1111 = load i64, i64* %idx
  %return1112 = call double @"getcomp@F[FI"(double* %flux_spread, i64 %idx1111)
  store <2 x double> %return27, <2 x double>* %282
  %w1114 = load double, double* %w
  store double %w1114, double* %283
  store double %return1112, double* %284
  call void @"V_FLUX@UUFF"(<2 x double>* %p, <2 x double>* %282, double* %283, double* %284)
  %p1116 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1108:                                        ; preds = %false1088
  %return1118 = call i64 @"eq@III"(i64 %T28, i64 96)
  %412 = icmp ne i64 %return1118, 0
  br i1 %412, label %true1119, label %false1120

true1119:                                         ; preds = %false1108
  %GMP1122 = load %gemPrm, %gemPrm* %GMP
  %mobius_re = extractvalue %gemPrm %GMP1122, 49
  %idx1123 = load i64, i64* %idx
  %return1124 = call <4 x double> @"getcomp@P[PI"(<4 x double>* %mobius_re, i64 %idx1123)
  %mobius_im = extractvalue %gemPrm %GMP1122, 50
  %return1127 = call <4 x double> @"getcomp@P[PI"(<4 x double>* %mobius_im, i64 %idx1123)
  store <2 x double> %return27, <2 x double>* %285
  %w1129 = load double, double* %w
  store double %w1129, double* %286
  store <4 x double> %return1124, <4 x double>* %287
  store <4 x double> %return1127, <4 x double>* %288
  call void @"V_MOBIUS@UUFPP"(<2 x double>* %p, <2 x double>* %285, double* %286, <4 x double>* %287, <4 x double>* %288)
  %p1132 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1120:                                        ; preds = %false1108
  %return1134 = call i64 @"eq@III"(i64 %T28, i64 97)
  %413 = icmp ne i64 %return1134, 0
  br i1 %413, label %true1135, label %false1136

true1135:                                         ; preds = %false1120
  %GMP1138 = load %gemPrm, %gemPrm* %GMP
  %curve_lenght = extractvalue %gemPrm %GMP1138, 27
  %idx1139 = load i64, i64* %idx
  %return1140 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %curve_lenght, i64 %idx1139)
  %curve_amp = extractvalue %gemPrm %GMP1138, 28
  %return1143 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %curve_amp, i64 %idx1139)
  store <2 x double> %return27, <2 x double>* %289
  %w1145 = load double, double* %w
  store double %w1145, double* %290
  store <2 x double> %return1140, <2 x double>* %291
  store <2 x double> %return1143, <2 x double>* %292
  call void @"V_CURVE@UUFUU"(<2 x double>* %p, <2 x double>* %289, double* %290, <2 x double>* %291, <2 x double>* %292)
  %p1148 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1136:                                        ; preds = %false1120
  %return1150 = call i64 @"eq@III"(i64 %T28, i64 98)
  %414 = icmp ne i64 %return1150, 0
  br i1 %414, label %true1151, label %false1152

true1151:                                         ; preds = %false1136
  %GMP1154 = load %gemPrm, %gemPrm* %GMP
  %persp1155 = extractvalue %gemPrm %GMP1154, 40
  %idx1156 = load i64, i64* %idx
  %return1157 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %persp1155, i64 %idx1156)
  store <2 x double> %return27, <2 x double>* %293
  %w1159 = load double, double* %w
  store double %w1159, double* %294
  %return1161 = call double @"getcomp@FUI"(<2 x double> %return1157, i64 0)
  store double %return1161, double* %295
  %return1163 = call double @"getcomp@FUI"(<2 x double> %return1157, i64 1)
  store double %return1163, double* %296
  call void @"V_PERSPECTIVE@UUFFF"(<2 x double>* %p, <2 x double>* %293, double* %294, double* %295, double* %296)
  %p1164 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1152:                                        ; preds = %false1136
  %return1166 = call i64 @"eq@III"(i64 %T28, i64 99)
  %415 = icmp ne i64 %return1166, 0
  br i1 %415, label %true1167, label %false1168

true1167:                                         ; preds = %false1152
  %GMP1170 = load %gemPrm, %gemPrm* %GMP
  %bwraps1171 = extractvalue %gemPrm %GMP1170, 12
  %idx1172 = load i64, i64* %idx
  %return1173 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %bwraps1171, i64 %idx1172)
  %bwrapstwist1175 = extractvalue %gemPrm %GMP1170, 41
  %return1177 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %bwrapstwist1175, i64 %idx1172)
  store <2 x double> %return27, <2 x double>* %297
  %w1179 = load double, double* %w
  store double %w1179, double* %298
  %return1181 = call double @"getcomp@FVI"(<3 x double> %return1173, i64 0)
  store double %return1181, double* %299
  %return1183 = call double @"getcomp@FVI"(<3 x double> %return1173, i64 1)
  store double %return1183, double* %300
  %return1185 = call double @"getcomp@FVI"(<3 x double> %return1173, i64 2)
  store double %return1185, double* %301
  %return1187 = call double @"getcomp@FUI"(<2 x double> %return1177, i64 0)
  store double %return1187, double* %302
  %return1189 = call double @"getcomp@FUI"(<2 x double> %return1177, i64 1)
  store double %return1189, double* %303
  call void @"V_BWRAPS@UUFFFFFF"(<2 x double>* %p, <2 x double>* %297, double* %298, double* %299, double* %300, double* %301, double* %302, double* %303)
  %p1190 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1168:                                        ; preds = %false1152
  %return1192 = call i64 @"eq@III"(i64 %T28, i64 100)
  %416 = icmp ne i64 %return1192, 0
  br i1 %416, label %true1193, label %false1194

true1193:                                         ; preds = %false1168
  store <2 x double> %return27, <2 x double>* %304
  %w1197 = load double, double* %w
  store double %w1197, double* %305
  call void @"V_HEMISPHERE@UUF"(<2 x double>* %p, <2 x double>* %304, double* %305)
  %p1198 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1194:                                        ; preds = %false1168
  %return1200 = call i64 @"eq@III"(i64 %T28, i64 101)
  %417 = icmp ne i64 %return1200, 0
  br i1 %417, label %true1201, label %end37

true1201:                                         ; preds = %false1194
  %GMP1203 = load %gemPrm, %gemPrm* %GMP
  %polynomial_pow = extractvalue %gemPrm %GMP1203, 29
  %idx1204 = load i64, i64* %idx
  %return1205 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %polynomial_pow, i64 %idx1204)
  %polynomial_lc = extractvalue %gemPrm %GMP1203, 30
  %return1208 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %polynomial_lc, i64 %idx1204)
  %polynomial_sc = extractvalue %gemPrm %GMP1203, 31
  %return1211 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %polynomial_sc, i64 %idx1204)
  store <2 x double> %return27, <2 x double>* %306
  %w1213 = load double, double* %w
  store double %w1213, double* %307
  store <2 x double> %return1205, <2 x double>* %308
  store <2 x double> %return1208, <2 x double>* %309
  store <2 x double> %return1211, <2 x double>* %310
  call void @"V_POLYNOMIAL@UUFUUU"(<2 x double>* %p, <2 x double>* %306, double* %307, <2 x double>* %308, <2 x double>* %309, <2 x double>* %310)
  %p1217 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %true1201, %true1193, %true1167, %true1151, %true1135, %true1119, %true1107, %true1087, %true1078, %true1069, %true1060, %true1051, %true1042, %true1033, %true1024, %true1015, %true1007, %true998, %true989, %true980, %true972, %true964, %true948, %true932, %true912, %true892, %true872, %true856, %true843, %true830, %true814, %true806, %true782, %true774, %true754, %true742, %true734, %true711, %true703, %true691, %true683, %true675, %true667, %true649, %true638, %true630, %true622, %true610, %true597, %true581, %true565, %true550, %true529, %true513, %true505, %true497, %true489, %true481, %true473, %true466, %true458, %true451, %true434, %true418, %true406, %true394, %true372, %true365, %true349, %true333, %true315, %true303, %true283, %true267, %true260, %true252, %true244, %true236, %true226, %true216, %true208, %true200, %true192, %true181, %true173, %true157, %true149, %true141, %true133, %true125, %true117, %true109, %true101, %true93, %true85, %true77, %true69, %true61, %true53, %true45, %end37, %true
  %UnifiedRetVal = phi <2 x double> [ %output32, %true ], [ %return27, %end37 ], [ %p50, %true45 ], [ %p58, %true53 ], [ %p66, %true61 ], [ %p74, %true69 ], [ %p82, %true77 ], [ %p90, %true85 ], [ %p98, %true93 ], [ %p106, %true101 ], [ %p114, %true109 ], [ %p122, %true117 ], [ %p130, %true125 ], [ %p138, %true133 ], [ %p146, %true141 ], [ %p154, %true149 ], [ %p170, %true157 ], [ %p178, %true173 ], [ %p189, %true181 ], [ %p197, %true192 ], [ %p205, %true200 ], [ %p213, %true208 ], [ %p223, %true216 ], [ %p233, %true226 ], [ %p241, %true236 ], [ %p249, %true244 ], [ %p257, %true252 ], [ %p264, %true260 ], [ %p280, %true267 ], [ %p300, %true283 ], [ %p312, %true303 ], [ %p330, %true315 ], [ %p346, %true333 ], [ %p362, %true349 ], [ %p369, %true365 ], [ %p381, %true372 ], [ %p403, %true394 ], [ %p415, %true406 ], [ %p431, %true418 ], [ %p448, %true434 ], [ %p455, %true451 ], [ %p463, %true458 ], [ %p470, %true466 ], [ %p478, %true473 ], [ %p486, %true481 ], [ %p494, %true489 ], [ %p502, %true497 ], [ %p510, %true505 ], [ %p526, %true513 ], [ %p547, %true529 ], [ %p562, %true550 ], [ %p578, %true565 ], [ %p594, %true581 ], [ %p607, %true597 ], [ %p619, %true610 ], [ %p627, %true622 ], [ %p635, %true630 ], [ %p646, %true638 ], [ %p664, %true649 ], [ %p672, %true667 ], [ %p680, %true675 ], [ %p688, %true683 ], [ %p700, %true691 ], [ %p708, %true703 ], [ %p731, %true711 ], [ %p739, %true734 ], [ %p751, %true742 ], [ %p771, %true754 ], [ %p779, %true774 ], [ %p794, %true782 ], [ %p811, %true806 ], [ %p827, %true814 ], [ %p840, %true830 ], [ %p853, %true843 ], [ %p869, %true856 ], [ %p889, %true872 ], [ %p909, %true892 ], [ %p929, %true912 ], [ %p945, %true932 ], [ %p961, %true948 ], [ %p969, %true964 ], [ %p977, %true972 ], [ %p986, %true980 ], [ %p995, %true989 ], [ %p1004, %true998 ], [ %p1012, %true1007 ], [ %p1021, %true1015 ], [ %p1030, %true1024 ], [ %p1039, %true1033 ], [ %p1048, %true1042 ], [ %p1057, %true1051 ], [ %p1066, %true1060 ], [ %p1075, %true1069 ], [ %p1084, %true1078 ], [ %p1104, %true1087 ], [ %p1116, %true1107 ], [ %p1132, %true1119 ], [ %p1148, %true1135 ], [ %p1164, %true1151 ], [ %p1190, %true1167 ], [ %p1198, %true1193 ], [ %p1217, %true1201 ]
  ret <2 x double> %UnifiedRetVal
}

; Function Attrs: nounwind readnone
declare <2 x double> @"mul@UU"(<2 x double>, <2 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @"getcomp@P[PI"(<4 x double>*, i64) #1

; Function Attrs: nounwind readnone
declare <3 x double> @"getcomp@V[VI"(<3 x double>*, i64) #1

; Function Attrs: alwaysinline nounwind
define private <2 x double> @"FLAMEFF@USIIUUUUF"(i8** %prx, i64* %T, i64* %f3c, <2 x double>* %pos, <2 x double>* %x, <2 x double>* %y, <2 x double>* %o, double* %w) #0 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca double
  %2 = alloca <2 x double>
  %3 = alloca double
  %4 = alloca <2 x double>
  %5 = alloca double
  %6 = alloca <2 x double>
  %7 = alloca double
  %8 = alloca <2 x double>
  %9 = alloca double
  %10 = alloca <2 x double>
  %11 = alloca double
  %12 = alloca <2 x double>
  %13 = alloca double
  %14 = alloca <2 x double>
  %15 = alloca double
  %16 = alloca <2 x double>
  %17 = alloca double
  %18 = alloca <2 x double>
  %19 = alloca double
  %20 = alloca <2 x double>
  %21 = alloca double
  %22 = alloca <2 x double>
  %23 = alloca double
  %24 = alloca <2 x double>
  %25 = alloca double
  %26 = alloca <2 x double>
  %27 = alloca double
  %28 = alloca <2 x double>
  %29 = alloca double
  %30 = alloca double
  %31 = alloca double
  %32 = alloca double
  %33 = alloca double
  %34 = alloca <2 x double>
  %35 = alloca double
  %36 = alloca <2 x double>
  %37 = alloca double
  %38 = alloca double
  %39 = alloca double
  %40 = alloca <2 x double>
  %41 = alloca double
  %42 = alloca <2 x double>
  %43 = alloca double
  %44 = alloca <2 x double>
  %45 = alloca double
  %46 = alloca <2 x double>
  %47 = alloca double
  %48 = alloca double
  %49 = alloca <2 x double>
  %50 = alloca double
  %51 = alloca double
  %52 = alloca <2 x double>
  %53 = alloca double
  %54 = alloca <2 x double>
  %55 = alloca double
  %56 = alloca <2 x double>
  %57 = alloca double
  %58 = alloca double
  %59 = alloca <2 x double>
  %60 = alloca double
  %61 = alloca double
  %62 = alloca double
  %63 = alloca <2 x double>
  %64 = alloca double
  %65 = alloca double
  %66 = alloca double
  %67 = alloca double
  %68 = alloca double
  %69 = alloca <2 x double>
  %70 = alloca double
  %71 = alloca <4 x double>
  %72 = alloca <2 x double>
  %73 = alloca double
  %74 = alloca double
  %75 = alloca double
  %76 = alloca double
  %77 = alloca <2 x double>
  %78 = alloca double
  %79 = alloca double
  %80 = alloca double
  %81 = alloca <2 x double>
  %82 = alloca double
  %83 = alloca double
  %84 = alloca double
  %85 = alloca double
  %86 = alloca <2 x double>
  %87 = alloca double
  %88 = alloca <2 x double>
  %89 = alloca <2 x double>
  %90 = alloca double
  %91 = alloca double
  %92 = alloca <2 x double>
  %93 = alloca double
  %94 = alloca <2 x double>
  %95 = alloca <2 x double>
  %96 = alloca double
  %97 = alloca double
  %98 = alloca double
  %99 = alloca double
  %100 = alloca double
  %101 = alloca double
  %102 = alloca double
  %103 = alloca <2 x double>
  %104 = alloca double
  %105 = alloca <2 x double>
  %106 = alloca double
  %107 = alloca <2 x double>
  %108 = alloca double
  %109 = alloca <2 x double>
  %110 = alloca double
  %111 = alloca <2 x double>
  %112 = alloca double
  %113 = alloca <2 x double>
  %114 = alloca double
  %115 = alloca <2 x double>
  %116 = alloca double
  %117 = alloca <2 x double>
  %118 = alloca double
  %119 = alloca <2 x double>
  %120 = alloca double
  %121 = alloca double
  %122 = alloca double
  %123 = alloca <2 x double>
  %124 = alloca double
  %125 = alloca double
  %126 = alloca double
  %127 = alloca double
  %128 = alloca <3 x double>
  %129 = alloca <2 x double>
  %130 = alloca double
  %131 = alloca double
  %132 = alloca double
  %133 = alloca <2 x double>
  %134 = alloca double
  %135 = alloca double
  %136 = alloca double
  %137 = alloca <2 x double>
  %138 = alloca double
  %139 = alloca double
  %140 = alloca double
  %141 = alloca <2 x double>
  %142 = alloca double
  %143 = alloca <2 x double>
  %144 = alloca <2 x double>
  %145 = alloca double
  %146 = alloca double
  %147 = alloca <2 x double>
  %148 = alloca double
  %149 = alloca <2 x double>
  %150 = alloca double
  %151 = alloca <2 x double>
  %152 = alloca double
  %153 = alloca double
  %154 = alloca <2 x double>
  %155 = alloca double
  %156 = alloca double
  %157 = alloca double
  %158 = alloca double
  %159 = alloca <2 x double>
  %160 = alloca double
  %161 = alloca <2 x double>
  %162 = alloca double
  %163 = alloca <2 x double>
  %164 = alloca double
  %165 = alloca <2 x double>
  %166 = alloca double
  %167 = alloca double
  %168 = alloca <2 x double>
  %169 = alloca double
  %170 = alloca <2 x double>
  %171 = alloca double
  %172 = alloca double
  %173 = alloca double
  %174 = alloca double
  %175 = alloca <2 x double>
  %176 = alloca <2 x double>
  %177 = alloca double
  %178 = alloca <2 x double>
  %179 = alloca double
  %180 = alloca <2 x double>
  %181 = alloca <2 x double>
  %182 = alloca double
  %183 = alloca double
  %184 = alloca double
  %185 = alloca double
  %186 = alloca double
  %187 = alloca <2 x double>
  %188 = alloca double
  %189 = alloca <2 x double>
  %190 = alloca double
  %191 = alloca double
  %192 = alloca <2 x double>
  %193 = alloca <2 x double>
  %194 = alloca double
  %195 = alloca <2 x double>
  %196 = alloca double
  %197 = alloca <2 x double>
  %198 = alloca <2 x double>
  %199 = alloca <2 x double>
  %200 = alloca double
  %201 = alloca <2 x double>
  %202 = alloca <2 x double>
  %203 = alloca double
  %204 = alloca <2 x double>
  %205 = alloca <2 x double>
  %206 = alloca double
  %207 = alloca double
  %208 = alloca double
  %209 = alloca <2 x double>
  %210 = alloca double
  %211 = alloca double
  %212 = alloca double
  %213 = alloca double
  %214 = alloca double
  %215 = alloca <2 x double>
  %216 = alloca double
  %217 = alloca double
  %218 = alloca double
  %219 = alloca double
  %220 = alloca double
  %221 = alloca <2 x double>
  %222 = alloca double
  %223 = alloca double
  %224 = alloca double
  %225 = alloca double
  %226 = alloca double
  %227 = alloca <2 x double>
  %228 = alloca double
  %229 = alloca double
  %230 = alloca double
  %231 = alloca <2 x double>
  %232 = alloca double
  %233 = alloca <2 x double>
  %234 = alloca <2 x double>
  %235 = alloca <2 x double>
  %236 = alloca double
  %237 = alloca <2 x double>
  %238 = alloca double
  %239 = alloca i64
  %240 = alloca <2 x double>
  %241 = alloca double
  %242 = alloca i64
  %243 = alloca <2 x double>
  %244 = alloca double
  %245 = alloca i64
  %246 = alloca <2 x double>
  %247 = alloca double
  %248 = alloca i64
  %249 = alloca <2 x double>
  %250 = alloca double
  %251 = alloca i64
  %252 = alloca <2 x double>
  %253 = alloca double
  %254 = alloca i64
  %255 = alloca <2 x double>
  %256 = alloca double
  %257 = alloca i64
  %258 = alloca <2 x double>
  %259 = alloca double
  %260 = alloca i64
  %261 = alloca <2 x double>
  %262 = alloca double
  %263 = alloca i64
  %264 = alloca <2 x double>
  %265 = alloca double
  %266 = alloca i64
  %267 = alloca <2 x double>
  %268 = alloca double
  %269 = alloca i64
  %270 = alloca <2 x double>
  %271 = alloca double
  %272 = alloca i64
  %273 = alloca <2 x double>
  %274 = alloca double
  %275 = alloca <2 x double>
  %276 = alloca double
  %277 = alloca double
  %278 = alloca double
  %279 = alloca double
  %280 = alloca double
  %281 = alloca <2 x double>
  %282 = alloca double
  %283 = alloca double
  %284 = alloca <2 x double>
  %285 = alloca double
  %286 = alloca <4 x double>
  %287 = alloca <4 x double>
  %288 = alloca <2 x double>
  %289 = alloca double
  %290 = alloca <2 x double>
  %291 = alloca <2 x double>
  %292 = alloca <2 x double>
  %293 = alloca double
  %294 = alloca double
  %295 = alloca double
  %296 = alloca <2 x double>
  %297 = alloca double
  %298 = alloca double
  %299 = alloca double
  %300 = alloca double
  %301 = alloca double
  %302 = alloca double
  %303 = alloca <2 x double>
  %304 = alloca double
  %305 = alloca <2 x double>
  %306 = alloca double
  %307 = alloca <2 x double>
  %308 = alloca <2 x double>
  %309 = alloca <2 x double>
  %p = alloca <2 x double>
  store <2 x double> zeroinitializer, <2 x double>* %p, !vex-initializer-store !3
  %x1 = load <2 x double>, <2 x double>* %x
  %return = call double @"getcomp@FUI"(<2 x double> %x1, i64 0)
  %pos2 = load <2 x double>, <2 x double>* %pos
  %return3 = call double @"getcomp@FUI"(<2 x double> %pos2, i64 0)
  %output = fmul double %return, %return3
  %y4 = load <2 x double>, <2 x double>* %y
  %return5 = call double @"getcomp@FUI"(<2 x double> %y4, i64 0)
  %return7 = call double @"getcomp@FUI"(<2 x double> %pos2, i64 1)
  %output8 = fmul double %return5, %return7
  %output9 = fadd double %output, %output8
  %o10 = load <2 x double>, <2 x double>* %o
  %return11 = call double @"getcomp@FUI"(<2 x double> %o10, i64 0)
  %output12 = fadd double %output9, %return11
  %return14 = call double @"getcomp@FUI"(<2 x double> %x1, i64 1)
  %output17 = fmul double %return14, %return3
  %return19 = call double @"getcomp@FUI"(<2 x double> %y4, i64 1)
  %output22 = fmul double %return19, %return7
  %output23 = fadd double %output17, %output22
  %return25 = call double @"getcomp@FUI"(<2 x double> %o10, i64 1)
  %output26 = fadd double %output23, %return25
  %return27 = call <2 x double> @"set@UFF"(double %output12, double %output26)
  %T28 = load i64, i64* %T
  %return29 = call i64 @"not@II"(i64 %T28)
  %310 = icmp ne i64 %return29, 0
  br i1 %310, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %w31 = load double, double* %w
  %cast = call <2 x double> @"set@UF"(double %w31)
  %output32 = call <2 x double> @"mul@UU"(<2 x double> %return27, <2 x double> %cast)
  br label %UnifiedReturnBlock

false:                                            ; preds = %__llvm_entry
  %return34 = call i64 @"lt@III"(i64 %T28, i64 35)
  %311 = icmp ne i64 %return34, 0
  br i1 %311, label %true35, label %false36

true35:                                           ; preds = %false
  %return39 = call i64 @"lt@III"(i64 %T28, i64 18)
  %312 = icmp ne i64 %return39, 0
  br i1 %312, label %true40, label %false41

false36:                                          ; preds = %false
  %return377 = call i64 @"lt@III"(i64 %T28, i64 70)
  %313 = icmp ne i64 %return377, 0
  br i1 %313, label %true378, label %false379

end37:                                            ; preds = %false1166, %false975, %false379, %false758, %false521, %false361, %false174
  br label %UnifiedReturnBlock

true40:                                           ; preds = %true35
  %return44 = call i64 @"eq@III"(i64 %T28, i64 1)
  %314 = icmp ne i64 %return44, 0
  br i1 %314, label %true45, label %false46

false41:                                          ; preds = %true35
  %return191 = call i64 @"eq@III"(i64 %T28, i64 18)
  %315 = icmp ne i64 %return191, 0
  br i1 %315, label %true192, label %false193

true45:                                           ; preds = %true40
  store <2 x double> %return27, <2 x double>* %0
  %w49 = load double, double* %w
  store double %w49, double* %1
  call void @"V_SINUSOIDAL@UUF"(<2 x double>* %p, <2 x double>* %0, double* %1)
  %p50 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false46:                                          ; preds = %true40
  %return52 = call i64 @"eq@III"(i64 %T28, i64 2)
  %316 = icmp ne i64 %return52, 0
  br i1 %316, label %true53, label %false54

true53:                                           ; preds = %false46
  store <2 x double> %return27, <2 x double>* %2
  %w57 = load double, double* %w
  store double %w57, double* %3
  call void @"V_SPHERICAL@UUF"(<2 x double>* %p, <2 x double>* %2, double* %3)
  %p58 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false54:                                          ; preds = %false46
  %return60 = call i64 @"eq@III"(i64 %T28, i64 3)
  %317 = icmp ne i64 %return60, 0
  br i1 %317, label %true61, label %false62

true61:                                           ; preds = %false54
  store <2 x double> %return27, <2 x double>* %4
  %w65 = load double, double* %w
  store double %w65, double* %5
  call void @"V_SWIRL@UUF"(<2 x double>* %p, <2 x double>* %4, double* %5)
  %p66 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false62:                                          ; preds = %false54
  %return68 = call i64 @"eq@III"(i64 %T28, i64 4)
  %318 = icmp ne i64 %return68, 0
  br i1 %318, label %true69, label %false70

true69:                                           ; preds = %false62
  store <2 x double> %return27, <2 x double>* %6
  %w73 = load double, double* %w
  store double %w73, double* %7
  call void @"V_HORSESHOE@UUF"(<2 x double>* %p, <2 x double>* %6, double* %7)
  %p74 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false70:                                          ; preds = %false62
  %return76 = call i64 @"eq@III"(i64 %T28, i64 5)
  %319 = icmp ne i64 %return76, 0
  br i1 %319, label %true77, label %false78

true77:                                           ; preds = %false70
  store <2 x double> %return27, <2 x double>* %8
  %w81 = load double, double* %w
  store double %w81, double* %9
  call void @"V_POLAR@UUF"(<2 x double>* %p, <2 x double>* %8, double* %9)
  %p82 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false78:                                          ; preds = %false70
  %return84 = call i64 @"eq@III"(i64 %T28, i64 6)
  %320 = icmp ne i64 %return84, 0
  br i1 %320, label %true85, label %false86

true85:                                           ; preds = %false78
  store <2 x double> %return27, <2 x double>* %10
  %w89 = load double, double* %w
  store double %w89, double* %11
  call void @"V_HANDKERCHIEF@UUF"(<2 x double>* %p, <2 x double>* %10, double* %11)
  %p90 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false86:                                          ; preds = %false78
  %return92 = call i64 @"eq@III"(i64 %T28, i64 7)
  %321 = icmp ne i64 %return92, 0
  br i1 %321, label %true93, label %false94

true93:                                           ; preds = %false86
  store <2 x double> %return27, <2 x double>* %12
  %w97 = load double, double* %w
  store double %w97, double* %13
  call void @"V_HEART@UUF"(<2 x double>* %p, <2 x double>* %12, double* %13)
  %p98 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false94:                                          ; preds = %false86
  %return100 = call i64 @"eq@III"(i64 %T28, i64 8)
  %322 = icmp ne i64 %return100, 0
  br i1 %322, label %true101, label %false102

true101:                                          ; preds = %false94
  store <2 x double> %return27, <2 x double>* %14
  %w105 = load double, double* %w
  store double %w105, double* %15
  call void @"V_DISC@UUF"(<2 x double>* %p, <2 x double>* %14, double* %15)
  %p106 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false102:                                         ; preds = %false94
  %return108 = call i64 @"eq@III"(i64 %T28, i64 9)
  %323 = icmp ne i64 %return108, 0
  br i1 %323, label %true109, label %false110

true109:                                          ; preds = %false102
  store <2 x double> %return27, <2 x double>* %16
  %w113 = load double, double* %w
  store double %w113, double* %17
  call void @"V_SPIRAL@UUF"(<2 x double>* %p, <2 x double>* %16, double* %17)
  %p114 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false110:                                         ; preds = %false102
  %return116 = call i64 @"eq@III"(i64 %T28, i64 10)
  %324 = icmp ne i64 %return116, 0
  br i1 %324, label %true117, label %false118

true117:                                          ; preds = %false110
  store <2 x double> %return27, <2 x double>* %18
  %w121 = load double, double* %w
  store double %w121, double* %19
  call void @"V_HIPERBOLIC@UUF"(<2 x double>* %p, <2 x double>* %18, double* %19)
  %p122 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false118:                                         ; preds = %false110
  %return124 = call i64 @"eq@III"(i64 %T28, i64 11)
  %325 = icmp ne i64 %return124, 0
  br i1 %325, label %true125, label %false126

true125:                                          ; preds = %false118
  store <2 x double> %return27, <2 x double>* %20
  %w129 = load double, double* %w
  store double %w129, double* %21
  call void @"V_DIAMOND@UUF"(<2 x double>* %p, <2 x double>* %20, double* %21)
  %p130 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false126:                                         ; preds = %false118
  %return132 = call i64 @"eq@III"(i64 %T28, i64 12)
  %326 = icmp ne i64 %return132, 0
  br i1 %326, label %true133, label %false134

true133:                                          ; preds = %false126
  store <2 x double> %return27, <2 x double>* %22
  %w137 = load double, double* %w
  store double %w137, double* %23
  call void @"V_EX@UUF"(<2 x double>* %p, <2 x double>* %22, double* %23)
  %p138 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false134:                                         ; preds = %false126
  %return140 = call i64 @"eq@III"(i64 %T28, i64 13)
  %327 = icmp ne i64 %return140, 0
  br i1 %327, label %true141, label %false142

true141:                                          ; preds = %false134
  store <2 x double> %return27, <2 x double>* %24
  %w145 = load double, double* %w
  store double %w145, double* %25
  call void @"V_JULIA@UUF"(<2 x double>* %p, <2 x double>* %24, double* %25)
  %p146 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false142:                                         ; preds = %false134
  %return148 = call i64 @"eq@III"(i64 %T28, i64 14)
  %328 = icmp ne i64 %return148, 0
  br i1 %328, label %true149, label %false150

true149:                                          ; preds = %false142
  store <2 x double> %return27, <2 x double>* %26
  %w153 = load double, double* %w
  store double %w153, double* %27
  call void @"V_BENT@UUF"(<2 x double>* %p, <2 x double>* %26, double* %27)
  %p154 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false150:                                         ; preds = %false142
  %return156 = call i64 @"eq@III"(i64 %T28, i64 15)
  %329 = icmp ne i64 %return156, 0
  br i1 %329, label %true157, label %false158

true157:                                          ; preds = %false150
  store <2 x double> %return27, <2 x double>* %28
  %w161 = load double, double* %w
  store double %w161, double* %29
  %x162 = load <2 x double>, <2 x double>* %x
  %return163 = call double @"getcomp@FUI"(<2 x double> %x162, i64 1)
  store double %return163, double* %30
  %y164 = load <2 x double>, <2 x double>* %y
  %return165 = call double @"getcomp@FUI"(<2 x double> %y164, i64 0)
  store double %return165, double* %31
  %o166 = load <2 x double>, <2 x double>* %o
  %return167 = call double @"getcomp@FUI"(<2 x double> %o166, i64 0)
  store double %return167, double* %32
  %o168 = load <2 x double>, <2 x double>* %o
  %return169 = call double @"getcomp@FUI"(<2 x double> %o168, i64 1)
  store double %return169, double* %33
  call void @"V_WAVES@UUFFFFF"(<2 x double>* %p, <2 x double>* %28, double* %29, double* %30, double* %31, double* %32, double* %33)
  %p170 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false158:                                         ; preds = %false150
  %return172 = call i64 @"eq@III"(i64 %T28, i64 16)
  %330 = icmp ne i64 %return172, 0
  br i1 %330, label %true173, label %false174

true173:                                          ; preds = %false158
  store <2 x double> %return27, <2 x double>* %34
  %w177 = load double, double* %w
  store double %w177, double* %35
  call void @"V_FISHEYE@UUF"(<2 x double>* %p, <2 x double>* %34, double* %35)
  %p178 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false174:                                         ; preds = %false158
  %return180 = call i64 @"eq@III"(i64 %T28, i64 17)
  %331 = icmp ne i64 %return180, 0
  br i1 %331, label %true181, label %end37

true181:                                          ; preds = %false174
  store <2 x double> %return27, <2 x double>* %36
  %w184 = load double, double* %w
  store double %w184, double* %37
  %o185 = load <2 x double>, <2 x double>* %o
  %return186 = call double @"getcomp@FUI"(<2 x double> %o185, i64 0)
  store double %return186, double* %38
  %o187 = load <2 x double>, <2 x double>* %o
  %return188 = call double @"getcomp@FUI"(<2 x double> %o187, i64 1)
  store double %return188, double* %39
  call void @"V_POPCORN@UUFFF"(<2 x double>* %p, <2 x double>* %36, double* %37, double* %38, double* %39)
  %p189 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true192:                                          ; preds = %false41
  store <2 x double> %return27, <2 x double>* %40
  %w196 = load double, double* %w
  store double %w196, double* %41
  call void @"V_EXPONENTIAL@UUF"(<2 x double>* %p, <2 x double>* %40, double* %41)
  %p197 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false193:                                         ; preds = %false41
  %return199 = call i64 @"eq@III"(i64 %T28, i64 19)
  %332 = icmp ne i64 %return199, 0
  br i1 %332, label %true200, label %false201

true200:                                          ; preds = %false193
  store <2 x double> %return27, <2 x double>* %42
  %w204 = load double, double* %w
  store double %w204, double* %43
  call void @"V_POWER@UUF"(<2 x double>* %p, <2 x double>* %42, double* %43)
  %p205 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false201:                                         ; preds = %false193
  %return207 = call i64 @"eq@III"(i64 %T28, i64 20)
  %333 = icmp ne i64 %return207, 0
  br i1 %333, label %true208, label %false209

true208:                                          ; preds = %false201
  store <2 x double> %return27, <2 x double>* %44
  %w212 = load double, double* %w
  store double %w212, double* %45
  call void @"V_COSINE@UUF"(<2 x double>* %p, <2 x double>* %44, double* %45)
  %p213 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false209:                                         ; preds = %false201
  %return215 = call i64 @"eq@III"(i64 %T28, i64 21)
  %334 = icmp ne i64 %return215, 0
  br i1 %334, label %true216, label %false217

true216:                                          ; preds = %false209
  store <2 x double> %return27, <2 x double>* %46
  %w220 = load double, double* %w
  store double %w220, double* %47
  %o221 = load <2 x double>, <2 x double>* %o
  %return222 = call double @"getcomp@FUI"(<2 x double> %o221, i64 0)
  store double %return222, double* %48
  call void @"V_RINGS@UUFF"(<2 x double>* %p, <2 x double>* %46, double* %47, double* %48)
  %p223 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false217:                                         ; preds = %false209
  %return225 = call i64 @"eq@III"(i64 %T28, i64 22)
  %335 = icmp ne i64 %return225, 0
  br i1 %335, label %true226, label %false227

true226:                                          ; preds = %false217
  store <2 x double> %return27, <2 x double>* %49
  %w230 = load double, double* %w
  store double %w230, double* %50
  %o231 = load <2 x double>, <2 x double>* %o
  %return232 = call double @"getcomp@FUI"(<2 x double> %o231, i64 0)
  store double %return232, double* %51
  call void @"V_FAN@UUFF"(<2 x double>* %p, <2 x double>* %49, double* %50, double* %51)
  %p233 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false227:                                         ; preds = %false217
  %return235 = call i64 @"eq@III"(i64 %T28, i64 23)
  %336 = icmp ne i64 %return235, 0
  br i1 %336, label %true236, label %false237

true236:                                          ; preds = %false227
  store <2 x double> %return27, <2 x double>* %52
  %w240 = load double, double* %w
  store double %w240, double* %53
  call void @"V_BUBBLE@UUF"(<2 x double>* %p, <2 x double>* %52, double* %53)
  %p241 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false237:                                         ; preds = %false227
  %return243 = call i64 @"eq@III"(i64 %T28, i64 24)
  %337 = icmp ne i64 %return243, 0
  br i1 %337, label %true244, label %false245

true244:                                          ; preds = %false237
  store <2 x double> %return27, <2 x double>* %54
  %w248 = load double, double* %w
  store double %w248, double* %55
  call void @"V_CYLINDER@UUF"(<2 x double>* %p, <2 x double>* %54, double* %55)
  %p249 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false245:                                         ; preds = %false237
  %return251 = call i64 @"eq@III"(i64 %T28, i64 25)
  %338 = icmp ne i64 %return251, 0
  br i1 %338, label %true252, label %false253

true252:                                          ; preds = %false245
  store <2 x double> %return27, <2 x double>* %56
  %w256 = load double, double* %w
  store double %w256, double* %57
  call void @"V_EYEFISH@UUF"(<2 x double>* %p, <2 x double>* %56, double* %57)
  %p257 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false253:                                         ; preds = %false245
  %return259 = call i64 @"eq@III"(i64 %T28, i64 26)
  %339 = icmp ne i64 %return259, 0
  br i1 %339, label %true260, label %false261

true260:                                          ; preds = %false253
  %w263 = load double, double* %w
  store double %w263, double* %58
  call void @"V_BLUR@UF"(<2 x double>* %p, double* %58)
  %p264 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false261:                                         ; preds = %false253
  %return266 = call i64 @"eq@III"(i64 %T28, i64 27)
  %340 = icmp ne i64 %return266, 0
  br i1 %340, label %true267, label %false268

true267:                                          ; preds = %false261
  %prx270 = load i8*, i8** %prx
  %return271 = call i8* @"concat@SSS"(i8* %prx270, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @106, i64 0, i64 0))
  %return272 = call <2 x double> @"chu@US"(i8* %return271)
  store <2 x double> %return27, <2 x double>* %59
  %w274 = load double, double* %w
  store double %w274, double* %60
  %return276 = call double @"getcomp@FUI"(<2 x double> %return272, i64 0)
  store double %return276, double* %61
  %return278 = call double @"getcomp@FUI"(<2 x double> %return272, i64 1)
  store double %return278, double* %62
  call void @"V_CURL@UUFFF"(<2 x double>* %p, <2 x double>* %59, double* %60, double* %61, double* %62)
  %p279 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false268:                                         ; preds = %false261
  %return281 = call i64 @"eq@III"(i64 %T28, i64 28)
  %341 = icmp ne i64 %return281, 0
  br i1 %341, label %true282, label %false283

true282:                                          ; preds = %false268
  %prx285 = load i8*, i8** %prx
  %return286 = call i8* @"concat@SSS"(i8* %prx285, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @107, i64 0, i64 0))
  %return287 = call <4 x double> @"chp@PS"(i8* %return286)
  store <2 x double> %return27, <2 x double>* %63
  %w289 = load double, double* %w
  store double %w289, double* %64
  %return291 = call double @"getcomp@FPI"(<4 x double> %return287, i64 0)
  store double %return291, double* %65
  %return293 = call double @"getcomp@FPI"(<4 x double> %return287, i64 1)
  store double %return293, double* %66
  %return295 = call double @"getcomp@FPI"(<4 x double> %return287, i64 2)
  store double %return295, double* %67
  %return297 = call double @"getcomp@FPI"(<4 x double> %return287, i64 3)
  store double %return297, double* %68
  call void @"V_NGON@UUFFFFF"(<2 x double>* %p, <2 x double>* %63, double* %64, double* %65, double* %66, double* %67, double* %68)
  %p298 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false283:                                         ; preds = %false268
  %return300 = call i64 @"eq@III"(i64 %T28, i64 29)
  %342 = icmp ne i64 %return300, 0
  br i1 %342, label %true301, label %false302

true301:                                          ; preds = %false283
  %prx304 = load i8*, i8** %prx
  %return305 = call i8* @"concat@SSS"(i8* %prx304, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @108, i64 0, i64 0))
  %return306 = call <4 x double> @"chp@PS"(i8* %return305)
  store <2 x double> %return27, <2 x double>* %69
  %w308 = load double, double* %w
  store double %w308, double* %70
  store <4 x double> %return306, <4 x double>* %71
  call void @"V_PDJ@UUFP"(<2 x double>* %p, <2 x double>* %69, double* %70, <4 x double>* %71)
  %p310 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false302:                                         ; preds = %false283
  %return312 = call i64 @"eq@III"(i64 %T28, i64 30)
  %343 = icmp ne i64 %return312, 0
  br i1 %343, label %true313, label %false314

true313:                                          ; preds = %false302
  %prx316 = load i8*, i8** %prx
  %return317 = call i8* @"concat@SSS"(i8* %prx316, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @109, i64 0, i64 0))
  %return318 = call <3 x double> @"chv@VS"(i8* %return317)
  store <2 x double> %return27, <2 x double>* %72
  %w320 = load double, double* %w
  store double %w320, double* %73
  %return322 = call double @"getcomp@FVI"(<3 x double> %return318, i64 1)
  store double %return322, double* %74
  %return324 = call double @"getcomp@FVI"(<3 x double> %return318, i64 0)
  store double %return324, double* %75
  %return326 = call double @"getcomp@FVI"(<3 x double> %return318, i64 2)
  store double %return326, double* %76
  call void @"V_BLOB@UUFFFF"(<2 x double>* %p, <2 x double>* %72, double* %73, double* %74, double* %75, double* %76)
  %p327 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false314:                                         ; preds = %false302
  %return329 = call i64 @"eq@III"(i64 %T28, i64 31)
  %344 = icmp ne i64 %return329, 0
  br i1 %344, label %true330, label %false331

true330:                                          ; preds = %false314
  %prx333 = load i8*, i8** %prx
  %return334 = call i8* @"concat@SSS"(i8* %prx333, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @110, i64 0, i64 0))
  %return335 = call <2 x double> @"chu@US"(i8* %return334)
  store <2 x double> %return27, <2 x double>* %77
  %w337 = load double, double* %w
  store double %w337, double* %78
  %return339 = call double @"getcomp@FUI"(<2 x double> %return335, i64 0)
  store double %return339, double* %79
  %return341 = call double @"getcomp@FUI"(<2 x double> %return335, i64 1)
  store double %return341, double* %80
  call void @"V_JULIAN@UUFFF"(<2 x double>* %p, <2 x double>* %77, double* %78, double* %79, double* %80)
  %p342 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false331:                                         ; preds = %false314
  %return344 = call i64 @"eq@III"(i64 %T28, i64 32)
  %345 = icmp ne i64 %return344, 0
  br i1 %345, label %true345, label %false346

true345:                                          ; preds = %false331
  %prx348 = load i8*, i8** %prx
  %return349 = call i8* @"concat@SSS"(i8* %prx348, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @111, i64 0, i64 0))
  %return350 = call <2 x double> @"chu@US"(i8* %return349)
  store <2 x double> %return27, <2 x double>* %81
  %w352 = load double, double* %w
  store double %w352, double* %82
  %return354 = call double @"getcomp@FUI"(<2 x double> %return350, i64 0)
  store double %return354, double* %83
  %return356 = call double @"getcomp@FUI"(<2 x double> %return350, i64 1)
  store double %return356, double* %84
  call void @"V_JULIASCOPE@UUFFF"(<2 x double>* %p, <2 x double>* %81, double* %82, double* %83, double* %84)
  %p357 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false346:                                         ; preds = %false331
  %return359 = call i64 @"eq@III"(i64 %T28, i64 33)
  %346 = icmp ne i64 %return359, 0
  br i1 %346, label %true360, label %false361

true360:                                          ; preds = %false346
  %w363 = load double, double* %w
  store double %w363, double* %85
  call void @"V_GAUSSIAN_BLUR@UF"(<2 x double>* %p, double* %85)
  %p364 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false361:                                         ; preds = %false346
  %return366 = call i64 @"eq@III"(i64 %T28, i64 34)
  %347 = icmp ne i64 %return366, 0
  br i1 %347, label %true367, label %end37

true367:                                          ; preds = %false361
  %prx369 = load i8*, i8** %prx
  %return370 = call i8* @"concat@SSS"(i8* %prx369, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @112, i64 0, i64 0))
  %return371 = call <2 x double> @"chu@US"(i8* %return370)
  store <2 x double> %return27, <2 x double>* %86
  %w373 = load double, double* %w
  store double %w373, double* %87
  store <2 x double> %return371, <2 x double>* %88
  call void @"V_FAN2@UUFU"(<2 x double>* %p, <2 x double>* %86, double* %87, <2 x double>* %88)
  %p375 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true378:                                          ; preds = %false36
  %return382 = call i64 @"lt@III"(i64 %T28, i64 50)
  %348 = icmp ne i64 %return382, 0
  br i1 %348, label %true383, label %false384

false379:                                         ; preds = %false36
  %return779 = call i64 @"lt@III"(i64 %T28, i64 102)
  %349 = icmp ne i64 %return779, 0
  br i1 %349, label %true780, label %end37

true383:                                          ; preds = %true378
  %return387 = call i64 @"eq@III"(i64 %T28, i64 35)
  %350 = icmp ne i64 %return387, 0
  br i1 %350, label %true388, label %false389

false384:                                         ; preds = %true378
  %return554 = call i64 @"eq@III"(i64 %T28, i64 50)
  %351 = icmp ne i64 %return554, 0
  br i1 %351, label %true555, label %false556

true388:                                          ; preds = %true383
  %prx391 = load i8*, i8** %prx
  %return392 = call i8* @"concat@SSS"(i8* %prx391, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @113, i64 0, i64 0))
  %return393 = call double @"chf@FS"(i8* %return392)
  store <2 x double> %return27, <2 x double>* %89
  %w395 = load double, double* %w
  store double %w395, double* %90
  store double %return393, double* %91
  call void @"V_RINGS2@UUFF"(<2 x double>* %p, <2 x double>* %89, double* %90, double* %91)
  %p397 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false389:                                         ; preds = %true383
  %return399 = call i64 @"eq@III"(i64 %T28, i64 36)
  %352 = icmp ne i64 %return399, 0
  br i1 %352, label %true400, label %false401

true400:                                          ; preds = %false389
  %prx403 = load i8*, i8** %prx
  %return404 = call i8* @"concat@SSS"(i8* %prx403, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @114, i64 0, i64 0))
  %return405 = call <2 x double> @"chu@US"(i8* %return404)
  store <2 x double> %return27, <2 x double>* %92
  %w407 = load double, double* %w
  store double %w407, double* %93
  store <2 x double> %return405, <2 x double>* %94
  call void @"V_RECTANGLES@UUFU"(<2 x double>* %p, <2 x double>* %92, double* %93, <2 x double>* %94)
  %p409 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false401:                                         ; preds = %false389
  %return411 = call i64 @"eq@III"(i64 %T28, i64 37)
  %353 = icmp ne i64 %return411, 0
  br i1 %353, label %true412, label %false413

true412:                                          ; preds = %false401
  %prx415 = load i8*, i8** %prx
  %return416 = call i8* @"concat@SSS"(i8* %prx415, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @115, i64 0, i64 0))
  %return417 = call <2 x double> @"chu@US"(i8* %return416)
  store <2 x double> %return27, <2 x double>* %95
  %w419 = load double, double* %w
  store double %w419, double* %96
  %return421 = call double @"getcomp@FUI"(<2 x double> %return417, i64 0)
  store double %return421, double* %97
  %return423 = call double @"getcomp@FUI"(<2 x double> %return417, i64 1)
  store double %return423, double* %98
  call void @"V_RADIALBLUR@UUFFF"(<2 x double>* %p, <2 x double>* %95, double* %96, double* %97, double* %98)
  %p424 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false413:                                         ; preds = %false401
  %return426 = call i64 @"eq@III"(i64 %T28, i64 38)
  %354 = icmp ne i64 %return426, 0
  br i1 %354, label %true427, label %false428

true427:                                          ; preds = %false413
  %prx430 = load i8*, i8** %prx
  %return431 = call i8* @"concat@SSS"(i8* %prx430, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @116, i64 0, i64 0))
  %return432 = call <3 x double> @"chv@VS"(i8* %return431)
  %w433 = load double, double* %w
  store double %w433, double* %99
  %return435 = call double @"getcomp@FVI"(<3 x double> %return432, i64 0)
  store double %return435, double* %100
  %return437 = call double @"getcomp@FVI"(<3 x double> %return432, i64 1)
  store double %return437, double* %101
  %return439 = call double @"getcomp@FVI"(<3 x double> %return432, i64 2)
  store double %return439, double* %102
  call void @"V_PIE@UFFFF"(<2 x double>* %p, double* %99, double* %100, double* %101, double* %102)
  %p440 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false428:                                         ; preds = %false413
  %return442 = call i64 @"eq@III"(i64 %T28, i64 39)
  %355 = icmp ne i64 %return442, 0
  br i1 %355, label %true443, label %false444

true443:                                          ; preds = %false428
  %w446 = load double, double* %w
  store double %w446, double* %104
  call void @"V_ARCH@UUF"(<2 x double>* %p, <2 x double>* %103, double* %104)
  %p447 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false444:                                         ; preds = %false428
  %return449 = call i64 @"eq@III"(i64 %T28, i64 40)
  %356 = icmp ne i64 %return449, 0
  br i1 %356, label %true450, label %false451

true450:                                          ; preds = %false444
  store <2 x double> %return27, <2 x double>* %105
  %w454 = load double, double* %w
  store double %w454, double* %106
  call void @"V_TANGENT@UUF"(<2 x double>* %p, <2 x double>* %105, double* %106)
  %p455 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false451:                                         ; preds = %false444
  %return457 = call i64 @"eq@III"(i64 %T28, i64 41)
  %357 = icmp ne i64 %return457, 0
  br i1 %357, label %true458, label %false459

true458:                                          ; preds = %false451
  %w461 = load double, double* %w
  store double %w461, double* %108
  call void @"V_SQUARE@UUF"(<2 x double>* %p, <2 x double>* %107, double* %108)
  %p462 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false459:                                         ; preds = %false451
  %return464 = call i64 @"eq@III"(i64 %T28, i64 42)
  %358 = icmp ne i64 %return464, 0
  br i1 %358, label %true465, label %false466

true465:                                          ; preds = %false459
  store <2 x double> %return27, <2 x double>* %109
  %w469 = load double, double* %w
  store double %w469, double* %110
  call void @"V_RAYS@UUF"(<2 x double>* %p, <2 x double>* %109, double* %110)
  %p470 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false466:                                         ; preds = %false459
  %return472 = call i64 @"eq@III"(i64 %T28, i64 43)
  %359 = icmp ne i64 %return472, 0
  br i1 %359, label %true473, label %false474

true473:                                          ; preds = %false466
  store <2 x double> %return27, <2 x double>* %111
  %w477 = load double, double* %w
  store double %w477, double* %112
  call void @"V_BLADE@UUF"(<2 x double>* %p, <2 x double>* %111, double* %112)
  %p478 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false474:                                         ; preds = %false466
  %return480 = call i64 @"eq@III"(i64 %T28, i64 44)
  %360 = icmp ne i64 %return480, 0
  br i1 %360, label %true481, label %false482

true481:                                          ; preds = %false474
  store <2 x double> %return27, <2 x double>* %113
  %w485 = load double, double* %w
  store double %w485, double* %114
  call void @"V_SECANT2@UUF"(<2 x double>* %p, <2 x double>* %113, double* %114)
  %p486 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false482:                                         ; preds = %false474
  %return488 = call i64 @"eq@III"(i64 %T28, i64 45)
  %361 = icmp ne i64 %return488, 0
  br i1 %361, label %true489, label %false490

true489:                                          ; preds = %false482
  store <2 x double> %return27, <2 x double>* %115
  %w493 = load double, double* %w
  store double %w493, double* %116
  call void @"V_TWINTRIAN@UUF"(<2 x double>* %p, <2 x double>* %115, double* %116)
  %p494 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false490:                                         ; preds = %false482
  %return496 = call i64 @"eq@III"(i64 %T28, i64 46)
  %362 = icmp ne i64 %return496, 0
  br i1 %362, label %true497, label %false498

true497:                                          ; preds = %false490
  store <2 x double> %return27, <2 x double>* %117
  %w501 = load double, double* %w
  store double %w501, double* %118
  call void @"V_CROSS@UUF"(<2 x double>* %p, <2 x double>* %117, double* %118)
  %p502 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false498:                                         ; preds = %false490
  %return504 = call i64 @"eq@III"(i64 %T28, i64 47)
  %363 = icmp ne i64 %return504, 0
  br i1 %363, label %true505, label %false506

true505:                                          ; preds = %false498
  %prx508 = load i8*, i8** %prx
  %return509 = call i8* @"concat@SSS"(i8* %prx508, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @117, i64 0, i64 0))
  %return510 = call <2 x double> @"chu@US"(i8* %return509)
  store <2 x double> %return27, <2 x double>* %119
  %w512 = load double, double* %w
  store double %w512, double* %120
  %return514 = call double @"getcomp@FUI"(<2 x double> %return510, i64 0)
  store double %return514, double* %121
  %return516 = call double @"getcomp@FUI"(<2 x double> %return510, i64 1)
  store double %return516, double* %122
  call void @"V_DISC2_FF@UUFFF"(<2 x double>* %p, <2 x double>* %119, double* %120, double* %121, double* %122)
  %p517 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false506:                                         ; preds = %false498
  %return519 = call i64 @"eq@III"(i64 %T28, i64 48)
  %364 = icmp ne i64 %return519, 0
  br i1 %364, label %true520, label %false521

true520:                                          ; preds = %false506
  %prx523 = load i8*, i8** %prx
  %return524 = call i8* @"concat@SSS"(i8* %prx523, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @118, i64 0, i64 0))
  %return525 = call <3 x double> @"chv@VS"(i8* %return524)
  %return527 = call i8* @"concat@SSS"(i8* %prx523, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @119, i64 0, i64 0))
  %return528 = call <3 x double> @"chv@VS"(i8* %return527)
  store <2 x double> %return27, <2 x double>* %123
  %w530 = load double, double* %w
  store double %w530, double* %124
  %return532 = call double @"getcomp@FVI"(<3 x double> %return525, i64 1)
  store double %return532, double* %125
  %return534 = call double @"getcomp@FVI"(<3 x double> %return525, i64 0)
  store double %return534, double* %126
  %return536 = call double @"getcomp@FVI"(<3 x double> %return525, i64 2)
  store double %return536, double* %127
  store <3 x double> %return528, <3 x double>* %128
  call void @"V_SUPERSHAPE@UUFFFFV"(<2 x double>* %p, <2 x double>* %123, double* %124, double* %125, double* %126, double* %127, <3 x double>* %128)
  %p538 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false521:                                         ; preds = %false506
  %return540 = call i64 @"eq@III"(i64 %T28, i64 49)
  %365 = icmp ne i64 %return540, 0
  br i1 %365, label %true541, label %end37

true541:                                          ; preds = %false521
  %prx543 = load i8*, i8** %prx
  %return544 = call i8* @"concat@SSS"(i8* %prx543, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @120, i64 0, i64 0))
  %return545 = call <2 x double> @"chu@US"(i8* %return544)
  store <2 x double> %return27, <2 x double>* %129
  %w547 = load double, double* %w
  store double %w547, double* %130
  %return549 = call double @"getcomp@FUI"(<2 x double> %return545, i64 0)
  store double %return549, double* %131
  %return551 = call double @"getcomp@FUI"(<2 x double> %return545, i64 1)
  store double %return551, double* %132
  call void @"V_FLOWER@UUFFF"(<2 x double>* %p, <2 x double>* %129, double* %130, double* %131, double* %132)
  %p552 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true555:                                          ; preds = %false384
  %prx558 = load i8*, i8** %prx
  %return559 = call i8* @"concat@SSS"(i8* %prx558, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @121, i64 0, i64 0))
  %return560 = call <2 x double> @"chu@US"(i8* %return559)
  store <2 x double> %return27, <2 x double>* %133
  %w562 = load double, double* %w
  store double %w562, double* %134
  %return564 = call double @"getcomp@FUI"(<2 x double> %return560, i64 0)
  store double %return564, double* %135
  %return566 = call double @"getcomp@FUI"(<2 x double> %return560, i64 1)
  store double %return566, double* %136
  call void @"V_CONIC@UUFFF"(<2 x double>* %p, <2 x double>* %133, double* %134, double* %135, double* %136)
  %p567 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false556:                                         ; preds = %false384
  %return569 = call i64 @"eq@III"(i64 %T28, i64 51)
  %366 = icmp ne i64 %return569, 0
  br i1 %366, label %true570, label %false571

true570:                                          ; preds = %false556
  %prx573 = load i8*, i8** %prx
  %return574 = call i8* @"concat@SSS"(i8* %prx573, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @122, i64 0, i64 0))
  %return575 = call <2 x double> @"chu@US"(i8* %return574)
  store <2 x double> %return27, <2 x double>* %137
  %w577 = load double, double* %w
  store double %w577, double* %138
  %return579 = call double @"getcomp@FUI"(<2 x double> %return575, i64 0)
  store double %return579, double* %139
  %return581 = call double @"getcomp@FUI"(<2 x double> %return575, i64 1)
  store double %return581, double* %140
  call void @"V_PARABOLA@UUFFF"(<2 x double>* %p, <2 x double>* %137, double* %138, double* %139, double* %140)
  %p582 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false571:                                         ; preds = %false556
  %return584 = call i64 @"eq@III"(i64 %T28, i64 52)
  %367 = icmp ne i64 %return584, 0
  br i1 %367, label %true585, label %false586

true585:                                          ; preds = %false571
  %prx588 = load i8*, i8** %prx
  %return589 = call i8* @"concat@SSS"(i8* %prx588, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @123, i64 0, i64 0))
  %return590 = call <2 x double> @"chu@US"(i8* %return589)
  store <2 x double> %return27, <2 x double>* %141
  %w592 = load double, double* %w
  store double %w592, double* %142
  store <2 x double> %return590, <2 x double>* %143
  call void @"V_BENT2@UUFU"(<2 x double>* %p, <2 x double>* %141, double* %142, <2 x double>* %143)
  %p594 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false586:                                         ; preds = %false571
  %return596 = call i64 @"eq@III"(i64 %T28, i64 53)
  %368 = icmp ne i64 %return596, 0
  br i1 %368, label %true597, label %false598

true597:                                          ; preds = %false586
  %prx600 = load i8*, i8** %prx
  %return601 = call i8* @"concat@SSS"(i8* %prx600, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @124, i64 0, i64 0))
  %return602 = call double @"chf@FS"(i8* %return601)
  store <2 x double> %return27, <2 x double>* %144
  %w604 = load double, double* %w
  store double %w604, double* %145
  store double %return602, double* %146
  call void @"V_BIPOLAR@UUFF"(<2 x double>* %p, <2 x double>* %144, double* %145, double* %146)
  %p606 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false598:                                         ; preds = %false586
  %return608 = call i64 @"eq@III"(i64 %T28, i64 54)
  %369 = icmp ne i64 %return608, 0
  br i1 %369, label %true609, label %false610

true609:                                          ; preds = %false598
  store <2 x double> %return27, <2 x double>* %147
  %w613 = load double, double* %w
  store double %w613, double* %148
  call void @"V_BOARDERS@UUF"(<2 x double>* %p, <2 x double>* %147, double* %148)
  %p614 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false610:                                         ; preds = %false598
  %return616 = call i64 @"eq@III"(i64 %T28, i64 55)
  %370 = icmp ne i64 %return616, 0
  br i1 %370, label %true617, label %false618

true617:                                          ; preds = %false610
  store <2 x double> %return27, <2 x double>* %149
  %w621 = load double, double* %w
  store double %w621, double* %150
  call void @"V_BUTTERFLY@UUF"(<2 x double>* %p, <2 x double>* %149, double* %150)
  %p622 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false618:                                         ; preds = %false610
  %return624 = call i64 @"eq@III"(i64 %T28, i64 56)
  %371 = icmp ne i64 %return624, 0
  br i1 %371, label %true625, label %false626

true625:                                          ; preds = %false618
  %prx628 = load i8*, i8** %prx
  %return629 = call i8* @"concat@SSS"(i8* %prx628, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @125, i64 0, i64 0))
  %return630 = call double @"chf@FS"(i8* %return629)
  store <2 x double> %return27, <2 x double>* %151
  store double %return630, double* %153
  call void @"V_CELL@UUFF"(<2 x double>* %p, <2 x double>* %151, double* %152, double* %153)
  %p633 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false626:                                         ; preds = %false618
  %return635 = call i64 @"eq@III"(i64 %T28, i64 57)
  %372 = icmp ne i64 %return635, 0
  br i1 %372, label %true636, label %false637

true636:                                          ; preds = %false626
  %prx639 = load i8*, i8** %prx
  %return640 = call i8* @"concat@SSS"(i8* %prx639, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @126, i64 0, i64 0))
  %return641 = call <3 x double> @"chv@VS"(i8* %return640)
  store <2 x double> %return27, <2 x double>* %154
  %w643 = load double, double* %w
  store double %w643, double* %155
  %return645 = call double @"getcomp@FVI"(<3 x double> %return641, i64 0)
  store double %return645, double* %156
  %return647 = call double @"getcomp@FVI"(<3 x double> %return641, i64 1)
  store double %return647, double* %157
  %return649 = call double @"getcomp@FVI"(<3 x double> %return641, i64 2)
  store double %return649, double* %158
  call void @"V_CPOW@UUFFFF"(<2 x double>* %p, <2 x double>* %154, double* %155, double* %156, double* %157, double* %158)
  %p650 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false637:                                         ; preds = %false626
  %return652 = call i64 @"eq@III"(i64 %T28, i64 58)
  %373 = icmp ne i64 %return652, 0
  br i1 %373, label %true653, label %false654

true653:                                          ; preds = %false637
  store <2 x double> %return27, <2 x double>* %159
  %w657 = load double, double* %w
  store double %w657, double* %160
  call void @"V_EDISC@UUF"(<2 x double>* %p, <2 x double>* %159, double* %160)
  %p658 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false654:                                         ; preds = %false637
  %return660 = call i64 @"eq@III"(i64 %T28, i64 59)
  %374 = icmp ne i64 %return660, 0
  br i1 %374, label %true661, label %false662

true661:                                          ; preds = %false654
  store <2 x double> %return27, <2 x double>* %161
  %w665 = load double, double* %w
  store double %w665, double* %162
  call void @"V_ELLIPTIC@UUF"(<2 x double>* %p, <2 x double>* %161, double* %162)
  %p666 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false662:                                         ; preds = %false654
  %return668 = call i64 @"eq@III"(i64 %T28, i64 60)
  %375 = icmp ne i64 %return668, 0
  br i1 %375, label %true669, label %false670

true669:                                          ; preds = %false662
  store <2 x double> %return27, <2 x double>* %163
  %w673 = load double, double* %w
  store double %w673, double* %164
  call void @"V_NOISE@UUF"(<2 x double>* %p, <2 x double>* %163, double* %164)
  %p674 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false670:                                         ; preds = %false662
  %return676 = call i64 @"eq@III"(i64 %T28, i64 61)
  %376 = icmp ne i64 %return676, 0
  br i1 %376, label %true677, label %false678

true677:                                          ; preds = %false670
  %prx680 = load i8*, i8** %prx
  %return681 = call i8* @"concat@SSS"(i8* %prx680, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @127, i64 0, i64 0))
  %return682 = call double @"chf@FS"(i8* %return681)
  store <2 x double> %return27, <2 x double>* %165
  %w684 = load double, double* %w
  store double %w684, double* %166
  store double %return682, double* %167
  call void @"V_ESCHER@UUFF"(<2 x double>* %p, <2 x double>* %165, double* %166, double* %167)
  %p686 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false678:                                         ; preds = %false670
  %return688 = call i64 @"eq@III"(i64 %T28, i64 62)
  %377 = icmp ne i64 %return688, 0
  br i1 %377, label %true689, label %false690

true689:                                          ; preds = %false678
  store <2 x double> %return27, <2 x double>* %168
  %w693 = load double, double* %w
  store double %w693, double* %169
  call void @"V_FOCI@UUF"(<2 x double>* %p, <2 x double>* %168, double* %169)
  %p694 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false690:                                         ; preds = %false678
  %return696 = call i64 @"eq@III"(i64 %T28, i64 63)
  %378 = icmp ne i64 %return696, 0
  br i1 %378, label %true697, label %false698

true697:                                          ; preds = %false690
  %prx700 = load i8*, i8** %prx
  %return701 = call i8* @"concat@SSS"(i8* %prx700, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @128, i64 0, i64 0))
  %return702 = call <3 x double> @"chv@VS"(i8* %return701)
  %return704 = call i8* @"concat@SSS"(i8* %prx700, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @129, i64 0, i64 0))
  %return705 = call <2 x double> @"chu@US"(i8* %return704)
  store <2 x double> %return27, <2 x double>* %170
  %w707 = load double, double* %w
  store double %w707, double* %171
  %return709 = call double @"getcomp@FVI"(<3 x double> %return702, i64 0)
  store double %return709, double* %172
  %return711 = call double @"getcomp@FVI"(<3 x double> %return702, i64 1)
  store double %return711, double* %173
  %return713 = call double @"getcomp@FVI"(<3 x double> %return702, i64 2)
  store double %return713, double* %174
  store <2 x double> %return705, <2 x double>* %175
  call void @"V_LAZYSUSAN@UUFFFFU"(<2 x double>* %p, <2 x double>* %170, double* %171, double* %172, double* %173, double* %174, <2 x double>* %175)
  %p715 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false698:                                         ; preds = %false690
  %return717 = call i64 @"eq@III"(i64 %T28, i64 64)
  %379 = icmp ne i64 %return717, 0
  br i1 %379, label %true718, label %false719

true718:                                          ; preds = %false698
  store <2 x double> %return27, <2 x double>* %176
  %w722 = load double, double* %w
  store double %w722, double* %177
  call void @"V_LOONIE@UUF"(<2 x double>* %p, <2 x double>* %176, double* %177)
  %p723 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false719:                                         ; preds = %false698
  %return725 = call i64 @"eq@III"(i64 %T28, i64 66)
  %380 = icmp ne i64 %return725, 0
  br i1 %380, label %true726, label %false727

true726:                                          ; preds = %false719
  %prx729 = load i8*, i8** %prx
  %return730 = call i8* @"concat@SSS"(i8* %prx729, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @130, i64 0, i64 0))
  %return731 = call <2 x double> @"chu@US"(i8* %return730)
  store <2 x double> %return27, <2 x double>* %178
  %w733 = load double, double* %w
  store double %w733, double* %179
  store <2 x double> %return731, <2 x double>* %180
  call void @"V_MODULUS@UUFU"(<2 x double>* %p, <2 x double>* %178, double* %179, <2 x double>* %180)
  %p735 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false727:                                         ; preds = %false719
  %return737 = call i64 @"eq@III"(i64 %T28, i64 67)
  %381 = icmp ne i64 %return737, 0
  br i1 %381, label %true738, label %false739

true738:                                          ; preds = %false727
  %prx741 = load i8*, i8** %prx
  %return742 = call i8* @"concat@SSS"(i8* %prx741, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @131, i64 0, i64 0))
  %return743 = call <4 x double> @"chp@PS"(i8* %return742)
  store <2 x double> %return27, <2 x double>* %181
  %w745 = load double, double* %w
  store double %w745, double* %182
  %return747 = call double @"getcomp@FPI"(<4 x double> %return743, i64 0)
  store double %return747, double* %183
  %return749 = call double @"getcomp@FPI"(<4 x double> %return743, i64 1)
  store double %return749, double* %184
  %return751 = call double @"getcomp@FPI"(<4 x double> %return743, i64 2)
  store double %return751, double* %185
  %return753 = call double @"getcomp@FPI"(<4 x double> %return743, i64 3)
  store double %return753, double* %186
  call void @"V_OSCOPE@UUFFFFF"(<2 x double>* %p, <2 x double>* %181, double* %182, double* %183, double* %184, double* %185, double* %186)
  %p754 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false739:                                         ; preds = %false727
  %return756 = call i64 @"eq@III"(i64 %T28, i64 68)
  %382 = icmp ne i64 %return756, 0
  br i1 %382, label %true757, label %false758

true757:                                          ; preds = %false739
  store <2 x double> %return27, <2 x double>* %187
  %w761 = load double, double* %w
  store double %w761, double* %188
  call void @"V_POLAR2@UUF"(<2 x double>* %p, <2 x double>* %187, double* %188)
  %p762 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false758:                                         ; preds = %false739
  %return764 = call i64 @"eq@III"(i64 %T28, i64 69)
  %383 = icmp ne i64 %return764, 0
  br i1 %383, label %true765, label %end37

true765:                                          ; preds = %false758
  %prx767 = load i8*, i8** %prx
  %return768 = call i8* @"concat@SSS"(i8* %prx767, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @132, i64 0, i64 0))
  %return769 = call double @"chf@FS"(i8* %return768)
  %return771 = call i8* @"concat@SSS"(i8* %prx767, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @133, i64 0, i64 0))
  %return772 = call <2 x double> @"chu@US"(i8* %return771)
  store <2 x double> %return27, <2 x double>* %189
  %w774 = load double, double* %w
  store double %w774, double* %190
  store double %return769, double* %191
  store <2 x double> %return772, <2 x double>* %192
  call void @"V_POPCORN2@UUFFU"(<2 x double>* %p, <2 x double>* %189, double* %190, double* %191, <2 x double>* %192)
  %p777 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true780:                                          ; preds = %false379
  %return783 = call i64 @"lt@III"(i64 %T28, i64 86)
  %384 = icmp ne i64 %return783, 0
  br i1 %384, label %true784, label %false785

true784:                                          ; preds = %true780
  %return788 = call i64 @"eq@III"(i64 %T28, i64 70)
  %385 = icmp ne i64 %return788, 0
  br i1 %385, label %true789, label %false790

false785:                                         ; preds = %true780
  %return990 = call i64 @"eq@III"(i64 %T28, i64 86)
  %386 = icmp ne i64 %return990, 0
  br i1 %386, label %true991, label %false992

true789:                                          ; preds = %true784
  store <2 x double> %return27, <2 x double>* %193
  %w793 = load double, double* %w
  store double %w793, double* %194
  call void @"V_SCRY@UUF"(<2 x double>* %p, <2 x double>* %193, double* %194)
  %p794 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false790:                                         ; preds = %true784
  %return796 = call i64 @"eq@III"(i64 %T28, i64 71)
  %387 = icmp ne i64 %return796, 0
  br i1 %387, label %true797, label %false798

true797:                                          ; preds = %false790
  %prx800 = load i8*, i8** %prx
  %return801 = call i8* @"concat@SSS"(i8* %prx800, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @134, i64 0, i64 0))
  %return802 = call <2 x double> @"chu@US"(i8* %return801)
  %return804 = call i8* @"concat@SSS"(i8* %prx800, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @135, i64 0, i64 0))
  %return805 = call <2 x double> @"chu@US"(i8* %return804)
  store <2 x double> %return27, <2 x double>* %195
  %w807 = load double, double* %w
  store double %w807, double* %196
  store <2 x double> %return802, <2 x double>* %197
  store <2 x double> %return805, <2 x double>* %198
  call void @"V_SEPARATION@UUFUU"(<2 x double>* %p, <2 x double>* %195, double* %196, <2 x double>* %197, <2 x double>* %198)
  %p810 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false798:                                         ; preds = %false790
  %return812 = call i64 @"eq@III"(i64 %T28, i64 72)
  %388 = icmp ne i64 %return812, 0
  br i1 %388, label %true813, label %false814

true813:                                          ; preds = %false798
  %prx816 = load i8*, i8** %prx
  %return817 = call i8* @"concat@SSS"(i8* %prx816, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @136, i64 0, i64 0))
  %return818 = call <2 x double> @"chu@US"(i8* %return817)
  store <2 x double> %return27, <2 x double>* %199
  %w820 = load double, double* %w
  store double %w820, double* %200
  store <2 x double> %return818, <2 x double>* %201
  call void @"V_SPLIT@UUFU"(<2 x double>* %p, <2 x double>* %199, double* %200, <2 x double>* %201)
  %p822 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false814:                                         ; preds = %false798
  %return824 = call i64 @"eq@III"(i64 %T28, i64 73)
  %389 = icmp ne i64 %return824, 0
  br i1 %389, label %true825, label %false826

true825:                                          ; preds = %false814
  %prx828 = load i8*, i8** %prx
  %return829 = call i8* @"concat@SSS"(i8* %prx828, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @137, i64 0, i64 0))
  %return830 = call <2 x double> @"chu@US"(i8* %return829)
  store <2 x double> %return27, <2 x double>* %202
  %w832 = load double, double* %w
  store double %w832, double* %203
  store <2 x double> %return830, <2 x double>* %204
  call void @"V_SPLITS@UUFU"(<2 x double>* %p, <2 x double>* %202, double* %203, <2 x double>* %204)
  %p834 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false826:                                         ; preds = %false814
  %return836 = call i64 @"eq@III"(i64 %T28, i64 74)
  %390 = icmp ne i64 %return836, 0
  br i1 %390, label %true837, label %false838

true837:                                          ; preds = %false826
  %prx840 = load i8*, i8** %prx
  %return841 = call i8* @"concat@SSS"(i8* %prx840, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @138, i64 0, i64 0))
  %return842 = call <2 x double> @"chu@US"(i8* %return841)
  store <2 x double> %return27, <2 x double>* %205
  %w844 = load double, double* %w
  store double %w844, double* %206
  %return846 = call double @"getcomp@FUI"(<2 x double> %return842, i64 0)
  store double %return846, double* %207
  %return848 = call double @"getcomp@FUI"(<2 x double> %return842, i64 1)
  store double %return848, double* %208
  call void @"V_STRIPES@UUFFF"(<2 x double>* %p, <2 x double>* %205, double* %206, double* %207, double* %208)
  %p849 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false838:                                         ; preds = %false826
  %return851 = call i64 @"eq@III"(i64 %T28, i64 75)
  %391 = icmp ne i64 %return851, 0
  br i1 %391, label %true852, label %false853

true852:                                          ; preds = %false838
  %prx855 = load i8*, i8** %prx
  %return856 = call i8* @"concat@SSS"(i8* %prx855, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @139, i64 0, i64 0))
  %return857 = call <4 x double> @"chp@PS"(i8* %return856)
  store <2 x double> %return27, <2 x double>* %209
  %w859 = load double, double* %w
  store double %w859, double* %210
  %return861 = call double @"getcomp@FPI"(<4 x double> %return857, i64 0)
  store double %return861, double* %211
  %return863 = call double @"getcomp@FPI"(<4 x double> %return857, i64 1)
  store double %return863, double* %212
  %return865 = call double @"getcomp@FPI"(<4 x double> %return857, i64 2)
  store double %return865, double* %213
  %return867 = call double @"getcomp@FPI"(<4 x double> %return857, i64 3)
  store double %return867, double* %214
  call void @"V_WEDGE@UUFFFFF"(<2 x double>* %p, <2 x double>* %209, double* %210, double* %211, double* %212, double* %213, double* %214)
  %p868 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false853:                                         ; preds = %false838
  %return870 = call i64 @"eq@III"(i64 %T28, i64 76)
  %392 = icmp ne i64 %return870, 0
  br i1 %392, label %true871, label %false872

true871:                                          ; preds = %false853
  %prx874 = load i8*, i8** %prx
  %return875 = call i8* @"concat@SSS"(i8* %prx874, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @140, i64 0, i64 0))
  %return876 = call <4 x double> @"chp@PS"(i8* %return875)
  store <2 x double> %return27, <2 x double>* %215
  %w878 = load double, double* %w
  store double %w878, double* %216
  %return880 = call double @"getcomp@FPI"(<4 x double> %return876, i64 0)
  store double %return880, double* %217
  %return882 = call double @"getcomp@FPI"(<4 x double> %return876, i64 1)
  store double %return882, double* %218
  %return884 = call double @"getcomp@FPI"(<4 x double> %return876, i64 2)
  store double %return884, double* %219
  %return886 = call double @"getcomp@FPI"(<4 x double> %return876, i64 3)
  store double %return886, double* %220
  call void @"V_WEDGEJULIA@UUFFFFF"(<2 x double>* %p, <2 x double>* %215, double* %216, double* %217, double* %218, double* %219, double* %220)
  %p887 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false872:                                         ; preds = %false853
  %return889 = call i64 @"eq@III"(i64 %T28, i64 77)
  %393 = icmp ne i64 %return889, 0
  br i1 %393, label %true890, label %false891

true890:                                          ; preds = %false872
  %prx893 = load i8*, i8** %prx
  %return894 = call i8* @"concat@SSS"(i8* %prx893, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @141, i64 0, i64 0))
  %return895 = call <4 x double> @"chp@PS"(i8* %return894)
  store <2 x double> %return27, <2 x double>* %221
  %w897 = load double, double* %w
  store double %w897, double* %222
  %return899 = call double @"getcomp@FPI"(<4 x double> %return895, i64 0)
  store double %return899, double* %223
  %return901 = call double @"getcomp@FPI"(<4 x double> %return895, i64 1)
  store double %return901, double* %224
  %return903 = call double @"getcomp@FPI"(<4 x double> %return895, i64 2)
  store double %return903, double* %225
  %return905 = call double @"getcomp@FPI"(<4 x double> %return895, i64 3)
  store double %return905, double* %226
  call void @"V_WEDGESPH@UUFFFFF"(<2 x double>* %p, <2 x double>* %221, double* %222, double* %223, double* %224, double* %225, double* %226)
  %p906 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false891:                                         ; preds = %false872
  %return908 = call i64 @"eq@III"(i64 %T28, i64 78)
  %394 = icmp ne i64 %return908, 0
  br i1 %394, label %true909, label %false910

true909:                                          ; preds = %false891
  %prx912 = load i8*, i8** %prx
  %return913 = call i8* @"concat@SSS"(i8* %prx912, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @142, i64 0, i64 0))
  %return914 = call <2 x double> @"chu@US"(i8* %return913)
  store <2 x double> %return27, <2 x double>* %227
  %w916 = load double, double* %w
  store double %w916, double* %228
  %return918 = call double @"getcomp@FUI"(<2 x double> %return914, i64 0)
  store double %return918, double* %229
  %return920 = call double @"getcomp@FUI"(<2 x double> %return914, i64 1)
  store double %return920, double* %230
  call void @"V_WHORL@UUFFF"(<2 x double>* %p, <2 x double>* %227, double* %228, double* %229, double* %230)
  %p921 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false910:                                         ; preds = %false891
  %return923 = call i64 @"eq@III"(i64 %T28, i64 79)
  %395 = icmp ne i64 %return923, 0
  br i1 %395, label %true924, label %false925

true924:                                          ; preds = %false910
  %prx927 = load i8*, i8** %prx
  %return928 = call i8* @"concat@SSS"(i8* %prx927, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @143, i64 0, i64 0))
  %return929 = call <2 x double> @"chu@US"(i8* %return928)
  %return931 = call i8* @"concat@SSS"(i8* %prx927, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @144, i64 0, i64 0))
  %return932 = call <2 x double> @"chu@US"(i8* %return931)
  store <2 x double> %return27, <2 x double>* %231
  %w934 = load double, double* %w
  store double %w934, double* %232
  store <2 x double> %return929, <2 x double>* %233
  store <2 x double> %return932, <2 x double>* %234
  call void @"V_WAVES2@UUFUU"(<2 x double>* %p, <2 x double>* %231, double* %232, <2 x double>* %233, <2 x double>* %234)
  %p937 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false925:                                         ; preds = %false910
  %return939 = call i64 @"eq@III"(i64 %T28, i64 80)
  %396 = icmp ne i64 %return939, 0
  br i1 %396, label %true940, label %false941

true940:                                          ; preds = %false925
  store <2 x double> %return27, <2 x double>* %235
  %w944 = load double, double* %w
  store double %w944, double* %236
  call void @"V_EXP@UUF"(<2 x double>* %p, <2 x double>* %235, double* %236)
  %p945 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false941:                                         ; preds = %false925
  %return947 = call i64 @"eq@III"(i64 %T28, i64 81)
  %397 = icmp ne i64 %return947, 0
  br i1 %397, label %true948, label %false949

true948:                                          ; preds = %false941
  store <2 x double> %return27, <2 x double>* %237
  %w952 = load double, double* %w
  store double %w952, double* %238
  call void @"V_LOG@UUF"(<2 x double>* %p, <2 x double>* %237, double* %238)
  %p953 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false949:                                         ; preds = %false941
  %return955 = call i64 @"eq@III"(i64 %T28, i64 82)
  %398 = icmp ne i64 %return955, 0
  br i1 %398, label %true956, label %false957

true956:                                          ; preds = %false949
  %f3c959 = load i64, i64* %f3c
  store i64 %f3c959, i64* %239
  store <2 x double> %return27, <2 x double>* %240
  %w961 = load double, double* %w
  store double %w961, double* %241
  call void @"V_SIN@IUUF"(i64* %239, <2 x double>* %p, <2 x double>* %240, double* %241)
  %p962 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false957:                                         ; preds = %false949
  %return964 = call i64 @"eq@III"(i64 %T28, i64 83)
  %399 = icmp ne i64 %return964, 0
  br i1 %399, label %true965, label %false966

true965:                                          ; preds = %false957
  %f3c968 = load i64, i64* %f3c
  store i64 %f3c968, i64* %242
  store <2 x double> %return27, <2 x double>* %243
  %w970 = load double, double* %w
  store double %w970, double* %244
  call void @"V_COS@IUUF"(i64* %242, <2 x double>* %p, <2 x double>* %243, double* %244)
  %p971 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false966:                                         ; preds = %false957
  %return973 = call i64 @"eq@III"(i64 %T28, i64 84)
  %400 = icmp ne i64 %return973, 0
  br i1 %400, label %true974, label %false975

true974:                                          ; preds = %false966
  %f3c977 = load i64, i64* %f3c
  store i64 %f3c977, i64* %245
  store <2 x double> %return27, <2 x double>* %246
  %w979 = load double, double* %w
  store double %w979, double* %247
  call void @"V_TAN@IUUF"(i64* %245, <2 x double>* %p, <2 x double>* %246, double* %247)
  %p980 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false975:                                         ; preds = %false966
  %return982 = call i64 @"eq@III"(i64 %T28, i64 85)
  %401 = icmp ne i64 %return982, 0
  br i1 %401, label %true983, label %end37

true983:                                          ; preds = %false975
  %f3c985 = load i64, i64* %f3c
  store i64 %f3c985, i64* %248
  store <2 x double> %return27, <2 x double>* %249
  %w987 = load double, double* %w
  store double %w987, double* %250
  call void @"V_SEC@IUUF"(i64* %248, <2 x double>* %p, <2 x double>* %249, double* %250)
  %p988 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true991:                                          ; preds = %false785
  %f3c994 = load i64, i64* %f3c
  store i64 %f3c994, i64* %251
  store <2 x double> %return27, <2 x double>* %252
  %w996 = load double, double* %w
  store double %w996, double* %253
  call void @"V_CSC@IUUF"(i64* %251, <2 x double>* %p, <2 x double>* %252, double* %253)
  %p997 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false992:                                         ; preds = %false785
  %return999 = call i64 @"eq@III"(i64 %T28, i64 87)
  %402 = icmp ne i64 %return999, 0
  br i1 %402, label %true1000, label %false1001

true1000:                                         ; preds = %false992
  %f3c1003 = load i64, i64* %f3c
  store i64 %f3c1003, i64* %254
  store <2 x double> %return27, <2 x double>* %255
  %w1005 = load double, double* %w
  store double %w1005, double* %256
  call void @"V_COT@IUUF"(i64* %254, <2 x double>* %p, <2 x double>* %255, double* %256)
  %p1006 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1001:                                        ; preds = %false992
  %return1008 = call i64 @"eq@III"(i64 %T28, i64 88)
  %403 = icmp ne i64 %return1008, 0
  br i1 %403, label %true1009, label %false1010

true1009:                                         ; preds = %false1001
  %f3c1012 = load i64, i64* %f3c
  store i64 %f3c1012, i64* %257
  store <2 x double> %return27, <2 x double>* %258
  %w1014 = load double, double* %w
  store double %w1014, double* %259
  call void @"V_SINH@IUUF"(i64* %257, <2 x double>* %p, <2 x double>* %258, double* %259)
  %p1015 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1010:                                        ; preds = %false1001
  %return1017 = call i64 @"eq@III"(i64 %T28, i64 89)
  %404 = icmp ne i64 %return1017, 0
  br i1 %404, label %true1018, label %false1019

true1018:                                         ; preds = %false1010
  %f3c1021 = load i64, i64* %f3c
  store i64 %f3c1021, i64* %260
  store <2 x double> %return27, <2 x double>* %261
  %w1023 = load double, double* %w
  store double %w1023, double* %262
  call void @"V_COSH@IUUF"(i64* %260, <2 x double>* %p, <2 x double>* %261, double* %262)
  %p1024 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1019:                                        ; preds = %false1010
  %return1026 = call i64 @"eq@III"(i64 %T28, i64 90)
  %405 = icmp ne i64 %return1026, 0
  br i1 %405, label %true1027, label %false1028

true1027:                                         ; preds = %false1019
  %f3c1030 = load i64, i64* %f3c
  store i64 %f3c1030, i64* %263
  store <2 x double> %return27, <2 x double>* %264
  %w1032 = load double, double* %w
  store double %w1032, double* %265
  call void @"V_TANH@IUUF"(i64* %263, <2 x double>* %p, <2 x double>* %264, double* %265)
  %p1033 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1028:                                        ; preds = %false1019
  %return1035 = call i64 @"eq@III"(i64 %T28, i64 91)
  %406 = icmp ne i64 %return1035, 0
  br i1 %406, label %true1036, label %false1037

true1036:                                         ; preds = %false1028
  %f3c1039 = load i64, i64* %f3c
  store i64 %f3c1039, i64* %266
  store <2 x double> %return27, <2 x double>* %267
  %w1041 = load double, double* %w
  store double %w1041, double* %268
  call void @"V_SECH@IUUF"(i64* %266, <2 x double>* %p, <2 x double>* %267, double* %268)
  %p1042 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1037:                                        ; preds = %false1028
  %return1044 = call i64 @"eq@III"(i64 %T28, i64 92)
  %407 = icmp ne i64 %return1044, 0
  br i1 %407, label %true1045, label %false1046

true1045:                                         ; preds = %false1037
  %f3c1048 = load i64, i64* %f3c
  store i64 %f3c1048, i64* %269
  store <2 x double> %return27, <2 x double>* %270
  %w1050 = load double, double* %w
  store double %w1050, double* %271
  call void @"V_CSCH@IUUF"(i64* %269, <2 x double>* %p, <2 x double>* %270, double* %271)
  %p1051 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1046:                                        ; preds = %false1037
  %return1053 = call i64 @"eq@III"(i64 %T28, i64 93)
  %408 = icmp ne i64 %return1053, 0
  br i1 %408, label %true1054, label %false1055

true1054:                                         ; preds = %false1046
  %f3c1057 = load i64, i64* %f3c
  store i64 %f3c1057, i64* %272
  store <2 x double> %return27, <2 x double>* %273
  %w1059 = load double, double* %w
  store double %w1059, double* %274
  call void @"V_COTH@IUUF"(i64* %272, <2 x double>* %p, <2 x double>* %273, double* %274)
  %p1060 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1055:                                        ; preds = %false1046
  %return1062 = call i64 @"eq@III"(i64 %T28, i64 94)
  %409 = icmp ne i64 %return1062, 0
  br i1 %409, label %true1063, label %false1064

true1063:                                         ; preds = %false1055
  %prx1066 = load i8*, i8** %prx
  %return1067 = call i8* @"concat@SSS"(i8* %prx1066, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @145, i64 0, i64 0))
  %return1068 = call <4 x double> @"chp@PS"(i8* %return1067)
  store <2 x double> %return27, <2 x double>* %275
  %w1070 = load double, double* %w
  store double %w1070, double* %276
  %return1072 = call double @"getcomp@FPI"(<4 x double> %return1068, i64 0)
  store double %return1072, double* %277
  %return1074 = call double @"getcomp@FPI"(<4 x double> %return1068, i64 1)
  store double %return1074, double* %278
  %return1076 = call double @"getcomp@FPI"(<4 x double> %return1068, i64 2)
  store double %return1076, double* %279
  %return1078 = call double @"getcomp@FPI"(<4 x double> %return1068, i64 3)
  store double %return1078, double* %280
  call void @"V_AUGER@UUFFFFF"(<2 x double>* %p, <2 x double>* %275, double* %276, double* %277, double* %278, double* %279, double* %280)
  %p1079 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1064:                                        ; preds = %false1055
  %return1081 = call i64 @"eq@III"(i64 %T28, i64 95)
  %410 = icmp ne i64 %return1081, 0
  br i1 %410, label %true1082, label %false1083

true1082:                                         ; preds = %false1064
  %prx1085 = load i8*, i8** %prx
  %return1086 = call i8* @"concat@SSS"(i8* %prx1085, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @146, i64 0, i64 0))
  %return1087 = call double @"chf@FS"(i8* %return1086)
  store <2 x double> %return27, <2 x double>* %281
  %w1089 = load double, double* %w
  store double %w1089, double* %282
  store double %return1087, double* %283
  call void @"V_FLUX@UUFF"(<2 x double>* %p, <2 x double>* %281, double* %282, double* %283)
  %p1091 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1083:                                        ; preds = %false1064
  %return1093 = call i64 @"eq@III"(i64 %T28, i64 96)
  %411 = icmp ne i64 %return1093, 0
  br i1 %411, label %true1094, label %false1095

true1094:                                         ; preds = %false1083
  %prx1097 = load i8*, i8** %prx
  %return1098 = call i8* @"concat@SSS"(i8* %prx1097, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @147, i64 0, i64 0))
  %return1099 = call <4 x double> @"chp@PS"(i8* %return1098)
  %return1101 = call i8* @"concat@SSS"(i8* %prx1097, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @148, i64 0, i64 0))
  %return1102 = call <4 x double> @"chp@PS"(i8* %return1101)
  store <2 x double> %return27, <2 x double>* %284
  %w1104 = load double, double* %w
  store double %w1104, double* %285
  store <4 x double> %return1099, <4 x double>* %286
  store <4 x double> %return1102, <4 x double>* %287
  call void @"V_MOBIUS@UUFPP"(<2 x double>* %p, <2 x double>* %284, double* %285, <4 x double>* %286, <4 x double>* %287)
  %p1107 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1095:                                        ; preds = %false1083
  %return1109 = call i64 @"eq@III"(i64 %T28, i64 97)
  %412 = icmp ne i64 %return1109, 0
  br i1 %412, label %true1110, label %false1111

true1110:                                         ; preds = %false1095
  %prx1113 = load i8*, i8** %prx
  %return1114 = call i8* @"concat@SSS"(i8* %prx1113, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @149, i64 0, i64 0))
  %return1115 = call <2 x double> @"chu@US"(i8* %return1114)
  %return1117 = call i8* @"concat@SSS"(i8* %prx1113, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @150, i64 0, i64 0))
  %return1118 = call <2 x double> @"chu@US"(i8* %return1117)
  store <2 x double> %return27, <2 x double>* %288
  %w1120 = load double, double* %w
  store double %w1120, double* %289
  store <2 x double> %return1115, <2 x double>* %290
  store <2 x double> %return1118, <2 x double>* %291
  call void @"V_CURVE@UUFUU"(<2 x double>* %p, <2 x double>* %288, double* %289, <2 x double>* %290, <2 x double>* %291)
  %p1123 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1111:                                        ; preds = %false1095
  %return1125 = call i64 @"eq@III"(i64 %T28, i64 98)
  %413 = icmp ne i64 %return1125, 0
  br i1 %413, label %true1126, label %false1127

true1126:                                         ; preds = %false1111
  %prx1129 = load i8*, i8** %prx
  %return1130 = call i8* @"concat@SSS"(i8* %prx1129, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @151, i64 0, i64 0))
  %return1131 = call <2 x double> @"chu@US"(i8* %return1130)
  store <2 x double> %return27, <2 x double>* %292
  %w1133 = load double, double* %w
  store double %w1133, double* %293
  %return1135 = call double @"getcomp@FUI"(<2 x double> %return1131, i64 0)
  store double %return1135, double* %294
  %return1137 = call double @"getcomp@FUI"(<2 x double> %return1131, i64 1)
  store double %return1137, double* %295
  call void @"V_PERSPECTIVE@UUFFF"(<2 x double>* %p, <2 x double>* %292, double* %293, double* %294, double* %295)
  %p1138 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1127:                                        ; preds = %false1111
  %return1140 = call i64 @"eq@III"(i64 %T28, i64 99)
  %414 = icmp ne i64 %return1140, 0
  br i1 %414, label %true1141, label %false1142

true1141:                                         ; preds = %false1127
  %prx1144 = load i8*, i8** %prx
  %return1145 = call i8* @"concat@SSS"(i8* %prx1144, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @152, i64 0, i64 0))
  %return1146 = call <3 x double> @"chv@VS"(i8* %return1145)
  %return1148 = call i8* @"concat@SSS"(i8* %prx1144, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @153, i64 0, i64 0))
  %return1149 = call <2 x double> @"chu@US"(i8* %return1148)
  store <2 x double> %return27, <2 x double>* %296
  %w1151 = load double, double* %w
  store double %w1151, double* %297
  %return1153 = call double @"getcomp@FVI"(<3 x double> %return1146, i64 0)
  store double %return1153, double* %298
  %return1155 = call double @"getcomp@FVI"(<3 x double> %return1146, i64 1)
  store double %return1155, double* %299
  %return1157 = call double @"getcomp@FVI"(<3 x double> %return1146, i64 2)
  store double %return1157, double* %300
  %return1159 = call double @"getcomp@FUI"(<2 x double> %return1149, i64 0)
  store double %return1159, double* %301
  %return1161 = call double @"getcomp@FUI"(<2 x double> %return1149, i64 1)
  store double %return1161, double* %302
  call void @"V_BWRAPS@UUFFFFFF"(<2 x double>* %p, <2 x double>* %296, double* %297, double* %298, double* %299, double* %300, double* %301, double* %302)
  %p1162 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1142:                                        ; preds = %false1127
  %return1164 = call i64 @"eq@III"(i64 %T28, i64 100)
  %415 = icmp ne i64 %return1164, 0
  br i1 %415, label %true1165, label %false1166

true1165:                                         ; preds = %false1142
  store <2 x double> %return27, <2 x double>* %303
  %w1169 = load double, double* %w
  store double %w1169, double* %304
  call void @"V_HEMISPHERE@UUF"(<2 x double>* %p, <2 x double>* %303, double* %304)
  %p1170 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1166:                                        ; preds = %false1142
  %return1172 = call i64 @"eq@III"(i64 %T28, i64 101)
  %416 = icmp ne i64 %return1172, 0
  br i1 %416, label %true1173, label %end37

true1173:                                         ; preds = %false1166
  %prx1175 = load i8*, i8** %prx
  %return1176 = call i8* @"concat@SSS"(i8* %prx1175, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @154, i64 0, i64 0))
  %return1177 = call <2 x double> @"chu@US"(i8* %return1176)
  %return1179 = call i8* @"concat@SSS"(i8* %prx1175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @155, i64 0, i64 0))
  %return1180 = call <2 x double> @"chu@US"(i8* %return1179)
  %return1182 = call i8* @"concat@SSS"(i8* %prx1175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @156, i64 0, i64 0))
  %return1183 = call <2 x double> @"chu@US"(i8* %return1182)
  store <2 x double> %return27, <2 x double>* %305
  %w1185 = load double, double* %w
  store double %w1185, double* %306
  store <2 x double> %return1177, <2 x double>* %307
  store <2 x double> %return1180, <2 x double>* %308
  store <2 x double> %return1183, <2 x double>* %309
  call void @"V_POLYNOMIAL@UUFUUU"(<2 x double>* %p, <2 x double>* %305, double* %306, <2 x double>* %307, <2 x double>* %308, <2 x double>* %309)
  %p1189 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %true1173, %true1165, %true1141, %true1126, %true1110, %true1094, %true1082, %true1063, %true1054, %true1045, %true1036, %true1027, %true1018, %true1009, %true1000, %true991, %true983, %true974, %true965, %true956, %true948, %true940, %true924, %true909, %true890, %true871, %true852, %true837, %true825, %true813, %true797, %true789, %true765, %true757, %true738, %true726, %true718, %true697, %true689, %true677, %true669, %true661, %true653, %true636, %true625, %true617, %true609, %true597, %true585, %true570, %true555, %true541, %true520, %true505, %true497, %true489, %true481, %true473, %true465, %true458, %true450, %true443, %true427, %true412, %true400, %true388, %true367, %true360, %true345, %true330, %true313, %true301, %true282, %true267, %true260, %true252, %true244, %true236, %true226, %true216, %true208, %true200, %true192, %true181, %true173, %true157, %true149, %true141, %true133, %true125, %true117, %true109, %true101, %true93, %true85, %true77, %true69, %true61, %true53, %true45, %end37, %true
  %UnifiedRetVal = phi <2 x double> [ %output32, %true ], [ %return27, %end37 ], [ %p50, %true45 ], [ %p58, %true53 ], [ %p66, %true61 ], [ %p74, %true69 ], [ %p82, %true77 ], [ %p90, %true85 ], [ %p98, %true93 ], [ %p106, %true101 ], [ %p114, %true109 ], [ %p122, %true117 ], [ %p130, %true125 ], [ %p138, %true133 ], [ %p146, %true141 ], [ %p154, %true149 ], [ %p170, %true157 ], [ %p178, %true173 ], [ %p189, %true181 ], [ %p197, %true192 ], [ %p205, %true200 ], [ %p213, %true208 ], [ %p223, %true216 ], [ %p233, %true226 ], [ %p241, %true236 ], [ %p249, %true244 ], [ %p257, %true252 ], [ %p264, %true260 ], [ %p279, %true267 ], [ %p298, %true282 ], [ %p310, %true301 ], [ %p327, %true313 ], [ %p342, %true330 ], [ %p357, %true345 ], [ %p364, %true360 ], [ %p375, %true367 ], [ %p397, %true388 ], [ %p409, %true400 ], [ %p424, %true412 ], [ %p440, %true427 ], [ %p447, %true443 ], [ %p455, %true450 ], [ %p462, %true458 ], [ %p470, %true465 ], [ %p478, %true473 ], [ %p486, %true481 ], [ %p494, %true489 ], [ %p502, %true497 ], [ %p517, %true505 ], [ %p538, %true520 ], [ %p552, %true541 ], [ %p567, %true555 ], [ %p582, %true570 ], [ %p594, %true585 ], [ %p606, %true597 ], [ %p614, %true609 ], [ %p622, %true617 ], [ %p633, %true625 ], [ %p650, %true636 ], [ %p658, %true653 ], [ %p666, %true661 ], [ %p674, %true669 ], [ %p686, %true677 ], [ %p694, %true689 ], [ %p715, %true697 ], [ %p723, %true718 ], [ %p735, %true726 ], [ %p754, %true738 ], [ %p762, %true757 ], [ %p777, %true765 ], [ %p794, %true789 ], [ %p810, %true797 ], [ %p822, %true813 ], [ %p834, %true825 ], [ %p849, %true837 ], [ %p868, %true852 ], [ %p887, %true871 ], [ %p906, %true890 ], [ %p921, %true909 ], [ %p937, %true924 ], [ %p945, %true940 ], [ %p953, %true948 ], [ %p962, %true956 ], [ %p971, %true965 ], [ %p980, %true974 ], [ %p988, %true983 ], [ %p997, %true991 ], [ %p1006, %true1000 ], [ %p1015, %true1009 ], [ %p1024, %true1018 ], [ %p1033, %true1027 ], [ %p1042, %true1036 ], [ %p1051, %true1045 ], [ %p1060, %true1054 ], [ %p1079, %true1063 ], [ %p1091, %true1082 ], [ %p1107, %true1094 ], [ %p1123, %true1110 ], [ %p1138, %true1126 ], [ %p1162, %true1141 ], [ %p1170, %true1165 ], [ %p1189, %true1173 ]
  ret <2 x double> %UnifiedRetVal
}

; Function Attrs: alwaysinline nounwind
define private void @"_FLAM3@[S[III[F[FFFFV"(i8*** %_bound_sIDX, i64** %_bound_SYS, i64* %_bound_ptnum, i64* %_bound_XS, double** %_bound_IW, double** %_bound_XST, double* %_bound_pscale, double* %_bound_clr, double* %_bound_Alpha, <3 x double>* %_bound_P) #0 {
__llvm_entry:
  %tmp = alloca <2 x double>
  %GEM = alloca %gem
  %0 = alloca i8**
  %1 = alloca i64
  %2 = alloca i64
  %p1GMP = alloca %gemPrm
  %p2GMP = alloca %gemPrm
  %v1GMP = alloca %gemPrm
  %v2GMP = alloca %gemPrm
  %v3GMP = alloca %gemPrm
  %v4GMP = alloca %gemPrm
  %P1GMP = alloca %gemPrm
  %3 = alloca i8**
  %4 = alloca i64
  %5 = alloca i64*
  %6 = alloca double*
  %7 = alloca i8**
  %8 = alloca i64
  %9 = alloca i64*
  %10 = alloca double*
  %11 = alloca i8**
  %12 = alloca i64
  %13 = alloca i64*
  %14 = alloca double*
  %15 = alloca i8**
  %16 = alloca i64
  %17 = alloca i64*
  %18 = alloca double*
  %19 = alloca i8**
  %20 = alloca i64
  %21 = alloca i64*
  %22 = alloca double*
  %23 = alloca i8**
  %24 = alloca i64
  %25 = alloca i64*
  %26 = alloca double*
  %27 = alloca i8**
  %28 = alloca i64
  %29 = alloca i64*
  %30 = alloca double*
  %mem = alloca <2 x double>
  %31 = alloca double
  %32 = alloca double*
  %33 = alloca double
  %34 = alloca %gemPrm
  %35 = alloca i64
  %36 = alloca i64
  %37 = alloca i64
  %38 = alloca <2 x double>
  %39 = alloca <2 x double>
  %40 = alloca <2 x double>
  %41 = alloca <2 x double>
  %42 = alloca double
  %43 = alloca %gemPrm
  %44 = alloca i64
  %45 = alloca i64
  %46 = alloca i64
  %47 = alloca <2 x double>
  %48 = alloca <2 x double>
  %49 = alloca <2 x double>
  %50 = alloca <2 x double>
  %51 = alloca double
  %52 = alloca %gemPrm
  %53 = alloca i64
  %54 = alloca i64
  %55 = alloca i64
  %56 = alloca <2 x double>
  %57 = alloca <2 x double>
  %58 = alloca <2 x double>
  %59 = alloca <2 x double>
  %60 = alloca double
  %61 = alloca %gemPrm
  %62 = alloca i64
  %63 = alloca i64
  %64 = alloca i64
  %65 = alloca <2 x double>
  %66 = alloca <2 x double>
  %67 = alloca <2 x double>
  %68 = alloca <2 x double>
  %69 = alloca double
  %70 = alloca %gemPrm
  %71 = alloca i64
  %72 = alloca i64
  %73 = alloca i64
  %74 = alloca <2 x double>
  %75 = alloca <2 x double>
  %76 = alloca <2 x double>
  %77 = alloca <2 x double>
  %78 = alloca double
  %79 = alloca %gemPrm
  %80 = alloca i64
  %81 = alloca i64
  %82 = alloca i64
  %83 = alloca <2 x double>
  %84 = alloca <2 x double>
  %85 = alloca <2 x double>
  %86 = alloca <2 x double>
  %87 = alloca double
  %88 = alloca %gemPrm
  %89 = alloca i64
  %90 = alloca i64
  %91 = alloca i64
  %92 = alloca <2 x double>
  %93 = alloca <2 x double>
  %94 = alloca <2 x double>
  %95 = alloca <2 x double>
  %96 = alloca double
  %97 = alloca <2 x double>
  %98 = alloca <2 x double>
  %99 = alloca <2 x double>
  %100 = alloca i64
  %101 = alloca <2 x double>
  %102 = alloca double
  %103 = alloca i8*
  %104 = alloca i64
  %105 = alloca i64
  %106 = alloca <2 x double>
  %107 = alloca <2 x double>
  %108 = alloca <2 x double>
  %109 = alloca <2 x double>
  %110 = alloca double
  %111 = alloca i8*
  %112 = alloca i64
  %113 = alloca i64
  %114 = alloca <2 x double>
  %115 = alloca <2 x double>
  %116 = alloca <2 x double>
  %117 = alloca <2 x double>
  %118 = alloca double
  %119 = alloca i8*
  %120 = alloca i64
  %121 = alloca i64
  %122 = alloca <2 x double>
  %123 = alloca <2 x double>
  %124 = alloca <2 x double>
  %125 = alloca <2 x double>
  %126 = alloca double
  %127 = alloca i8*
  %128 = alloca i64
  %129 = alloca i64
  %130 = alloca <2 x double>
  %131 = alloca <2 x double>
  %132 = alloca <2 x double>
  %133 = alloca <2 x double>
  %134 = alloca double
  %135 = alloca i8*
  %136 = alloca i64
  %137 = alloca i64
  %138 = alloca <2 x double>
  %139 = alloca <2 x double>
  %140 = alloca <2 x double>
  %141 = alloca <2 x double>
  %142 = alloca double
  %143 = alloca <2 x double>
  %144 = alloca <2 x double>
  %145 = alloca <2 x double>
  %146 = alloca i64
  %idx = alloca i64
  store i64 0, i64* %idx, !vex-initializer-store !3
  store <2 x double> zeroinitializer, <2 x double>* %tmp, !vex-initializer-store !3
  %_bound_SYS1 = load i64*, i64** %_bound_SYS
  %return = call i64 @"getcomp@I[II"(i64* %_bound_SYS1, i64 0)
  %return3 = call i64 @"getcomp@I[II"(i64* %_bound_SYS1, i64 1)
  %return5 = call i64 @"getcomp@I[II"(i64* %_bound_SYS1, i64 2)
  %return7 = call i64 @"getcomp@I[II"(i64* %_bound_SYS1, i64 3)
  %return9 = call i64 @"getcomp@I[II"(i64* %_bound_SYS1, i64 4)
  %return11 = call i64 @"getcomp@I[II"(i64* %_bound_SYS1, i64 5)
  %return13 = call i64 @"getcomp@I[II"(i64* %_bound_SYS1, i64 7)
  %_bound_sIDX14 = load i8**, i8*** %_bound_sIDX
  %GEM15 = call %gem @"gem@Z3gemM44N3PFFIN3resIN3v1t[IN3v2t[IN3v3t[IN3v4t[IN3p1t[IN3p2t[IN3P1t[IN3PPL[IN4fv1tIN4fv2tIN4fv3tIN4fp1tIN4fp2tIN3v1w[FN3v2w[FN3v3w[FN3v4w[FN3pbw[FN3p1w[FN3p2w[FN3P1w[FN3CLR[FN2OM[FN1A[FN4fv1wFN4fv2wFN4fv3wFN4fp1wFN4fp2wFN1x[UN1y[UN1o[UN2px[UN2py[UN2po[UN2fxUN2fyUN2foUN3pfxUN3pfyUN3pfoUN4TMm22"()
  %GEM15.fca.0.extract = extractvalue %gem %GEM15, 0
  %GEM15.fca.0.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 0
  store i64 %GEM15.fca.0.extract, i64* %GEM15.fca.0.gep
  %GEM15.fca.1.extract = extractvalue %gem %GEM15, 1
  %GEM15.fca.1.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 1
  store i64 %GEM15.fca.1.extract, i64* %GEM15.fca.1.gep
  %GEM15.fca.2.extract = extractvalue %gem %GEM15, 2
  %GEM15.fca.2.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 2
  store i64* %GEM15.fca.2.extract, i64** %GEM15.fca.2.gep
  %GEM15.fca.3.extract = extractvalue %gem %GEM15, 3
  %GEM15.fca.3.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 3
  store i64* %GEM15.fca.3.extract, i64** %GEM15.fca.3.gep
  %GEM15.fca.4.extract = extractvalue %gem %GEM15, 4
  %GEM15.fca.4.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 4
  store i64* %GEM15.fca.4.extract, i64** %GEM15.fca.4.gep
  %GEM15.fca.5.extract = extractvalue %gem %GEM15, 5
  %GEM15.fca.5.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 5
  store i64* %GEM15.fca.5.extract, i64** %GEM15.fca.5.gep
  %GEM15.fca.6.extract = extractvalue %gem %GEM15, 6
  %GEM15.fca.6.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 6
  store i64* %GEM15.fca.6.extract, i64** %GEM15.fca.6.gep
  %GEM15.fca.7.extract = extractvalue %gem %GEM15, 7
  %GEM15.fca.7.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 7
  store i64* %GEM15.fca.7.extract, i64** %GEM15.fca.7.gep
  %GEM15.fca.8.extract = extractvalue %gem %GEM15, 8
  %GEM15.fca.8.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 8
  store i64* %GEM15.fca.8.extract, i64** %GEM15.fca.8.gep
  %GEM15.fca.9.extract = extractvalue %gem %GEM15, 9
  %GEM15.fca.9.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 9
  store i64* %GEM15.fca.9.extract, i64** %GEM15.fca.9.gep
  %GEM15.fca.10.extract = extractvalue %gem %GEM15, 10
  %GEM15.fca.10.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 10
  store i64 %GEM15.fca.10.extract, i64* %GEM15.fca.10.gep
  %GEM15.fca.11.extract = extractvalue %gem %GEM15, 11
  %GEM15.fca.11.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 11
  store i64 %GEM15.fca.11.extract, i64* %GEM15.fca.11.gep
  %GEM15.fca.12.extract = extractvalue %gem %GEM15, 12
  %GEM15.fca.12.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 12
  store i64 %GEM15.fca.12.extract, i64* %GEM15.fca.12.gep
  %GEM15.fca.13.extract = extractvalue %gem %GEM15, 13
  %GEM15.fca.13.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 13
  store i64 %GEM15.fca.13.extract, i64* %GEM15.fca.13.gep
  %GEM15.fca.14.extract = extractvalue %gem %GEM15, 14
  %GEM15.fca.14.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 14
  store i64 %GEM15.fca.14.extract, i64* %GEM15.fca.14.gep
  %GEM15.fca.15.extract = extractvalue %gem %GEM15, 15
  %GEM15.fca.15.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 15
  store double* %GEM15.fca.15.extract, double** %GEM15.fca.15.gep
  %GEM15.fca.16.extract = extractvalue %gem %GEM15, 16
  %GEM15.fca.16.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 16
  store double* %GEM15.fca.16.extract, double** %GEM15.fca.16.gep
  %GEM15.fca.17.extract = extractvalue %gem %GEM15, 17
  %GEM15.fca.17.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 17
  store double* %GEM15.fca.17.extract, double** %GEM15.fca.17.gep
  %GEM15.fca.18.extract = extractvalue %gem %GEM15, 18
  %GEM15.fca.18.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 18
  store double* %GEM15.fca.18.extract, double** %GEM15.fca.18.gep
  %GEM15.fca.19.extract = extractvalue %gem %GEM15, 19
  %GEM15.fca.19.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 19
  store double* %GEM15.fca.19.extract, double** %GEM15.fca.19.gep
  %GEM15.fca.20.extract = extractvalue %gem %GEM15, 20
  %GEM15.fca.20.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 20
  store double* %GEM15.fca.20.extract, double** %GEM15.fca.20.gep
  %GEM15.fca.21.extract = extractvalue %gem %GEM15, 21
  %GEM15.fca.21.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 21
  store double* %GEM15.fca.21.extract, double** %GEM15.fca.21.gep
  %GEM15.fca.22.extract = extractvalue %gem %GEM15, 22
  %GEM15.fca.22.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 22
  store double* %GEM15.fca.22.extract, double** %GEM15.fca.22.gep
  %GEM15.fca.23.extract = extractvalue %gem %GEM15, 23
  %GEM15.fca.23.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 23
  store double* %GEM15.fca.23.extract, double** %GEM15.fca.23.gep
  %GEM15.fca.24.extract = extractvalue %gem %GEM15, 24
  %GEM15.fca.24.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 24
  store double* %GEM15.fca.24.extract, double** %GEM15.fca.24.gep
  %GEM15.fca.25.extract = extractvalue %gem %GEM15, 25
  %GEM15.fca.25.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 25
  store double* %GEM15.fca.25.extract, double** %GEM15.fca.25.gep
  %GEM15.fca.26.extract = extractvalue %gem %GEM15, 26
  %GEM15.fca.26.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 26
  store double %GEM15.fca.26.extract, double* %GEM15.fca.26.gep
  %GEM15.fca.27.extract = extractvalue %gem %GEM15, 27
  %GEM15.fca.27.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 27
  store double %GEM15.fca.27.extract, double* %GEM15.fca.27.gep
  %GEM15.fca.28.extract = extractvalue %gem %GEM15, 28
  %GEM15.fca.28.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 28
  store double %GEM15.fca.28.extract, double* %GEM15.fca.28.gep
  %GEM15.fca.29.extract = extractvalue %gem %GEM15, 29
  %GEM15.fca.29.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 29
  store double %GEM15.fca.29.extract, double* %GEM15.fca.29.gep
  %GEM15.fca.30.extract = extractvalue %gem %GEM15, 30
  %GEM15.fca.30.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 30
  store double %GEM15.fca.30.extract, double* %GEM15.fca.30.gep
  %GEM15.fca.31.extract = extractvalue %gem %GEM15, 31
  %GEM15.fca.31.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 31
  store <2 x double>* %GEM15.fca.31.extract, <2 x double>** %GEM15.fca.31.gep
  %GEM15.fca.32.extract = extractvalue %gem %GEM15, 32
  %GEM15.fca.32.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 32
  store <2 x double>* %GEM15.fca.32.extract, <2 x double>** %GEM15.fca.32.gep
  %GEM15.fca.33.extract = extractvalue %gem %GEM15, 33
  %GEM15.fca.33.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 33
  store <2 x double>* %GEM15.fca.33.extract, <2 x double>** %GEM15.fca.33.gep
  %GEM15.fca.34.extract = extractvalue %gem %GEM15, 34
  %GEM15.fca.34.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 34
  store <2 x double>* %GEM15.fca.34.extract, <2 x double>** %GEM15.fca.34.gep
  %GEM15.fca.35.extract = extractvalue %gem %GEM15, 35
  %GEM15.fca.35.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 35
  store <2 x double>* %GEM15.fca.35.extract, <2 x double>** %GEM15.fca.35.gep
  %GEM15.fca.36.extract = extractvalue %gem %GEM15, 36
  %GEM15.fca.36.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 36
  store <2 x double>* %GEM15.fca.36.extract, <2 x double>** %GEM15.fca.36.gep
  %GEM15.fca.37.extract = extractvalue %gem %GEM15, 37
  %GEM15.fca.37.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 37
  store <2 x double> %GEM15.fca.37.extract, <2 x double>* %GEM15.fca.37.gep
  %GEM15.fca.38.extract = extractvalue %gem %GEM15, 38
  %GEM15.fca.38.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 38
  store <2 x double> %GEM15.fca.38.extract, <2 x double>* %GEM15.fca.38.gep
  %GEM15.fca.39.extract = extractvalue %gem %GEM15, 39
  %GEM15.fca.39.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 39
  store <2 x double> %GEM15.fca.39.extract, <2 x double>* %GEM15.fca.39.gep
  %GEM15.fca.40.extract = extractvalue %gem %GEM15, 40
  %GEM15.fca.40.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 40
  store <2 x double> %GEM15.fca.40.extract, <2 x double>* %GEM15.fca.40.gep
  %GEM15.fca.41.extract = extractvalue %gem %GEM15, 41
  %GEM15.fca.41.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 41
  store <2 x double> %GEM15.fca.41.extract, <2 x double>* %GEM15.fca.41.gep
  %GEM15.fca.42.extract = extractvalue %gem %GEM15, 42
  %GEM15.fca.42.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 42
  store <2 x double> %GEM15.fca.42.extract, <2 x double>* %GEM15.fca.42.gep
  %GEM15.fca.43.extract = extractvalue %gem %GEM15, 43
  %GEM15.fca.43.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 43
  store <4 x double> %GEM15.fca.43.extract, <4 x double>* %GEM15.fca.43.gep
  store i8** %_bound_sIDX14, i8*** %0
  store i64 %return, i64* %1
  store i64 %return3, i64* %2
  call void @"gemBuild@Z3gemM44N3PFFIN3resIN3v1t[IN3v2t[IN3v3t[IN3v4t[IN3p1t[IN3p2t[IN3P1t[IN3PPL[IN4fv1tIN4fv2tIN4fv3tIN4fp1tIN4fp2tIN3v1w[FN3v2w[FN3v3w[FN3v4w[FN3pbw[FN3p1w[FN3p2w[FN3P1w[FN3CLR[FN2OM[FN1A[FN4fv1wFN4fv2wFN4fv3wFN4fp1wFN4fp2wFN1x[UN1y[UN1o[UN2px[UN2py[UN2po[UN2fxUN2fyUN2foUN3pfxUN3pfyUN3pfoUN4TMm22[SII"(%gem* %GEM, i8*** %0, i64* %1, i64* %2)
  %GEM19.fca.0.load = load i64, i64* %GEM15.fca.0.gep
  %GEM19.fca.0.insert = insertvalue %gem undef, i64 %GEM19.fca.0.load, 0
  %GEM19.fca.1.load = load i64, i64* %GEM15.fca.1.gep
  %GEM19.fca.1.insert = insertvalue %gem %GEM19.fca.0.insert, i64 %GEM19.fca.1.load, 1
  %GEM19.fca.2.load = load i64*, i64** %GEM15.fca.2.gep
  %GEM19.fca.2.insert = insertvalue %gem %GEM19.fca.1.insert, i64* %GEM19.fca.2.load, 2
  %GEM19.fca.3.load = load i64*, i64** %GEM15.fca.3.gep
  %GEM19.fca.3.insert = insertvalue %gem %GEM19.fca.2.insert, i64* %GEM19.fca.3.load, 3
  %GEM19.fca.4.load = load i64*, i64** %GEM15.fca.4.gep
  %GEM19.fca.4.insert = insertvalue %gem %GEM19.fca.3.insert, i64* %GEM19.fca.4.load, 4
  %GEM19.fca.5.load = load i64*, i64** %GEM15.fca.5.gep
  %GEM19.fca.5.insert = insertvalue %gem %GEM19.fca.4.insert, i64* %GEM19.fca.5.load, 5
  %GEM19.fca.6.load = load i64*, i64** %GEM15.fca.6.gep
  %GEM19.fca.6.insert = insertvalue %gem %GEM19.fca.5.insert, i64* %GEM19.fca.6.load, 6
  %GEM19.fca.7.load = load i64*, i64** %GEM15.fca.7.gep
  %GEM19.fca.7.insert = insertvalue %gem %GEM19.fca.6.insert, i64* %GEM19.fca.7.load, 7
  %GEM19.fca.8.load = load i64*, i64** %GEM15.fca.8.gep
  %GEM19.fca.8.insert = insertvalue %gem %GEM19.fca.7.insert, i64* %GEM19.fca.8.load, 8
  %GEM19.fca.9.load = load i64*, i64** %GEM15.fca.9.gep
  %GEM19.fca.9.insert = insertvalue %gem %GEM19.fca.8.insert, i64* %GEM19.fca.9.load, 9
  %GEM19.fca.10.load = load i64, i64* %GEM15.fca.10.gep
  %GEM19.fca.10.insert = insertvalue %gem %GEM19.fca.9.insert, i64 %GEM19.fca.10.load, 10
  %GEM19.fca.11.load = load i64, i64* %GEM15.fca.11.gep
  %GEM19.fca.11.insert = insertvalue %gem %GEM19.fca.10.insert, i64 %GEM19.fca.11.load, 11
  %GEM19.fca.12.load = load i64, i64* %GEM15.fca.12.gep
  %GEM19.fca.12.insert = insertvalue %gem %GEM19.fca.11.insert, i64 %GEM19.fca.12.load, 12
  %GEM19.fca.13.load = load i64, i64* %GEM15.fca.13.gep
  %GEM19.fca.13.insert = insertvalue %gem %GEM19.fca.12.insert, i64 %GEM19.fca.13.load, 13
  %GEM19.fca.14.load = load i64, i64* %GEM15.fca.14.gep
  %GEM19.fca.14.insert = insertvalue %gem %GEM19.fca.13.insert, i64 %GEM19.fca.14.load, 14
  %GEM19.fca.15.load = load double*, double** %GEM15.fca.15.gep
  %GEM19.fca.15.insert = insertvalue %gem %GEM19.fca.14.insert, double* %GEM19.fca.15.load, 15
  %GEM19.fca.16.load = load double*, double** %GEM15.fca.16.gep
  %GEM19.fca.16.insert = insertvalue %gem %GEM19.fca.15.insert, double* %GEM19.fca.16.load, 16
  %GEM19.fca.17.load = load double*, double** %GEM15.fca.17.gep
  %GEM19.fca.17.insert = insertvalue %gem %GEM19.fca.16.insert, double* %GEM19.fca.17.load, 17
  %GEM19.fca.18.load = load double*, double** %GEM15.fca.18.gep
  %GEM19.fca.18.insert = insertvalue %gem %GEM19.fca.17.insert, double* %GEM19.fca.18.load, 18
  %GEM19.fca.19.load = load double*, double** %GEM15.fca.19.gep
  %GEM19.fca.19.insert = insertvalue %gem %GEM19.fca.18.insert, double* %GEM19.fca.19.load, 19
  %GEM19.fca.20.load = load double*, double** %GEM15.fca.20.gep
  %GEM19.fca.20.insert = insertvalue %gem %GEM19.fca.19.insert, double* %GEM19.fca.20.load, 20
  %GEM19.fca.21.load = load double*, double** %GEM15.fca.21.gep
  %GEM19.fca.21.insert = insertvalue %gem %GEM19.fca.20.insert, double* %GEM19.fca.21.load, 21
  %GEM19.fca.22.load = load double*, double** %GEM15.fca.22.gep
  %GEM19.fca.22.insert = insertvalue %gem %GEM19.fca.21.insert, double* %GEM19.fca.22.load, 22
  %GEM19.fca.23.load = load double*, double** %GEM15.fca.23.gep
  %GEM19.fca.23.insert = insertvalue %gem %GEM19.fca.22.insert, double* %GEM19.fca.23.load, 23
  %GEM19.fca.24.load = load double*, double** %GEM15.fca.24.gep
  %GEM19.fca.24.insert = insertvalue %gem %GEM19.fca.23.insert, double* %GEM19.fca.24.load, 24
  %GEM19.fca.25.load = load double*, double** %GEM15.fca.25.gep
  %GEM19.fca.25.insert = insertvalue %gem %GEM19.fca.24.insert, double* %GEM19.fca.25.load, 25
  %GEM19.fca.26.load = load double, double* %GEM15.fca.26.gep
  %GEM19.fca.26.insert = insertvalue %gem %GEM19.fca.25.insert, double %GEM19.fca.26.load, 26
  %GEM19.fca.27.load = load double, double* %GEM15.fca.27.gep
  %GEM19.fca.27.insert = insertvalue %gem %GEM19.fca.26.insert, double %GEM19.fca.27.load, 27
  %GEM19.fca.28.load = load double, double* %GEM15.fca.28.gep
  %GEM19.fca.28.insert = insertvalue %gem %GEM19.fca.27.insert, double %GEM19.fca.28.load, 28
  %GEM19.fca.29.load = load double, double* %GEM15.fca.29.gep
  %GEM19.fca.29.insert = insertvalue %gem %GEM19.fca.28.insert, double %GEM19.fca.29.load, 29
  %GEM19.fca.30.load = load double, double* %GEM15.fca.30.gep
  %GEM19.fca.30.insert = insertvalue %gem %GEM19.fca.29.insert, double %GEM19.fca.30.load, 30
  %GEM19.fca.31.load = load <2 x double>*, <2 x double>** %GEM15.fca.31.gep
  %GEM19.fca.31.insert = insertvalue %gem %GEM19.fca.30.insert, <2 x double>* %GEM19.fca.31.load, 31
  %GEM19.fca.32.load = load <2 x double>*, <2 x double>** %GEM15.fca.32.gep
  %GEM19.fca.32.insert = insertvalue %gem %GEM19.fca.31.insert, <2 x double>* %GEM19.fca.32.load, 32
  %GEM19.fca.33.load = load <2 x double>*, <2 x double>** %GEM15.fca.33.gep
  %GEM19.fca.33.insert = insertvalue %gem %GEM19.fca.32.insert, <2 x double>* %GEM19.fca.33.load, 33
  %GEM19.fca.34.load = load <2 x double>*, <2 x double>** %GEM15.fca.34.gep
  %GEM19.fca.34.insert = insertvalue %gem %GEM19.fca.33.insert, <2 x double>* %GEM19.fca.34.load, 34
  %GEM19.fca.35.load = load <2 x double>*, <2 x double>** %GEM15.fca.35.gep
  %GEM19.fca.35.insert = insertvalue %gem %GEM19.fca.34.insert, <2 x double>* %GEM19.fca.35.load, 35
  %GEM19.fca.36.load = load <2 x double>*, <2 x double>** %GEM15.fca.36.gep
  %GEM19.fca.36.insert = insertvalue %gem %GEM19.fca.35.insert, <2 x double>* %GEM19.fca.36.load, 36
  %GEM19.fca.37.load = load <2 x double>, <2 x double>* %GEM15.fca.37.gep
  %GEM19.fca.37.insert = insertvalue %gem %GEM19.fca.36.insert, <2 x double> %GEM19.fca.37.load, 37
  %GEM19.fca.38.load = load <2 x double>, <2 x double>* %GEM15.fca.38.gep
  %GEM19.fca.38.insert = insertvalue %gem %GEM19.fca.37.insert, <2 x double> %GEM19.fca.38.load, 38
  %GEM19.fca.39.load = load <2 x double>, <2 x double>* %GEM15.fca.39.gep
  %GEM19.fca.39.insert = insertvalue %gem %GEM19.fca.38.insert, <2 x double> %GEM19.fca.39.load, 39
  %GEM19.fca.40.load = load <2 x double>, <2 x double>* %GEM15.fca.40.gep
  %GEM19.fca.40.insert = insertvalue %gem %GEM19.fca.39.insert, <2 x double> %GEM19.fca.40.load, 40
  %GEM19.fca.41.load = load <2 x double>, <2 x double>* %GEM15.fca.41.gep
  %GEM19.fca.41.insert = insertvalue %gem %GEM19.fca.40.insert, <2 x double> %GEM19.fca.41.load, 41
  %GEM19.fca.42.load = load <2 x double>, <2 x double>* %GEM15.fca.42.gep
  %GEM19.fca.42.insert = insertvalue %gem %GEM19.fca.41.insert, <2 x double> %GEM19.fca.42.load, 42
  %GEM19.fca.43.load = load <4 x double>, <4 x double>* %GEM15.fca.43.gep
  %p1GMP106 = call %gemPrm @"gemPrm@Z6gemPrmM52N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PN8pc_DISC2[V"()
  %p1GMP106.fca.0.extract = extractvalue %gemPrm %p1GMP106, 0
  %p1GMP106.fca.0.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 0
  store double* %p1GMP106.fca.0.extract, double** %p1GMP106.fca.0.gep
  %p1GMP106.fca.1.extract = extractvalue %gemPrm %p1GMP106, 1
  %p1GMP106.fca.1.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 1
  store double* %p1GMP106.fca.1.extract, double** %p1GMP106.fca.1.gep
  %p1GMP106.fca.2.extract = extractvalue %gemPrm %p1GMP106, 2
  %p1GMP106.fca.2.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 2
  store double* %p1GMP106.fca.2.extract, double** %p1GMP106.fca.2.gep
  %p1GMP106.fca.3.extract = extractvalue %gemPrm %p1GMP106, 3
  %p1GMP106.fca.3.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 3
  store double* %p1GMP106.fca.3.extract, double** %p1GMP106.fca.3.gep
  %p1GMP106.fca.4.extract = extractvalue %gemPrm %p1GMP106, 4
  %p1GMP106.fca.4.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 4
  store double* %p1GMP106.fca.4.extract, double** %p1GMP106.fca.4.gep
  %p1GMP106.fca.5.extract = extractvalue %gemPrm %p1GMP106, 5
  %p1GMP106.fca.5.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 5
  store double* %p1GMP106.fca.5.extract, double** %p1GMP106.fca.5.gep
  %p1GMP106.fca.6.extract = extractvalue %gemPrm %p1GMP106, 6
  %p1GMP106.fca.6.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 6
  store <3 x double>* %p1GMP106.fca.6.extract, <3 x double>** %p1GMP106.fca.6.gep
  %p1GMP106.fca.7.extract = extractvalue %gemPrm %p1GMP106, 7
  %p1GMP106.fca.7.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 7
  store <3 x double>* %p1GMP106.fca.7.extract, <3 x double>** %p1GMP106.fca.7.gep
  %p1GMP106.fca.8.extract = extractvalue %gemPrm %p1GMP106, 8
  %p1GMP106.fca.8.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 8
  store <3 x double>* %p1GMP106.fca.8.extract, <3 x double>** %p1GMP106.fca.8.gep
  %p1GMP106.fca.9.extract = extractvalue %gemPrm %p1GMP106, 9
  %p1GMP106.fca.9.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 9
  store <3 x double>* %p1GMP106.fca.9.extract, <3 x double>** %p1GMP106.fca.9.gep
  %p1GMP106.fca.10.extract = extractvalue %gemPrm %p1GMP106, 10
  %p1GMP106.fca.10.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 10
  store <3 x double>* %p1GMP106.fca.10.extract, <3 x double>** %p1GMP106.fca.10.gep
  %p1GMP106.fca.11.extract = extractvalue %gemPrm %p1GMP106, 11
  %p1GMP106.fca.11.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 11
  store <3 x double>* %p1GMP106.fca.11.extract, <3 x double>** %p1GMP106.fca.11.gep
  %p1GMP106.fca.12.extract = extractvalue %gemPrm %p1GMP106, 12
  %p1GMP106.fca.12.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 12
  store <3 x double>* %p1GMP106.fca.12.extract, <3 x double>** %p1GMP106.fca.12.gep
  %p1GMP106.fca.13.extract = extractvalue %gemPrm %p1GMP106, 13
  %p1GMP106.fca.13.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 13
  store <2 x double>* %p1GMP106.fca.13.extract, <2 x double>** %p1GMP106.fca.13.gep
  %p1GMP106.fca.14.extract = extractvalue %gemPrm %p1GMP106, 14
  %p1GMP106.fca.14.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 14
  store <2 x double>* %p1GMP106.fca.14.extract, <2 x double>** %p1GMP106.fca.14.gep
  %p1GMP106.fca.15.extract = extractvalue %gemPrm %p1GMP106, 15
  %p1GMP106.fca.15.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 15
  store <2 x double>* %p1GMP106.fca.15.extract, <2 x double>** %p1GMP106.fca.15.gep
  %p1GMP106.fca.16.extract = extractvalue %gemPrm %p1GMP106, 16
  %p1GMP106.fca.16.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 16
  store <2 x double>* %p1GMP106.fca.16.extract, <2 x double>** %p1GMP106.fca.16.gep
  %p1GMP106.fca.17.extract = extractvalue %gemPrm %p1GMP106, 17
  %p1GMP106.fca.17.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 17
  store <2 x double>* %p1GMP106.fca.17.extract, <2 x double>** %p1GMP106.fca.17.gep
  %p1GMP106.fca.18.extract = extractvalue %gemPrm %p1GMP106, 18
  %p1GMP106.fca.18.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 18
  store <2 x double>* %p1GMP106.fca.18.extract, <2 x double>** %p1GMP106.fca.18.gep
  %p1GMP106.fca.19.extract = extractvalue %gemPrm %p1GMP106, 19
  %p1GMP106.fca.19.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 19
  store <2 x double>* %p1GMP106.fca.19.extract, <2 x double>** %p1GMP106.fca.19.gep
  %p1GMP106.fca.20.extract = extractvalue %gemPrm %p1GMP106, 20
  %p1GMP106.fca.20.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 20
  store <2 x double>* %p1GMP106.fca.20.extract, <2 x double>** %p1GMP106.fca.20.gep
  %p1GMP106.fca.21.extract = extractvalue %gemPrm %p1GMP106, 21
  %p1GMP106.fca.21.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 21
  store <2 x double>* %p1GMP106.fca.21.extract, <2 x double>** %p1GMP106.fca.21.gep
  %p1GMP106.fca.22.extract = extractvalue %gemPrm %p1GMP106, 22
  %p1GMP106.fca.22.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 22
  store <2 x double>* %p1GMP106.fca.22.extract, <2 x double>** %p1GMP106.fca.22.gep
  %p1GMP106.fca.23.extract = extractvalue %gemPrm %p1GMP106, 23
  %p1GMP106.fca.23.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 23
  store <2 x double>* %p1GMP106.fca.23.extract, <2 x double>** %p1GMP106.fca.23.gep
  %p1GMP106.fca.24.extract = extractvalue %gemPrm %p1GMP106, 24
  %p1GMP106.fca.24.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 24
  store <2 x double>* %p1GMP106.fca.24.extract, <2 x double>** %p1GMP106.fca.24.gep
  %p1GMP106.fca.25.extract = extractvalue %gemPrm %p1GMP106, 25
  %p1GMP106.fca.25.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 25
  store <2 x double>* %p1GMP106.fca.25.extract, <2 x double>** %p1GMP106.fca.25.gep
  %p1GMP106.fca.26.extract = extractvalue %gemPrm %p1GMP106, 26
  %p1GMP106.fca.26.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 26
  store <2 x double>* %p1GMP106.fca.26.extract, <2 x double>** %p1GMP106.fca.26.gep
  %p1GMP106.fca.27.extract = extractvalue %gemPrm %p1GMP106, 27
  %p1GMP106.fca.27.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 27
  store <2 x double>* %p1GMP106.fca.27.extract, <2 x double>** %p1GMP106.fca.27.gep
  %p1GMP106.fca.28.extract = extractvalue %gemPrm %p1GMP106, 28
  %p1GMP106.fca.28.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 28
  store <2 x double>* %p1GMP106.fca.28.extract, <2 x double>** %p1GMP106.fca.28.gep
  %p1GMP106.fca.29.extract = extractvalue %gemPrm %p1GMP106, 29
  %p1GMP106.fca.29.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 29
  store <2 x double>* %p1GMP106.fca.29.extract, <2 x double>** %p1GMP106.fca.29.gep
  %p1GMP106.fca.30.extract = extractvalue %gemPrm %p1GMP106, 30
  %p1GMP106.fca.30.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 30
  store <2 x double>* %p1GMP106.fca.30.extract, <2 x double>** %p1GMP106.fca.30.gep
  %p1GMP106.fca.31.extract = extractvalue %gemPrm %p1GMP106, 31
  %p1GMP106.fca.31.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 31
  store <2 x double>* %p1GMP106.fca.31.extract, <2 x double>** %p1GMP106.fca.31.gep
  %p1GMP106.fca.32.extract = extractvalue %gemPrm %p1GMP106, 32
  %p1GMP106.fca.32.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 32
  store <2 x double>* %p1GMP106.fca.32.extract, <2 x double>** %p1GMP106.fca.32.gep
  %p1GMP106.fca.33.extract = extractvalue %gemPrm %p1GMP106, 33
  %p1GMP106.fca.33.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 33
  store <2 x double>* %p1GMP106.fca.33.extract, <2 x double>** %p1GMP106.fca.33.gep
  %p1GMP106.fca.34.extract = extractvalue %gemPrm %p1GMP106, 34
  %p1GMP106.fca.34.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 34
  store <2 x double>* %p1GMP106.fca.34.extract, <2 x double>** %p1GMP106.fca.34.gep
  %p1GMP106.fca.35.extract = extractvalue %gemPrm %p1GMP106, 35
  %p1GMP106.fca.35.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 35
  store <2 x double>* %p1GMP106.fca.35.extract, <2 x double>** %p1GMP106.fca.35.gep
  %p1GMP106.fca.36.extract = extractvalue %gemPrm %p1GMP106, 36
  %p1GMP106.fca.36.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 36
  store <2 x double>* %p1GMP106.fca.36.extract, <2 x double>** %p1GMP106.fca.36.gep
  %p1GMP106.fca.37.extract = extractvalue %gemPrm %p1GMP106, 37
  %p1GMP106.fca.37.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 37
  store <2 x double>* %p1GMP106.fca.37.extract, <2 x double>** %p1GMP106.fca.37.gep
  %p1GMP106.fca.38.extract = extractvalue %gemPrm %p1GMP106, 38
  %p1GMP106.fca.38.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 38
  store <2 x double>* %p1GMP106.fca.38.extract, <2 x double>** %p1GMP106.fca.38.gep
  %p1GMP106.fca.39.extract = extractvalue %gemPrm %p1GMP106, 39
  %p1GMP106.fca.39.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 39
  store <2 x double>* %p1GMP106.fca.39.extract, <2 x double>** %p1GMP106.fca.39.gep
  %p1GMP106.fca.40.extract = extractvalue %gemPrm %p1GMP106, 40
  %p1GMP106.fca.40.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 40
  store <2 x double>* %p1GMP106.fca.40.extract, <2 x double>** %p1GMP106.fca.40.gep
  %p1GMP106.fca.41.extract = extractvalue %gemPrm %p1GMP106, 41
  %p1GMP106.fca.41.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 41
  store <2 x double>* %p1GMP106.fca.41.extract, <2 x double>** %p1GMP106.fca.41.gep
  %p1GMP106.fca.42.extract = extractvalue %gemPrm %p1GMP106, 42
  %p1GMP106.fca.42.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 42
  store <4 x double>* %p1GMP106.fca.42.extract, <4 x double>** %p1GMP106.fca.42.gep
  %p1GMP106.fca.43.extract = extractvalue %gemPrm %p1GMP106, 43
  %p1GMP106.fca.43.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 43
  store <4 x double>* %p1GMP106.fca.43.extract, <4 x double>** %p1GMP106.fca.43.gep
  %p1GMP106.fca.44.extract = extractvalue %gemPrm %p1GMP106, 44
  %p1GMP106.fca.44.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 44
  store <4 x double>* %p1GMP106.fca.44.extract, <4 x double>** %p1GMP106.fca.44.gep
  %p1GMP106.fca.45.extract = extractvalue %gemPrm %p1GMP106, 45
  %p1GMP106.fca.45.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 45
  store <4 x double>* %p1GMP106.fca.45.extract, <4 x double>** %p1GMP106.fca.45.gep
  %p1GMP106.fca.46.extract = extractvalue %gemPrm %p1GMP106, 46
  %p1GMP106.fca.46.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 46
  store <4 x double>* %p1GMP106.fca.46.extract, <4 x double>** %p1GMP106.fca.46.gep
  %p1GMP106.fca.47.extract = extractvalue %gemPrm %p1GMP106, 47
  %p1GMP106.fca.47.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 47
  store <4 x double>* %p1GMP106.fca.47.extract, <4 x double>** %p1GMP106.fca.47.gep
  %p1GMP106.fca.48.extract = extractvalue %gemPrm %p1GMP106, 48
  %p1GMP106.fca.48.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 48
  store <4 x double>* %p1GMP106.fca.48.extract, <4 x double>** %p1GMP106.fca.48.gep
  %p1GMP106.fca.49.extract = extractvalue %gemPrm %p1GMP106, 49
  %p1GMP106.fca.49.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 49
  store <4 x double>* %p1GMP106.fca.49.extract, <4 x double>** %p1GMP106.fca.49.gep
  %p1GMP106.fca.50.extract = extractvalue %gemPrm %p1GMP106, 50
  %p1GMP106.fca.50.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 50
  store <4 x double>* %p1GMP106.fca.50.extract, <4 x double>** %p1GMP106.fca.50.gep
  %p1GMP106.fca.51.extract = extractvalue %gemPrm %p1GMP106, 51
  %p1GMP106.fca.51.gep = getelementptr inbounds %gemPrm, %gemPrm* %p1GMP, i32 0, i32 51
  store <3 x double>* %p1GMP106.fca.51.extract, <3 x double>** %p1GMP106.fca.51.gep
  %p2GMP107 = call %gemPrm @"gemPrm@Z6gemPrmM52N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PN8pc_DISC2[V"()
  %p2GMP107.fca.0.extract = extractvalue %gemPrm %p2GMP107, 0
  %p2GMP107.fca.0.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 0
  store double* %p2GMP107.fca.0.extract, double** %p2GMP107.fca.0.gep
  %p2GMP107.fca.1.extract = extractvalue %gemPrm %p2GMP107, 1
  %p2GMP107.fca.1.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 1
  store double* %p2GMP107.fca.1.extract, double** %p2GMP107.fca.1.gep
  %p2GMP107.fca.2.extract = extractvalue %gemPrm %p2GMP107, 2
  %p2GMP107.fca.2.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 2
  store double* %p2GMP107.fca.2.extract, double** %p2GMP107.fca.2.gep
  %p2GMP107.fca.3.extract = extractvalue %gemPrm %p2GMP107, 3
  %p2GMP107.fca.3.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 3
  store double* %p2GMP107.fca.3.extract, double** %p2GMP107.fca.3.gep
  %p2GMP107.fca.4.extract = extractvalue %gemPrm %p2GMP107, 4
  %p2GMP107.fca.4.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 4
  store double* %p2GMP107.fca.4.extract, double** %p2GMP107.fca.4.gep
  %p2GMP107.fca.5.extract = extractvalue %gemPrm %p2GMP107, 5
  %p2GMP107.fca.5.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 5
  store double* %p2GMP107.fca.5.extract, double** %p2GMP107.fca.5.gep
  %p2GMP107.fca.6.extract = extractvalue %gemPrm %p2GMP107, 6
  %p2GMP107.fca.6.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 6
  store <3 x double>* %p2GMP107.fca.6.extract, <3 x double>** %p2GMP107.fca.6.gep
  %p2GMP107.fca.7.extract = extractvalue %gemPrm %p2GMP107, 7
  %p2GMP107.fca.7.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 7
  store <3 x double>* %p2GMP107.fca.7.extract, <3 x double>** %p2GMP107.fca.7.gep
  %p2GMP107.fca.8.extract = extractvalue %gemPrm %p2GMP107, 8
  %p2GMP107.fca.8.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 8
  store <3 x double>* %p2GMP107.fca.8.extract, <3 x double>** %p2GMP107.fca.8.gep
  %p2GMP107.fca.9.extract = extractvalue %gemPrm %p2GMP107, 9
  %p2GMP107.fca.9.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 9
  store <3 x double>* %p2GMP107.fca.9.extract, <3 x double>** %p2GMP107.fca.9.gep
  %p2GMP107.fca.10.extract = extractvalue %gemPrm %p2GMP107, 10
  %p2GMP107.fca.10.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 10
  store <3 x double>* %p2GMP107.fca.10.extract, <3 x double>** %p2GMP107.fca.10.gep
  %p2GMP107.fca.11.extract = extractvalue %gemPrm %p2GMP107, 11
  %p2GMP107.fca.11.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 11
  store <3 x double>* %p2GMP107.fca.11.extract, <3 x double>** %p2GMP107.fca.11.gep
  %p2GMP107.fca.12.extract = extractvalue %gemPrm %p2GMP107, 12
  %p2GMP107.fca.12.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 12
  store <3 x double>* %p2GMP107.fca.12.extract, <3 x double>** %p2GMP107.fca.12.gep
  %p2GMP107.fca.13.extract = extractvalue %gemPrm %p2GMP107, 13
  %p2GMP107.fca.13.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 13
  store <2 x double>* %p2GMP107.fca.13.extract, <2 x double>** %p2GMP107.fca.13.gep
  %p2GMP107.fca.14.extract = extractvalue %gemPrm %p2GMP107, 14
  %p2GMP107.fca.14.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 14
  store <2 x double>* %p2GMP107.fca.14.extract, <2 x double>** %p2GMP107.fca.14.gep
  %p2GMP107.fca.15.extract = extractvalue %gemPrm %p2GMP107, 15
  %p2GMP107.fca.15.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 15
  store <2 x double>* %p2GMP107.fca.15.extract, <2 x double>** %p2GMP107.fca.15.gep
  %p2GMP107.fca.16.extract = extractvalue %gemPrm %p2GMP107, 16
  %p2GMP107.fca.16.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 16
  store <2 x double>* %p2GMP107.fca.16.extract, <2 x double>** %p2GMP107.fca.16.gep
  %p2GMP107.fca.17.extract = extractvalue %gemPrm %p2GMP107, 17
  %p2GMP107.fca.17.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 17
  store <2 x double>* %p2GMP107.fca.17.extract, <2 x double>** %p2GMP107.fca.17.gep
  %p2GMP107.fca.18.extract = extractvalue %gemPrm %p2GMP107, 18
  %p2GMP107.fca.18.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 18
  store <2 x double>* %p2GMP107.fca.18.extract, <2 x double>** %p2GMP107.fca.18.gep
  %p2GMP107.fca.19.extract = extractvalue %gemPrm %p2GMP107, 19
  %p2GMP107.fca.19.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 19
  store <2 x double>* %p2GMP107.fca.19.extract, <2 x double>** %p2GMP107.fca.19.gep
  %p2GMP107.fca.20.extract = extractvalue %gemPrm %p2GMP107, 20
  %p2GMP107.fca.20.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 20
  store <2 x double>* %p2GMP107.fca.20.extract, <2 x double>** %p2GMP107.fca.20.gep
  %p2GMP107.fca.21.extract = extractvalue %gemPrm %p2GMP107, 21
  %p2GMP107.fca.21.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 21
  store <2 x double>* %p2GMP107.fca.21.extract, <2 x double>** %p2GMP107.fca.21.gep
  %p2GMP107.fca.22.extract = extractvalue %gemPrm %p2GMP107, 22
  %p2GMP107.fca.22.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 22
  store <2 x double>* %p2GMP107.fca.22.extract, <2 x double>** %p2GMP107.fca.22.gep
  %p2GMP107.fca.23.extract = extractvalue %gemPrm %p2GMP107, 23
  %p2GMP107.fca.23.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 23
  store <2 x double>* %p2GMP107.fca.23.extract, <2 x double>** %p2GMP107.fca.23.gep
  %p2GMP107.fca.24.extract = extractvalue %gemPrm %p2GMP107, 24
  %p2GMP107.fca.24.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 24
  store <2 x double>* %p2GMP107.fca.24.extract, <2 x double>** %p2GMP107.fca.24.gep
  %p2GMP107.fca.25.extract = extractvalue %gemPrm %p2GMP107, 25
  %p2GMP107.fca.25.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 25
  store <2 x double>* %p2GMP107.fca.25.extract, <2 x double>** %p2GMP107.fca.25.gep
  %p2GMP107.fca.26.extract = extractvalue %gemPrm %p2GMP107, 26
  %p2GMP107.fca.26.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 26
  store <2 x double>* %p2GMP107.fca.26.extract, <2 x double>** %p2GMP107.fca.26.gep
  %p2GMP107.fca.27.extract = extractvalue %gemPrm %p2GMP107, 27
  %p2GMP107.fca.27.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 27
  store <2 x double>* %p2GMP107.fca.27.extract, <2 x double>** %p2GMP107.fca.27.gep
  %p2GMP107.fca.28.extract = extractvalue %gemPrm %p2GMP107, 28
  %p2GMP107.fca.28.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 28
  store <2 x double>* %p2GMP107.fca.28.extract, <2 x double>** %p2GMP107.fca.28.gep
  %p2GMP107.fca.29.extract = extractvalue %gemPrm %p2GMP107, 29
  %p2GMP107.fca.29.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 29
  store <2 x double>* %p2GMP107.fca.29.extract, <2 x double>** %p2GMP107.fca.29.gep
  %p2GMP107.fca.30.extract = extractvalue %gemPrm %p2GMP107, 30
  %p2GMP107.fca.30.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 30
  store <2 x double>* %p2GMP107.fca.30.extract, <2 x double>** %p2GMP107.fca.30.gep
  %p2GMP107.fca.31.extract = extractvalue %gemPrm %p2GMP107, 31
  %p2GMP107.fca.31.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 31
  store <2 x double>* %p2GMP107.fca.31.extract, <2 x double>** %p2GMP107.fca.31.gep
  %p2GMP107.fca.32.extract = extractvalue %gemPrm %p2GMP107, 32
  %p2GMP107.fca.32.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 32
  store <2 x double>* %p2GMP107.fca.32.extract, <2 x double>** %p2GMP107.fca.32.gep
  %p2GMP107.fca.33.extract = extractvalue %gemPrm %p2GMP107, 33
  %p2GMP107.fca.33.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 33
  store <2 x double>* %p2GMP107.fca.33.extract, <2 x double>** %p2GMP107.fca.33.gep
  %p2GMP107.fca.34.extract = extractvalue %gemPrm %p2GMP107, 34
  %p2GMP107.fca.34.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 34
  store <2 x double>* %p2GMP107.fca.34.extract, <2 x double>** %p2GMP107.fca.34.gep
  %p2GMP107.fca.35.extract = extractvalue %gemPrm %p2GMP107, 35
  %p2GMP107.fca.35.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 35
  store <2 x double>* %p2GMP107.fca.35.extract, <2 x double>** %p2GMP107.fca.35.gep
  %p2GMP107.fca.36.extract = extractvalue %gemPrm %p2GMP107, 36
  %p2GMP107.fca.36.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 36
  store <2 x double>* %p2GMP107.fca.36.extract, <2 x double>** %p2GMP107.fca.36.gep
  %p2GMP107.fca.37.extract = extractvalue %gemPrm %p2GMP107, 37
  %p2GMP107.fca.37.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 37
  store <2 x double>* %p2GMP107.fca.37.extract, <2 x double>** %p2GMP107.fca.37.gep
  %p2GMP107.fca.38.extract = extractvalue %gemPrm %p2GMP107, 38
  %p2GMP107.fca.38.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 38
  store <2 x double>* %p2GMP107.fca.38.extract, <2 x double>** %p2GMP107.fca.38.gep
  %p2GMP107.fca.39.extract = extractvalue %gemPrm %p2GMP107, 39
  %p2GMP107.fca.39.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 39
  store <2 x double>* %p2GMP107.fca.39.extract, <2 x double>** %p2GMP107.fca.39.gep
  %p2GMP107.fca.40.extract = extractvalue %gemPrm %p2GMP107, 40
  %p2GMP107.fca.40.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 40
  store <2 x double>* %p2GMP107.fca.40.extract, <2 x double>** %p2GMP107.fca.40.gep
  %p2GMP107.fca.41.extract = extractvalue %gemPrm %p2GMP107, 41
  %p2GMP107.fca.41.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 41
  store <2 x double>* %p2GMP107.fca.41.extract, <2 x double>** %p2GMP107.fca.41.gep
  %p2GMP107.fca.42.extract = extractvalue %gemPrm %p2GMP107, 42
  %p2GMP107.fca.42.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 42
  store <4 x double>* %p2GMP107.fca.42.extract, <4 x double>** %p2GMP107.fca.42.gep
  %p2GMP107.fca.43.extract = extractvalue %gemPrm %p2GMP107, 43
  %p2GMP107.fca.43.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 43
  store <4 x double>* %p2GMP107.fca.43.extract, <4 x double>** %p2GMP107.fca.43.gep
  %p2GMP107.fca.44.extract = extractvalue %gemPrm %p2GMP107, 44
  %p2GMP107.fca.44.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 44
  store <4 x double>* %p2GMP107.fca.44.extract, <4 x double>** %p2GMP107.fca.44.gep
  %p2GMP107.fca.45.extract = extractvalue %gemPrm %p2GMP107, 45
  %p2GMP107.fca.45.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 45
  store <4 x double>* %p2GMP107.fca.45.extract, <4 x double>** %p2GMP107.fca.45.gep
  %p2GMP107.fca.46.extract = extractvalue %gemPrm %p2GMP107, 46
  %p2GMP107.fca.46.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 46
  store <4 x double>* %p2GMP107.fca.46.extract, <4 x double>** %p2GMP107.fca.46.gep
  %p2GMP107.fca.47.extract = extractvalue %gemPrm %p2GMP107, 47
  %p2GMP107.fca.47.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 47
  store <4 x double>* %p2GMP107.fca.47.extract, <4 x double>** %p2GMP107.fca.47.gep
  %p2GMP107.fca.48.extract = extractvalue %gemPrm %p2GMP107, 48
  %p2GMP107.fca.48.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 48
  store <4 x double>* %p2GMP107.fca.48.extract, <4 x double>** %p2GMP107.fca.48.gep
  %p2GMP107.fca.49.extract = extractvalue %gemPrm %p2GMP107, 49
  %p2GMP107.fca.49.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 49
  store <4 x double>* %p2GMP107.fca.49.extract, <4 x double>** %p2GMP107.fca.49.gep
  %p2GMP107.fca.50.extract = extractvalue %gemPrm %p2GMP107, 50
  %p2GMP107.fca.50.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 50
  store <4 x double>* %p2GMP107.fca.50.extract, <4 x double>** %p2GMP107.fca.50.gep
  %p2GMP107.fca.51.extract = extractvalue %gemPrm %p2GMP107, 51
  %p2GMP107.fca.51.gep = getelementptr inbounds %gemPrm, %gemPrm* %p2GMP, i32 0, i32 51
  store <3 x double>* %p2GMP107.fca.51.extract, <3 x double>** %p2GMP107.fca.51.gep
  %v1GMP108 = call %gemPrm @"gemPrm@Z6gemPrmM52N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PN8pc_DISC2[V"()
  %v1GMP108.fca.0.extract = extractvalue %gemPrm %v1GMP108, 0
  %v1GMP108.fca.0.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 0
  store double* %v1GMP108.fca.0.extract, double** %v1GMP108.fca.0.gep
  %v1GMP108.fca.1.extract = extractvalue %gemPrm %v1GMP108, 1
  %v1GMP108.fca.1.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 1
  store double* %v1GMP108.fca.1.extract, double** %v1GMP108.fca.1.gep
  %v1GMP108.fca.2.extract = extractvalue %gemPrm %v1GMP108, 2
  %v1GMP108.fca.2.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 2
  store double* %v1GMP108.fca.2.extract, double** %v1GMP108.fca.2.gep
  %v1GMP108.fca.3.extract = extractvalue %gemPrm %v1GMP108, 3
  %v1GMP108.fca.3.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 3
  store double* %v1GMP108.fca.3.extract, double** %v1GMP108.fca.3.gep
  %v1GMP108.fca.4.extract = extractvalue %gemPrm %v1GMP108, 4
  %v1GMP108.fca.4.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 4
  store double* %v1GMP108.fca.4.extract, double** %v1GMP108.fca.4.gep
  %v1GMP108.fca.5.extract = extractvalue %gemPrm %v1GMP108, 5
  %v1GMP108.fca.5.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 5
  store double* %v1GMP108.fca.5.extract, double** %v1GMP108.fca.5.gep
  %v1GMP108.fca.6.extract = extractvalue %gemPrm %v1GMP108, 6
  %v1GMP108.fca.6.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 6
  store <3 x double>* %v1GMP108.fca.6.extract, <3 x double>** %v1GMP108.fca.6.gep
  %v1GMP108.fca.7.extract = extractvalue %gemPrm %v1GMP108, 7
  %v1GMP108.fca.7.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 7
  store <3 x double>* %v1GMP108.fca.7.extract, <3 x double>** %v1GMP108.fca.7.gep
  %v1GMP108.fca.8.extract = extractvalue %gemPrm %v1GMP108, 8
  %v1GMP108.fca.8.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 8
  store <3 x double>* %v1GMP108.fca.8.extract, <3 x double>** %v1GMP108.fca.8.gep
  %v1GMP108.fca.9.extract = extractvalue %gemPrm %v1GMP108, 9
  %v1GMP108.fca.9.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 9
  store <3 x double>* %v1GMP108.fca.9.extract, <3 x double>** %v1GMP108.fca.9.gep
  %v1GMP108.fca.10.extract = extractvalue %gemPrm %v1GMP108, 10
  %v1GMP108.fca.10.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 10
  store <3 x double>* %v1GMP108.fca.10.extract, <3 x double>** %v1GMP108.fca.10.gep
  %v1GMP108.fca.11.extract = extractvalue %gemPrm %v1GMP108, 11
  %v1GMP108.fca.11.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 11
  store <3 x double>* %v1GMP108.fca.11.extract, <3 x double>** %v1GMP108.fca.11.gep
  %v1GMP108.fca.12.extract = extractvalue %gemPrm %v1GMP108, 12
  %v1GMP108.fca.12.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 12
  store <3 x double>* %v1GMP108.fca.12.extract, <3 x double>** %v1GMP108.fca.12.gep
  %v1GMP108.fca.13.extract = extractvalue %gemPrm %v1GMP108, 13
  %v1GMP108.fca.13.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 13
  store <2 x double>* %v1GMP108.fca.13.extract, <2 x double>** %v1GMP108.fca.13.gep
  %v1GMP108.fca.14.extract = extractvalue %gemPrm %v1GMP108, 14
  %v1GMP108.fca.14.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 14
  store <2 x double>* %v1GMP108.fca.14.extract, <2 x double>** %v1GMP108.fca.14.gep
  %v1GMP108.fca.15.extract = extractvalue %gemPrm %v1GMP108, 15
  %v1GMP108.fca.15.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 15
  store <2 x double>* %v1GMP108.fca.15.extract, <2 x double>** %v1GMP108.fca.15.gep
  %v1GMP108.fca.16.extract = extractvalue %gemPrm %v1GMP108, 16
  %v1GMP108.fca.16.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 16
  store <2 x double>* %v1GMP108.fca.16.extract, <2 x double>** %v1GMP108.fca.16.gep
  %v1GMP108.fca.17.extract = extractvalue %gemPrm %v1GMP108, 17
  %v1GMP108.fca.17.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 17
  store <2 x double>* %v1GMP108.fca.17.extract, <2 x double>** %v1GMP108.fca.17.gep
  %v1GMP108.fca.18.extract = extractvalue %gemPrm %v1GMP108, 18
  %v1GMP108.fca.18.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 18
  store <2 x double>* %v1GMP108.fca.18.extract, <2 x double>** %v1GMP108.fca.18.gep
  %v1GMP108.fca.19.extract = extractvalue %gemPrm %v1GMP108, 19
  %v1GMP108.fca.19.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 19
  store <2 x double>* %v1GMP108.fca.19.extract, <2 x double>** %v1GMP108.fca.19.gep
  %v1GMP108.fca.20.extract = extractvalue %gemPrm %v1GMP108, 20
  %v1GMP108.fca.20.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 20
  store <2 x double>* %v1GMP108.fca.20.extract, <2 x double>** %v1GMP108.fca.20.gep
  %v1GMP108.fca.21.extract = extractvalue %gemPrm %v1GMP108, 21
  %v1GMP108.fca.21.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 21
  store <2 x double>* %v1GMP108.fca.21.extract, <2 x double>** %v1GMP108.fca.21.gep
  %v1GMP108.fca.22.extract = extractvalue %gemPrm %v1GMP108, 22
  %v1GMP108.fca.22.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 22
  store <2 x double>* %v1GMP108.fca.22.extract, <2 x double>** %v1GMP108.fca.22.gep
  %v1GMP108.fca.23.extract = extractvalue %gemPrm %v1GMP108, 23
  %v1GMP108.fca.23.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 23
  store <2 x double>* %v1GMP108.fca.23.extract, <2 x double>** %v1GMP108.fca.23.gep
  %v1GMP108.fca.24.extract = extractvalue %gemPrm %v1GMP108, 24
  %v1GMP108.fca.24.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 24
  store <2 x double>* %v1GMP108.fca.24.extract, <2 x double>** %v1GMP108.fca.24.gep
  %v1GMP108.fca.25.extract = extractvalue %gemPrm %v1GMP108, 25
  %v1GMP108.fca.25.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 25
  store <2 x double>* %v1GMP108.fca.25.extract, <2 x double>** %v1GMP108.fca.25.gep
  %v1GMP108.fca.26.extract = extractvalue %gemPrm %v1GMP108, 26
  %v1GMP108.fca.26.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 26
  store <2 x double>* %v1GMP108.fca.26.extract, <2 x double>** %v1GMP108.fca.26.gep
  %v1GMP108.fca.27.extract = extractvalue %gemPrm %v1GMP108, 27
  %v1GMP108.fca.27.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 27
  store <2 x double>* %v1GMP108.fca.27.extract, <2 x double>** %v1GMP108.fca.27.gep
  %v1GMP108.fca.28.extract = extractvalue %gemPrm %v1GMP108, 28
  %v1GMP108.fca.28.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 28
  store <2 x double>* %v1GMP108.fca.28.extract, <2 x double>** %v1GMP108.fca.28.gep
  %v1GMP108.fca.29.extract = extractvalue %gemPrm %v1GMP108, 29
  %v1GMP108.fca.29.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 29
  store <2 x double>* %v1GMP108.fca.29.extract, <2 x double>** %v1GMP108.fca.29.gep
  %v1GMP108.fca.30.extract = extractvalue %gemPrm %v1GMP108, 30
  %v1GMP108.fca.30.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 30
  store <2 x double>* %v1GMP108.fca.30.extract, <2 x double>** %v1GMP108.fca.30.gep
  %v1GMP108.fca.31.extract = extractvalue %gemPrm %v1GMP108, 31
  %v1GMP108.fca.31.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 31
  store <2 x double>* %v1GMP108.fca.31.extract, <2 x double>** %v1GMP108.fca.31.gep
  %v1GMP108.fca.32.extract = extractvalue %gemPrm %v1GMP108, 32
  %v1GMP108.fca.32.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 32
  store <2 x double>* %v1GMP108.fca.32.extract, <2 x double>** %v1GMP108.fca.32.gep
  %v1GMP108.fca.33.extract = extractvalue %gemPrm %v1GMP108, 33
  %v1GMP108.fca.33.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 33
  store <2 x double>* %v1GMP108.fca.33.extract, <2 x double>** %v1GMP108.fca.33.gep
  %v1GMP108.fca.34.extract = extractvalue %gemPrm %v1GMP108, 34
  %v1GMP108.fca.34.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 34
  store <2 x double>* %v1GMP108.fca.34.extract, <2 x double>** %v1GMP108.fca.34.gep
  %v1GMP108.fca.35.extract = extractvalue %gemPrm %v1GMP108, 35
  %v1GMP108.fca.35.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 35
  store <2 x double>* %v1GMP108.fca.35.extract, <2 x double>** %v1GMP108.fca.35.gep
  %v1GMP108.fca.36.extract = extractvalue %gemPrm %v1GMP108, 36
  %v1GMP108.fca.36.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 36
  store <2 x double>* %v1GMP108.fca.36.extract, <2 x double>** %v1GMP108.fca.36.gep
  %v1GMP108.fca.37.extract = extractvalue %gemPrm %v1GMP108, 37
  %v1GMP108.fca.37.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 37
  store <2 x double>* %v1GMP108.fca.37.extract, <2 x double>** %v1GMP108.fca.37.gep
  %v1GMP108.fca.38.extract = extractvalue %gemPrm %v1GMP108, 38
  %v1GMP108.fca.38.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 38
  store <2 x double>* %v1GMP108.fca.38.extract, <2 x double>** %v1GMP108.fca.38.gep
  %v1GMP108.fca.39.extract = extractvalue %gemPrm %v1GMP108, 39
  %v1GMP108.fca.39.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 39
  store <2 x double>* %v1GMP108.fca.39.extract, <2 x double>** %v1GMP108.fca.39.gep
  %v1GMP108.fca.40.extract = extractvalue %gemPrm %v1GMP108, 40
  %v1GMP108.fca.40.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 40
  store <2 x double>* %v1GMP108.fca.40.extract, <2 x double>** %v1GMP108.fca.40.gep
  %v1GMP108.fca.41.extract = extractvalue %gemPrm %v1GMP108, 41
  %v1GMP108.fca.41.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 41
  store <2 x double>* %v1GMP108.fca.41.extract, <2 x double>** %v1GMP108.fca.41.gep
  %v1GMP108.fca.42.extract = extractvalue %gemPrm %v1GMP108, 42
  %v1GMP108.fca.42.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 42
  store <4 x double>* %v1GMP108.fca.42.extract, <4 x double>** %v1GMP108.fca.42.gep
  %v1GMP108.fca.43.extract = extractvalue %gemPrm %v1GMP108, 43
  %v1GMP108.fca.43.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 43
  store <4 x double>* %v1GMP108.fca.43.extract, <4 x double>** %v1GMP108.fca.43.gep
  %v1GMP108.fca.44.extract = extractvalue %gemPrm %v1GMP108, 44
  %v1GMP108.fca.44.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 44
  store <4 x double>* %v1GMP108.fca.44.extract, <4 x double>** %v1GMP108.fca.44.gep
  %v1GMP108.fca.45.extract = extractvalue %gemPrm %v1GMP108, 45
  %v1GMP108.fca.45.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 45
  store <4 x double>* %v1GMP108.fca.45.extract, <4 x double>** %v1GMP108.fca.45.gep
  %v1GMP108.fca.46.extract = extractvalue %gemPrm %v1GMP108, 46
  %v1GMP108.fca.46.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 46
  store <4 x double>* %v1GMP108.fca.46.extract, <4 x double>** %v1GMP108.fca.46.gep
  %v1GMP108.fca.47.extract = extractvalue %gemPrm %v1GMP108, 47
  %v1GMP108.fca.47.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 47
  store <4 x double>* %v1GMP108.fca.47.extract, <4 x double>** %v1GMP108.fca.47.gep
  %v1GMP108.fca.48.extract = extractvalue %gemPrm %v1GMP108, 48
  %v1GMP108.fca.48.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 48
  store <4 x double>* %v1GMP108.fca.48.extract, <4 x double>** %v1GMP108.fca.48.gep
  %v1GMP108.fca.49.extract = extractvalue %gemPrm %v1GMP108, 49
  %v1GMP108.fca.49.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 49
  store <4 x double>* %v1GMP108.fca.49.extract, <4 x double>** %v1GMP108.fca.49.gep
  %v1GMP108.fca.50.extract = extractvalue %gemPrm %v1GMP108, 50
  %v1GMP108.fca.50.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 50
  store <4 x double>* %v1GMP108.fca.50.extract, <4 x double>** %v1GMP108.fca.50.gep
  %v1GMP108.fca.51.extract = extractvalue %gemPrm %v1GMP108, 51
  %v1GMP108.fca.51.gep = getelementptr inbounds %gemPrm, %gemPrm* %v1GMP, i32 0, i32 51
  store <3 x double>* %v1GMP108.fca.51.extract, <3 x double>** %v1GMP108.fca.51.gep
  %v2GMP109 = call %gemPrm @"gemPrm@Z6gemPrmM52N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PN8pc_DISC2[V"()
  %v2GMP109.fca.0.extract = extractvalue %gemPrm %v2GMP109, 0
  %v2GMP109.fca.0.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 0
  store double* %v2GMP109.fca.0.extract, double** %v2GMP109.fca.0.gep
  %v2GMP109.fca.1.extract = extractvalue %gemPrm %v2GMP109, 1
  %v2GMP109.fca.1.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 1
  store double* %v2GMP109.fca.1.extract, double** %v2GMP109.fca.1.gep
  %v2GMP109.fca.2.extract = extractvalue %gemPrm %v2GMP109, 2
  %v2GMP109.fca.2.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 2
  store double* %v2GMP109.fca.2.extract, double** %v2GMP109.fca.2.gep
  %v2GMP109.fca.3.extract = extractvalue %gemPrm %v2GMP109, 3
  %v2GMP109.fca.3.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 3
  store double* %v2GMP109.fca.3.extract, double** %v2GMP109.fca.3.gep
  %v2GMP109.fca.4.extract = extractvalue %gemPrm %v2GMP109, 4
  %v2GMP109.fca.4.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 4
  store double* %v2GMP109.fca.4.extract, double** %v2GMP109.fca.4.gep
  %v2GMP109.fca.5.extract = extractvalue %gemPrm %v2GMP109, 5
  %v2GMP109.fca.5.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 5
  store double* %v2GMP109.fca.5.extract, double** %v2GMP109.fca.5.gep
  %v2GMP109.fca.6.extract = extractvalue %gemPrm %v2GMP109, 6
  %v2GMP109.fca.6.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 6
  store <3 x double>* %v2GMP109.fca.6.extract, <3 x double>** %v2GMP109.fca.6.gep
  %v2GMP109.fca.7.extract = extractvalue %gemPrm %v2GMP109, 7
  %v2GMP109.fca.7.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 7
  store <3 x double>* %v2GMP109.fca.7.extract, <3 x double>** %v2GMP109.fca.7.gep
  %v2GMP109.fca.8.extract = extractvalue %gemPrm %v2GMP109, 8
  %v2GMP109.fca.8.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 8
  store <3 x double>* %v2GMP109.fca.8.extract, <3 x double>** %v2GMP109.fca.8.gep
  %v2GMP109.fca.9.extract = extractvalue %gemPrm %v2GMP109, 9
  %v2GMP109.fca.9.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 9
  store <3 x double>* %v2GMP109.fca.9.extract, <3 x double>** %v2GMP109.fca.9.gep
  %v2GMP109.fca.10.extract = extractvalue %gemPrm %v2GMP109, 10
  %v2GMP109.fca.10.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 10
  store <3 x double>* %v2GMP109.fca.10.extract, <3 x double>** %v2GMP109.fca.10.gep
  %v2GMP109.fca.11.extract = extractvalue %gemPrm %v2GMP109, 11
  %v2GMP109.fca.11.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 11
  store <3 x double>* %v2GMP109.fca.11.extract, <3 x double>** %v2GMP109.fca.11.gep
  %v2GMP109.fca.12.extract = extractvalue %gemPrm %v2GMP109, 12
  %v2GMP109.fca.12.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 12
  store <3 x double>* %v2GMP109.fca.12.extract, <3 x double>** %v2GMP109.fca.12.gep
  %v2GMP109.fca.13.extract = extractvalue %gemPrm %v2GMP109, 13
  %v2GMP109.fca.13.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 13
  store <2 x double>* %v2GMP109.fca.13.extract, <2 x double>** %v2GMP109.fca.13.gep
  %v2GMP109.fca.14.extract = extractvalue %gemPrm %v2GMP109, 14
  %v2GMP109.fca.14.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 14
  store <2 x double>* %v2GMP109.fca.14.extract, <2 x double>** %v2GMP109.fca.14.gep
  %v2GMP109.fca.15.extract = extractvalue %gemPrm %v2GMP109, 15
  %v2GMP109.fca.15.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 15
  store <2 x double>* %v2GMP109.fca.15.extract, <2 x double>** %v2GMP109.fca.15.gep
  %v2GMP109.fca.16.extract = extractvalue %gemPrm %v2GMP109, 16
  %v2GMP109.fca.16.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 16
  store <2 x double>* %v2GMP109.fca.16.extract, <2 x double>** %v2GMP109.fca.16.gep
  %v2GMP109.fca.17.extract = extractvalue %gemPrm %v2GMP109, 17
  %v2GMP109.fca.17.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 17
  store <2 x double>* %v2GMP109.fca.17.extract, <2 x double>** %v2GMP109.fca.17.gep
  %v2GMP109.fca.18.extract = extractvalue %gemPrm %v2GMP109, 18
  %v2GMP109.fca.18.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 18
  store <2 x double>* %v2GMP109.fca.18.extract, <2 x double>** %v2GMP109.fca.18.gep
  %v2GMP109.fca.19.extract = extractvalue %gemPrm %v2GMP109, 19
  %v2GMP109.fca.19.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 19
  store <2 x double>* %v2GMP109.fca.19.extract, <2 x double>** %v2GMP109.fca.19.gep
  %v2GMP109.fca.20.extract = extractvalue %gemPrm %v2GMP109, 20
  %v2GMP109.fca.20.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 20
  store <2 x double>* %v2GMP109.fca.20.extract, <2 x double>** %v2GMP109.fca.20.gep
  %v2GMP109.fca.21.extract = extractvalue %gemPrm %v2GMP109, 21
  %v2GMP109.fca.21.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 21
  store <2 x double>* %v2GMP109.fca.21.extract, <2 x double>** %v2GMP109.fca.21.gep
  %v2GMP109.fca.22.extract = extractvalue %gemPrm %v2GMP109, 22
  %v2GMP109.fca.22.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 22
  store <2 x double>* %v2GMP109.fca.22.extract, <2 x double>** %v2GMP109.fca.22.gep
  %v2GMP109.fca.23.extract = extractvalue %gemPrm %v2GMP109, 23
  %v2GMP109.fca.23.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 23
  store <2 x double>* %v2GMP109.fca.23.extract, <2 x double>** %v2GMP109.fca.23.gep
  %v2GMP109.fca.24.extract = extractvalue %gemPrm %v2GMP109, 24
  %v2GMP109.fca.24.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 24
  store <2 x double>* %v2GMP109.fca.24.extract, <2 x double>** %v2GMP109.fca.24.gep
  %v2GMP109.fca.25.extract = extractvalue %gemPrm %v2GMP109, 25
  %v2GMP109.fca.25.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 25
  store <2 x double>* %v2GMP109.fca.25.extract, <2 x double>** %v2GMP109.fca.25.gep
  %v2GMP109.fca.26.extract = extractvalue %gemPrm %v2GMP109, 26
  %v2GMP109.fca.26.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 26
  store <2 x double>* %v2GMP109.fca.26.extract, <2 x double>** %v2GMP109.fca.26.gep
  %v2GMP109.fca.27.extract = extractvalue %gemPrm %v2GMP109, 27
  %v2GMP109.fca.27.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 27
  store <2 x double>* %v2GMP109.fca.27.extract, <2 x double>** %v2GMP109.fca.27.gep
  %v2GMP109.fca.28.extract = extractvalue %gemPrm %v2GMP109, 28
  %v2GMP109.fca.28.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 28
  store <2 x double>* %v2GMP109.fca.28.extract, <2 x double>** %v2GMP109.fca.28.gep
  %v2GMP109.fca.29.extract = extractvalue %gemPrm %v2GMP109, 29
  %v2GMP109.fca.29.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 29
  store <2 x double>* %v2GMP109.fca.29.extract, <2 x double>** %v2GMP109.fca.29.gep
  %v2GMP109.fca.30.extract = extractvalue %gemPrm %v2GMP109, 30
  %v2GMP109.fca.30.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 30
  store <2 x double>* %v2GMP109.fca.30.extract, <2 x double>** %v2GMP109.fca.30.gep
  %v2GMP109.fca.31.extract = extractvalue %gemPrm %v2GMP109, 31
  %v2GMP109.fca.31.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 31
  store <2 x double>* %v2GMP109.fca.31.extract, <2 x double>** %v2GMP109.fca.31.gep
  %v2GMP109.fca.32.extract = extractvalue %gemPrm %v2GMP109, 32
  %v2GMP109.fca.32.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 32
  store <2 x double>* %v2GMP109.fca.32.extract, <2 x double>** %v2GMP109.fca.32.gep
  %v2GMP109.fca.33.extract = extractvalue %gemPrm %v2GMP109, 33
  %v2GMP109.fca.33.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 33
  store <2 x double>* %v2GMP109.fca.33.extract, <2 x double>** %v2GMP109.fca.33.gep
  %v2GMP109.fca.34.extract = extractvalue %gemPrm %v2GMP109, 34
  %v2GMP109.fca.34.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 34
  store <2 x double>* %v2GMP109.fca.34.extract, <2 x double>** %v2GMP109.fca.34.gep
  %v2GMP109.fca.35.extract = extractvalue %gemPrm %v2GMP109, 35
  %v2GMP109.fca.35.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 35
  store <2 x double>* %v2GMP109.fca.35.extract, <2 x double>** %v2GMP109.fca.35.gep
  %v2GMP109.fca.36.extract = extractvalue %gemPrm %v2GMP109, 36
  %v2GMP109.fca.36.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 36
  store <2 x double>* %v2GMP109.fca.36.extract, <2 x double>** %v2GMP109.fca.36.gep
  %v2GMP109.fca.37.extract = extractvalue %gemPrm %v2GMP109, 37
  %v2GMP109.fca.37.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 37
  store <2 x double>* %v2GMP109.fca.37.extract, <2 x double>** %v2GMP109.fca.37.gep
  %v2GMP109.fca.38.extract = extractvalue %gemPrm %v2GMP109, 38
  %v2GMP109.fca.38.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 38
  store <2 x double>* %v2GMP109.fca.38.extract, <2 x double>** %v2GMP109.fca.38.gep
  %v2GMP109.fca.39.extract = extractvalue %gemPrm %v2GMP109, 39
  %v2GMP109.fca.39.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 39
  store <2 x double>* %v2GMP109.fca.39.extract, <2 x double>** %v2GMP109.fca.39.gep
  %v2GMP109.fca.40.extract = extractvalue %gemPrm %v2GMP109, 40
  %v2GMP109.fca.40.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 40
  store <2 x double>* %v2GMP109.fca.40.extract, <2 x double>** %v2GMP109.fca.40.gep
  %v2GMP109.fca.41.extract = extractvalue %gemPrm %v2GMP109, 41
  %v2GMP109.fca.41.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 41
  store <2 x double>* %v2GMP109.fca.41.extract, <2 x double>** %v2GMP109.fca.41.gep
  %v2GMP109.fca.42.extract = extractvalue %gemPrm %v2GMP109, 42
  %v2GMP109.fca.42.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 42
  store <4 x double>* %v2GMP109.fca.42.extract, <4 x double>** %v2GMP109.fca.42.gep
  %v2GMP109.fca.43.extract = extractvalue %gemPrm %v2GMP109, 43
  %v2GMP109.fca.43.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 43
  store <4 x double>* %v2GMP109.fca.43.extract, <4 x double>** %v2GMP109.fca.43.gep
  %v2GMP109.fca.44.extract = extractvalue %gemPrm %v2GMP109, 44
  %v2GMP109.fca.44.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 44
  store <4 x double>* %v2GMP109.fca.44.extract, <4 x double>** %v2GMP109.fca.44.gep
  %v2GMP109.fca.45.extract = extractvalue %gemPrm %v2GMP109, 45
  %v2GMP109.fca.45.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 45
  store <4 x double>* %v2GMP109.fca.45.extract, <4 x double>** %v2GMP109.fca.45.gep
  %v2GMP109.fca.46.extract = extractvalue %gemPrm %v2GMP109, 46
  %v2GMP109.fca.46.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 46
  store <4 x double>* %v2GMP109.fca.46.extract, <4 x double>** %v2GMP109.fca.46.gep
  %v2GMP109.fca.47.extract = extractvalue %gemPrm %v2GMP109, 47
  %v2GMP109.fca.47.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 47
  store <4 x double>* %v2GMP109.fca.47.extract, <4 x double>** %v2GMP109.fca.47.gep
  %v2GMP109.fca.48.extract = extractvalue %gemPrm %v2GMP109, 48
  %v2GMP109.fca.48.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 48
  store <4 x double>* %v2GMP109.fca.48.extract, <4 x double>** %v2GMP109.fca.48.gep
  %v2GMP109.fca.49.extract = extractvalue %gemPrm %v2GMP109, 49
  %v2GMP109.fca.49.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 49
  store <4 x double>* %v2GMP109.fca.49.extract, <4 x double>** %v2GMP109.fca.49.gep
  %v2GMP109.fca.50.extract = extractvalue %gemPrm %v2GMP109, 50
  %v2GMP109.fca.50.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 50
  store <4 x double>* %v2GMP109.fca.50.extract, <4 x double>** %v2GMP109.fca.50.gep
  %v2GMP109.fca.51.extract = extractvalue %gemPrm %v2GMP109, 51
  %v2GMP109.fca.51.gep = getelementptr inbounds %gemPrm, %gemPrm* %v2GMP, i32 0, i32 51
  store <3 x double>* %v2GMP109.fca.51.extract, <3 x double>** %v2GMP109.fca.51.gep
  %v3GMP110 = call %gemPrm @"gemPrm@Z6gemPrmM52N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PN8pc_DISC2[V"()
  %v3GMP110.fca.0.extract = extractvalue %gemPrm %v3GMP110, 0
  %v3GMP110.fca.0.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 0
  store double* %v3GMP110.fca.0.extract, double** %v3GMP110.fca.0.gep
  %v3GMP110.fca.1.extract = extractvalue %gemPrm %v3GMP110, 1
  %v3GMP110.fca.1.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 1
  store double* %v3GMP110.fca.1.extract, double** %v3GMP110.fca.1.gep
  %v3GMP110.fca.2.extract = extractvalue %gemPrm %v3GMP110, 2
  %v3GMP110.fca.2.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 2
  store double* %v3GMP110.fca.2.extract, double** %v3GMP110.fca.2.gep
  %v3GMP110.fca.3.extract = extractvalue %gemPrm %v3GMP110, 3
  %v3GMP110.fca.3.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 3
  store double* %v3GMP110.fca.3.extract, double** %v3GMP110.fca.3.gep
  %v3GMP110.fca.4.extract = extractvalue %gemPrm %v3GMP110, 4
  %v3GMP110.fca.4.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 4
  store double* %v3GMP110.fca.4.extract, double** %v3GMP110.fca.4.gep
  %v3GMP110.fca.5.extract = extractvalue %gemPrm %v3GMP110, 5
  %v3GMP110.fca.5.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 5
  store double* %v3GMP110.fca.5.extract, double** %v3GMP110.fca.5.gep
  %v3GMP110.fca.6.extract = extractvalue %gemPrm %v3GMP110, 6
  %v3GMP110.fca.6.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 6
  store <3 x double>* %v3GMP110.fca.6.extract, <3 x double>** %v3GMP110.fca.6.gep
  %v3GMP110.fca.7.extract = extractvalue %gemPrm %v3GMP110, 7
  %v3GMP110.fca.7.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 7
  store <3 x double>* %v3GMP110.fca.7.extract, <3 x double>** %v3GMP110.fca.7.gep
  %v3GMP110.fca.8.extract = extractvalue %gemPrm %v3GMP110, 8
  %v3GMP110.fca.8.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 8
  store <3 x double>* %v3GMP110.fca.8.extract, <3 x double>** %v3GMP110.fca.8.gep
  %v3GMP110.fca.9.extract = extractvalue %gemPrm %v3GMP110, 9
  %v3GMP110.fca.9.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 9
  store <3 x double>* %v3GMP110.fca.9.extract, <3 x double>** %v3GMP110.fca.9.gep
  %v3GMP110.fca.10.extract = extractvalue %gemPrm %v3GMP110, 10
  %v3GMP110.fca.10.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 10
  store <3 x double>* %v3GMP110.fca.10.extract, <3 x double>** %v3GMP110.fca.10.gep
  %v3GMP110.fca.11.extract = extractvalue %gemPrm %v3GMP110, 11
  %v3GMP110.fca.11.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 11
  store <3 x double>* %v3GMP110.fca.11.extract, <3 x double>** %v3GMP110.fca.11.gep
  %v3GMP110.fca.12.extract = extractvalue %gemPrm %v3GMP110, 12
  %v3GMP110.fca.12.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 12
  store <3 x double>* %v3GMP110.fca.12.extract, <3 x double>** %v3GMP110.fca.12.gep
  %v3GMP110.fca.13.extract = extractvalue %gemPrm %v3GMP110, 13
  %v3GMP110.fca.13.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 13
  store <2 x double>* %v3GMP110.fca.13.extract, <2 x double>** %v3GMP110.fca.13.gep
  %v3GMP110.fca.14.extract = extractvalue %gemPrm %v3GMP110, 14
  %v3GMP110.fca.14.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 14
  store <2 x double>* %v3GMP110.fca.14.extract, <2 x double>** %v3GMP110.fca.14.gep
  %v3GMP110.fca.15.extract = extractvalue %gemPrm %v3GMP110, 15
  %v3GMP110.fca.15.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 15
  store <2 x double>* %v3GMP110.fca.15.extract, <2 x double>** %v3GMP110.fca.15.gep
  %v3GMP110.fca.16.extract = extractvalue %gemPrm %v3GMP110, 16
  %v3GMP110.fca.16.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 16
  store <2 x double>* %v3GMP110.fca.16.extract, <2 x double>** %v3GMP110.fca.16.gep
  %v3GMP110.fca.17.extract = extractvalue %gemPrm %v3GMP110, 17
  %v3GMP110.fca.17.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 17
  store <2 x double>* %v3GMP110.fca.17.extract, <2 x double>** %v3GMP110.fca.17.gep
  %v3GMP110.fca.18.extract = extractvalue %gemPrm %v3GMP110, 18
  %v3GMP110.fca.18.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 18
  store <2 x double>* %v3GMP110.fca.18.extract, <2 x double>** %v3GMP110.fca.18.gep
  %v3GMP110.fca.19.extract = extractvalue %gemPrm %v3GMP110, 19
  %v3GMP110.fca.19.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 19
  store <2 x double>* %v3GMP110.fca.19.extract, <2 x double>** %v3GMP110.fca.19.gep
  %v3GMP110.fca.20.extract = extractvalue %gemPrm %v3GMP110, 20
  %v3GMP110.fca.20.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 20
  store <2 x double>* %v3GMP110.fca.20.extract, <2 x double>** %v3GMP110.fca.20.gep
  %v3GMP110.fca.21.extract = extractvalue %gemPrm %v3GMP110, 21
  %v3GMP110.fca.21.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 21
  store <2 x double>* %v3GMP110.fca.21.extract, <2 x double>** %v3GMP110.fca.21.gep
  %v3GMP110.fca.22.extract = extractvalue %gemPrm %v3GMP110, 22
  %v3GMP110.fca.22.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 22
  store <2 x double>* %v3GMP110.fca.22.extract, <2 x double>** %v3GMP110.fca.22.gep
  %v3GMP110.fca.23.extract = extractvalue %gemPrm %v3GMP110, 23
  %v3GMP110.fca.23.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 23
  store <2 x double>* %v3GMP110.fca.23.extract, <2 x double>** %v3GMP110.fca.23.gep
  %v3GMP110.fca.24.extract = extractvalue %gemPrm %v3GMP110, 24
  %v3GMP110.fca.24.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 24
  store <2 x double>* %v3GMP110.fca.24.extract, <2 x double>** %v3GMP110.fca.24.gep
  %v3GMP110.fca.25.extract = extractvalue %gemPrm %v3GMP110, 25
  %v3GMP110.fca.25.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 25
  store <2 x double>* %v3GMP110.fca.25.extract, <2 x double>** %v3GMP110.fca.25.gep
  %v3GMP110.fca.26.extract = extractvalue %gemPrm %v3GMP110, 26
  %v3GMP110.fca.26.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 26
  store <2 x double>* %v3GMP110.fca.26.extract, <2 x double>** %v3GMP110.fca.26.gep
  %v3GMP110.fca.27.extract = extractvalue %gemPrm %v3GMP110, 27
  %v3GMP110.fca.27.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 27
  store <2 x double>* %v3GMP110.fca.27.extract, <2 x double>** %v3GMP110.fca.27.gep
  %v3GMP110.fca.28.extract = extractvalue %gemPrm %v3GMP110, 28
  %v3GMP110.fca.28.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 28
  store <2 x double>* %v3GMP110.fca.28.extract, <2 x double>** %v3GMP110.fca.28.gep
  %v3GMP110.fca.29.extract = extractvalue %gemPrm %v3GMP110, 29
  %v3GMP110.fca.29.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 29
  store <2 x double>* %v3GMP110.fca.29.extract, <2 x double>** %v3GMP110.fca.29.gep
  %v3GMP110.fca.30.extract = extractvalue %gemPrm %v3GMP110, 30
  %v3GMP110.fca.30.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 30
  store <2 x double>* %v3GMP110.fca.30.extract, <2 x double>** %v3GMP110.fca.30.gep
  %v3GMP110.fca.31.extract = extractvalue %gemPrm %v3GMP110, 31
  %v3GMP110.fca.31.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 31
  store <2 x double>* %v3GMP110.fca.31.extract, <2 x double>** %v3GMP110.fca.31.gep
  %v3GMP110.fca.32.extract = extractvalue %gemPrm %v3GMP110, 32
  %v3GMP110.fca.32.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 32
  store <2 x double>* %v3GMP110.fca.32.extract, <2 x double>** %v3GMP110.fca.32.gep
  %v3GMP110.fca.33.extract = extractvalue %gemPrm %v3GMP110, 33
  %v3GMP110.fca.33.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 33
  store <2 x double>* %v3GMP110.fca.33.extract, <2 x double>** %v3GMP110.fca.33.gep
  %v3GMP110.fca.34.extract = extractvalue %gemPrm %v3GMP110, 34
  %v3GMP110.fca.34.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 34
  store <2 x double>* %v3GMP110.fca.34.extract, <2 x double>** %v3GMP110.fca.34.gep
  %v3GMP110.fca.35.extract = extractvalue %gemPrm %v3GMP110, 35
  %v3GMP110.fca.35.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 35
  store <2 x double>* %v3GMP110.fca.35.extract, <2 x double>** %v3GMP110.fca.35.gep
  %v3GMP110.fca.36.extract = extractvalue %gemPrm %v3GMP110, 36
  %v3GMP110.fca.36.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 36
  store <2 x double>* %v3GMP110.fca.36.extract, <2 x double>** %v3GMP110.fca.36.gep
  %v3GMP110.fca.37.extract = extractvalue %gemPrm %v3GMP110, 37
  %v3GMP110.fca.37.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 37
  store <2 x double>* %v3GMP110.fca.37.extract, <2 x double>** %v3GMP110.fca.37.gep
  %v3GMP110.fca.38.extract = extractvalue %gemPrm %v3GMP110, 38
  %v3GMP110.fca.38.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 38
  store <2 x double>* %v3GMP110.fca.38.extract, <2 x double>** %v3GMP110.fca.38.gep
  %v3GMP110.fca.39.extract = extractvalue %gemPrm %v3GMP110, 39
  %v3GMP110.fca.39.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 39
  store <2 x double>* %v3GMP110.fca.39.extract, <2 x double>** %v3GMP110.fca.39.gep
  %v3GMP110.fca.40.extract = extractvalue %gemPrm %v3GMP110, 40
  %v3GMP110.fca.40.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 40
  store <2 x double>* %v3GMP110.fca.40.extract, <2 x double>** %v3GMP110.fca.40.gep
  %v3GMP110.fca.41.extract = extractvalue %gemPrm %v3GMP110, 41
  %v3GMP110.fca.41.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 41
  store <2 x double>* %v3GMP110.fca.41.extract, <2 x double>** %v3GMP110.fca.41.gep
  %v3GMP110.fca.42.extract = extractvalue %gemPrm %v3GMP110, 42
  %v3GMP110.fca.42.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 42
  store <4 x double>* %v3GMP110.fca.42.extract, <4 x double>** %v3GMP110.fca.42.gep
  %v3GMP110.fca.43.extract = extractvalue %gemPrm %v3GMP110, 43
  %v3GMP110.fca.43.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 43
  store <4 x double>* %v3GMP110.fca.43.extract, <4 x double>** %v3GMP110.fca.43.gep
  %v3GMP110.fca.44.extract = extractvalue %gemPrm %v3GMP110, 44
  %v3GMP110.fca.44.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 44
  store <4 x double>* %v3GMP110.fca.44.extract, <4 x double>** %v3GMP110.fca.44.gep
  %v3GMP110.fca.45.extract = extractvalue %gemPrm %v3GMP110, 45
  %v3GMP110.fca.45.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 45
  store <4 x double>* %v3GMP110.fca.45.extract, <4 x double>** %v3GMP110.fca.45.gep
  %v3GMP110.fca.46.extract = extractvalue %gemPrm %v3GMP110, 46
  %v3GMP110.fca.46.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 46
  store <4 x double>* %v3GMP110.fca.46.extract, <4 x double>** %v3GMP110.fca.46.gep
  %v3GMP110.fca.47.extract = extractvalue %gemPrm %v3GMP110, 47
  %v3GMP110.fca.47.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 47
  store <4 x double>* %v3GMP110.fca.47.extract, <4 x double>** %v3GMP110.fca.47.gep
  %v3GMP110.fca.48.extract = extractvalue %gemPrm %v3GMP110, 48
  %v3GMP110.fca.48.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 48
  store <4 x double>* %v3GMP110.fca.48.extract, <4 x double>** %v3GMP110.fca.48.gep
  %v3GMP110.fca.49.extract = extractvalue %gemPrm %v3GMP110, 49
  %v3GMP110.fca.49.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 49
  store <4 x double>* %v3GMP110.fca.49.extract, <4 x double>** %v3GMP110.fca.49.gep
  %v3GMP110.fca.50.extract = extractvalue %gemPrm %v3GMP110, 50
  %v3GMP110.fca.50.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 50
  store <4 x double>* %v3GMP110.fca.50.extract, <4 x double>** %v3GMP110.fca.50.gep
  %v3GMP110.fca.51.extract = extractvalue %gemPrm %v3GMP110, 51
  %v3GMP110.fca.51.gep = getelementptr inbounds %gemPrm, %gemPrm* %v3GMP, i32 0, i32 51
  store <3 x double>* %v3GMP110.fca.51.extract, <3 x double>** %v3GMP110.fca.51.gep
  %v4GMP111 = call %gemPrm @"gemPrm@Z6gemPrmM52N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PN8pc_DISC2[V"()
  %v4GMP111.fca.0.extract = extractvalue %gemPrm %v4GMP111, 0
  %v4GMP111.fca.0.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 0
  store double* %v4GMP111.fca.0.extract, double** %v4GMP111.fca.0.gep
  %v4GMP111.fca.1.extract = extractvalue %gemPrm %v4GMP111, 1
  %v4GMP111.fca.1.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 1
  store double* %v4GMP111.fca.1.extract, double** %v4GMP111.fca.1.gep
  %v4GMP111.fca.2.extract = extractvalue %gemPrm %v4GMP111, 2
  %v4GMP111.fca.2.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 2
  store double* %v4GMP111.fca.2.extract, double** %v4GMP111.fca.2.gep
  %v4GMP111.fca.3.extract = extractvalue %gemPrm %v4GMP111, 3
  %v4GMP111.fca.3.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 3
  store double* %v4GMP111.fca.3.extract, double** %v4GMP111.fca.3.gep
  %v4GMP111.fca.4.extract = extractvalue %gemPrm %v4GMP111, 4
  %v4GMP111.fca.4.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 4
  store double* %v4GMP111.fca.4.extract, double** %v4GMP111.fca.4.gep
  %v4GMP111.fca.5.extract = extractvalue %gemPrm %v4GMP111, 5
  %v4GMP111.fca.5.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 5
  store double* %v4GMP111.fca.5.extract, double** %v4GMP111.fca.5.gep
  %v4GMP111.fca.6.extract = extractvalue %gemPrm %v4GMP111, 6
  %v4GMP111.fca.6.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 6
  store <3 x double>* %v4GMP111.fca.6.extract, <3 x double>** %v4GMP111.fca.6.gep
  %v4GMP111.fca.7.extract = extractvalue %gemPrm %v4GMP111, 7
  %v4GMP111.fca.7.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 7
  store <3 x double>* %v4GMP111.fca.7.extract, <3 x double>** %v4GMP111.fca.7.gep
  %v4GMP111.fca.8.extract = extractvalue %gemPrm %v4GMP111, 8
  %v4GMP111.fca.8.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 8
  store <3 x double>* %v4GMP111.fca.8.extract, <3 x double>** %v4GMP111.fca.8.gep
  %v4GMP111.fca.9.extract = extractvalue %gemPrm %v4GMP111, 9
  %v4GMP111.fca.9.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 9
  store <3 x double>* %v4GMP111.fca.9.extract, <3 x double>** %v4GMP111.fca.9.gep
  %v4GMP111.fca.10.extract = extractvalue %gemPrm %v4GMP111, 10
  %v4GMP111.fca.10.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 10
  store <3 x double>* %v4GMP111.fca.10.extract, <3 x double>** %v4GMP111.fca.10.gep
  %v4GMP111.fca.11.extract = extractvalue %gemPrm %v4GMP111, 11
  %v4GMP111.fca.11.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 11
  store <3 x double>* %v4GMP111.fca.11.extract, <3 x double>** %v4GMP111.fca.11.gep
  %v4GMP111.fca.12.extract = extractvalue %gemPrm %v4GMP111, 12
  %v4GMP111.fca.12.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 12
  store <3 x double>* %v4GMP111.fca.12.extract, <3 x double>** %v4GMP111.fca.12.gep
  %v4GMP111.fca.13.extract = extractvalue %gemPrm %v4GMP111, 13
  %v4GMP111.fca.13.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 13
  store <2 x double>* %v4GMP111.fca.13.extract, <2 x double>** %v4GMP111.fca.13.gep
  %v4GMP111.fca.14.extract = extractvalue %gemPrm %v4GMP111, 14
  %v4GMP111.fca.14.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 14
  store <2 x double>* %v4GMP111.fca.14.extract, <2 x double>** %v4GMP111.fca.14.gep
  %v4GMP111.fca.15.extract = extractvalue %gemPrm %v4GMP111, 15
  %v4GMP111.fca.15.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 15
  store <2 x double>* %v4GMP111.fca.15.extract, <2 x double>** %v4GMP111.fca.15.gep
  %v4GMP111.fca.16.extract = extractvalue %gemPrm %v4GMP111, 16
  %v4GMP111.fca.16.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 16
  store <2 x double>* %v4GMP111.fca.16.extract, <2 x double>** %v4GMP111.fca.16.gep
  %v4GMP111.fca.17.extract = extractvalue %gemPrm %v4GMP111, 17
  %v4GMP111.fca.17.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 17
  store <2 x double>* %v4GMP111.fca.17.extract, <2 x double>** %v4GMP111.fca.17.gep
  %v4GMP111.fca.18.extract = extractvalue %gemPrm %v4GMP111, 18
  %v4GMP111.fca.18.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 18
  store <2 x double>* %v4GMP111.fca.18.extract, <2 x double>** %v4GMP111.fca.18.gep
  %v4GMP111.fca.19.extract = extractvalue %gemPrm %v4GMP111, 19
  %v4GMP111.fca.19.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 19
  store <2 x double>* %v4GMP111.fca.19.extract, <2 x double>** %v4GMP111.fca.19.gep
  %v4GMP111.fca.20.extract = extractvalue %gemPrm %v4GMP111, 20
  %v4GMP111.fca.20.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 20
  store <2 x double>* %v4GMP111.fca.20.extract, <2 x double>** %v4GMP111.fca.20.gep
  %v4GMP111.fca.21.extract = extractvalue %gemPrm %v4GMP111, 21
  %v4GMP111.fca.21.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 21
  store <2 x double>* %v4GMP111.fca.21.extract, <2 x double>** %v4GMP111.fca.21.gep
  %v4GMP111.fca.22.extract = extractvalue %gemPrm %v4GMP111, 22
  %v4GMP111.fca.22.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 22
  store <2 x double>* %v4GMP111.fca.22.extract, <2 x double>** %v4GMP111.fca.22.gep
  %v4GMP111.fca.23.extract = extractvalue %gemPrm %v4GMP111, 23
  %v4GMP111.fca.23.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 23
  store <2 x double>* %v4GMP111.fca.23.extract, <2 x double>** %v4GMP111.fca.23.gep
  %v4GMP111.fca.24.extract = extractvalue %gemPrm %v4GMP111, 24
  %v4GMP111.fca.24.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 24
  store <2 x double>* %v4GMP111.fca.24.extract, <2 x double>** %v4GMP111.fca.24.gep
  %v4GMP111.fca.25.extract = extractvalue %gemPrm %v4GMP111, 25
  %v4GMP111.fca.25.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 25
  store <2 x double>* %v4GMP111.fca.25.extract, <2 x double>** %v4GMP111.fca.25.gep
  %v4GMP111.fca.26.extract = extractvalue %gemPrm %v4GMP111, 26
  %v4GMP111.fca.26.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 26
  store <2 x double>* %v4GMP111.fca.26.extract, <2 x double>** %v4GMP111.fca.26.gep
  %v4GMP111.fca.27.extract = extractvalue %gemPrm %v4GMP111, 27
  %v4GMP111.fca.27.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 27
  store <2 x double>* %v4GMP111.fca.27.extract, <2 x double>** %v4GMP111.fca.27.gep
  %v4GMP111.fca.28.extract = extractvalue %gemPrm %v4GMP111, 28
  %v4GMP111.fca.28.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 28
  store <2 x double>* %v4GMP111.fca.28.extract, <2 x double>** %v4GMP111.fca.28.gep
  %v4GMP111.fca.29.extract = extractvalue %gemPrm %v4GMP111, 29
  %v4GMP111.fca.29.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 29
  store <2 x double>* %v4GMP111.fca.29.extract, <2 x double>** %v4GMP111.fca.29.gep
  %v4GMP111.fca.30.extract = extractvalue %gemPrm %v4GMP111, 30
  %v4GMP111.fca.30.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 30
  store <2 x double>* %v4GMP111.fca.30.extract, <2 x double>** %v4GMP111.fca.30.gep
  %v4GMP111.fca.31.extract = extractvalue %gemPrm %v4GMP111, 31
  %v4GMP111.fca.31.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 31
  store <2 x double>* %v4GMP111.fca.31.extract, <2 x double>** %v4GMP111.fca.31.gep
  %v4GMP111.fca.32.extract = extractvalue %gemPrm %v4GMP111, 32
  %v4GMP111.fca.32.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 32
  store <2 x double>* %v4GMP111.fca.32.extract, <2 x double>** %v4GMP111.fca.32.gep
  %v4GMP111.fca.33.extract = extractvalue %gemPrm %v4GMP111, 33
  %v4GMP111.fca.33.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 33
  store <2 x double>* %v4GMP111.fca.33.extract, <2 x double>** %v4GMP111.fca.33.gep
  %v4GMP111.fca.34.extract = extractvalue %gemPrm %v4GMP111, 34
  %v4GMP111.fca.34.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 34
  store <2 x double>* %v4GMP111.fca.34.extract, <2 x double>** %v4GMP111.fca.34.gep
  %v4GMP111.fca.35.extract = extractvalue %gemPrm %v4GMP111, 35
  %v4GMP111.fca.35.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 35
  store <2 x double>* %v4GMP111.fca.35.extract, <2 x double>** %v4GMP111.fca.35.gep
  %v4GMP111.fca.36.extract = extractvalue %gemPrm %v4GMP111, 36
  %v4GMP111.fca.36.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 36
  store <2 x double>* %v4GMP111.fca.36.extract, <2 x double>** %v4GMP111.fca.36.gep
  %v4GMP111.fca.37.extract = extractvalue %gemPrm %v4GMP111, 37
  %v4GMP111.fca.37.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 37
  store <2 x double>* %v4GMP111.fca.37.extract, <2 x double>** %v4GMP111.fca.37.gep
  %v4GMP111.fca.38.extract = extractvalue %gemPrm %v4GMP111, 38
  %v4GMP111.fca.38.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 38
  store <2 x double>* %v4GMP111.fca.38.extract, <2 x double>** %v4GMP111.fca.38.gep
  %v4GMP111.fca.39.extract = extractvalue %gemPrm %v4GMP111, 39
  %v4GMP111.fca.39.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 39
  store <2 x double>* %v4GMP111.fca.39.extract, <2 x double>** %v4GMP111.fca.39.gep
  %v4GMP111.fca.40.extract = extractvalue %gemPrm %v4GMP111, 40
  %v4GMP111.fca.40.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 40
  store <2 x double>* %v4GMP111.fca.40.extract, <2 x double>** %v4GMP111.fca.40.gep
  %v4GMP111.fca.41.extract = extractvalue %gemPrm %v4GMP111, 41
  %v4GMP111.fca.41.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 41
  store <2 x double>* %v4GMP111.fca.41.extract, <2 x double>** %v4GMP111.fca.41.gep
  %v4GMP111.fca.42.extract = extractvalue %gemPrm %v4GMP111, 42
  %v4GMP111.fca.42.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 42
  store <4 x double>* %v4GMP111.fca.42.extract, <4 x double>** %v4GMP111.fca.42.gep
  %v4GMP111.fca.43.extract = extractvalue %gemPrm %v4GMP111, 43
  %v4GMP111.fca.43.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 43
  store <4 x double>* %v4GMP111.fca.43.extract, <4 x double>** %v4GMP111.fca.43.gep
  %v4GMP111.fca.44.extract = extractvalue %gemPrm %v4GMP111, 44
  %v4GMP111.fca.44.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 44
  store <4 x double>* %v4GMP111.fca.44.extract, <4 x double>** %v4GMP111.fca.44.gep
  %v4GMP111.fca.45.extract = extractvalue %gemPrm %v4GMP111, 45
  %v4GMP111.fca.45.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 45
  store <4 x double>* %v4GMP111.fca.45.extract, <4 x double>** %v4GMP111.fca.45.gep
  %v4GMP111.fca.46.extract = extractvalue %gemPrm %v4GMP111, 46
  %v4GMP111.fca.46.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 46
  store <4 x double>* %v4GMP111.fca.46.extract, <4 x double>** %v4GMP111.fca.46.gep
  %v4GMP111.fca.47.extract = extractvalue %gemPrm %v4GMP111, 47
  %v4GMP111.fca.47.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 47
  store <4 x double>* %v4GMP111.fca.47.extract, <4 x double>** %v4GMP111.fca.47.gep
  %v4GMP111.fca.48.extract = extractvalue %gemPrm %v4GMP111, 48
  %v4GMP111.fca.48.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 48
  store <4 x double>* %v4GMP111.fca.48.extract, <4 x double>** %v4GMP111.fca.48.gep
  %v4GMP111.fca.49.extract = extractvalue %gemPrm %v4GMP111, 49
  %v4GMP111.fca.49.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 49
  store <4 x double>* %v4GMP111.fca.49.extract, <4 x double>** %v4GMP111.fca.49.gep
  %v4GMP111.fca.50.extract = extractvalue %gemPrm %v4GMP111, 50
  %v4GMP111.fca.50.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 50
  store <4 x double>* %v4GMP111.fca.50.extract, <4 x double>** %v4GMP111.fca.50.gep
  %v4GMP111.fca.51.extract = extractvalue %gemPrm %v4GMP111, 51
  %v4GMP111.fca.51.gep = getelementptr inbounds %gemPrm, %gemPrm* %v4GMP, i32 0, i32 51
  store <3 x double>* %v4GMP111.fca.51.extract, <3 x double>** %v4GMP111.fca.51.gep
  %P1GMP112 = call %gemPrm @"gemPrm@Z6gemPrmM52N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PN8pc_DISC2[V"()
  %P1GMP112.fca.0.extract = extractvalue %gemPrm %P1GMP112, 0
  %P1GMP112.fca.0.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 0
  store double* %P1GMP112.fca.0.extract, double** %P1GMP112.fca.0.gep
  %P1GMP112.fca.1.extract = extractvalue %gemPrm %P1GMP112, 1
  %P1GMP112.fca.1.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 1
  store double* %P1GMP112.fca.1.extract, double** %P1GMP112.fca.1.gep
  %P1GMP112.fca.2.extract = extractvalue %gemPrm %P1GMP112, 2
  %P1GMP112.fca.2.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 2
  store double* %P1GMP112.fca.2.extract, double** %P1GMP112.fca.2.gep
  %P1GMP112.fca.3.extract = extractvalue %gemPrm %P1GMP112, 3
  %P1GMP112.fca.3.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 3
  store double* %P1GMP112.fca.3.extract, double** %P1GMP112.fca.3.gep
  %P1GMP112.fca.4.extract = extractvalue %gemPrm %P1GMP112, 4
  %P1GMP112.fca.4.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 4
  store double* %P1GMP112.fca.4.extract, double** %P1GMP112.fca.4.gep
  %P1GMP112.fca.5.extract = extractvalue %gemPrm %P1GMP112, 5
  %P1GMP112.fca.5.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 5
  store double* %P1GMP112.fca.5.extract, double** %P1GMP112.fca.5.gep
  %P1GMP112.fca.6.extract = extractvalue %gemPrm %P1GMP112, 6
  %P1GMP112.fca.6.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 6
  store <3 x double>* %P1GMP112.fca.6.extract, <3 x double>** %P1GMP112.fca.6.gep
  %P1GMP112.fca.7.extract = extractvalue %gemPrm %P1GMP112, 7
  %P1GMP112.fca.7.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 7
  store <3 x double>* %P1GMP112.fca.7.extract, <3 x double>** %P1GMP112.fca.7.gep
  %P1GMP112.fca.8.extract = extractvalue %gemPrm %P1GMP112, 8
  %P1GMP112.fca.8.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 8
  store <3 x double>* %P1GMP112.fca.8.extract, <3 x double>** %P1GMP112.fca.8.gep
  %P1GMP112.fca.9.extract = extractvalue %gemPrm %P1GMP112, 9
  %P1GMP112.fca.9.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 9
  store <3 x double>* %P1GMP112.fca.9.extract, <3 x double>** %P1GMP112.fca.9.gep
  %P1GMP112.fca.10.extract = extractvalue %gemPrm %P1GMP112, 10
  %P1GMP112.fca.10.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 10
  store <3 x double>* %P1GMP112.fca.10.extract, <3 x double>** %P1GMP112.fca.10.gep
  %P1GMP112.fca.11.extract = extractvalue %gemPrm %P1GMP112, 11
  %P1GMP112.fca.11.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 11
  store <3 x double>* %P1GMP112.fca.11.extract, <3 x double>** %P1GMP112.fca.11.gep
  %P1GMP112.fca.12.extract = extractvalue %gemPrm %P1GMP112, 12
  %P1GMP112.fca.12.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 12
  store <3 x double>* %P1GMP112.fca.12.extract, <3 x double>** %P1GMP112.fca.12.gep
  %P1GMP112.fca.13.extract = extractvalue %gemPrm %P1GMP112, 13
  %P1GMP112.fca.13.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 13
  store <2 x double>* %P1GMP112.fca.13.extract, <2 x double>** %P1GMP112.fca.13.gep
  %P1GMP112.fca.14.extract = extractvalue %gemPrm %P1GMP112, 14
  %P1GMP112.fca.14.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 14
  store <2 x double>* %P1GMP112.fca.14.extract, <2 x double>** %P1GMP112.fca.14.gep
  %P1GMP112.fca.15.extract = extractvalue %gemPrm %P1GMP112, 15
  %P1GMP112.fca.15.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 15
  store <2 x double>* %P1GMP112.fca.15.extract, <2 x double>** %P1GMP112.fca.15.gep
  %P1GMP112.fca.16.extract = extractvalue %gemPrm %P1GMP112, 16
  %P1GMP112.fca.16.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 16
  store <2 x double>* %P1GMP112.fca.16.extract, <2 x double>** %P1GMP112.fca.16.gep
  %P1GMP112.fca.17.extract = extractvalue %gemPrm %P1GMP112, 17
  %P1GMP112.fca.17.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 17
  store <2 x double>* %P1GMP112.fca.17.extract, <2 x double>** %P1GMP112.fca.17.gep
  %P1GMP112.fca.18.extract = extractvalue %gemPrm %P1GMP112, 18
  %P1GMP112.fca.18.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 18
  store <2 x double>* %P1GMP112.fca.18.extract, <2 x double>** %P1GMP112.fca.18.gep
  %P1GMP112.fca.19.extract = extractvalue %gemPrm %P1GMP112, 19
  %P1GMP112.fca.19.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 19
  store <2 x double>* %P1GMP112.fca.19.extract, <2 x double>** %P1GMP112.fca.19.gep
  %P1GMP112.fca.20.extract = extractvalue %gemPrm %P1GMP112, 20
  %P1GMP112.fca.20.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 20
  store <2 x double>* %P1GMP112.fca.20.extract, <2 x double>** %P1GMP112.fca.20.gep
  %P1GMP112.fca.21.extract = extractvalue %gemPrm %P1GMP112, 21
  %P1GMP112.fca.21.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 21
  store <2 x double>* %P1GMP112.fca.21.extract, <2 x double>** %P1GMP112.fca.21.gep
  %P1GMP112.fca.22.extract = extractvalue %gemPrm %P1GMP112, 22
  %P1GMP112.fca.22.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 22
  store <2 x double>* %P1GMP112.fca.22.extract, <2 x double>** %P1GMP112.fca.22.gep
  %P1GMP112.fca.23.extract = extractvalue %gemPrm %P1GMP112, 23
  %P1GMP112.fca.23.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 23
  store <2 x double>* %P1GMP112.fca.23.extract, <2 x double>** %P1GMP112.fca.23.gep
  %P1GMP112.fca.24.extract = extractvalue %gemPrm %P1GMP112, 24
  %P1GMP112.fca.24.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 24
  store <2 x double>* %P1GMP112.fca.24.extract, <2 x double>** %P1GMP112.fca.24.gep
  %P1GMP112.fca.25.extract = extractvalue %gemPrm %P1GMP112, 25
  %P1GMP112.fca.25.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 25
  store <2 x double>* %P1GMP112.fca.25.extract, <2 x double>** %P1GMP112.fca.25.gep
  %P1GMP112.fca.26.extract = extractvalue %gemPrm %P1GMP112, 26
  %P1GMP112.fca.26.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 26
  store <2 x double>* %P1GMP112.fca.26.extract, <2 x double>** %P1GMP112.fca.26.gep
  %P1GMP112.fca.27.extract = extractvalue %gemPrm %P1GMP112, 27
  %P1GMP112.fca.27.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 27
  store <2 x double>* %P1GMP112.fca.27.extract, <2 x double>** %P1GMP112.fca.27.gep
  %P1GMP112.fca.28.extract = extractvalue %gemPrm %P1GMP112, 28
  %P1GMP112.fca.28.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 28
  store <2 x double>* %P1GMP112.fca.28.extract, <2 x double>** %P1GMP112.fca.28.gep
  %P1GMP112.fca.29.extract = extractvalue %gemPrm %P1GMP112, 29
  %P1GMP112.fca.29.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 29
  store <2 x double>* %P1GMP112.fca.29.extract, <2 x double>** %P1GMP112.fca.29.gep
  %P1GMP112.fca.30.extract = extractvalue %gemPrm %P1GMP112, 30
  %P1GMP112.fca.30.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 30
  store <2 x double>* %P1GMP112.fca.30.extract, <2 x double>** %P1GMP112.fca.30.gep
  %P1GMP112.fca.31.extract = extractvalue %gemPrm %P1GMP112, 31
  %P1GMP112.fca.31.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 31
  store <2 x double>* %P1GMP112.fca.31.extract, <2 x double>** %P1GMP112.fca.31.gep
  %P1GMP112.fca.32.extract = extractvalue %gemPrm %P1GMP112, 32
  %P1GMP112.fca.32.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 32
  store <2 x double>* %P1GMP112.fca.32.extract, <2 x double>** %P1GMP112.fca.32.gep
  %P1GMP112.fca.33.extract = extractvalue %gemPrm %P1GMP112, 33
  %P1GMP112.fca.33.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 33
  store <2 x double>* %P1GMP112.fca.33.extract, <2 x double>** %P1GMP112.fca.33.gep
  %P1GMP112.fca.34.extract = extractvalue %gemPrm %P1GMP112, 34
  %P1GMP112.fca.34.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 34
  store <2 x double>* %P1GMP112.fca.34.extract, <2 x double>** %P1GMP112.fca.34.gep
  %P1GMP112.fca.35.extract = extractvalue %gemPrm %P1GMP112, 35
  %P1GMP112.fca.35.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 35
  store <2 x double>* %P1GMP112.fca.35.extract, <2 x double>** %P1GMP112.fca.35.gep
  %P1GMP112.fca.36.extract = extractvalue %gemPrm %P1GMP112, 36
  %P1GMP112.fca.36.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 36
  store <2 x double>* %P1GMP112.fca.36.extract, <2 x double>** %P1GMP112.fca.36.gep
  %P1GMP112.fca.37.extract = extractvalue %gemPrm %P1GMP112, 37
  %P1GMP112.fca.37.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 37
  store <2 x double>* %P1GMP112.fca.37.extract, <2 x double>** %P1GMP112.fca.37.gep
  %P1GMP112.fca.38.extract = extractvalue %gemPrm %P1GMP112, 38
  %P1GMP112.fca.38.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 38
  store <2 x double>* %P1GMP112.fca.38.extract, <2 x double>** %P1GMP112.fca.38.gep
  %P1GMP112.fca.39.extract = extractvalue %gemPrm %P1GMP112, 39
  %P1GMP112.fca.39.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 39
  store <2 x double>* %P1GMP112.fca.39.extract, <2 x double>** %P1GMP112.fca.39.gep
  %P1GMP112.fca.40.extract = extractvalue %gemPrm %P1GMP112, 40
  %P1GMP112.fca.40.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 40
  store <2 x double>* %P1GMP112.fca.40.extract, <2 x double>** %P1GMP112.fca.40.gep
  %P1GMP112.fca.41.extract = extractvalue %gemPrm %P1GMP112, 41
  %P1GMP112.fca.41.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 41
  store <2 x double>* %P1GMP112.fca.41.extract, <2 x double>** %P1GMP112.fca.41.gep
  %P1GMP112.fca.42.extract = extractvalue %gemPrm %P1GMP112, 42
  %P1GMP112.fca.42.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 42
  store <4 x double>* %P1GMP112.fca.42.extract, <4 x double>** %P1GMP112.fca.42.gep
  %P1GMP112.fca.43.extract = extractvalue %gemPrm %P1GMP112, 43
  %P1GMP112.fca.43.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 43
  store <4 x double>* %P1GMP112.fca.43.extract, <4 x double>** %P1GMP112.fca.43.gep
  %P1GMP112.fca.44.extract = extractvalue %gemPrm %P1GMP112, 44
  %P1GMP112.fca.44.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 44
  store <4 x double>* %P1GMP112.fca.44.extract, <4 x double>** %P1GMP112.fca.44.gep
  %P1GMP112.fca.45.extract = extractvalue %gemPrm %P1GMP112, 45
  %P1GMP112.fca.45.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 45
  store <4 x double>* %P1GMP112.fca.45.extract, <4 x double>** %P1GMP112.fca.45.gep
  %P1GMP112.fca.46.extract = extractvalue %gemPrm %P1GMP112, 46
  %P1GMP112.fca.46.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 46
  store <4 x double>* %P1GMP112.fca.46.extract, <4 x double>** %P1GMP112.fca.46.gep
  %P1GMP112.fca.47.extract = extractvalue %gemPrm %P1GMP112, 47
  %P1GMP112.fca.47.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 47
  store <4 x double>* %P1GMP112.fca.47.extract, <4 x double>** %P1GMP112.fca.47.gep
  %P1GMP112.fca.48.extract = extractvalue %gemPrm %P1GMP112, 48
  %P1GMP112.fca.48.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 48
  store <4 x double>* %P1GMP112.fca.48.extract, <4 x double>** %P1GMP112.fca.48.gep
  %P1GMP112.fca.49.extract = extractvalue %gemPrm %P1GMP112, 49
  %P1GMP112.fca.49.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 49
  store <4 x double>* %P1GMP112.fca.49.extract, <4 x double>** %P1GMP112.fca.49.gep
  %P1GMP112.fca.50.extract = extractvalue %gemPrm %P1GMP112, 50
  %P1GMP112.fca.50.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 50
  store <4 x double>* %P1GMP112.fca.50.extract, <4 x double>** %P1GMP112.fca.50.gep
  %P1GMP112.fca.51.extract = extractvalue %gemPrm %P1GMP112, 51
  %P1GMP112.fca.51.gep = getelementptr inbounds %gemPrm, %gemPrm* %P1GMP, i32 0, i32 51
  store <3 x double>* %P1GMP112.fca.51.extract, <3 x double>** %P1GMP112.fca.51.gep
  store i8** %_bound_sIDX14, i8*** %3
  store i64 %GEM19.fca.1.load, i64* %4
  store i64* %GEM19.fca.6.load, i64** %5
  store double* %GEM19.fca.20.load, double** %6
  call void @"gemPrmBuild@Z6gemPrmM52N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PN8pc_DISC2[V[SI[I[F"(%gemPrm* %p1GMP, i8*** %3, i64* %4, i64** %5, double** %6)
  store i8** %_bound_sIDX14, i8*** %7
  store i64 %GEM19.fca.1.load, i64* %8
  store i64* %GEM19.fca.7.load, i64** %9
  store double* %GEM19.fca.21.load, double** %10
  call void @"gemPrmBuild@Z6gemPrmM52N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PN8pc_DISC2[V[SI[I[F"(%gemPrm* %p2GMP, i8*** %7, i64* %8, i64** %9, double** %10)
  store i8** %_bound_sIDX14, i8*** %11
  store i64 %GEM19.fca.1.load, i64* %12
  store i64* %GEM19.fca.2.load, i64** %13
  store double* %GEM19.fca.15.load, double** %14
  call void @"gemPrmBuild@Z6gemPrmM52N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PN8pc_DISC2[V[SI[I[F"(%gemPrm* %v1GMP, i8*** %11, i64* %12, i64** %13, double** %14)
  store i8** %_bound_sIDX14, i8*** %15
  store i64 %GEM19.fca.1.load, i64* %16
  store i64* %GEM19.fca.3.load, i64** %17
  store double* %GEM19.fca.16.load, double** %18
  call void @"gemPrmBuild@Z6gemPrmM52N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PN8pc_DISC2[V[SI[I[F"(%gemPrm* %v2GMP, i8*** %15, i64* %16, i64** %17, double** %18)
  store i8** %_bound_sIDX14, i8*** %19
  store i64 %GEM19.fca.1.load, i64* %20
  store i64* %GEM19.fca.4.load, i64** %21
  store double* %GEM19.fca.17.load, double** %22
  call void @"gemPrmBuild@Z6gemPrmM52N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PN8pc_DISC2[V[SI[I[F"(%gemPrm* %v3GMP, i8*** %19, i64* %20, i64** %21, double** %22)
  store i8** %_bound_sIDX14, i8*** %23
  store i64 %GEM19.fca.1.load, i64* %24
  store i64* %GEM19.fca.5.load, i64** %25
  store double* %GEM19.fca.18.load, double** %26
  call void @"gemPrmBuild@Z6gemPrmM52N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PN8pc_DISC2[V[SI[I[F"(%gemPrm* %v4GMP, i8*** %23, i64* %24, i64** %25, double** %26)
  store i8** %_bound_sIDX14, i8*** %27
  store i64 %GEM19.fca.1.load, i64* %28
  store i64* %GEM19.fca.8.load, i64** %29
  store double* %GEM19.fca.22.load, double** %30
  call void @"gemPrmBuild@Z6gemPrmM52N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PN8pc_DISC2[V[SI[I[F"(%gemPrm* %P1GMP, i8*** %27, i64* %28, i64** %29, double** %30)
  %biunit = call <2 x double> @"biunit@U"()
  store <2 x double> %biunit, <2 x double>* %mem
  %_bound_XS141 = load i64, i64* %_bound_XS
  %147 = icmp ne i64 %_bound_XS141, 0
  br i1 %147, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %_bound_IW143 = load double*, double** %_bound_IW
  %return144 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return145 = call i64 @"sample_cdf@[FFI"(double* %_bound_IW143, double %return144)
  store i64 %return145, i64* %idx
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  br label %cond

cond:                                             ; preds = %end354, %end
  %clr.0 = phi double [ 0.000000e+00, %end ], [ %output366, %end354 ]
  %prv_clr.0 = phi double [ 0.000000e+00, %end ], [ %output366, %end354 ]
  %i.0 = phi i64 [ 0, %end ], [ %output369, %end354 ]
  %return148 = call i64 @"lt@III"(i64 %i.0, i64 %return11)
  %148 = icmp ne i64 %return148, 0
  br i1 %148, label %body, label %end149

body:                                             ; preds = %cond
  br i1 %147, label %true152, label %false

end149:                                           ; preds = %cond
  %149 = icmp ne i64 %return3, 0
  br i1 %149, label %true371, label %end372

true152:                                          ; preds = %body
  %cast = sitofp i64 %GEM19.fca.1.load to double
  store double %cast, double* %31
  %_bound_XST155 = load double*, double** %_bound_XST
  store double* %_bound_XST155, double** %32
  %XAOS = call i64 @"XAOS@IIF[F"(i64* %idx, double* %31, double** %32)
  store i64 %XAOS, i64* %idx
  br label %end153

false:                                            ; preds = %body
  %_bound_IW156 = load double*, double** %_bound_IW
  %return157 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return158 = call i64 @"sample_cdf@[FFI"(double* %_bound_IW156, double %return157)
  store i64 %return158, i64* %idx
  br label %end153

end153:                                           ; preds = %false, %true152
  %cast159 = call <2 x double> @"set@UI"(i64 0)
  store <2 x double> %cast159, <2 x double>* %tmp
  %idx161 = load i64, i64* %idx
  %return162 = call double @"getcomp@F[FI"(double* %GEM19.fca.19.load, i64 %idx161)
  %return163 = fcmp ogt double %return162, 0.000000e+00
  br i1 %return163, label %true165, label %end166

true165:                                          ; preds = %end153
  store double %return162, double* %33
  call void @"V_PREBLUR@UF"(<2 x double>* %mem, double* %33)
  br label %end166

end166:                                           ; preds = %true165, %end153
  %idx171 = load i64, i64* %idx
  %return172 = call double @"getcomp@F[FI"(double* %GEM19.fca.20.load, i64 %idx171)
  %return173 = fcmp ogt double %return172, 0.000000e+00
  br i1 %return173, label %true175, label %end176

true175:                                          ; preds = %end166
  %p1GMP177.fca.0.load = load double*, double** %p1GMP106.fca.0.gep
  %p1GMP177.fca.0.insert = insertvalue %gemPrm undef, double* %p1GMP177.fca.0.load, 0
  %p1GMP177.fca.1.load = load double*, double** %p1GMP106.fca.1.gep
  %p1GMP177.fca.1.insert = insertvalue %gemPrm %p1GMP177.fca.0.insert, double* %p1GMP177.fca.1.load, 1
  %p1GMP177.fca.2.load = load double*, double** %p1GMP106.fca.2.gep
  %p1GMP177.fca.2.insert = insertvalue %gemPrm %p1GMP177.fca.1.insert, double* %p1GMP177.fca.2.load, 2
  %p1GMP177.fca.3.load = load double*, double** %p1GMP106.fca.3.gep
  %p1GMP177.fca.3.insert = insertvalue %gemPrm %p1GMP177.fca.2.insert, double* %p1GMP177.fca.3.load, 3
  %p1GMP177.fca.4.load = load double*, double** %p1GMP106.fca.4.gep
  %p1GMP177.fca.4.insert = insertvalue %gemPrm %p1GMP177.fca.3.insert, double* %p1GMP177.fca.4.load, 4
  %p1GMP177.fca.5.load = load double*, double** %p1GMP106.fca.5.gep
  %p1GMP177.fca.5.insert = insertvalue %gemPrm %p1GMP177.fca.4.insert, double* %p1GMP177.fca.5.load, 5
  %p1GMP177.fca.6.load = load <3 x double>*, <3 x double>** %p1GMP106.fca.6.gep
  %p1GMP177.fca.6.insert = insertvalue %gemPrm %p1GMP177.fca.5.insert, <3 x double>* %p1GMP177.fca.6.load, 6
  %p1GMP177.fca.7.load = load <3 x double>*, <3 x double>** %p1GMP106.fca.7.gep
  %p1GMP177.fca.7.insert = insertvalue %gemPrm %p1GMP177.fca.6.insert, <3 x double>* %p1GMP177.fca.7.load, 7
  %p1GMP177.fca.8.load = load <3 x double>*, <3 x double>** %p1GMP106.fca.8.gep
  %p1GMP177.fca.8.insert = insertvalue %gemPrm %p1GMP177.fca.7.insert, <3 x double>* %p1GMP177.fca.8.load, 8
  %p1GMP177.fca.9.load = load <3 x double>*, <3 x double>** %p1GMP106.fca.9.gep
  %p1GMP177.fca.9.insert = insertvalue %gemPrm %p1GMP177.fca.8.insert, <3 x double>* %p1GMP177.fca.9.load, 9
  %p1GMP177.fca.10.load = load <3 x double>*, <3 x double>** %p1GMP106.fca.10.gep
  %p1GMP177.fca.10.insert = insertvalue %gemPrm %p1GMP177.fca.9.insert, <3 x double>* %p1GMP177.fca.10.load, 10
  %p1GMP177.fca.11.load = load <3 x double>*, <3 x double>** %p1GMP106.fca.11.gep
  %p1GMP177.fca.11.insert = insertvalue %gemPrm %p1GMP177.fca.10.insert, <3 x double>* %p1GMP177.fca.11.load, 11
  %p1GMP177.fca.12.load = load <3 x double>*, <3 x double>** %p1GMP106.fca.12.gep
  %p1GMP177.fca.12.insert = insertvalue %gemPrm %p1GMP177.fca.11.insert, <3 x double>* %p1GMP177.fca.12.load, 12
  %p1GMP177.fca.13.load = load <2 x double>*, <2 x double>** %p1GMP106.fca.13.gep
  %p1GMP177.fca.13.insert = insertvalue %gemPrm %p1GMP177.fca.12.insert, <2 x double>* %p1GMP177.fca.13.load, 13
  %p1GMP177.fca.14.load = load <2 x double>*, <2 x double>** %p1GMP106.fca.14.gep
  %p1GMP177.fca.14.insert = insertvalue %gemPrm %p1GMP177.fca.13.insert, <2 x double>* %p1GMP177.fca.14.load, 14
  %p1GMP177.fca.15.load = load <2 x double>*, <2 x double>** %p1GMP106.fca.15.gep
  %p1GMP177.fca.15.insert = insertvalue %gemPrm %p1GMP177.fca.14.insert, <2 x double>* %p1GMP177.fca.15.load, 15
  %p1GMP177.fca.16.load = load <2 x double>*, <2 x double>** %p1GMP106.fca.16.gep
  %p1GMP177.fca.16.insert = insertvalue %gemPrm %p1GMP177.fca.15.insert, <2 x double>* %p1GMP177.fca.16.load, 16
  %p1GMP177.fca.17.load = load <2 x double>*, <2 x double>** %p1GMP106.fca.17.gep
  %p1GMP177.fca.17.insert = insertvalue %gemPrm %p1GMP177.fca.16.insert, <2 x double>* %p1GMP177.fca.17.load, 17
  %p1GMP177.fca.18.load = load <2 x double>*, <2 x double>** %p1GMP106.fca.18.gep
  %p1GMP177.fca.18.insert = insertvalue %gemPrm %p1GMP177.fca.17.insert, <2 x double>* %p1GMP177.fca.18.load, 18
  %p1GMP177.fca.19.load = load <2 x double>*, <2 x double>** %p1GMP106.fca.19.gep
  %p1GMP177.fca.19.insert = insertvalue %gemPrm %p1GMP177.fca.18.insert, <2 x double>* %p1GMP177.fca.19.load, 19
  %p1GMP177.fca.20.load = load <2 x double>*, <2 x double>** %p1GMP106.fca.20.gep
  %p1GMP177.fca.20.insert = insertvalue %gemPrm %p1GMP177.fca.19.insert, <2 x double>* %p1GMP177.fca.20.load, 20
  %p1GMP177.fca.21.load = load <2 x double>*, <2 x double>** %p1GMP106.fca.21.gep
  %p1GMP177.fca.21.insert = insertvalue %gemPrm %p1GMP177.fca.20.insert, <2 x double>* %p1GMP177.fca.21.load, 21
  %p1GMP177.fca.22.load = load <2 x double>*, <2 x double>** %p1GMP106.fca.22.gep
  %p1GMP177.fca.22.insert = insertvalue %gemPrm %p1GMP177.fca.21.insert, <2 x double>* %p1GMP177.fca.22.load, 22
  %p1GMP177.fca.23.load = load <2 x double>*, <2 x double>** %p1GMP106.fca.23.gep
  %p1GMP177.fca.23.insert = insertvalue %gemPrm %p1GMP177.fca.22.insert, <2 x double>* %p1GMP177.fca.23.load, 23
  %p1GMP177.fca.24.load = load <2 x double>*, <2 x double>** %p1GMP106.fca.24.gep
  %p1GMP177.fca.24.insert = insertvalue %gemPrm %p1GMP177.fca.23.insert, <2 x double>* %p1GMP177.fca.24.load, 24
  %p1GMP177.fca.25.load = load <2 x double>*, <2 x double>** %p1GMP106.fca.25.gep
  %p1GMP177.fca.25.insert = insertvalue %gemPrm %p1GMP177.fca.24.insert, <2 x double>* %p1GMP177.fca.25.load, 25
  %p1GMP177.fca.26.load = load <2 x double>*, <2 x double>** %p1GMP106.fca.26.gep
  %p1GMP177.fca.26.insert = insertvalue %gemPrm %p1GMP177.fca.25.insert, <2 x double>* %p1GMP177.fca.26.load, 26
  %p1GMP177.fca.27.load = load <2 x double>*, <2 x double>** %p1GMP106.fca.27.gep
  %p1GMP177.fca.27.insert = insertvalue %gemPrm %p1GMP177.fca.26.insert, <2 x double>* %p1GMP177.fca.27.load, 27
  %p1GMP177.fca.28.load = load <2 x double>*, <2 x double>** %p1GMP106.fca.28.gep
  %p1GMP177.fca.28.insert = insertvalue %gemPrm %p1GMP177.fca.27.insert, <2 x double>* %p1GMP177.fca.28.load, 28
  %p1GMP177.fca.29.load = load <2 x double>*, <2 x double>** %p1GMP106.fca.29.gep
  %p1GMP177.fca.29.insert = insertvalue %gemPrm %p1GMP177.fca.28.insert, <2 x double>* %p1GMP177.fca.29.load, 29
  %p1GMP177.fca.30.load = load <2 x double>*, <2 x double>** %p1GMP106.fca.30.gep
  %p1GMP177.fca.30.insert = insertvalue %gemPrm %p1GMP177.fca.29.insert, <2 x double>* %p1GMP177.fca.30.load, 30
  %p1GMP177.fca.31.load = load <2 x double>*, <2 x double>** %p1GMP106.fca.31.gep
  %p1GMP177.fca.31.insert = insertvalue %gemPrm %p1GMP177.fca.30.insert, <2 x double>* %p1GMP177.fca.31.load, 31
  %p1GMP177.fca.32.load = load <2 x double>*, <2 x double>** %p1GMP106.fca.32.gep
  %p1GMP177.fca.32.insert = insertvalue %gemPrm %p1GMP177.fca.31.insert, <2 x double>* %p1GMP177.fca.32.load, 32
  %p1GMP177.fca.33.load = load <2 x double>*, <2 x double>** %p1GMP106.fca.33.gep
  %p1GMP177.fca.33.insert = insertvalue %gemPrm %p1GMP177.fca.32.insert, <2 x double>* %p1GMP177.fca.33.load, 33
  %p1GMP177.fca.34.load = load <2 x double>*, <2 x double>** %p1GMP106.fca.34.gep
  %p1GMP177.fca.34.insert = insertvalue %gemPrm %p1GMP177.fca.33.insert, <2 x double>* %p1GMP177.fca.34.load, 34
  %p1GMP177.fca.35.load = load <2 x double>*, <2 x double>** %p1GMP106.fca.35.gep
  %p1GMP177.fca.35.insert = insertvalue %gemPrm %p1GMP177.fca.34.insert, <2 x double>* %p1GMP177.fca.35.load, 35
  %p1GMP177.fca.36.load = load <2 x double>*, <2 x double>** %p1GMP106.fca.36.gep
  %p1GMP177.fca.36.insert = insertvalue %gemPrm %p1GMP177.fca.35.insert, <2 x double>* %p1GMP177.fca.36.load, 36
  %p1GMP177.fca.37.load = load <2 x double>*, <2 x double>** %p1GMP106.fca.37.gep
  %p1GMP177.fca.37.insert = insertvalue %gemPrm %p1GMP177.fca.36.insert, <2 x double>* %p1GMP177.fca.37.load, 37
  %p1GMP177.fca.38.load = load <2 x double>*, <2 x double>** %p1GMP106.fca.38.gep
  %p1GMP177.fca.38.insert = insertvalue %gemPrm %p1GMP177.fca.37.insert, <2 x double>* %p1GMP177.fca.38.load, 38
  %p1GMP177.fca.39.load = load <2 x double>*, <2 x double>** %p1GMP106.fca.39.gep
  %p1GMP177.fca.39.insert = insertvalue %gemPrm %p1GMP177.fca.38.insert, <2 x double>* %p1GMP177.fca.39.load, 39
  %p1GMP177.fca.40.load = load <2 x double>*, <2 x double>** %p1GMP106.fca.40.gep
  %p1GMP177.fca.40.insert = insertvalue %gemPrm %p1GMP177.fca.39.insert, <2 x double>* %p1GMP177.fca.40.load, 40
  %p1GMP177.fca.41.load = load <2 x double>*, <2 x double>** %p1GMP106.fca.41.gep
  %p1GMP177.fca.41.insert = insertvalue %gemPrm %p1GMP177.fca.40.insert, <2 x double>* %p1GMP177.fca.41.load, 41
  %p1GMP177.fca.42.load = load <4 x double>*, <4 x double>** %p1GMP106.fca.42.gep
  %p1GMP177.fca.42.insert = insertvalue %gemPrm %p1GMP177.fca.41.insert, <4 x double>* %p1GMP177.fca.42.load, 42
  %p1GMP177.fca.43.load = load <4 x double>*, <4 x double>** %p1GMP106.fca.43.gep
  %p1GMP177.fca.43.insert = insertvalue %gemPrm %p1GMP177.fca.42.insert, <4 x double>* %p1GMP177.fca.43.load, 43
  %p1GMP177.fca.44.load = load <4 x double>*, <4 x double>** %p1GMP106.fca.44.gep
  %p1GMP177.fca.44.insert = insertvalue %gemPrm %p1GMP177.fca.43.insert, <4 x double>* %p1GMP177.fca.44.load, 44
  %p1GMP177.fca.45.load = load <4 x double>*, <4 x double>** %p1GMP106.fca.45.gep
  %p1GMP177.fca.45.insert = insertvalue %gemPrm %p1GMP177.fca.44.insert, <4 x double>* %p1GMP177.fca.45.load, 45
  %p1GMP177.fca.46.load = load <4 x double>*, <4 x double>** %p1GMP106.fca.46.gep
  %p1GMP177.fca.46.insert = insertvalue %gemPrm %p1GMP177.fca.45.insert, <4 x double>* %p1GMP177.fca.46.load, 46
  %p1GMP177.fca.47.load = load <4 x double>*, <4 x double>** %p1GMP106.fca.47.gep
  %p1GMP177.fca.47.insert = insertvalue %gemPrm %p1GMP177.fca.46.insert, <4 x double>* %p1GMP177.fca.47.load, 47
  %p1GMP177.fca.48.load = load <4 x double>*, <4 x double>** %p1GMP106.fca.48.gep
  %p1GMP177.fca.48.insert = insertvalue %gemPrm %p1GMP177.fca.47.insert, <4 x double>* %p1GMP177.fca.48.load, 48
  %p1GMP177.fca.49.load = load <4 x double>*, <4 x double>** %p1GMP106.fca.49.gep
  %p1GMP177.fca.49.insert = insertvalue %gemPrm %p1GMP177.fca.48.insert, <4 x double>* %p1GMP177.fca.49.load, 49
  %p1GMP177.fca.50.load = load <4 x double>*, <4 x double>** %p1GMP106.fca.50.gep
  %p1GMP177.fca.50.insert = insertvalue %gemPrm %p1GMP177.fca.49.insert, <4 x double>* %p1GMP177.fca.50.load, 50
  %p1GMP177.fca.51.load = load <3 x double>*, <3 x double>** %p1GMP106.fca.51.gep
  %p1GMP177.fca.0.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 0
  store double* %p1GMP177.fca.0.load, double** %p1GMP177.fca.0.gep
  %p1GMP177.fca.1.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 1
  store double* %p1GMP177.fca.1.load, double** %p1GMP177.fca.1.gep
  %p1GMP177.fca.2.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 2
  store double* %p1GMP177.fca.2.load, double** %p1GMP177.fca.2.gep
  %p1GMP177.fca.3.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 3
  store double* %p1GMP177.fca.3.load, double** %p1GMP177.fca.3.gep
  %p1GMP177.fca.4.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 4
  store double* %p1GMP177.fca.4.load, double** %p1GMP177.fca.4.gep
  %p1GMP177.fca.5.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 5
  store double* %p1GMP177.fca.5.load, double** %p1GMP177.fca.5.gep
  %p1GMP177.fca.6.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 6
  store <3 x double>* %p1GMP177.fca.6.load, <3 x double>** %p1GMP177.fca.6.gep
  %p1GMP177.fca.7.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 7
  store <3 x double>* %p1GMP177.fca.7.load, <3 x double>** %p1GMP177.fca.7.gep
  %p1GMP177.fca.8.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 8
  store <3 x double>* %p1GMP177.fca.8.load, <3 x double>** %p1GMP177.fca.8.gep
  %p1GMP177.fca.9.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 9
  store <3 x double>* %p1GMP177.fca.9.load, <3 x double>** %p1GMP177.fca.9.gep
  %p1GMP177.fca.10.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 10
  store <3 x double>* %p1GMP177.fca.10.load, <3 x double>** %p1GMP177.fca.10.gep
  %p1GMP177.fca.11.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 11
  store <3 x double>* %p1GMP177.fca.11.load, <3 x double>** %p1GMP177.fca.11.gep
  %p1GMP177.fca.12.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 12
  store <3 x double>* %p1GMP177.fca.12.load, <3 x double>** %p1GMP177.fca.12.gep
  %p1GMP177.fca.13.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 13
  store <2 x double>* %p1GMP177.fca.13.load, <2 x double>** %p1GMP177.fca.13.gep
  %p1GMP177.fca.14.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 14
  store <2 x double>* %p1GMP177.fca.14.load, <2 x double>** %p1GMP177.fca.14.gep
  %p1GMP177.fca.15.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 15
  store <2 x double>* %p1GMP177.fca.15.load, <2 x double>** %p1GMP177.fca.15.gep
  %p1GMP177.fca.16.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 16
  store <2 x double>* %p1GMP177.fca.16.load, <2 x double>** %p1GMP177.fca.16.gep
  %p1GMP177.fca.17.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 17
  store <2 x double>* %p1GMP177.fca.17.load, <2 x double>** %p1GMP177.fca.17.gep
  %p1GMP177.fca.18.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 18
  store <2 x double>* %p1GMP177.fca.18.load, <2 x double>** %p1GMP177.fca.18.gep
  %p1GMP177.fca.19.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 19
  store <2 x double>* %p1GMP177.fca.19.load, <2 x double>** %p1GMP177.fca.19.gep
  %p1GMP177.fca.20.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 20
  store <2 x double>* %p1GMP177.fca.20.load, <2 x double>** %p1GMP177.fca.20.gep
  %p1GMP177.fca.21.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 21
  store <2 x double>* %p1GMP177.fca.21.load, <2 x double>** %p1GMP177.fca.21.gep
  %p1GMP177.fca.22.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 22
  store <2 x double>* %p1GMP177.fca.22.load, <2 x double>** %p1GMP177.fca.22.gep
  %p1GMP177.fca.23.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 23
  store <2 x double>* %p1GMP177.fca.23.load, <2 x double>** %p1GMP177.fca.23.gep
  %p1GMP177.fca.24.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 24
  store <2 x double>* %p1GMP177.fca.24.load, <2 x double>** %p1GMP177.fca.24.gep
  %p1GMP177.fca.25.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 25
  store <2 x double>* %p1GMP177.fca.25.load, <2 x double>** %p1GMP177.fca.25.gep
  %p1GMP177.fca.26.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 26
  store <2 x double>* %p1GMP177.fca.26.load, <2 x double>** %p1GMP177.fca.26.gep
  %p1GMP177.fca.27.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 27
  store <2 x double>* %p1GMP177.fca.27.load, <2 x double>** %p1GMP177.fca.27.gep
  %p1GMP177.fca.28.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 28
  store <2 x double>* %p1GMP177.fca.28.load, <2 x double>** %p1GMP177.fca.28.gep
  %p1GMP177.fca.29.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 29
  store <2 x double>* %p1GMP177.fca.29.load, <2 x double>** %p1GMP177.fca.29.gep
  %p1GMP177.fca.30.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 30
  store <2 x double>* %p1GMP177.fca.30.load, <2 x double>** %p1GMP177.fca.30.gep
  %p1GMP177.fca.31.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 31
  store <2 x double>* %p1GMP177.fca.31.load, <2 x double>** %p1GMP177.fca.31.gep
  %p1GMP177.fca.32.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 32
  store <2 x double>* %p1GMP177.fca.32.load, <2 x double>** %p1GMP177.fca.32.gep
  %p1GMP177.fca.33.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 33
  store <2 x double>* %p1GMP177.fca.33.load, <2 x double>** %p1GMP177.fca.33.gep
  %p1GMP177.fca.34.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 34
  store <2 x double>* %p1GMP177.fca.34.load, <2 x double>** %p1GMP177.fca.34.gep
  %p1GMP177.fca.35.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 35
  store <2 x double>* %p1GMP177.fca.35.load, <2 x double>** %p1GMP177.fca.35.gep
  %p1GMP177.fca.36.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 36
  store <2 x double>* %p1GMP177.fca.36.load, <2 x double>** %p1GMP177.fca.36.gep
  %p1GMP177.fca.37.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 37
  store <2 x double>* %p1GMP177.fca.37.load, <2 x double>** %p1GMP177.fca.37.gep
  %p1GMP177.fca.38.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 38
  store <2 x double>* %p1GMP177.fca.38.load, <2 x double>** %p1GMP177.fca.38.gep
  %p1GMP177.fca.39.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 39
  store <2 x double>* %p1GMP177.fca.39.load, <2 x double>** %p1GMP177.fca.39.gep
  %p1GMP177.fca.40.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 40
  store <2 x double>* %p1GMP177.fca.40.load, <2 x double>** %p1GMP177.fca.40.gep
  %p1GMP177.fca.41.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 41
  store <2 x double>* %p1GMP177.fca.41.load, <2 x double>** %p1GMP177.fca.41.gep
  %p1GMP177.fca.42.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 42
  store <4 x double>* %p1GMP177.fca.42.load, <4 x double>** %p1GMP177.fca.42.gep
  %p1GMP177.fca.43.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 43
  store <4 x double>* %p1GMP177.fca.43.load, <4 x double>** %p1GMP177.fca.43.gep
  %p1GMP177.fca.44.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 44
  store <4 x double>* %p1GMP177.fca.44.load, <4 x double>** %p1GMP177.fca.44.gep
  %p1GMP177.fca.45.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 45
  store <4 x double>* %p1GMP177.fca.45.load, <4 x double>** %p1GMP177.fca.45.gep
  %p1GMP177.fca.46.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 46
  store <4 x double>* %p1GMP177.fca.46.load, <4 x double>** %p1GMP177.fca.46.gep
  %p1GMP177.fca.47.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 47
  store <4 x double>* %p1GMP177.fca.47.load, <4 x double>** %p1GMP177.fca.47.gep
  %p1GMP177.fca.48.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 48
  store <4 x double>* %p1GMP177.fca.48.load, <4 x double>** %p1GMP177.fca.48.gep
  %p1GMP177.fca.49.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 49
  store <4 x double>* %p1GMP177.fca.49.load, <4 x double>** %p1GMP177.fca.49.gep
  %p1GMP177.fca.50.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 50
  store <4 x double>* %p1GMP177.fca.50.load, <4 x double>** %p1GMP177.fca.50.gep
  %p1GMP177.fca.51.gep = getelementptr inbounds %gemPrm, %gemPrm* %34, i32 0, i32 51
  store <3 x double>* %p1GMP177.fca.51.load, <3 x double>** %p1GMP177.fca.51.gep
  %idx178 = load i64, i64* %idx
  store i64 %idx178, i64* %35
  %idx180 = load i64, i64* %idx
  %return181 = call i64 @"getcomp@I[II"(i64* %GEM19.fca.6.load, i64 %idx180)
  store i64 %return181, i64* %36
  store i64 %return13, i64* %37
  %mem183 = load <2 x double>, <2 x double>* %mem
  store <2 x double> %mem183, <2 x double>* %38
  store <2 x double> <double 1.000000e+00, double 0.000000e+00>, <2 x double>* %39
  store <2 x double> <double 0.000000e+00, double 1.000000e+00>, <2 x double>* %40
  store <2 x double> zeroinitializer, <2 x double>* %41
  %idx185 = load i64, i64* %idx
  %return186 = call double @"getcomp@F[FI"(double* %GEM19.fca.20.load, i64 %idx185)
  store double %return186, double* %42
  %FLAME = call <2 x double> @"FLAME@UZ6gemPrmM52N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PN8pc_DISC2[VIIIUUUUF"(%gemPrm* %34, i64* %35, i64* %36, i64* %37, <2 x double>* %38, <2 x double>* %39, <2 x double>* %40, <2 x double>* %41, double* %42)
  store <2 x double> %FLAME, <2 x double>* %mem
  br label %end176

end176:                                           ; preds = %true175, %end166
  %idx188 = load i64, i64* %idx
  %return189 = call double @"getcomp@F[FI"(double* %GEM19.fca.21.load, i64 %idx188)
  %return190 = fcmp ogt double %return189, 0.000000e+00
  br i1 %return190, label %true192, label %end193

true192:                                          ; preds = %end176
  %p2GMP194.fca.0.load = load double*, double** %p2GMP107.fca.0.gep
  %p2GMP194.fca.0.insert = insertvalue %gemPrm undef, double* %p2GMP194.fca.0.load, 0
  %p2GMP194.fca.1.load = load double*, double** %p2GMP107.fca.1.gep
  %p2GMP194.fca.1.insert = insertvalue %gemPrm %p2GMP194.fca.0.insert, double* %p2GMP194.fca.1.load, 1
  %p2GMP194.fca.2.load = load double*, double** %p2GMP107.fca.2.gep
  %p2GMP194.fca.2.insert = insertvalue %gemPrm %p2GMP194.fca.1.insert, double* %p2GMP194.fca.2.load, 2
  %p2GMP194.fca.3.load = load double*, double** %p2GMP107.fca.3.gep
  %p2GMP194.fca.3.insert = insertvalue %gemPrm %p2GMP194.fca.2.insert, double* %p2GMP194.fca.3.load, 3
  %p2GMP194.fca.4.load = load double*, double** %p2GMP107.fca.4.gep
  %p2GMP194.fca.4.insert = insertvalue %gemPrm %p2GMP194.fca.3.insert, double* %p2GMP194.fca.4.load, 4
  %p2GMP194.fca.5.load = load double*, double** %p2GMP107.fca.5.gep
  %p2GMP194.fca.5.insert = insertvalue %gemPrm %p2GMP194.fca.4.insert, double* %p2GMP194.fca.5.load, 5
  %p2GMP194.fca.6.load = load <3 x double>*, <3 x double>** %p2GMP107.fca.6.gep
  %p2GMP194.fca.6.insert = insertvalue %gemPrm %p2GMP194.fca.5.insert, <3 x double>* %p2GMP194.fca.6.load, 6
  %p2GMP194.fca.7.load = load <3 x double>*, <3 x double>** %p2GMP107.fca.7.gep
  %p2GMP194.fca.7.insert = insertvalue %gemPrm %p2GMP194.fca.6.insert, <3 x double>* %p2GMP194.fca.7.load, 7
  %p2GMP194.fca.8.load = load <3 x double>*, <3 x double>** %p2GMP107.fca.8.gep
  %p2GMP194.fca.8.insert = insertvalue %gemPrm %p2GMP194.fca.7.insert, <3 x double>* %p2GMP194.fca.8.load, 8
  %p2GMP194.fca.9.load = load <3 x double>*, <3 x double>** %p2GMP107.fca.9.gep
  %p2GMP194.fca.9.insert = insertvalue %gemPrm %p2GMP194.fca.8.insert, <3 x double>* %p2GMP194.fca.9.load, 9
  %p2GMP194.fca.10.load = load <3 x double>*, <3 x double>** %p2GMP107.fca.10.gep
  %p2GMP194.fca.10.insert = insertvalue %gemPrm %p2GMP194.fca.9.insert, <3 x double>* %p2GMP194.fca.10.load, 10
  %p2GMP194.fca.11.load = load <3 x double>*, <3 x double>** %p2GMP107.fca.11.gep
  %p2GMP194.fca.11.insert = insertvalue %gemPrm %p2GMP194.fca.10.insert, <3 x double>* %p2GMP194.fca.11.load, 11
  %p2GMP194.fca.12.load = load <3 x double>*, <3 x double>** %p2GMP107.fca.12.gep
  %p2GMP194.fca.12.insert = insertvalue %gemPrm %p2GMP194.fca.11.insert, <3 x double>* %p2GMP194.fca.12.load, 12
  %p2GMP194.fca.13.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.13.gep
  %p2GMP194.fca.13.insert = insertvalue %gemPrm %p2GMP194.fca.12.insert, <2 x double>* %p2GMP194.fca.13.load, 13
  %p2GMP194.fca.14.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.14.gep
  %p2GMP194.fca.14.insert = insertvalue %gemPrm %p2GMP194.fca.13.insert, <2 x double>* %p2GMP194.fca.14.load, 14
  %p2GMP194.fca.15.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.15.gep
  %p2GMP194.fca.15.insert = insertvalue %gemPrm %p2GMP194.fca.14.insert, <2 x double>* %p2GMP194.fca.15.load, 15
  %p2GMP194.fca.16.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.16.gep
  %p2GMP194.fca.16.insert = insertvalue %gemPrm %p2GMP194.fca.15.insert, <2 x double>* %p2GMP194.fca.16.load, 16
  %p2GMP194.fca.17.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.17.gep
  %p2GMP194.fca.17.insert = insertvalue %gemPrm %p2GMP194.fca.16.insert, <2 x double>* %p2GMP194.fca.17.load, 17
  %p2GMP194.fca.18.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.18.gep
  %p2GMP194.fca.18.insert = insertvalue %gemPrm %p2GMP194.fca.17.insert, <2 x double>* %p2GMP194.fca.18.load, 18
  %p2GMP194.fca.19.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.19.gep
  %p2GMP194.fca.19.insert = insertvalue %gemPrm %p2GMP194.fca.18.insert, <2 x double>* %p2GMP194.fca.19.load, 19
  %p2GMP194.fca.20.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.20.gep
  %p2GMP194.fca.20.insert = insertvalue %gemPrm %p2GMP194.fca.19.insert, <2 x double>* %p2GMP194.fca.20.load, 20
  %p2GMP194.fca.21.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.21.gep
  %p2GMP194.fca.21.insert = insertvalue %gemPrm %p2GMP194.fca.20.insert, <2 x double>* %p2GMP194.fca.21.load, 21
  %p2GMP194.fca.22.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.22.gep
  %p2GMP194.fca.22.insert = insertvalue %gemPrm %p2GMP194.fca.21.insert, <2 x double>* %p2GMP194.fca.22.load, 22
  %p2GMP194.fca.23.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.23.gep
  %p2GMP194.fca.23.insert = insertvalue %gemPrm %p2GMP194.fca.22.insert, <2 x double>* %p2GMP194.fca.23.load, 23
  %p2GMP194.fca.24.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.24.gep
  %p2GMP194.fca.24.insert = insertvalue %gemPrm %p2GMP194.fca.23.insert, <2 x double>* %p2GMP194.fca.24.load, 24
  %p2GMP194.fca.25.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.25.gep
  %p2GMP194.fca.25.insert = insertvalue %gemPrm %p2GMP194.fca.24.insert, <2 x double>* %p2GMP194.fca.25.load, 25
  %p2GMP194.fca.26.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.26.gep
  %p2GMP194.fca.26.insert = insertvalue %gemPrm %p2GMP194.fca.25.insert, <2 x double>* %p2GMP194.fca.26.load, 26
  %p2GMP194.fca.27.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.27.gep
  %p2GMP194.fca.27.insert = insertvalue %gemPrm %p2GMP194.fca.26.insert, <2 x double>* %p2GMP194.fca.27.load, 27
  %p2GMP194.fca.28.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.28.gep
  %p2GMP194.fca.28.insert = insertvalue %gemPrm %p2GMP194.fca.27.insert, <2 x double>* %p2GMP194.fca.28.load, 28
  %p2GMP194.fca.29.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.29.gep
  %p2GMP194.fca.29.insert = insertvalue %gemPrm %p2GMP194.fca.28.insert, <2 x double>* %p2GMP194.fca.29.load, 29
  %p2GMP194.fca.30.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.30.gep
  %p2GMP194.fca.30.insert = insertvalue %gemPrm %p2GMP194.fca.29.insert, <2 x double>* %p2GMP194.fca.30.load, 30
  %p2GMP194.fca.31.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.31.gep
  %p2GMP194.fca.31.insert = insertvalue %gemPrm %p2GMP194.fca.30.insert, <2 x double>* %p2GMP194.fca.31.load, 31
  %p2GMP194.fca.32.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.32.gep
  %p2GMP194.fca.32.insert = insertvalue %gemPrm %p2GMP194.fca.31.insert, <2 x double>* %p2GMP194.fca.32.load, 32
  %p2GMP194.fca.33.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.33.gep
  %p2GMP194.fca.33.insert = insertvalue %gemPrm %p2GMP194.fca.32.insert, <2 x double>* %p2GMP194.fca.33.load, 33
  %p2GMP194.fca.34.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.34.gep
  %p2GMP194.fca.34.insert = insertvalue %gemPrm %p2GMP194.fca.33.insert, <2 x double>* %p2GMP194.fca.34.load, 34
  %p2GMP194.fca.35.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.35.gep
  %p2GMP194.fca.35.insert = insertvalue %gemPrm %p2GMP194.fca.34.insert, <2 x double>* %p2GMP194.fca.35.load, 35
  %p2GMP194.fca.36.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.36.gep
  %p2GMP194.fca.36.insert = insertvalue %gemPrm %p2GMP194.fca.35.insert, <2 x double>* %p2GMP194.fca.36.load, 36
  %p2GMP194.fca.37.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.37.gep
  %p2GMP194.fca.37.insert = insertvalue %gemPrm %p2GMP194.fca.36.insert, <2 x double>* %p2GMP194.fca.37.load, 37
  %p2GMP194.fca.38.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.38.gep
  %p2GMP194.fca.38.insert = insertvalue %gemPrm %p2GMP194.fca.37.insert, <2 x double>* %p2GMP194.fca.38.load, 38
  %p2GMP194.fca.39.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.39.gep
  %p2GMP194.fca.39.insert = insertvalue %gemPrm %p2GMP194.fca.38.insert, <2 x double>* %p2GMP194.fca.39.load, 39
  %p2GMP194.fca.40.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.40.gep
  %p2GMP194.fca.40.insert = insertvalue %gemPrm %p2GMP194.fca.39.insert, <2 x double>* %p2GMP194.fca.40.load, 40
  %p2GMP194.fca.41.load = load <2 x double>*, <2 x double>** %p2GMP107.fca.41.gep
  %p2GMP194.fca.41.insert = insertvalue %gemPrm %p2GMP194.fca.40.insert, <2 x double>* %p2GMP194.fca.41.load, 41
  %p2GMP194.fca.42.load = load <4 x double>*, <4 x double>** %p2GMP107.fca.42.gep
  %p2GMP194.fca.42.insert = insertvalue %gemPrm %p2GMP194.fca.41.insert, <4 x double>* %p2GMP194.fca.42.load, 42
  %p2GMP194.fca.43.load = load <4 x double>*, <4 x double>** %p2GMP107.fca.43.gep
  %p2GMP194.fca.43.insert = insertvalue %gemPrm %p2GMP194.fca.42.insert, <4 x double>* %p2GMP194.fca.43.load, 43
  %p2GMP194.fca.44.load = load <4 x double>*, <4 x double>** %p2GMP107.fca.44.gep
  %p2GMP194.fca.44.insert = insertvalue %gemPrm %p2GMP194.fca.43.insert, <4 x double>* %p2GMP194.fca.44.load, 44
  %p2GMP194.fca.45.load = load <4 x double>*, <4 x double>** %p2GMP107.fca.45.gep
  %p2GMP194.fca.45.insert = insertvalue %gemPrm %p2GMP194.fca.44.insert, <4 x double>* %p2GMP194.fca.45.load, 45
  %p2GMP194.fca.46.load = load <4 x double>*, <4 x double>** %p2GMP107.fca.46.gep
  %p2GMP194.fca.46.insert = insertvalue %gemPrm %p2GMP194.fca.45.insert, <4 x double>* %p2GMP194.fca.46.load, 46
  %p2GMP194.fca.47.load = load <4 x double>*, <4 x double>** %p2GMP107.fca.47.gep
  %p2GMP194.fca.47.insert = insertvalue %gemPrm %p2GMP194.fca.46.insert, <4 x double>* %p2GMP194.fca.47.load, 47
  %p2GMP194.fca.48.load = load <4 x double>*, <4 x double>** %p2GMP107.fca.48.gep
  %p2GMP194.fca.48.insert = insertvalue %gemPrm %p2GMP194.fca.47.insert, <4 x double>* %p2GMP194.fca.48.load, 48
  %p2GMP194.fca.49.load = load <4 x double>*, <4 x double>** %p2GMP107.fca.49.gep
  %p2GMP194.fca.49.insert = insertvalue %gemPrm %p2GMP194.fca.48.insert, <4 x double>* %p2GMP194.fca.49.load, 49
  %p2GMP194.fca.50.load = load <4 x double>*, <4 x double>** %p2GMP107.fca.50.gep
  %p2GMP194.fca.50.insert = insertvalue %gemPrm %p2GMP194.fca.49.insert, <4 x double>* %p2GMP194.fca.50.load, 50
  %p2GMP194.fca.51.load = load <3 x double>*, <3 x double>** %p2GMP107.fca.51.gep
  %p2GMP194.fca.0.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 0
  store double* %p2GMP194.fca.0.load, double** %p2GMP194.fca.0.gep
  %p2GMP194.fca.1.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 1
  store double* %p2GMP194.fca.1.load, double** %p2GMP194.fca.1.gep
  %p2GMP194.fca.2.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 2
  store double* %p2GMP194.fca.2.load, double** %p2GMP194.fca.2.gep
  %p2GMP194.fca.3.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 3
  store double* %p2GMP194.fca.3.load, double** %p2GMP194.fca.3.gep
  %p2GMP194.fca.4.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 4
  store double* %p2GMP194.fca.4.load, double** %p2GMP194.fca.4.gep
  %p2GMP194.fca.5.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 5
  store double* %p2GMP194.fca.5.load, double** %p2GMP194.fca.5.gep
  %p2GMP194.fca.6.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 6
  store <3 x double>* %p2GMP194.fca.6.load, <3 x double>** %p2GMP194.fca.6.gep
  %p2GMP194.fca.7.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 7
  store <3 x double>* %p2GMP194.fca.7.load, <3 x double>** %p2GMP194.fca.7.gep
  %p2GMP194.fca.8.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 8
  store <3 x double>* %p2GMP194.fca.8.load, <3 x double>** %p2GMP194.fca.8.gep
  %p2GMP194.fca.9.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 9
  store <3 x double>* %p2GMP194.fca.9.load, <3 x double>** %p2GMP194.fca.9.gep
  %p2GMP194.fca.10.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 10
  store <3 x double>* %p2GMP194.fca.10.load, <3 x double>** %p2GMP194.fca.10.gep
  %p2GMP194.fca.11.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 11
  store <3 x double>* %p2GMP194.fca.11.load, <3 x double>** %p2GMP194.fca.11.gep
  %p2GMP194.fca.12.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 12
  store <3 x double>* %p2GMP194.fca.12.load, <3 x double>** %p2GMP194.fca.12.gep
  %p2GMP194.fca.13.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 13
  store <2 x double>* %p2GMP194.fca.13.load, <2 x double>** %p2GMP194.fca.13.gep
  %p2GMP194.fca.14.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 14
  store <2 x double>* %p2GMP194.fca.14.load, <2 x double>** %p2GMP194.fca.14.gep
  %p2GMP194.fca.15.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 15
  store <2 x double>* %p2GMP194.fca.15.load, <2 x double>** %p2GMP194.fca.15.gep
  %p2GMP194.fca.16.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 16
  store <2 x double>* %p2GMP194.fca.16.load, <2 x double>** %p2GMP194.fca.16.gep
  %p2GMP194.fca.17.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 17
  store <2 x double>* %p2GMP194.fca.17.load, <2 x double>** %p2GMP194.fca.17.gep
  %p2GMP194.fca.18.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 18
  store <2 x double>* %p2GMP194.fca.18.load, <2 x double>** %p2GMP194.fca.18.gep
  %p2GMP194.fca.19.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 19
  store <2 x double>* %p2GMP194.fca.19.load, <2 x double>** %p2GMP194.fca.19.gep
  %p2GMP194.fca.20.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 20
  store <2 x double>* %p2GMP194.fca.20.load, <2 x double>** %p2GMP194.fca.20.gep
  %p2GMP194.fca.21.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 21
  store <2 x double>* %p2GMP194.fca.21.load, <2 x double>** %p2GMP194.fca.21.gep
  %p2GMP194.fca.22.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 22
  store <2 x double>* %p2GMP194.fca.22.load, <2 x double>** %p2GMP194.fca.22.gep
  %p2GMP194.fca.23.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 23
  store <2 x double>* %p2GMP194.fca.23.load, <2 x double>** %p2GMP194.fca.23.gep
  %p2GMP194.fca.24.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 24
  store <2 x double>* %p2GMP194.fca.24.load, <2 x double>** %p2GMP194.fca.24.gep
  %p2GMP194.fca.25.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 25
  store <2 x double>* %p2GMP194.fca.25.load, <2 x double>** %p2GMP194.fca.25.gep
  %p2GMP194.fca.26.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 26
  store <2 x double>* %p2GMP194.fca.26.load, <2 x double>** %p2GMP194.fca.26.gep
  %p2GMP194.fca.27.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 27
  store <2 x double>* %p2GMP194.fca.27.load, <2 x double>** %p2GMP194.fca.27.gep
  %p2GMP194.fca.28.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 28
  store <2 x double>* %p2GMP194.fca.28.load, <2 x double>** %p2GMP194.fca.28.gep
  %p2GMP194.fca.29.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 29
  store <2 x double>* %p2GMP194.fca.29.load, <2 x double>** %p2GMP194.fca.29.gep
  %p2GMP194.fca.30.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 30
  store <2 x double>* %p2GMP194.fca.30.load, <2 x double>** %p2GMP194.fca.30.gep
  %p2GMP194.fca.31.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 31
  store <2 x double>* %p2GMP194.fca.31.load, <2 x double>** %p2GMP194.fca.31.gep
  %p2GMP194.fca.32.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 32
  store <2 x double>* %p2GMP194.fca.32.load, <2 x double>** %p2GMP194.fca.32.gep
  %p2GMP194.fca.33.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 33
  store <2 x double>* %p2GMP194.fca.33.load, <2 x double>** %p2GMP194.fca.33.gep
  %p2GMP194.fca.34.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 34
  store <2 x double>* %p2GMP194.fca.34.load, <2 x double>** %p2GMP194.fca.34.gep
  %p2GMP194.fca.35.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 35
  store <2 x double>* %p2GMP194.fca.35.load, <2 x double>** %p2GMP194.fca.35.gep
  %p2GMP194.fca.36.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 36
  store <2 x double>* %p2GMP194.fca.36.load, <2 x double>** %p2GMP194.fca.36.gep
  %p2GMP194.fca.37.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 37
  store <2 x double>* %p2GMP194.fca.37.load, <2 x double>** %p2GMP194.fca.37.gep
  %p2GMP194.fca.38.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 38
  store <2 x double>* %p2GMP194.fca.38.load, <2 x double>** %p2GMP194.fca.38.gep
  %p2GMP194.fca.39.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 39
  store <2 x double>* %p2GMP194.fca.39.load, <2 x double>** %p2GMP194.fca.39.gep
  %p2GMP194.fca.40.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 40
  store <2 x double>* %p2GMP194.fca.40.load, <2 x double>** %p2GMP194.fca.40.gep
  %p2GMP194.fca.41.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 41
  store <2 x double>* %p2GMP194.fca.41.load, <2 x double>** %p2GMP194.fca.41.gep
  %p2GMP194.fca.42.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 42
  store <4 x double>* %p2GMP194.fca.42.load, <4 x double>** %p2GMP194.fca.42.gep
  %p2GMP194.fca.43.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 43
  store <4 x double>* %p2GMP194.fca.43.load, <4 x double>** %p2GMP194.fca.43.gep
  %p2GMP194.fca.44.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 44
  store <4 x double>* %p2GMP194.fca.44.load, <4 x double>** %p2GMP194.fca.44.gep
  %p2GMP194.fca.45.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 45
  store <4 x double>* %p2GMP194.fca.45.load, <4 x double>** %p2GMP194.fca.45.gep
  %p2GMP194.fca.46.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 46
  store <4 x double>* %p2GMP194.fca.46.load, <4 x double>** %p2GMP194.fca.46.gep
  %p2GMP194.fca.47.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 47
  store <4 x double>* %p2GMP194.fca.47.load, <4 x double>** %p2GMP194.fca.47.gep
  %p2GMP194.fca.48.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 48
  store <4 x double>* %p2GMP194.fca.48.load, <4 x double>** %p2GMP194.fca.48.gep
  %p2GMP194.fca.49.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 49
  store <4 x double>* %p2GMP194.fca.49.load, <4 x double>** %p2GMP194.fca.49.gep
  %p2GMP194.fca.50.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 50
  store <4 x double>* %p2GMP194.fca.50.load, <4 x double>** %p2GMP194.fca.50.gep
  %p2GMP194.fca.51.gep = getelementptr inbounds %gemPrm, %gemPrm* %43, i32 0, i32 51
  store <3 x double>* %p2GMP194.fca.51.load, <3 x double>** %p2GMP194.fca.51.gep
  %idx195 = load i64, i64* %idx
  store i64 %idx195, i64* %44
  %idx197 = load i64, i64* %idx
  %return198 = call i64 @"getcomp@I[II"(i64* %GEM19.fca.7.load, i64 %idx197)
  store i64 %return198, i64* %45
  store i64 %return13, i64* %46
  %mem200 = load <2 x double>, <2 x double>* %mem
  store <2 x double> %mem200, <2 x double>* %47
  store <2 x double> <double 1.000000e+00, double 0.000000e+00>, <2 x double>* %48
  store <2 x double> <double 0.000000e+00, double 1.000000e+00>, <2 x double>* %49
  store <2 x double> zeroinitializer, <2 x double>* %50
  %idx202 = load i64, i64* %idx
  %return203 = call double @"getcomp@F[FI"(double* %GEM19.fca.21.load, i64 %idx202)
  store double %return203, double* %51
  %FLAME204 = call <2 x double> @"FLAME@UZ6gemPrmM52N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PN8pc_DISC2[VIIIUUUUF"(%gemPrm* %43, i64* %44, i64* %45, i64* %46, <2 x double>* %47, <2 x double>* %48, <2 x double>* %49, <2 x double>* %50, double* %51)
  store <2 x double> %FLAME204, <2 x double>* %mem
  br label %end193

end193:                                           ; preds = %true192, %end176
  %idx206 = load i64, i64* %idx
  %return207 = call double @"getcomp@F[FI"(double* %GEM19.fca.15.load, i64 %idx206)
  %return208 = fcmp one double %return207, 0.000000e+00
  br i1 %return208, label %true210, label %end211

true210:                                          ; preds = %end193
  %tmp212 = load <2 x double>, <2 x double>* %tmp
  %v1GMP213.fca.0.load = load double*, double** %v1GMP108.fca.0.gep
  %v1GMP213.fca.0.insert = insertvalue %gemPrm undef, double* %v1GMP213.fca.0.load, 0
  %v1GMP213.fca.1.load = load double*, double** %v1GMP108.fca.1.gep
  %v1GMP213.fca.1.insert = insertvalue %gemPrm %v1GMP213.fca.0.insert, double* %v1GMP213.fca.1.load, 1
  %v1GMP213.fca.2.load = load double*, double** %v1GMP108.fca.2.gep
  %v1GMP213.fca.2.insert = insertvalue %gemPrm %v1GMP213.fca.1.insert, double* %v1GMP213.fca.2.load, 2
  %v1GMP213.fca.3.load = load double*, double** %v1GMP108.fca.3.gep
  %v1GMP213.fca.3.insert = insertvalue %gemPrm %v1GMP213.fca.2.insert, double* %v1GMP213.fca.3.load, 3
  %v1GMP213.fca.4.load = load double*, double** %v1GMP108.fca.4.gep
  %v1GMP213.fca.4.insert = insertvalue %gemPrm %v1GMP213.fca.3.insert, double* %v1GMP213.fca.4.load, 4
  %v1GMP213.fca.5.load = load double*, double** %v1GMP108.fca.5.gep
  %v1GMP213.fca.5.insert = insertvalue %gemPrm %v1GMP213.fca.4.insert, double* %v1GMP213.fca.5.load, 5
  %v1GMP213.fca.6.load = load <3 x double>*, <3 x double>** %v1GMP108.fca.6.gep
  %v1GMP213.fca.6.insert = insertvalue %gemPrm %v1GMP213.fca.5.insert, <3 x double>* %v1GMP213.fca.6.load, 6
  %v1GMP213.fca.7.load = load <3 x double>*, <3 x double>** %v1GMP108.fca.7.gep
  %v1GMP213.fca.7.insert = insertvalue %gemPrm %v1GMP213.fca.6.insert, <3 x double>* %v1GMP213.fca.7.load, 7
  %v1GMP213.fca.8.load = load <3 x double>*, <3 x double>** %v1GMP108.fca.8.gep
  %v1GMP213.fca.8.insert = insertvalue %gemPrm %v1GMP213.fca.7.insert, <3 x double>* %v1GMP213.fca.8.load, 8
  %v1GMP213.fca.9.load = load <3 x double>*, <3 x double>** %v1GMP108.fca.9.gep
  %v1GMP213.fca.9.insert = insertvalue %gemPrm %v1GMP213.fca.8.insert, <3 x double>* %v1GMP213.fca.9.load, 9
  %v1GMP213.fca.10.load = load <3 x double>*, <3 x double>** %v1GMP108.fca.10.gep
  %v1GMP213.fca.10.insert = insertvalue %gemPrm %v1GMP213.fca.9.insert, <3 x double>* %v1GMP213.fca.10.load, 10
  %v1GMP213.fca.11.load = load <3 x double>*, <3 x double>** %v1GMP108.fca.11.gep
  %v1GMP213.fca.11.insert = insertvalue %gemPrm %v1GMP213.fca.10.insert, <3 x double>* %v1GMP213.fca.11.load, 11
  %v1GMP213.fca.12.load = load <3 x double>*, <3 x double>** %v1GMP108.fca.12.gep
  %v1GMP213.fca.12.insert = insertvalue %gemPrm %v1GMP213.fca.11.insert, <3 x double>* %v1GMP213.fca.12.load, 12
  %v1GMP213.fca.13.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.13.gep
  %v1GMP213.fca.13.insert = insertvalue %gemPrm %v1GMP213.fca.12.insert, <2 x double>* %v1GMP213.fca.13.load, 13
  %v1GMP213.fca.14.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.14.gep
  %v1GMP213.fca.14.insert = insertvalue %gemPrm %v1GMP213.fca.13.insert, <2 x double>* %v1GMP213.fca.14.load, 14
  %v1GMP213.fca.15.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.15.gep
  %v1GMP213.fca.15.insert = insertvalue %gemPrm %v1GMP213.fca.14.insert, <2 x double>* %v1GMP213.fca.15.load, 15
  %v1GMP213.fca.16.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.16.gep
  %v1GMP213.fca.16.insert = insertvalue %gemPrm %v1GMP213.fca.15.insert, <2 x double>* %v1GMP213.fca.16.load, 16
  %v1GMP213.fca.17.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.17.gep
  %v1GMP213.fca.17.insert = insertvalue %gemPrm %v1GMP213.fca.16.insert, <2 x double>* %v1GMP213.fca.17.load, 17
  %v1GMP213.fca.18.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.18.gep
  %v1GMP213.fca.18.insert = insertvalue %gemPrm %v1GMP213.fca.17.insert, <2 x double>* %v1GMP213.fca.18.load, 18
  %v1GMP213.fca.19.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.19.gep
  %v1GMP213.fca.19.insert = insertvalue %gemPrm %v1GMP213.fca.18.insert, <2 x double>* %v1GMP213.fca.19.load, 19
  %v1GMP213.fca.20.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.20.gep
  %v1GMP213.fca.20.insert = insertvalue %gemPrm %v1GMP213.fca.19.insert, <2 x double>* %v1GMP213.fca.20.load, 20
  %v1GMP213.fca.21.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.21.gep
  %v1GMP213.fca.21.insert = insertvalue %gemPrm %v1GMP213.fca.20.insert, <2 x double>* %v1GMP213.fca.21.load, 21
  %v1GMP213.fca.22.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.22.gep
  %v1GMP213.fca.22.insert = insertvalue %gemPrm %v1GMP213.fca.21.insert, <2 x double>* %v1GMP213.fca.22.load, 22
  %v1GMP213.fca.23.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.23.gep
  %v1GMP213.fca.23.insert = insertvalue %gemPrm %v1GMP213.fca.22.insert, <2 x double>* %v1GMP213.fca.23.load, 23
  %v1GMP213.fca.24.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.24.gep
  %v1GMP213.fca.24.insert = insertvalue %gemPrm %v1GMP213.fca.23.insert, <2 x double>* %v1GMP213.fca.24.load, 24
  %v1GMP213.fca.25.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.25.gep
  %v1GMP213.fca.25.insert = insertvalue %gemPrm %v1GMP213.fca.24.insert, <2 x double>* %v1GMP213.fca.25.load, 25
  %v1GMP213.fca.26.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.26.gep
  %v1GMP213.fca.26.insert = insertvalue %gemPrm %v1GMP213.fca.25.insert, <2 x double>* %v1GMP213.fca.26.load, 26
  %v1GMP213.fca.27.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.27.gep
  %v1GMP213.fca.27.insert = insertvalue %gemPrm %v1GMP213.fca.26.insert, <2 x double>* %v1GMP213.fca.27.load, 27
  %v1GMP213.fca.28.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.28.gep
  %v1GMP213.fca.28.insert = insertvalue %gemPrm %v1GMP213.fca.27.insert, <2 x double>* %v1GMP213.fca.28.load, 28
  %v1GMP213.fca.29.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.29.gep
  %v1GMP213.fca.29.insert = insertvalue %gemPrm %v1GMP213.fca.28.insert, <2 x double>* %v1GMP213.fca.29.load, 29
  %v1GMP213.fca.30.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.30.gep
  %v1GMP213.fca.30.insert = insertvalue %gemPrm %v1GMP213.fca.29.insert, <2 x double>* %v1GMP213.fca.30.load, 30
  %v1GMP213.fca.31.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.31.gep
  %v1GMP213.fca.31.insert = insertvalue %gemPrm %v1GMP213.fca.30.insert, <2 x double>* %v1GMP213.fca.31.load, 31
  %v1GMP213.fca.32.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.32.gep
  %v1GMP213.fca.32.insert = insertvalue %gemPrm %v1GMP213.fca.31.insert, <2 x double>* %v1GMP213.fca.32.load, 32
  %v1GMP213.fca.33.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.33.gep
  %v1GMP213.fca.33.insert = insertvalue %gemPrm %v1GMP213.fca.32.insert, <2 x double>* %v1GMP213.fca.33.load, 33
  %v1GMP213.fca.34.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.34.gep
  %v1GMP213.fca.34.insert = insertvalue %gemPrm %v1GMP213.fca.33.insert, <2 x double>* %v1GMP213.fca.34.load, 34
  %v1GMP213.fca.35.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.35.gep
  %v1GMP213.fca.35.insert = insertvalue %gemPrm %v1GMP213.fca.34.insert, <2 x double>* %v1GMP213.fca.35.load, 35
  %v1GMP213.fca.36.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.36.gep
  %v1GMP213.fca.36.insert = insertvalue %gemPrm %v1GMP213.fca.35.insert, <2 x double>* %v1GMP213.fca.36.load, 36
  %v1GMP213.fca.37.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.37.gep
  %v1GMP213.fca.37.insert = insertvalue %gemPrm %v1GMP213.fca.36.insert, <2 x double>* %v1GMP213.fca.37.load, 37
  %v1GMP213.fca.38.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.38.gep
  %v1GMP213.fca.38.insert = insertvalue %gemPrm %v1GMP213.fca.37.insert, <2 x double>* %v1GMP213.fca.38.load, 38
  %v1GMP213.fca.39.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.39.gep
  %v1GMP213.fca.39.insert = insertvalue %gemPrm %v1GMP213.fca.38.insert, <2 x double>* %v1GMP213.fca.39.load, 39
  %v1GMP213.fca.40.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.40.gep
  %v1GMP213.fca.40.insert = insertvalue %gemPrm %v1GMP213.fca.39.insert, <2 x double>* %v1GMP213.fca.40.load, 40
  %v1GMP213.fca.41.load = load <2 x double>*, <2 x double>** %v1GMP108.fca.41.gep
  %v1GMP213.fca.41.insert = insertvalue %gemPrm %v1GMP213.fca.40.insert, <2 x double>* %v1GMP213.fca.41.load, 41
  %v1GMP213.fca.42.load = load <4 x double>*, <4 x double>** %v1GMP108.fca.42.gep
  %v1GMP213.fca.42.insert = insertvalue %gemPrm %v1GMP213.fca.41.insert, <4 x double>* %v1GMP213.fca.42.load, 42
  %v1GMP213.fca.43.load = load <4 x double>*, <4 x double>** %v1GMP108.fca.43.gep
  %v1GMP213.fca.43.insert = insertvalue %gemPrm %v1GMP213.fca.42.insert, <4 x double>* %v1GMP213.fca.43.load, 43
  %v1GMP213.fca.44.load = load <4 x double>*, <4 x double>** %v1GMP108.fca.44.gep
  %v1GMP213.fca.44.insert = insertvalue %gemPrm %v1GMP213.fca.43.insert, <4 x double>* %v1GMP213.fca.44.load, 44
  %v1GMP213.fca.45.load = load <4 x double>*, <4 x double>** %v1GMP108.fca.45.gep
  %v1GMP213.fca.45.insert = insertvalue %gemPrm %v1GMP213.fca.44.insert, <4 x double>* %v1GMP213.fca.45.load, 45
  %v1GMP213.fca.46.load = load <4 x double>*, <4 x double>** %v1GMP108.fca.46.gep
  %v1GMP213.fca.46.insert = insertvalue %gemPrm %v1GMP213.fca.45.insert, <4 x double>* %v1GMP213.fca.46.load, 46
  %v1GMP213.fca.47.load = load <4 x double>*, <4 x double>** %v1GMP108.fca.47.gep
  %v1GMP213.fca.47.insert = insertvalue %gemPrm %v1GMP213.fca.46.insert, <4 x double>* %v1GMP213.fca.47.load, 47
  %v1GMP213.fca.48.load = load <4 x double>*, <4 x double>** %v1GMP108.fca.48.gep
  %v1GMP213.fca.48.insert = insertvalue %gemPrm %v1GMP213.fca.47.insert, <4 x double>* %v1GMP213.fca.48.load, 48
  %v1GMP213.fca.49.load = load <4 x double>*, <4 x double>** %v1GMP108.fca.49.gep
  %v1GMP213.fca.49.insert = insertvalue %gemPrm %v1GMP213.fca.48.insert, <4 x double>* %v1GMP213.fca.49.load, 49
  %v1GMP213.fca.50.load = load <4 x double>*, <4 x double>** %v1GMP108.fca.50.gep
  %v1GMP213.fca.50.insert = insertvalue %gemPrm %v1GMP213.fca.49.insert, <4 x double>* %v1GMP213.fca.50.load, 50
  %v1GMP213.fca.51.load = load <3 x double>*, <3 x double>** %v1GMP108.fca.51.gep
  %v1GMP213.fca.0.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 0
  store double* %v1GMP213.fca.0.load, double** %v1GMP213.fca.0.gep
  %v1GMP213.fca.1.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 1
  store double* %v1GMP213.fca.1.load, double** %v1GMP213.fca.1.gep
  %v1GMP213.fca.2.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 2
  store double* %v1GMP213.fca.2.load, double** %v1GMP213.fca.2.gep
  %v1GMP213.fca.3.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 3
  store double* %v1GMP213.fca.3.load, double** %v1GMP213.fca.3.gep
  %v1GMP213.fca.4.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 4
  store double* %v1GMP213.fca.4.load, double** %v1GMP213.fca.4.gep
  %v1GMP213.fca.5.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 5
  store double* %v1GMP213.fca.5.load, double** %v1GMP213.fca.5.gep
  %v1GMP213.fca.6.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 6
  store <3 x double>* %v1GMP213.fca.6.load, <3 x double>** %v1GMP213.fca.6.gep
  %v1GMP213.fca.7.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 7
  store <3 x double>* %v1GMP213.fca.7.load, <3 x double>** %v1GMP213.fca.7.gep
  %v1GMP213.fca.8.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 8
  store <3 x double>* %v1GMP213.fca.8.load, <3 x double>** %v1GMP213.fca.8.gep
  %v1GMP213.fca.9.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 9
  store <3 x double>* %v1GMP213.fca.9.load, <3 x double>** %v1GMP213.fca.9.gep
  %v1GMP213.fca.10.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 10
  store <3 x double>* %v1GMP213.fca.10.load, <3 x double>** %v1GMP213.fca.10.gep
  %v1GMP213.fca.11.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 11
  store <3 x double>* %v1GMP213.fca.11.load, <3 x double>** %v1GMP213.fca.11.gep
  %v1GMP213.fca.12.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 12
  store <3 x double>* %v1GMP213.fca.12.load, <3 x double>** %v1GMP213.fca.12.gep
  %v1GMP213.fca.13.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 13
  store <2 x double>* %v1GMP213.fca.13.load, <2 x double>** %v1GMP213.fca.13.gep
  %v1GMP213.fca.14.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 14
  store <2 x double>* %v1GMP213.fca.14.load, <2 x double>** %v1GMP213.fca.14.gep
  %v1GMP213.fca.15.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 15
  store <2 x double>* %v1GMP213.fca.15.load, <2 x double>** %v1GMP213.fca.15.gep
  %v1GMP213.fca.16.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 16
  store <2 x double>* %v1GMP213.fca.16.load, <2 x double>** %v1GMP213.fca.16.gep
  %v1GMP213.fca.17.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 17
  store <2 x double>* %v1GMP213.fca.17.load, <2 x double>** %v1GMP213.fca.17.gep
  %v1GMP213.fca.18.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 18
  store <2 x double>* %v1GMP213.fca.18.load, <2 x double>** %v1GMP213.fca.18.gep
  %v1GMP213.fca.19.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 19
  store <2 x double>* %v1GMP213.fca.19.load, <2 x double>** %v1GMP213.fca.19.gep
  %v1GMP213.fca.20.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 20
  store <2 x double>* %v1GMP213.fca.20.load, <2 x double>** %v1GMP213.fca.20.gep
  %v1GMP213.fca.21.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 21
  store <2 x double>* %v1GMP213.fca.21.load, <2 x double>** %v1GMP213.fca.21.gep
  %v1GMP213.fca.22.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 22
  store <2 x double>* %v1GMP213.fca.22.load, <2 x double>** %v1GMP213.fca.22.gep
  %v1GMP213.fca.23.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 23
  store <2 x double>* %v1GMP213.fca.23.load, <2 x double>** %v1GMP213.fca.23.gep
  %v1GMP213.fca.24.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 24
  store <2 x double>* %v1GMP213.fca.24.load, <2 x double>** %v1GMP213.fca.24.gep
  %v1GMP213.fca.25.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 25
  store <2 x double>* %v1GMP213.fca.25.load, <2 x double>** %v1GMP213.fca.25.gep
  %v1GMP213.fca.26.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 26
  store <2 x double>* %v1GMP213.fca.26.load, <2 x double>** %v1GMP213.fca.26.gep
  %v1GMP213.fca.27.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 27
  store <2 x double>* %v1GMP213.fca.27.load, <2 x double>** %v1GMP213.fca.27.gep
  %v1GMP213.fca.28.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 28
  store <2 x double>* %v1GMP213.fca.28.load, <2 x double>** %v1GMP213.fca.28.gep
  %v1GMP213.fca.29.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 29
  store <2 x double>* %v1GMP213.fca.29.load, <2 x double>** %v1GMP213.fca.29.gep
  %v1GMP213.fca.30.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 30
  store <2 x double>* %v1GMP213.fca.30.load, <2 x double>** %v1GMP213.fca.30.gep
  %v1GMP213.fca.31.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 31
  store <2 x double>* %v1GMP213.fca.31.load, <2 x double>** %v1GMP213.fca.31.gep
  %v1GMP213.fca.32.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 32
  store <2 x double>* %v1GMP213.fca.32.load, <2 x double>** %v1GMP213.fca.32.gep
  %v1GMP213.fca.33.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 33
  store <2 x double>* %v1GMP213.fca.33.load, <2 x double>** %v1GMP213.fca.33.gep
  %v1GMP213.fca.34.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 34
  store <2 x double>* %v1GMP213.fca.34.load, <2 x double>** %v1GMP213.fca.34.gep
  %v1GMP213.fca.35.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 35
  store <2 x double>* %v1GMP213.fca.35.load, <2 x double>** %v1GMP213.fca.35.gep
  %v1GMP213.fca.36.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 36
  store <2 x double>* %v1GMP213.fca.36.load, <2 x double>** %v1GMP213.fca.36.gep
  %v1GMP213.fca.37.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 37
  store <2 x double>* %v1GMP213.fca.37.load, <2 x double>** %v1GMP213.fca.37.gep
  %v1GMP213.fca.38.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 38
  store <2 x double>* %v1GMP213.fca.38.load, <2 x double>** %v1GMP213.fca.38.gep
  %v1GMP213.fca.39.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 39
  store <2 x double>* %v1GMP213.fca.39.load, <2 x double>** %v1GMP213.fca.39.gep
  %v1GMP213.fca.40.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 40
  store <2 x double>* %v1GMP213.fca.40.load, <2 x double>** %v1GMP213.fca.40.gep
  %v1GMP213.fca.41.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 41
  store <2 x double>* %v1GMP213.fca.41.load, <2 x double>** %v1GMP213.fca.41.gep
  %v1GMP213.fca.42.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 42
  store <4 x double>* %v1GMP213.fca.42.load, <4 x double>** %v1GMP213.fca.42.gep
  %v1GMP213.fca.43.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 43
  store <4 x double>* %v1GMP213.fca.43.load, <4 x double>** %v1GMP213.fca.43.gep
  %v1GMP213.fca.44.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 44
  store <4 x double>* %v1GMP213.fca.44.load, <4 x double>** %v1GMP213.fca.44.gep
  %v1GMP213.fca.45.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 45
  store <4 x double>* %v1GMP213.fca.45.load, <4 x double>** %v1GMP213.fca.45.gep
  %v1GMP213.fca.46.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 46
  store <4 x double>* %v1GMP213.fca.46.load, <4 x double>** %v1GMP213.fca.46.gep
  %v1GMP213.fca.47.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 47
  store <4 x double>* %v1GMP213.fca.47.load, <4 x double>** %v1GMP213.fca.47.gep
  %v1GMP213.fca.48.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 48
  store <4 x double>* %v1GMP213.fca.48.load, <4 x double>** %v1GMP213.fca.48.gep
  %v1GMP213.fca.49.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 49
  store <4 x double>* %v1GMP213.fca.49.load, <4 x double>** %v1GMP213.fca.49.gep
  %v1GMP213.fca.50.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 50
  store <4 x double>* %v1GMP213.fca.50.load, <4 x double>** %v1GMP213.fca.50.gep
  %v1GMP213.fca.51.gep = getelementptr inbounds %gemPrm, %gemPrm* %52, i32 0, i32 51
  store <3 x double>* %v1GMP213.fca.51.load, <3 x double>** %v1GMP213.fca.51.gep
  %idx214 = load i64, i64* %idx
  store i64 %idx214, i64* %53
  %idx216 = load i64, i64* %idx
  %return217 = call i64 @"getcomp@I[II"(i64* %GEM19.fca.2.load, i64 %idx216)
  store i64 %return217, i64* %54
  store i64 %return13, i64* %55
  %mem219 = load <2 x double>, <2 x double>* %mem
  store <2 x double> %mem219, <2 x double>* %56
  %idx221 = load i64, i64* %idx
  %return222 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM19.fca.31.load, i64 %idx221)
  store <2 x double> %return222, <2 x double>* %57
  %idx224 = load i64, i64* %idx
  %return225 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM19.fca.32.load, i64 %idx224)
  store <2 x double> %return225, <2 x double>* %58
  %idx227 = load i64, i64* %idx
  %return228 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM19.fca.33.load, i64 %idx227)
  store <2 x double> %return228, <2 x double>* %59
  %idx230 = load i64, i64* %idx
  %return231 = call double @"getcomp@F[FI"(double* %GEM19.fca.15.load, i64 %idx230)
  store double %return231, double* %60
  %FLAME232 = call <2 x double> @"FLAME@UZ6gemPrmM52N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PN8pc_DISC2[VIIIUUUUF"(%gemPrm* %52, i64* %53, i64* %54, i64* %55, <2 x double>* %56, <2 x double>* %57, <2 x double>* %58, <2 x double>* %59, double* %60)
  %output = call <2 x double> @"add@UU"(<2 x double> %tmp212, <2 x double> %FLAME232)
  store <2 x double> %output, <2 x double>* %tmp
  br label %end211

end211:                                           ; preds = %true210, %end193
  %idx234 = load i64, i64* %idx
  %return235 = call double @"getcomp@F[FI"(double* %GEM19.fca.16.load, i64 %idx234)
  %return236 = fcmp one double %return235, 0.000000e+00
  br i1 %return236, label %true238, label %end239

true238:                                          ; preds = %end211
  %tmp240 = load <2 x double>, <2 x double>* %tmp
  %v2GMP241.fca.0.load = load double*, double** %v2GMP109.fca.0.gep
  %v2GMP241.fca.0.insert = insertvalue %gemPrm undef, double* %v2GMP241.fca.0.load, 0
  %v2GMP241.fca.1.load = load double*, double** %v2GMP109.fca.1.gep
  %v2GMP241.fca.1.insert = insertvalue %gemPrm %v2GMP241.fca.0.insert, double* %v2GMP241.fca.1.load, 1
  %v2GMP241.fca.2.load = load double*, double** %v2GMP109.fca.2.gep
  %v2GMP241.fca.2.insert = insertvalue %gemPrm %v2GMP241.fca.1.insert, double* %v2GMP241.fca.2.load, 2
  %v2GMP241.fca.3.load = load double*, double** %v2GMP109.fca.3.gep
  %v2GMP241.fca.3.insert = insertvalue %gemPrm %v2GMP241.fca.2.insert, double* %v2GMP241.fca.3.load, 3
  %v2GMP241.fca.4.load = load double*, double** %v2GMP109.fca.4.gep
  %v2GMP241.fca.4.insert = insertvalue %gemPrm %v2GMP241.fca.3.insert, double* %v2GMP241.fca.4.load, 4
  %v2GMP241.fca.5.load = load double*, double** %v2GMP109.fca.5.gep
  %v2GMP241.fca.5.insert = insertvalue %gemPrm %v2GMP241.fca.4.insert, double* %v2GMP241.fca.5.load, 5
  %v2GMP241.fca.6.load = load <3 x double>*, <3 x double>** %v2GMP109.fca.6.gep
  %v2GMP241.fca.6.insert = insertvalue %gemPrm %v2GMP241.fca.5.insert, <3 x double>* %v2GMP241.fca.6.load, 6
  %v2GMP241.fca.7.load = load <3 x double>*, <3 x double>** %v2GMP109.fca.7.gep
  %v2GMP241.fca.7.insert = insertvalue %gemPrm %v2GMP241.fca.6.insert, <3 x double>* %v2GMP241.fca.7.load, 7
  %v2GMP241.fca.8.load = load <3 x double>*, <3 x double>** %v2GMP109.fca.8.gep
  %v2GMP241.fca.8.insert = insertvalue %gemPrm %v2GMP241.fca.7.insert, <3 x double>* %v2GMP241.fca.8.load, 8
  %v2GMP241.fca.9.load = load <3 x double>*, <3 x double>** %v2GMP109.fca.9.gep
  %v2GMP241.fca.9.insert = insertvalue %gemPrm %v2GMP241.fca.8.insert, <3 x double>* %v2GMP241.fca.9.load, 9
  %v2GMP241.fca.10.load = load <3 x double>*, <3 x double>** %v2GMP109.fca.10.gep
  %v2GMP241.fca.10.insert = insertvalue %gemPrm %v2GMP241.fca.9.insert, <3 x double>* %v2GMP241.fca.10.load, 10
  %v2GMP241.fca.11.load = load <3 x double>*, <3 x double>** %v2GMP109.fca.11.gep
  %v2GMP241.fca.11.insert = insertvalue %gemPrm %v2GMP241.fca.10.insert, <3 x double>* %v2GMP241.fca.11.load, 11
  %v2GMP241.fca.12.load = load <3 x double>*, <3 x double>** %v2GMP109.fca.12.gep
  %v2GMP241.fca.12.insert = insertvalue %gemPrm %v2GMP241.fca.11.insert, <3 x double>* %v2GMP241.fca.12.load, 12
  %v2GMP241.fca.13.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.13.gep
  %v2GMP241.fca.13.insert = insertvalue %gemPrm %v2GMP241.fca.12.insert, <2 x double>* %v2GMP241.fca.13.load, 13
  %v2GMP241.fca.14.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.14.gep
  %v2GMP241.fca.14.insert = insertvalue %gemPrm %v2GMP241.fca.13.insert, <2 x double>* %v2GMP241.fca.14.load, 14
  %v2GMP241.fca.15.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.15.gep
  %v2GMP241.fca.15.insert = insertvalue %gemPrm %v2GMP241.fca.14.insert, <2 x double>* %v2GMP241.fca.15.load, 15
  %v2GMP241.fca.16.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.16.gep
  %v2GMP241.fca.16.insert = insertvalue %gemPrm %v2GMP241.fca.15.insert, <2 x double>* %v2GMP241.fca.16.load, 16
  %v2GMP241.fca.17.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.17.gep
  %v2GMP241.fca.17.insert = insertvalue %gemPrm %v2GMP241.fca.16.insert, <2 x double>* %v2GMP241.fca.17.load, 17
  %v2GMP241.fca.18.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.18.gep
  %v2GMP241.fca.18.insert = insertvalue %gemPrm %v2GMP241.fca.17.insert, <2 x double>* %v2GMP241.fca.18.load, 18
  %v2GMP241.fca.19.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.19.gep
  %v2GMP241.fca.19.insert = insertvalue %gemPrm %v2GMP241.fca.18.insert, <2 x double>* %v2GMP241.fca.19.load, 19
  %v2GMP241.fca.20.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.20.gep
  %v2GMP241.fca.20.insert = insertvalue %gemPrm %v2GMP241.fca.19.insert, <2 x double>* %v2GMP241.fca.20.load, 20
  %v2GMP241.fca.21.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.21.gep
  %v2GMP241.fca.21.insert = insertvalue %gemPrm %v2GMP241.fca.20.insert, <2 x double>* %v2GMP241.fca.21.load, 21
  %v2GMP241.fca.22.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.22.gep
  %v2GMP241.fca.22.insert = insertvalue %gemPrm %v2GMP241.fca.21.insert, <2 x double>* %v2GMP241.fca.22.load, 22
  %v2GMP241.fca.23.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.23.gep
  %v2GMP241.fca.23.insert = insertvalue %gemPrm %v2GMP241.fca.22.insert, <2 x double>* %v2GMP241.fca.23.load, 23
  %v2GMP241.fca.24.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.24.gep
  %v2GMP241.fca.24.insert = insertvalue %gemPrm %v2GMP241.fca.23.insert, <2 x double>* %v2GMP241.fca.24.load, 24
  %v2GMP241.fca.25.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.25.gep
  %v2GMP241.fca.25.insert = insertvalue %gemPrm %v2GMP241.fca.24.insert, <2 x double>* %v2GMP241.fca.25.load, 25
  %v2GMP241.fca.26.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.26.gep
  %v2GMP241.fca.26.insert = insertvalue %gemPrm %v2GMP241.fca.25.insert, <2 x double>* %v2GMP241.fca.26.load, 26
  %v2GMP241.fca.27.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.27.gep
  %v2GMP241.fca.27.insert = insertvalue %gemPrm %v2GMP241.fca.26.insert, <2 x double>* %v2GMP241.fca.27.load, 27
  %v2GMP241.fca.28.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.28.gep
  %v2GMP241.fca.28.insert = insertvalue %gemPrm %v2GMP241.fca.27.insert, <2 x double>* %v2GMP241.fca.28.load, 28
  %v2GMP241.fca.29.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.29.gep
  %v2GMP241.fca.29.insert = insertvalue %gemPrm %v2GMP241.fca.28.insert, <2 x double>* %v2GMP241.fca.29.load, 29
  %v2GMP241.fca.30.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.30.gep
  %v2GMP241.fca.30.insert = insertvalue %gemPrm %v2GMP241.fca.29.insert, <2 x double>* %v2GMP241.fca.30.load, 30
  %v2GMP241.fca.31.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.31.gep
  %v2GMP241.fca.31.insert = insertvalue %gemPrm %v2GMP241.fca.30.insert, <2 x double>* %v2GMP241.fca.31.load, 31
  %v2GMP241.fca.32.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.32.gep
  %v2GMP241.fca.32.insert = insertvalue %gemPrm %v2GMP241.fca.31.insert, <2 x double>* %v2GMP241.fca.32.load, 32
  %v2GMP241.fca.33.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.33.gep
  %v2GMP241.fca.33.insert = insertvalue %gemPrm %v2GMP241.fca.32.insert, <2 x double>* %v2GMP241.fca.33.load, 33
  %v2GMP241.fca.34.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.34.gep
  %v2GMP241.fca.34.insert = insertvalue %gemPrm %v2GMP241.fca.33.insert, <2 x double>* %v2GMP241.fca.34.load, 34
  %v2GMP241.fca.35.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.35.gep
  %v2GMP241.fca.35.insert = insertvalue %gemPrm %v2GMP241.fca.34.insert, <2 x double>* %v2GMP241.fca.35.load, 35
  %v2GMP241.fca.36.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.36.gep
  %v2GMP241.fca.36.insert = insertvalue %gemPrm %v2GMP241.fca.35.insert, <2 x double>* %v2GMP241.fca.36.load, 36
  %v2GMP241.fca.37.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.37.gep
  %v2GMP241.fca.37.insert = insertvalue %gemPrm %v2GMP241.fca.36.insert, <2 x double>* %v2GMP241.fca.37.load, 37
  %v2GMP241.fca.38.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.38.gep
  %v2GMP241.fca.38.insert = insertvalue %gemPrm %v2GMP241.fca.37.insert, <2 x double>* %v2GMP241.fca.38.load, 38
  %v2GMP241.fca.39.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.39.gep
  %v2GMP241.fca.39.insert = insertvalue %gemPrm %v2GMP241.fca.38.insert, <2 x double>* %v2GMP241.fca.39.load, 39
  %v2GMP241.fca.40.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.40.gep
  %v2GMP241.fca.40.insert = insertvalue %gemPrm %v2GMP241.fca.39.insert, <2 x double>* %v2GMP241.fca.40.load, 40
  %v2GMP241.fca.41.load = load <2 x double>*, <2 x double>** %v2GMP109.fca.41.gep
  %v2GMP241.fca.41.insert = insertvalue %gemPrm %v2GMP241.fca.40.insert, <2 x double>* %v2GMP241.fca.41.load, 41
  %v2GMP241.fca.42.load = load <4 x double>*, <4 x double>** %v2GMP109.fca.42.gep
  %v2GMP241.fca.42.insert = insertvalue %gemPrm %v2GMP241.fca.41.insert, <4 x double>* %v2GMP241.fca.42.load, 42
  %v2GMP241.fca.43.load = load <4 x double>*, <4 x double>** %v2GMP109.fca.43.gep
  %v2GMP241.fca.43.insert = insertvalue %gemPrm %v2GMP241.fca.42.insert, <4 x double>* %v2GMP241.fca.43.load, 43
  %v2GMP241.fca.44.load = load <4 x double>*, <4 x double>** %v2GMP109.fca.44.gep
  %v2GMP241.fca.44.insert = insertvalue %gemPrm %v2GMP241.fca.43.insert, <4 x double>* %v2GMP241.fca.44.load, 44
  %v2GMP241.fca.45.load = load <4 x double>*, <4 x double>** %v2GMP109.fca.45.gep
  %v2GMP241.fca.45.insert = insertvalue %gemPrm %v2GMP241.fca.44.insert, <4 x double>* %v2GMP241.fca.45.load, 45
  %v2GMP241.fca.46.load = load <4 x double>*, <4 x double>** %v2GMP109.fca.46.gep
  %v2GMP241.fca.46.insert = insertvalue %gemPrm %v2GMP241.fca.45.insert, <4 x double>* %v2GMP241.fca.46.load, 46
  %v2GMP241.fca.47.load = load <4 x double>*, <4 x double>** %v2GMP109.fca.47.gep
  %v2GMP241.fca.47.insert = insertvalue %gemPrm %v2GMP241.fca.46.insert, <4 x double>* %v2GMP241.fca.47.load, 47
  %v2GMP241.fca.48.load = load <4 x double>*, <4 x double>** %v2GMP109.fca.48.gep
  %v2GMP241.fca.48.insert = insertvalue %gemPrm %v2GMP241.fca.47.insert, <4 x double>* %v2GMP241.fca.48.load, 48
  %v2GMP241.fca.49.load = load <4 x double>*, <4 x double>** %v2GMP109.fca.49.gep
  %v2GMP241.fca.49.insert = insertvalue %gemPrm %v2GMP241.fca.48.insert, <4 x double>* %v2GMP241.fca.49.load, 49
  %v2GMP241.fca.50.load = load <4 x double>*, <4 x double>** %v2GMP109.fca.50.gep
  %v2GMP241.fca.50.insert = insertvalue %gemPrm %v2GMP241.fca.49.insert, <4 x double>* %v2GMP241.fca.50.load, 50
  %v2GMP241.fca.51.load = load <3 x double>*, <3 x double>** %v2GMP109.fca.51.gep
  %v2GMP241.fca.0.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 0
  store double* %v2GMP241.fca.0.load, double** %v2GMP241.fca.0.gep
  %v2GMP241.fca.1.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 1
  store double* %v2GMP241.fca.1.load, double** %v2GMP241.fca.1.gep
  %v2GMP241.fca.2.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 2
  store double* %v2GMP241.fca.2.load, double** %v2GMP241.fca.2.gep
  %v2GMP241.fca.3.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 3
  store double* %v2GMP241.fca.3.load, double** %v2GMP241.fca.3.gep
  %v2GMP241.fca.4.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 4
  store double* %v2GMP241.fca.4.load, double** %v2GMP241.fca.4.gep
  %v2GMP241.fca.5.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 5
  store double* %v2GMP241.fca.5.load, double** %v2GMP241.fca.5.gep
  %v2GMP241.fca.6.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 6
  store <3 x double>* %v2GMP241.fca.6.load, <3 x double>** %v2GMP241.fca.6.gep
  %v2GMP241.fca.7.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 7
  store <3 x double>* %v2GMP241.fca.7.load, <3 x double>** %v2GMP241.fca.7.gep
  %v2GMP241.fca.8.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 8
  store <3 x double>* %v2GMP241.fca.8.load, <3 x double>** %v2GMP241.fca.8.gep
  %v2GMP241.fca.9.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 9
  store <3 x double>* %v2GMP241.fca.9.load, <3 x double>** %v2GMP241.fca.9.gep
  %v2GMP241.fca.10.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 10
  store <3 x double>* %v2GMP241.fca.10.load, <3 x double>** %v2GMP241.fca.10.gep
  %v2GMP241.fca.11.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 11
  store <3 x double>* %v2GMP241.fca.11.load, <3 x double>** %v2GMP241.fca.11.gep
  %v2GMP241.fca.12.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 12
  store <3 x double>* %v2GMP241.fca.12.load, <3 x double>** %v2GMP241.fca.12.gep
  %v2GMP241.fca.13.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 13
  store <2 x double>* %v2GMP241.fca.13.load, <2 x double>** %v2GMP241.fca.13.gep
  %v2GMP241.fca.14.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 14
  store <2 x double>* %v2GMP241.fca.14.load, <2 x double>** %v2GMP241.fca.14.gep
  %v2GMP241.fca.15.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 15
  store <2 x double>* %v2GMP241.fca.15.load, <2 x double>** %v2GMP241.fca.15.gep
  %v2GMP241.fca.16.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 16
  store <2 x double>* %v2GMP241.fca.16.load, <2 x double>** %v2GMP241.fca.16.gep
  %v2GMP241.fca.17.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 17
  store <2 x double>* %v2GMP241.fca.17.load, <2 x double>** %v2GMP241.fca.17.gep
  %v2GMP241.fca.18.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 18
  store <2 x double>* %v2GMP241.fca.18.load, <2 x double>** %v2GMP241.fca.18.gep
  %v2GMP241.fca.19.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 19
  store <2 x double>* %v2GMP241.fca.19.load, <2 x double>** %v2GMP241.fca.19.gep
  %v2GMP241.fca.20.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 20
  store <2 x double>* %v2GMP241.fca.20.load, <2 x double>** %v2GMP241.fca.20.gep
  %v2GMP241.fca.21.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 21
  store <2 x double>* %v2GMP241.fca.21.load, <2 x double>** %v2GMP241.fca.21.gep
  %v2GMP241.fca.22.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 22
  store <2 x double>* %v2GMP241.fca.22.load, <2 x double>** %v2GMP241.fca.22.gep
  %v2GMP241.fca.23.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 23
  store <2 x double>* %v2GMP241.fca.23.load, <2 x double>** %v2GMP241.fca.23.gep
  %v2GMP241.fca.24.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 24
  store <2 x double>* %v2GMP241.fca.24.load, <2 x double>** %v2GMP241.fca.24.gep
  %v2GMP241.fca.25.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 25
  store <2 x double>* %v2GMP241.fca.25.load, <2 x double>** %v2GMP241.fca.25.gep
  %v2GMP241.fca.26.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 26
  store <2 x double>* %v2GMP241.fca.26.load, <2 x double>** %v2GMP241.fca.26.gep
  %v2GMP241.fca.27.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 27
  store <2 x double>* %v2GMP241.fca.27.load, <2 x double>** %v2GMP241.fca.27.gep
  %v2GMP241.fca.28.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 28
  store <2 x double>* %v2GMP241.fca.28.load, <2 x double>** %v2GMP241.fca.28.gep
  %v2GMP241.fca.29.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 29
  store <2 x double>* %v2GMP241.fca.29.load, <2 x double>** %v2GMP241.fca.29.gep
  %v2GMP241.fca.30.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 30
  store <2 x double>* %v2GMP241.fca.30.load, <2 x double>** %v2GMP241.fca.30.gep
  %v2GMP241.fca.31.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 31
  store <2 x double>* %v2GMP241.fca.31.load, <2 x double>** %v2GMP241.fca.31.gep
  %v2GMP241.fca.32.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 32
  store <2 x double>* %v2GMP241.fca.32.load, <2 x double>** %v2GMP241.fca.32.gep
  %v2GMP241.fca.33.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 33
  store <2 x double>* %v2GMP241.fca.33.load, <2 x double>** %v2GMP241.fca.33.gep
  %v2GMP241.fca.34.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 34
  store <2 x double>* %v2GMP241.fca.34.load, <2 x double>** %v2GMP241.fca.34.gep
  %v2GMP241.fca.35.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 35
  store <2 x double>* %v2GMP241.fca.35.load, <2 x double>** %v2GMP241.fca.35.gep
  %v2GMP241.fca.36.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 36
  store <2 x double>* %v2GMP241.fca.36.load, <2 x double>** %v2GMP241.fca.36.gep
  %v2GMP241.fca.37.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 37
  store <2 x double>* %v2GMP241.fca.37.load, <2 x double>** %v2GMP241.fca.37.gep
  %v2GMP241.fca.38.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 38
  store <2 x double>* %v2GMP241.fca.38.load, <2 x double>** %v2GMP241.fca.38.gep
  %v2GMP241.fca.39.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 39
  store <2 x double>* %v2GMP241.fca.39.load, <2 x double>** %v2GMP241.fca.39.gep
  %v2GMP241.fca.40.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 40
  store <2 x double>* %v2GMP241.fca.40.load, <2 x double>** %v2GMP241.fca.40.gep
  %v2GMP241.fca.41.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 41
  store <2 x double>* %v2GMP241.fca.41.load, <2 x double>** %v2GMP241.fca.41.gep
  %v2GMP241.fca.42.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 42
  store <4 x double>* %v2GMP241.fca.42.load, <4 x double>** %v2GMP241.fca.42.gep
  %v2GMP241.fca.43.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 43
  store <4 x double>* %v2GMP241.fca.43.load, <4 x double>** %v2GMP241.fca.43.gep
  %v2GMP241.fca.44.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 44
  store <4 x double>* %v2GMP241.fca.44.load, <4 x double>** %v2GMP241.fca.44.gep
  %v2GMP241.fca.45.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 45
  store <4 x double>* %v2GMP241.fca.45.load, <4 x double>** %v2GMP241.fca.45.gep
  %v2GMP241.fca.46.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 46
  store <4 x double>* %v2GMP241.fca.46.load, <4 x double>** %v2GMP241.fca.46.gep
  %v2GMP241.fca.47.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 47
  store <4 x double>* %v2GMP241.fca.47.load, <4 x double>** %v2GMP241.fca.47.gep
  %v2GMP241.fca.48.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 48
  store <4 x double>* %v2GMP241.fca.48.load, <4 x double>** %v2GMP241.fca.48.gep
  %v2GMP241.fca.49.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 49
  store <4 x double>* %v2GMP241.fca.49.load, <4 x double>** %v2GMP241.fca.49.gep
  %v2GMP241.fca.50.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 50
  store <4 x double>* %v2GMP241.fca.50.load, <4 x double>** %v2GMP241.fca.50.gep
  %v2GMP241.fca.51.gep = getelementptr inbounds %gemPrm, %gemPrm* %61, i32 0, i32 51
  store <3 x double>* %v2GMP241.fca.51.load, <3 x double>** %v2GMP241.fca.51.gep
  %idx242 = load i64, i64* %idx
  store i64 %idx242, i64* %62
  %idx244 = load i64, i64* %idx
  %return245 = call i64 @"getcomp@I[II"(i64* %GEM19.fca.3.load, i64 %idx244)
  store i64 %return245, i64* %63
  store i64 %return13, i64* %64
  %mem247 = load <2 x double>, <2 x double>* %mem
  store <2 x double> %mem247, <2 x double>* %65
  %idx249 = load i64, i64* %idx
  %return250 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM19.fca.31.load, i64 %idx249)
  store <2 x double> %return250, <2 x double>* %66
  %idx252 = load i64, i64* %idx
  %return253 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM19.fca.32.load, i64 %idx252)
  store <2 x double> %return253, <2 x double>* %67
  %idx255 = load i64, i64* %idx
  %return256 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM19.fca.33.load, i64 %idx255)
  store <2 x double> %return256, <2 x double>* %68
  %idx258 = load i64, i64* %idx
  %return259 = call double @"getcomp@F[FI"(double* %GEM19.fca.16.load, i64 %idx258)
  store double %return259, double* %69
  %FLAME260 = call <2 x double> @"FLAME@UZ6gemPrmM52N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PN8pc_DISC2[VIIIUUUUF"(%gemPrm* %61, i64* %62, i64* %63, i64* %64, <2 x double>* %65, <2 x double>* %66, <2 x double>* %67, <2 x double>* %68, double* %69)
  %output261 = call <2 x double> @"add@UU"(<2 x double> %tmp240, <2 x double> %FLAME260)
  store <2 x double> %output261, <2 x double>* %tmp
  br label %end239

end239:                                           ; preds = %true238, %end211
  %idx263 = load i64, i64* %idx
  %return264 = call double @"getcomp@F[FI"(double* %GEM19.fca.17.load, i64 %idx263)
  %return265 = fcmp one double %return264, 0.000000e+00
  br i1 %return265, label %true267, label %end268

true267:                                          ; preds = %end239
  %tmp269 = load <2 x double>, <2 x double>* %tmp
  %v3GMP270.fca.0.load = load double*, double** %v3GMP110.fca.0.gep
  %v3GMP270.fca.0.insert = insertvalue %gemPrm undef, double* %v3GMP270.fca.0.load, 0
  %v3GMP270.fca.1.load = load double*, double** %v3GMP110.fca.1.gep
  %v3GMP270.fca.1.insert = insertvalue %gemPrm %v3GMP270.fca.0.insert, double* %v3GMP270.fca.1.load, 1
  %v3GMP270.fca.2.load = load double*, double** %v3GMP110.fca.2.gep
  %v3GMP270.fca.2.insert = insertvalue %gemPrm %v3GMP270.fca.1.insert, double* %v3GMP270.fca.2.load, 2
  %v3GMP270.fca.3.load = load double*, double** %v3GMP110.fca.3.gep
  %v3GMP270.fca.3.insert = insertvalue %gemPrm %v3GMP270.fca.2.insert, double* %v3GMP270.fca.3.load, 3
  %v3GMP270.fca.4.load = load double*, double** %v3GMP110.fca.4.gep
  %v3GMP270.fca.4.insert = insertvalue %gemPrm %v3GMP270.fca.3.insert, double* %v3GMP270.fca.4.load, 4
  %v3GMP270.fca.5.load = load double*, double** %v3GMP110.fca.5.gep
  %v3GMP270.fca.5.insert = insertvalue %gemPrm %v3GMP270.fca.4.insert, double* %v3GMP270.fca.5.load, 5
  %v3GMP270.fca.6.load = load <3 x double>*, <3 x double>** %v3GMP110.fca.6.gep
  %v3GMP270.fca.6.insert = insertvalue %gemPrm %v3GMP270.fca.5.insert, <3 x double>* %v3GMP270.fca.6.load, 6
  %v3GMP270.fca.7.load = load <3 x double>*, <3 x double>** %v3GMP110.fca.7.gep
  %v3GMP270.fca.7.insert = insertvalue %gemPrm %v3GMP270.fca.6.insert, <3 x double>* %v3GMP270.fca.7.load, 7
  %v3GMP270.fca.8.load = load <3 x double>*, <3 x double>** %v3GMP110.fca.8.gep
  %v3GMP270.fca.8.insert = insertvalue %gemPrm %v3GMP270.fca.7.insert, <3 x double>* %v3GMP270.fca.8.load, 8
  %v3GMP270.fca.9.load = load <3 x double>*, <3 x double>** %v3GMP110.fca.9.gep
  %v3GMP270.fca.9.insert = insertvalue %gemPrm %v3GMP270.fca.8.insert, <3 x double>* %v3GMP270.fca.9.load, 9
  %v3GMP270.fca.10.load = load <3 x double>*, <3 x double>** %v3GMP110.fca.10.gep
  %v3GMP270.fca.10.insert = insertvalue %gemPrm %v3GMP270.fca.9.insert, <3 x double>* %v3GMP270.fca.10.load, 10
  %v3GMP270.fca.11.load = load <3 x double>*, <3 x double>** %v3GMP110.fca.11.gep
  %v3GMP270.fca.11.insert = insertvalue %gemPrm %v3GMP270.fca.10.insert, <3 x double>* %v3GMP270.fca.11.load, 11
  %v3GMP270.fca.12.load = load <3 x double>*, <3 x double>** %v3GMP110.fca.12.gep
  %v3GMP270.fca.12.insert = insertvalue %gemPrm %v3GMP270.fca.11.insert, <3 x double>* %v3GMP270.fca.12.load, 12
  %v3GMP270.fca.13.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.13.gep
  %v3GMP270.fca.13.insert = insertvalue %gemPrm %v3GMP270.fca.12.insert, <2 x double>* %v3GMP270.fca.13.load, 13
  %v3GMP270.fca.14.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.14.gep
  %v3GMP270.fca.14.insert = insertvalue %gemPrm %v3GMP270.fca.13.insert, <2 x double>* %v3GMP270.fca.14.load, 14
  %v3GMP270.fca.15.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.15.gep
  %v3GMP270.fca.15.insert = insertvalue %gemPrm %v3GMP270.fca.14.insert, <2 x double>* %v3GMP270.fca.15.load, 15
  %v3GMP270.fca.16.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.16.gep
  %v3GMP270.fca.16.insert = insertvalue %gemPrm %v3GMP270.fca.15.insert, <2 x double>* %v3GMP270.fca.16.load, 16
  %v3GMP270.fca.17.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.17.gep
  %v3GMP270.fca.17.insert = insertvalue %gemPrm %v3GMP270.fca.16.insert, <2 x double>* %v3GMP270.fca.17.load, 17
  %v3GMP270.fca.18.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.18.gep
  %v3GMP270.fca.18.insert = insertvalue %gemPrm %v3GMP270.fca.17.insert, <2 x double>* %v3GMP270.fca.18.load, 18
  %v3GMP270.fca.19.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.19.gep
  %v3GMP270.fca.19.insert = insertvalue %gemPrm %v3GMP270.fca.18.insert, <2 x double>* %v3GMP270.fca.19.load, 19
  %v3GMP270.fca.20.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.20.gep
  %v3GMP270.fca.20.insert = insertvalue %gemPrm %v3GMP270.fca.19.insert, <2 x double>* %v3GMP270.fca.20.load, 20
  %v3GMP270.fca.21.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.21.gep
  %v3GMP270.fca.21.insert = insertvalue %gemPrm %v3GMP270.fca.20.insert, <2 x double>* %v3GMP270.fca.21.load, 21
  %v3GMP270.fca.22.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.22.gep
  %v3GMP270.fca.22.insert = insertvalue %gemPrm %v3GMP270.fca.21.insert, <2 x double>* %v3GMP270.fca.22.load, 22
  %v3GMP270.fca.23.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.23.gep
  %v3GMP270.fca.23.insert = insertvalue %gemPrm %v3GMP270.fca.22.insert, <2 x double>* %v3GMP270.fca.23.load, 23
  %v3GMP270.fca.24.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.24.gep
  %v3GMP270.fca.24.insert = insertvalue %gemPrm %v3GMP270.fca.23.insert, <2 x double>* %v3GMP270.fca.24.load, 24
  %v3GMP270.fca.25.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.25.gep
  %v3GMP270.fca.25.insert = insertvalue %gemPrm %v3GMP270.fca.24.insert, <2 x double>* %v3GMP270.fca.25.load, 25
  %v3GMP270.fca.26.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.26.gep
  %v3GMP270.fca.26.insert = insertvalue %gemPrm %v3GMP270.fca.25.insert, <2 x double>* %v3GMP270.fca.26.load, 26
  %v3GMP270.fca.27.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.27.gep
  %v3GMP270.fca.27.insert = insertvalue %gemPrm %v3GMP270.fca.26.insert, <2 x double>* %v3GMP270.fca.27.load, 27
  %v3GMP270.fca.28.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.28.gep
  %v3GMP270.fca.28.insert = insertvalue %gemPrm %v3GMP270.fca.27.insert, <2 x double>* %v3GMP270.fca.28.load, 28
  %v3GMP270.fca.29.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.29.gep
  %v3GMP270.fca.29.insert = insertvalue %gemPrm %v3GMP270.fca.28.insert, <2 x double>* %v3GMP270.fca.29.load, 29
  %v3GMP270.fca.30.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.30.gep
  %v3GMP270.fca.30.insert = insertvalue %gemPrm %v3GMP270.fca.29.insert, <2 x double>* %v3GMP270.fca.30.load, 30
  %v3GMP270.fca.31.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.31.gep
  %v3GMP270.fca.31.insert = insertvalue %gemPrm %v3GMP270.fca.30.insert, <2 x double>* %v3GMP270.fca.31.load, 31
  %v3GMP270.fca.32.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.32.gep
  %v3GMP270.fca.32.insert = insertvalue %gemPrm %v3GMP270.fca.31.insert, <2 x double>* %v3GMP270.fca.32.load, 32
  %v3GMP270.fca.33.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.33.gep
  %v3GMP270.fca.33.insert = insertvalue %gemPrm %v3GMP270.fca.32.insert, <2 x double>* %v3GMP270.fca.33.load, 33
  %v3GMP270.fca.34.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.34.gep
  %v3GMP270.fca.34.insert = insertvalue %gemPrm %v3GMP270.fca.33.insert, <2 x double>* %v3GMP270.fca.34.load, 34
  %v3GMP270.fca.35.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.35.gep
  %v3GMP270.fca.35.insert = insertvalue %gemPrm %v3GMP270.fca.34.insert, <2 x double>* %v3GMP270.fca.35.load, 35
  %v3GMP270.fca.36.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.36.gep
  %v3GMP270.fca.36.insert = insertvalue %gemPrm %v3GMP270.fca.35.insert, <2 x double>* %v3GMP270.fca.36.load, 36
  %v3GMP270.fca.37.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.37.gep
  %v3GMP270.fca.37.insert = insertvalue %gemPrm %v3GMP270.fca.36.insert, <2 x double>* %v3GMP270.fca.37.load, 37
  %v3GMP270.fca.38.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.38.gep
  %v3GMP270.fca.38.insert = insertvalue %gemPrm %v3GMP270.fca.37.insert, <2 x double>* %v3GMP270.fca.38.load, 38
  %v3GMP270.fca.39.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.39.gep
  %v3GMP270.fca.39.insert = insertvalue %gemPrm %v3GMP270.fca.38.insert, <2 x double>* %v3GMP270.fca.39.load, 39
  %v3GMP270.fca.40.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.40.gep
  %v3GMP270.fca.40.insert = insertvalue %gemPrm %v3GMP270.fca.39.insert, <2 x double>* %v3GMP270.fca.40.load, 40
  %v3GMP270.fca.41.load = load <2 x double>*, <2 x double>** %v3GMP110.fca.41.gep
  %v3GMP270.fca.41.insert = insertvalue %gemPrm %v3GMP270.fca.40.insert, <2 x double>* %v3GMP270.fca.41.load, 41
  %v3GMP270.fca.42.load = load <4 x double>*, <4 x double>** %v3GMP110.fca.42.gep
  %v3GMP270.fca.42.insert = insertvalue %gemPrm %v3GMP270.fca.41.insert, <4 x double>* %v3GMP270.fca.42.load, 42
  %v3GMP270.fca.43.load = load <4 x double>*, <4 x double>** %v3GMP110.fca.43.gep
  %v3GMP270.fca.43.insert = insertvalue %gemPrm %v3GMP270.fca.42.insert, <4 x double>* %v3GMP270.fca.43.load, 43
  %v3GMP270.fca.44.load = load <4 x double>*, <4 x double>** %v3GMP110.fca.44.gep
  %v3GMP270.fca.44.insert = insertvalue %gemPrm %v3GMP270.fca.43.insert, <4 x double>* %v3GMP270.fca.44.load, 44
  %v3GMP270.fca.45.load = load <4 x double>*, <4 x double>** %v3GMP110.fca.45.gep
  %v3GMP270.fca.45.insert = insertvalue %gemPrm %v3GMP270.fca.44.insert, <4 x double>* %v3GMP270.fca.45.load, 45
  %v3GMP270.fca.46.load = load <4 x double>*, <4 x double>** %v3GMP110.fca.46.gep
  %v3GMP270.fca.46.insert = insertvalue %gemPrm %v3GMP270.fca.45.insert, <4 x double>* %v3GMP270.fca.46.load, 46
  %v3GMP270.fca.47.load = load <4 x double>*, <4 x double>** %v3GMP110.fca.47.gep
  %v3GMP270.fca.47.insert = insertvalue %gemPrm %v3GMP270.fca.46.insert, <4 x double>* %v3GMP270.fca.47.load, 47
  %v3GMP270.fca.48.load = load <4 x double>*, <4 x double>** %v3GMP110.fca.48.gep
  %v3GMP270.fca.48.insert = insertvalue %gemPrm %v3GMP270.fca.47.insert, <4 x double>* %v3GMP270.fca.48.load, 48
  %v3GMP270.fca.49.load = load <4 x double>*, <4 x double>** %v3GMP110.fca.49.gep
  %v3GMP270.fca.49.insert = insertvalue %gemPrm %v3GMP270.fca.48.insert, <4 x double>* %v3GMP270.fca.49.load, 49
  %v3GMP270.fca.50.load = load <4 x double>*, <4 x double>** %v3GMP110.fca.50.gep
  %v3GMP270.fca.50.insert = insertvalue %gemPrm %v3GMP270.fca.49.insert, <4 x double>* %v3GMP270.fca.50.load, 50
  %v3GMP270.fca.51.load = load <3 x double>*, <3 x double>** %v3GMP110.fca.51.gep
  %v3GMP270.fca.0.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 0
  store double* %v3GMP270.fca.0.load, double** %v3GMP270.fca.0.gep
  %v3GMP270.fca.1.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 1
  store double* %v3GMP270.fca.1.load, double** %v3GMP270.fca.1.gep
  %v3GMP270.fca.2.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 2
  store double* %v3GMP270.fca.2.load, double** %v3GMP270.fca.2.gep
  %v3GMP270.fca.3.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 3
  store double* %v3GMP270.fca.3.load, double** %v3GMP270.fca.3.gep
  %v3GMP270.fca.4.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 4
  store double* %v3GMP270.fca.4.load, double** %v3GMP270.fca.4.gep
  %v3GMP270.fca.5.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 5
  store double* %v3GMP270.fca.5.load, double** %v3GMP270.fca.5.gep
  %v3GMP270.fca.6.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 6
  store <3 x double>* %v3GMP270.fca.6.load, <3 x double>** %v3GMP270.fca.6.gep
  %v3GMP270.fca.7.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 7
  store <3 x double>* %v3GMP270.fca.7.load, <3 x double>** %v3GMP270.fca.7.gep
  %v3GMP270.fca.8.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 8
  store <3 x double>* %v3GMP270.fca.8.load, <3 x double>** %v3GMP270.fca.8.gep
  %v3GMP270.fca.9.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 9
  store <3 x double>* %v3GMP270.fca.9.load, <3 x double>** %v3GMP270.fca.9.gep
  %v3GMP270.fca.10.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 10
  store <3 x double>* %v3GMP270.fca.10.load, <3 x double>** %v3GMP270.fca.10.gep
  %v3GMP270.fca.11.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 11
  store <3 x double>* %v3GMP270.fca.11.load, <3 x double>** %v3GMP270.fca.11.gep
  %v3GMP270.fca.12.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 12
  store <3 x double>* %v3GMP270.fca.12.load, <3 x double>** %v3GMP270.fca.12.gep
  %v3GMP270.fca.13.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 13
  store <2 x double>* %v3GMP270.fca.13.load, <2 x double>** %v3GMP270.fca.13.gep
  %v3GMP270.fca.14.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 14
  store <2 x double>* %v3GMP270.fca.14.load, <2 x double>** %v3GMP270.fca.14.gep
  %v3GMP270.fca.15.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 15
  store <2 x double>* %v3GMP270.fca.15.load, <2 x double>** %v3GMP270.fca.15.gep
  %v3GMP270.fca.16.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 16
  store <2 x double>* %v3GMP270.fca.16.load, <2 x double>** %v3GMP270.fca.16.gep
  %v3GMP270.fca.17.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 17
  store <2 x double>* %v3GMP270.fca.17.load, <2 x double>** %v3GMP270.fca.17.gep
  %v3GMP270.fca.18.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 18
  store <2 x double>* %v3GMP270.fca.18.load, <2 x double>** %v3GMP270.fca.18.gep
  %v3GMP270.fca.19.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 19
  store <2 x double>* %v3GMP270.fca.19.load, <2 x double>** %v3GMP270.fca.19.gep
  %v3GMP270.fca.20.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 20
  store <2 x double>* %v3GMP270.fca.20.load, <2 x double>** %v3GMP270.fca.20.gep
  %v3GMP270.fca.21.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 21
  store <2 x double>* %v3GMP270.fca.21.load, <2 x double>** %v3GMP270.fca.21.gep
  %v3GMP270.fca.22.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 22
  store <2 x double>* %v3GMP270.fca.22.load, <2 x double>** %v3GMP270.fca.22.gep
  %v3GMP270.fca.23.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 23
  store <2 x double>* %v3GMP270.fca.23.load, <2 x double>** %v3GMP270.fca.23.gep
  %v3GMP270.fca.24.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 24
  store <2 x double>* %v3GMP270.fca.24.load, <2 x double>** %v3GMP270.fca.24.gep
  %v3GMP270.fca.25.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 25
  store <2 x double>* %v3GMP270.fca.25.load, <2 x double>** %v3GMP270.fca.25.gep
  %v3GMP270.fca.26.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 26
  store <2 x double>* %v3GMP270.fca.26.load, <2 x double>** %v3GMP270.fca.26.gep
  %v3GMP270.fca.27.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 27
  store <2 x double>* %v3GMP270.fca.27.load, <2 x double>** %v3GMP270.fca.27.gep
  %v3GMP270.fca.28.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 28
  store <2 x double>* %v3GMP270.fca.28.load, <2 x double>** %v3GMP270.fca.28.gep
  %v3GMP270.fca.29.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 29
  store <2 x double>* %v3GMP270.fca.29.load, <2 x double>** %v3GMP270.fca.29.gep
  %v3GMP270.fca.30.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 30
  store <2 x double>* %v3GMP270.fca.30.load, <2 x double>** %v3GMP270.fca.30.gep
  %v3GMP270.fca.31.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 31
  store <2 x double>* %v3GMP270.fca.31.load, <2 x double>** %v3GMP270.fca.31.gep
  %v3GMP270.fca.32.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 32
  store <2 x double>* %v3GMP270.fca.32.load, <2 x double>** %v3GMP270.fca.32.gep
  %v3GMP270.fca.33.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 33
  store <2 x double>* %v3GMP270.fca.33.load, <2 x double>** %v3GMP270.fca.33.gep
  %v3GMP270.fca.34.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 34
  store <2 x double>* %v3GMP270.fca.34.load, <2 x double>** %v3GMP270.fca.34.gep
  %v3GMP270.fca.35.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 35
  store <2 x double>* %v3GMP270.fca.35.load, <2 x double>** %v3GMP270.fca.35.gep
  %v3GMP270.fca.36.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 36
  store <2 x double>* %v3GMP270.fca.36.load, <2 x double>** %v3GMP270.fca.36.gep
  %v3GMP270.fca.37.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 37
  store <2 x double>* %v3GMP270.fca.37.load, <2 x double>** %v3GMP270.fca.37.gep
  %v3GMP270.fca.38.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 38
  store <2 x double>* %v3GMP270.fca.38.load, <2 x double>** %v3GMP270.fca.38.gep
  %v3GMP270.fca.39.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 39
  store <2 x double>* %v3GMP270.fca.39.load, <2 x double>** %v3GMP270.fca.39.gep
  %v3GMP270.fca.40.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 40
  store <2 x double>* %v3GMP270.fca.40.load, <2 x double>** %v3GMP270.fca.40.gep
  %v3GMP270.fca.41.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 41
  store <2 x double>* %v3GMP270.fca.41.load, <2 x double>** %v3GMP270.fca.41.gep
  %v3GMP270.fca.42.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 42
  store <4 x double>* %v3GMP270.fca.42.load, <4 x double>** %v3GMP270.fca.42.gep
  %v3GMP270.fca.43.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 43
  store <4 x double>* %v3GMP270.fca.43.load, <4 x double>** %v3GMP270.fca.43.gep
  %v3GMP270.fca.44.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 44
  store <4 x double>* %v3GMP270.fca.44.load, <4 x double>** %v3GMP270.fca.44.gep
  %v3GMP270.fca.45.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 45
  store <4 x double>* %v3GMP270.fca.45.load, <4 x double>** %v3GMP270.fca.45.gep
  %v3GMP270.fca.46.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 46
  store <4 x double>* %v3GMP270.fca.46.load, <4 x double>** %v3GMP270.fca.46.gep
  %v3GMP270.fca.47.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 47
  store <4 x double>* %v3GMP270.fca.47.load, <4 x double>** %v3GMP270.fca.47.gep
  %v3GMP270.fca.48.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 48
  store <4 x double>* %v3GMP270.fca.48.load, <4 x double>** %v3GMP270.fca.48.gep
  %v3GMP270.fca.49.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 49
  store <4 x double>* %v3GMP270.fca.49.load, <4 x double>** %v3GMP270.fca.49.gep
  %v3GMP270.fca.50.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 50
  store <4 x double>* %v3GMP270.fca.50.load, <4 x double>** %v3GMP270.fca.50.gep
  %v3GMP270.fca.51.gep = getelementptr inbounds %gemPrm, %gemPrm* %70, i32 0, i32 51
  store <3 x double>* %v3GMP270.fca.51.load, <3 x double>** %v3GMP270.fca.51.gep
  %idx271 = load i64, i64* %idx
  store i64 %idx271, i64* %71
  %idx273 = load i64, i64* %idx
  %return274 = call i64 @"getcomp@I[II"(i64* %GEM19.fca.4.load, i64 %idx273)
  store i64 %return274, i64* %72
  store i64 %return13, i64* %73
  %mem276 = load <2 x double>, <2 x double>* %mem
  store <2 x double> %mem276, <2 x double>* %74
  %idx278 = load i64, i64* %idx
  %return279 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM19.fca.31.load, i64 %idx278)
  store <2 x double> %return279, <2 x double>* %75
  %idx281 = load i64, i64* %idx
  %return282 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM19.fca.32.load, i64 %idx281)
  store <2 x double> %return282, <2 x double>* %76
  %idx284 = load i64, i64* %idx
  %return285 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM19.fca.33.load, i64 %idx284)
  store <2 x double> %return285, <2 x double>* %77
  %idx287 = load i64, i64* %idx
  %return288 = call double @"getcomp@F[FI"(double* %GEM19.fca.17.load, i64 %idx287)
  store double %return288, double* %78
  %FLAME289 = call <2 x double> @"FLAME@UZ6gemPrmM52N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PN8pc_DISC2[VIIIUUUUF"(%gemPrm* %70, i64* %71, i64* %72, i64* %73, <2 x double>* %74, <2 x double>* %75, <2 x double>* %76, <2 x double>* %77, double* %78)
  %output290 = call <2 x double> @"add@UU"(<2 x double> %tmp269, <2 x double> %FLAME289)
  store <2 x double> %output290, <2 x double>* %tmp
  br label %end268

end268:                                           ; preds = %true267, %end239
  %idx292 = load i64, i64* %idx
  %return293 = call double @"getcomp@F[FI"(double* %GEM19.fca.18.load, i64 %idx292)
  %return294 = fcmp one double %return293, 0.000000e+00
  br i1 %return294, label %true296, label %end297

true296:                                          ; preds = %end268
  %tmp298 = load <2 x double>, <2 x double>* %tmp
  %v4GMP299.fca.0.load = load double*, double** %v4GMP111.fca.0.gep
  %v4GMP299.fca.0.insert = insertvalue %gemPrm undef, double* %v4GMP299.fca.0.load, 0
  %v4GMP299.fca.1.load = load double*, double** %v4GMP111.fca.1.gep
  %v4GMP299.fca.1.insert = insertvalue %gemPrm %v4GMP299.fca.0.insert, double* %v4GMP299.fca.1.load, 1
  %v4GMP299.fca.2.load = load double*, double** %v4GMP111.fca.2.gep
  %v4GMP299.fca.2.insert = insertvalue %gemPrm %v4GMP299.fca.1.insert, double* %v4GMP299.fca.2.load, 2
  %v4GMP299.fca.3.load = load double*, double** %v4GMP111.fca.3.gep
  %v4GMP299.fca.3.insert = insertvalue %gemPrm %v4GMP299.fca.2.insert, double* %v4GMP299.fca.3.load, 3
  %v4GMP299.fca.4.load = load double*, double** %v4GMP111.fca.4.gep
  %v4GMP299.fca.4.insert = insertvalue %gemPrm %v4GMP299.fca.3.insert, double* %v4GMP299.fca.4.load, 4
  %v4GMP299.fca.5.load = load double*, double** %v4GMP111.fca.5.gep
  %v4GMP299.fca.5.insert = insertvalue %gemPrm %v4GMP299.fca.4.insert, double* %v4GMP299.fca.5.load, 5
  %v4GMP299.fca.6.load = load <3 x double>*, <3 x double>** %v4GMP111.fca.6.gep
  %v4GMP299.fca.6.insert = insertvalue %gemPrm %v4GMP299.fca.5.insert, <3 x double>* %v4GMP299.fca.6.load, 6
  %v4GMP299.fca.7.load = load <3 x double>*, <3 x double>** %v4GMP111.fca.7.gep
  %v4GMP299.fca.7.insert = insertvalue %gemPrm %v4GMP299.fca.6.insert, <3 x double>* %v4GMP299.fca.7.load, 7
  %v4GMP299.fca.8.load = load <3 x double>*, <3 x double>** %v4GMP111.fca.8.gep
  %v4GMP299.fca.8.insert = insertvalue %gemPrm %v4GMP299.fca.7.insert, <3 x double>* %v4GMP299.fca.8.load, 8
  %v4GMP299.fca.9.load = load <3 x double>*, <3 x double>** %v4GMP111.fca.9.gep
  %v4GMP299.fca.9.insert = insertvalue %gemPrm %v4GMP299.fca.8.insert, <3 x double>* %v4GMP299.fca.9.load, 9
  %v4GMP299.fca.10.load = load <3 x double>*, <3 x double>** %v4GMP111.fca.10.gep
  %v4GMP299.fca.10.insert = insertvalue %gemPrm %v4GMP299.fca.9.insert, <3 x double>* %v4GMP299.fca.10.load, 10
  %v4GMP299.fca.11.load = load <3 x double>*, <3 x double>** %v4GMP111.fca.11.gep
  %v4GMP299.fca.11.insert = insertvalue %gemPrm %v4GMP299.fca.10.insert, <3 x double>* %v4GMP299.fca.11.load, 11
  %v4GMP299.fca.12.load = load <3 x double>*, <3 x double>** %v4GMP111.fca.12.gep
  %v4GMP299.fca.12.insert = insertvalue %gemPrm %v4GMP299.fca.11.insert, <3 x double>* %v4GMP299.fca.12.load, 12
  %v4GMP299.fca.13.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.13.gep
  %v4GMP299.fca.13.insert = insertvalue %gemPrm %v4GMP299.fca.12.insert, <2 x double>* %v4GMP299.fca.13.load, 13
  %v4GMP299.fca.14.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.14.gep
  %v4GMP299.fca.14.insert = insertvalue %gemPrm %v4GMP299.fca.13.insert, <2 x double>* %v4GMP299.fca.14.load, 14
  %v4GMP299.fca.15.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.15.gep
  %v4GMP299.fca.15.insert = insertvalue %gemPrm %v4GMP299.fca.14.insert, <2 x double>* %v4GMP299.fca.15.load, 15
  %v4GMP299.fca.16.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.16.gep
  %v4GMP299.fca.16.insert = insertvalue %gemPrm %v4GMP299.fca.15.insert, <2 x double>* %v4GMP299.fca.16.load, 16
  %v4GMP299.fca.17.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.17.gep
  %v4GMP299.fca.17.insert = insertvalue %gemPrm %v4GMP299.fca.16.insert, <2 x double>* %v4GMP299.fca.17.load, 17
  %v4GMP299.fca.18.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.18.gep
  %v4GMP299.fca.18.insert = insertvalue %gemPrm %v4GMP299.fca.17.insert, <2 x double>* %v4GMP299.fca.18.load, 18
  %v4GMP299.fca.19.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.19.gep
  %v4GMP299.fca.19.insert = insertvalue %gemPrm %v4GMP299.fca.18.insert, <2 x double>* %v4GMP299.fca.19.load, 19
  %v4GMP299.fca.20.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.20.gep
  %v4GMP299.fca.20.insert = insertvalue %gemPrm %v4GMP299.fca.19.insert, <2 x double>* %v4GMP299.fca.20.load, 20
  %v4GMP299.fca.21.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.21.gep
  %v4GMP299.fca.21.insert = insertvalue %gemPrm %v4GMP299.fca.20.insert, <2 x double>* %v4GMP299.fca.21.load, 21
  %v4GMP299.fca.22.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.22.gep
  %v4GMP299.fca.22.insert = insertvalue %gemPrm %v4GMP299.fca.21.insert, <2 x double>* %v4GMP299.fca.22.load, 22
  %v4GMP299.fca.23.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.23.gep
  %v4GMP299.fca.23.insert = insertvalue %gemPrm %v4GMP299.fca.22.insert, <2 x double>* %v4GMP299.fca.23.load, 23
  %v4GMP299.fca.24.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.24.gep
  %v4GMP299.fca.24.insert = insertvalue %gemPrm %v4GMP299.fca.23.insert, <2 x double>* %v4GMP299.fca.24.load, 24
  %v4GMP299.fca.25.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.25.gep
  %v4GMP299.fca.25.insert = insertvalue %gemPrm %v4GMP299.fca.24.insert, <2 x double>* %v4GMP299.fca.25.load, 25
  %v4GMP299.fca.26.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.26.gep
  %v4GMP299.fca.26.insert = insertvalue %gemPrm %v4GMP299.fca.25.insert, <2 x double>* %v4GMP299.fca.26.load, 26
  %v4GMP299.fca.27.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.27.gep
  %v4GMP299.fca.27.insert = insertvalue %gemPrm %v4GMP299.fca.26.insert, <2 x double>* %v4GMP299.fca.27.load, 27
  %v4GMP299.fca.28.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.28.gep
  %v4GMP299.fca.28.insert = insertvalue %gemPrm %v4GMP299.fca.27.insert, <2 x double>* %v4GMP299.fca.28.load, 28
  %v4GMP299.fca.29.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.29.gep
  %v4GMP299.fca.29.insert = insertvalue %gemPrm %v4GMP299.fca.28.insert, <2 x double>* %v4GMP299.fca.29.load, 29
  %v4GMP299.fca.30.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.30.gep
  %v4GMP299.fca.30.insert = insertvalue %gemPrm %v4GMP299.fca.29.insert, <2 x double>* %v4GMP299.fca.30.load, 30
  %v4GMP299.fca.31.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.31.gep
  %v4GMP299.fca.31.insert = insertvalue %gemPrm %v4GMP299.fca.30.insert, <2 x double>* %v4GMP299.fca.31.load, 31
  %v4GMP299.fca.32.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.32.gep
  %v4GMP299.fca.32.insert = insertvalue %gemPrm %v4GMP299.fca.31.insert, <2 x double>* %v4GMP299.fca.32.load, 32
  %v4GMP299.fca.33.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.33.gep
  %v4GMP299.fca.33.insert = insertvalue %gemPrm %v4GMP299.fca.32.insert, <2 x double>* %v4GMP299.fca.33.load, 33
  %v4GMP299.fca.34.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.34.gep
  %v4GMP299.fca.34.insert = insertvalue %gemPrm %v4GMP299.fca.33.insert, <2 x double>* %v4GMP299.fca.34.load, 34
  %v4GMP299.fca.35.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.35.gep
  %v4GMP299.fca.35.insert = insertvalue %gemPrm %v4GMP299.fca.34.insert, <2 x double>* %v4GMP299.fca.35.load, 35
  %v4GMP299.fca.36.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.36.gep
  %v4GMP299.fca.36.insert = insertvalue %gemPrm %v4GMP299.fca.35.insert, <2 x double>* %v4GMP299.fca.36.load, 36
  %v4GMP299.fca.37.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.37.gep
  %v4GMP299.fca.37.insert = insertvalue %gemPrm %v4GMP299.fca.36.insert, <2 x double>* %v4GMP299.fca.37.load, 37
  %v4GMP299.fca.38.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.38.gep
  %v4GMP299.fca.38.insert = insertvalue %gemPrm %v4GMP299.fca.37.insert, <2 x double>* %v4GMP299.fca.38.load, 38
  %v4GMP299.fca.39.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.39.gep
  %v4GMP299.fca.39.insert = insertvalue %gemPrm %v4GMP299.fca.38.insert, <2 x double>* %v4GMP299.fca.39.load, 39
  %v4GMP299.fca.40.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.40.gep
  %v4GMP299.fca.40.insert = insertvalue %gemPrm %v4GMP299.fca.39.insert, <2 x double>* %v4GMP299.fca.40.load, 40
  %v4GMP299.fca.41.load = load <2 x double>*, <2 x double>** %v4GMP111.fca.41.gep
  %v4GMP299.fca.41.insert = insertvalue %gemPrm %v4GMP299.fca.40.insert, <2 x double>* %v4GMP299.fca.41.load, 41
  %v4GMP299.fca.42.load = load <4 x double>*, <4 x double>** %v4GMP111.fca.42.gep
  %v4GMP299.fca.42.insert = insertvalue %gemPrm %v4GMP299.fca.41.insert, <4 x double>* %v4GMP299.fca.42.load, 42
  %v4GMP299.fca.43.load = load <4 x double>*, <4 x double>** %v4GMP111.fca.43.gep
  %v4GMP299.fca.43.insert = insertvalue %gemPrm %v4GMP299.fca.42.insert, <4 x double>* %v4GMP299.fca.43.load, 43
  %v4GMP299.fca.44.load = load <4 x double>*, <4 x double>** %v4GMP111.fca.44.gep
  %v4GMP299.fca.44.insert = insertvalue %gemPrm %v4GMP299.fca.43.insert, <4 x double>* %v4GMP299.fca.44.load, 44
  %v4GMP299.fca.45.load = load <4 x double>*, <4 x double>** %v4GMP111.fca.45.gep
  %v4GMP299.fca.45.insert = insertvalue %gemPrm %v4GMP299.fca.44.insert, <4 x double>* %v4GMP299.fca.45.load, 45
  %v4GMP299.fca.46.load = load <4 x double>*, <4 x double>** %v4GMP111.fca.46.gep
  %v4GMP299.fca.46.insert = insertvalue %gemPrm %v4GMP299.fca.45.insert, <4 x double>* %v4GMP299.fca.46.load, 46
  %v4GMP299.fca.47.load = load <4 x double>*, <4 x double>** %v4GMP111.fca.47.gep
  %v4GMP299.fca.47.insert = insertvalue %gemPrm %v4GMP299.fca.46.insert, <4 x double>* %v4GMP299.fca.47.load, 47
  %v4GMP299.fca.48.load = load <4 x double>*, <4 x double>** %v4GMP111.fca.48.gep
  %v4GMP299.fca.48.insert = insertvalue %gemPrm %v4GMP299.fca.47.insert, <4 x double>* %v4GMP299.fca.48.load, 48
  %v4GMP299.fca.49.load = load <4 x double>*, <4 x double>** %v4GMP111.fca.49.gep
  %v4GMP299.fca.49.insert = insertvalue %gemPrm %v4GMP299.fca.48.insert, <4 x double>* %v4GMP299.fca.49.load, 49
  %v4GMP299.fca.50.load = load <4 x double>*, <4 x double>** %v4GMP111.fca.50.gep
  %v4GMP299.fca.50.insert = insertvalue %gemPrm %v4GMP299.fca.49.insert, <4 x double>* %v4GMP299.fca.50.load, 50
  %v4GMP299.fca.51.load = load <3 x double>*, <3 x double>** %v4GMP111.fca.51.gep
  %v4GMP299.fca.0.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 0
  store double* %v4GMP299.fca.0.load, double** %v4GMP299.fca.0.gep
  %v4GMP299.fca.1.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 1
  store double* %v4GMP299.fca.1.load, double** %v4GMP299.fca.1.gep
  %v4GMP299.fca.2.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 2
  store double* %v4GMP299.fca.2.load, double** %v4GMP299.fca.2.gep
  %v4GMP299.fca.3.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 3
  store double* %v4GMP299.fca.3.load, double** %v4GMP299.fca.3.gep
  %v4GMP299.fca.4.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 4
  store double* %v4GMP299.fca.4.load, double** %v4GMP299.fca.4.gep
  %v4GMP299.fca.5.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 5
  store double* %v4GMP299.fca.5.load, double** %v4GMP299.fca.5.gep
  %v4GMP299.fca.6.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 6
  store <3 x double>* %v4GMP299.fca.6.load, <3 x double>** %v4GMP299.fca.6.gep
  %v4GMP299.fca.7.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 7
  store <3 x double>* %v4GMP299.fca.7.load, <3 x double>** %v4GMP299.fca.7.gep
  %v4GMP299.fca.8.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 8
  store <3 x double>* %v4GMP299.fca.8.load, <3 x double>** %v4GMP299.fca.8.gep
  %v4GMP299.fca.9.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 9
  store <3 x double>* %v4GMP299.fca.9.load, <3 x double>** %v4GMP299.fca.9.gep
  %v4GMP299.fca.10.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 10
  store <3 x double>* %v4GMP299.fca.10.load, <3 x double>** %v4GMP299.fca.10.gep
  %v4GMP299.fca.11.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 11
  store <3 x double>* %v4GMP299.fca.11.load, <3 x double>** %v4GMP299.fca.11.gep
  %v4GMP299.fca.12.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 12
  store <3 x double>* %v4GMP299.fca.12.load, <3 x double>** %v4GMP299.fca.12.gep
  %v4GMP299.fca.13.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 13
  store <2 x double>* %v4GMP299.fca.13.load, <2 x double>** %v4GMP299.fca.13.gep
  %v4GMP299.fca.14.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 14
  store <2 x double>* %v4GMP299.fca.14.load, <2 x double>** %v4GMP299.fca.14.gep
  %v4GMP299.fca.15.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 15
  store <2 x double>* %v4GMP299.fca.15.load, <2 x double>** %v4GMP299.fca.15.gep
  %v4GMP299.fca.16.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 16
  store <2 x double>* %v4GMP299.fca.16.load, <2 x double>** %v4GMP299.fca.16.gep
  %v4GMP299.fca.17.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 17
  store <2 x double>* %v4GMP299.fca.17.load, <2 x double>** %v4GMP299.fca.17.gep
  %v4GMP299.fca.18.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 18
  store <2 x double>* %v4GMP299.fca.18.load, <2 x double>** %v4GMP299.fca.18.gep
  %v4GMP299.fca.19.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 19
  store <2 x double>* %v4GMP299.fca.19.load, <2 x double>** %v4GMP299.fca.19.gep
  %v4GMP299.fca.20.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 20
  store <2 x double>* %v4GMP299.fca.20.load, <2 x double>** %v4GMP299.fca.20.gep
  %v4GMP299.fca.21.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 21
  store <2 x double>* %v4GMP299.fca.21.load, <2 x double>** %v4GMP299.fca.21.gep
  %v4GMP299.fca.22.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 22
  store <2 x double>* %v4GMP299.fca.22.load, <2 x double>** %v4GMP299.fca.22.gep
  %v4GMP299.fca.23.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 23
  store <2 x double>* %v4GMP299.fca.23.load, <2 x double>** %v4GMP299.fca.23.gep
  %v4GMP299.fca.24.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 24
  store <2 x double>* %v4GMP299.fca.24.load, <2 x double>** %v4GMP299.fca.24.gep
  %v4GMP299.fca.25.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 25
  store <2 x double>* %v4GMP299.fca.25.load, <2 x double>** %v4GMP299.fca.25.gep
  %v4GMP299.fca.26.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 26
  store <2 x double>* %v4GMP299.fca.26.load, <2 x double>** %v4GMP299.fca.26.gep
  %v4GMP299.fca.27.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 27
  store <2 x double>* %v4GMP299.fca.27.load, <2 x double>** %v4GMP299.fca.27.gep
  %v4GMP299.fca.28.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 28
  store <2 x double>* %v4GMP299.fca.28.load, <2 x double>** %v4GMP299.fca.28.gep
  %v4GMP299.fca.29.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 29
  store <2 x double>* %v4GMP299.fca.29.load, <2 x double>** %v4GMP299.fca.29.gep
  %v4GMP299.fca.30.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 30
  store <2 x double>* %v4GMP299.fca.30.load, <2 x double>** %v4GMP299.fca.30.gep
  %v4GMP299.fca.31.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 31
  store <2 x double>* %v4GMP299.fca.31.load, <2 x double>** %v4GMP299.fca.31.gep
  %v4GMP299.fca.32.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 32
  store <2 x double>* %v4GMP299.fca.32.load, <2 x double>** %v4GMP299.fca.32.gep
  %v4GMP299.fca.33.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 33
  store <2 x double>* %v4GMP299.fca.33.load, <2 x double>** %v4GMP299.fca.33.gep
  %v4GMP299.fca.34.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 34
  store <2 x double>* %v4GMP299.fca.34.load, <2 x double>** %v4GMP299.fca.34.gep
  %v4GMP299.fca.35.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 35
  store <2 x double>* %v4GMP299.fca.35.load, <2 x double>** %v4GMP299.fca.35.gep
  %v4GMP299.fca.36.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 36
  store <2 x double>* %v4GMP299.fca.36.load, <2 x double>** %v4GMP299.fca.36.gep
  %v4GMP299.fca.37.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 37
  store <2 x double>* %v4GMP299.fca.37.load, <2 x double>** %v4GMP299.fca.37.gep
  %v4GMP299.fca.38.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 38
  store <2 x double>* %v4GMP299.fca.38.load, <2 x double>** %v4GMP299.fca.38.gep
  %v4GMP299.fca.39.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 39
  store <2 x double>* %v4GMP299.fca.39.load, <2 x double>** %v4GMP299.fca.39.gep
  %v4GMP299.fca.40.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 40
  store <2 x double>* %v4GMP299.fca.40.load, <2 x double>** %v4GMP299.fca.40.gep
  %v4GMP299.fca.41.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 41
  store <2 x double>* %v4GMP299.fca.41.load, <2 x double>** %v4GMP299.fca.41.gep
  %v4GMP299.fca.42.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 42
  store <4 x double>* %v4GMP299.fca.42.load, <4 x double>** %v4GMP299.fca.42.gep
  %v4GMP299.fca.43.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 43
  store <4 x double>* %v4GMP299.fca.43.load, <4 x double>** %v4GMP299.fca.43.gep
  %v4GMP299.fca.44.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 44
  store <4 x double>* %v4GMP299.fca.44.load, <4 x double>** %v4GMP299.fca.44.gep
  %v4GMP299.fca.45.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 45
  store <4 x double>* %v4GMP299.fca.45.load, <4 x double>** %v4GMP299.fca.45.gep
  %v4GMP299.fca.46.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 46
  store <4 x double>* %v4GMP299.fca.46.load, <4 x double>** %v4GMP299.fca.46.gep
  %v4GMP299.fca.47.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 47
  store <4 x double>* %v4GMP299.fca.47.load, <4 x double>** %v4GMP299.fca.47.gep
  %v4GMP299.fca.48.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 48
  store <4 x double>* %v4GMP299.fca.48.load, <4 x double>** %v4GMP299.fca.48.gep
  %v4GMP299.fca.49.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 49
  store <4 x double>* %v4GMP299.fca.49.load, <4 x double>** %v4GMP299.fca.49.gep
  %v4GMP299.fca.50.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 50
  store <4 x double>* %v4GMP299.fca.50.load, <4 x double>** %v4GMP299.fca.50.gep
  %v4GMP299.fca.51.gep = getelementptr inbounds %gemPrm, %gemPrm* %79, i32 0, i32 51
  store <3 x double>* %v4GMP299.fca.51.load, <3 x double>** %v4GMP299.fca.51.gep
  %idx300 = load i64, i64* %idx
  store i64 %idx300, i64* %80
  %idx302 = load i64, i64* %idx
  %return303 = call i64 @"getcomp@I[II"(i64* %GEM19.fca.5.load, i64 %idx302)
  store i64 %return303, i64* %81
  store i64 %return13, i64* %82
  %mem305 = load <2 x double>, <2 x double>* %mem
  store <2 x double> %mem305, <2 x double>* %83
  %idx307 = load i64, i64* %idx
  %return308 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM19.fca.31.load, i64 %idx307)
  store <2 x double> %return308, <2 x double>* %84
  %idx310 = load i64, i64* %idx
  %return311 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM19.fca.32.load, i64 %idx310)
  store <2 x double> %return311, <2 x double>* %85
  %idx313 = load i64, i64* %idx
  %return314 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM19.fca.33.load, i64 %idx313)
  store <2 x double> %return314, <2 x double>* %86
  %idx316 = load i64, i64* %idx
  %return317 = call double @"getcomp@F[FI"(double* %GEM19.fca.18.load, i64 %idx316)
  store double %return317, double* %87
  %FLAME318 = call <2 x double> @"FLAME@UZ6gemPrmM52N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PN8pc_DISC2[VIIIUUUUF"(%gemPrm* %79, i64* %80, i64* %81, i64* %82, <2 x double>* %83, <2 x double>* %84, <2 x double>* %85, <2 x double>* %86, double* %87)
  %output319 = call <2 x double> @"add@UU"(<2 x double> %tmp298, <2 x double> %FLAME318)
  store <2 x double> %output319, <2 x double>* %tmp
  br label %end297

end297:                                           ; preds = %true296, %end268
  %idx321 = load i64, i64* %idx
  %return322 = call double @"getcomp@F[FI"(double* %GEM19.fca.22.load, i64 %idx321)
  %return323 = fcmp ogt double %return322, 0.000000e+00
  br i1 %return323, label %true325, label %end326

true325:                                          ; preds = %end297
  %P1GMP327.fca.0.load = load double*, double** %P1GMP112.fca.0.gep
  %P1GMP327.fca.0.insert = insertvalue %gemPrm undef, double* %P1GMP327.fca.0.load, 0
  %P1GMP327.fca.1.load = load double*, double** %P1GMP112.fca.1.gep
  %P1GMP327.fca.1.insert = insertvalue %gemPrm %P1GMP327.fca.0.insert, double* %P1GMP327.fca.1.load, 1
  %P1GMP327.fca.2.load = load double*, double** %P1GMP112.fca.2.gep
  %P1GMP327.fca.2.insert = insertvalue %gemPrm %P1GMP327.fca.1.insert, double* %P1GMP327.fca.2.load, 2
  %P1GMP327.fca.3.load = load double*, double** %P1GMP112.fca.3.gep
  %P1GMP327.fca.3.insert = insertvalue %gemPrm %P1GMP327.fca.2.insert, double* %P1GMP327.fca.3.load, 3
  %P1GMP327.fca.4.load = load double*, double** %P1GMP112.fca.4.gep
  %P1GMP327.fca.4.insert = insertvalue %gemPrm %P1GMP327.fca.3.insert, double* %P1GMP327.fca.4.load, 4
  %P1GMP327.fca.5.load = load double*, double** %P1GMP112.fca.5.gep
  %P1GMP327.fca.5.insert = insertvalue %gemPrm %P1GMP327.fca.4.insert, double* %P1GMP327.fca.5.load, 5
  %P1GMP327.fca.6.load = load <3 x double>*, <3 x double>** %P1GMP112.fca.6.gep
  %P1GMP327.fca.6.insert = insertvalue %gemPrm %P1GMP327.fca.5.insert, <3 x double>* %P1GMP327.fca.6.load, 6
  %P1GMP327.fca.7.load = load <3 x double>*, <3 x double>** %P1GMP112.fca.7.gep
  %P1GMP327.fca.7.insert = insertvalue %gemPrm %P1GMP327.fca.6.insert, <3 x double>* %P1GMP327.fca.7.load, 7
  %P1GMP327.fca.8.load = load <3 x double>*, <3 x double>** %P1GMP112.fca.8.gep
  %P1GMP327.fca.8.insert = insertvalue %gemPrm %P1GMP327.fca.7.insert, <3 x double>* %P1GMP327.fca.8.load, 8
  %P1GMP327.fca.9.load = load <3 x double>*, <3 x double>** %P1GMP112.fca.9.gep
  %P1GMP327.fca.9.insert = insertvalue %gemPrm %P1GMP327.fca.8.insert, <3 x double>* %P1GMP327.fca.9.load, 9
  %P1GMP327.fca.10.load = load <3 x double>*, <3 x double>** %P1GMP112.fca.10.gep
  %P1GMP327.fca.10.insert = insertvalue %gemPrm %P1GMP327.fca.9.insert, <3 x double>* %P1GMP327.fca.10.load, 10
  %P1GMP327.fca.11.load = load <3 x double>*, <3 x double>** %P1GMP112.fca.11.gep
  %P1GMP327.fca.11.insert = insertvalue %gemPrm %P1GMP327.fca.10.insert, <3 x double>* %P1GMP327.fca.11.load, 11
  %P1GMP327.fca.12.load = load <3 x double>*, <3 x double>** %P1GMP112.fca.12.gep
  %P1GMP327.fca.12.insert = insertvalue %gemPrm %P1GMP327.fca.11.insert, <3 x double>* %P1GMP327.fca.12.load, 12
  %P1GMP327.fca.13.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.13.gep
  %P1GMP327.fca.13.insert = insertvalue %gemPrm %P1GMP327.fca.12.insert, <2 x double>* %P1GMP327.fca.13.load, 13
  %P1GMP327.fca.14.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.14.gep
  %P1GMP327.fca.14.insert = insertvalue %gemPrm %P1GMP327.fca.13.insert, <2 x double>* %P1GMP327.fca.14.load, 14
  %P1GMP327.fca.15.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.15.gep
  %P1GMP327.fca.15.insert = insertvalue %gemPrm %P1GMP327.fca.14.insert, <2 x double>* %P1GMP327.fca.15.load, 15
  %P1GMP327.fca.16.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.16.gep
  %P1GMP327.fca.16.insert = insertvalue %gemPrm %P1GMP327.fca.15.insert, <2 x double>* %P1GMP327.fca.16.load, 16
  %P1GMP327.fca.17.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.17.gep
  %P1GMP327.fca.17.insert = insertvalue %gemPrm %P1GMP327.fca.16.insert, <2 x double>* %P1GMP327.fca.17.load, 17
  %P1GMP327.fca.18.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.18.gep
  %P1GMP327.fca.18.insert = insertvalue %gemPrm %P1GMP327.fca.17.insert, <2 x double>* %P1GMP327.fca.18.load, 18
  %P1GMP327.fca.19.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.19.gep
  %P1GMP327.fca.19.insert = insertvalue %gemPrm %P1GMP327.fca.18.insert, <2 x double>* %P1GMP327.fca.19.load, 19
  %P1GMP327.fca.20.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.20.gep
  %P1GMP327.fca.20.insert = insertvalue %gemPrm %P1GMP327.fca.19.insert, <2 x double>* %P1GMP327.fca.20.load, 20
  %P1GMP327.fca.21.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.21.gep
  %P1GMP327.fca.21.insert = insertvalue %gemPrm %P1GMP327.fca.20.insert, <2 x double>* %P1GMP327.fca.21.load, 21
  %P1GMP327.fca.22.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.22.gep
  %P1GMP327.fca.22.insert = insertvalue %gemPrm %P1GMP327.fca.21.insert, <2 x double>* %P1GMP327.fca.22.load, 22
  %P1GMP327.fca.23.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.23.gep
  %P1GMP327.fca.23.insert = insertvalue %gemPrm %P1GMP327.fca.22.insert, <2 x double>* %P1GMP327.fca.23.load, 23
  %P1GMP327.fca.24.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.24.gep
  %P1GMP327.fca.24.insert = insertvalue %gemPrm %P1GMP327.fca.23.insert, <2 x double>* %P1GMP327.fca.24.load, 24
  %P1GMP327.fca.25.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.25.gep
  %P1GMP327.fca.25.insert = insertvalue %gemPrm %P1GMP327.fca.24.insert, <2 x double>* %P1GMP327.fca.25.load, 25
  %P1GMP327.fca.26.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.26.gep
  %P1GMP327.fca.26.insert = insertvalue %gemPrm %P1GMP327.fca.25.insert, <2 x double>* %P1GMP327.fca.26.load, 26
  %P1GMP327.fca.27.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.27.gep
  %P1GMP327.fca.27.insert = insertvalue %gemPrm %P1GMP327.fca.26.insert, <2 x double>* %P1GMP327.fca.27.load, 27
  %P1GMP327.fca.28.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.28.gep
  %P1GMP327.fca.28.insert = insertvalue %gemPrm %P1GMP327.fca.27.insert, <2 x double>* %P1GMP327.fca.28.load, 28
  %P1GMP327.fca.29.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.29.gep
  %P1GMP327.fca.29.insert = insertvalue %gemPrm %P1GMP327.fca.28.insert, <2 x double>* %P1GMP327.fca.29.load, 29
  %P1GMP327.fca.30.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.30.gep
  %P1GMP327.fca.30.insert = insertvalue %gemPrm %P1GMP327.fca.29.insert, <2 x double>* %P1GMP327.fca.30.load, 30
  %P1GMP327.fca.31.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.31.gep
  %P1GMP327.fca.31.insert = insertvalue %gemPrm %P1GMP327.fca.30.insert, <2 x double>* %P1GMP327.fca.31.load, 31
  %P1GMP327.fca.32.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.32.gep
  %P1GMP327.fca.32.insert = insertvalue %gemPrm %P1GMP327.fca.31.insert, <2 x double>* %P1GMP327.fca.32.load, 32
  %P1GMP327.fca.33.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.33.gep
  %P1GMP327.fca.33.insert = insertvalue %gemPrm %P1GMP327.fca.32.insert, <2 x double>* %P1GMP327.fca.33.load, 33
  %P1GMP327.fca.34.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.34.gep
  %P1GMP327.fca.34.insert = insertvalue %gemPrm %P1GMP327.fca.33.insert, <2 x double>* %P1GMP327.fca.34.load, 34
  %P1GMP327.fca.35.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.35.gep
  %P1GMP327.fca.35.insert = insertvalue %gemPrm %P1GMP327.fca.34.insert, <2 x double>* %P1GMP327.fca.35.load, 35
  %P1GMP327.fca.36.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.36.gep
  %P1GMP327.fca.36.insert = insertvalue %gemPrm %P1GMP327.fca.35.insert, <2 x double>* %P1GMP327.fca.36.load, 36
  %P1GMP327.fca.37.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.37.gep
  %P1GMP327.fca.37.insert = insertvalue %gemPrm %P1GMP327.fca.36.insert, <2 x double>* %P1GMP327.fca.37.load, 37
  %P1GMP327.fca.38.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.38.gep
  %P1GMP327.fca.38.insert = insertvalue %gemPrm %P1GMP327.fca.37.insert, <2 x double>* %P1GMP327.fca.38.load, 38
  %P1GMP327.fca.39.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.39.gep
  %P1GMP327.fca.39.insert = insertvalue %gemPrm %P1GMP327.fca.38.insert, <2 x double>* %P1GMP327.fca.39.load, 39
  %P1GMP327.fca.40.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.40.gep
  %P1GMP327.fca.40.insert = insertvalue %gemPrm %P1GMP327.fca.39.insert, <2 x double>* %P1GMP327.fca.40.load, 40
  %P1GMP327.fca.41.load = load <2 x double>*, <2 x double>** %P1GMP112.fca.41.gep
  %P1GMP327.fca.41.insert = insertvalue %gemPrm %P1GMP327.fca.40.insert, <2 x double>* %P1GMP327.fca.41.load, 41
  %P1GMP327.fca.42.load = load <4 x double>*, <4 x double>** %P1GMP112.fca.42.gep
  %P1GMP327.fca.42.insert = insertvalue %gemPrm %P1GMP327.fca.41.insert, <4 x double>* %P1GMP327.fca.42.load, 42
  %P1GMP327.fca.43.load = load <4 x double>*, <4 x double>** %P1GMP112.fca.43.gep
  %P1GMP327.fca.43.insert = insertvalue %gemPrm %P1GMP327.fca.42.insert, <4 x double>* %P1GMP327.fca.43.load, 43
  %P1GMP327.fca.44.load = load <4 x double>*, <4 x double>** %P1GMP112.fca.44.gep
  %P1GMP327.fca.44.insert = insertvalue %gemPrm %P1GMP327.fca.43.insert, <4 x double>* %P1GMP327.fca.44.load, 44
  %P1GMP327.fca.45.load = load <4 x double>*, <4 x double>** %P1GMP112.fca.45.gep
  %P1GMP327.fca.45.insert = insertvalue %gemPrm %P1GMP327.fca.44.insert, <4 x double>* %P1GMP327.fca.45.load, 45
  %P1GMP327.fca.46.load = load <4 x double>*, <4 x double>** %P1GMP112.fca.46.gep
  %P1GMP327.fca.46.insert = insertvalue %gemPrm %P1GMP327.fca.45.insert, <4 x double>* %P1GMP327.fca.46.load, 46
  %P1GMP327.fca.47.load = load <4 x double>*, <4 x double>** %P1GMP112.fca.47.gep
  %P1GMP327.fca.47.insert = insertvalue %gemPrm %P1GMP327.fca.46.insert, <4 x double>* %P1GMP327.fca.47.load, 47
  %P1GMP327.fca.48.load = load <4 x double>*, <4 x double>** %P1GMP112.fca.48.gep
  %P1GMP327.fca.48.insert = insertvalue %gemPrm %P1GMP327.fca.47.insert, <4 x double>* %P1GMP327.fca.48.load, 48
  %P1GMP327.fca.49.load = load <4 x double>*, <4 x double>** %P1GMP112.fca.49.gep
  %P1GMP327.fca.49.insert = insertvalue %gemPrm %P1GMP327.fca.48.insert, <4 x double>* %P1GMP327.fca.49.load, 49
  %P1GMP327.fca.50.load = load <4 x double>*, <4 x double>** %P1GMP112.fca.50.gep
  %P1GMP327.fca.50.insert = insertvalue %gemPrm %P1GMP327.fca.49.insert, <4 x double>* %P1GMP327.fca.50.load, 50
  %P1GMP327.fca.51.load = load <3 x double>*, <3 x double>** %P1GMP112.fca.51.gep
  %P1GMP327.fca.0.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 0
  store double* %P1GMP327.fca.0.load, double** %P1GMP327.fca.0.gep
  %P1GMP327.fca.1.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 1
  store double* %P1GMP327.fca.1.load, double** %P1GMP327.fca.1.gep
  %P1GMP327.fca.2.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 2
  store double* %P1GMP327.fca.2.load, double** %P1GMP327.fca.2.gep
  %P1GMP327.fca.3.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 3
  store double* %P1GMP327.fca.3.load, double** %P1GMP327.fca.3.gep
  %P1GMP327.fca.4.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 4
  store double* %P1GMP327.fca.4.load, double** %P1GMP327.fca.4.gep
  %P1GMP327.fca.5.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 5
  store double* %P1GMP327.fca.5.load, double** %P1GMP327.fca.5.gep
  %P1GMP327.fca.6.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 6
  store <3 x double>* %P1GMP327.fca.6.load, <3 x double>** %P1GMP327.fca.6.gep
  %P1GMP327.fca.7.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 7
  store <3 x double>* %P1GMP327.fca.7.load, <3 x double>** %P1GMP327.fca.7.gep
  %P1GMP327.fca.8.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 8
  store <3 x double>* %P1GMP327.fca.8.load, <3 x double>** %P1GMP327.fca.8.gep
  %P1GMP327.fca.9.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 9
  store <3 x double>* %P1GMP327.fca.9.load, <3 x double>** %P1GMP327.fca.9.gep
  %P1GMP327.fca.10.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 10
  store <3 x double>* %P1GMP327.fca.10.load, <3 x double>** %P1GMP327.fca.10.gep
  %P1GMP327.fca.11.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 11
  store <3 x double>* %P1GMP327.fca.11.load, <3 x double>** %P1GMP327.fca.11.gep
  %P1GMP327.fca.12.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 12
  store <3 x double>* %P1GMP327.fca.12.load, <3 x double>** %P1GMP327.fca.12.gep
  %P1GMP327.fca.13.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 13
  store <2 x double>* %P1GMP327.fca.13.load, <2 x double>** %P1GMP327.fca.13.gep
  %P1GMP327.fca.14.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 14
  store <2 x double>* %P1GMP327.fca.14.load, <2 x double>** %P1GMP327.fca.14.gep
  %P1GMP327.fca.15.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 15
  store <2 x double>* %P1GMP327.fca.15.load, <2 x double>** %P1GMP327.fca.15.gep
  %P1GMP327.fca.16.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 16
  store <2 x double>* %P1GMP327.fca.16.load, <2 x double>** %P1GMP327.fca.16.gep
  %P1GMP327.fca.17.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 17
  store <2 x double>* %P1GMP327.fca.17.load, <2 x double>** %P1GMP327.fca.17.gep
  %P1GMP327.fca.18.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 18
  store <2 x double>* %P1GMP327.fca.18.load, <2 x double>** %P1GMP327.fca.18.gep
  %P1GMP327.fca.19.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 19
  store <2 x double>* %P1GMP327.fca.19.load, <2 x double>** %P1GMP327.fca.19.gep
  %P1GMP327.fca.20.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 20
  store <2 x double>* %P1GMP327.fca.20.load, <2 x double>** %P1GMP327.fca.20.gep
  %P1GMP327.fca.21.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 21
  store <2 x double>* %P1GMP327.fca.21.load, <2 x double>** %P1GMP327.fca.21.gep
  %P1GMP327.fca.22.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 22
  store <2 x double>* %P1GMP327.fca.22.load, <2 x double>** %P1GMP327.fca.22.gep
  %P1GMP327.fca.23.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 23
  store <2 x double>* %P1GMP327.fca.23.load, <2 x double>** %P1GMP327.fca.23.gep
  %P1GMP327.fca.24.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 24
  store <2 x double>* %P1GMP327.fca.24.load, <2 x double>** %P1GMP327.fca.24.gep
  %P1GMP327.fca.25.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 25
  store <2 x double>* %P1GMP327.fca.25.load, <2 x double>** %P1GMP327.fca.25.gep
  %P1GMP327.fca.26.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 26
  store <2 x double>* %P1GMP327.fca.26.load, <2 x double>** %P1GMP327.fca.26.gep
  %P1GMP327.fca.27.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 27
  store <2 x double>* %P1GMP327.fca.27.load, <2 x double>** %P1GMP327.fca.27.gep
  %P1GMP327.fca.28.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 28
  store <2 x double>* %P1GMP327.fca.28.load, <2 x double>** %P1GMP327.fca.28.gep
  %P1GMP327.fca.29.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 29
  store <2 x double>* %P1GMP327.fca.29.load, <2 x double>** %P1GMP327.fca.29.gep
  %P1GMP327.fca.30.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 30
  store <2 x double>* %P1GMP327.fca.30.load, <2 x double>** %P1GMP327.fca.30.gep
  %P1GMP327.fca.31.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 31
  store <2 x double>* %P1GMP327.fca.31.load, <2 x double>** %P1GMP327.fca.31.gep
  %P1GMP327.fca.32.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 32
  store <2 x double>* %P1GMP327.fca.32.load, <2 x double>** %P1GMP327.fca.32.gep
  %P1GMP327.fca.33.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 33
  store <2 x double>* %P1GMP327.fca.33.load, <2 x double>** %P1GMP327.fca.33.gep
  %P1GMP327.fca.34.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 34
  store <2 x double>* %P1GMP327.fca.34.load, <2 x double>** %P1GMP327.fca.34.gep
  %P1GMP327.fca.35.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 35
  store <2 x double>* %P1GMP327.fca.35.load, <2 x double>** %P1GMP327.fca.35.gep
  %P1GMP327.fca.36.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 36
  store <2 x double>* %P1GMP327.fca.36.load, <2 x double>** %P1GMP327.fca.36.gep
  %P1GMP327.fca.37.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 37
  store <2 x double>* %P1GMP327.fca.37.load, <2 x double>** %P1GMP327.fca.37.gep
  %P1GMP327.fca.38.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 38
  store <2 x double>* %P1GMP327.fca.38.load, <2 x double>** %P1GMP327.fca.38.gep
  %P1GMP327.fca.39.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 39
  store <2 x double>* %P1GMP327.fca.39.load, <2 x double>** %P1GMP327.fca.39.gep
  %P1GMP327.fca.40.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 40
  store <2 x double>* %P1GMP327.fca.40.load, <2 x double>** %P1GMP327.fca.40.gep
  %P1GMP327.fca.41.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 41
  store <2 x double>* %P1GMP327.fca.41.load, <2 x double>** %P1GMP327.fca.41.gep
  %P1GMP327.fca.42.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 42
  store <4 x double>* %P1GMP327.fca.42.load, <4 x double>** %P1GMP327.fca.42.gep
  %P1GMP327.fca.43.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 43
  store <4 x double>* %P1GMP327.fca.43.load, <4 x double>** %P1GMP327.fca.43.gep
  %P1GMP327.fca.44.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 44
  store <4 x double>* %P1GMP327.fca.44.load, <4 x double>** %P1GMP327.fca.44.gep
  %P1GMP327.fca.45.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 45
  store <4 x double>* %P1GMP327.fca.45.load, <4 x double>** %P1GMP327.fca.45.gep
  %P1GMP327.fca.46.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 46
  store <4 x double>* %P1GMP327.fca.46.load, <4 x double>** %P1GMP327.fca.46.gep
  %P1GMP327.fca.47.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 47
  store <4 x double>* %P1GMP327.fca.47.load, <4 x double>** %P1GMP327.fca.47.gep
  %P1GMP327.fca.48.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 48
  store <4 x double>* %P1GMP327.fca.48.load, <4 x double>** %P1GMP327.fca.48.gep
  %P1GMP327.fca.49.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 49
  store <4 x double>* %P1GMP327.fca.49.load, <4 x double>** %P1GMP327.fca.49.gep
  %P1GMP327.fca.50.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 50
  store <4 x double>* %P1GMP327.fca.50.load, <4 x double>** %P1GMP327.fca.50.gep
  %P1GMP327.fca.51.gep = getelementptr inbounds %gemPrm, %gemPrm* %88, i32 0, i32 51
  store <3 x double>* %P1GMP327.fca.51.load, <3 x double>** %P1GMP327.fca.51.gep
  %idx328 = load i64, i64* %idx
  store i64 %idx328, i64* %89
  %idx330 = load i64, i64* %idx
  %return331 = call i64 @"getcomp@I[II"(i64* %GEM19.fca.8.load, i64 %idx330)
  store i64 %return331, i64* %90
  store i64 %return13, i64* %91
  %tmp333 = load <2 x double>, <2 x double>* %tmp
  store <2 x double> %tmp333, <2 x double>* %92
  store <2 x double> <double 1.000000e+00, double 0.000000e+00>, <2 x double>* %93
  store <2 x double> <double 0.000000e+00, double 1.000000e+00>, <2 x double>* %94
  store <2 x double> zeroinitializer, <2 x double>* %95
  %idx335 = load i64, i64* %idx
  %return336 = call double @"getcomp@F[FI"(double* %GEM19.fca.22.load, i64 %idx335)
  store double %return336, double* %96
  %FLAME337 = call <2 x double> @"FLAME@UZ6gemPrmM52N10rings2_val[FN13bipolar_shift[FN9cell_size[FN11escher_beta[FN10popcorn2_c[FN11flux_spread[FN4blob[VN3pie[VN10supershape[VN12supershape_n[VN4cpow[VN9lazysusan[VN6bwraps[VN6curl_c[UN8parabola[UN4fan2[UN10rectangles[UN5bent2[UN12lazysusanxyz[UN7modulus[UN8popcorn2[UN10separation[UN17separation_inside[UN5split[UN6splits[UN12waves2_scale[UN11waves2_freq[UN12curve_lenght[UN9curve_amp[UN14polynomial_pow[UN13polynomial_lc[UN13polynomial_sc[UN6julian[UN10juliascope[UN10radialblur[UN5disc2[UN6flower[UN5conic[UN7stripes[UN5whorl[UN5persp[UN11bwrapstwist[UN4ngon[PN5pdj_w[PN6oscope[PN5wedge[PN10wedgejulia[PN8wedgesph[PN5auger[PN9mobius_re[PN9mobius_im[PN8pc_DISC2[VIIIUUUUF"(%gemPrm* %88, i64* %89, i64* %90, i64* %91, <2 x double>* %92, <2 x double>* %93, <2 x double>* %94, <2 x double>* %95, double* %96)
  store <2 x double> %FLAME337, <2 x double>* %tmp
  br label %end326

end326:                                           ; preds = %true325, %end297
  %idx339 = load i64, i64* %idx
  %return340 = call i64 @"getcomp@I[II"(i64* %GEM19.fca.9.load, i64 %idx339)
  %150 = icmp ne i64 %return340, 0
  br i1 %150, label %true341, label %end342

true341:                                          ; preds = %end326
  %return345 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM19.fca.34.load, i64 %idx339)
  store <2 x double> %return345, <2 x double>* %97
  %idx347 = load i64, i64* %idx
  %return348 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM19.fca.35.load, i64 %idx347)
  store <2 x double> %return348, <2 x double>* %98
  %idx350 = load i64, i64* %idx
  %return351 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM19.fca.36.load, i64 %idx350)
  store <2 x double> %return351, <2 x double>* %99
  call void @"affine@UUUU"(<2 x double>* %tmp, <2 x double>* %97, <2 x double>* %98, <2 x double>* %99)
  br label %end342

end342:                                           ; preds = %true341, %end326
  %151 = icmp ne i64 %return, 0
  br i1 %151, label %true353, label %end354

true353:                                          ; preds = %end342
  %tmp355 = load <2 x double>, <2 x double>* %tmp
  %output357 = call <2 x double> @"mul@U2"(<2 x double> %tmp355, <4 x double> %GEM19.fca.43.load)
  store <2 x double> %output357, <2 x double>* %tmp
  br label %end354

end354:                                           ; preds = %true353, %end342
  %idx359 = load i64, i64* %idx
  %return360 = call double @"getcomp@F[FI"(double* %GEM19.fca.23.load, i64 %idx359)
  %return363 = call double @"getcomp@F[FI"(double* %GEM19.fca.24.load, i64 %idx359)
  %output365 = fmul double %return363, %prv_clr.0
  %output366 = fadd double %return360, %output365
  %tmp367 = load <2 x double>, <2 x double>* %tmp
  store <2 x double> %tmp367, <2 x double>* %mem
  %output369 = add i64 %i.0, 1
  br label %cond

true371:                                          ; preds = %end149
  %cast373 = call <2 x double> @"set@UI"(i64 0)
  store <2 x double> %cast373, <2 x double>* %tmp
  %return375 = fcmp one double %GEM19.fca.26.load, 0.000000e+00
  br i1 %return375, label %true377, label %end378

end372:                                           ; preds = %end440, %end149
  %idx446 = load i64, i64* %idx
  %return447 = call double @"getcomp@F[FI"(double* %GEM19.fca.25.load, i64 %idx446)
  store i64 %return5, i64* %100
  %mem449 = load <2 x double>, <2 x double>* %mem
  store <2 x double> %mem449, <2 x double>* %101
  store double %return447, double* %102
  %chkPT = call i64 @"chkPT@IIUF"(i64* %100, <2 x double>* %101, double* %102)
  %152 = icmp ne i64 %chkPT, 0
  br i1 %152, label %true451, label %false452

true377:                                          ; preds = %true371
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @158, i64 0, i64 0), i8** %103
  store i64 %GEM19.fca.10.load, i64* %104
  store i64 %return13, i64* %105
  %mem382 = load <2 x double>, <2 x double>* %mem
  store <2 x double> %mem382, <2 x double>* %106
  store <2 x double> %GEM19.fca.37.load, <2 x double>* %107
  store <2 x double> %GEM19.fca.38.load, <2 x double>* %108
  store <2 x double> %GEM19.fca.39.load, <2 x double>* %109
  store double %GEM19.fca.26.load, double* %110
  %FLAMEFF = call <2 x double> @"FLAMEFF@USIIUUUUF"(i8** %103, i64* %104, i64* %105, <2 x double>* %106, <2 x double>* %107, <2 x double>* %108, <2 x double>* %109, double* %110)
  %output387 = call <2 x double> @"add@UU"(<2 x double> %cast373, <2 x double> %FLAMEFF)
  store <2 x double> %output387, <2 x double>* %tmp
  br label %end378

end378:                                           ; preds = %true377, %true371
  %return389 = fcmp one double %GEM19.fca.27.load, 0.000000e+00
  br i1 %return389, label %true391, label %end392

true391:                                          ; preds = %end378
  %tmp393 = load <2 x double>, <2 x double>* %tmp
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @158, i64 0, i64 0), i8** %111
  store i64 %GEM19.fca.11.load, i64* %112
  store i64 %return13, i64* %113
  %mem396 = load <2 x double>, <2 x double>* %mem
  store <2 x double> %mem396, <2 x double>* %114
  store <2 x double> %GEM19.fca.37.load, <2 x double>* %115
  store <2 x double> %GEM19.fca.38.load, <2 x double>* %116
  store <2 x double> %GEM19.fca.39.load, <2 x double>* %117
  store double %GEM19.fca.27.load, double* %118
  %FLAMEFF401 = call <2 x double> @"FLAMEFF@USIIUUUUF"(i8** %111, i64* %112, i64* %113, <2 x double>* %114, <2 x double>* %115, <2 x double>* %116, <2 x double>* %117, double* %118)
  %output402 = call <2 x double> @"add@UU"(<2 x double> %tmp393, <2 x double> %FLAMEFF401)
  store <2 x double> %output402, <2 x double>* %tmp
  br label %end392

end392:                                           ; preds = %true391, %end378
  %return404 = fcmp one double %GEM19.fca.28.load, 0.000000e+00
  br i1 %return404, label %true406, label %end407

true406:                                          ; preds = %end392
  %tmp408 = load <2 x double>, <2 x double>* %tmp
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @158, i64 0, i64 0), i8** %119
  store i64 %GEM19.fca.12.load, i64* %120
  store i64 %return13, i64* %121
  %mem411 = load <2 x double>, <2 x double>* %mem
  store <2 x double> %mem411, <2 x double>* %122
  store <2 x double> %GEM19.fca.37.load, <2 x double>* %123
  store <2 x double> %GEM19.fca.38.load, <2 x double>* %124
  store <2 x double> %GEM19.fca.39.load, <2 x double>* %125
  store double %GEM19.fca.28.load, double* %126
  %FLAMEFF416 = call <2 x double> @"FLAMEFF@USIIUUUUF"(i8** %119, i64* %120, i64* %121, <2 x double>* %122, <2 x double>* %123, <2 x double>* %124, <2 x double>* %125, double* %126)
  %output417 = call <2 x double> @"add@UU"(<2 x double> %tmp408, <2 x double> %FLAMEFF416)
  store <2 x double> %output417, <2 x double>* %tmp
  br label %end407

end407:                                           ; preds = %true406, %end392
  %return419 = fcmp ogt double %GEM19.fca.29.load, 0.000000e+00
  br i1 %return419, label %true421, label %end422

true421:                                          ; preds = %end407
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @159, i64 0, i64 0), i8** %127
  store i64 %GEM19.fca.13.load, i64* %128
  store i64 %return13, i64* %129
  %tmp425 = load <2 x double>, <2 x double>* %tmp
  store <2 x double> %tmp425, <2 x double>* %130
  store <2 x double> <double 1.000000e+00, double 0.000000e+00>, <2 x double>* %131
  store <2 x double> <double 0.000000e+00, double 1.000000e+00>, <2 x double>* %132
  store <2 x double> zeroinitializer, <2 x double>* %133
  store double %GEM19.fca.29.load, double* %134
  %FLAMEFF427 = call <2 x double> @"FLAMEFF@USIIUUUUF"(i8** %127, i64* %128, i64* %129, <2 x double>* %130, <2 x double>* %131, <2 x double>* %132, <2 x double>* %133, double* %134)
  store <2 x double> %FLAMEFF427, <2 x double>* %tmp
  br label %end422

end422:                                           ; preds = %true421, %end407
  %return429 = fcmp ogt double %GEM19.fca.30.load, 0.000000e+00
  br i1 %return429, label %true431, label %end432

true431:                                          ; preds = %end422
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @159, i64 0, i64 0), i8** %135
  store i64 %GEM19.fca.14.load, i64* %136
  store i64 %return13, i64* %137
  %tmp435 = load <2 x double>, <2 x double>* %tmp
  store <2 x double> %tmp435, <2 x double>* %138
  store <2 x double> <double 1.000000e+00, double 0.000000e+00>, <2 x double>* %139
  store <2 x double> <double 0.000000e+00, double 1.000000e+00>, <2 x double>* %140
  store <2 x double> zeroinitializer, <2 x double>* %141
  store double %GEM19.fca.30.load, double* %142
  %FLAMEFF437 = call <2 x double> @"FLAMEFF@USIIUUUUF"(i8** %135, i64* %136, i64* %137, <2 x double>* %138, <2 x double>* %139, <2 x double>* %140, <2 x double>* %141, double* %142)
  store <2 x double> %FLAMEFF437, <2 x double>* %tmp
  br label %end432

end432:                                           ; preds = %true431, %end422
  %153 = icmp ne i64 %GEM19.fca.0.load, 0
  br i1 %153, label %true439, label %end440

true439:                                          ; preds = %end432
  store <2 x double> %GEM19.fca.40.load, <2 x double>* %143
  store <2 x double> %GEM19.fca.41.load, <2 x double>* %144
  store <2 x double> %GEM19.fca.42.load, <2 x double>* %145
  call void @"affine@UUUU"(<2 x double>* %tmp, <2 x double>* %143, <2 x double>* %144, <2 x double>* %145)
  br label %end440

end440:                                           ; preds = %true439, %end432
  %tmp444 = load <2 x double>, <2 x double>* %tmp
  store <2 x double> %tmp444, <2 x double>* %mem
  br label %end372

true451:                                          ; preds = %end372
  %_bound_ptnum454 = load i64, i64* %_bound_ptnum
  %return455 = call i64 @"removepoint@III"(i64 0, i64 %_bound_ptnum454)
  br label %end453

false452:                                         ; preds = %end372
  %output458 = fmul double 1.000000e-03, %return447
  %154 = icmp ne i64 %return7, 0
  br i1 %154, label %true460, label %end461

end453:                                           ; preds = %end466, %true451
  ret void

true460:                                          ; preds = %false452
  %_bound_SYS462 = load i64*, i64** %_bound_SYS
  %return463 = call i64 @"getcomp@I[II"(i64* %_bound_SYS462, i64 6)
  store i64 %return463, i64* %146
  call void @"V_SYM@UI"(<2 x double>* %mem, i64* %146)
  br label %end461

end461:                                           ; preds = %true460, %false452
  %155 = icmp ne i64 %return9, 0
  br i1 %155, label %true465, label %end466

true465:                                          ; preds = %end461
  %return467 = call double @"detail@FISI"(i64 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @160, i64 0, i64 0), i64 0)
  %output470 = fmul double %output458, %return467
  %_bound_ptnum471 = load i64, i64* %_bound_ptnum
  %return473 = call i64 @"setpointattrib@IISIFS"(i64 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @161, i64 0, i64 0), i64 %_bound_ptnum471, double %return467, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @162, i64 0, i64 0))
  br label %end466

end466:                                           ; preds = %true465, %end461
  %pscl.0 = phi double [ %output470, %true465 ], [ %output458, %end461 ]
  %mem474 = load <2 x double>, <2 x double>* %mem
  %cast475 = call <3 x double> @"set@VU"(<2 x double> %mem474)
  store <3 x double> %cast475, <3 x double>* %_bound_P
  store double %clr.0, double* %_bound_clr
  store double %pscl.0, double* %_bound_pscale
  store double %return447, double* %_bound_Alpha
  br label %end453
}

; Function Attrs: nounwind readnone
declare <2 x double> @"set@UI"(i64) #1

; Function Attrs: nounwind readnone
declare <2 x double> @"add@UU"(<2 x double>, <2 x double>) #1

; Function Attrs: nounwind
declare i64 @"removepoint@III"(i64, i64) #2

; Function Attrs: nounwind
declare double @"detail@FISI"(i64, i8*, i64) #2

; Function Attrs: nounwind
declare i64 @"setpointattrib@IISIFS"(i64, i8*, i64, double, i8*) #2

; Function Attrs: nounwind readnone
declare <3 x double> @"set@VU"(<2 x double>) #1

; Function Attrs: nounwind
define void @FLAM3(i8** %sIDX, i64* %SYS, i64 %ptnum, i64 %XS, double* %IW, double* %XST, double %pscale, double %clr, double %Alpha, <3 x double> %P) #2 {
__llvm_entry:
  %"<pscale>" = alloca double
  %"<clr>" = alloca double
  %"<Alpha>" = alloca double
  %"<P>" = alloca <3 x double>
  %0 = alloca i8**
  %1 = alloca i64*
  %2 = alloca i64
  %3 = alloca i64
  %4 = alloca double*
  %5 = alloca double*
  store double %pscale, double* %"<pscale>"
  store double %clr, double* %"<clr>"
  store double %Alpha, double* %"<Alpha>"
  store <3 x double> %P, <3 x double>* %"<P>"
  store i8** %sIDX, i8*** %0
  store i64* %SYS, i64** %1
  store i64 %ptnum, i64* %2
  store i64 %XS, i64* %3
  store double* %IW, double** %4
  store double* %XST, double** %5
  call void @"_FLAM3@[S[III[F[FFFFV"(i8*** %0, i64** %1, i64* %2, i64* %3, double** %4, double** %5, double* %"<pscale>", double* %"<clr>", double* %"<Alpha>", <3 x double>* %"<P>")
  %gvalue = call i64 @"_export@ISI"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @163, i64 0, i64 0), i64 %ptnum) #4
  %evalue7 = load double, double* %"<pscale>"
  %gvalue8 = call double @"_export@FSF"(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @164, i64 0, i64 0), double %evalue7) #4
  %evalue9 = load double, double* %"<clr>"
  %gvalue10 = call double @"_export@FSF"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @165, i64 0, i64 0), double %evalue9) #4
  %evalue11 = load double, double* %"<Alpha>"
  %gvalue12 = call double @"_export@FSF"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @166, i64 0, i64 0), double %evalue11) #4
  %evalue13 = load <3 x double>, <3 x double>* %"<P>"
  %gvalue14 = call <3 x double> @"_export@VSV"(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @167, i64 0, i64 0), <3 x double> %evalue13) #4
  store i64 %gvalue, i64* @ptnum
  store double %gvalue8, double* @pscale
  store double %gvalue10, double* @clr
  store double %gvalue12, double* @Alpha
  store <3 x double> %gvalue14, <3 x double>* @P
  ret void
}

declare i64 @"_export@ISI"(i8*, i64)

declare double @"_export@FSF"(i8*, double)

declare <3 x double> @"_export@VSV"(i8*, <3 x double>)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @FLAM3(i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @157, i64 0, i64 0), i64* getelementptr inbounds ([0 x i64], [0 x i64]* @48, i64 0, i64 0), i64 0, i64 0, double* getelementptr inbounds ([0 x double], [0 x double]* @49, i64 0, i64 0), double* getelementptr inbounds ([0 x double], [0 x double]* @49, i64 0, i64 0), double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, <3 x double> zeroinitializer)
  ret void
}

attributes #0 = { alwaysinline nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind }
attributes #3 = { alwaysinline }
attributes #4 = { nounwind readonly }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"19.5.435"}
!2 = !{!"64"}
!3 = !{!""}

;_code_end
