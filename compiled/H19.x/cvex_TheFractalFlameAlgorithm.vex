;_name	FLAM3
; ModuleID = 'FLAM3'
source_filename = "FLAM3"

%gemSYSGLB = type { i64, i64, i64, i64, i64 }
%gemSYS = type { i64, i64, double*, double* }
%gem = type { i64, i64, i64*, i64*, i64*, i64*, i64*, i64*, i64*, i64*, i64, i64, i64, i64, i64, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double, double, double, double, double, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>*, <2 x double>, <2 x double>, <2 x double>, <2 x double>, <2 x double>, <2 x double> }

@0 = private constant [8 x i8] c"twister\00"
@1 = private constant [3 x i8] c"FF\00"
@2 = private constant [4 x i8] c"RIP\00"
@3 = private constant [3 x i8] c"MB\00"
@4 = private constant [4 x i8] c"F3C\00"
@5 = private constant [5 x i8] c"ITER\00"
@6 = private constant [4 x i8] c"RES\00"
@7 = private constant [3 x i8] c"IW\00"
@8 = private constant [3 x i8] c"XS\00"
@9 = private constant [4 x i8] c"XST\00"
@10 = private constant [0 x double] zeroinitializer
@11 = private constant [2 x i8] c"A\00"
@12 = private constant [4 x i8] c"CLR\00"
@13 = private constant [3 x i8] c"OM\00"
@14 = private constant [2 x i8] c"X\00"
@15 = private constant [2 x i8] c"Y\00"
@16 = private constant [2 x i8] c"O\00"
@17 = private constant [5 x i8] c"POST\00"
@18 = private constant [3 x i8] c"PX\00"
@19 = private constant [3 x i8] c"PY\00"
@20 = private constant [3 x i8] c"PO\00"
@21 = private constant [4 x i8] c"p1t\00"
@22 = private constant [4 x i8] c"p2t\00"
@23 = private constant [4 x i8] c"v1t\00"
@24 = private constant [4 x i8] c"v2t\00"
@25 = private constant [4 x i8] c"v3t\00"
@26 = private constant [4 x i8] c"v4t\00"
@27 = private constant [4 x i8] c"P1t\00"
@28 = private constant [4 x i8] c"pbw\00"
@29 = private constant [4 x i8] c"p1w\00"
@30 = private constant [4 x i8] c"p2w\00"
@31 = private constant [4 x i8] c"v1w\00"
@32 = private constant [4 x i8] c"v2w\00"
@33 = private constant [4 x i8] c"v3w\00"
@34 = private constant [4 x i8] c"v4w\00"
@35 = private constant [4 x i8] c"P1w\00"
@36 = private constant [3 x i8] c"FX\00"
@37 = private constant [3 x i8] c"FY\00"
@38 = private constant [3 x i8] c"FO\00"
@39 = private constant [4 x i8] c"PFF\00"
@40 = private constant [4 x i8] c"PFX\00"
@41 = private constant [4 x i8] c"PFY\00"
@42 = private constant [4 x i8] c"PFO\00"
@43 = private constant [5 x i8] c"fp1t\00"
@44 = private constant [5 x i8] c"fv1t\00"
@45 = private constant [5 x i8] c"fv2t\00"
@46 = private constant [5 x i8] c"fP1t\00"
@47 = private constant [5 x i8] c"fP2t\00"
@48 = private constant [5 x i8] c"fp1w\00"
@49 = private constant [5 x i8] c"fv1w\00"
@50 = private constant [5 x i8] c"fv2w\00"
@51 = private constant [5 x i8] c"fP1w\00"
@52 = private constant [5 x i8] c"fP2w\00"
@53 = private constant [0 x i64] zeroinitializer
@54 = private constant [0 x <2 x double>] zeroinitializer
@55 = private constant [7 x i8] c"curl_c\00"
@56 = private constant [5 x i8] c"ngon\00"
@57 = private constant [6 x i8] c"pdj_w\00"
@58 = private constant [5 x i8] c"blob\00"
@59 = private constant [7 x i8] c"julian\00"
@60 = private constant [11 x i8] c"juliascope\00"
@61 = private constant [5 x i8] c"fan2\00"
@62 = private constant [11 x i8] c"rings2_val\00"
@63 = private constant [11 x i8] c"rectangles\00"
@64 = private constant [11 x i8] c"radialblur\00"
@65 = private constant [4 x i8] c"pie\00"
@66 = private constant [6 x i8] c"disc2\00"
@67 = private constant [9 x i8] c"pc_DISC2\00"
@68 = private constant [11 x i8] c"supershape\00"
@69 = private constant [13 x i8] c"supershape_n\00"
@70 = private constant [7 x i8] c"flower\00"
@71 = private constant [6 x i8] c"conic\00"
@72 = private constant [9 x i8] c"parabola\00"
@73 = private constant [6 x i8] c"bent2\00"
@74 = private constant [14 x i8] c"bipolar_shift\00"
@75 = private constant [10 x i8] c"cell_size\00"
@76 = private constant [5 x i8] c"cpow\00"
@77 = private constant [12 x i8] c"escher_beta\00"
@78 = private constant [10 x i8] c"lazysusan\00"
@79 = private constant [13 x i8] c"lazysusanxyz\00"
@80 = private constant [8 x i8] c"modulus\00"
@81 = private constant [7 x i8] c"oscope\00"
@82 = private constant [11 x i8] c"popcorn2_c\00"
@83 = private constant [9 x i8] c"popcorn2\00"
@84 = private constant [7 x i8] c"splits\00"
@85 = private constant [11 x i8] c"separation\00"
@86 = private constant [18 x i8] c"separation_inside\00"
@87 = private constant [6 x i8] c"split\00"
@88 = private constant [8 x i8] c"stripes\00"
@89 = private constant [6 x i8] c"wedge\00"
@90 = private constant [11 x i8] c"wedgejulia\00"
@91 = private constant [9 x i8] c"wedgesph\00"
@92 = private constant [6 x i8] c"whorl\00"
@93 = private constant [13 x i8] c"waves2_scale\00"
@94 = private constant [12 x i8] c"waves2_freq\00"
@95 = private constant [6 x i8] c"auger\00"
@96 = private constant [12 x i8] c"flux_spread\00"
@97 = private constant [10 x i8] c"mobius_re\00"
@98 = private constant [10 x i8] c"mobius_im\00"
@99 = private constant [13 x i8] c"curve_lenght\00"
@100 = private constant [10 x i8] c"curve_amp\00"
@101 = private constant [6 x i8] c"persp\00"
@102 = private constant [7 x i8] c"bwraps\00"
@103 = private constant [12 x i8] c"bwrapstwist\00"
@104 = private constant [15 x i8] c"polynomial_pow\00"
@105 = private constant [14 x i8] c"polynomial_lc\00"
@106 = private constant [14 x i8] c"polynomial_sc\00"
@107 = private constant [10 x i8] c"crop_ltrb\00"
@108 = private constant [8 x i8] c"crop_az\00"
@109 = private constant [15 x i8] c"point_symmetry\00"
@110 = private constant [6 x i8] c"curlc\00"
@111 = private constant [5 x i8] c"pdjw\00"
@112 = private constant [10 x i8] c"rings2val\00"
@113 = private constant [12 x i8] c"supershapen\00"
@114 = private constant [8 x i8] c"bent2xy\00"
@115 = private constant [13 x i8] c"bipolarshift\00"
@116 = private constant [9 x i8] c"cellsize\00"
@117 = private constant [11 x i8] c"escherbeta\00"
@118 = private constant [11 x i8] c"modulusXYZ\00"
@119 = private constant [10 x i8] c"popcorn2c\00"
@120 = private constant [12 x i8] c"popcorn2xyz\00"
@121 = private constant [14 x i8] c"separationxyz\00"
@122 = private constant [20 x i8] c"separationinsidexyz\00"
@123 = private constant [9 x i8] c"splitxyz\00"
@124 = private constant [10 x i8] c"splitsxyz\00"
@125 = private constant [15 x i8] c"waves2scalexyz\00"
@126 = private constant [14 x i8] c"waves2freqxyz\00"
@127 = private constant [11 x i8] c"fluxspread\00"
@128 = private constant [9 x i8] c"mobiusre\00"
@129 = private constant [9 x i8] c"mobiusim\00"
@130 = private constant [15 x i8] c"curvexyzlenght\00"
@131 = private constant [12 x i8] c"curvexyzamp\00"
@132 = private constant [14 x i8] c"polynomialpow\00"
@133 = private constant [13 x i8] c"polynomiallc\00"
@134 = private constant [13 x i8] c"polynomialsc\00"
@135 = private constant [9 x i8] c"cropltrb\00"
@136 = private constant [7 x i8] c"cropaz\00"
@137 = private constant [6 x i8] c"ptsym\00"
@138 = private constant [8 x i8] c"../fp1_\00"
@139 = private constant [7 x i8] c"../ff_\00"
@140 = private constant [11 x i8] c"Tstep_mult\00"
@141 = private constant [7 x i8] c"mb_mod\00"
@142 = private constant [4 x i8] c"set\00"
@ptnum = external global i64
@pscale = external global double
@clr = external global double
@Alpha = external global double
@P = external global <3 x double>
@143 = private constant [6 x i8] c"ptnum\00"
@144 = private constant [7 x i8] c"pscale\00"
@145 = private constant [4 x i8] c"clr\00"
@146 = private constant [6 x i8] c"Alpha\00"
@147 = private constant [2 x i8] c"P\00"

; Function Attrs: nounwind readnone
declare double @"div@FF"(double, double) #0

; Function Attrs: alwaysinline nounwind
define private double @"ATAN@FU"(<2 x double>* %p) #1 {
__llvm_entry:
  %p1 = load <2 x double>, <2 x double>* %p
  %return = call double @"getcomp@FUI"(<2 x double> %p1, i64 0)
  %return3 = call double @"getcomp@FUI"(<2 x double> %p1, i64 1)
  %return4 = call double @"atan2@FFF"(double %return, double %return3)
  ret double %return4
}

; Function Attrs: nounwind readnone
declare double @"getcomp@FUI"(<2 x double>, i64) #0

; Function Attrs: nounwind readnone
declare double @"atan2@FFF"(double, double) #0

; Function Attrs: alwaysinline nounwind
define private double @"ATANYX@FU"(<2 x double>* %p) #1 {
__llvm_entry:
  %p1 = load <2 x double>, <2 x double>* %p
  %return = call double @"getcomp@FUI"(<2 x double> %p1, i64 1)
  %return3 = call double @"getcomp@FUI"(<2 x double> %p1, i64 0)
  %return4 = call double @"atan2@FFF"(double %return, double %return3)
  ret double %return4
}

; Function Attrs: alwaysinline nounwind
define private double @"SUMSQ@FU"(<2 x double>* %p) #1 {
__llvm_entry:
  %p1 = load <2 x double>, <2 x double>* %p
  %return = call double @"getcomp@FUI"(<2 x double> %p1, i64 0)
  %output = fmul double %return, %return
  %return5 = call double @"getcomp@FUI"(<2 x double> %p1, i64 1)
  %output8 = fmul double %return5, %return5
  %output9 = fadd double %output, %output8
  ret double %output9
}

; Function Attrs: alwaysinline nounwind
define private double @"SQRT@FU"(<2 x double>* %p) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %p1 = load <2 x double>, <2 x double>* %p
  store <2 x double> %p1, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %return = call double @"sqrt@FF"(double %SUMSQ)
  ret double %return
}

; Function Attrs: nounwind readnone
declare double @"sqrt@FF"(double) #0

; Function Attrs: alwaysinline nounwind
define private double @"SafeTan@FF"(double* %x) #1 {
__llvm_entry:
  %x1 = load double, double* %x
  %return = call double @"neg@FF"(double 8.388607e+06)
  %return2 = call double @"clamp@FFFF"(double %x1, double %return, double 8.388607e+06)
  %return3 = call double @"tan@FF"(double %return2)
  ret double %return3
}

; Function Attrs: nounwind readnone
declare double @"neg@FF"(double) #0

; Function Attrs: nounwind
declare double @"clamp@FFFF"(double, double, double) #2

; Function Attrs: nounwind readnone
declare double @"tan@FF"(double) #0

; Function Attrs: alwaysinline nounwind
define private double @"Zeps@FF"(double* %x) #1 {
__llvm_entry:
  %x1 = load double, double* %x
  %return = fcmp oeq double %x1, 0.000000e+00
  br i1 %return, label %end, label %false

false:                                            ; preds = %__llvm_entry
  br label %end

end:                                              ; preds = %__llvm_entry, %false
  %phi = phi double [ %x1, %false ], [ 0x3CB0000000000000, %__llvm_entry ]
  ret double %phi
}

; Function Attrs: alwaysinline nounwind
define private double @"sgn@FF"(double* %n) #1 {
__llvm_entry:
  %n1 = load double, double* %n
  %return = fcmp olt double %n1, 0.000000e+00
  br i1 %return, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %return3 = call i64 @"neg@II"(i64 1)
  br label %end

false:                                            ; preds = %__llvm_entry
  %return5 = fcmp ogt double %n1, 0.000000e+00
  %. = select i1 %return5, i64 1, i64 0
  br label %end

end:                                              ; preds = %false, %true
  %phi10 = phi i64 [ %return3, %true ], [ %., %false ]
  %cast = sitofp i64 %phi10 to double
  ret double %cast
}

; Function Attrs: nounwind readnone
declare i64 @"neg@II"(i64) #0

; Function Attrs: alwaysinline nounwind
define private double @"fmod@FFF"(double* %a, double* %b) #1 {
__llvm_entry:
  %a1 = load double, double* %a
  %b3 = load double, double* %b
  %output = call double @"div@FF"(double %a1, double %b3)
  %return = call double @"floor@FF"(double %output)
  %output5 = fmul double %return, %b3
  %output6 = fsub double %a1, %output5
  ret double %output6
}

; Function Attrs: nounwind readnone
declare double @"floor@FF"(double) #0

; Function Attrs: alwaysinline nounwind
define private void @"sincos@FFF"(double* %a, double* %sa, double* %ca) #1 {
__llvm_entry:
  %a1 = load double, double* %a
  %return = call double @"sin@FF"(double %a1)
  store double %return, double* %sa
  %a2 = load double, double* %a
  %return3 = call double @"cos@FF"(double %a2)
  store double %return3, double* %ca
  ret void
}

; Function Attrs: nounwind readnone
declare double @"sin@FF"(double) #0

; Function Attrs: nounwind readnone
declare double @"cos@FF"(double) #0

; Function Attrs: alwaysinline nounwind
define private void @"precalc_V_DISC2@VFF"(<3 x double>* %disc2_precalc, double* %rot, double* %twist) #1 {
__llvm_entry:
  %0 = alloca double
  %1 = alloca double
  %2 = alloca double
  %rot1 = load double, double* %rot
  %output = fmul double %rot1, 0x400921FB4D12D84A
  %tmp = load <3 x double>, <3 x double>* %disc2_precalc
  %return = call { double, <3 x double> } @"setcomp@FVFI"(<3 x double> %tmp, double %output, i64 0)
  %output3 = extractvalue { double, <3 x double> } %return, 1
  store <3 x double> %output3, <3 x double>* %disc2_precalc
  %twist4 = load double, double* %twist
  store double %twist4, double* %0
  call void @"sincos@FFF"(double* %0, double* %1, double* %2)
  %arg = load double, double* %1
  %tmp5 = load <3 x double>, <3 x double>* %disc2_precalc
  %return6 = call { double, <3 x double> } @"setcomp@FVFI"(<3 x double> %tmp5, double %arg, i64 1)
  %output8 = extractvalue { double, <3 x double> } %return6, 1
  store <3 x double> %output8, <3 x double>* %disc2_precalc
  %arg9 = load double, double* %2
  %return11 = call { double, <3 x double> } @"setcomp@FVFI"(<3 x double> %output8, double %arg9, i64 2)
  %output13 = extractvalue { double, <3 x double> } %return11, 1
  store <3 x double> %output13, <3 x double>* %disc2_precalc
  %return15 = call double @"getcomp@FVI"(<3 x double> %output13, i64 2)
  %output16 = fsub double %return15, 1.000000e+00
  %return18 = call { double, <3 x double> } @"setcomp@FVFI"(<3 x double> %output13, double %output16, i64 2)
  %output20 = extractvalue { double, <3 x double> } %return18, 1
  store <3 x double> %output20, <3 x double>* %disc2_precalc
  %twist21 = load double, double* %twist
  %return22 = fcmp ogt double %twist21, 0x401921FB4D12D84A
  br i1 %return22, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %output25 = fadd double 1.000000e+00, %twist21
  %output26 = fsub double %output25, 0x401921FB4D12D84A
  %return28 = call double @"getcomp@FVI"(<3 x double> %output20, i64 2)
  %output30 = fmul double %return28, %output26
  %return32 = call { double, <3 x double> } @"setcomp@FVFI"(<3 x double> %output20, double %output30, i64 2)
  %output34 = extractvalue { double, <3 x double> } %return32, 1
  store <3 x double> %output34, <3 x double>* %disc2_precalc
  %return36 = call double @"getcomp@FVI"(<3 x double> %output34, i64 1)
  %output38 = fmul double %return36, %output26
  %return40 = call { double, <3 x double> } @"setcomp@FVFI"(<3 x double> %output34, double %output38, i64 1)
  %output42 = extractvalue { double, <3 x double> } %return40, 1
  store <3 x double> %output42, <3 x double>* %disc2_precalc
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %twist43 = load double, double* %twist
  %return44 = call i64 @"neg@II"(i64 2)
  %cast = sitofp i64 %return44 to double
  %output45 = fmul double %cast, 0x400921FB4D12D84A
  %return46 = fcmp olt double %twist43, %output45
  br i1 %return46, label %true48, label %end49

true48:                                           ; preds = %end
  %output51 = fadd double 1.000000e+00, %twist43
  %output52 = fadd double %output51, 0x401921FB4D12D84A
  %disc2_precalc53 = load <3 x double>, <3 x double>* %disc2_precalc
  %return54 = call double @"getcomp@FVI"(<3 x double> %disc2_precalc53, i64 2)
  %output56 = fmul double %return54, %output52
  %return58 = call { double, <3 x double> } @"setcomp@FVFI"(<3 x double> %disc2_precalc53, double %output56, i64 2)
  %output60 = extractvalue { double, <3 x double> } %return58, 1
  store <3 x double> %output60, <3 x double>* %disc2_precalc
  %return62 = call double @"getcomp@FVI"(<3 x double> %output60, i64 1)
  %output64 = fmul double %return62, %output52
  %return66 = call { double, <3 x double> } @"setcomp@FVFI"(<3 x double> %output60, double %output64, i64 1)
  %output68 = extractvalue { double, <3 x double> } %return66, 1
  store <3 x double> %output68, <3 x double>* %disc2_precalc
  br label %end49

end49:                                            ; preds = %true48, %end
  ret void
}

; Function Attrs: alwaysinline
define private { double, <3 x double> } @"setcomp@FVFI"(<3 x double> %rw11, double %rw22, i64 %rw33) #3 {
__llvm_entry:
  %rw16 = call <3 x double> @"setcomp@VFI"(<3 x double> %rw11, double %rw22, i64 %rw33)
  %mrv = insertvalue { double, <3 x double> } undef, double %rw22, 0
  %mrv9 = insertvalue { double, <3 x double> } %mrv, <3 x double> %rw16, 1
  ret { double, <3 x double> } %mrv9
}

; Function Attrs: nounwind readnone
declare <3 x double> @"setcomp@VFI"(<3 x double>, double, i64) #0

; Function Attrs: nounwind readnone
declare double @"getcomp@FVI"(<3 x double>, i64) #0

; Function Attrs: alwaysinline
define private { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %rw11, double %rw22, i64 %rw33) #3 {
__llvm_entry:
  %rw16 = call <2 x double> @"setcomp@UFI"(<2 x double> %rw11, double %rw22, i64 %rw33)
  %mrv = insertvalue { double, <2 x double> } undef, double %rw22, 0
  %mrv9 = insertvalue { double, <2 x double> } %mrv, <2 x double> %rw16, 1
  ret { double, <2 x double> } %mrv9
}

; Function Attrs: nounwind readnone
declare <2 x double> @"setcomp@UFI"(<2 x double>, double, i64) #0

; Function Attrs: nounwind
declare double @"abs@FF"(double) #2

; Function Attrs: alwaysinline nounwind
define private <2 x double> @"biunit@U"() #1 {
__llvm_entry:
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output = fmul double 2.000000e+00, %return
  %output1 = fsub double %output, 1.000000e+00
  %return2 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output3 = fmul double 2.000000e+00, %return2
  %output4 = fsub double %output3, 1.000000e+00
  %return5 = call <2 x double> @"set@UFF"(double %output1, double %output4)
  ret <2 x double> %return5
}

; Function Attrs: nounwind
declare double @"nrandom@F:S"(i8*) #2

; Function Attrs: nounwind readnone
declare <2 x double> @"set@UFF"(double, double) #0

; Function Attrs: alwaysinline nounwind
define private i64 @"chkPT@IIUF"(i64* %ACTIVE, <2 x double>* %vec, double* %alpha) #1 {
__llvm_entry:
  %ACTIVE1 = load i64, i64* %ACTIVE
  %0 = icmp ne i64 %ACTIVE1, 0
  br i1 %0, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %vec2 = load <2 x double>, <2 x double>* %vec
  %return = call double @"getcomp@FUI"(<2 x double> %vec2, i64 0)
  %return4 = call double @"getcomp@FUI"(<2 x double> %vec2, i64 1)
  %output = fadd double %return, %return4
  %return6 = call i64 @"isfinite@IF"(double %output)
  %return7 = call i64 @"not@II"(i64 %return6)
  %return9 = call i64 @"isnan@IF"(double %output)
  %return10 = call i64 @"or@III"(i64 %return7, i64 %return9)
  %return12 = call double @"length@FU"(<2 x double> %vec2)
  %return13 = fcmp ogt double %return12, 1.000000e+03
  %return14 = zext i1 %return13 to i64
  %return15 = call i64 @"or@III"(i64 %return10, i64 %return14)
  %alpha16 = load double, double* %alpha
  %return17 = fcmp oeq double %alpha16, 0.000000e+00
  %return18 = zext i1 %return17 to i64
  %return19 = call i64 @"or@III"(i64 %return15, i64 %return18)
  %1 = icmp ne i64 %return19, 0
  %. = select i1 %1, i64 1, i64 0
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %merge = phi i64 [ 0, %__llvm_entry ], [ %., %true ]
  ret i64 %merge
}

; Function Attrs: nounwind readnone
declare i64 @"isfinite@IF"(double) #0

; Function Attrs: nounwind readnone
declare i64 @"not@II"(i64) #0

; Function Attrs: nounwind readnone
declare i64 @"isnan@IF"(double) #0

; Function Attrs: nounwind readnone
declare i64 @"or@III"(i64, i64) #0

; Function Attrs: nounwind
declare double @"length@FU"(<2 x double>) #2

; Function Attrs: alwaysinline nounwind
define private void @"affine@UUUU"(<2 x double>* %p, <2 x double>* %x, <2 x double>* %y, <2 x double>* %o) #1 {
__llvm_entry:
  %x1 = load <2 x double>, <2 x double>* %x
  %return = call double @"getcomp@FUI"(<2 x double> %x1, i64 0)
  %p2 = load <2 x double>, <2 x double>* %p
  %return3 = call double @"getcomp@FUI"(<2 x double> %p2, i64 0)
  %output = fmul double %return, %return3
  %y4 = load <2 x double>, <2 x double>* %y
  %return5 = call double @"getcomp@FUI"(<2 x double> %y4, i64 0)
  %return7 = call double @"getcomp@FUI"(<2 x double> %p2, i64 1)
  %output8 = fmul double %return5, %return7
  %output9 = fadd double %output, %output8
  %o10 = load <2 x double>, <2 x double>* %o
  %return11 = call double @"getcomp@FUI"(<2 x double> %o10, i64 0)
  %output12 = fadd double %output9, %return11
  %return14 = call double @"getcomp@FUI"(<2 x double> %x1, i64 1)
  %output17 = fmul double %return14, %return3
  %return19 = call double @"getcomp@FUI"(<2 x double> %y4, i64 1)
  %output22 = fmul double %return19, %return7
  %output23 = fadd double %output17, %output22
  %return25 = call double @"getcomp@FUI"(<2 x double> %o10, i64 1)
  %output26 = fadd double %output23, %return25
  %return27 = call <2 x double> @"set@UFF"(double %output12, double %output26)
  store <2 x double> %return27, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind
declare <4 x double> @"set@2UU"(<2 x double>, <2 x double>) #2

; Function Attrs: nounwind readnone
declare <4 x double> @"rotate@2F"(<4 x double>, double) #0

; Function Attrs: nounwind readnone
declare i64 @"lt@III"(i64, i64) #0

; Function Attrs: nounwind readnone
declare i8* @"getcomp@S[SI"(i8**, i64) #0

; Function Attrs: nounwind
declare i8** @"append@[SS"(i8**, i8*) #2

; Function Attrs: alwaysinline nounwind
define private void @"gemSYSGLBBuild@Z9gemSYSGLBM5N2FFIN3RIPIN2MBIN3F3CIN4ITERI"(%gemSYSGLB* %this) #1 {
__llvm_entry:
  %return = call i64 @"neg@II"(i64 1)
  %return1 = call i64 @"detail@IIS"(i64 %return, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1, i64 0, i64 0))
  %tmp = load %gemSYSGLB, %gemSYSGLB* %this
  %0 = insertvalue %gemSYSGLB %tmp, i64 %return1, 0
  store %gemSYSGLB %0, %gemSYSGLB* %this
  %return3 = call i64 @"detail@IIS"(i64 %return, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @2, i64 0, i64 0))
  %tmp4 = load %gemSYSGLB, %gemSYSGLB* %this
  %1 = insertvalue %gemSYSGLB %tmp4, i64 %return3, 1
  store %gemSYSGLB %1, %gemSYSGLB* %this
  %return6 = call i64 @"detail@IIS"(i64 %return, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @3, i64 0, i64 0))
  %tmp7 = load %gemSYSGLB, %gemSYSGLB* %this
  %2 = insertvalue %gemSYSGLB %tmp7, i64 %return6, 2
  store %gemSYSGLB %2, %gemSYSGLB* %this
  %return9 = call i64 @"detail@IIS"(i64 %return, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @4, i64 0, i64 0))
  %tmp10 = load %gemSYSGLB, %gemSYSGLB* %this
  %3 = insertvalue %gemSYSGLB %tmp10, i64 %return9, 3
  store %gemSYSGLB %3, %gemSYSGLB* %this
  %return12 = call i64 @"detail@IIS"(i64 %return, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @5, i64 0, i64 0))
  %tmp13 = load %gemSYSGLB, %gemSYSGLB* %this
  %4 = insertvalue %gemSYSGLB %tmp13, i64 %return12, 4
  store %gemSYSGLB %4, %gemSYSGLB* %this
  ret void
}

; Function Attrs: nounwind
declare i64 @"detail@IIS"(i64, i8*) #2

; Function Attrs: alwaysinline nounwind
define private %gemSYSGLB @"gemSYSGLB@Z9gemSYSGLBM5N2FFIN3RIPIN2MBIN3F3CIN4ITERIIIIII"(i64* %FF, i64* %RIP, i64* %MB, i64* %F3C, i64* %ITER) #1 {
__llvm_entry:
  %FF1 = load i64, i64* %FF
  %0 = insertvalue %gemSYSGLB undef, i64 %FF1, 0
  %RIP2 = load i64, i64* %RIP
  %1 = insertvalue %gemSYSGLB %0, i64 %RIP2, 1
  %MB4 = load i64, i64* %MB
  %2 = insertvalue %gemSYSGLB %1, i64 %MB4, 2
  %F3C6 = load i64, i64* %F3C
  %3 = insertvalue %gemSYSGLB %2, i64 %F3C6, 3
  %ITER8 = load i64, i64* %ITER
  %4 = insertvalue %gemSYSGLB %3, i64 %ITER8, 4
  ret %gemSYSGLB %4
}

; Function Attrs: alwaysinline nounwind
define private %gemSYSGLB @"gemSYSGLB@Z9gemSYSGLBM5N2FFIN3RIPIN2MBIN3F3CIN4ITERI"() #1 {
__llvm_entry:
  %0 = alloca i64
  %1 = alloca i64
  %2 = alloca i64
  %3 = alloca i64
  %4 = alloca i64
  store i64 0, i64* %4
  store i64 0, i64* %0
  store i64 0, i64* %1
  store i64 0, i64* %2
  store i64 0, i64* %3
  %gemSYSGLB = call %gemSYSGLB @"gemSYSGLB@Z9gemSYSGLBM5N2FFIN3RIPIN2MBIN3F3CIN4ITERIIIIII"(i64* %4, i64* %0, i64* %1, i64* %2, i64* %3)
  ret %gemSYSGLB %gemSYSGLB
}

; Function Attrs: alwaysinline nounwind
define private void @"gemSYSBuild@Z6gemSYSM4N3RESIN2XSIN2IW[FN3XST[F"(%gemSYS* %this) #1 {
__llvm_entry:
  %return = call i64 @"neg@II"(i64 2)
  %return1 = call i64 @"detail@IIS"(i64 %return, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @6, i64 0, i64 0))
  %tmp = load %gemSYS, %gemSYS* %this
  %0 = insertvalue %gemSYS %tmp, i64 %return1, 0
  store %gemSYS %0, %gemSYS* %this
  %return2 = call i64 @"neg@II"(i64 3)
  %return3 = call double* @"detail@[FIS"(i64 %return2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @7, i64 0, i64 0))
  %tmp4 = load %gemSYS, %gemSYS* %this
  %1 = insertvalue %gemSYS %tmp4, double* %return3, 2
  store %gemSYS %1, %gemSYS* %this
  %return6 = call i64 @"detail@IIS"(i64 %return2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @8, i64 0, i64 0))
  %tmp7 = load %gemSYS, %gemSYS* %this
  %2 = insertvalue %gemSYS %tmp7, i64 %return6, 1
  store %gemSYS %2, %gemSYS* %this
  %return9 = call double* @"detail@[FIS"(i64 %return2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @9, i64 0, i64 0))
  %tmp10 = load %gemSYS, %gemSYS* %this
  %3 = insertvalue %gemSYS %tmp10, double* %return9, 3
  store %gemSYS %3, %gemSYS* %this
  ret void
}

; Function Attrs: nounwind
declare double* @"detail@[FIS"(i64, i8*) #2

; Function Attrs: alwaysinline nounwind
define private %gemSYS @"gemSYS@Z6gemSYSM4N3RESIN2XSIN2IW[FN3XST[FII[F[F"(i64* %RES, i64* %XS, double** %IW, double** %XST) #1 {
__llvm_entry:
  %RES1 = load i64, i64* %RES
  %0 = insertvalue %gemSYS undef, i64 %RES1, 0
  %XS2 = load i64, i64* %XS
  %1 = insertvalue %gemSYS %0, i64 %XS2, 1
  %IW4 = load double*, double** %IW
  %2 = insertvalue %gemSYS %1, double* %IW4, 2
  %XST6 = load double*, double** %XST
  %3 = insertvalue %gemSYS %2, double* %XST6, 3
  ret %gemSYS %3
}

; Function Attrs: alwaysinline nounwind
define private %gemSYS @"gemSYS@Z6gemSYSM4N3RESIN2XSIN2IW[FN3XST[F"() #1 {
__llvm_entry:
  %0 = alloca i64
  %1 = alloca double*
  %2 = alloca double*
  %3 = alloca i64
  store i64 0, i64* %3
  store i64 0, i64* %0
  store double* getelementptr inbounds ([0 x double], [0 x double]* @10, i64 0, i64 0), double** %1
  store double* getelementptr inbounds ([0 x double], [0 x double]* @10, i64 0, i64 0), double** %2
  %gemSYS = call %gemSYS @"gemSYS@Z6gemSYSM4N3RESIN2XSIN2IW[FN3XST[FII[F[F"(i64* %3, i64* %0, double** %1, double** %2)
  ret %gemSYS %gemSYS
}

; Function Attrs: alwaysinline nounwind
define private void @"gemBuild@Z3gemM43N3PFFIN3resIN3v1t[IN3v2t[IN3v3t[IN3v4t[IN3p1t[IN3p2t[IN3P1t[IN3PPL[IN4fp1tIN4fv1tIN4fv2tIN4fP1tIN4fP2tIN3v1w[FN3v2w[FN3v3w[FN3v4w[FN3pbw[FN3p1w[FN3p2w[FN3P1w[FN3CLR[FN2OM[FN1A[FN4fp1wFN4fv1wFN4fv2wFN4fP1wFN4fP2wFN1x[UN1y[UN1o[UN2px[UN2py[UN2po[UN2fxUN2fyUN2foUN3pfxUN3pfyUN3pfoUI"(%gem* %this, i64* %FF) #1 {
__llvm_entry:
  %return = call i64 @"neg@II"(i64 2)
  %return1 = call i64 @"detail@IIS"(i64 %return, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @6, i64 0, i64 0))
  %tmp = load %gem, %gem* %this
  %0 = insertvalue %gem %tmp, i64 %return1, 1
  store %gem %0, %gem* %this
  %return2 = call i64 @"neg@II"(i64 4)
  %return3 = call double* @"detail@[FIS"(i64 %return2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i64 0, i64 0))
  %tmp4 = load %gem, %gem* %this
  %1 = insertvalue %gem %tmp4, double* %return3, 25
  store %gem %1, %gem* %this
  %return6 = call double* @"detail@[FIS"(i64 %return2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @12, i64 0, i64 0))
  %tmp7 = load %gem, %gem* %this
  %2 = insertvalue %gem %tmp7, double* %return6, 23
  store %gem %2, %gem* %this
  %return9 = call double* @"detail@[FIS"(i64 %return2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @13, i64 0, i64 0))
  %tmp10 = load %gem, %gem* %this
  %3 = insertvalue %gem %tmp10, double* %return9, 24
  store %gem %3, %gem* %this
  %return11 = call i64 @"neg@II"(i64 8)
  %return12 = call <2 x double>* @"detail@[UIS"(i64 %return11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @14, i64 0, i64 0))
  %tmp13 = load %gem, %gem* %this
  %4 = insertvalue %gem %tmp13, <2 x double>* %return12, 31
  store %gem %4, %gem* %this
  %return15 = call <2 x double>* @"detail@[UIS"(i64 %return11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @15, i64 0, i64 0))
  %tmp16 = load %gem, %gem* %this
  %5 = insertvalue %gem %tmp16, <2 x double>* %return15, 32
  store %gem %5, %gem* %this
  %return18 = call <2 x double>* @"detail@[UIS"(i64 %return11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @16, i64 0, i64 0))
  %tmp19 = load %gem, %gem* %this
  %6 = insertvalue %gem %tmp19, <2 x double>* %return18, 33
  store %gem %6, %gem* %this
  %return20 = call i64 @"neg@II"(i64 9)
  %return21 = call i64* @"detail@[IIS"(i64 %return20, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @17, i64 0, i64 0))
  %tmp22 = load %gem, %gem* %this
  %7 = insertvalue %gem %tmp22, i64* %return21, 9
  store %gem %7, %gem* %this
  %return24 = call <2 x double>* @"detail@[UIS"(i64 %return20, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @18, i64 0, i64 0))
  %tmp25 = load %gem, %gem* %this
  %8 = insertvalue %gem %tmp25, <2 x double>* %return24, 34
  store %gem %8, %gem* %this
  %return27 = call <2 x double>* @"detail@[UIS"(i64 %return20, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @19, i64 0, i64 0))
  %tmp28 = load %gem, %gem* %this
  %9 = insertvalue %gem %tmp28, <2 x double>* %return27, 35
  store %gem %9, %gem* %this
  %return30 = call <2 x double>* @"detail@[UIS"(i64 %return20, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @20, i64 0, i64 0))
  %tmp31 = load %gem, %gem* %this
  %10 = insertvalue %gem %tmp31, <2 x double>* %return30, 36
  store %gem %10, %gem* %this
  %return32 = call i64 @"neg@II"(i64 5)
  %return33 = call i64* @"detail@[IIS"(i64 %return32, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @21, i64 0, i64 0))
  %tmp34 = load %gem, %gem* %this
  %11 = insertvalue %gem %tmp34, i64* %return33, 6
  store %gem %11, %gem* %this
  %return36 = call i64* @"detail@[IIS"(i64 %return32, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @22, i64 0, i64 0))
  %tmp37 = load %gem, %gem* %this
  %12 = insertvalue %gem %tmp37, i64* %return36, 7
  store %gem %12, %gem* %this
  %return38 = call i64 @"neg@II"(i64 6)
  %return39 = call i64* @"detail@[IIS"(i64 %return38, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @23, i64 0, i64 0))
  %tmp40 = load %gem, %gem* %this
  %13 = insertvalue %gem %tmp40, i64* %return39, 2
  store %gem %13, %gem* %this
  %return42 = call i64* @"detail@[IIS"(i64 %return38, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @24, i64 0, i64 0))
  %tmp43 = load %gem, %gem* %this
  %14 = insertvalue %gem %tmp43, i64* %return42, 3
  store %gem %14, %gem* %this
  %return45 = call i64* @"detail@[IIS"(i64 %return38, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @25, i64 0, i64 0))
  %tmp46 = load %gem, %gem* %this
  %15 = insertvalue %gem %tmp46, i64* %return45, 4
  store %gem %15, %gem* %this
  %return48 = call i64* @"detail@[IIS"(i64 %return38, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @26, i64 0, i64 0))
  %tmp49 = load %gem, %gem* %this
  %16 = insertvalue %gem %tmp49, i64* %return48, 5
  store %gem %16, %gem* %this
  %return51 = call i64* @"detail@[IIS"(i64 %return32, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @27, i64 0, i64 0))
  %tmp52 = load %gem, %gem* %this
  %17 = insertvalue %gem %tmp52, i64* %return51, 8
  store %gem %17, %gem* %this
  %return54 = call double* @"detail@[FIS"(i64 %return32, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @28, i64 0, i64 0))
  %tmp55 = load %gem, %gem* %this
  %18 = insertvalue %gem %tmp55, double* %return54, 19
  store %gem %18, %gem* %this
  %return57 = call double* @"detail@[FIS"(i64 %return32, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @29, i64 0, i64 0))
  %tmp58 = load %gem, %gem* %this
  %19 = insertvalue %gem %tmp58, double* %return57, 20
  store %gem %19, %gem* %this
  %return60 = call double* @"detail@[FIS"(i64 %return32, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @30, i64 0, i64 0))
  %tmp61 = load %gem, %gem* %this
  %20 = insertvalue %gem %tmp61, double* %return60, 21
  store %gem %20, %gem* %this
  %return63 = call double* @"detail@[FIS"(i64 %return38, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @31, i64 0, i64 0))
  %tmp64 = load %gem, %gem* %this
  %21 = insertvalue %gem %tmp64, double* %return63, 15
  store %gem %21, %gem* %this
  %return66 = call double* @"detail@[FIS"(i64 %return38, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @32, i64 0, i64 0))
  %tmp67 = load %gem, %gem* %this
  %22 = insertvalue %gem %tmp67, double* %return66, 16
  store %gem %22, %gem* %this
  %return69 = call double* @"detail@[FIS"(i64 %return38, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @33, i64 0, i64 0))
  %tmp70 = load %gem, %gem* %this
  %23 = insertvalue %gem %tmp70, double* %return69, 17
  store %gem %23, %gem* %this
  %return72 = call double* @"detail@[FIS"(i64 %return38, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @34, i64 0, i64 0))
  %tmp73 = load %gem, %gem* %this
  %24 = insertvalue %gem %tmp73, double* %return72, 18
  store %gem %24, %gem* %this
  %return75 = call double* @"detail@[FIS"(i64 %return32, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @35, i64 0, i64 0))
  %tmp76 = load %gem, %gem* %this
  %25 = insertvalue %gem %tmp76, double* %return75, 22
  store %gem %25, %gem* %this
  %FF77 = load i64, i64* %FF
  %26 = icmp ne i64 %FF77, 0
  br i1 %26, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %return78 = call i64 @"neg@II"(i64 13)
  %return79 = call <2 x double> @"detail@UIS"(i64 %return78, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @36, i64 0, i64 0))
  %tmp80 = load %gem, %gem* %this
  %27 = insertvalue %gem %tmp80, <2 x double> %return79, 37
  store %gem %27, %gem* %this
  %return82 = call <2 x double> @"detail@UIS"(i64 %return78, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @37, i64 0, i64 0))
  %tmp83 = load %gem, %gem* %this
  %28 = insertvalue %gem %tmp83, <2 x double> %return82, 38
  store %gem %28, %gem* %this
  %return85 = call <2 x double> @"detail@UIS"(i64 %return78, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @38, i64 0, i64 0))
  %tmp86 = load %gem, %gem* %this
  %29 = insertvalue %gem %tmp86, <2 x double> %return85, 39
  store %gem %29, %gem* %this
  %return87 = call i64 @"neg@II"(i64 14)
  %return88 = call i64 @"detail@IIS"(i64 %return87, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @39, i64 0, i64 0))
  %tmp89 = load %gem, %gem* %this
  %30 = insertvalue %gem %tmp89, i64 %return88, 0
  store %gem %30, %gem* %this
  %return91 = call <2 x double> @"detail@UIS"(i64 %return87, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @40, i64 0, i64 0))
  %tmp92 = load %gem, %gem* %this
  %31 = insertvalue %gem %tmp92, <2 x double> %return91, 40
  store %gem %31, %gem* %this
  %return94 = call <2 x double> @"detail@UIS"(i64 %return87, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @41, i64 0, i64 0))
  %tmp95 = load %gem, %gem* %this
  %32 = insertvalue %gem %tmp95, <2 x double> %return94, 41
  store %gem %32, %gem* %this
  %return97 = call <2 x double> @"detail@UIS"(i64 %return87, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @42, i64 0, i64 0))
  %tmp98 = load %gem, %gem* %this
  %33 = insertvalue %gem %tmp98, <2 x double> %return97, 42
  store %gem %33, %gem* %this
  %return99 = call i64 @"neg@II"(i64 10)
  %return100 = call i64 @"detail@IIS"(i64 %return99, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @43, i64 0, i64 0))
  %tmp101 = load %gem, %gem* %this
  %34 = insertvalue %gem %tmp101, i64 %return100, 10
  store %gem %34, %gem* %this
  %return102 = call i64 @"neg@II"(i64 11)
  %return103 = call i64 @"detail@IIS"(i64 %return102, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @44, i64 0, i64 0))
  %tmp104 = load %gem, %gem* %this
  %35 = insertvalue %gem %tmp104, i64 %return103, 11
  store %gem %35, %gem* %this
  %return106 = call i64 @"detail@IIS"(i64 %return102, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @45, i64 0, i64 0))
  %tmp107 = load %gem, %gem* %this
  %36 = insertvalue %gem %tmp107, i64 %return106, 12
  store %gem %36, %gem* %this
  %return108 = call i64 @"neg@II"(i64 12)
  %return109 = call i64 @"detail@IIS"(i64 %return108, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @46, i64 0, i64 0))
  %tmp110 = load %gem, %gem* %this
  %37 = insertvalue %gem %tmp110, i64 %return109, 13
  store %gem %37, %gem* %this
  %return112 = call i64 @"detail@IIS"(i64 %return108, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @47, i64 0, i64 0))
  %tmp113 = load %gem, %gem* %this
  %38 = insertvalue %gem %tmp113, i64 %return112, 14
  store %gem %38, %gem* %this
  %return115 = call double @"detail@FIS"(i64 %return99, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @48, i64 0, i64 0))
  %tmp116 = load %gem, %gem* %this
  %39 = insertvalue %gem %tmp116, double %return115, 26
  store %gem %39, %gem* %this
  %return118 = call double @"detail@FIS"(i64 %return102, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @49, i64 0, i64 0))
  %tmp119 = load %gem, %gem* %this
  %40 = insertvalue %gem %tmp119, double %return118, 27
  store %gem %40, %gem* %this
  %return121 = call double @"detail@FIS"(i64 %return102, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @50, i64 0, i64 0))
  %tmp122 = load %gem, %gem* %this
  %41 = insertvalue %gem %tmp122, double %return121, 28
  store %gem %41, %gem* %this
  %return124 = call double @"detail@FIS"(i64 %return108, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @51, i64 0, i64 0))
  %tmp125 = load %gem, %gem* %this
  %42 = insertvalue %gem %tmp125, double %return124, 29
  store %gem %42, %gem* %this
  %return127 = call double @"detail@FIS"(i64 %return108, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @52, i64 0, i64 0))
  %tmp128 = load %gem, %gem* %this
  %43 = insertvalue %gem %tmp128, double %return127, 30
  store %gem %43, %gem* %this
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  ret void
}

; Function Attrs: nounwind
declare <2 x double>* @"detail@[UIS"(i64, i8*) #2

; Function Attrs: nounwind
declare i64* @"detail@[IIS"(i64, i8*) #2

; Function Attrs: nounwind
declare <2 x double> @"detail@UIS"(i64, i8*) #2

; Function Attrs: nounwind
declare double @"detail@FIS"(i64, i8*) #2

; Function Attrs: alwaysinline nounwind
define private %gem @"gem@Z3gemM43N3PFFIN3resIN3v1t[IN3v2t[IN3v3t[IN3v4t[IN3p1t[IN3p2t[IN3P1t[IN3PPL[IN4fp1tIN4fv1tIN4fv2tIN4fP1tIN4fP2tIN3v1w[FN3v2w[FN3v3w[FN3v4w[FN3pbw[FN3p1w[FN3p2w[FN3P1w[FN3CLR[FN2OM[FN1A[FN4fp1wFN4fv1wFN4fv2wFN4fP1wFN4fP2wFN1x[UN1y[UN1o[UN2px[UN2py[UN2po[UN2fxUN2fyUN2foUN3pfxUN3pfyUN3pfoUII[I[I[I[I[I[I[I[IIIIII[F[F[F[F[F[F[F[F[F[F[FFFFFF[U[U[U[U[U[UUUUUUU"(i64* %PFF, i64* %res, i64** %v1t, i64** %v2t, i64** %v3t, i64** %v4t, i64** %p1t, i64** %p2t, i64** %P1t, i64** %PPL, i64* %fp1t, i64* %fv1t, i64* %fv2t, i64* %fP1t, i64* %fP2t, double** %v1w, double** %v2w, double** %v3w, double** %v4w, double** %pbw, double** %p1w, double** %p2w, double** %P1w, double** %CLR, double** %OM, double** %A, double* %fp1w, double* %fv1w, double* %fv2w, double* %fP1w, double* %fP2w, <2 x double>** %x, <2 x double>** %y, <2 x double>** %o, <2 x double>** %px, <2 x double>** %py, <2 x double>** %po, <2 x double>* %fx, <2 x double>* %fy, <2 x double>* %fo, <2 x double>* %pfx, <2 x double>* %pfy, <2 x double>* %pfo) #1 {
__llvm_entry:
  %PFF1 = load i64, i64* %PFF
  %0 = insertvalue %gem undef, i64 %PFF1, 0
  %res2 = load i64, i64* %res
  %1 = insertvalue %gem %0, i64 %res2, 1
  %v1t4 = load i64*, i64** %v1t
  %2 = insertvalue %gem %1, i64* %v1t4, 2
  %v2t6 = load i64*, i64** %v2t
  %3 = insertvalue %gem %2, i64* %v2t6, 3
  %v3t8 = load i64*, i64** %v3t
  %4 = insertvalue %gem %3, i64* %v3t8, 4
  %v4t10 = load i64*, i64** %v4t
  %5 = insertvalue %gem %4, i64* %v4t10, 5
  %p1t12 = load i64*, i64** %p1t
  %6 = insertvalue %gem %5, i64* %p1t12, 6
  %p2t14 = load i64*, i64** %p2t
  %7 = insertvalue %gem %6, i64* %p2t14, 7
  %P1t16 = load i64*, i64** %P1t
  %8 = insertvalue %gem %7, i64* %P1t16, 8
  %PPL18 = load i64*, i64** %PPL
  %9 = insertvalue %gem %8, i64* %PPL18, 9
  %fp1t20 = load i64, i64* %fp1t
  %10 = insertvalue %gem %9, i64 %fp1t20, 10
  %fv1t22 = load i64, i64* %fv1t
  %11 = insertvalue %gem %10, i64 %fv1t22, 11
  %fv2t24 = load i64, i64* %fv2t
  %12 = insertvalue %gem %11, i64 %fv2t24, 12
  %fP1t26 = load i64, i64* %fP1t
  %13 = insertvalue %gem %12, i64 %fP1t26, 13
  %fP2t28 = load i64, i64* %fP2t
  %14 = insertvalue %gem %13, i64 %fP2t28, 14
  %v1w30 = load double*, double** %v1w
  %15 = insertvalue %gem %14, double* %v1w30, 15
  %v2w32 = load double*, double** %v2w
  %16 = insertvalue %gem %15, double* %v2w32, 16
  %v3w34 = load double*, double** %v3w
  %17 = insertvalue %gem %16, double* %v3w34, 17
  %v4w36 = load double*, double** %v4w
  %18 = insertvalue %gem %17, double* %v4w36, 18
  %pbw38 = load double*, double** %pbw
  %19 = insertvalue %gem %18, double* %pbw38, 19
  %p1w40 = load double*, double** %p1w
  %20 = insertvalue %gem %19, double* %p1w40, 20
  %p2w42 = load double*, double** %p2w
  %21 = insertvalue %gem %20, double* %p2w42, 21
  %P1w44 = load double*, double** %P1w
  %22 = insertvalue %gem %21, double* %P1w44, 22
  %CLR46 = load double*, double** %CLR
  %23 = insertvalue %gem %22, double* %CLR46, 23
  %OM48 = load double*, double** %OM
  %24 = insertvalue %gem %23, double* %OM48, 24
  %A50 = load double*, double** %A
  %25 = insertvalue %gem %24, double* %A50, 25
  %fp1w52 = load double, double* %fp1w
  %26 = insertvalue %gem %25, double %fp1w52, 26
  %fv1w54 = load double, double* %fv1w
  %27 = insertvalue %gem %26, double %fv1w54, 27
  %fv2w56 = load double, double* %fv2w
  %28 = insertvalue %gem %27, double %fv2w56, 28
  %fP1w58 = load double, double* %fP1w
  %29 = insertvalue %gem %28, double %fP1w58, 29
  %fP2w60 = load double, double* %fP2w
  %30 = insertvalue %gem %29, double %fP2w60, 30
  %x62 = load <2 x double>*, <2 x double>** %x
  %31 = insertvalue %gem %30, <2 x double>* %x62, 31
  %y64 = load <2 x double>*, <2 x double>** %y
  %32 = insertvalue %gem %31, <2 x double>* %y64, 32
  %o66 = load <2 x double>*, <2 x double>** %o
  %33 = insertvalue %gem %32, <2 x double>* %o66, 33
  %px68 = load <2 x double>*, <2 x double>** %px
  %34 = insertvalue %gem %33, <2 x double>* %px68, 34
  %py70 = load <2 x double>*, <2 x double>** %py
  %35 = insertvalue %gem %34, <2 x double>* %py70, 35
  %po72 = load <2 x double>*, <2 x double>** %po
  %36 = insertvalue %gem %35, <2 x double>* %po72, 36
  %fx74 = load <2 x double>, <2 x double>* %fx
  %37 = insertvalue %gem %36, <2 x double> %fx74, 37
  %fy76 = load <2 x double>, <2 x double>* %fy
  %38 = insertvalue %gem %37, <2 x double> %fy76, 38
  %fo78 = load <2 x double>, <2 x double>* %fo
  %39 = insertvalue %gem %38, <2 x double> %fo78, 39
  %pfx80 = load <2 x double>, <2 x double>* %pfx
  %40 = insertvalue %gem %39, <2 x double> %pfx80, 40
  %pfy82 = load <2 x double>, <2 x double>* %pfy
  %41 = insertvalue %gem %40, <2 x double> %pfy82, 41
  %pfo84 = load <2 x double>, <2 x double>* %pfo
  %42 = insertvalue %gem %41, <2 x double> %pfo84, 42
  ret %gem %42
}

; Function Attrs: alwaysinline nounwind
define private %gem @"gem@Z3gemM43N3PFFIN3resIN3v1t[IN3v2t[IN3v3t[IN3v4t[IN3p1t[IN3p2t[IN3P1t[IN3PPL[IN4fp1tIN4fv1tIN4fv2tIN4fP1tIN4fP2tIN3v1w[FN3v2w[FN3v3w[FN3v4w[FN3pbw[FN3p1w[FN3p2w[FN3P1w[FN3CLR[FN2OM[FN1A[FN4fp1wFN4fv1wFN4fv2wFN4fP1wFN4fP2wFN1x[UN1y[UN1o[UN2px[UN2py[UN2po[UN2fxUN2fyUN2foUN3pfxUN3pfyUN3pfoU"() #1 {
__llvm_entry:
  %0 = alloca i64
  %1 = alloca i64*
  %2 = alloca i64*
  %3 = alloca i64*
  %4 = alloca i64*
  %5 = alloca i64*
  %6 = alloca i64*
  %7 = alloca i64*
  %8 = alloca i64*
  %9 = alloca i64
  %10 = alloca i64
  %11 = alloca i64
  %12 = alloca i64
  %13 = alloca i64
  %14 = alloca double*
  %15 = alloca double*
  %16 = alloca double*
  %17 = alloca double*
  %18 = alloca double*
  %19 = alloca double*
  %20 = alloca double*
  %21 = alloca double*
  %22 = alloca double*
  %23 = alloca double*
  %24 = alloca double*
  %25 = alloca double
  %26 = alloca double
  %27 = alloca double
  %28 = alloca double
  %29 = alloca double
  %30 = alloca <2 x double>*
  %31 = alloca <2 x double>*
  %32 = alloca <2 x double>*
  %33 = alloca <2 x double>*
  %34 = alloca <2 x double>*
  %35 = alloca <2 x double>*
  %36 = alloca <2 x double>
  %37 = alloca <2 x double>
  %38 = alloca <2 x double>
  %39 = alloca <2 x double>
  %40 = alloca <2 x double>
  %41 = alloca <2 x double>
  %42 = alloca i64
  store i64 0, i64* %42
  store i64 0, i64* %0
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @53, i64 0, i64 0), i64** %1
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @53, i64 0, i64 0), i64** %2
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @53, i64 0, i64 0), i64** %3
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @53, i64 0, i64 0), i64** %4
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @53, i64 0, i64 0), i64** %5
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @53, i64 0, i64 0), i64** %6
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @53, i64 0, i64 0), i64** %7
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @53, i64 0, i64 0), i64** %8
  store i64 0, i64* %9
  store i64 0, i64* %10
  store i64 0, i64* %11
  store i64 0, i64* %12
  store i64 0, i64* %13
  store double* getelementptr inbounds ([0 x double], [0 x double]* @10, i64 0, i64 0), double** %14
  store double* getelementptr inbounds ([0 x double], [0 x double]* @10, i64 0, i64 0), double** %15
  store double* getelementptr inbounds ([0 x double], [0 x double]* @10, i64 0, i64 0), double** %16
  store double* getelementptr inbounds ([0 x double], [0 x double]* @10, i64 0, i64 0), double** %17
  store double* getelementptr inbounds ([0 x double], [0 x double]* @10, i64 0, i64 0), double** %18
  store double* getelementptr inbounds ([0 x double], [0 x double]* @10, i64 0, i64 0), double** %19
  store double* getelementptr inbounds ([0 x double], [0 x double]* @10, i64 0, i64 0), double** %20
  store double* getelementptr inbounds ([0 x double], [0 x double]* @10, i64 0, i64 0), double** %21
  store double* getelementptr inbounds ([0 x double], [0 x double]* @10, i64 0, i64 0), double** %22
  store double* getelementptr inbounds ([0 x double], [0 x double]* @10, i64 0, i64 0), double** %23
  store double* getelementptr inbounds ([0 x double], [0 x double]* @10, i64 0, i64 0), double** %24
  store double 0.000000e+00, double* %25
  store double 0.000000e+00, double* %26
  store double 0.000000e+00, double* %27
  store double 0.000000e+00, double* %28
  store double 0.000000e+00, double* %29
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @54, i64 0, i64 0), <2 x double>** %30
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @54, i64 0, i64 0), <2 x double>** %31
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @54, i64 0, i64 0), <2 x double>** %32
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @54, i64 0, i64 0), <2 x double>** %33
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @54, i64 0, i64 0), <2 x double>** %34
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @54, i64 0, i64 0), <2 x double>** %35
  store <2 x double> zeroinitializer, <2 x double>* %36
  store <2 x double> zeroinitializer, <2 x double>* %37
  store <2 x double> zeroinitializer, <2 x double>* %38
  store <2 x double> zeroinitializer, <2 x double>* %39
  store <2 x double> zeroinitializer, <2 x double>* %40
  store <2 x double> zeroinitializer, <2 x double>* %41
  %gem = call %gem @"gem@Z3gemM43N3PFFIN3resIN3v1t[IN3v2t[IN3v3t[IN3v4t[IN3p1t[IN3p2t[IN3P1t[IN3PPL[IN4fp1tIN4fv1tIN4fv2tIN4fP1tIN4fP2tIN3v1w[FN3v2w[FN3v3w[FN3v4w[FN3pbw[FN3p1w[FN3p2w[FN3P1w[FN3CLR[FN2OM[FN1A[FN4fp1wFN4fv1wFN4fv2wFN4fP1wFN4fP2wFN1x[UN1y[UN1o[UN2px[UN2py[UN2po[UN2fxUN2fyUN2foUN3pfxUN3pfyUN3pfoUII[I[I[I[I[I[I[I[IIIIII[F[F[F[F[F[F[F[F[F[F[FFFFFF[U[U[U[U[U[UUUUUUU"(i64* %42, i64* %0, i64** %1, i64** %2, i64** %3, i64** %4, i64** %5, i64** %6, i64** %7, i64** %8, i64* %9, i64* %10, i64* %11, i64* %12, i64* %13, double** %14, double** %15, double** %16, double** %17, double** %18, double** %19, double** %20, double** %21, double** %22, double** %23, double** %24, double* %25, double* %26, double* %27, double* %28, double* %29, <2 x double>** %30, <2 x double>** %31, <2 x double>** %32, <2 x double>** %33, <2 x double>** %34, <2 x double>** %35, <2 x double>* %36, <2 x double>* %37, <2 x double>* %38, <2 x double>* %39, <2 x double>* %40, <2 x double>* %41)
  ret %gem %gem
}

; Function Attrs: nounwind
declare i64 @"max@I[I"(i64*) #2

; Function Attrs: nounwind readnone
declare i64 @"gt@III"(i64, i64) #0

; Function Attrs: nounwind readnone
declare i64 @"getcomp@I[II"(i64*, i64) #0

; Function Attrs: nounwind readnone
declare double @"getcomp@F[FI"(double*, i64) #0

; Function Attrs: nounwind
declare i64 @"find@I[FF"(double*, double) #2

; Function Attrs: nounwind readnone
declare i64 @"ge@III"(i64, i64) #0

; Function Attrs: nounwind readnone
declare i64 @"eq@III"(i64, i64) #0

; Function Attrs: nounwind readnone
declare i8* @"concat@SSS"(i8*, i8*) #0

; Function Attrs: nounwind readnone
declare <2 x double> @"chu@US"(i8*) #0

; Function Attrs: nounwind readnone
declare { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>*, <2 x double>, i64) #0

; Function Attrs: nounwind readnone
declare <4 x double> @"chp@PS"(i8*) #0

; Function Attrs: nounwind readnone
declare { <4 x double>, <4 x double>* } @"setcomp@P[PPI"(<4 x double>*, <4 x double>, i64) #0

; Function Attrs: nounwind readnone
declare <3 x double> @"chv@VS"(i8*) #0

; Function Attrs: nounwind readnone
declare { <3 x double>, <3 x double>* } @"setcomp@V[VVI"(<3 x double>*, <3 x double>, i64) #0

; Function Attrs: nounwind readnone
declare double @"chf@FS"(i8*) #0

; Function Attrs: nounwind readnone
declare { double, double* } @"setcomp@F[FFI"(double*, double, i64) #0

; Function Attrs: nounwind readnone
declare <2 x double> @"getcomp@U[UI"(<2 x double>*, i64) #0

; Function Attrs: alwaysinline nounwind
define private void @"V_SINUSOIDAL@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %w4 = load double, double* %w
  %return = call double @"sin@FF"(double %output2)
  %output6 = fmul double %w4, %return
  %tmp = load <2 x double>, <2 x double>* %p
  %return7 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output6, i64 0)
  %output9 = extractvalue { double, <2 x double> } %return7, 1
  store <2 x double> %output9, <2 x double>* %p
  %w10 = load double, double* %w
  %return12 = call double @"sin@FF"(double %output3)
  %output13 = fmul double %w10, %return12
  %return15 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output9, double %output13, i64 1)
  %output17 = extractvalue { double, <2 x double> } %return15, 1
  store <2 x double> %output17, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind
declare { double, double } @"assign@FFU"(<2 x double>) #2

; Function Attrs: alwaysinline nounwind
define private void @"V_SPHERICAL@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %w4 = load double, double* %w
  %_p5 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p5, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %output6 = fadd double %SUMSQ, 0x3CB0000000000000
  %output7 = call double @"div@FF"(double %w4, double %output6)
  %output10 = fmul double %output7, %output2
  %tmp = load <2 x double>, <2 x double>* %p
  %return = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output10, i64 0)
  %output12 = extractvalue { double, <2 x double> } %return, 1
  store <2 x double> %output12, <2 x double>* %p
  %output15 = fmul double %output7, %output3
  %return17 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output12, double %output15, i64 1)
  %output19 = extractvalue { double, <2 x double> } %return17, 1
  store <2 x double> %output19, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SWIRL@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %_p4 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p4, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %return = call double @"sin@FF"(double %SUMSQ)
  %return7 = call double @"cos@FF"(double %SUMSQ)
  %output10 = fmul double %return, %output2
  %output13 = fmul double %return7, %output3
  %output14 = fsub double %output10, %output13
  %output17 = fmul double %return7, %output2
  %output20 = fmul double %return, %output3
  %output21 = fadd double %output17, %output20
  %w22 = load double, double* %w
  %output24 = fmul double %w22, %output14
  %tmp = load <2 x double>, <2 x double>* %p
  %return25 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output24, i64 0)
  %output27 = extractvalue { double, <2 x double> } %return25, 1
  store <2 x double> %output27, <2 x double>* %p
  %w28 = load double, double* %w
  %output30 = fmul double %w28, %output21
  %return32 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output27, double %output30, i64 1)
  %output34 = extractvalue { double, <2 x double> } %return32, 1
  store <2 x double> %output34, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_HORSESHOE@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %w4 = load double, double* %w
  %_p5 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p5, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %output6 = fadd double %SQRT, 0x3CB0000000000000
  %output7 = call double @"div@FF"(double %w4, double %output6)
  %output10 = fsub double %output2, %output3
  %output13 = fadd double %output2, %output3
  %output14 = fmul double %output10, %output13
  %output16 = fmul double %output14, %output7
  %tmp = load <2 x double>, <2 x double>* %p
  %return = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output16, i64 0)
  %output18 = extractvalue { double, <2 x double> } %return, 1
  store <2 x double> %output18, <2 x double>* %p
  %output20 = fmul double 2.000000e+00, %output2
  %output22 = fmul double %output20, %output3
  %output24 = fmul double %output22, %output7
  %return26 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output18, double %output24, i64 1)
  %output28 = extractvalue { double, <2 x double> } %return26, 1
  store <2 x double> %output28, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_POLAR@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %ATAN = call double @"ATAN@FU"(<2 x double>* %0)
  %output = fmul double %ATAN, 0x3FD45F306DC9C883
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %1
  %SQRT = call double @"SQRT@FU"(<2 x double>* %1)
  %output3 = fsub double %SQRT, 1.000000e+00
  %w4 = load double, double* %w
  %output6 = fmul double %w4, %output
  %tmp = load <2 x double>, <2 x double>* %p
  %return = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output6, i64 0)
  %output8 = extractvalue { double, <2 x double> } %return, 1
  store <2 x double> %output8, <2 x double>* %p
  %w9 = load double, double* %w
  %output11 = fmul double %w9, %output3
  %return13 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output8, double %output11, i64 1)
  %output15 = extractvalue { double, <2 x double> } %return13, 1
  store <2 x double> %output15, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_HANDKERCHIEF@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca <2 x double>
  %3 = alloca <2 x double>
  %4 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %ATAN = call double @"ATAN@FU"(<2 x double>* %0)
  %w2 = load double, double* %w
  %_p3 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p3, <2 x double>* %1
  %SQRT = call double @"SQRT@FU"(<2 x double>* %1)
  %output = fmul double %w2, %SQRT
  %_p5 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p5, <2 x double>* %2
  %SQRT6 = call double @"SQRT@FU"(<2 x double>* %2)
  %output7 = fadd double %ATAN, %SQRT6
  %return = call double @"sin@FF"(double %output7)
  %output8 = fmul double %output, %return
  %tmp = load <2 x double>, <2 x double>* %p
  %return9 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output8, i64 0)
  %output11 = extractvalue { double, <2 x double> } %return9, 1
  store <2 x double> %output11, <2 x double>* %p
  %w12 = load double, double* %w
  %_p13 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p13, <2 x double>* %3
  %SQRT14 = call double @"SQRT@FU"(<2 x double>* %3)
  %output15 = fmul double %w12, %SQRT14
  %_p17 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p17, <2 x double>* %4
  %SQRT18 = call double @"SQRT@FU"(<2 x double>* %4)
  %output19 = fsub double %ATAN, %SQRT18
  %return20 = call double @"cos@FF"(double %output19)
  %output21 = fmul double %output15, %return20
  %tmp22 = load <2 x double>, <2 x double>* %p
  %return23 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp22, double %output21, i64 1)
  %output25 = extractvalue { double, <2 x double> } %return23, 1
  store <2 x double> %output25, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_HEART@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %1
  %ATAN = call double @"ATAN@FU"(<2 x double>* %1)
  %output = fmul double %SQRT, %ATAN
  %w3 = load double, double* %w
  %_p4 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p4, <2 x double>* %2
  %SQRT5 = call double @"SQRT@FU"(<2 x double>* %2)
  %output6 = fmul double %w3, %SQRT5
  %return = call double @"sin@FF"(double %output)
  %output9 = fmul double %output6, %return
  %tmp = load <2 x double>, <2 x double>* %p
  %return10 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output9, i64 0)
  %output12 = extractvalue { double, <2 x double> } %return10, 1
  store <2 x double> %output12, <2 x double>* %p
  %return14 = call double @"neg@FF"(double %output6)
  %return16 = call double @"cos@FF"(double %output)
  %output17 = fmul double %return14, %return16
  %return19 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output12, double %output17, i64 1)
  %output21 = extractvalue { double, <2 x double> } %return19, 1
  store <2 x double> %output21, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_DISC@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %sr = alloca double
  %cr = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sr, !vex-initializer-store !3
  store double 0.000000e+00, double* %cr, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %ATAN = call double @"ATAN@FU"(<2 x double>* %0)
  %output = call double @"div@FF"(double 1.000000e+00, double 0x400921FB4D12D84A)
  %output2 = fmul double %ATAN, %output
  %_p3 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p3, <2 x double>* %1
  %SQRT = call double @"SQRT@FU"(<2 x double>* %1)
  %output4 = fmul double 0x400921FB4D12D84A, %SQRT
  store double %output4, double* %2
  call void @"sincos@FFF"(double* %2, double* %sr, double* %cr)
  %w6 = load double, double* %w
  %sr7 = load double, double* %sr
  %output8 = fmul double %w6, %sr7
  %output10 = fmul double %output8, %output2
  %tmp = load <2 x double>, <2 x double>* %p
  %return = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output10, i64 0)
  %output12 = extractvalue { double, <2 x double> } %return, 1
  store <2 x double> %output12, <2 x double>* %p
  %w13 = load double, double* %w
  %cr14 = load double, double* %cr
  %output15 = fmul double %w13, %cr14
  %output17 = fmul double %output15, %output2
  %return19 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output12, double %output17, i64 1)
  %output21 = extractvalue { double, <2 x double> } %return19, 1
  store <2 x double> %output21, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SPIRAL@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %sr = alloca double
  %cr = alloca double
  %1 = alloca <2 x double>
  %2 = alloca double
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %cast = call <2 x double> @"set@UF"(double %SQRT)
  %output = call <2 x double> @"div@UU"(<2 x double> %_p1, <2 x double> %cast)
  store double 0.000000e+00, double* %sr, !vex-initializer-store !3
  store double 0.000000e+00, double* %cr, !vex-initializer-store !3
  %_p3 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p3, <2 x double>* %1
  %SQRT4 = call double @"SQRT@FU"(<2 x double>* %1)
  %output5 = fadd double %SQRT4, 0x3CB0000000000000
  %w6 = load double, double* %w
  %output8 = call double @"div@FF"(double %w6, double %output5)
  store double %output5, double* %2
  call void @"sincos@FFF"(double* %2, double* %sr, double* %cr)
  %return = call double @"getcomp@FUI"(<2 x double> %output, i64 1)
  %sr12 = load double, double* %sr
  %output13 = fadd double %return, %sr12
  %output14 = fmul double %output8, %output13
  %tmp = load <2 x double>, <2 x double>* %p
  %return15 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output14, i64 0)
  %output17 = extractvalue { double, <2 x double> } %return15, 1
  store <2 x double> %output17, <2 x double>* %p
  %return20 = call double @"getcomp@FUI"(<2 x double> %output, i64 0)
  %cr21 = load double, double* %cr
  %output22 = fsub double %return20, %cr21
  %output23 = fmul double %output8, %output22
  %return25 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output17, double %output23, i64 1)
  %output27 = extractvalue { double, <2 x double> } %return25, 1
  store <2 x double> %output27, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind readnone
declare <2 x double> @"set@UF"(double) #0

; Function Attrs: nounwind readnone
declare <2 x double> @"div@UU"(<2 x double>, <2 x double>) #0

; Function Attrs: alwaysinline nounwind
define private void @"V_HIPERBOLIC@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca double
  %2 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %cast = call <2 x double> @"set@UF"(double %SQRT)
  %output = call <2 x double> @"div@UU"(<2 x double> %_p1, <2 x double> %cast)
  %_p3 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p3, <2 x double>* %2
  %SQRT4 = call double @"SQRT@FU"(<2 x double>* %2)
  store double %SQRT4, double* %1
  %Zeps = call double @"Zeps@FF"(double* %1)
  %w5 = load double, double* %w
  %return = call double @"getcomp@FUI"(<2 x double> %output, i64 0)
  %output7 = fmul double %w5, %return
  %output9 = call double @"div@FF"(double %output7, double %Zeps)
  %tmp = load <2 x double>, <2 x double>* %p
  %return10 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output9, i64 0)
  %output12 = extractvalue { double, <2 x double> } %return10, 1
  store <2 x double> %output12, <2 x double>* %p
  %w13 = load double, double* %w
  %return15 = call double @"getcomp@FUI"(<2 x double> %output, i64 1)
  %output16 = fmul double %w13, %return15
  %output18 = fmul double %output16, %Zeps
  %return20 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output12, double %output18, i64 1)
  %output22 = extractvalue { double, <2 x double> } %return20, 1
  store <2 x double> %output22, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_DIAMOND@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %return = call double @"atan2@FFF"(double %output2, double %output3)
  %output8 = fmul double %output2, %output2
  %output11 = fmul double %output3, %output3
  %output12 = fadd double %output8, %output11
  %return13 = call double @"sqrt@FF"(double %output12)
  %w14 = load double, double* %w
  %return16 = call double @"sin@FF"(double %return)
  %output17 = fmul double %w14, %return16
  %return19 = call double @"cos@FF"(double %return13)
  %output20 = fmul double %output17, %return19
  %tmp = load <2 x double>, <2 x double>* %p
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output20, i64 0)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  %w24 = load double, double* %w
  %return26 = call double @"cos@FF"(double %return)
  %output27 = fmul double %w24, %return26
  %return29 = call double @"sin@FF"(double %return13)
  %output30 = fmul double %output27, %return29
  %return32 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output23, double %output30, i64 1)
  %output34 = extractvalue { double, <2 x double> } %return32, 1
  store <2 x double> %output34, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_EX@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %ATAN = call double @"ATAN@FU"(<2 x double>* %0)
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %1
  %SQRT = call double @"SQRT@FU"(<2 x double>* %1)
  %output = fadd double %ATAN, %SQRT
  %return = call double @"sin@FF"(double %output)
  %output7 = fsub double %ATAN, %SQRT
  %return8 = call double @"cos@FF"(double %output7)
  %output11 = fmul double %return, %return
  %output13 = fmul double %output11, %return
  %output15 = fmul double %output13, %SQRT
  %output18 = fmul double %return8, %return8
  %output20 = fmul double %output18, %return8
  %output22 = fmul double %output20, %SQRT
  %w23 = load double, double* %w
  %output26 = fadd double %output15, %output22
  %output27 = fmul double %w23, %output26
  %tmp = load <2 x double>, <2 x double>* %p
  %return28 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output27, i64 0)
  %output30 = extractvalue { double, <2 x double> } %return28, 1
  store <2 x double> %output30, <2 x double>* %p
  %w31 = load double, double* %w
  %output34 = fsub double %output15, %output22
  %output35 = fmul double %w31, %output34
  %return37 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output30, double %output35, i64 1)
  %output39 = extractvalue { double, <2 x double> } %return37, 1
  store <2 x double> %output39, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_JULIA@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %ATAN = call double @"ATAN@FU"(<2 x double>* %0)
  %output = fmul double 5.000000e-01, %ATAN
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return2 = fcmp olt double %return, 5.000000e-01
  br i1 %return2, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %output5 = fadd double %output, 0x400921FB4D12D84A
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %a.0 = phi double [ %output5, %true ], [ %output, %__llvm_entry ]
  %w6 = load double, double* %w
  %_p7 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p7, <2 x double>* %1
  %SQRT = call double @"SQRT@FU"(<2 x double>* %1)
  %return8 = call double @"sqrt@FF"(double %SQRT)
  %output9 = fmul double %w6, %return8
  store double %a.0, double* %2
  call void @"sincos@FFF"(double* %2, double* %sa, double* %ca)
  %ca12 = load double, double* %ca
  %output13 = fmul double %output9, %ca12
  %tmp = load <2 x double>, <2 x double>* %p
  %return14 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output13, i64 0)
  %output16 = extractvalue { double, <2 x double> } %return14, 1
  store <2 x double> %output16, <2 x double>* %p
  %sa18 = load double, double* %sa
  %output19 = fmul double %output9, %sa18
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output16, double %output19, i64 1)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_BENT@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %return = fcmp olt double %output2, 0.000000e+00
  br i1 %return, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %output9 = fmul double %output2, 2.000000e+00
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %nx.0 = phi double [ %output9, %true ], [ %output2, %__llvm_entry ]
  %return11 = fcmp olt double %output3, 0.000000e+00
  br i1 %return11, label %true13, label %end14

true13:                                           ; preds = %end
  %output16 = call double @"div@FF"(double %output3, double 2.000000e+00)
  br label %end14

end14:                                            ; preds = %true13, %end
  %ny.0 = phi double [ %output16, %true13 ], [ %output3, %end ]
  %w17 = load double, double* %w
  %output19 = fmul double %w17, %nx.0
  %tmp = load <2 x double>, <2 x double>* %p
  %return20 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output19, i64 0)
  %output22 = extractvalue { double, <2 x double> } %return20, 1
  store <2 x double> %output22, <2 x double>* %p
  %w23 = load double, double* %w
  %output25 = fmul double %w23, %ny.0
  %return27 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output22, double %output25, i64 1)
  %output29 = extractvalue { double, <2 x double> } %return27, 1
  store <2 x double> %output29, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_WAVES@UUFFFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %b, double* %c, double* %e, double* %f) #1 {
__llvm_entry:
  %0 = alloca double
  %1 = alloca double
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %c4 = load double, double* %c
  %output6 = fmul double %c4, %c4
  store double %output6, double* %0
  %Zeps = call double @"Zeps@FF"(double* %0)
  %output7 = call double @"div@FF"(double 1.000000e+00, double %Zeps)
  %f8 = load double, double* %f
  %output10 = fmul double %f8, %f8
  store double %output10, double* %1
  %Zeps11 = call double @"Zeps@FF"(double* %1)
  %output12 = call double @"div@FF"(double 1.000000e+00, double %Zeps11)
  %b14 = load double, double* %b
  %output17 = fmul double %output3, %output7
  %return = call double @"sin@FF"(double %output17)
  %output18 = fmul double %b14, %return
  %output19 = fadd double %output2, %output18
  %e21 = load double, double* %e
  %output24 = fmul double %output2, %output12
  %return25 = call double @"sin@FF"(double %output24)
  %output26 = fmul double %e21, %return25
  %output27 = fadd double %output3, %output26
  %w28 = load double, double* %w
  %output30 = fmul double %w28, %output19
  %tmp = load <2 x double>, <2 x double>* %p
  %return31 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output30, i64 0)
  %output33 = extractvalue { double, <2 x double> } %return31, 1
  store <2 x double> %output33, <2 x double>* %p
  %w34 = load double, double* %w
  %output36 = fmul double %w34, %output27
  %return38 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output33, double %output36, i64 1)
  %output40 = extractvalue { double, <2 x double> } %return38, 1
  store <2 x double> %output40, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_FISHEYE@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %_p4 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p4, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %w5 = load double, double* %w
  %output6 = fmul double 2.000000e+00, %w5
  %output8 = fadd double %SQRT, 1.000000e+00
  %output9 = call double @"div@FF"(double %output6, double %output8)
  %output12 = fmul double %output9, %output3
  %tmp = load <2 x double>, <2 x double>* %p
  %return = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output12, i64 0)
  %output14 = extractvalue { double, <2 x double> } %return, 1
  store <2 x double> %output14, <2 x double>* %p
  %output17 = fmul double %output9, %output2
  %return19 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output14, double %output17, i64 1)
  %output21 = extractvalue { double, <2 x double> } %return19, 1
  store <2 x double> %output21, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_POPCORN@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %c, double* %f) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %output5 = fmul double 3.000000e+00, %output3
  %return = call double @"tan@FF"(double %output5)
  %output7 = fmul double 3.000000e+00, %output2
  %return8 = call double @"tan@FF"(double %output7)
  %c10 = load double, double* %c
  %return12 = call double @"sin@FF"(double %return)
  %output13 = fmul double %c10, %return12
  %output14 = fadd double %output2, %output13
  %f16 = load double, double* %f
  %return18 = call double @"sin@FF"(double %return8)
  %output19 = fmul double %f16, %return18
  %output20 = fadd double %output3, %output19
  %w21 = load double, double* %w
  %output23 = fmul double %w21, %output14
  %tmp = load <2 x double>, <2 x double>* %p
  %return24 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output23, i64 0)
  %output26 = extractvalue { double, <2 x double> } %return24, 1
  store <2 x double> %output26, <2 x double>* %p
  %w27 = load double, double* %w
  %output29 = fmul double %w27, %output20
  %return31 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output26, double %output29, i64 1)
  %output33 = extractvalue { double, <2 x double> } %return31, 1
  store <2 x double> %output33, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_EXPONENTIAL@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %sdy = alloca double
  %cdy = alloca double
  %0 = alloca double
  store double 0.000000e+00, double* %sdy, !vex-initializer-store !3
  store double 0.000000e+00, double* %cdy, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %w4 = load double, double* %w
  %output6 = fsub double %output2, 1.000000e+00
  %return = call double @"exp@FF"(double %output6)
  %output7 = fmul double %w4, %return
  %output9 = fmul double 0x400921FB4D12D84A, %output3
  store double %output9, double* %0
  call void @"sincos@FFF"(double* %0, double* %sdy, double* %cdy)
  %cdy12 = load double, double* %cdy
  %output13 = fmul double %output7, %cdy12
  %tmp = load <2 x double>, <2 x double>* %p
  %return14 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output13, i64 0)
  %output16 = extractvalue { double, <2 x double> } %return14, 1
  store <2 x double> %output16, <2 x double>* %p
  %sdy18 = load double, double* %sdy
  %output19 = fmul double %output7, %sdy18
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output16, double %output19, i64 1)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind readnone
declare double @"exp@FF"(double) #0

; Function Attrs: alwaysinline nounwind
define private void @"V_POWER@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %cast = call <2 x double> @"set@UF"(double %SQRT)
  %output = call <2 x double> @"div@UU"(<2 x double> %_p1, <2 x double> %cast)
  %w3 = load double, double* %w
  %_p4 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p4, <2 x double>* %1
  %SQRT5 = call double @"SQRT@FU"(<2 x double>* %1)
  %return = call double @"getcomp@FUI"(<2 x double> %output, i64 0)
  %return7 = call double @"pow@FFF"(double %SQRT5, double %return)
  %output8 = fmul double %w3, %return7
  %return11 = call double @"getcomp@FUI"(<2 x double> %output, i64 1)
  %output12 = fmul double %output8, %return11
  %tmp = load <2 x double>, <2 x double>* %p
  %return13 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output12, i64 0)
  %output15 = extractvalue { double, <2 x double> } %return13, 1
  store <2 x double> %output15, <2 x double>* %p
  %output19 = fmul double %output8, %return
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output15, double %output19, i64 1)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind readnone
declare double @"pow@FFF"(double, double) #0

; Function Attrs: alwaysinline nounwind
define private void @"V_COSINE@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %output5 = fmul double %output2, 0x400921FB4D12D84A
  store double %output5, double* %0
  call void @"sincos@FFF"(double* %0, double* %sa, double* %ca)
  %ca7 = load double, double* %ca
  %return = call double @"cosh@FF"(double %output3)
  %output9 = fmul double %ca7, %return
  %sa10 = load double, double* %sa
  %return11 = call double @"neg@FF"(double %sa10)
  %return13 = call double @"sinh@FF"(double %output3)
  %output14 = fmul double %return11, %return13
  %w15 = load double, double* %w
  %output17 = fmul double %w15, %output9
  %tmp = load <2 x double>, <2 x double>* %p
  %return18 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output17, i64 0)
  %output20 = extractvalue { double, <2 x double> } %return18, 1
  store <2 x double> %output20, <2 x double>* %p
  %w21 = load double, double* %w
  %output23 = fmul double %w21, %output14
  %return25 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output20, double %output23, i64 1)
  %output27 = extractvalue { double, <2 x double> } %return25, 1
  store <2 x double> %output27, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind readnone
declare double @"cosh@FF"(double) #0

; Function Attrs: nounwind readnone
declare double @"sinh@FF"(double) #0

; Function Attrs: alwaysinline nounwind
define private void @"V_RINGS@UUFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %d) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  %3 = alloca double
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %cast = call <2 x double> @"set@UF"(double %SQRT)
  %output = call <2 x double> @"div@UU"(<2 x double> %_p1, <2 x double> %cast)
  %d3 = load double, double* %d
  %output5 = fmul double %d3, %d3
  %output6 = fadd double %output5, 0x3CB0000000000000
  %_p7 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p7, <2 x double>* %1
  %SQRT8 = call double @"SQRT@FU"(<2 x double>* %1)
  %w9 = load double, double* %w
  %output12 = fadd double %SQRT8, %output6
  store double %output12, double* %2
  %output14 = fmul double 2.000000e+00, %output6
  store double %output14, double* %3
  %fmod = call double @"fmod@FFF"(double* %2, double* %3)
  %output16 = fsub double %fmod, %output6
  %output19 = fsub double 1.000000e+00, %output6
  %output20 = fmul double %SQRT8, %output19
  %output21 = fadd double %output16, %output20
  %output22 = fmul double %w9, %output21
  %return = call double @"getcomp@FUI"(<2 x double> %output, i64 1)
  %output25 = fmul double %output22, %return
  %tmp = load <2 x double>, <2 x double>* %p
  %return26 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output25, i64 0)
  %output28 = extractvalue { double, <2 x double> } %return26, 1
  store <2 x double> %output28, <2 x double>* %p
  %return31 = call double @"getcomp@FUI"(<2 x double> %output, i64 0)
  %output32 = fmul double %output22, %return31
  %return34 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output28, double %output32, i64 1)
  %output36 = extractvalue { double, <2 x double> } %return34, 1
  store <2 x double> %output36, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_FAN@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %c, double* %f) #1 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  %3 = alloca double
  %4 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %c1 = load double, double* %c
  %output = fmul double %c1, %c1
  %output3 = fadd double %output, 0x3CB0000000000000
  %output4 = fmul double 0x400921FB4D12D84A, %output3
  %f5 = load double, double* %f
  %output7 = fmul double 5.000000e-01, %output4
  %_p8 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p8, <2 x double>* %0
  %ATAN = call double @"ATAN@FU"(<2 x double>* %0)
  %w9 = load double, double* %w
  %_p10 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p10, <2 x double>* %1
  %SQRT = call double @"SQRT@FU"(<2 x double>* %1)
  %output11 = fmul double %w9, %SQRT
  %output15 = fadd double %ATAN, %f5
  store double %output15, double* %2
  store double %output4, double* %3
  %fmod = call double @"fmod@FFF"(double* %2, double* %3)
  %return = fcmp ogt double %fmod, %output7
  br i1 %return, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %return20 = call double @"neg@FF"(double %output7)
  br label %end

end:                                              ; preds = %__llvm_entry, %true
  %phi = phi double [ %return20, %true ], [ %output7, %__llvm_entry ]
  %output22 = fadd double %ATAN, %phi
  store double %output22, double* %4
  call void @"sincos@FFF"(double* %4, double* %sa, double* %ca)
  %ca25 = load double, double* %ca
  %output26 = fmul double %output11, %ca25
  %tmp = load <2 x double>, <2 x double>* %p
  %return27 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output26, i64 0)
  %output29 = extractvalue { double, <2 x double> } %return27, 1
  store <2 x double> %output29, <2 x double>* %p
  %sa31 = load double, double* %sa
  %output32 = fmul double %output11, %sa31
  %return34 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output29, double %output32, i64 1)
  %output36 = extractvalue { double, <2 x double> } %return34, 1
  store <2 x double> %output36, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_BUBBLE@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %w4 = load double, double* %w
  %_p5 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p5, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %output6 = fmul double 2.500000e-01, %SUMSQ
  %output7 = fadd double %output6, 1.000000e+00
  %output8 = call double @"div@FF"(double %w4, double %output7)
  %output11 = fmul double %output8, %output2
  %tmp = load <2 x double>, <2 x double>* %p
  %return = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output11, i64 0)
  %output13 = extractvalue { double, <2 x double> } %return, 1
  store <2 x double> %output13, <2 x double>* %p
  %output16 = fmul double %output8, %output3
  %return18 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output13, double %output16, i64 1)
  %output20 = extractvalue { double, <2 x double> } %return18, 1
  store <2 x double> %output20, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_CYLINDER@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %w4 = load double, double* %w
  %return = call double @"sin@FF"(double %output2)
  %output6 = fmul double %w4, %return
  %tmp = load <2 x double>, <2 x double>* %p
  %return7 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output6, i64 0)
  %output9 = extractvalue { double, <2 x double> } %return7, 1
  store <2 x double> %output9, <2 x double>* %p
  %w10 = load double, double* %w
  %output12 = fmul double %w10, %output3
  %return14 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output9, double %output12, i64 1)
  %output16 = extractvalue { double, <2 x double> } %return14, 1
  store <2 x double> %output16, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_EYEFISH@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %w4 = load double, double* %w
  %output5 = fmul double %w4, 2.000000e+00
  %_p6 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p6, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %output7 = fadd double 1.000000e+00, %SQRT
  %output8 = call double @"div@FF"(double %output5, double %output7)
  %output11 = fmul double %output8, %output2
  %tmp = load <2 x double>, <2 x double>* %p
  %return = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output11, i64 0)
  %output13 = extractvalue { double, <2 x double> } %return, 1
  store <2 x double> %output13, <2 x double>* %p
  %output16 = fmul double %output8, %output3
  %return18 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output13, double %output16, i64 1)
  %output20 = extractvalue { double, <2 x double> } %return18, 1
  store <2 x double> %output20, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_BLUR@UF"(<2 x double>* %p, double* %w) #1 {
__llvm_entry:
  %sinr = alloca double
  %cosr = alloca double
  %0 = alloca double
  store double 0.000000e+00, double* %sinr, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosr, !vex-initializer-store !3
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output = fmul double %return, 2.000000e+00
  %output1 = fmul double %output, 0x400921FB4D12D84A
  store double %output1, double* %0
  call void @"sincos@FFF"(double* %0, double* %sinr, double* %cosr)
  %w3 = load double, double* %w
  %return4 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output5 = fmul double %w3, %return4
  %cosr7 = load double, double* %cosr
  %output8 = fmul double %output5, %cosr7
  %tmp = load <2 x double>, <2 x double>* %p
  %return9 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output8, i64 0)
  %output11 = extractvalue { double, <2 x double> } %return9, 1
  store <2 x double> %output11, <2 x double>* %p
  %sinr13 = load double, double* %sinr
  %output14 = fmul double %output5, %sinr13
  %return16 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output11, double %output14, i64 1)
  %output18 = extractvalue { double, <2 x double> } %return16, 1
  store <2 x double> %output18, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_CURL@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %c1, double* %c2) #1 {
__llvm_entry:
  %0 = alloca double
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %c14 = load double, double* %c1
  %output6 = fmul double %c14, %output2
  %output7 = fadd double 1.000000e+00, %output6
  %c28 = load double, double* %c2
  %output11 = fmul double %output2, %output2
  %output14 = fmul double %output3, %output3
  %output15 = fsub double %output11, %output14
  %output16 = fmul double %c28, %output15
  %output17 = fadd double %output7, %output16
  %output20 = fmul double %c14, %output3
  %output22 = fmul double 2.000000e+00, %c28
  %output24 = fmul double %output22, %output2
  %output26 = fmul double %output24, %output3
  %output27 = fadd double %output20, %output26
  %w28 = load double, double* %w
  %output31 = fmul double %output17, %output17
  %output34 = fmul double %output27, %output27
  %output35 = fadd double %output31, %output34
  store double %output35, double* %0
  %Zeps = call double @"Zeps@FF"(double* %0)
  %output36 = call double @"div@FF"(double %w28, double %Zeps)
  %output39 = fmul double %output2, %output17
  %output42 = fmul double %output3, %output27
  %output43 = fadd double %output39, %output42
  %output45 = fmul double %output43, %output36
  %tmp = load <2 x double>, <2 x double>* %p
  %return = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output45, i64 0)
  %output47 = extractvalue { double, <2 x double> } %return, 1
  store <2 x double> %output47, <2 x double>* %p
  %output50 = fmul double %output3, %output17
  %output53 = fmul double %output2, %output27
  %output54 = fsub double %output50, %output53
  %output56 = fmul double %output54, %output36
  %return58 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output47, double %output56, i64 1)
  %output60 = extractvalue { double, <2 x double> } %return58, 1
  store <2 x double> %output60, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_NGON@UUFFFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %pow, double* %sides, double* %corners, double* %circle) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %return = call double @"neg@FF"(double 5.000000e-01)
  %pow4 = load double, double* %pow
  %output5 = fmul double %return, %pow4
  %sides6 = load double, double* %sides
  %output7 = call double @"div@FF"(double 0x401921FB4D12D84A, double %sides6)
  %output9 = call double @"div@FF"(double 1.000000e+00, double %output7)
  %return11 = fcmp oeq double %output2, 0.000000e+00
  %return12 = zext i1 %return11 to i64
  %return14 = fcmp oeq double %output3, 0.000000e+00
  %return15 = zext i1 %return14 to i64
  %return16 = call i64 @"and@III"(i64 %return12, i64 %return15)
  %2 = icmp ne i64 %return16, 0
  br i1 %2, label %end, label %false

false:                                            ; preds = %__llvm_entry
  %_p17 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p17, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %return19 = call double @"pow@FFF"(double %SUMSQ, double %output5)
  br label %end

end:                                              ; preds = %__llvm_entry, %false
  %phi20 = phi double [ %return19, %false ], [ 0.000000e+00, %__llvm_entry ]
  %_p21 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p21, <2 x double>* %1
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %1)
  %output26 = fmul double %ATANYX, %output9
  %return27 = call double @"floor@FF"(double %output26)
  %output28 = fmul double %output7, %return27
  %output29 = fsub double %ATANYX, %output28
  %output32 = fmul double 5.000000e-01, %output7
  %return33 = fcmp ogt double %output29, %output32
  br i1 %return33, label %true35, label %end36

true35:                                           ; preds = %end
  %output39 = fsub double %output29, %output7
  br label %end36

end36:                                            ; preds = %true35, %end
  %phi.0 = phi double [ %output39, %true35 ], [ %output29, %end ]
  %corners40 = load double, double* %corners
  %return42 = call double @"cos@FF"(double %phi.0)
  %output43 = call double @"div@FF"(double 1.000000e+00, double %return42)
  %output44 = fsub double %output43, 1.000000e+00
  %output45 = fmul double %corners40, %output44
  %circle46 = load double, double* %circle
  %output47 = fadd double %output45, %circle46
  %w48 = load double, double* %w
  %output49 = fmul double %output47, %w48
  %output51 = fmul double %output49, %phi20
  %output54 = fmul double %output51, %output2
  %tmp = load <2 x double>, <2 x double>* %p
  %return55 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output54, i64 0)
  %output57 = extractvalue { double, <2 x double> } %return55, 1
  store <2 x double> %output57, <2 x double>* %p
  %output60 = fmul double %output51, %output3
  %return62 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output57, double %output60, i64 1)
  %output64 = extractvalue { double, <2 x double> } %return62, 1
  store <2 x double> %output64, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind readnone
declare i64 @"and@III"(i64, i64) #0

; Function Attrs: alwaysinline nounwind
define private void @"V_PDJ@UUFP"(<2 x double>* %p, <2 x double>* %_p, double* %w, <4 x double>* %pp) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %pp4 = load <4 x double>, <4 x double>* %pp
  %output5 = call { double, double, double, double } @"assign@FFFFP"(<4 x double> %pp4)
  %output6 = extractvalue { double, double, double, double } %output5, 0
  %output7 = extractvalue { double, double, double, double } %output5, 1
  %output8 = extractvalue { double, double, double, double } %output5, 2
  %output9 = extractvalue { double, double, double, double } %output5, 3
  %output12 = fmul double %output7, %output2
  %return = call double @"cos@FF"(double %output12)
  %output15 = fmul double %output8, %output2
  %return16 = call double @"sin@FF"(double %output15)
  %output19 = fmul double %output6, %output3
  %return20 = call double @"sin@FF"(double %output19)
  %output23 = fmul double %output9, %output3
  %return24 = call double @"cos@FF"(double %output23)
  %w25 = load double, double* %w
  %output28 = fsub double %return20, %return
  %output29 = fmul double %w25, %output28
  %tmp = load <2 x double>, <2 x double>* %p
  %return30 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output29, i64 0)
  %output32 = extractvalue { double, <2 x double> } %return30, 1
  store <2 x double> %output32, <2 x double>* %p
  %w33 = load double, double* %w
  %output36 = fsub double %return16, %return24
  %output37 = fmul double %w33, %output36
  %return39 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output32, double %output37, i64 1)
  %output41 = extractvalue { double, <2 x double> } %return39, 1
  store <2 x double> %output41, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind
declare { double, double, double, double } @"assign@FFFFP"(<4 x double>) #2

; Function Attrs: alwaysinline nounwind
define private void @"V_BLOB@UUFFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %low, double* %high, double* %wave) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %cast = call <2 x double> @"set@UF"(double %SQRT)
  %output = call <2 x double> @"div@UU"(<2 x double> %_p1, <2 x double> %cast)
  %_p4 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p4, <2 x double>* %1
  %SQRT5 = call double @"SQRT@FU"(<2 x double>* %1)
  %_p7 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p7, <2 x double>* %2
  %ATAN = call double @"ATAN@FU"(<2 x double>* %2)
  %high8 = load double, double* %high
  %low9 = load double, double* %low
  %output10 = fsub double %high8, %low9
  %wave14 = load double, double* %wave
  %output16 = fmul double %wave14, %ATAN
  %return = call double @"sin@FF"(double %output16)
  %output17 = fmul double 5.000000e-01, %return
  %output18 = fadd double 5.000000e-01, %output17
  %output19 = fmul double %output10, %output18
  %output20 = fadd double %low9, %output19
  %output21 = fmul double %SQRT5, %output20
  %w22 = load double, double* %w
  %return24 = call double @"getcomp@FUI"(<2 x double> %output, i64 0)
  %output25 = fmul double %w22, %return24
  %output27 = fmul double %output25, %output21
  %tmp = load <2 x double>, <2 x double>* %p
  %return28 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output27, i64 0)
  %output30 = extractvalue { double, <2 x double> } %return28, 1
  store <2 x double> %output30, <2 x double>* %p
  %w31 = load double, double* %w
  %return33 = call double @"getcomp@FUI"(<2 x double> %output, i64 1)
  %output34 = fmul double %w31, %return33
  %output36 = fmul double %output34, %output21
  %return38 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output30, double %output36, i64 1)
  %output40 = extractvalue { double, <2 x double> } %return38, 1
  store <2 x double> %output40, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_JULIAN@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %power, double* %jdist) #1 {
__llvm_entry:
  %sina = alloca double
  %cosa = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sina, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosa, !vex-initializer-store !3
  %power1 = load double, double* %power
  %jdist2 = load double, double* %jdist
  %output = call double @"div@FF"(double %jdist2, double %power1)
  %output4 = call double @"div@FF"(double %output, double 2.000000e+00)
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output6 = fmul double %power1, %return
  %return7 = call double @"trunc@FF"(double %output6)
  %cast = fptosi double %return7 to i64
  %_p8 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p8, <2 x double>* %0
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %0)
  %cast10 = sitofp i64 %cast to double
  %output11 = fmul double 0x401921FB4D12D84A, %cast10
  %output12 = fadd double %ATANYX, %output11
  %power13 = load double, double* %power
  %output14 = call double @"div@FF"(double %output12, double %power13)
  %w15 = load double, double* %w
  %_p16 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p16, <2 x double>* %1
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %1)
  %return18 = call double @"pow@FFF"(double %SUMSQ, double %output4)
  %output19 = fmul double %w15, %return18
  store double %output14, double* %2
  call void @"sincos@FFF"(double* %2, double* %sina, double* %cosa)
  %cosa22 = load double, double* %cosa
  %output23 = fmul double %output19, %cosa22
  %tmp = load <2 x double>, <2 x double>* %p
  %return24 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output23, i64 0)
  %output26 = extractvalue { double, <2 x double> } %return24, 1
  store <2 x double> %output26, <2 x double>* %p
  %sina28 = load double, double* %sina
  %output29 = fmul double %output19, %sina28
  %return31 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output26, double %output29, i64 1)
  %output33 = extractvalue { double, <2 x double> } %return31, 1
  store <2 x double> %output33, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind readnone
declare double @"trunc@FF"(double) #0

; Function Attrs: alwaysinline nounwind
define private void @"V_JULIASCOPE@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %power, double* %jdist) #1 {
__llvm_entry:
  %sina = alloca double
  %cosa = alloca double
  %0 = alloca <2 x double>
  %1 = alloca double
  %2 = alloca <2 x double>
  store double 0.000000e+00, double* %sina, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosa, !vex-initializer-store !3
  %power1 = load double, double* %power
  %jdist2 = load double, double* %jdist
  %output = call double @"div@FF"(double %jdist2, double %power1)
  %output4 = call double @"div@FF"(double %output, double 2.000000e+00)
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output6 = fmul double %power1, %return
  %return7 = call double @"trunc@FF"(double %output6)
  %cast = fptosi double %return7 to i64
  %return9 = and i64 %cast, 1
  %return10 = call i64 @"eq@III"(i64 %return9, i64 0)
  %3 = icmp ne i64 %return10, 0
  %cast12 = sitofp i64 %cast to double
  %output13 = fmul double 0x401921FB4D12D84A, %cast12
  %_p14 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p14, <2 x double>* %0
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %0)
  br i1 %3, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output15 = fadd double %output13, %ATANYX
  %power16 = load double, double* %power
  %output17 = call double @"div@FF"(double %output15, double %power16)
  br label %end

false:                                            ; preds = %__llvm_entry
  %output23 = fsub double %output13, %ATANYX
  %power24 = load double, double* %power
  %output25 = call double @"div@FF"(double %output23, double %power24)
  br label %end

end:                                              ; preds = %false, %true
  %phi = phi double [ %output17, %true ], [ %output25, %false ]
  store double %phi, double* %1
  call void @"sincos@FFF"(double* %1, double* %sina, double* %cosa)
  %w27 = load double, double* %w
  %_p28 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p28, <2 x double>* %2
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %2)
  %return30 = call double @"pow@FFF"(double %SUMSQ, double %output4)
  %output31 = fmul double %w27, %return30
  %cosa33 = load double, double* %cosa
  %output34 = fmul double %output31, %cosa33
  %tmp = load <2 x double>, <2 x double>* %p
  %return35 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output34, i64 0)
  %output37 = extractvalue { double, <2 x double> } %return35, 1
  store <2 x double> %output37, <2 x double>* %p
  %sina39 = load double, double* %sina
  %output40 = fmul double %output31, %sina39
  %return42 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output37, double %output40, i64 1)
  %output44 = extractvalue { double, <2 x double> } %return42, 1
  store <2 x double> %output44, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_GAUSSIAN_BLUR@UF"(<2 x double>* %p, double* %w) #1 {
__llvm_entry:
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output = fmul double %return, 2.000000e+00
  %output1 = fmul double %output, 0x400921FB4D12D84A
  %w2 = load double, double* %w
  %return3 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return4 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output5 = fadd double %return3, %return4
  %return6 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output7 = fadd double %output5, %return6
  %return8 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output9 = fadd double %output7, %return8
  %output10 = fsub double %output9, 2.000000e+00
  %output11 = fmul double %w2, %output10
  %return14 = call double @"cos@FF"(double %output1)
  %output15 = fmul double %output11, %return14
  %tmp = load <2 x double>, <2 x double>* %p
  %return16 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output15, i64 0)
  %output18 = extractvalue { double, <2 x double> } %return16, 1
  store <2 x double> %output18, <2 x double>* %p
  %return21 = call double @"sin@FF"(double %output1)
  %output22 = fmul double %output11, %return21
  %return24 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output18, double %output22, i64 1)
  %output26 = extractvalue { double, <2 x double> } %return24, 1
  store <2 x double> %output26, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_FAN2@UUFU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %fan2) #1 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %fan21 = load <2 x double>, <2 x double>* %fan2
  %return = call double @"getcomp@FUI"(<2 x double> %fan21, i64 1)
  %return3 = call double @"getcomp@FUI"(<2 x double> %fan21, i64 0)
  %output = fmul double %return3, %return3
  %output6 = fadd double %output, 0x3CB0000000000000
  %output7 = fmul double 0x400921FB4D12D84A, %output6
  %output9 = fmul double 5.000000e-01, %output7
  %_p10 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p10, <2 x double>* %0
  %ATAN = call double @"ATAN@FU"(<2 x double>* %0)
  %w11 = load double, double* %w
  %_p12 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p12, <2 x double>* %1
  %SQRT = call double @"SQRT@FU"(<2 x double>* %1)
  %output13 = fmul double %w11, %SQRT
  %output16 = fadd double %ATAN, %return
  %output22 = call double @"div@FF"(double %output16, double %output7)
  %cast = fptosi double %output22 to i64
  %cast23 = sitofp i64 %cast to double
  %output24 = fmul double %output7, %cast23
  %output25 = fsub double %output16, %output24
  %return28 = fcmp ogt double %output25, %output9
  %output32 = fsub double %ATAN, %output9
  %output35 = fadd double %ATAN, %output9
  %phi = select i1 %return28, double %output32, double %output35
  store double %phi, double* %2
  call void @"sincos@FFF"(double* %2, double* %sa, double* %ca)
  %sa38 = load double, double* %sa
  %output39 = fmul double %output13, %sa38
  %tmp = load <2 x double>, <2 x double>* %p
  %return40 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output39, i64 0)
  %output42 = extractvalue { double, <2 x double> } %return40, 1
  store <2 x double> %output42, <2 x double>* %p
  %ca44 = load double, double* %ca
  %output45 = fmul double %output13, %ca44
  %return47 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output42, double %output45, i64 1)
  %output49 = extractvalue { double, <2 x double> } %return47, 1
  store <2 x double> %output49, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_RINGS2@UUFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %rings2val) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %cast = call <2 x double> @"set@UF"(double %SQRT)
  %output = call <2 x double> @"div@UU"(<2 x double> %_p1, <2 x double> %cast)
  %_p3 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p3, <2 x double>* %1
  %SQRT4 = call double @"SQRT@FU"(<2 x double>* %1)
  %rings2val5 = load double, double* %rings2val
  %output7 = fmul double %rings2val5, %rings2val5
  %return = call double @"neg@FF"(double 2.000000e+00)
  %output10 = fmul double %return, %output7
  %output13 = fadd double %SQRT4, %output7
  %output15 = fmul double 2.000000e+00, %output7
  %output16 = call double @"div@FF"(double %output13, double %output15)
  %cast17 = fptosi double %output16 to i64
  %cast18 = sitofp i64 %cast17 to double
  %output19 = fmul double %output10, %cast18
  %output22 = fsub double 1.000000e+00, %output7
  %output23 = fmul double %SQRT4, %output22
  %output24 = fadd double %output19, %output23
  %output25 = fadd double %SQRT4, %output24
  %w26 = load double, double* %w
  %return28 = call double @"getcomp@FUI"(<2 x double> %output, i64 0)
  %output29 = fmul double %w26, %return28
  %output31 = fmul double %output29, %output25
  %tmp = load <2 x double>, <2 x double>* %p
  %return32 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output31, i64 0)
  %output34 = extractvalue { double, <2 x double> } %return32, 1
  store <2 x double> %output34, <2 x double>* %p
  %w35 = load double, double* %w
  %return37 = call double @"getcomp@FUI"(<2 x double> %output, i64 1)
  %output38 = fmul double %w35, %return37
  %output40 = fmul double %output38, %output25
  %return42 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output34, double %output40, i64 1)
  %output44 = extractvalue { double, <2 x double> } %return42, 1
  store <2 x double> %output44, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_RECTANGLES@UUFU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %rect) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %rect4 = load <2 x double>, <2 x double>* %rect
  %return = call double @"getcomp@FUI"(<2 x double> %rect4, i64 0)
  %return5 = fcmp oeq double %return, 0.000000e+00
  %w7 = load double, double* %w
  br i1 %return5, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output9 = fmul double %w7, %output2
  %tmp = load <2 x double>, <2 x double>* %p
  %return10 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output9, i64 0)
  %output12 = extractvalue { double, <2 x double> } %return10, 1
  store <2 x double> %output12, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %output17 = call double @"div@FF"(double %output2, double %return)
  %return18 = call i64 @"floor@IF"(double %output17)
  %output19 = mul i64 2, %return18
  %output20 = add i64 %output19, 1
  %rect21 = load <2 x double>, <2 x double>* %rect
  %return22 = call double @"getcomp@FUI"(<2 x double> %rect21, i64 0)
  %cast = sitofp i64 %output20 to double
  %output23 = fmul double %cast, %return22
  %output25 = fsub double %output23, %output2
  %output26 = fmul double %w7, %output25
  %tmp27 = load <2 x double>, <2 x double>* %p
  %return28 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp27, double %output26, i64 0)
  %output30 = extractvalue { double, <2 x double> } %return28, 1
  store <2 x double> %output30, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  %rect31 = load <2 x double>, <2 x double>* %rect
  %return32 = call double @"getcomp@FUI"(<2 x double> %rect31, i64 1)
  %return33 = fcmp oeq double %return32, 0.000000e+00
  %w38 = load double, double* %w
  br i1 %return33, label %true35, label %false36

true35:                                           ; preds = %end
  %output40 = fmul double %w38, %output3
  %tmp41 = load <2 x double>, <2 x double>* %p
  %return42 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp41, double %output40, i64 1)
  %output44 = extractvalue { double, <2 x double> } %return42, 1
  store <2 x double> %output44, <2 x double>* %p
  br label %end37

false36:                                          ; preds = %end
  %output49 = call double @"div@FF"(double %output3, double %return32)
  %return50 = call i64 @"floor@IF"(double %output49)
  %output51 = mul i64 2, %return50
  %output52 = add i64 %output51, 1
  %rect53 = load <2 x double>, <2 x double>* %rect
  %return54 = call double @"getcomp@FUI"(<2 x double> %rect53, i64 1)
  %cast55 = sitofp i64 %output52 to double
  %output56 = fmul double %cast55, %return54
  %output58 = fsub double %output56, %output3
  %output59 = fmul double %w38, %output58
  %tmp60 = load <2 x double>, <2 x double>* %p
  %return61 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp60, double %output59, i64 1)
  %output63 = extractvalue { double, <2 x double> } %return61, 1
  store <2 x double> %output63, <2 x double>* %p
  br label %end37

end37:                                            ; preds = %false36, %true35
  ret void
}

; Function Attrs: nounwind
declare i64 @"floor@IF"(double) #2

; Function Attrs: alwaysinline nounwind
define private void @"V_RADIALBLUR@UUFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %angle) #1 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %m_spin = alloca double
  %m_zoom = alloca double
  %0 = alloca double
  %1 = alloca <2 x double>
  %2 = alloca <2 x double>
  %3 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  store double 0.000000e+00, double* %m_spin, !vex-initializer-store !3
  store double 0.000000e+00, double* %m_zoom, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %angle4 = load double, double* %angle
  %output5 = fmul double %angle4, 0x400921FB4D12D84A
  %output6 = call double @"div@FF"(double %output5, double 2.000000e+00)
  store double %output6, double* %0
  call void @"sincos@FFF"(double* %0, double* %m_spin, double* %m_zoom)
  %w7 = load double, double* %w
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return8 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output9 = fadd double %return, %return8
  %return10 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output11 = fadd double %output9, %return10
  %return12 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output13 = fadd double %output11, %return12
  %output14 = fsub double %output13, 2.000000e+00
  %output15 = fmul double %w7, %output14
  %_p16 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p16, <2 x double>* %1
  %SQRT = call double @"SQRT@FU"(<2 x double>* %1)
  %_p17 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p17, <2 x double>* %2
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %2)
  %m_spin18 = load double, double* %m_spin
  %output20 = fmul double %m_spin18, %output15
  %output21 = fadd double %ATANYX, %output20
  store double %output21, double* %3
  call void @"sincos@FFF"(double* %3, double* %sa, double* %ca)
  %m_zoom23 = load double, double* %m_zoom
  %output25 = fmul double %m_zoom23, %output15
  %output26 = fsub double %output25, 1.000000e+00
  %ca28 = load double, double* %ca
  %output29 = fmul double %SQRT, %ca28
  %output32 = fmul double %output26, %output2
  %output33 = fadd double %output29, %output32
  %tmp = load <2 x double>, <2 x double>* %p
  %return34 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output33, i64 0)
  %output36 = extractvalue { double, <2 x double> } %return34, 1
  store <2 x double> %output36, <2 x double>* %p
  %sa38 = load double, double* %sa
  %output39 = fmul double %SQRT, %sa38
  %output42 = fmul double %output26, %output3
  %output43 = fadd double %output39, %output42
  %return45 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output36, double %output43, i64 1)
  %output47 = extractvalue { double, <2 x double> } %return45, 1
  store <2 x double> %output47, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_PIE@UFFFF"(<2 x double>* %p, double* %w, double* %slices, double* %thickness, double* %rotation) #1 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %slices1 = load double, double* %slices
  %output = fmul double %return, %slices1
  %cast = fptosi double %output to i64
  %cast2 = sitofp i64 %cast to double
  %rotation3 = load double, double* %rotation
  %return5 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %thickness6 = load double, double* %thickness
  %output7 = fmul double %return5, %thickness6
  %output8 = fadd double %cast2, %output7
  %output9 = fmul double 0x401921FB4D12D84A, %output8
  %slices10 = load double, double* %slices
  %output11 = call double @"div@FF"(double %output9, double %slices10)
  %output12 = fadd double %rotation3, %output11
  %w13 = load double, double* %w
  %return14 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output15 = fmul double %w13, %return14
  store double %output12, double* %0
  call void @"sincos@FFF"(double* %0, double* %sa, double* %ca)
  %ca18 = load double, double* %ca
  %output19 = fmul double %output15, %ca18
  %tmp = load <2 x double>, <2 x double>* %p
  %return20 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output19, i64 0)
  %output22 = extractvalue { double, <2 x double> } %return20, 1
  store <2 x double> %output22, <2 x double>* %p
  %sa24 = load double, double* %sa
  %output25 = fmul double %output15, %sa24
  %return27 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output22, double %output25, i64 1)
  %output29 = extractvalue { double, <2 x double> } %return27, 1
  store <2 x double> %output29, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_ARCH@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %sinr = alloca double
  %cosr = alloca double
  %0 = alloca double
  store double 0.000000e+00, double* %sinr, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosr, !vex-initializer-store !3
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %w1 = load double, double* %w
  %output = fmul double %return, %w1
  %output2 = fmul double %output, 0x400921FB4D12D84A
  store double %output2, double* %0
  call void @"sincos@FFF"(double* %0, double* %sinr, double* %cosr)
  %w4 = load double, double* %w
  %sinr5 = load double, double* %sinr
  %output6 = fmul double %w4, %sinr5
  %tmp = load <2 x double>, <2 x double>* %p
  %return7 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output6, i64 0)
  %output9 = extractvalue { double, <2 x double> } %return7, 1
  store <2 x double> %output9, <2 x double>* %p
  %w10 = load double, double* %w
  %sinr11 = load double, double* %sinr
  %output13 = fmul double %sinr11, %sinr11
  %output14 = fmul double %w10, %output13
  %cosr15 = load double, double* %cosr
  %output16 = call double @"div@FF"(double %output14, double %cosr15)
  %return18 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output9, double %output16, i64 1)
  %output20 = extractvalue { double, <2 x double> } %return18, 1
  store <2 x double> %output20, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_TANGENT@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %w4 = load double, double* %w
  %return = call double @"sin@FF"(double %output2)
  %return7 = call double @"cos@FF"(double %output3)
  %output8 = call double @"div@FF"(double %return, double %return7)
  %output9 = fmul double %w4, %output8
  %tmp = load <2 x double>, <2 x double>* %p
  %return10 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output9, i64 0)
  %output12 = extractvalue { double, <2 x double> } %return10, 1
  store <2 x double> %output12, <2 x double>* %p
  %w13 = load double, double* %w
  %return15 = call double @"tan@FF"(double %output3)
  %output16 = fmul double %w13, %return15
  %return18 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output12, double %output16, i64 1)
  %output20 = extractvalue { double, <2 x double> } %return18, 1
  store <2 x double> %output20, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SQUARE@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %w1 = load double, double* %w
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output = fsub double %return, 5.000000e-01
  %output2 = fmul double %w1, %output
  %tmp = load <2 x double>, <2 x double>* %p
  %return3 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output2, i64 0)
  %output5 = extractvalue { double, <2 x double> } %return3, 1
  store <2 x double> %output5, <2 x double>* %p
  %w6 = load double, double* %w
  %return7 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output8 = fsub double %return7, 5.000000e-01
  %output9 = fmul double %w6, %output8
  %tmp10 = load <2 x double>, <2 x double>* %p
  %return11 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp10, double %output9, i64 1)
  %output13 = extractvalue { double, <2 x double> } %return11, 1
  store <2 x double> %output13, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_RAYS@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %w4 = load double, double* %w
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output5 = fmul double %w4, %return
  %output6 = fmul double %output5, 0x400921FB4D12D84A
  %w7 = load double, double* %w
  %_p8 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p8, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %output9 = fadd double %SUMSQ, 0x3CB0000000000000
  %output10 = call double @"div@FF"(double %w7, double %output9)
  %w11 = load double, double* %w
  %return13 = call double @"tan@FF"(double %output6)
  %output14 = fmul double %w11, %return13
  %output16 = fmul double %output14, %output10
  %return19 = call double @"cos@FF"(double %output2)
  %output20 = fmul double %output16, %return19
  %tmp = load <2 x double>, <2 x double>* %p
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output20, i64 0)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  %return26 = call double @"sin@FF"(double %output3)
  %output27 = fmul double %output16, %return26
  %return29 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output23, double %output27, i64 1)
  %output31 = extractvalue { double, <2 x double> } %return29, 1
  store <2 x double> %output31, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_BLADE@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %sinr = alloca double
  %cosr = alloca double
  %0 = alloca <2 x double>
  %1 = alloca double
  store double 0.000000e+00, double* %sinr, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosr, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %w4 = load double, double* %w
  %output5 = fmul double %return, %w4
  %_p6 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p6, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %output7 = fmul double %output5, %SQRT
  store double %output7, double* %1
  call void @"sincos@FFF"(double* %1, double* %sinr, double* %cosr)
  %w9 = load double, double* %w
  %output11 = fmul double %w9, %output2
  %cosr12 = load double, double* %cosr
  %sinr13 = load double, double* %sinr
  %output14 = fadd double %cosr12, %sinr13
  %output15 = fmul double %output11, %output14
  %tmp = load <2 x double>, <2 x double>* %p
  %return16 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output15, i64 0)
  %output18 = extractvalue { double, <2 x double> } %return16, 1
  store <2 x double> %output18, <2 x double>* %p
  %w19 = load double, double* %w
  %output21 = fmul double %w19, %output2
  %cosr22 = load double, double* %cosr
  %sinr23 = load double, double* %sinr
  %output24 = fsub double %cosr22, %sinr23
  %output25 = fmul double %output21, %output24
  %return27 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output18, double %output25, i64 1)
  %output29 = extractvalue { double, <2 x double> } %return27, 1
  store <2 x double> %output29, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SECANT2@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  %w2 = load double, double* %w
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %output = fmul double %w2, %SQRT
  %return5 = call double @"cos@FF"(double %output)
  %output9 = call double @"div@FF"(double 1.000000e+00, double %return5)
  %w10 = load double, double* %w
  %output12 = fmul double %w10, %return
  %tmp = load <2 x double>, <2 x double>* %p
  %return13 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output12, i64 0)
  %output15 = extractvalue { double, <2 x double> } %return13, 1
  store <2 x double> %output15, <2 x double>* %p
  %return17 = fcmp olt double %return5, 0.000000e+00
  %w19 = load double, double* %w
  %output21 = fadd double %output9, 1.000000e+00
  %output22 = fmul double %w19, %output21
  %output25 = fsub double %output9, 1.000000e+00
  %output26 = fmul double %w19, %output25
  %phi = select i1 %return17, double %output22, double %output26
  %return28 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output15, double %phi, i64 1)
  %output30 = extractvalue { double, <2 x double> } %return28, 1
  store <2 x double> %output30, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_TWINTRIAN@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %sinr = alloca double
  %cosr = alloca double
  %0 = alloca <2 x double>
  %1 = alloca double
  store double 0.000000e+00, double* %sinr, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosr, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %w4 = load double, double* %w
  %output5 = fmul double %return, %w4
  %_p6 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p6, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %output7 = fmul double %output5, %SQRT
  store double %output7, double* %1
  call void @"sincos@FFF"(double* %1, double* %sinr, double* %cosr)
  %sinr9 = load double, double* %sinr
  %output11 = fmul double %sinr9, %sinr9
  %return12 = call double @"log10@FF"(double %output11)
  %cosr13 = load double, double* %cosr
  %output14 = fadd double %return12, %cosr13
  %return16 = call i64 @"isfinite@IF"(double %output14)
  %return17 = call i64 @"not@II"(i64 %return16)
  %return19 = call i64 @"isnan@IF"(double %output14)
  %return20 = call i64 @"or@III"(i64 %return17, i64 %return19)
  %2 = icmp ne i64 %return20, 0
  br i1 %2, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %return21 = call double @"neg@FF"(double 3.000000e+01)
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %diff.0 = phi double [ %return21, %true ], [ %output14, %__llvm_entry ]
  %w22 = load double, double* %w
  %output24 = fmul double %w22, %output2
  %output26 = fmul double %output24, %diff.0
  %tmp = load <2 x double>, <2 x double>* %p
  %return27 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output26, i64 0)
  %output29 = extractvalue { double, <2 x double> } %return27, 1
  store <2 x double> %output29, <2 x double>* %p
  %w30 = load double, double* %w
  %output32 = fmul double %w30, %output2
  %sinr34 = load double, double* %sinr
  %output35 = fmul double %sinr34, 0x400921FB4D12D84A
  %output36 = fsub double %diff.0, %output35
  %output37 = fmul double %output32, %output36
  %return39 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output29, double %output37, i64 1)
  %output41 = extractvalue { double, <2 x double> } %return39, 1
  store <2 x double> %output41, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind readnone
declare double @"log10@FF"(double) #0

; Function Attrs: alwaysinline nounwind
define private void @"V_CROSS@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %output6 = fmul double %output2, %output2
  %output9 = fmul double %output3, %output3
  %output10 = fsub double %output6, %output9
  %w11 = load double, double* %w
  %output14 = fmul double %output10, %output10
  %output15 = fadd double %output14, 0x3CB0000000000000
  %output16 = call double @"div@FF"(double 1.000000e+00, double %output15)
  %return = call double @"sqrt@FF"(double %output16)
  %output17 = fmul double %w11, %return
  %output20 = fmul double %output2, %output17
  %tmp = load <2 x double>, <2 x double>* %p
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output20, i64 0)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  %output26 = fmul double %output3, %output17
  %return28 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output23, double %output26, i64 1)
  %output30 = extractvalue { double, <2 x double> } %return28, 1
  store <2 x double> %output30, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_DISC2@UUFFFFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %rot, double* %twist, double* %disc2_timespi, double* %disc2_sinadd, double* %disc2_cosadd) #1 {
__llvm_entry:
  %sinr = alloca double
  %cosr = alloca double
  %0 = alloca double
  %1 = alloca <2 x double>
  store double 0.000000e+00, double* %sinr, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosr, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %disc2_timespi4 = load double, double* %disc2_timespi
  %output7 = fadd double %output2, %output3
  %output8 = fmul double %disc2_timespi4, %output7
  store double %output8, double* %0
  call void @"sincos@FFF"(double* %0, double* %sinr, double* %cosr)
  %w10 = load double, double* %w
  %_p11 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p11, <2 x double>* %1
  %ATAN = call double @"ATAN@FU"(<2 x double>* %1)
  %output12 = fmul double %w10, %ATAN
  %output13 = call double @"div@FF"(double %output12, double 0x400921FB4D12D84A)
  %sinr14 = load double, double* %sinr
  %disc2_cosadd15 = load double, double* %disc2_cosadd
  %output16 = fadd double %sinr14, %disc2_cosadd15
  %output18 = fmul double %output16, %output13
  %tmp = load <2 x double>, <2 x double>* %p
  %return = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output18, i64 0)
  %output20 = extractvalue { double, <2 x double> } %return, 1
  store <2 x double> %output20, <2 x double>* %p
  %cosr21 = load double, double* %cosr
  %disc2_sinadd22 = load double, double* %disc2_sinadd
  %output23 = fadd double %cosr21, %disc2_sinadd22
  %output25 = fmul double %output23, %output13
  %return27 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output20, double %output25, i64 1)
  %output29 = extractvalue { double, <2 x double> } %return27, 1
  store <2 x double> %output29, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_DISC2_FF@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %rot, double* %twist) #1 {
__llvm_entry:
  %precalc = alloca <3 x double>
  %0 = alloca double
  %1 = alloca double
  %2 = alloca <2 x double>
  %3 = alloca double
  %4 = alloca double
  %5 = alloca double
  %6 = alloca double
  %7 = alloca double
  %8 = alloca double
  store <3 x double> zeroinitializer, <3 x double>* %precalc, !vex-initializer-store !3
  %rot1 = load double, double* %rot
  store double %rot1, double* %0
  %twist2 = load double, double* %twist
  store double %twist2, double* %1
  call void @"precalc_V_DISC2@VFF"(<3 x double>* %precalc, double* %0, double* %1)
  %precalc3 = load <3 x double>, <3 x double>* %precalc
  %output = call { double, double, double } @"assign@FFFV"(<3 x double> %precalc3)
  %output4 = extractvalue { double, double, double } %output, 0
  %output5 = extractvalue { double, double, double } %output, 1
  %output6 = extractvalue { double, double, double } %output, 2
  %_p7 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p7, <2 x double>* %2
  %w8 = load double, double* %w
  store double %w8, double* %3
  store double %output4, double* %6
  store double %output5, double* %7
  store double %output6, double* %8
  call void @"V_DISC2@UUFFFFFF"(<2 x double>* %p, <2 x double>* %2, double* %3, double* %4, double* %5, double* %6, double* %7, double* %8)
  ret void
}

; Function Attrs: nounwind
declare { double, double, double } @"assign@FFFV"(<3 x double>) #2

; Function Attrs: alwaysinline nounwind
define private void @"V_SUPERSHAPE@UUFFFFV"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %ss_m, double* %ss_rnd, double* %ss_holes, <3 x double>* %ss_n) #1 {
__llvm_entry:
  %st = alloca double
  %ct = alloca double
  %0 = alloca <2 x double>
  %1 = alloca double
  %2 = alloca <2 x double>
  store double 0.000000e+00, double* %st, !vex-initializer-store !3
  store double 0.000000e+00, double* %ct, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %ss_n4 = load <3 x double>, <3 x double>* %ss_n
  %output5 = call { double, double, double } @"assign@FFFV"(<3 x double> %ss_n4)
  %output6 = extractvalue { double, double, double } %output5, 0
  %output7 = extractvalue { double, double, double } %output5, 1
  %output8 = extractvalue { double, double, double } %output5, 2
  %ss_m9 = load double, double* %ss_m
  %output10 = call double @"div@FF"(double %ss_m9, double 4.000000e+00)
  %return = call double @"neg@FF"(double 1.000000e+00)
  %output12 = call double @"div@FF"(double %return, double %output6)
  %_p14 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p14, <2 x double>* %0
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %0)
  %output15 = fmul double %output10, %ATANYX
  %output16 = fadd double %output15, 7.853981e-01
  store double %output16, double* %1
  call void @"sincos@FFF"(double* %1, double* %st, double* %ct)
  %ct18 = load double, double* %ct
  %return19 = call double @"abs@FF"(double %ct18)
  %return22 = call double @"pow@FFF"(double %return19, double %output7)
  %st23 = load double, double* %st
  %return24 = call double @"abs@FF"(double %st23)
  %return27 = call double @"pow@FFF"(double %return24, double %output8)
  %_p28 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p28, <2 x double>* %2
  %SQRT29 = call double @"SQRT@FU"(<2 x double>* %2)
  %w30 = load double, double* %w
  %ss_rnd31 = load double, double* %ss_rnd
  %return32 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output33 = fmul double %ss_rnd31, %return32
  %ss_rnd34 = load double, double* %ss_rnd
  %output35 = fsub double 1.000000e+00, %ss_rnd34
  %output37 = fmul double %output35, %SQRT29
  %output38 = fadd double %output33, %output37
  %ss_holes39 = load double, double* %ss_holes
  %output40 = fsub double %output38, %ss_holes39
  %output41 = fmul double %w30, %output40
  %output44 = fadd double %return22, %return27
  %return46 = call double @"pow@FFF"(double %output44, double %output12)
  %output47 = fmul double %output41, %return46
  %output49 = call double @"div@FF"(double %output47, double %SQRT29)
  %output52 = fmul double %output49, %output2
  %tmp = load <2 x double>, <2 x double>* %p
  %return53 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output52, i64 0)
  %output55 = extractvalue { double, <2 x double> } %return53, 1
  store <2 x double> %output55, <2 x double>* %p
  %output58 = fmul double %output49, %output3
  %return60 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output55, double %output58, i64 1)
  %output62 = extractvalue { double, <2 x double> } %return60, 1
  store <2 x double> %output62, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_FLOWER@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %petals, double* %holes) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %_p4 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p4, <2 x double>* %0
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %0)
  %w5 = load double, double* %w
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %holes6 = load double, double* %holes
  %output7 = fsub double %return, %holes6
  %output8 = fmul double %w5, %output7
  %petals9 = load double, double* %petals
  %output11 = fmul double %petals9, %ATANYX
  %return12 = call double @"cos@FF"(double %output11)
  %output13 = fmul double %output8, %return12
  %_p14 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p14, <2 x double>* %1
  %SQRT = call double @"SQRT@FU"(<2 x double>* %1)
  %output15 = call double @"div@FF"(double %output13, double %SQRT)
  %output18 = fmul double %output15, %output2
  %tmp = load <2 x double>, <2 x double>* %p
  %return19 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output18, i64 0)
  %output21 = extractvalue { double, <2 x double> } %return19, 1
  store <2 x double> %output21, <2 x double>* %p
  %output24 = fmul double %output15, %output3
  %return26 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output21, double %output24, i64 1)
  %output28 = extractvalue { double, <2 x double> } %return26, 1
  store <2 x double> %output28, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_CONIC@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %eccentricity, double* %holes) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %_p4 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p4, <2 x double>* %0
  %SQRT5 = call double @"SQRT@FU"(<2 x double>* %0)
  %output8 = call double @"div@FF"(double %output2, double %SQRT5)
  %w9 = load double, double* %w
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %holes10 = load double, double* %holes
  %output11 = fsub double %return, %holes10
  %output12 = fmul double %w9, %output11
  %eccentricity13 = load double, double* %eccentricity
  %output14 = fmul double %output12, %eccentricity13
  %output17 = fmul double %eccentricity13, %output8
  %output18 = fadd double 1.000000e+00, %output17
  %output19 = call double @"div@FF"(double %output14, double %output18)
  %output21 = call double @"div@FF"(double %output19, double %SQRT5)
  %output24 = fmul double %output21, %output2
  %tmp = load <2 x double>, <2 x double>* %p
  %return25 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output24, i64 0)
  %output27 = extractvalue { double, <2 x double> } %return25, 1
  store <2 x double> %output27, <2 x double>* %p
  %output30 = fmul double %output21, %output3
  %return32 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output27, double %output30, i64 1)
  %output34 = extractvalue { double, <2 x double> } %return32, 1
  store <2 x double> %output34, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_PARABOLA@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %height, double* %width) #1 {
__llvm_entry:
  %sr = alloca double
  %cr = alloca double
  %0 = alloca <2 x double>
  %1 = alloca double
  store double 0.000000e+00, double* %sr, !vex-initializer-store !3
  store double 0.000000e+00, double* %cr, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  store double %SQRT, double* %1
  call void @"sincos@FFF"(double* %1, double* %sr, double* %cr)
  %height3 = load double, double* %height
  %w4 = load double, double* %w
  %output = fmul double %height3, %w4
  %sr5 = load double, double* %sr
  %output6 = fmul double %output, %sr5
  %output8 = fmul double %output6, %sr5
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output9 = fmul double %output8, %return
  %tmp = load <2 x double>, <2 x double>* %p
  %return10 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output9, i64 0)
  %output12 = extractvalue { double, <2 x double> } %return10, 1
  store <2 x double> %output12, <2 x double>* %p
  %width13 = load double, double* %width
  %w14 = load double, double* %w
  %output15 = fmul double %width13, %w14
  %cr16 = load double, double* %cr
  %output17 = fmul double %output15, %cr16
  %return18 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output19 = fmul double %output17, %return18
  %tmp20 = load <2 x double>, <2 x double>* %p
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp20, double %output19, i64 1)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_BENT2@UUFU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %bent2) #1 {
__llvm_entry:
  %bent21 = load <2 x double>, <2 x double>* %bent2
  %return = call double @"getcomp@FUI"(<2 x double> %bent21, i64 0)
  %return3 = call double @"getcomp@FUI"(<2 x double> %bent21, i64 1)
  %_p4 = load <2 x double>, <2 x double>* %_p
  %return5 = call double @"getcomp@FUI"(<2 x double> %_p4, i64 0)
  %return7 = call double @"getcomp@FUI"(<2 x double> %_p4, i64 1)
  %return9 = fcmp olt double %return5, 0.000000e+00
  br i1 %return9, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %output = fmul double %return5, %return
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %nx.0 = phi double [ %output, %true ], [ %return5, %__llvm_entry ]
  %return14 = fcmp olt double %return7, 0.000000e+00
  br i1 %return14, label %true16, label %end17

true16:                                           ; preds = %end
  %output20 = fmul double %return7, %return3
  br label %end17

end17:                                            ; preds = %true16, %end
  %ny.0 = phi double [ %output20, %true16 ], [ %return7, %end ]
  %w21 = load double, double* %w
  %output23 = fmul double %w21, %nx.0
  %tmp = load <2 x double>, <2 x double>* %p
  %return24 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output23, i64 0)
  %output26 = extractvalue { double, <2 x double> } %return24, 1
  store <2 x double> %output26, <2 x double>* %p
  %w27 = load double, double* %w
  %output29 = fmul double %w27, %ny.0
  %return31 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output26, double %output29, i64 1)
  %output33 = extractvalue { double, <2 x double> } %return31, 1
  store <2 x double> %output33, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_BIPOLAR@UUFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %shift) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca double
  %2 = alloca double
  %3 = alloca double
  %4 = alloca double
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %_p4 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p4, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %output6 = fadd double %SUMSQ, 1.000000e+00
  %output8 = fmul double 2.000000e+00, %output2
  %return = call double @"neg@FF"(double 0x3FF921FB4D12D84A)
  %shift9 = load double, double* %shift
  %output10 = fmul double %return, %shift9
  %output12 = fmul double 2.000000e+00, %output3
  %output14 = fsub double %SUMSQ, 1.000000e+00
  %return15 = call double @"atan2@FFF"(double %output12, double %output14)
  %output16 = fmul double 5.000000e-01, %return15
  %output18 = fadd double %output16, %output10
  %return20 = fcmp ogt double %output18, 0x3FF921FB4D12D84A
  br i1 %return20, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output24 = fadd double %output18, 0x3FF921FB4D12D84A
  store double %output24, double* %1
  store double 0x400921FB4D12D84A, double* %2
  %fmod = call double @"fmod@FFF"(double* %1, double* %2)
  %output25 = fadd double %return, %fmod
  br label %end

false:                                            ; preds = %__llvm_entry
  %return28 = fcmp olt double %output18, %return
  br i1 %return28, label %true30, label %end

end:                                              ; preds = %false, %true30, %true
  %y.0 = phi double [ %output25, %true ], [ %output35, %true30 ], [ %output18, %false ]
  %w36 = load double, double* %w
  %output37 = fmul double %w36, 2.500000e-01
  %output38 = fmul double %output37, 0x3FE45F306DC9C883
  %output41 = fadd double %output6, %output8
  %output44 = fsub double %output6, %output8
  %output45 = call double @"div@FF"(double %output41, double %output44)
  %return46 = call double @"log@FF"(double %output45)
  %output47 = fmul double %output38, %return46
  %tmp = load <2 x double>, <2 x double>* %p
  %return48 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output47, i64 0)
  %output50 = extractvalue { double, <2 x double> } %return48, 1
  store <2 x double> %output50, <2 x double>* %p
  %w51 = load double, double* %w
  %output52 = fmul double %w51, 0x3FE45F306DC9C883
  %output54 = fmul double %output52, %y.0
  %return56 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output50, double %output54, i64 1)
  %output58 = extractvalue { double, <2 x double> } %return56, 1
  store <2 x double> %output58, <2 x double>* %p
  ret void

true30:                                           ; preds = %false
  %output33 = fsub double 0x3FF921FB4D12D84A, %output18
  store double %output33, double* %3
  store double 0x400921FB4D12D84A, double* %4
  %fmod34 = call double @"fmod@FFF"(double* %3, double* %4)
  %output35 = fsub double 0x3FF921FB4D12D84A, %fmod34
  br label %end
}

; Function Attrs: nounwind readnone
declare double @"log@FF"(double) #0

; Function Attrs: alwaysinline nounwind
define private void @"V_BOARDERS@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %return = call double @"rint@FF"(double %output2)
  %return6 = call double @"rint@FF"(double %output3)
  %output9 = fsub double %output2, %return
  %output12 = fsub double %output3, %return6
  %return13 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return14 = fcmp oge double %return13, 7.500000e-01
  br i1 %return14, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output17 = fmul double %output9, 5.000000e-01
  %output19 = fadd double %output17, %return
  %tmp = load <2 x double>, <2 x double>* %p
  %return20 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output19, i64 0)
  %output22 = extractvalue { double, <2 x double> } %return20, 1
  store <2 x double> %output22, <2 x double>* %p
  %output24 = fmul double %output12, 5.000000e-01
  %output26 = fadd double %output24, %return6
  %return28 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output22, double %output26, i64 1)
  %output30 = extractvalue { double, <2 x double> } %return28, 1
  store <2 x double> %output30, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %return32 = call double @"abs@FF"(double %output9)
  %return34 = call double @"abs@FF"(double %output12)
  %return35 = fcmp oge double %return32, %return34
  br i1 %return35, label %true37, label %false38

end:                                              ; preds = %true101, %false102, %true43, %false44, %true
  ret void

true37:                                           ; preds = %false
  %return41 = fcmp oge double %output9, 0.000000e+00
  %w46 = load double, double* %w
  %output48 = fmul double %output9, 5.000000e-01
  %output50 = fadd double %output48, %return
  br i1 %return41, label %true43, label %false44

false38:                                          ; preds = %false
  %return99 = fcmp oge double %output12, 0.000000e+00
  %w104 = load double, double* %w
  %output106 = fmul double %output12, 5.000000e-01
  %output108 = fadd double %output106, %return6
  br i1 %return99, label %true101, label %false102

true43:                                           ; preds = %true37
  %output51 = fadd double %output50, 2.500000e-01
  %output52 = fmul double %w46, %output51
  %tmp53 = load <2 x double>, <2 x double>* %p
  %return54 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp53, double %output52, i64 0)
  %output56 = extractvalue { double, <2 x double> } %return54, 1
  store <2 x double> %output56, <2 x double>* %p
  %w57 = load double, double* %w
  %output59 = fmul double %output12, 5.000000e-01
  %output61 = fadd double %output59, %return6
  %output63 = fmul double 2.500000e-01, %output12
  %output65 = call double @"div@FF"(double %output63, double %output9)
  %output66 = fadd double %output61, %output65
  %output67 = fmul double %w57, %output66
  %return69 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output56, double %output67, i64 1)
  %output71 = extractvalue { double, <2 x double> } %return69, 1
  store <2 x double> %output71, <2 x double>* %p
  br label %end

false44:                                          ; preds = %true37
  %output77 = fsub double %output50, 2.500000e-01
  %output78 = fmul double %w46, %output77
  %tmp79 = load <2 x double>, <2 x double>* %p
  %return80 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp79, double %output78, i64 0)
  %output82 = extractvalue { double, <2 x double> } %return80, 1
  store <2 x double> %output82, <2 x double>* %p
  %w83 = load double, double* %w
  %output85 = fmul double %output12, 5.000000e-01
  %output87 = fadd double %output85, %return6
  %output89 = fmul double 2.500000e-01, %output12
  %output91 = call double @"div@FF"(double %output89, double %output9)
  %output92 = fsub double %output87, %output91
  %output93 = fmul double %w83, %output92
  %return95 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output82, double %output93, i64 1)
  %output97 = extractvalue { double, <2 x double> } %return95, 1
  store <2 x double> %output97, <2 x double>* %p
  br label %end

true101:                                          ; preds = %false38
  %output109 = fadd double %output108, 2.500000e-01
  %output110 = fmul double %w104, %output109
  %tmp111 = load <2 x double>, <2 x double>* %p
  %return112 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp111, double %output110, i64 1)
  %output114 = extractvalue { double, <2 x double> } %return112, 1
  store <2 x double> %output114, <2 x double>* %p
  %w115 = load double, double* %w
  %output117 = fmul double %output9, 5.000000e-01
  %output119 = fadd double %output117, %return
  %output122 = call double @"div@FF"(double %output9, double %output12)
  %output123 = fmul double %output122, 2.500000e-01
  %output124 = fadd double %output119, %output123
  %output125 = fmul double %w115, %output124
  %return127 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output114, double %output125, i64 0)
  %output129 = extractvalue { double, <2 x double> } %return127, 1
  store <2 x double> %output129, <2 x double>* %p
  br label %end

false102:                                         ; preds = %false38
  %output135 = fsub double %output108, 2.500000e-01
  %output136 = fmul double %w104, %output135
  %tmp137 = load <2 x double>, <2 x double>* %p
  %return138 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp137, double %output136, i64 1)
  %output140 = extractvalue { double, <2 x double> } %return138, 1
  store <2 x double> %output140, <2 x double>* %p
  %w141 = load double, double* %w
  %output143 = fmul double %output9, 5.000000e-01
  %output145 = fadd double %output143, %return
  %output148 = call double @"div@FF"(double %output9, double %output12)
  %output149 = fmul double %output148, 2.500000e-01
  %output150 = fsub double %output145, %output149
  %output151 = fmul double %w141, %output150
  %return153 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output140, double %output151, i64 0)
  %output155 = extractvalue { double, <2 x double> } %return153, 1
  store <2 x double> %output155, <2 x double>* %p
  br label %end
}

; Function Attrs: nounwind readnone
declare double @"rint@FF"(double) #0

; Function Attrs: alwaysinline nounwind
define private void @"V_BUTTERFLY@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %w4 = load double, double* %w
  %output5 = fmul double %w4, 0x3FF4D8D7A58FA311
  %output7 = fmul double %output3, 2.000000e+00
  %output11 = fmul double %output3, %output2
  %return = call double @"abs@FF"(double %output11)
  %output14 = fmul double %output2, %output2
  %output15 = fadd double 0x3CB0000000000000, %output14
  %output18 = fmul double %output7, %output7
  %output19 = fadd double %output15, %output18
  %output20 = call double @"div@FF"(double %return, double %output19)
  %return21 = call double @"sqrt@FF"(double %output20)
  %output22 = fmul double %output5, %return21
  %output25 = fmul double %output22, %output2
  %tmp = load <2 x double>, <2 x double>* %p
  %return26 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output25, i64 0)
  %output28 = extractvalue { double, <2 x double> } %return26, 1
  store <2 x double> %output28, <2 x double>* %p
  %output31 = fmul double %output22, %output7
  %return33 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output28, double %output31, i64 1)
  %output35 = extractvalue { double, <2 x double> } %return33, 1
  store <2 x double> %output35, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_CELL@UUFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %size) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %size4 = load double, double* %size
  %output5 = call double @"div@FF"(double 1.000000e+00, double %size4)
  %output8 = fmul double %output2, %output5
  %return = call double @"floor@FF"(double %output8)
  %output11 = fmul double %output3, %output5
  %return12 = call double @"floor@FF"(double %output11)
  %output16 = fmul double %return, %size4
  %output17 = fsub double %output2, %output16
  %output21 = fmul double %return12, %size4
  %output22 = fsub double %output3, %output21
  %return24 = fcmp oge double %return12, 0.000000e+00
  %return27 = fcmp oge double %return, 0.000000e+00
  br i1 %return24, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output33 = fmul double %return12, 2.000000e+00
  br i1 %return27, label %true29, label %false30

false:                                            ; preds = %__llvm_entry
  %output49 = fmul double 2.000000e+00, %return12
  %output50 = fadd double %output49, 1.000000e+00
  %return51 = call double @"neg@FF"(double %output50)
  br i1 %return27, label %true45, label %false46

end:                                              ; preds = %true45, %false46, %true29, %false30
  %y.0 = phi double [ %output33, %true29 ], [ %output33, %false30 ], [ %return51, %true45 ], [ %return51, %false46 ]
  %x.0 = phi double [ %output35, %true29 ], [ %return41, %false30 ], [ %output53, %true45 ], [ %return61, %false46 ]
  %w62 = load double, double* %w
  %size65 = load double, double* %size
  %output66 = fmul double %x.0, %size65
  %output67 = fadd double %output17, %output66
  %output68 = fmul double %w62, %output67
  %tmp = load <2 x double>, <2 x double>* %p
  %return69 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output68, i64 0)
  %output71 = extractvalue { double, <2 x double> } %return69, 1
  store <2 x double> %output71, <2 x double>* %p
  %w72 = load double, double* %w
  %size75 = load double, double* %size
  %output76 = fmul double %y.0, %size75
  %output77 = fadd double %output22, %output76
  %output78 = fmul double %w72, %output77
  %return79 = call double @"neg@FF"(double %output78)
  %return81 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output71, double %return79, i64 1)
  %output83 = extractvalue { double, <2 x double> } %return81, 1
  store <2 x double> %output83, <2 x double>* %p
  ret void

true29:                                           ; preds = %true
  %output35 = fmul double %return, 2.000000e+00
  br label %end

false30:                                          ; preds = %true
  %output39 = fmul double 2.000000e+00, %return
  %output40 = fadd double %output39, 1.000000e+00
  %return41 = call double @"neg@FF"(double %output40)
  br label %end

true45:                                           ; preds = %false
  %output53 = fmul double %return, 2.000000e+00
  br label %end

false46:                                          ; preds = %false
  %output59 = fmul double 2.000000e+00, %return
  %output60 = fadd double %output59, 1.000000e+00
  %return61 = call double @"neg@FF"(double %output60)
  br label %end
}

; Function Attrs: alwaysinline nounwind
define private void @"V_CPOW@UUFFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %power, double* %pow_r, double* %pow_i) #1 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %0)
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %1
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %1)
  %return = call double @"log@FF"(double %SUMSQ)
  %output = fmul double 5.000000e-01, %return
  %power3 = load double, double* %power
  %output4 = call double @"div@FF"(double 0x401921FB4D12D84A, double %power3)
  %pow_r5 = load double, double* %pow_r
  %output7 = call double @"div@FF"(double %pow_r5, double %power3)
  %pow_i8 = load double, double* %pow_i
  %output10 = call double @"div@FF"(double %pow_i8, double %power3)
  %output13 = fmul double %output7, %ATANYX
  %output16 = fmul double %output10, %output
  %output17 = fadd double %output13, %output16
  %return20 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output21 = fmul double %power3, %return20
  %return22 = call double @"floor@FF"(double %output21)
  %output23 = fmul double %output4, %return22
  %output24 = fadd double %output17, %output23
  %w25 = load double, double* %w
  %output28 = fmul double %output7, %output
  %output31 = fmul double %output10, %ATANYX
  %output32 = fsub double %output28, %output31
  %return33 = call double @"exp@FF"(double %output32)
  %output34 = fmul double %w25, %return33
  store double %output24, double* %2
  call void @"sincos@FFF"(double* %2, double* %sa, double* %ca)
  %ca37 = load double, double* %ca
  %output38 = fmul double %output34, %ca37
  %tmp = load <2 x double>, <2 x double>* %p
  %return39 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output38, i64 0)
  %output41 = extractvalue { double, <2 x double> } %return39, 1
  store <2 x double> %output41, <2 x double>* %p
  %sa43 = load double, double* %sa
  %output44 = fmul double %output34, %sa43
  %return46 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output41, double %output44, i64 1)
  %output48 = extractvalue { double, <2 x double> } %return46, 1
  store <2 x double> %output48, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_EDISC@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %snv = alloca double
  %csv = alloca double
  %0 = alloca <2 x double>
  %1 = alloca double
  %2 = alloca double
  store double 0.000000e+00, double* %snv, !vex-initializer-store !3
  store double 0.000000e+00, double* %csv, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %_p4 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p4, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %output5 = fadd double %SUMSQ, 1.000000e+00
  %output7 = fmul double 2.000000e+00, %output2
  %output10 = fadd double %output5, %output7
  %return = call double @"sqrt@FF"(double %output10)
  %output13 = fsub double %output5, %output7
  %return14 = call double @"sqrt@FF"(double %output13)
  %output17 = fadd double %return, %return14
  %output18 = fmul double %output17, 5.000000e-01
  store double %output18, double* %1
  %Zeps = call double @"Zeps@FF"(double* %1)
  %output21 = fsub double %Zeps, 1.000000e+00
  %return22 = call double @"sqrt@FF"(double %output21)
  %output23 = fadd double %Zeps, %return22
  %return24 = call double @"log@FF"(double %output23)
  %output27 = call double @"div@FF"(double %output2, double %Zeps)
  %return28 = call double @"acos@FF"(double %output27)
  %return29 = call double @"neg@FF"(double %return28)
  %w30 = load double, double* %w
  %output31 = call double @"div@FF"(double %w30, double 0x402724046ECF9681)
  store double %return24, double* %2
  call void @"sincos@FFF"(double* %2, double* %snv, double* %csv)
  %return34 = call double @"sinh@FF"(double %return29)
  %return36 = call double @"cosh@FF"(double %return29)
  %return38 = fcmp ogt double %output3, 0.000000e+00
  br i1 %return38, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %snv40 = load double, double* %snv
  %return41 = call double @"neg@FF"(double %snv40)
  store double %return41, double* %snv
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %output44 = fmul double %output31, %return36
  %csv45 = load double, double* %csv
  %output46 = fmul double %output44, %csv45
  %tmp47 = load <2 x double>, <2 x double>* %p
  %return48 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp47, double %output46, i64 0)
  %output50 = extractvalue { double, <2 x double> } %return48, 1
  store <2 x double> %output50, <2 x double>* %p
  %output53 = fmul double %output31, %return34
  %snv54 = load double, double* %snv
  %output55 = fmul double %output53, %snv54
  %return57 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output50, double %output55, i64 1)
  %output59 = extractvalue { double, <2 x double> } %return57, 1
  store <2 x double> %output59, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind readnone
declare double @"acos@FF"(double) #0

; Function Attrs: alwaysinline nounwind
define private void @"V_ELLIPTIC@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %_p4 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p4, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %output5 = fadd double %SUMSQ, 1.000000e+00
  %output7 = fmul double 2.000000e+00, %output2
  %output10 = fadd double %output5, %output7
  %return = call double @"sqrt@FF"(double %output10)
  %output13 = fsub double %output5, %output7
  %return14 = call double @"sqrt@FF"(double %output13)
  %output15 = fadd double %return, %return14
  %output16 = fmul double 5.000000e-01, %output15
  %output19 = call double @"div@FF"(double %output2, double %output16)
  %output22 = fmul double %output19, %output19
  %output23 = fsub double 1.000000e+00, %output22
  %output25 = fsub double %output16, 1.000000e+00
  %w26 = load double, double* %w
  %output27 = call double @"div@FF"(double %w26, double 0x3FF921FB4D12D84A)
  %return29 = fcmp olt double %output23, 0.000000e+00
  br i1 %return29, label %end, label %false

false:                                            ; preds = %__llvm_entry
  %return32 = call double @"sqrt@FF"(double %output23)
  br label %end

end:                                              ; preds = %__llvm_entry, %false
  %phi = phi double [ %return32, %false ], [ 0.000000e+00, %__llvm_entry ]
  %return34 = fcmp olt double %output25, 0.000000e+00
  br i1 %return34, label %end38, label %false37

false37:                                          ; preds = %end
  %return40 = call double @"sqrt@FF"(double %output25)
  br label %end38

end38:                                            ; preds = %end, %false37
  %phi41 = phi double [ %return40, %false37 ], [ 0.000000e+00, %end ]
  %return45 = call double @"atan2@FFF"(double %output19, double %phi)
  %output46 = fmul double %output27, %return45
  %tmp47 = load <2 x double>, <2 x double>* %p
  %return48 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp47, double %output46, i64 0)
  %output50 = extractvalue { double, <2 x double> } %return48, 1
  store <2 x double> %output50, <2 x double>* %p
  %return52 = fcmp ogt double %output3, 0.000000e+00
  %output60 = fadd double %output16, %phi41
  %return61 = call double @"log@FF"(double %output60)
  br i1 %return52, label %true54, label %false55

true54:                                           ; preds = %end38
  %output62 = fmul double %output27, %return61
  br label %end56

false55:                                          ; preds = %end38
  %return68 = call double @"neg@FF"(double %return61)
  %output69 = fmul double %output27, %return68
  br label %end56

end56:                                            ; preds = %false55, %true54
  %phi70 = phi double [ %output62, %true54 ], [ %output69, %false55 ]
  %tmp71 = load <2 x double>, <2 x double>* %p
  %return72 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp71, double %phi70, i64 1)
  %output74 = extractvalue { double, <2 x double> } %return72, 1
  store <2 x double> %output74, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_NOISE@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %sinr = alloca double
  %cosr = alloca double
  %0 = alloca double
  store double 0.000000e+00, double* %sinr, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosr, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output4 = fmul double %return, 2.000000e+00
  %output5 = fmul double %output4, 0x400921FB4D12D84A
  store double %output5, double* %0
  call void @"sincos@FFF"(double* %0, double* %sinr, double* %cosr)
  %w7 = load double, double* %w
  %return8 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output9 = fmul double %w7, %return8
  %output12 = fmul double %output2, %output9
  %cosr13 = load double, double* %cosr
  %output14 = fmul double %output12, %cosr13
  %tmp = load <2 x double>, <2 x double>* %p
  %return15 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output14, i64 0)
  %output17 = extractvalue { double, <2 x double> } %return15, 1
  store <2 x double> %output17, <2 x double>* %p
  %output20 = fmul double %output3, %output9
  %sinr21 = load double, double* %sinr
  %output22 = fmul double %output20, %sinr21
  %return24 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output17, double %output22, i64 1)
  %output26 = extractvalue { double, <2 x double> } %return24, 1
  store <2 x double> %output26, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_ESCHER@UUFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %beta) #1 {
__llvm_entry:
  %seb = alloca double
  %ceb = alloca double
  %sn = alloca double
  %cn = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  %3 = alloca double
  store double 0.000000e+00, double* %seb, !vex-initializer-store !3
  store double 0.000000e+00, double* %ceb, !vex-initializer-store !3
  store double 0.000000e+00, double* %sn, !vex-initializer-store !3
  store double 0.000000e+00, double* %cn, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %0)
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %1
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %1)
  %return = call double @"log@FF"(double %SUMSQ)
  %output = fmul double 5.000000e-01, %return
  %beta3 = load double, double* %beta
  store double %beta3, double* %2
  call void @"sincos@FFF"(double* %2, double* %seb, double* %ceb)
  %ceb4 = load double, double* %ceb
  %output5 = fadd double 1.000000e+00, %ceb4
  %output6 = fmul double 5.000000e-01, %output5
  %seb7 = load double, double* %seb
  %output8 = fmul double 5.000000e-01, %seb7
  %w9 = load double, double* %w
  %output12 = fmul double %output6, %output
  %output15 = fmul double %output8, %ATANYX
  %output16 = fsub double %output12, %output15
  %return17 = call double @"exp@FF"(double %output16)
  %output18 = fmul double %w9, %return17
  %output21 = fmul double %output6, %ATANYX
  %output24 = fmul double %output8, %output
  %output25 = fadd double %output21, %output24
  store double %output25, double* %3
  call void @"sincos@FFF"(double* %3, double* %sn, double* %cn)
  %cn28 = load double, double* %cn
  %output29 = fmul double %output18, %cn28
  %tmp = load <2 x double>, <2 x double>* %p
  %return30 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output29, i64 0)
  %output32 = extractvalue { double, <2 x double> } %return30, 1
  store <2 x double> %output32, <2 x double>* %p
  %sn34 = load double, double* %sn
  %output35 = fmul double %output18, %sn34
  %return37 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output32, double %output35, i64 1)
  %output39 = extractvalue { double, <2 x double> } %return37, 1
  store <2 x double> %output39, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_FOCI@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %sn = alloca double
  %cn = alloca double
  %0 = alloca double
  %1 = alloca double
  %2 = alloca double
  store double 0.000000e+00, double* %sn, !vex-initializer-store !3
  store double 0.000000e+00, double* %cn, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %return = call double @"exp@FF"(double %output2)
  %output5 = fmul double %return, 5.000000e-01
  store double %output5, double* %0
  %Zeps = call double @"Zeps@FF"(double* %0)
  %output7 = call double @"div@FF"(double 2.500000e-01, double %Zeps)
  store double %output3, double* %1
  call void @"sincos@FFF"(double* %1, double* %sn, double* %cn)
  %w9 = load double, double* %w
  %output12 = fadd double %output5, %output7
  %cn13 = load double, double* %cn
  %output14 = fsub double %output12, %cn13
  store double %output14, double* %2
  %Zeps15 = call double @"Zeps@FF"(double* %2)
  %output16 = call double @"div@FF"(double %w9, double %Zeps15)
  %output20 = fsub double %output5, %output7
  %output21 = fmul double %output16, %output20
  %tmp22 = load <2 x double>, <2 x double>* %p
  %return23 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp22, double %output21, i64 0)
  %output25 = extractvalue { double, <2 x double> } %return23, 1
  store <2 x double> %output25, <2 x double>* %p
  %sn27 = load double, double* %sn
  %output28 = fmul double %output16, %sn27
  %return30 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output25, double %output28, i64 1)
  %output32 = extractvalue { double, <2 x double> } %return30, 1
  store <2 x double> %output32, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_LAZYSUSAN@UUFFFFU"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %spin, double* %twist, double* %space, <2 x double>* %lazy) #1 {
__llvm_entry:
  %sina = alloca double
  %cosa = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sina, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosa, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %lazy4 = load <2 x double>, <2 x double>* %lazy
  %output5 = call { double, double } @"assign@FFU"(<2 x double> %lazy4)
  %output6 = extractvalue { double, double } %output5, 0
  %output7 = extractvalue { double, double } %output5, 1
  %output10 = fsub double %output2, %output6
  %output13 = fadd double %output3, %output7
  %return = call <2 x double> @"set@UFF"(double %output10, double %output13)
  store <2 x double> %return, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %w17 = load double, double* %w
  %return18 = fcmp olt double %SQRT, %w17
  br i1 %return18, label %true, label %false

true:                                             ; preds = %__llvm_entry
  store <2 x double> %return, <2 x double>* %1
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %1)
  %spin23 = load double, double* %spin
  %output24 = fadd double %ATANYX, %spin23
  %twist25 = load double, double* %twist
  %w26 = load double, double* %w
  %output28 = fsub double %w26, %SQRT
  %output29 = fmul double %twist25, %output28
  %output30 = fadd double %output24, %output29
  store double %output30, double* %2
  call void @"sincos@FFF"(double* %2, double* %sina, double* %cosa)
  %w32 = load double, double* %w
  %output34 = fmul double %w32, %SQRT
  %cosa36 = load double, double* %cosa
  %output37 = fmul double %output34, %cosa36
  %output39 = fadd double %output37, %output6
  %tmp = load <2 x double>, <2 x double>* %p
  %return40 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output39, i64 0)
  %output42 = extractvalue { double, <2 x double> } %return40, 1
  store <2 x double> %output42, <2 x double>* %p
  %sina44 = load double, double* %sina
  %output45 = fmul double %output34, %sina44
  %output47 = fsub double %output45, %output7
  %return49 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output42, double %output47, i64 1)
  %output51 = extractvalue { double, <2 x double> } %return49, 1
  store <2 x double> %output51, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %space53 = load double, double* %space
  %output55 = call double @"div@FF"(double %space53, double %SQRT)
  %output56 = fadd double 1.000000e+00, %output55
  %output57 = fmul double %w17, %output56
  %output60 = fmul double %output57, %output10
  %output62 = fadd double %output60, %output6
  %tmp63 = load <2 x double>, <2 x double>* %p
  %return64 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp63, double %output62, i64 0)
  %output66 = extractvalue { double, <2 x double> } %return64, 1
  store <2 x double> %output66, <2 x double>* %p
  %output69 = fmul double %output57, %output13
  %output71 = fsub double %output69, %output7
  %return73 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output66, double %output71, i64 1)
  %output75 = extractvalue { double, <2 x double> } %return73, 1
  store <2 x double> %output75, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_LOONIE@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %_p4 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p4, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %w5 = load double, double* %w
  %output7 = fmul double %w5, %w5
  %return = fcmp olt double %SUMSQ, %output7
  br i1 %return, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output14 = call double @"div@FF"(double %output7, double %SUMSQ)
  %output15 = fsub double %output14, 1.000000e+00
  %return16 = call double @"sqrt@FF"(double %output15)
  %output17 = fmul double %w5, %return16
  %output20 = fmul double %output17, %output2
  %tmp = load <2 x double>, <2 x double>* %p
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output20, i64 0)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  %output26 = fmul double %output17, %output3
  %return28 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output23, double %output26, i64 1)
  %output30 = extractvalue { double, <2 x double> } %return28, 1
  store <2 x double> %output30, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %output33 = fmul double %w5, %output2
  %tmp34 = load <2 x double>, <2 x double>* %p
  %return35 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp34, double %output33, i64 0)
  %output37 = extractvalue { double, <2 x double> } %return35, 1
  store <2 x double> %output37, <2 x double>* %p
  %w38 = load double, double* %w
  %output40 = fmul double %w38, %output3
  %return42 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output37, double %output40, i64 1)
  %output44 = extractvalue { double, <2 x double> } %return42, 1
  store <2 x double> %output44, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_PREBLUR@UF"(<2 x double>* %p, double* %w) #1 {
__llvm_entry:
  %sinA = alloca double
  %cosA = alloca double
  %0 = alloca double
  store double 0.000000e+00, double* %sinA, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosA, !vex-initializer-store !3
  %w1 = load double, double* %w
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return2 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output = fadd double %return, %return2
  %return3 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output4 = fadd double %output, %return3
  %return5 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output6 = fadd double %output4, %return5
  %output7 = fsub double %output6, 2.000000e+00
  %output8 = fmul double %w1, %output7
  %return9 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output10 = fmul double %return9, 2.000000e+00
  %output11 = fmul double %output10, 0x400921FB4D12D84A
  store double %output11, double* %0
  call void @"sincos@FFF"(double* %0, double* %sinA, double* %cosA)
  %p13 = load <2 x double>, <2 x double>* %p
  %return14 = call double @"getcomp@FUI"(<2 x double> %p13, i64 0)
  %cosA16 = load double, double* %cosA
  %output17 = fmul double %output8, %cosA16
  %output18 = fadd double %return14, %output17
  %return19 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %p13, double %output18, i64 0)
  %output21 = extractvalue { double, <2 x double> } %return19, 1
  store <2 x double> %output21, <2 x double>* %p
  %return23 = call double @"getcomp@FUI"(<2 x double> %output21, i64 1)
  %sinA25 = load double, double* %sinA
  %output26 = fmul double %output8, %sinA25
  %output27 = fadd double %return23, %output26
  %return29 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output21, double %output27, i64 1)
  %output31 = extractvalue { double, <2 x double> } %return29, 1
  store <2 x double> %output31, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_MODULUS@UUFU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %m) #1 {
__llvm_entry:
  %0 = alloca double
  %1 = alloca double
  %2 = alloca double
  %3 = alloca double
  %4 = alloca double
  %5 = alloca double
  %6 = alloca double
  %7 = alloca double
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %m4 = load <2 x double>, <2 x double>* %m
  %output5 = call { double, double } @"assign@FFU"(<2 x double> %m4)
  %output6 = extractvalue { double, double } %output5, 0
  %output7 = extractvalue { double, double } %output5, 1
  %output9 = fmul double 2.000000e+00, %output6
  %output11 = fmul double 2.000000e+00, %output7
  %return = fcmp ogt double %output2, %output6
  br i1 %return, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %w15 = load double, double* %w
  %return17 = call double @"neg@FF"(double %output6)
  %output20 = fadd double %output2, %output6
  store double %output20, double* %0
  store double %output9, double* %1
  %fmod = call double @"fmod@FFF"(double* %0, double* %1)
  %output22 = fadd double %return17, %fmod
  %output23 = fmul double %w15, %output22
  %tmp = load <2 x double>, <2 x double>* %p
  %return24 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output23, i64 0)
  %output26 = extractvalue { double, <2 x double> } %return24, 1
  store <2 x double> %output26, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %return29 = call double @"neg@FF"(double %output6)
  %return30 = fcmp olt double %output2, %return29
  %w35 = load double, double* %w
  br i1 %return30, label %true32, label %false33

end:                                              ; preds = %true32, %false33, %true
  %return57 = fcmp ogt double %output3, %output7
  br i1 %return57, label %true59, label %false60

true32:                                           ; preds = %false
  %output39 = fsub double %output6, %output2
  store double %output39, double* %2
  store double %output9, double* %3
  %fmod41 = call double @"fmod@FFF"(double* %2, double* %3)
  %output42 = fsub double %output6, %fmod41
  %output43 = fmul double %w35, %output42
  %tmp44 = load <2 x double>, <2 x double>* %p
  %return45 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp44, double %output43, i64 0)
  %output47 = extractvalue { double, <2 x double> } %return45, 1
  store <2 x double> %output47, <2 x double>* %p
  br label %end

false33:                                          ; preds = %false
  %output50 = fmul double %w35, %output2
  %tmp51 = load <2 x double>, <2 x double>* %p
  %return52 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp51, double %output50, i64 0)
  %output54 = extractvalue { double, <2 x double> } %return52, 1
  store <2 x double> %output54, <2 x double>* %p
  br label %end

true59:                                           ; preds = %end
  %w62 = load double, double* %w
  %return64 = call double @"neg@FF"(double %output7)
  %output67 = fadd double %output3, %output7
  store double %output67, double* %4
  store double %output11, double* %5
  %fmod69 = call double @"fmod@FFF"(double* %4, double* %5)
  %output70 = fadd double %return64, %fmod69
  %output71 = fmul double %w62, %output70
  %tmp72 = load <2 x double>, <2 x double>* %p
  %return73 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp72, double %output71, i64 1)
  %output75 = extractvalue { double, <2 x double> } %return73, 1
  store <2 x double> %output75, <2 x double>* %p
  br label %end61

false60:                                          ; preds = %end
  %return78 = call double @"neg@FF"(double %output7)
  %return79 = fcmp olt double %output3, %return78
  %w84 = load double, double* %w
  br i1 %return79, label %true81, label %false82

end61:                                            ; preds = %true81, %false82, %true59
  ret void

true81:                                           ; preds = %false60
  %output88 = fsub double %output7, %output3
  store double %output88, double* %6
  store double %output11, double* %7
  %fmod90 = call double @"fmod@FFF"(double* %6, double* %7)
  %output91 = fsub double %output7, %fmod90
  %output92 = fmul double %w84, %output91
  %tmp93 = load <2 x double>, <2 x double>* %p
  %return94 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp93, double %output92, i64 1)
  %output96 = extractvalue { double, <2 x double> } %return94, 1
  store <2 x double> %output96, <2 x double>* %p
  br label %end61

false82:                                          ; preds = %false60
  %output99 = fmul double %w84, %output3
  %tmp100 = load <2 x double>, <2 x double>* %p
  %return101 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp100, double %output99, i64 1)
  %output103 = extractvalue { double, <2 x double> } %return101, 1
  store <2 x double> %output103, <2 x double>* %p
  br label %end61
}

; Function Attrs: alwaysinline nounwind
define private void @"V_OSCOPE@UUFFFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %freq, double* %amp, double* %damp, double* %sep) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %freq4 = load double, double* %freq
  %output5 = fmul double 0x401921FB4D12D84A, %freq4
  %damp6 = load double, double* %damp
  %return = fcmp oeq double %damp6, 0.000000e+00
  %amp8 = load double, double* %amp
  br i1 %return, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output11 = fmul double %output5, %output2
  %return12 = call double @"cos@FF"(double %output11)
  %output13 = fmul double %amp8, %return12
  %sep14 = load double, double* %sep
  %output15 = fadd double %output13, %sep14
  br label %end

false:                                            ; preds = %__llvm_entry
  %return18 = call double @"abs@FF"(double %output2)
  %return19 = call double @"neg@FF"(double %return18)
  %damp20 = load double, double* %damp
  %output21 = fmul double %return19, %damp20
  %return22 = call double @"exp@FF"(double %output21)
  %output23 = fmul double %amp8, %return22
  %output26 = fmul double %output5, %output2
  %return27 = call double @"cos@FF"(double %output26)
  %output28 = fmul double %output23, %return27
  %sep29 = load double, double* %sep
  %output30 = fadd double %output28, %sep29
  br label %end

end:                                              ; preds = %false, %true
  %tt.0 = phi double [ %output15, %true ], [ %output30, %false ]
  %return32 = call double @"abs@FF"(double %output3)
  %return34 = fcmp ole double %return32, %tt.0
  %w39 = load double, double* %w
  %output41 = fmul double %w39, %output2
  %tmp = load <2 x double>, <2 x double>* %p
  %return42 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output41, i64 0)
  %output44 = extractvalue { double, <2 x double> } %return42, 1
  store <2 x double> %output44, <2 x double>* %p
  %w45 = load double, double* %w
  br i1 %return34, label %true36, label %false37

true36:                                           ; preds = %end
  %return47 = call double @"neg@FF"(double %output3)
  %output48 = fmul double %w45, %return47
  %return50 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output44, double %output48, i64 1)
  %output52 = extractvalue { double, <2 x double> } %return50, 1
  store <2 x double> %output52, <2 x double>* %p
  br label %end38

false37:                                          ; preds = %end
  %output62 = fmul double %w45, %output3
  %return64 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output44, double %output62, i64 1)
  %output66 = extractvalue { double, <2 x double> } %return64, 1
  store <2 x double> %output66, <2 x double>* %p
  br label %end38

end38:                                            ; preds = %false37, %true36
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_POLAR2@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %w1 = load double, double* %w
  %output = call double @"div@FF"(double %w1, double 0x400921FB4D12D84A)
  %_p3 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p3, <2 x double>* %0
  %ATAN = call double @"ATAN@FU"(<2 x double>* %0)
  %output4 = fmul double %output, %ATAN
  %tmp = load <2 x double>, <2 x double>* %p
  %return = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output4, i64 0)
  %output6 = extractvalue { double, <2 x double> } %return, 1
  store <2 x double> %output6, <2 x double>* %p
  %output8 = call double @"div@FF"(double %output, double 2.000000e+00)
  %_p9 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p9, <2 x double>* %1
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %1)
  %return10 = call double @"log@FF"(double %SUMSQ)
  %output11 = fmul double %output8, %return10
  %tmp12 = load <2 x double>, <2 x double>* %p
  %return13 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp12, double %output11, i64 1)
  %output15 = extractvalue { double, <2 x double> } %return13, 1
  store <2 x double> %output15, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_POPCORN2@UUFFU"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %pop2c, <2 x double>* %pop2) #1 {
__llvm_entry:
  %0 = alloca double
  %1 = alloca double
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %pop24 = load <2 x double>, <2 x double>* %pop2
  %output5 = call { double, double } @"assign@FFU"(<2 x double> %pop24)
  %output6 = extractvalue { double, double } %output5, 0
  %output7 = extractvalue { double, double } %output5, 1
  %w8 = load double, double* %w
  %pop2c12 = load double, double* %pop2c
  %output13 = fmul double %output3, %pop2c12
  store double %output13, double* %0
  %SafeTan = call double @"SafeTan@FF"(double* %0)
  %return = call double @"sin@FF"(double %SafeTan)
  %output14 = fmul double %output6, %return
  %output15 = fadd double %output2, %output14
  %output16 = fmul double %w8, %output15
  %tmp = load <2 x double>, <2 x double>* %p
  %return17 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output16, i64 0)
  %output19 = extractvalue { double, <2 x double> } %return17, 1
  store <2 x double> %output19, <2 x double>* %p
  %w20 = load double, double* %w
  %pop2c24 = load double, double* %pop2c
  %output25 = fmul double %output2, %pop2c24
  store double %output25, double* %1
  %SafeTan26 = call double @"SafeTan@FF"(double* %1)
  %return27 = call double @"sin@FF"(double %SafeTan26)
  %output28 = fmul double %output7, %return27
  %output29 = fadd double %output3, %output28
  %output30 = fmul double %w20, %output29
  %tmp31 = load <2 x double>, <2 x double>* %p
  %return32 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp31, double %output30, i64 1)
  %output34 = extractvalue { double, <2 x double> } %return32, 1
  store <2 x double> %output34, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SCRY@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %_p4 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p4, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %_p5 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p5, <2 x double>* %1
  %SQRT = call double @"SQRT@FU"(<2 x double>* %1)
  %w7 = load double, double* %w
  %output8 = fadd double %w7, 0x3CB0000000000000
  %output9 = call double @"div@FF"(double 1.000000e+00, double %output8)
  %output10 = fadd double %SUMSQ, %output9
  %output11 = fmul double %SQRT, %output10
  %output12 = call double @"div@FF"(double 1.000000e+00, double %output11)
  %output15 = fmul double %output2, %output12
  %tmp = load <2 x double>, <2 x double>* %p
  %return = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output15, i64 0)
  %output17 = extractvalue { double, <2 x double> } %return, 1
  store <2 x double> %output17, <2 x double>* %p
  %output20 = fmul double %output3, %output12
  %return22 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output17, double %output20, i64 1)
  %output24 = extractvalue { double, <2 x double> } %return22, 1
  store <2 x double> %output24, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SEPARATION@UUFUU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %sep, <2 x double>* %ins) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %ins4 = load <2 x double>, <2 x double>* %ins
  %output5 = call { double, double } @"assign@FFU"(<2 x double> %ins4)
  %output6 = extractvalue { double, double } %output5, 0
  %output7 = extractvalue { double, double } %output5, 1
  %sep8 = load <2 x double>, <2 x double>* %sep
  %return = call double @"getcomp@FUI"(<2 x double> %sep8, i64 0)
  %output11 = fmul double %return, %return
  %return13 = call double @"getcomp@FUI"(<2 x double> %sep8, i64 1)
  %output16 = fmul double %return13, %return13
  %return18 = fcmp ogt double %output2, 0.000000e+00
  %w20 = load double, double* %w
  %output23 = fmul double %output2, %output2
  %output25 = fadd double %output23, %output11
  %return26 = call double @"sqrt@FF"(double %output25)
  %output29 = fmul double %output2, %output6
  br i1 %return18, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output30 = fsub double %return26, %output29
  %output31 = fmul double %w20, %output30
  %tmp = load <2 x double>, <2 x double>* %p
  %return32 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output31, i64 0)
  %output34 = extractvalue { double, <2 x double> } %return32, 1
  store <2 x double> %output34, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %output45 = fadd double %return26, %output29
  %return46 = call double @"neg@FF"(double %output45)
  %output47 = fmul double %w20, %return46
  %tmp48 = load <2 x double>, <2 x double>* %p
  %return49 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp48, double %output47, i64 0)
  %output51 = extractvalue { double, <2 x double> } %return49, 1
  store <2 x double> %output51, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  %return53 = fcmp ogt double %output3, 0.000000e+00
  %w58 = load double, double* %w
  %output61 = fmul double %output3, %output3
  %output63 = fadd double %output61, %output16
  %return64 = call double @"sqrt@FF"(double %output63)
  %output67 = fmul double %output3, %output7
  br i1 %return53, label %true55, label %false56

true55:                                           ; preds = %end
  %output68 = fsub double %return64, %output67
  %output69 = fmul double %w58, %output68
  %tmp70 = load <2 x double>, <2 x double>* %p
  %return71 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp70, double %output69, i64 1)
  %output73 = extractvalue { double, <2 x double> } %return71, 1
  store <2 x double> %output73, <2 x double>* %p
  br label %end57

false56:                                          ; preds = %end
  %output84 = fadd double %return64, %output67
  %return85 = call double @"neg@FF"(double %output84)
  %output86 = fmul double %w58, %return85
  %tmp87 = load <2 x double>, <2 x double>* %p
  %return88 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp87, double %output86, i64 1)
  %output90 = extractvalue { double, <2 x double> } %return88, 1
  store <2 x double> %output90, <2 x double>* %p
  br label %end57

end57:                                            ; preds = %false56, %true55
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SPLIT@UUFU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %split) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %split4 = load <2 x double>, <2 x double>* %split
  %output5 = call { double, double } @"assign@FFU"(<2 x double> %split4)
  %output6 = extractvalue { double, double } %output5, 0
  %output7 = extractvalue { double, double } %output5, 1
  %output10 = fmul double %output2, %output6
  %output11 = fmul double %output10, 0x400921FB4D12D84A
  %return = call double @"cos@FF"(double %output11)
  %return12 = fcmp oge double %return, 0.000000e+00
  %w14 = load double, double* %w
  br i1 %return12, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output16 = fmul double %w14, %output3
  %tmp = load <2 x double>, <2 x double>* %p
  %return17 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output16, i64 1)
  %output19 = extractvalue { double, <2 x double> } %return17, 1
  store <2 x double> %output19, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %_p21 = load <2 x double>, <2 x double>* %_p
  %return22 = call double @"getcomp@FUI"(<2 x double> %_p21, i64 1)
  %return23 = call double @"neg@FF"(double %return22)
  %output24 = fmul double %w14, %return23
  %tmp25 = load <2 x double>, <2 x double>* %p
  %return26 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp25, double %output24, i64 1)
  %output28 = extractvalue { double, <2 x double> } %return26, 1
  store <2 x double> %output28, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  %output31 = fmul double %output3, %output7
  %output32 = fmul double %output31, 0x400921FB4D12D84A
  %return33 = call double @"cos@FF"(double %output32)
  %return34 = fcmp oge double %return33, 0.000000e+00
  %w39 = load double, double* %w
  br i1 %return34, label %true36, label %false37

true36:                                           ; preds = %end
  %output41 = fmul double %w39, %output2
  %tmp42 = load <2 x double>, <2 x double>* %p
  %return43 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp42, double %output41, i64 0)
  %output45 = extractvalue { double, <2 x double> } %return43, 1
  store <2 x double> %output45, <2 x double>* %p
  br label %end38

false37:                                          ; preds = %end
  %return48 = call double @"neg@FF"(double %output2)
  %output49 = fmul double %w39, %return48
  %tmp50 = load <2 x double>, <2 x double>* %p
  %return51 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp50, double %output49, i64 0)
  %output53 = extractvalue { double, <2 x double> } %return51, 1
  store <2 x double> %output53, <2 x double>* %p
  br label %end38

end38:                                            ; preds = %false37, %true36
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SPLITS@UUFU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %splits) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %splits4 = load <2 x double>, <2 x double>* %splits
  %output5 = call { double, double } @"assign@FFU"(<2 x double> %splits4)
  %output6 = extractvalue { double, double } %output5, 0
  %output7 = extractvalue { double, double } %output5, 1
  %return = fcmp oge double %output2, 0.000000e+00
  %w10 = load double, double* %w
  br i1 %return, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output13 = fadd double %output2, %output6
  %output14 = fmul double %w10, %output13
  %tmp = load <2 x double>, <2 x double>* %p
  %return15 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output14, i64 0)
  %output17 = extractvalue { double, <2 x double> } %return15, 1
  store <2 x double> %output17, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %output21 = fsub double %output2, %output6
  %output22 = fmul double %w10, %output21
  %tmp23 = load <2 x double>, <2 x double>* %p
  %return24 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp23, double %output22, i64 0)
  %output26 = extractvalue { double, <2 x double> } %return24, 1
  store <2 x double> %output26, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  %return28 = fcmp oge double %output3, 0.000000e+00
  %w33 = load double, double* %w
  br i1 %return28, label %true30, label %false31

true30:                                           ; preds = %end
  %output36 = fadd double %output3, %output7
  %output37 = fmul double %w33, %output36
  %tmp38 = load <2 x double>, <2 x double>* %p
  %return39 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp38, double %output37, i64 1)
  %output41 = extractvalue { double, <2 x double> } %return39, 1
  store <2 x double> %output41, <2 x double>* %p
  br label %end32

false31:                                          ; preds = %end
  %output45 = fsub double %output3, %output7
  %output46 = fmul double %w33, %output45
  %tmp47 = load <2 x double>, <2 x double>* %p
  %return48 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp47, double %output46, i64 1)
  %output50 = extractvalue { double, <2 x double> } %return48, 1
  store <2 x double> %output50, <2 x double>* %p
  br label %end32

end32:                                            ; preds = %false31, %true30
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_STRIPES@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %space, double* %warp) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %output5 = fadd double %output2, 5.000000e-01
  %return = call double @"floor@FF"(double %output5)
  %output8 = fsub double %output2, %return
  %w9 = load double, double* %w
  %space11 = load double, double* %space
  %output12 = fsub double 1.000000e+00, %space11
  %output13 = fmul double %output8, %output12
  %output15 = fadd double %output13, %return
  %output16 = fmul double %w9, %output15
  %tmp = load <2 x double>, <2 x double>* %p
  %return17 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output16, i64 0)
  %output19 = extractvalue { double, <2 x double> } %return17, 1
  store <2 x double> %output19, <2 x double>* %p
  %w20 = load double, double* %w
  %output24 = fmul double %output8, %output8
  %warp25 = load double, double* %warp
  %output26 = fmul double %output24, %warp25
  %output27 = fadd double %output3, %output26
  %output28 = fmul double %w20, %output27
  %return30 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output19, double %output28, i64 1)
  %output32 = extractvalue { double, <2 x double> } %return30, 1
  store <2 x double> %output32, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_WEDGE@UUFFFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %swirl, double* %angle, double* %hole, double* %count) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %angle1 = load double, double* %angle
  %count2 = load double, double* %count
  %output = fmul double %angle1, %count2
  %output3 = fmul double %output, 0x3FD45F306DC9C883
  %output4 = fmul double %output3, 5.000000e-01
  %output5 = fsub double 1.000000e+00, %output4
  %_p6 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p6, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %_p7 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p7, <2 x double>* %1
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %1)
  %swirl8 = load double, double* %swirl
  %output10 = fmul double %swirl8, %SQRT
  %output11 = fadd double %ATANYX, %output10
  %count12 = load double, double* %count
  %output14 = fmul double %count12, %output11
  %output15 = fadd double %output14, 0x400921FB4D12D84A
  %output16 = fmul double %output15, 0x3FD45F306DC9C883
  %output17 = fmul double %output16, 5.000000e-01
  %return = call double @"floor@FF"(double %output17)
  %output20 = fmul double %output11, %output5
  %angle22 = load double, double* %angle
  %output23 = fmul double %return, %angle22
  %output24 = fadd double %output20, %output23
  %w25 = load double, double* %w
  %hole27 = load double, double* %hole
  %output28 = fadd double %SQRT, %hole27
  %output29 = fmul double %w25, %output28
  %return32 = call double @"cos@FF"(double %output24)
  %output33 = fmul double %output29, %return32
  %tmp = load <2 x double>, <2 x double>* %p
  %return34 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output33, i64 0)
  %output36 = extractvalue { double, <2 x double> } %return34, 1
  store <2 x double> %output36, <2 x double>* %p
  %return39 = call double @"sin@FF"(double %output24)
  %output40 = fmul double %output29, %return39
  %return42 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output36, double %output40, i64 1)
  %output44 = extractvalue { double, <2 x double> } %return42, 1
  store <2 x double> %output44, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_WEDGEJULIA@UUFFFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %power, double* %angle, double* %dist, double* %count) #1 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %angle1 = load double, double* %angle
  %count2 = load double, double* %count
  %output = fmul double %angle1, %count2
  %output3 = fmul double %output, 0x3FD45F306DC9C883
  %output4 = fmul double %output3, 5.000000e-01
  %output5 = fsub double 1.000000e+00, %output4
  %power6 = load double, double* %power
  %return = call double @"abs@FF"(double %power6)
  %dist7 = load double, double* %dist
  %power8 = load double, double* %power
  %output9 = call double @"div@FF"(double %dist7, double %power8)
  %output10 = call double @"div@FF"(double %output9, double 2.000000e+00)
  %w11 = load double, double* %w
  %_p12 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p12, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %return14 = call double @"pow@FFF"(double %SUMSQ, double %output10)
  %output15 = fmul double %w11, %return14
  %return17 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output18 = fmul double %return, %return17
  %cast = fptosi double %output18 to i64
  %cast19 = sitofp i64 %cast to double
  %_p20 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p20, <2 x double>* %1
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %1)
  %output22 = fmul double 0x401921FB4D12D84A, %cast19
  %output23 = fadd double %ATANYX, %output22
  %power24 = load double, double* %power
  %output25 = call double @"div@FF"(double %output23, double %power24)
  %count26 = load double, double* %count
  %output28 = fmul double %count26, %output25
  %output29 = fadd double %output28, 0x400921FB4D12D84A
  %output30 = fmul double %output29, 0x3FD45F306DC9C883
  %output31 = fmul double %output30, 5.000000e-01
  %return32 = call double @"floor@FF"(double %output31)
  %output35 = fmul double %output25, %output5
  %angle37 = load double, double* %angle
  %output38 = fmul double %return32, %angle37
  %output39 = fadd double %output35, %output38
  store double %output39, double* %2
  call void @"sincos@FFF"(double* %2, double* %sa, double* %ca)
  %ca42 = load double, double* %ca
  %output43 = fmul double %output15, %ca42
  %tmp = load <2 x double>, <2 x double>* %p
  %return44 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output43, i64 0)
  %output46 = extractvalue { double, <2 x double> } %return44, 1
  store <2 x double> %output46, <2 x double>* %p
  %sa48 = load double, double* %sa
  %output49 = fmul double %output15, %sa48
  %return51 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output46, double %output49, i64 1)
  %output53 = extractvalue { double, <2 x double> } %return51, 1
  store <2 x double> %output53, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_WEDGESPH@UUFFFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %swirl, double* %angle, double* %hole, double* %count) #1 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %output = fadd double %SQRT, 0x3CB0000000000000
  %output2 = call double @"div@FF"(double 1.000000e+00, double %output)
  %_p3 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p3, <2 x double>* %1
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %1)
  %swirl4 = load double, double* %swirl
  %output6 = fmul double %swirl4, %output2
  %output7 = fadd double %ATANYX, %output6
  %count8 = load double, double* %count
  %output10 = fmul double %count8, %output7
  %output11 = fadd double %output10, 0x400921FB4D12D84A
  %output12 = fmul double %output11, 0x3FD45F306DC9C883
  %output13 = fmul double %output12, 5.000000e-01
  %return = call double @"floor@FF"(double %output13)
  %angle14 = load double, double* %angle
  %output16 = fmul double %angle14, %count8
  %output17 = fmul double %output16, 0x3FD45F306DC9C883
  %output18 = fmul double %output17, 5.000000e-01
  %output19 = fsub double 1.000000e+00, %output18
  %output22 = fmul double %output7, %output19
  %output25 = fmul double %return, %angle14
  %output26 = fadd double %output22, %output25
  store double %output26, double* %2
  call void @"sincos@FFF"(double* %2, double* %sa, double* %ca)
  %w28 = load double, double* %w
  %hole30 = load double, double* %hole
  %output31 = fadd double %output2, %hole30
  %output32 = fmul double %w28, %output31
  %ca34 = load double, double* %ca
  %output35 = fmul double %output32, %ca34
  %tmp = load <2 x double>, <2 x double>* %p
  %return36 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output35, i64 0)
  %output38 = extractvalue { double, <2 x double> } %return36, 1
  store <2 x double> %output38, <2 x double>* %p
  %sa40 = load double, double* %sa
  %output41 = fmul double %output32, %sa40
  %return43 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output38, double %output41, i64 1)
  %output45 = extractvalue { double, <2 x double> } %return43, 1
  store <2 x double> %output45, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_WHORL@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %inside, double* %outside) #1 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %w3 = load double, double* %w
  %return = fcmp olt double %SQRT, %w3
  %_p5 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p5, <2 x double>* %1
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %1)
  br i1 %return, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %inside6 = load double, double* %inside
  %w7 = load double, double* %w
  %output = fsub double %w7, %SQRT
  %output9 = call double @"div@FF"(double %inside6, double %output)
  %output10 = fadd double %ATANYX, %output9
  br label %end

false:                                            ; preds = %__llvm_entry
  %outside13 = load double, double* %outside
  %w14 = load double, double* %w
  %output16 = fsub double %w14, %SQRT
  %output17 = call double @"div@FF"(double %outside13, double %output16)
  %output18 = fadd double %ATANYX, %output17
  br label %end

end:                                              ; preds = %false, %true
  %aa.0 = phi double [ %output10, %true ], [ %output18, %false ]
  store double %aa.0, double* %2
  call void @"sincos@FFF"(double* %2, double* %sa, double* %ca)
  %w20 = load double, double* %w
  %output22 = fmul double %w20, %SQRT
  %ca23 = load double, double* %ca
  %output24 = fmul double %output22, %ca23
  %tmp = load <2 x double>, <2 x double>* %p
  %return25 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output24, i64 0)
  %output27 = extractvalue { double, <2 x double> } %return25, 1
  store <2 x double> %output27, <2 x double>* %p
  %w28 = load double, double* %w
  %output30 = fmul double %w28, %SQRT
  %sa31 = load double, double* %sa
  %output32 = fmul double %output30, %sa31
  %return34 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output27, double %output32, i64 1)
  %output36 = extractvalue { double, <2 x double> } %return34, 1
  store <2 x double> %output36, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_WAVES2@UUFUU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %scl, <2 x double>* %freq) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %w4 = load double, double* %w
  %scl6 = load <2 x double>, <2 x double>* %scl
  %return = call double @"getcomp@FUI"(<2 x double> %scl6, i64 0)
  %freq8 = load <2 x double>, <2 x double>* %freq
  %return9 = call double @"getcomp@FUI"(<2 x double> %freq8, i64 0)
  %output10 = fmul double %output3, %return9
  %return11 = call double @"sin@FF"(double %output10)
  %output12 = fmul double %return, %return11
  %output13 = fadd double %output2, %output12
  %output14 = fmul double %w4, %output13
  %tmp = load <2 x double>, <2 x double>* %p
  %return15 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output14, i64 0)
  %output17 = extractvalue { double, <2 x double> } %return15, 1
  store <2 x double> %output17, <2 x double>* %p
  %w18 = load double, double* %w
  %scl20 = load <2 x double>, <2 x double>* %scl
  %return21 = call double @"getcomp@FUI"(<2 x double> %scl20, i64 1)
  %freq23 = load <2 x double>, <2 x double>* %freq
  %return24 = call double @"getcomp@FUI"(<2 x double> %freq23, i64 1)
  %output25 = fmul double %output2, %return24
  %return26 = call double @"sin@FF"(double %output25)
  %output27 = fmul double %return21, %return26
  %output28 = fadd double %output3, %output27
  %output29 = fmul double %w18, %output28
  %return31 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output17, double %output29, i64 1)
  %output33 = extractvalue { double, <2 x double> } %return31, 1
  store <2 x double> %output33, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_EXP@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %w4 = load double, double* %w
  %return = call double @"exp@FF"(double %output2)
  %output6 = fmul double %w4, %return
  %return9 = call double @"cos@FF"(double %output3)
  %output10 = fmul double %output6, %return9
  %tmp = load <2 x double>, <2 x double>* %p
  %return11 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output10, i64 0)
  %output13 = extractvalue { double, <2 x double> } %return11, 1
  store <2 x double> %output13, <2 x double>* %p
  %return16 = call double @"sin@FF"(double %output3)
  %output17 = fmul double %output6, %return16
  %return19 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output13, double %output17, i64 1)
  %output21 = extractvalue { double, <2 x double> } %return19, 1
  store <2 x double> %output21, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_LOG@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %w1 = load double, double* %w
  %output = fmul double %w1, 5.000000e-01
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %return = call double @"log@FF"(double %SUMSQ)
  %output3 = fmul double %output, %return
  %tmp = load <2 x double>, <2 x double>* %p
  %return4 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output3, i64 0)
  %output6 = extractvalue { double, <2 x double> } %return4, 1
  store <2 x double> %output6, <2 x double>* %p
  %w7 = load double, double* %w
  %_p8 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p8, <2 x double>* %1
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %1)
  %output9 = fmul double %w7, %ATANYX
  %tmp10 = load <2 x double>, <2 x double>* %p
  %return11 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp10, double %output9, i64 1)
  %output13 = extractvalue { double, <2 x double> } %return11, 1
  store <2 x double> %output13, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SIN@IUUF"(i64* %f3c, <2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %f3c4 = load i64, i64* %f3c
  %0 = icmp ne i64 %f3c4, 0
  br i1 %0, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %w5 = load double, double* %w
  %return = call double @"sin@FF"(double %output2)
  %output7 = fmul double %w5, %return
  %return9 = call double @"cosh@FF"(double %output3)
  %output10 = fmul double %output7, %return9
  %tmp = load <2 x double>, <2 x double>* %p
  %return11 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output10, i64 0)
  %output13 = extractvalue { double, <2 x double> } %return11, 1
  store <2 x double> %output13, <2 x double>* %p
  %w14 = load double, double* %w
  %return16 = call double @"cos@FF"(double %output2)
  %output17 = fmul double %w14, %return16
  %return19 = call double @"sinh@FF"(double %output3)
  %output20 = fmul double %output17, %return19
  %return22 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output13, double %output20, i64 1)
  %output24 = extractvalue { double, <2 x double> } %return22, 1
  store <2 x double> %output24, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %output26 = fmul double %output2, 0x3FF921FB4D12D84A
  %output28 = fmul double %output3, 0x3FF921FB4D12D84A
  %w29 = load double, double* %w
  %return31 = call double @"sin@FF"(double %output26)
  %output32 = fmul double %w29, %return31
  %return34 = call double @"cosh@FF"(double %output28)
  %output35 = fmul double %output32, %return34
  %tmp36 = load <2 x double>, <2 x double>* %p
  %return37 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp36, double %output35, i64 0)
  %output39 = extractvalue { double, <2 x double> } %return37, 1
  store <2 x double> %output39, <2 x double>* %p
  %w40 = load double, double* %w
  %return42 = call double @"cos@FF"(double %output26)
  %output43 = fmul double %w40, %return42
  %return45 = call double @"sinh@FF"(double %output28)
  %output46 = fmul double %output43, %return45
  %return48 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output39, double %output46, i64 1)
  %output50 = extractvalue { double, <2 x double> } %return48, 1
  store <2 x double> %output50, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_COS@IUUF"(i64* %f3c, <2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %f3c4 = load i64, i64* %f3c
  %0 = icmp ne i64 %f3c4, 0
  br i1 %0, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %w5 = load double, double* %w
  %return = call double @"cos@FF"(double %output2)
  %output7 = fmul double %w5, %return
  %return9 = call double @"cosh@FF"(double %output3)
  %output10 = fmul double %output7, %return9
  %tmp = load <2 x double>, <2 x double>* %p
  %return11 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output10, i64 0)
  %output13 = extractvalue { double, <2 x double> } %return11, 1
  store <2 x double> %output13, <2 x double>* %p
  %w14 = load double, double* %w
  %return16 = call double @"sin@FF"(double %output2)
  %output17 = fmul double %w14, %return16
  %return19 = call double @"sinh@FF"(double %output3)
  %output20 = fmul double %output17, %return19
  %return21 = call double @"neg@FF"(double %output20)
  %return23 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output13, double %return21, i64 1)
  %output25 = extractvalue { double, <2 x double> } %return23, 1
  store <2 x double> %output25, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %output27 = fmul double %output2, 0x3FF921FB4D12D84A
  %output29 = fmul double %output3, 0x3FF921FB4D12D84A
  %w30 = load double, double* %w
  %return32 = call double @"cos@FF"(double %output27)
  %output33 = fmul double %w30, %return32
  %return35 = call double @"cosh@FF"(double %output29)
  %output36 = fmul double %output33, %return35
  %tmp37 = load <2 x double>, <2 x double>* %p
  %return38 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp37, double %output36, i64 0)
  %output40 = extractvalue { double, <2 x double> } %return38, 1
  store <2 x double> %output40, <2 x double>* %p
  %w41 = load double, double* %w
  %return43 = call double @"sin@FF"(double %output27)
  %return44 = call double @"neg@FF"(double %return43)
  %output45 = fmul double %w41, %return44
  %return47 = call double @"sinh@FF"(double %output29)
  %output48 = fmul double %output45, %return47
  %return50 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output40, double %output48, i64 1)
  %output52 = extractvalue { double, <2 x double> } %return50, 1
  store <2 x double> %output52, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_TAN@IUUF"(i64* %f3c, <2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %tancos = alloca double
  %0 = alloca double
  %1 = alloca double
  %2 = alloca double
  %tansin = alloca double
  store double 0.000000e+00, double* %tansin, !vex-initializer-store !3
  store double 0.000000e+00, double* %tancos, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %f3c4 = load i64, i64* %f3c
  %3 = icmp ne i64 %f3c4, 0
  br i1 %3, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output6 = fmul double 2.000000e+00, %output2
  store double %output6, double* %0
  call void @"sincos@FFF"(double* %0, double* %tansin, double* %tancos)
  %output8 = fmul double 2.000000e+00, %output3
  %return = call double @"sinh@FF"(double %output8)
  %return11 = call double @"cosh@FF"(double %output8)
  %tancos12 = load double, double* %tancos
  %output14 = fadd double %tancos12, %return11
  store double %output14, double* %1
  %Zeps = call double @"Zeps@FF"(double* %1)
  %output15 = call double @"div@FF"(double 1.000000e+00, double %Zeps)
  %w16 = load double, double* %w
  %output18 = fmul double %w16, %output15
  %tansin19 = load double, double* %tansin
  %output20 = fmul double %output18, %tansin19
  %tmp = load <2 x double>, <2 x double>* %p
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output20, i64 0)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  %w24 = load double, double* %w
  %output26 = fmul double %w24, %output15
  %output28 = fmul double %output26, %return
  %return30 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output23, double %output28, i64 1)
  %output32 = extractvalue { double, <2 x double> } %return30, 1
  store <2 x double> %output32, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %output34 = fmul double %output2, 0x3FF921FB4D12D84A
  store double %output34, double* %0
  %output36 = fmul double %output3, 0x3FF921FB4D12D84A
  %w37 = load double, double* %w
  %return39 = call double @"cos@FF"(double %output34)
  %return41 = call double @"cosh@FF"(double %output36)
  %output42 = fadd double %return39, %return41
  store double %output42, double* %2
  %Zeps43 = call double @"Zeps@FF"(double* %2)
  %output44 = call double @"div@FF"(double %w37, double %Zeps43)
  %x45 = load double, double* %0
  %return46 = call double @"sin@FF"(double %x45)
  %output48 = fmul double %return46, %output44
  %tmp49 = load <2 x double>, <2 x double>* %p
  %return50 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp49, double %output48, i64 0)
  %output52 = extractvalue { double, <2 x double> } %return50, 1
  store <2 x double> %output52, <2 x double>* %p
  %return54 = call double @"sinh@FF"(double %output36)
  %output56 = fmul double %return54, %output44
  %return58 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output52, double %output56, i64 1)
  %output60 = extractvalue { double, <2 x double> } %return58, 1
  store <2 x double> %output60, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SEC@IUUF"(i64* %f3c, <2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %seccos = alloca double
  %0 = alloca double
  %1 = alloca double
  %2 = alloca double
  %secsin = alloca double
  store double 0.000000e+00, double* %secsin, !vex-initializer-store !3
  store double 0.000000e+00, double* %seccos, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %f3c4 = load i64, i64* %f3c
  %3 = icmp ne i64 %f3c4, 0
  br i1 %3, label %true, label %false

true:                                             ; preds = %__llvm_entry
  store double %output2, double* %0
  call void @"sincos@FFF"(double* %0, double* %secsin, double* %seccos)
  %return = call double @"sinh@FF"(double %output3)
  %return8 = call double @"cosh@FF"(double %output3)
  %output10 = fmul double 2.000000e+00, %output2
  %return11 = call double @"cos@FF"(double %output10)
  %output13 = fmul double 2.000000e+00, %output3
  %return14 = call double @"cosh@FF"(double %output13)
  %output15 = fadd double %return11, %return14
  %output16 = call double @"div@FF"(double 2.000000e+00, double %output15)
  %w17 = load double, double* %w
  %output19 = fmul double %w17, %output16
  %seccos20 = load double, double* %seccos
  %output21 = fmul double %output19, %seccos20
  %output23 = fmul double %output21, %return8
  %tmp = load <2 x double>, <2 x double>* %p
  %return24 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output23, i64 0)
  %output26 = extractvalue { double, <2 x double> } %return24, 1
  store <2 x double> %output26, <2 x double>* %p
  %w27 = load double, double* %w
  %output29 = fmul double %w27, %output16
  %secsin30 = load double, double* %secsin
  %output31 = fmul double %output29, %secsin30
  %output33 = fmul double %output31, %return
  %return35 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output26, double %output33, i64 1)
  %output37 = extractvalue { double, <2 x double> } %return35, 1
  store <2 x double> %output37, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %output39 = fmul double %output2, 0x400921FB4D12D84A
  store double %output39, double* %0
  %output41 = fmul double %output3, 0x400921FB4D12D84A
  store double %output39, double* %1
  call void @"sincos@FFF"(double* %1, double* %secsin, double* %seccos)
  %return44 = call double @"sinh@FF"(double %output41)
  %return46 = call double @"cosh@FF"(double %output41)
  %w47 = load double, double* %w
  %x48 = load double, double* %0
  %output49 = fmul double 2.000000e+00, %x48
  %return50 = call double @"cos@FF"(double %output49)
  %output52 = fmul double 2.000000e+00, %output41
  %return53 = call double @"cosh@FF"(double %output52)
  %output54 = fadd double %return50, %return53
  store double %output54, double* %2
  %Zeps = call double @"Zeps@FF"(double* %2)
  %output55 = call double @"div@FF"(double 2.000000e+00, double %Zeps)
  %output56 = fmul double %w47, %output55
  %seccos58 = load double, double* %seccos
  %output59 = fmul double %output56, %seccos58
  %output61 = fmul double %output59, %return46
  %tmp62 = load <2 x double>, <2 x double>* %p
  %return63 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp62, double %output61, i64 0)
  %output65 = extractvalue { double, <2 x double> } %return63, 1
  store <2 x double> %output65, <2 x double>* %p
  %secsin67 = load double, double* %secsin
  %output68 = fmul double %output56, %secsin67
  %output70 = fmul double %output68, %return44
  %return72 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output65, double %output70, i64 1)
  %output74 = extractvalue { double, <2 x double> } %return72, 1
  store <2 x double> %output74, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_CSC@IUUF"(i64* %f3c, <2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %csccos = alloca double
  %0 = alloca double
  %1 = alloca double
  %2 = alloca double
  %cscsin = alloca double
  store double 0.000000e+00, double* %cscsin, !vex-initializer-store !3
  store double 0.000000e+00, double* %csccos, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %f3c4 = load i64, i64* %f3c
  %3 = icmp ne i64 %f3c4, 0
  br i1 %3, label %true, label %false

true:                                             ; preds = %__llvm_entry
  store double %output2, double* %0
  call void @"sincos@FFF"(double* %0, double* %cscsin, double* %csccos)
  %return = call double @"sinh@FF"(double %output3)
  %return8 = call double @"cosh@FF"(double %output3)
  %output10 = fmul double 2.000000e+00, %output3
  %return11 = call double @"cosh@FF"(double %output10)
  %output13 = fmul double 2.000000e+00, %output2
  %return14 = call double @"cos@FF"(double %output13)
  %output15 = fsub double %return11, %return14
  store double %output15, double* %1
  %Zeps = call double @"Zeps@FF"(double* %1)
  %output16 = call double @"div@FF"(double 2.000000e+00, double %Zeps)
  %w17 = load double, double* %w
  %output19 = fmul double %w17, %output16
  %cscsin20 = load double, double* %cscsin
  %output21 = fmul double %output19, %cscsin20
  %output23 = fmul double %output21, %return8
  %tmp = load <2 x double>, <2 x double>* %p
  %return24 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output23, i64 0)
  %output26 = extractvalue { double, <2 x double> } %return24, 1
  store <2 x double> %output26, <2 x double>* %p
  %w27 = load double, double* %w
  %output29 = fmul double %w27, %output16
  %csccos30 = load double, double* %csccos
  %output31 = fmul double %output29, %csccos30
  %output33 = fmul double %output31, %return
  %return34 = call double @"neg@FF"(double %output33)
  %return36 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output26, double %return34, i64 1)
  %output38 = extractvalue { double, <2 x double> } %return36, 1
  store <2 x double> %output38, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %output40 = fmul double %output2, 0x3FF921FB4D12D84A
  store double %output40, double* %0
  %output42 = fmul double %output3, 0x3FF921FB4D12D84A
  store double %output40, double* %2
  call void @"sincos@FFF"(double* %2, double* %cscsin, double* %csccos)
  %return45 = call double @"sinh@FF"(double %output42)
  %return47 = call double @"cosh@FF"(double %output42)
  %output49 = fmul double 2.000000e+00, %return45
  %output51 = fmul double %output49, %return45
  %output52 = fadd double 1.000000e+00, %output51
  %x53 = load double, double* %0
  %output54 = fmul double 2.000000e+00, %x53
  %return55 = call double @"cos@FF"(double %output54)
  %output56 = fsub double %output52, %return55
  %w57 = load double, double* %w
  %output58 = fmul double 2.000000e+00, %w57
  %output60 = call double @"div@FF"(double %output58, double %output56)
  %cscsin62 = load double, double* %cscsin
  %output63 = fmul double %output60, %cscsin62
  %output65 = fmul double %output63, %return47
  %tmp66 = load <2 x double>, <2 x double>* %p
  %return67 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp66, double %output65, i64 0)
  %output69 = extractvalue { double, <2 x double> } %return67, 1
  store <2 x double> %output69, <2 x double>* %p
  %csccos71 = load double, double* %csccos
  %output72 = fmul double %output60, %csccos71
  %output74 = fmul double %output72, %return45
  %return76 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output69, double %output74, i64 1)
  %output78 = extractvalue { double, <2 x double> } %return76, 1
  store <2 x double> %output78, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_COT@IUUF"(i64* %f3c, <2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %cotcos = alloca double
  %0 = alloca double
  %1 = alloca double
  %2 = alloca double
  %cotsin = alloca double
  store double 0.000000e+00, double* %cotsin, !vex-initializer-store !3
  store double 0.000000e+00, double* %cotcos, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %f3c4 = load i64, i64* %f3c
  %3 = icmp ne i64 %f3c4, 0
  br i1 %3, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output6 = fmul double 2.000000e+00, %output2
  store double %output6, double* %0
  call void @"sincos@FFF"(double* %0, double* %cotsin, double* %cotcos)
  %output8 = fmul double 2.000000e+00, %output3
  %return = call double @"sinh@FF"(double %output8)
  %return11 = call double @"cosh@FF"(double %output8)
  %cotcos13 = load double, double* %cotcos
  %output14 = fsub double %return11, %cotcos13
  %output15 = call double @"div@FF"(double 1.000000e+00, double %output14)
  %w16 = load double, double* %w
  %output18 = fmul double %w16, %output15
  %cotsin19 = load double, double* %cotsin
  %output20 = fmul double %output18, %cotsin19
  %tmp = load <2 x double>, <2 x double>* %p
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output20, i64 0)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  %w24 = load double, double* %w
  %output26 = fmul double %w24, %output15
  %return27 = call i64 @"neg@II"(i64 1)
  %cast = sitofp i64 %return27 to double
  %output28 = fmul double %output26, %cast
  %output30 = fmul double %output28, %return
  %return32 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output23, double %output30, i64 1)
  %output34 = extractvalue { double, <2 x double> } %return32, 1
  store <2 x double> %output34, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %output36 = fmul double %output2, 0x3FF921FB4D12D84A
  store double %output36, double* %0
  %output38 = fmul double %output3, 0x3FF921FB4D12D84A
  store double %output36, double* %1
  call void @"sincos@FFF"(double* %1, double* %cotsin, double* %cotcos)
  %return41 = call double @"sinh@FF"(double %output38)
  %return43 = call double @"cosh@FF"(double %output38)
  %w44 = load double, double* %w
  %cotcos46 = load double, double* %cotcos
  %output47 = fsub double %return43, %cotcos46
  store double %output47, double* %2
  %Zeps = call double @"Zeps@FF"(double* %2)
  %output48 = call double @"div@FF"(double %w44, double %Zeps)
  %cotsin50 = load double, double* %cotsin
  %output51 = fmul double %output48, %cotsin50
  %tmp52 = load <2 x double>, <2 x double>* %p
  %return53 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp52, double %output51, i64 0)
  %output55 = extractvalue { double, <2 x double> } %return53, 1
  store <2 x double> %output55, <2 x double>* %p
  %output58 = fmul double %output48, %return41
  %return60 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output55, double %output58, i64 1)
  %output62 = extractvalue { double, <2 x double> } %return60, 1
  store <2 x double> %output62, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SINH@IUUF"(i64* %f3c, <2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %sinhcos = alloca double
  %0 = alloca double
  %1 = alloca double
  %sinhsin = alloca double
  store double 0.000000e+00, double* %sinhsin, !vex-initializer-store !3
  store double 0.000000e+00, double* %sinhcos, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %f3c4 = load i64, i64* %f3c
  %2 = icmp ne i64 %f3c4, 0
  br i1 %2, label %true, label %false

true:                                             ; preds = %__llvm_entry
  store double %output3, double* %0
  call void @"sincos@FFF"(double* %0, double* %sinhsin, double* %sinhcos)
  %return = call double @"sinh@FF"(double %output2)
  %return8 = call double @"cosh@FF"(double %output2)
  %w9 = load double, double* %w
  %output11 = fmul double %w9, %return
  %sinhcos12 = load double, double* %sinhcos
  %output13 = fmul double %output11, %sinhcos12
  %tmp = load <2 x double>, <2 x double>* %p
  %return14 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output13, i64 0)
  %output16 = extractvalue { double, <2 x double> } %return14, 1
  store <2 x double> %output16, <2 x double>* %p
  %w17 = load double, double* %w
  %output19 = fmul double %w17, %return8
  %sinhsin20 = load double, double* %sinhsin
  %output21 = fmul double %output19, %sinhsin20
  %return23 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output16, double %output21, i64 1)
  %output25 = extractvalue { double, <2 x double> } %return23, 1
  store <2 x double> %output25, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %output27 = fmul double %output2, 7.853981e-01
  store double %output27, double* %0
  %output29 = fmul double %output3, 7.853981e-01
  store double %output29, double* %1
  call void @"sincos@FFF"(double* %1, double* %sinhsin, double* %sinhcos)
  %x31 = load double, double* %0
  %return32 = call double @"sinh@FF"(double %x31)
  %return34 = call double @"cosh@FF"(double %x31)
  %w35 = load double, double* %w
  %output37 = fmul double %w35, %return32
  %sinhcos38 = load double, double* %sinhcos
  %output39 = fmul double %output37, %sinhcos38
  %tmp40 = load <2 x double>, <2 x double>* %p
  %return41 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp40, double %output39, i64 0)
  %output43 = extractvalue { double, <2 x double> } %return41, 1
  store <2 x double> %output43, <2 x double>* %p
  %w44 = load double, double* %w
  %output46 = fmul double %w44, %return34
  %sinhsin47 = load double, double* %sinhsin
  %output48 = fmul double %output46, %sinhsin47
  %return50 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output43, double %output48, i64 1)
  %output52 = extractvalue { double, <2 x double> } %return50, 1
  store <2 x double> %output52, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_COSH@IUUF"(i64* %f3c, <2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %coshcos = alloca double
  %0 = alloca double
  %1 = alloca double
  %coshsin = alloca double
  store double 0.000000e+00, double* %coshsin, !vex-initializer-store !3
  store double 0.000000e+00, double* %coshcos, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %f3c4 = load i64, i64* %f3c
  %2 = icmp ne i64 %f3c4, 0
  br i1 %2, label %true, label %false

true:                                             ; preds = %__llvm_entry
  store double %output3, double* %0
  call void @"sincos@FFF"(double* %0, double* %coshsin, double* %coshcos)
  %return = call double @"sinh@FF"(double %output2)
  %return8 = call double @"cosh@FF"(double %output2)
  %w9 = load double, double* %w
  %output11 = fmul double %w9, %return8
  %coshcos12 = load double, double* %coshcos
  %output13 = fmul double %output11, %coshcos12
  %tmp = load <2 x double>, <2 x double>* %p
  %return14 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output13, i64 0)
  %output16 = extractvalue { double, <2 x double> } %return14, 1
  store <2 x double> %output16, <2 x double>* %p
  %w17 = load double, double* %w
  %output19 = fmul double %w17, %return
  %coshsin20 = load double, double* %coshsin
  %output21 = fmul double %output19, %coshsin20
  %return23 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output16, double %output21, i64 1)
  %output25 = extractvalue { double, <2 x double> } %return23, 1
  store <2 x double> %output25, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %output27 = fmul double %output2, 0x3FF921FB4D12D84A
  store double %output27, double* %0
  %output29 = fmul double %output3, 0x3FF921FB4D12D84A
  store double %output29, double* %1
  call void @"sincos@FFF"(double* %1, double* %coshsin, double* %coshcos)
  %x31 = load double, double* %0
  %return32 = call double @"sinh@FF"(double %x31)
  %return34 = call double @"cosh@FF"(double %x31)
  %w35 = load double, double* %w
  %output37 = fmul double %w35, %return34
  %coshcos38 = load double, double* %coshcos
  %output39 = fmul double %output37, %coshcos38
  %tmp40 = load <2 x double>, <2 x double>* %p
  %return41 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp40, double %output39, i64 0)
  %output43 = extractvalue { double, <2 x double> } %return41, 1
  store <2 x double> %output43, <2 x double>* %p
  %w44 = load double, double* %w
  %output46 = fmul double %w44, %return32
  %coshsin47 = load double, double* %coshsin
  %output48 = fmul double %output46, %coshsin47
  %return50 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output43, double %output48, i64 1)
  %output52 = extractvalue { double, <2 x double> } %return50, 1
  store <2 x double> %output52, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_TANH@IUUF"(i64* %f3c, <2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %tanhcos = alloca double
  %0 = alloca double
  %1 = alloca double
  %2 = alloca double
  %3 = alloca double
  %tanhsin = alloca double
  store double 0.000000e+00, double* %tanhsin, !vex-initializer-store !3
  store double 0.000000e+00, double* %tanhcos, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %f3c4 = load i64, i64* %f3c
  %4 = icmp ne i64 %f3c4, 0
  br i1 %4, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output6 = fmul double 2.000000e+00, %output3
  store double %output6, double* %0
  call void @"sincos@FFF"(double* %0, double* %tanhsin, double* %tanhcos)
  %output8 = fmul double 2.000000e+00, %output2
  %return = call double @"sinh@FF"(double %output8)
  %return11 = call double @"cosh@FF"(double %output8)
  %tanhcos12 = load double, double* %tanhcos
  %output14 = fadd double %tanhcos12, %return11
  store double %output14, double* %1
  %Zeps = call double @"Zeps@FF"(double* %1)
  %output15 = call double @"div@FF"(double 1.000000e+00, double %Zeps)
  %w16 = load double, double* %w
  %output18 = fmul double %w16, %output15
  %output20 = fmul double %output18, %return
  %tmp = load <2 x double>, <2 x double>* %p
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output20, i64 0)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  %w24 = load double, double* %w
  %output26 = fmul double %w24, %output15
  %tanhsin27 = load double, double* %tanhsin
  %output28 = fmul double %output26, %tanhsin27
  %return30 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output23, double %output28, i64 1)
  %output32 = extractvalue { double, <2 x double> } %return30, 1
  store <2 x double> %output32, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %output34 = fmul double %output2, 0x3FF921FB4D12D84A
  store double %output34, double* %0
  %output36 = fmul double %output3, 0x3FF921FB4D12D84A
  store double %output36, double* %2
  call void @"sincos@FFF"(double* %2, double* %tanhsin, double* %tanhcos)
  %x38 = load double, double* %0
  %return39 = call double @"sinh@FF"(double %x38)
  %return41 = call double @"cosh@FF"(double %x38)
  %w42 = load double, double* %w
  %tanhcos43 = load double, double* %tanhcos
  %output45 = fadd double %tanhcos43, %return41
  store double %output45, double* %3
  %Zeps46 = call double @"Zeps@FF"(double* %3)
  %output47 = call double @"div@FF"(double %w42, double %Zeps46)
  %output50 = fmul double %output47, %return39
  %tmp51 = load <2 x double>, <2 x double>* %p
  %return52 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp51, double %output50, i64 0)
  %output54 = extractvalue { double, <2 x double> } %return52, 1
  store <2 x double> %output54, <2 x double>* %p
  %tanhsin56 = load double, double* %tanhsin
  %output57 = fmul double %output47, %tanhsin56
  %return59 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output54, double %output57, i64 1)
  %output61 = extractvalue { double, <2 x double> } %return59, 1
  store <2 x double> %output61, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SECH@IUUF"(i64* %f3c, <2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %sechcos = alloca double
  %0 = alloca double
  %1 = alloca double
  %2 = alloca double
  %3 = alloca double
  %sechsin = alloca double
  store double 0.000000e+00, double* %sechsin, !vex-initializer-store !3
  store double 0.000000e+00, double* %sechcos, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %f3c4 = load i64, i64* %f3c
  %4 = icmp ne i64 %f3c4, 0
  br i1 %4, label %true, label %false

true:                                             ; preds = %__llvm_entry
  store double %output3, double* %0
  call void @"sincos@FFF"(double* %0, double* %sechsin, double* %sechcos)
  %return = call double @"sinh@FF"(double %output2)
  %return8 = call double @"cosh@FF"(double %output2)
  %output10 = fmul double 2.000000e+00, %output3
  %return11 = call double @"cos@FF"(double %output10)
  %output13 = fmul double 2.000000e+00, %output2
  %return14 = call double @"cosh@FF"(double %output13)
  %output15 = fadd double %return11, %return14
  store double %output15, double* %1
  %Zeps = call double @"Zeps@FF"(double* %1)
  %output16 = call double @"div@FF"(double 2.000000e+00, double %Zeps)
  %w17 = load double, double* %w
  %output19 = fmul double %w17, %output16
  %sechcos20 = load double, double* %sechcos
  %output21 = fmul double %output19, %sechcos20
  %output23 = fmul double %output21, %return8
  %tmp = load <2 x double>, <2 x double>* %p
  %return24 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output23, i64 0)
  %output26 = extractvalue { double, <2 x double> } %return24, 1
  store <2 x double> %output26, <2 x double>* %p
  %w27 = load double, double* %w
  %output29 = fmul double %w27, %output16
  %sechsin30 = load double, double* %sechsin
  %output31 = fmul double %output29, %sechsin30
  %output33 = fmul double %output31, %return
  %return34 = call double @"neg@FF"(double %output33)
  %return36 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output26, double %return34, i64 1)
  %output38 = extractvalue { double, <2 x double> } %return36, 1
  store <2 x double> %output38, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %output40 = fmul double %output2, 7.853981e-01
  store double %output40, double* %0
  %output42 = fmul double %output3, 7.853981e-01
  store double %output42, double* %2
  call void @"sincos@FFF"(double* %2, double* %sechsin, double* %sechcos)
  %x44 = load double, double* %0
  %return45 = call double @"sinh@FF"(double %x44)
  %return47 = call double @"cosh@FF"(double %x44)
  %w48 = load double, double* %w
  %output50 = fmul double %output42, 2.000000e+00
  %return51 = call double @"cos@FF"(double %output50)
  %output53 = fmul double %x44, 2.000000e+00
  %return54 = call double @"cosh@FF"(double %output53)
  %output55 = fadd double %return51, %return54
  store double %output55, double* %3
  %Zeps56 = call double @"Zeps@FF"(double* %3)
  %output57 = call double @"div@FF"(double 2.000000e+00, double %Zeps56)
  %output58 = fmul double %w48, %output57
  %sechcos60 = load double, double* %sechcos
  %output61 = fmul double %output58, %sechcos60
  %output63 = fmul double %output61, %return47
  %tmp64 = load <2 x double>, <2 x double>* %p
  %return65 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp64, double %output63, i64 0)
  %output67 = extractvalue { double, <2 x double> } %return65, 1
  store <2 x double> %output67, <2 x double>* %p
  %sechsin69 = load double, double* %sechsin
  %output70 = fmul double %output58, %sechsin69
  %output72 = fmul double %output70, %return45
  %return74 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output67, double %output72, i64 1)
  %output76 = extractvalue { double, <2 x double> } %return74, 1
  store <2 x double> %output76, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_CSCH@IUUF"(i64* %f3c, <2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %cschcos = alloca double
  %0 = alloca double
  %1 = alloca double
  %2 = alloca double
  %3 = alloca double
  %cschsin = alloca double
  store double 0.000000e+00, double* %cschsin, !vex-initializer-store !3
  store double 0.000000e+00, double* %cschcos, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %f3c4 = load i64, i64* %f3c
  %4 = icmp ne i64 %f3c4, 0
  br i1 %4, label %true, label %false

true:                                             ; preds = %__llvm_entry
  store double %output3, double* %0
  call void @"sincos@FFF"(double* %0, double* %cschsin, double* %cschcos)
  %return = call double @"sinh@FF"(double %output2)
  %return8 = call double @"cosh@FF"(double %output2)
  %output10 = fmul double 2.000000e+00, %output2
  %return11 = call double @"cosh@FF"(double %output10)
  %output13 = fmul double 2.000000e+00, %output3
  %return14 = call double @"cos@FF"(double %output13)
  %output15 = fsub double %return11, %return14
  store double %output15, double* %1
  %Zeps = call double @"Zeps@FF"(double* %1)
  %output16 = call double @"div@FF"(double 2.000000e+00, double %Zeps)
  %w17 = load double, double* %w
  %output19 = fmul double %w17, %output16
  %output21 = fmul double %output19, %return
  %cschcos22 = load double, double* %cschcos
  %output23 = fmul double %output21, %cschcos22
  %tmp = load <2 x double>, <2 x double>* %p
  %return24 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output23, i64 0)
  %output26 = extractvalue { double, <2 x double> } %return24, 1
  store <2 x double> %output26, <2 x double>* %p
  %w27 = load double, double* %w
  %output29 = fmul double %w27, %output16
  %output31 = fmul double %output29, %return8
  %cschsin32 = load double, double* %cschsin
  %output33 = fmul double %output31, %cschsin32
  %return34 = call double @"neg@FF"(double %output33)
  %return36 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output26, double %return34, i64 1)
  %output38 = extractvalue { double, <2 x double> } %return36, 1
  store <2 x double> %output38, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %output40 = fmul double %output2, 7.853981e-01
  store double %output40, double* %0
  %output42 = fmul double %output3, 7.853981e-01
  store double %output42, double* %2
  call void @"sincos@FFF"(double* %2, double* %cschsin, double* %cschcos)
  %x44 = load double, double* %0
  %return45 = call double @"sinh@FF"(double %x44)
  %return47 = call double @"cosh@FF"(double %x44)
  %w48 = load double, double* %w
  %output50 = fmul double 2.000000e+00, %x44
  %return51 = call double @"cosh@FF"(double %output50)
  %output53 = fmul double 2.000000e+00, %output42
  %return54 = call double @"cos@FF"(double %output53)
  %output55 = fsub double %return51, %return54
  store double %output55, double* %3
  %Zeps56 = call double @"Zeps@FF"(double* %3)
  %output57 = call double @"div@FF"(double 2.000000e+00, double %Zeps56)
  %output58 = fmul double %w48, %output57
  %output61 = fmul double %output58, %return45
  %cschcos62 = load double, double* %cschcos
  %output63 = fmul double %output61, %cschcos62
  %tmp64 = load <2 x double>, <2 x double>* %p
  %return65 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp64, double %output63, i64 0)
  %output67 = extractvalue { double, <2 x double> } %return65, 1
  store <2 x double> %output67, <2 x double>* %p
  %output70 = fmul double %output58, %return47
  %cschsin71 = load double, double* %cschsin
  %output72 = fmul double %output70, %cschsin71
  %return74 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output67, double %output72, i64 1)
  %output76 = extractvalue { double, <2 x double> } %return74, 1
  store <2 x double> %output76, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_COTH@IUUF"(i64* %f3c, <2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %cothcos = alloca double
  %0 = alloca double
  %1 = alloca double
  %2 = alloca double
  %3 = alloca double
  %cothsin = alloca double
  store double 0.000000e+00, double* %cothsin, !vex-initializer-store !3
  store double 0.000000e+00, double* %cothcos, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %f3c4 = load i64, i64* %f3c
  %4 = icmp ne i64 %f3c4, 0
  br i1 %4, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output6 = fmul double 2.000000e+00, %output3
  store double %output6, double* %0
  call void @"sincos@FFF"(double* %0, double* %cothsin, double* %cothcos)
  %output8 = fmul double 2.000000e+00, %output2
  %return = call double @"sinh@FF"(double %output8)
  %return11 = call double @"cosh@FF"(double %output8)
  %cothcos13 = load double, double* %cothcos
  %output14 = fsub double %return11, %cothcos13
  store double %output14, double* %1
  %Zeps = call double @"Zeps@FF"(double* %1)
  %output15 = call double @"div@FF"(double 1.000000e+00, double %Zeps)
  %w16 = load double, double* %w
  %output18 = fmul double %w16, %output15
  %output20 = fmul double %output18, %return
  %tmp = load <2 x double>, <2 x double>* %p
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output20, i64 0)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  %w24 = load double, double* %w
  %output26 = fmul double %w24, %output15
  %cothsin27 = load double, double* %cothsin
  %output28 = fmul double %output26, %cothsin27
  %return30 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output23, double %output28, i64 1)
  %output32 = extractvalue { double, <2 x double> } %return30, 1
  store <2 x double> %output32, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %output34 = fmul double %output2, 0x3FF921FB4D12D84A
  store double %output34, double* %0
  %output36 = fmul double %output3, 0x3FF921FB4D12D84A
  store double %output36, double* %2
  call void @"sincos@FFF"(double* %2, double* %cothsin, double* %cothcos)
  %x38 = load double, double* %0
  %return39 = call double @"sinh@FF"(double %x38)
  %return41 = call double @"cosh@FF"(double %x38)
  %w42 = load double, double* %w
  %cothcos44 = load double, double* %cothcos
  %output45 = fsub double %return41, %cothcos44
  store double %output45, double* %3
  %Zeps46 = call double @"Zeps@FF"(double* %3)
  %output47 = call double @"div@FF"(double %w42, double %Zeps46)
  %output50 = fmul double %output47, %return39
  %tmp51 = load <2 x double>, <2 x double>* %p
  %return52 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp51, double %output50, i64 0)
  %output54 = extractvalue { double, <2 x double> } %return52, 1
  store <2 x double> %output54, <2 x double>* %p
  %cothsin56 = load double, double* %cothsin
  %output57 = fmul double %output47, %cothsin56
  %return59 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output54, double %output57, i64 1)
  %output61 = extractvalue { double, <2 x double> } %return59, 1
  store <2 x double> %output61, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_AUGER@UUFFFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %freq, double* %scale, double* %sym, double* %ww) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %scale4 = load double, double* %scale
  %output5 = call double @"div@FF"(double %scale4, double 2.000000e+00)
  %freq6 = load double, double* %freq
  %output8 = fmul double %freq6, %output2
  %return = call double @"sin@FF"(double %output8)
  %output11 = fmul double %freq6, %output3
  %return12 = call double @"sin@FF"(double %output11)
  %ww14 = load double, double* %ww
  %output17 = fmul double %output5, %return12
  %return19 = call double @"abs@FF"(double %output2)
  %output21 = fmul double %return19, %return12
  %output22 = fadd double %output17, %output21
  %output23 = fmul double %ww14, %output22
  %output24 = fadd double %output2, %output23
  %ww26 = load double, double* %ww
  %output29 = fmul double %output5, %return
  %return31 = call double @"abs@FF"(double %output3)
  %output33 = fmul double %return31, %return
  %output34 = fadd double %output29, %output33
  %output35 = fmul double %ww26, %output34
  %output36 = fadd double %output3, %output35
  %w37 = load double, double* %w
  %sym39 = load double, double* %sym
  %output42 = fsub double %output24, %output2
  %output43 = fmul double %sym39, %output42
  %output44 = fadd double %output2, %output43
  %output45 = fmul double %w37, %output44
  %tmp = load <2 x double>, <2 x double>* %p
  %return46 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output45, i64 0)
  %output48 = extractvalue { double, <2 x double> } %return46, 1
  store <2 x double> %output48, <2 x double>* %p
  %w49 = load double, double* %w
  %output51 = fmul double %w49, %output36
  %return53 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output48, double %output51, i64 1)
  %output55 = extractvalue { double, <2 x double> } %return53, 1
  store <2 x double> %output55, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_FLUX@UUFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %spread) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %w5 = load double, double* %w
  %output6 = fadd double %output2, %w5
  %output9 = fsub double %output2, %w5
  %spread11 = load double, double* %spread
  %output12 = fadd double 2.000000e+00, %spread11
  %output13 = fmul double %w5, %output12
  %output16 = fmul double %output3, %output3
  %output19 = fmul double %output6, %output6
  %output20 = fadd double %output16, %output19
  %return = call double @"sqrt@FF"(double %output20)
  %output26 = fmul double %output9, %output9
  %output27 = fadd double %output16, %output26
  %return28 = call double @"sqrt@FF"(double %output27)
  %output29 = call double @"div@FF"(double %return, double %return28)
  %return30 = call double @"sqrt@FF"(double %output29)
  %output31 = fmul double %output13, %return30
  %return34 = call double @"atan2@FFF"(double %output3, double %output9)
  %return37 = call double @"atan2@FFF"(double %output3, double %output6)
  %output38 = fsub double %return34, %return37
  %output39 = fmul double %output38, 5.000000e-01
  %return42 = call double @"cos@FF"(double %output39)
  %output43 = fmul double %output31, %return42
  %tmp = load <2 x double>, <2 x double>* %p
  %return44 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output43, i64 0)
  %output46 = extractvalue { double, <2 x double> } %return44, 1
  store <2 x double> %output46, <2 x double>* %p
  %return49 = call double @"sin@FF"(double %output39)
  %output50 = fmul double %output31, %return49
  %return52 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output46, double %output50, i64 1)
  %output54 = extractvalue { double, <2 x double> } %return52, 1
  store <2 x double> %output54, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_MOBIUS@UUFPP"(<2 x double>* %p, <2 x double>* %_p, double* %w, <4 x double>* %re, <4 x double>* %im) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %re4 = load <4 x double>, <4 x double>* %re
  %output5 = call { double, double, double, double } @"assign@FFFFP"(<4 x double> %re4)
  %output6 = extractvalue { double, double, double, double } %output5, 0
  %output7 = extractvalue { double, double, double, double } %output5, 1
  %output8 = extractvalue { double, double, double, double } %output5, 2
  %output9 = extractvalue { double, double, double, double } %output5, 3
  %im10 = load <4 x double>, <4 x double>* %im
  %output11 = call { double, double, double, double } @"assign@FFFFP"(<4 x double> %im10)
  %output12 = extractvalue { double, double, double, double } %output11, 0
  %output13 = extractvalue { double, double, double, double } %output11, 1
  %output14 = extractvalue { double, double, double, double } %output11, 2
  %output15 = extractvalue { double, double, double, double } %output11, 3
  %output18 = fmul double %output6, %output2
  %output21 = fmul double %output12, %output3
  %output22 = fsub double %output18, %output21
  %output24 = fadd double %output22, %output7
  %output27 = fmul double %output6, %output3
  %output30 = fmul double %output12, %output2
  %output31 = fadd double %output27, %output30
  %output33 = fadd double %output31, %output13
  %output36 = fmul double %output8, %output2
  %output39 = fmul double %output14, %output3
  %output40 = fsub double %output36, %output39
  %output42 = fadd double %output40, %output9
  %output45 = fmul double %output8, %output3
  %output48 = fmul double %output14, %output2
  %output49 = fadd double %output45, %output48
  %output51 = fadd double %output49, %output15
  %w52 = load double, double* %w
  %output55 = fmul double %output42, %output42
  %output58 = fmul double %output51, %output51
  %output59 = fadd double %output55, %output58
  %output60 = call double @"div@FF"(double %w52, double %output59)
  %output64 = fmul double %output24, %output42
  %output67 = fmul double %output33, %output51
  %output68 = fadd double %output64, %output67
  %output69 = fmul double %output60, %output68
  %tmp = load <2 x double>, <2 x double>* %p
  %return = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output69, i64 0)
  %output71 = extractvalue { double, <2 x double> } %return, 1
  store <2 x double> %output71, <2 x double>* %p
  %output75 = fmul double %output33, %output42
  %output78 = fmul double %output24, %output51
  %output79 = fsub double %output75, %output78
  %output80 = fmul double %output60, %output79
  %return82 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output71, double %output80, i64 1)
  %output84 = extractvalue { double, <2 x double> } %return82, 1
  store <2 x double> %output84, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_CURVE@UUFUU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %l, <2 x double>* %a) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %w4 = load double, double* %w
  %output6 = fmul double %w4, %output2
  %a7 = load <2 x double>, <2 x double>* %a
  %return = call double @"getcomp@FUI"(<2 x double> %a7, i64 0)
  %return9 = call double @"neg@FF"(double %output3)
  %output11 = fmul double %return9, %output3
  %l12 = load <2 x double>, <2 x double>* %l
  %return13 = call double @"getcomp@FUI"(<2 x double> %l12, i64 0)
  %output14 = fmul double %output11, %return13
  %return15 = call double @"exp@FF"(double %output14)
  %output16 = fmul double %return, %return15
  %output17 = fadd double %output6, %output16
  %tmp = load <2 x double>, <2 x double>* %p
  %return18 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output17, i64 0)
  %output20 = extractvalue { double, <2 x double> } %return18, 1
  store <2 x double> %output20, <2 x double>* %p
  %w21 = load double, double* %w
  %output23 = fmul double %w21, %output3
  %a24 = load <2 x double>, <2 x double>* %a
  %return25 = call double @"getcomp@FUI"(<2 x double> %a24, i64 1)
  %return27 = call double @"neg@FF"(double %output2)
  %output29 = fmul double %return27, %output2
  %l30 = load <2 x double>, <2 x double>* %l
  %return31 = call double @"getcomp@FUI"(<2 x double> %l30, i64 1)
  %output32 = fmul double %output29, %return31
  %return33 = call double @"exp@FF"(double %output32)
  %output34 = fmul double %return25, %return33
  %output35 = fadd double %output23, %output34
  %return37 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output20, double %output35, i64 1)
  %output39 = extractvalue { double, <2 x double> } %return37, 1
  store <2 x double> %output39, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_PERSPECTIVE@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %angle, double* %dist) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %angle4 = load double, double* %angle
  %output5 = fmul double %angle4, 0x400921FB4D12D84A
  %output6 = call double @"div@FF"(double %output5, double 2.000000e+00)
  %return = call double @"sin@FF"(double %output6)
  %dist8 = load double, double* %dist
  %return10 = call double @"cos@FF"(double %output6)
  %output11 = fmul double %dist8, %return10
  %output15 = fmul double %output3, %return
  %output16 = fsub double %dist8, %output15
  %output17 = call double @"div@FF"(double 1.000000e+00, double %output16)
  %w18 = load double, double* %w
  %output20 = fmul double %w18, %dist8
  %output22 = fmul double %output20, %output2
  %output24 = fmul double %output22, %output17
  %tmp = load <2 x double>, <2 x double>* %p
  %return25 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output24, i64 0)
  %output27 = extractvalue { double, <2 x double> } %return25, 1
  store <2 x double> %output27, <2 x double>* %p
  %w28 = load double, double* %w
  %output30 = fmul double %w28, %output11
  %output32 = fmul double %output30, %output3
  %output34 = fmul double %output32, %output17
  %return36 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output27, double %output34, i64 1)
  %output38 = extractvalue { double, <2 x double> } %return36, 1
  store <2 x double> %output38, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_BWRAPS@UUFFFFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %cellsize, double* %space, double* %gain, double* %innertwist, double* %outertwist) #1 {
__llvm_entry:
  %ss = alloca double
  %cc = alloca double
  %0 = alloca double
  store double 0.000000e+00, double* %ss, !vex-initializer-store !3
  store double 0.000000e+00, double* %cc, !vex-initializer-store !3
  %cellsize1 = load double, double* %cellsize
  %space2 = load double, double* %space
  %output = fmul double %space2, %space2
  %output4 = fadd double 1.000000e+00, %output
  %output5 = call double @"div@FF"(double %cellsize1, double %output4)
  %output6 = fmul double 5.000000e-01, %output5
  %gain7 = load double, double* %gain
  %return = call double @"sqrt@FF"(double %gain7)
  %output9 = call double @"div@FF"(double %return, double %cellsize1)
  %output10 = fadd double %output9, 1.000000e-06
  %output13 = fmul double %output10, %output6
  %return15 = fcmp ogt double %output13, 2.000000e+00
  br i1 %return15, label %end, label %false

false:                                            ; preds = %__llvm_entry
  %output21 = fmul double %output13, %output13
  %output22 = call double @"div@FF"(double %output21, double 4.000000e+00)
  %output23 = fadd double %output22, 1.000000e+00
  %output24 = call double @"div@FF"(double %output13, double %output23)
  br label %end

end:                                              ; preds = %__llvm_entry, %false
  %phi = phi double [ %output24, %false ], [ 1.000000e+00, %__llvm_entry ]
  %output27 = fmul double %output6, %output6
  %output30 = call double @"div@FF"(double %output6, double %phi)
  %_p31 = load <2 x double>, <2 x double>* %_p
  %return32 = call double @"getcomp@FUI"(<2 x double> %_p31, i64 0)
  %return34 = call double @"getcomp@FUI"(<2 x double> %_p31, i64 1)
  %cellsize35 = load double, double* %cellsize
  %return36 = fcmp oeq double %cellsize35, 0.000000e+00
  br i1 %return36, label %true38, label %false39

true38:                                           ; preds = %end
  %w41 = load double, double* %w
  %output43 = fmul double %w41, %return32
  %tmp = load <2 x double>, <2 x double>* %p
  %return44 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output43, i64 0)
  %output46 = extractvalue { double, <2 x double> } %return44, 1
  store <2 x double> %output46, <2 x double>* %p
  %w47 = load double, double* %w
  %output49 = fmul double %w47, %return34
  %return51 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output46, double %output49, i64 1)
  %output53 = extractvalue { double, <2 x double> } %return51, 1
  store <2 x double> %output53, <2 x double>* %p
  br label %end40

false39:                                          ; preds = %end
  %output56 = call double @"div@FF"(double %return32, double %cellsize35)
  %return57 = call double @"floor@FF"(double %output56)
  %output58 = fadd double %return57, 5.000000e-01
  %output60 = fmul double %output58, %cellsize35
  %output63 = call double @"div@FF"(double %return34, double %cellsize35)
  %return64 = call double @"floor@FF"(double %output63)
  %output65 = fadd double %return64, 5.000000e-01
  %output67 = fmul double %output65, %cellsize35
  %output70 = fsub double %return32, %output60
  %output73 = fsub double %return34, %output67
  %output76 = fmul double %output70, %output70
  %output79 = fmul double %output73, %output73
  %output80 = fadd double %output76, %output79
  %return82 = fcmp ogt double %output80, %output27
  br i1 %return82, label %true84, label %false85

end40:                                            ; preds = %true84, %false85, %true38
  ret void

true84:                                           ; preds = %false39
  %w87 = load double, double* %w
  %output89 = fmul double %w87, %return32
  %tmp90 = load <2 x double>, <2 x double>* %p
  %return91 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp90, double %output89, i64 0)
  %output93 = extractvalue { double, <2 x double> } %return91, 1
  store <2 x double> %output93, <2 x double>* %p
  %w94 = load double, double* %w
  %output96 = fmul double %w94, %return34
  %return98 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output93, double %output96, i64 1)
  %output100 = extractvalue { double, <2 x double> } %return98, 1
  store <2 x double> %output100, <2 x double>* %p
  br label %end40

false85:                                          ; preds = %false39
  %output103 = fmul double %output70, %output10
  %output106 = fmul double %output73, %output10
  %output110 = fmul double %output103, %output103
  %output113 = fmul double %output106, %output106
  %output114 = fadd double %output110, %output113
  %output115 = call double @"div@FF"(double %output114, double 4.000000e+00)
  %output116 = fadd double %output115, 1.000000e+00
  %output117 = call double @"div@FF"(double %output30, double %output116)
  %output120 = fmul double %output103, %output117
  %output123 = fmul double %output106, %output117
  %output126 = fmul double %output120, %output120
  %output129 = fmul double %output123, %output123
  %output130 = fadd double %output126, %output129
  %output132 = call double @"div@FF"(double %output130, double %output27)
  %innertwist133 = load double, double* %innertwist
  %output135 = fsub double 1.000000e+00, %output132
  %output136 = fmul double %innertwist133, %output135
  %outertwist137 = load double, double* %outertwist
  %output139 = fmul double %outertwist137, %output132
  %output140 = fadd double %output136, %output139
  store double %output140, double* %0
  call void @"sincos@FFF"(double* %0, double* %ss, double* %cc)
  %cc143 = load double, double* %cc
  %output145 = fmul double %cc143, %output120
  %output146 = fadd double %output60, %output145
  %ss147 = load double, double* %ss
  %output149 = fmul double %ss147, %output123
  %output150 = fadd double %output146, %output149
  %output154 = fmul double %ss147, %output120
  %output155 = fsub double %output67, %output154
  %output158 = fmul double %cc143, %output123
  %output159 = fadd double %output155, %output158
  %w160 = load double, double* %w
  %output162 = fmul double %w160, %output150
  %tmp163 = load <2 x double>, <2 x double>* %p
  %return164 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp163, double %output162, i64 0)
  %output166 = extractvalue { double, <2 x double> } %return164, 1
  store <2 x double> %output166, <2 x double>* %p
  %w167 = load double, double* %w
  %output169 = fmul double %w167, %output159
  %return171 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output166, double %output169, i64 1)
  %output173 = extractvalue { double, <2 x double> } %return171, 1
  store <2 x double> %output173, <2 x double>* %p
  br label %end40
}

; Function Attrs: alwaysinline nounwind
define private void @"V_HEMISPHERE@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %w4 = load double, double* %w
  %_p5 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p5, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %output6 = fadd double %SUMSQ, 1.000000e+00
  %return = call double @"sqrt@FF"(double %output6)
  %output7 = call double @"div@FF"(double %w4, double %return)
  %output10 = fmul double %output2, %output7
  %tmp = load <2 x double>, <2 x double>* %p
  %return11 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output10, i64 0)
  %output13 = extractvalue { double, <2 x double> } %return11, 1
  store <2 x double> %output13, <2 x double>* %p
  %output16 = fmul double %output3, %output7
  %return18 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output13, double %output16, i64 1)
  %output20 = extractvalue { double, <2 x double> } %return18, 1
  store <2 x double> %output20, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_POLYNOMIAL@UUFUUU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %pow, <2 x double>* %lc, <2 x double>* %sc) #1 {
__llvm_entry:
  %0 = alloca double
  %1 = alloca double
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %pow4 = load <2 x double>, <2 x double>* %pow
  %output5 = call { double, double } @"assign@FFU"(<2 x double> %pow4)
  %output6 = extractvalue { double, double } %output5, 0
  %output7 = extractvalue { double, double } %output5, 1
  %lc8 = load <2 x double>, <2 x double>* %lc
  %output9 = call { double, double } @"assign@FFU"(<2 x double> %lc8)
  %output10 = extractvalue { double, double } %output9, 0
  %output11 = extractvalue { double, double } %output9, 1
  %sc12 = load <2 x double>, <2 x double>* %sc
  %output13 = call { double, double } @"assign@FFU"(<2 x double> %sc12)
  %output14 = extractvalue { double, double } %output13, 0
  %output15 = extractvalue { double, double } %output13, 1
  %w16 = load double, double* %w
  %return = call double @"abs@FF"(double %w16)
  %return18 = call double @"abs@FF"(double %output2)
  %output19 = fmul double %return, %return18
  %return21 = call double @"pow@FFF"(double %output19, double %output6)
  %w22 = load double, double* %w
  %return23 = call double @"abs@FF"(double %w22)
  %return25 = call double @"abs@FF"(double %output3)
  %output26 = fmul double %return23, %return25
  %return28 = call double @"pow@FFF"(double %output26, double %output7)
  store double %output2, double* %0
  %sgn = call double @"sgn@FF"(double* %0)
  %output31 = fmul double %return21, %sgn
  %output34 = fmul double %output10, %output2
  %output35 = fadd double %output31, %output34
  %output37 = fadd double %output35, %output14
  %tmp = load <2 x double>, <2 x double>* %p
  %return38 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output37, i64 0)
  %output40 = extractvalue { double, <2 x double> } %return38, 1
  store <2 x double> %output40, <2 x double>* %p
  store double %output3, double* %1
  %sgn43 = call double @"sgn@FF"(double* %1)
  %output44 = fmul double %return28, %sgn43
  %output47 = fmul double %output11, %output3
  %output48 = fadd double %output44, %output47
  %output50 = fadd double %output48, %output15
  %tmp51 = load <2 x double>, <2 x double>* %p
  %return52 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp51, double %output50, i64 1)
  %output54 = extractvalue { double, <2 x double> } %return52, 1
  store <2 x double> %output54, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_CROP@UUFFFFFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %m_X0, double* %m_Y0, double* %m_X1, double* %m_Y1, double* %m_S, double* %m_Z) #1 {
__llvm_entry:
  %m_X01 = load double, double* %m_X0
  %m_X12 = load double, double* %m_X1
  %return = fcmp olt double %m_X01, %m_X12
  br i1 %return, label %true, label %false

true:                                             ; preds = %__llvm_entry
  br label %end

false:                                            ; preds = %__llvm_entry
  br label %end

end:                                              ; preds = %false, %true
  %m_X0_.0 = phi double [ %m_X01, %true ], [ %m_X12, %false ]
  %m_X1_.0 = phi double [ %m_X12, %true ], [ %m_X01, %false ]
  %m_Y08 = load double, double* %m_Y0
  %m_Y19 = load double, double* %m_Y1
  %return10 = fcmp olt double %m_Y08, %m_Y19
  br i1 %return10, label %true12, label %false13

true12:                                           ; preds = %end
  br label %end14

false13:                                          ; preds = %end
  br label %end14

end14:                                            ; preds = %false13, %true12
  %m_Y0_.0 = phi double [ %m_Y08, %true12 ], [ %m_Y19, %false13 ]
  %m_Y1_.0 = phi double [ %m_Y19, %true12 ], [ %m_Y08, %false13 ]
  %output = fsub double %m_X1_.0, %m_X0_.0
  %output21 = fmul double %output, 5.000000e-01
  %m_S22 = load double, double* %m_S
  %output23 = fmul double %output21, %m_S22
  %output26 = fsub double %m_Y1_.0, %m_Y0_.0
  %output27 = fmul double %output26, 5.000000e-01
  %output29 = fmul double %output27, %m_S22
  %_p30 = load <2 x double>, <2 x double>* %_p
  %return31 = call double @"getcomp@FUI"(<2 x double> %_p30, i64 0)
  %return33 = call double @"getcomp@FUI"(<2 x double> %_p30, i64 1)
  %return36 = fcmp olt double %return31, %m_X0_.0
  %return37 = zext i1 %return36 to i64
  %return40 = fcmp ogt double %return31, %m_X1_.0
  %return41 = zext i1 %return40 to i64
  %return42 = call i64 @"or@III"(i64 %return37, i64 %return41)
  %return45 = fcmp olt double %return33, %m_Y0_.0
  %return46 = zext i1 %return45 to i64
  %return47 = call i64 @"or@III"(i64 %return42, i64 %return46)
  %return50 = fcmp ogt double %return33, %m_Y1_.0
  %return51 = zext i1 %return50 to i64
  %return52 = call i64 @"or@III"(i64 %return47, i64 %return51)
  %m_Z53 = load double, double* %m_Z
  %return54 = fcmp one double %m_Z53, 0.000000e+00
  %return55 = zext i1 %return54 to i64
  %return56 = call i64 @"and@III"(i64 %return52, i64 %return55)
  %0 = icmp ne i64 %return56, 0
  br i1 %0, label %true57, label %false58

true57:                                           ; preds = %end14
  br label %end59

false58:                                          ; preds = %end14
  br i1 %return36, label %true64, label %false65

end59:                                            ; preds = %false88, %true99, %true87, %true57
  %x.0 = phi double [ 0.000000e+00, %true57 ], [ %x.1, %true87 ], [ %x.1, %true99 ], [ %x.1, %false88 ]
  %y.0 = phi double [ 0.000000e+00, %true57 ], [ %output94, %true87 ], [ %output105, %true99 ], [ %return33, %false88 ]
  %w106 = load double, double* %w
  %output108 = fmul double %w106, %x.0
  %tmp = load <2 x double>, <2 x double>* %p
  %return109 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output108, i64 0)
  %output111 = extractvalue { double, <2 x double> } %return109, 1
  store <2 x double> %output111, <2 x double>* %p
  %w112 = load double, double* %w
  %output114 = fmul double %w112, %y.0
  %return116 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output111, double %output114, i64 1)
  %output118 = extractvalue { double, <2 x double> } %return116, 1
  store <2 x double> %output118, <2 x double>* %p
  ret void

true64:                                           ; preds = %false58
  %return68 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output70 = fmul double %return68, %output23
  %output71 = fadd double %m_X0_.0, %output70
  br label %end66

false65:                                          ; preds = %false58
  br i1 %return40, label %true76, label %end66

end66:                                            ; preds = %false65, %true76, %true64
  %x.1 = phi double [ %output71, %true64 ], [ %output82, %true76 ], [ %return31, %false65 ]
  br i1 %return45, label %true87, label %false88

true76:                                           ; preds = %false65
  %return79 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output81 = fmul double %return79, %output23
  %output82 = fsub double %m_X1_.0, %output81
  br label %end66

true87:                                           ; preds = %end66
  %return91 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output93 = fmul double %return91, %output29
  %output94 = fadd double %m_Y0_.0, %output93
  br label %end59

false88:                                          ; preds = %end66
  br i1 %return50, label %true99, label %end59

true99:                                           ; preds = %false88
  %return102 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output104 = fmul double %return102, %output29
  %output105 = fsub double %m_Y1_.0, %output104
  br label %end59
}

; Function Attrs: alwaysinline nounwind
define private void @"V_UNPOLAR@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %s = alloca double
  %c = alloca double
  %0 = alloca double
  store double 0.000000e+00, double* %s, !vex-initializer-store !3
  store double 0.000000e+00, double* %c, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %w4 = load double, double* %w
  %output5 = call double @"div@FF"(double %w4, double 0x400921FB4D12D84A)
  %output6 = fmul double %output5, 5.000000e-01
  %return = call double @"exp@FF"(double %output3)
  store double %output2, double* %0
  call void @"sincos@FFF"(double* %0, double* %s, double* %c)
  %output11 = fmul double %output6, %return
  %s12 = load double, double* %s
  %output13 = fmul double %output11, %s12
  %tmp = load <2 x double>, <2 x double>* %p
  %return14 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output13, i64 0)
  %output16 = extractvalue { double, <2 x double> } %return14, 1
  store <2 x double> %output16, <2 x double>* %p
  %c20 = load double, double* %c
  %output21 = fmul double %output11, %c20
  %return23 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output16, double %output21, i64 1)
  %output25 = extractvalue { double, <2 x double> } %return23, 1
  store <2 x double> %output25, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_GLYNNIA@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca double
  %2 = alloca double
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %w4 = load double, double* %w
  %return = call double @"sqrt@FF"(double 2.000000e+00)
  %output5 = fmul double %w4, %return
  %output6 = call double @"div@FF"(double %output5, double 2.000000e+00)
  %_p7 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p7, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %return9 = fcmp ogt double %SQRT, 1.000000e+00
  %return11 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return12 = fcmp ogt double %return11, 5.000000e-01
  br i1 %return9, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output19 = fadd double %SQRT, %output2
  br i1 %return12, label %true14, label %false15

false:                                            ; preds = %__llvm_entry
  br i1 %return12, label %true69, label %false70

end:                                              ; preds = %true69, %false70, %true14, %false15
  ret void

true14:                                           ; preds = %true
  %return20 = call double @"sqrt@FF"(double %output19)
  %output23 = fmul double %output6, %return20
  %tmp = load <2 x double>, <2 x double>* %p
  %return24 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output23, i64 0)
  %output26 = extractvalue { double, <2 x double> } %return24, 1
  store <2 x double> %output26, <2 x double>* %p
  %output29 = call double @"div@FF"(double %output6, double %return20)
  %output31 = fmul double %output29, %output3
  %return32 = call double @"neg@FF"(double %output31)
  %return34 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output26, double %return32, i64 1)
  %output36 = extractvalue { double, <2 x double> } %return34, 1
  store <2 x double> %output36, <2 x double>* %p
  br label %end

false15:                                          ; preds = %true
  %w40 = load double, double* %w
  %output44 = fmul double %output3, %output3
  %output47 = fmul double %output19, %output19
  %output48 = fadd double %output44, %output47
  %output49 = fmul double %SQRT, %output48
  %return50 = call double @"sqrt@FF"(double %output49)
  %output51 = call double @"div@FF"(double %w40, double %return50)
  %output54 = fmul double %output51, %output19
  %tmp55 = load <2 x double>, <2 x double>* %p
  %return56 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp55, double %output54, i64 0)
  %output58 = extractvalue { double, <2 x double> } %return56, 1
  store <2 x double> %output58, <2 x double>* %p
  %output61 = fmul double %output51, %output3
  %return63 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output58, double %output61, i64 1)
  %output65 = extractvalue { double, <2 x double> } %return63, 1
  store <2 x double> %output65, <2 x double>* %p
  br label %end

true69:                                           ; preds = %false
  %output74 = fadd double %SQRT, %output2
  %return75 = call double @"sqrt@FF"(double %output74)
  store double %return75, double* %1
  %Zeps = call double @"Zeps@FF"(double* %1)
  %output78 = fmul double %output6, %Zeps
  %return79 = call double @"neg@FF"(double %output78)
  %tmp80 = load <2 x double>, <2 x double>* %p
  %return81 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp80, double %return79, i64 0)
  %output83 = extractvalue { double, <2 x double> } %return81, 1
  store <2 x double> %output83, <2 x double>* %p
  %output86 = call double @"div@FF"(double %output6, double %Zeps)
  %output88 = fmul double %output86, %output3
  %return89 = call double @"neg@FF"(double %output88)
  %return91 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output83, double %return89, i64 1)
  %output93 = extractvalue { double, <2 x double> } %return91, 1
  store <2 x double> %output93, <2 x double>* %p
  br label %end

false70:                                          ; preds = %false
  %output96 = fadd double %SQRT, %output2
  %w97 = load double, double* %w
  %output101 = fmul double %output3, %output3
  %output104 = fmul double %output96, %output96
  %output105 = fadd double %output101, %output104
  %output106 = fmul double %SQRT, %output105
  %return107 = call double @"sqrt@FF"(double %output106)
  store double %return107, double* %2
  %Zeps108 = call double @"Zeps@FF"(double* %2)
  %output109 = call double @"div@FF"(double %w97, double %Zeps108)
  %output112 = fmul double %output109, %output96
  %return113 = call double @"neg@FF"(double %output112)
  %tmp114 = load <2 x double>, <2 x double>* %p
  %return115 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp114, double %return113, i64 0)
  %output117 = extractvalue { double, <2 x double> } %return115, 1
  store <2 x double> %output117, <2 x double>* %p
  %output120 = fmul double %output109, %output3
  %return122 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output117, double %output120, i64 1)
  %output124 = extractvalue { double, <2 x double> } %return122, 1
  store <2 x double> %output124, <2 x double>* %p
  br label %end
}

; Function Attrs: alwaysinline nounwind
define private void @"V_POINT_SYMMETRY@UUFFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %m_Order, double* %m_X, double* %m_Y) #1 {
__llvm_entry:
  %0 = alloca double
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %m_Order4 = load double, double* %m_Order
  store double %m_Order4, double* %0
  %Zeps = call double @"Zeps@FF"(double* %0)
  %output5 = call double @"div@FF"(double 0x401921FB54442D18, double %Zeps)
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %m_Order6 = load double, double* %m_Order
  %output7 = fmul double %return, %m_Order6
  %return8 = call double @"floor@FF"(double %output7)
  %output10 = fmul double %return8, %output5
  %m_X12 = load double, double* %m_X
  %output13 = fsub double %output2, %m_X12
  %w14 = load double, double* %w
  %output15 = fmul double %output13, %w14
  %m_Y17 = load double, double* %m_Y
  %output18 = fsub double %output3, %m_Y17
  %output20 = fmul double %output18, %w14
  %return22 = call double @"cos@FF"(double %output10)
  %return24 = call double @"sin@FF"(double %output10)
  %output28 = fmul double %output15, %return22
  %output29 = fadd double %m_X12, %output28
  %output32 = fmul double %output20, %return24
  %output33 = fadd double %output29, %output32
  %tmp = load <2 x double>, <2 x double>* %p
  %return34 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output33, i64 0)
  %output36 = extractvalue { double, <2 x double> } %return34, 1
  store <2 x double> %output36, <2 x double>* %p
  %m_Y37 = load double, double* %m_Y
  %output40 = fmul double %output20, %return22
  %output41 = fadd double %m_Y37, %output40
  %output44 = fmul double %output15, %return24
  %output45 = fsub double %output41, %output44
  %return47 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output36, double %output45, i64 1)
  %output49 = extractvalue { double, <2 x double> } %return47, 1
  store <2 x double> %output49, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private i64 @"XAOS@IIF[F"(i64* %idx, double* %res, double** %XST) #1 {
__llvm_entry:
  %res1 = load double, double* %res
  %return = fcmp olt double %res1, 1.500000e+01
  br i1 %return, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %return4 = fcmp oeq double %res1, 2.000000e+00
  br i1 %return4, label %true6, label %false7

false:                                            ; preds = %__llvm_entry
  %return1004 = fcmp olt double %res1, 2.100000e+01
  br i1 %return1004, label %true1006, label %end

end:                                              ; preds = %false1992, %false1903, %false1642, %false1804, %false1724, %false1624, %false1544, %false1453, %false1382, %false1291, %false1220, %false1138, %false1076, %false, %false989, %false927, %false751, %false855, %false733, %false620, %false516, %false421, %false335, %false258, %false190, %true153, %false131, %false81, %false40
  %idx2006 = load i64, i64* %idx
  br label %UnifiedReturnBlock

true6:                                            ; preds = %true
  %idx9 = load i64, i64* %idx
  %return10 = call i64 @"eq@III"(i64 %idx9, i64 0)
  %0 = icmp ne i64 %return10, 0
  %XST14 = load double*, double** %XST
  br i1 %0, label %true11, label %false12

false7:                                           ; preds = %true
  %return23 = fcmp oeq double %res1, 3.000000e+00
  br i1 %return23, label %true25, label %false26

true11:                                           ; preds = %true6
  %return15 = call double* @"slice@[F[FIIIIII"(double* %XST14, i64 1, i64 0, i64 1, i64 2, i64 0, i64 0)
  %return16 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return17 = call i64 @"sample_cdf@[FFI"(double* %return15, double %return16)
  br label %UnifiedReturnBlock

false12:                                          ; preds = %true6
  %return19 = call double* @"slice@[F[FIIIIII"(double* %XST14, i64 1, i64 2, i64 1, i64 4, i64 0, i64 0)
  %return20 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return21 = call i64 @"sample_cdf@[FFI"(double* %return19, double %return20)
  br label %UnifiedReturnBlock

true25:                                           ; preds = %false7
  %idx28 = load i64, i64* %idx
  %return29 = call i64 @"eq@III"(i64 %idx28, i64 0)
  %1 = icmp ne i64 %return29, 0
  br i1 %1, label %true30, label %false31

false26:                                          ; preds = %false7
  %return55 = fcmp oeq double %res1, 4.000000e+00
  br i1 %return55, label %true57, label %false58

true30:                                           ; preds = %true25
  %XST33 = load double*, double** %XST
  %return34 = call double* @"slice@[F[FIIIIII"(double* %XST33, i64 1, i64 0, i64 1, i64 3, i64 0, i64 0)
  %return35 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return36 = call i64 @"sample_cdf@[FFI"(double* %return34, double %return35)
  br label %UnifiedReturnBlock

false31:                                          ; preds = %true25
  %return38 = call i64 @"eq@III"(i64 %idx28, i64 1)
  %2 = icmp ne i64 %return38, 0
  br i1 %2, label %true39, label %false40

true39:                                           ; preds = %false31
  %XST42 = load double*, double** %XST
  %return43 = call double* @"slice@[F[FIIIIII"(double* %XST42, i64 1, i64 3, i64 1, i64 6, i64 0, i64 0)
  %return44 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return45 = call i64 @"sample_cdf@[FFI"(double* %return43, double %return44)
  br label %UnifiedReturnBlock

false40:                                          ; preds = %false31
  %return47 = call i64 @"eq@III"(i64 %idx28, i64 2)
  %3 = icmp ne i64 %return47, 0
  br i1 %3, label %true48, label %end

true48:                                           ; preds = %false40
  %XST50 = load double*, double** %XST
  %return51 = call double* @"slice@[F[FIIIIII"(double* %XST50, i64 1, i64 6, i64 1, i64 9, i64 0, i64 0)
  %return52 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return53 = call i64 @"sample_cdf@[FFI"(double* %return51, double %return52)
  br label %UnifiedReturnBlock

true57:                                           ; preds = %false26
  %idx60 = load i64, i64* %idx
  %return61 = call i64 @"eq@III"(i64 %idx60, i64 0)
  %4 = icmp ne i64 %return61, 0
  br i1 %4, label %true62, label %false63

false58:                                          ; preds = %false26
  %return96 = fcmp oeq double %res1, 5.000000e+00
  br i1 %return96, label %true98, label %false99

true62:                                           ; preds = %true57
  %XST65 = load double*, double** %XST
  %return66 = call double* @"slice@[F[FIIIIII"(double* %XST65, i64 1, i64 0, i64 1, i64 4, i64 0, i64 0)
  %return67 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return68 = call i64 @"sample_cdf@[FFI"(double* %return66, double %return67)
  br label %UnifiedReturnBlock

false63:                                          ; preds = %true57
  %return70 = call i64 @"eq@III"(i64 %idx60, i64 1)
  %5 = icmp ne i64 %return70, 0
  br i1 %5, label %true71, label %false72

true71:                                           ; preds = %false63
  %XST74 = load double*, double** %XST
  %return75 = call double* @"slice@[F[FIIIIII"(double* %XST74, i64 1, i64 4, i64 1, i64 8, i64 0, i64 0)
  %return76 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return77 = call i64 @"sample_cdf@[FFI"(double* %return75, double %return76)
  br label %UnifiedReturnBlock

false72:                                          ; preds = %false63
  %return79 = call i64 @"eq@III"(i64 %idx60, i64 2)
  %6 = icmp ne i64 %return79, 0
  br i1 %6, label %true80, label %false81

true80:                                           ; preds = %false72
  %XST83 = load double*, double** %XST
  %return84 = call double* @"slice@[F[FIIIIII"(double* %XST83, i64 1, i64 8, i64 1, i64 12, i64 0, i64 0)
  %return85 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return86 = call i64 @"sample_cdf@[FFI"(double* %return84, double %return85)
  br label %UnifiedReturnBlock

false81:                                          ; preds = %false72
  %return88 = call i64 @"eq@III"(i64 %idx60, i64 3)
  %7 = icmp ne i64 %return88, 0
  br i1 %7, label %true89, label %end

true89:                                           ; preds = %false81
  %XST91 = load double*, double** %XST
  %return92 = call double* @"slice@[F[FIIIIII"(double* %XST91, i64 1, i64 12, i64 1, i64 16, i64 0, i64 0)
  %return93 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return94 = call i64 @"sample_cdf@[FFI"(double* %return92, double %return93)
  br label %UnifiedReturnBlock

true98:                                           ; preds = %false58
  %idx101 = load i64, i64* %idx
  %return102 = call i64 @"eq@III"(i64 %idx101, i64 0)
  %8 = icmp ne i64 %return102, 0
  br i1 %8, label %true103, label %false104

false99:                                          ; preds = %false58
  %return146 = fcmp oeq double %res1, 6.000000e+00
  br i1 %return146, label %true148, label %false149

true103:                                          ; preds = %true98
  %XST106 = load double*, double** %XST
  %return107 = call double* @"slice@[F[FIIIIII"(double* %XST106, i64 1, i64 0, i64 1, i64 5, i64 0, i64 0)
  %return108 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return109 = call i64 @"sample_cdf@[FFI"(double* %return107, double %return108)
  br label %UnifiedReturnBlock

false104:                                         ; preds = %true98
  %return111 = call i64 @"eq@III"(i64 %idx101, i64 1)
  %9 = icmp ne i64 %return111, 0
  br i1 %9, label %true112, label %false113

true112:                                          ; preds = %false104
  %XST115 = load double*, double** %XST
  %return116 = call double* @"slice@[F[FIIIIII"(double* %XST115, i64 1, i64 5, i64 1, i64 10, i64 0, i64 0)
  %return117 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return118 = call i64 @"sample_cdf@[FFI"(double* %return116, double %return117)
  br label %UnifiedReturnBlock

false113:                                         ; preds = %false104
  %return120 = call i64 @"eq@III"(i64 %idx101, i64 2)
  %10 = icmp ne i64 %return120, 0
  br i1 %10, label %true121, label %false122

true121:                                          ; preds = %false113
  %XST124 = load double*, double** %XST
  %return125 = call double* @"slice@[F[FIIIIII"(double* %XST124, i64 1, i64 10, i64 1, i64 15, i64 0, i64 0)
  %return126 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return127 = call i64 @"sample_cdf@[FFI"(double* %return125, double %return126)
  br label %UnifiedReturnBlock

false122:                                         ; preds = %false113
  %return129 = call i64 @"eq@III"(i64 %idx101, i64 3)
  %11 = icmp ne i64 %return129, 0
  br i1 %11, label %true130, label %false131

true130:                                          ; preds = %false122
  %XST133 = load double*, double** %XST
  %return134 = call double* @"slice@[F[FIIIIII"(double* %XST133, i64 1, i64 15, i64 1, i64 20, i64 0, i64 0)
  %return135 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return136 = call i64 @"sample_cdf@[FFI"(double* %return134, double %return135)
  br label %UnifiedReturnBlock

false131:                                         ; preds = %false122
  %return138 = call i64 @"eq@III"(i64 %idx101, i64 4)
  %12 = icmp ne i64 %return138, 0
  br i1 %12, label %true139, label %end

true139:                                          ; preds = %false131
  %XST141 = load double*, double** %XST
  %return142 = call double* @"slice@[F[FIIIIII"(double* %XST141, i64 1, i64 20, i64 1, i64 25, i64 0, i64 0)
  %return143 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return144 = call i64 @"sample_cdf@[FFI"(double* %return142, double %return143)
  br label %UnifiedReturnBlock

true148:                                          ; preds = %false99
  %idx151 = load i64, i64* %idx
  %return152 = call i64 @"eq@III"(i64 %idx151, i64 0)
  %13 = icmp ne i64 %return152, 0
  br i1 %13, label %true153, label %false154

false149:                                         ; preds = %false99
  %return205 = fcmp oeq double %res1, 7.000000e+00
  br i1 %return205, label %true207, label %false208

true153:                                          ; preds = %true148
  %XST156 = load double*, double** %XST
  %return157 = call double* @"slice@[F[FIIIIII"(double* %XST156, i64 1, i64 0, i64 1, i64 6, i64 0, i64 0)
  %return158 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return159 = call i64 @"sample_cdf@[FFI"(double* %return157, double %return158)
  store i64 %return159, i64* %idx
  br label %end

false154:                                         ; preds = %true148
  %return161 = call i64 @"eq@III"(i64 %idx151, i64 1)
  %14 = icmp ne i64 %return161, 0
  br i1 %14, label %true162, label %false163

true162:                                          ; preds = %false154
  %XST165 = load double*, double** %XST
  %return166 = call double* @"slice@[F[FIIIIII"(double* %XST165, i64 1, i64 6, i64 1, i64 12, i64 0, i64 0)
  %return167 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return168 = call i64 @"sample_cdf@[FFI"(double* %return166, double %return167)
  br label %UnifiedReturnBlock

false163:                                         ; preds = %false154
  %return170 = call i64 @"eq@III"(i64 %idx151, i64 2)
  %15 = icmp ne i64 %return170, 0
  br i1 %15, label %true171, label %false172

true171:                                          ; preds = %false163
  %XST174 = load double*, double** %XST
  %return175 = call double* @"slice@[F[FIIIIII"(double* %XST174, i64 1, i64 12, i64 1, i64 18, i64 0, i64 0)
  %return176 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return177 = call i64 @"sample_cdf@[FFI"(double* %return175, double %return176)
  br label %UnifiedReturnBlock

false172:                                         ; preds = %false163
  %return179 = call i64 @"eq@III"(i64 %idx151, i64 3)
  %16 = icmp ne i64 %return179, 0
  br i1 %16, label %true180, label %false181

true180:                                          ; preds = %false172
  %XST183 = load double*, double** %XST
  %return184 = call double* @"slice@[F[FIIIIII"(double* %XST183, i64 1, i64 18, i64 1, i64 24, i64 0, i64 0)
  %return185 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return186 = call i64 @"sample_cdf@[FFI"(double* %return184, double %return185)
  br label %UnifiedReturnBlock

false181:                                         ; preds = %false172
  %return188 = call i64 @"eq@III"(i64 %idx151, i64 4)
  %17 = icmp ne i64 %return188, 0
  br i1 %17, label %true189, label %false190

true189:                                          ; preds = %false181
  %XST192 = load double*, double** %XST
  %return193 = call double* @"slice@[F[FIIIIII"(double* %XST192, i64 1, i64 24, i64 1, i64 30, i64 0, i64 0)
  %return194 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return195 = call i64 @"sample_cdf@[FFI"(double* %return193, double %return194)
  br label %UnifiedReturnBlock

false190:                                         ; preds = %false181
  %return197 = call i64 @"eq@III"(i64 %idx151, i64 5)
  %18 = icmp ne i64 %return197, 0
  br i1 %18, label %true198, label %end

true198:                                          ; preds = %false190
  %XST200 = load double*, double** %XST
  %return201 = call double* @"slice@[F[FIIIIII"(double* %XST200, i64 1, i64 30, i64 1, i64 36, i64 0, i64 0)
  %return202 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return203 = call i64 @"sample_cdf@[FFI"(double* %return201, double %return202)
  br label %UnifiedReturnBlock

true207:                                          ; preds = %false149
  %idx210 = load i64, i64* %idx
  %return211 = call i64 @"eq@III"(i64 %idx210, i64 0)
  %19 = icmp ne i64 %return211, 0
  br i1 %19, label %true212, label %false213

false208:                                         ; preds = %false149
  %return273 = fcmp oeq double %res1, 8.000000e+00
  br i1 %return273, label %true275, label %false276

true212:                                          ; preds = %true207
  %XST215 = load double*, double** %XST
  %return216 = call double* @"slice@[F[FIIIIII"(double* %XST215, i64 1, i64 0, i64 1, i64 7, i64 0, i64 0)
  %return217 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return218 = call i64 @"sample_cdf@[FFI"(double* %return216, double %return217)
  br label %UnifiedReturnBlock

false213:                                         ; preds = %true207
  %return220 = call i64 @"eq@III"(i64 %idx210, i64 1)
  %20 = icmp ne i64 %return220, 0
  br i1 %20, label %true221, label %false222

true221:                                          ; preds = %false213
  %XST224 = load double*, double** %XST
  %return225 = call double* @"slice@[F[FIIIIII"(double* %XST224, i64 1, i64 7, i64 1, i64 14, i64 0, i64 0)
  %return226 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return227 = call i64 @"sample_cdf@[FFI"(double* %return225, double %return226)
  br label %UnifiedReturnBlock

false222:                                         ; preds = %false213
  %return229 = call i64 @"eq@III"(i64 %idx210, i64 2)
  %21 = icmp ne i64 %return229, 0
  br i1 %21, label %true230, label %false231

true230:                                          ; preds = %false222
  %XST233 = load double*, double** %XST
  %return234 = call double* @"slice@[F[FIIIIII"(double* %XST233, i64 1, i64 14, i64 1, i64 21, i64 0, i64 0)
  %return235 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return236 = call i64 @"sample_cdf@[FFI"(double* %return234, double %return235)
  br label %UnifiedReturnBlock

false231:                                         ; preds = %false222
  %return238 = call i64 @"eq@III"(i64 %idx210, i64 3)
  %22 = icmp ne i64 %return238, 0
  br i1 %22, label %true239, label %false240

true239:                                          ; preds = %false231
  %XST242 = load double*, double** %XST
  %return243 = call double* @"slice@[F[FIIIIII"(double* %XST242, i64 1, i64 21, i64 1, i64 28, i64 0, i64 0)
  %return244 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return245 = call i64 @"sample_cdf@[FFI"(double* %return243, double %return244)
  br label %UnifiedReturnBlock

false240:                                         ; preds = %false231
  %return247 = call i64 @"eq@III"(i64 %idx210, i64 4)
  %23 = icmp ne i64 %return247, 0
  br i1 %23, label %true248, label %false249

true248:                                          ; preds = %false240
  %XST251 = load double*, double** %XST
  %return252 = call double* @"slice@[F[FIIIIII"(double* %XST251, i64 1, i64 28, i64 1, i64 35, i64 0, i64 0)
  %return253 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return254 = call i64 @"sample_cdf@[FFI"(double* %return252, double %return253)
  br label %UnifiedReturnBlock

false249:                                         ; preds = %false240
  %return256 = call i64 @"eq@III"(i64 %idx210, i64 5)
  %24 = icmp ne i64 %return256, 0
  br i1 %24, label %true257, label %false258

true257:                                          ; preds = %false249
  %XST260 = load double*, double** %XST
  %return261 = call double* @"slice@[F[FIIIIII"(double* %XST260, i64 1, i64 35, i64 1, i64 42, i64 0, i64 0)
  %return262 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return263 = call i64 @"sample_cdf@[FFI"(double* %return261, double %return262)
  br label %UnifiedReturnBlock

false258:                                         ; preds = %false249
  %return265 = call i64 @"eq@III"(i64 %idx210, i64 6)
  %25 = icmp ne i64 %return265, 0
  br i1 %25, label %true266, label %end

true266:                                          ; preds = %false258
  %XST268 = load double*, double** %XST
  %return269 = call double* @"slice@[F[FIIIIII"(double* %XST268, i64 1, i64 42, i64 1, i64 49, i64 0, i64 0)
  %return270 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return271 = call i64 @"sample_cdf@[FFI"(double* %return269, double %return270)
  br label %UnifiedReturnBlock

true275:                                          ; preds = %false208
  %idx278 = load i64, i64* %idx
  %return279 = call i64 @"eq@III"(i64 %idx278, i64 0)
  %26 = icmp ne i64 %return279, 0
  br i1 %26, label %true280, label %false281

false276:                                         ; preds = %false208
  %return350 = fcmp oeq double %res1, 9.000000e+00
  br i1 %return350, label %true352, label %false353

true280:                                          ; preds = %true275
  %XST283 = load double*, double** %XST
  %return284 = call double* @"slice@[F[FIIIIII"(double* %XST283, i64 1, i64 0, i64 1, i64 8, i64 0, i64 0)
  %return285 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return286 = call i64 @"sample_cdf@[FFI"(double* %return284, double %return285)
  br label %UnifiedReturnBlock

false281:                                         ; preds = %true275
  %return288 = call i64 @"eq@III"(i64 %idx278, i64 1)
  %27 = icmp ne i64 %return288, 0
  br i1 %27, label %true289, label %false290

true289:                                          ; preds = %false281
  %XST292 = load double*, double** %XST
  %return293 = call double* @"slice@[F[FIIIIII"(double* %XST292, i64 1, i64 8, i64 1, i64 16, i64 0, i64 0)
  %return294 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return295 = call i64 @"sample_cdf@[FFI"(double* %return293, double %return294)
  br label %UnifiedReturnBlock

false290:                                         ; preds = %false281
  %return297 = call i64 @"eq@III"(i64 %idx278, i64 2)
  %28 = icmp ne i64 %return297, 0
  br i1 %28, label %true298, label %false299

true298:                                          ; preds = %false290
  %XST301 = load double*, double** %XST
  %return302 = call double* @"slice@[F[FIIIIII"(double* %XST301, i64 1, i64 16, i64 1, i64 24, i64 0, i64 0)
  %return303 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return304 = call i64 @"sample_cdf@[FFI"(double* %return302, double %return303)
  br label %UnifiedReturnBlock

false299:                                         ; preds = %false290
  %return306 = call i64 @"eq@III"(i64 %idx278, i64 3)
  %29 = icmp ne i64 %return306, 0
  br i1 %29, label %true307, label %false308

true307:                                          ; preds = %false299
  %XST310 = load double*, double** %XST
  %return311 = call double* @"slice@[F[FIIIIII"(double* %XST310, i64 1, i64 24, i64 1, i64 32, i64 0, i64 0)
  %return312 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return313 = call i64 @"sample_cdf@[FFI"(double* %return311, double %return312)
  br label %UnifiedReturnBlock

false308:                                         ; preds = %false299
  %return315 = call i64 @"eq@III"(i64 %idx278, i64 4)
  %30 = icmp ne i64 %return315, 0
  br i1 %30, label %true316, label %false317

true316:                                          ; preds = %false308
  %XST319 = load double*, double** %XST
  %return320 = call double* @"slice@[F[FIIIIII"(double* %XST319, i64 1, i64 32, i64 1, i64 40, i64 0, i64 0)
  %return321 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return322 = call i64 @"sample_cdf@[FFI"(double* %return320, double %return321)
  br label %UnifiedReturnBlock

false317:                                         ; preds = %false308
  %return324 = call i64 @"eq@III"(i64 %idx278, i64 5)
  %31 = icmp ne i64 %return324, 0
  br i1 %31, label %true325, label %false326

true325:                                          ; preds = %false317
  %XST328 = load double*, double** %XST
  %return329 = call double* @"slice@[F[FIIIIII"(double* %XST328, i64 1, i64 40, i64 1, i64 48, i64 0, i64 0)
  %return330 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return331 = call i64 @"sample_cdf@[FFI"(double* %return329, double %return330)
  br label %UnifiedReturnBlock

false326:                                         ; preds = %false317
  %return333 = call i64 @"eq@III"(i64 %idx278, i64 6)
  %32 = icmp ne i64 %return333, 0
  br i1 %32, label %true334, label %false335

true334:                                          ; preds = %false326
  %XST337 = load double*, double** %XST
  %return338 = call double* @"slice@[F[FIIIIII"(double* %XST337, i64 1, i64 48, i64 1, i64 56, i64 0, i64 0)
  %return339 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return340 = call i64 @"sample_cdf@[FFI"(double* %return338, double %return339)
  br label %UnifiedReturnBlock

false335:                                         ; preds = %false326
  %return342 = call i64 @"eq@III"(i64 %idx278, i64 7)
  %33 = icmp ne i64 %return342, 0
  br i1 %33, label %true343, label %end

true343:                                          ; preds = %false335
  %XST345 = load double*, double** %XST
  %return346 = call double* @"slice@[F[FIIIIII"(double* %XST345, i64 1, i64 56, i64 1, i64 64, i64 0, i64 0)
  %return347 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return348 = call i64 @"sample_cdf@[FFI"(double* %return346, double %return347)
  br label %UnifiedReturnBlock

true352:                                          ; preds = %false276
  %idx355 = load i64, i64* %idx
  %return356 = call i64 @"eq@III"(i64 %idx355, i64 0)
  %34 = icmp ne i64 %return356, 0
  br i1 %34, label %true357, label %false358

false353:                                         ; preds = %false276
  %return436 = fcmp oeq double %res1, 1.000000e+01
  br i1 %return436, label %true438, label %false439

true357:                                          ; preds = %true352
  %XST360 = load double*, double** %XST
  %return361 = call double* @"slice@[F[FIIIIII"(double* %XST360, i64 1, i64 0, i64 1, i64 9, i64 0, i64 0)
  %return362 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return363 = call i64 @"sample_cdf@[FFI"(double* %return361, double %return362)
  br label %UnifiedReturnBlock

false358:                                         ; preds = %true352
  %return365 = call i64 @"eq@III"(i64 %idx355, i64 1)
  %35 = icmp ne i64 %return365, 0
  br i1 %35, label %true366, label %false367

true366:                                          ; preds = %false358
  %XST369 = load double*, double** %XST
  %return370 = call double* @"slice@[F[FIIIIII"(double* %XST369, i64 1, i64 9, i64 1, i64 18, i64 0, i64 0)
  %return371 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return372 = call i64 @"sample_cdf@[FFI"(double* %return370, double %return371)
  br label %UnifiedReturnBlock

false367:                                         ; preds = %false358
  %return374 = call i64 @"eq@III"(i64 %idx355, i64 2)
  %36 = icmp ne i64 %return374, 0
  br i1 %36, label %true375, label %false376

true375:                                          ; preds = %false367
  %XST378 = load double*, double** %XST
  %return379 = call double* @"slice@[F[FIIIIII"(double* %XST378, i64 1, i64 18, i64 1, i64 27, i64 0, i64 0)
  %return380 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return381 = call i64 @"sample_cdf@[FFI"(double* %return379, double %return380)
  br label %UnifiedReturnBlock

false376:                                         ; preds = %false367
  %return383 = call i64 @"eq@III"(i64 %idx355, i64 3)
  %37 = icmp ne i64 %return383, 0
  br i1 %37, label %true384, label %false385

true384:                                          ; preds = %false376
  %XST387 = load double*, double** %XST
  %return388 = call double* @"slice@[F[FIIIIII"(double* %XST387, i64 1, i64 27, i64 1, i64 36, i64 0, i64 0)
  %return389 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return390 = call i64 @"sample_cdf@[FFI"(double* %return388, double %return389)
  br label %UnifiedReturnBlock

false385:                                         ; preds = %false376
  %return392 = call i64 @"eq@III"(i64 %idx355, i64 4)
  %38 = icmp ne i64 %return392, 0
  br i1 %38, label %true393, label %false394

true393:                                          ; preds = %false385
  %XST396 = load double*, double** %XST
  %return397 = call double* @"slice@[F[FIIIIII"(double* %XST396, i64 1, i64 36, i64 1, i64 45, i64 0, i64 0)
  %return398 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return399 = call i64 @"sample_cdf@[FFI"(double* %return397, double %return398)
  br label %UnifiedReturnBlock

false394:                                         ; preds = %false385
  %return401 = call i64 @"eq@III"(i64 %idx355, i64 5)
  %39 = icmp ne i64 %return401, 0
  br i1 %39, label %true402, label %false403

true402:                                          ; preds = %false394
  %XST405 = load double*, double** %XST
  %return406 = call double* @"slice@[F[FIIIIII"(double* %XST405, i64 1, i64 45, i64 1, i64 54, i64 0, i64 0)
  %return407 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return408 = call i64 @"sample_cdf@[FFI"(double* %return406, double %return407)
  br label %UnifiedReturnBlock

false403:                                         ; preds = %false394
  %return410 = call i64 @"eq@III"(i64 %idx355, i64 6)
  %40 = icmp ne i64 %return410, 0
  br i1 %40, label %true411, label %false412

true411:                                          ; preds = %false403
  %XST414 = load double*, double** %XST
  %return415 = call double* @"slice@[F[FIIIIII"(double* %XST414, i64 1, i64 54, i64 1, i64 63, i64 0, i64 0)
  %return416 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return417 = call i64 @"sample_cdf@[FFI"(double* %return415, double %return416)
  br label %UnifiedReturnBlock

false412:                                         ; preds = %false403
  %return419 = call i64 @"eq@III"(i64 %idx355, i64 7)
  %41 = icmp ne i64 %return419, 0
  br i1 %41, label %true420, label %false421

true420:                                          ; preds = %false412
  %XST423 = load double*, double** %XST
  %return424 = call double* @"slice@[F[FIIIIII"(double* %XST423, i64 1, i64 63, i64 1, i64 72, i64 0, i64 0)
  %return425 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return426 = call i64 @"sample_cdf@[FFI"(double* %return424, double %return425)
  br label %UnifiedReturnBlock

false421:                                         ; preds = %false412
  %return428 = call i64 @"eq@III"(i64 %idx355, i64 8)
  %42 = icmp ne i64 %return428, 0
  br i1 %42, label %true429, label %end

true429:                                          ; preds = %false421
  %XST431 = load double*, double** %XST
  %return432 = call double* @"slice@[F[FIIIIII"(double* %XST431, i64 1, i64 72, i64 1, i64 81, i64 0, i64 0)
  %return433 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return434 = call i64 @"sample_cdf@[FFI"(double* %return432, double %return433)
  br label %UnifiedReturnBlock

true438:                                          ; preds = %false353
  %idx441 = load i64, i64* %idx
  %return442 = call i64 @"eq@III"(i64 %idx441, i64 0)
  %43 = icmp ne i64 %return442, 0
  br i1 %43, label %true443, label %false444

false439:                                         ; preds = %false353
  %return531 = fcmp oeq double %res1, 1.100000e+01
  br i1 %return531, label %true533, label %false534

true443:                                          ; preds = %true438
  %XST446 = load double*, double** %XST
  %return447 = call double* @"slice@[F[FIIIIII"(double* %XST446, i64 1, i64 0, i64 1, i64 10, i64 0, i64 0)
  %return448 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return449 = call i64 @"sample_cdf@[FFI"(double* %return447, double %return448)
  br label %UnifiedReturnBlock

false444:                                         ; preds = %true438
  %return451 = call i64 @"eq@III"(i64 %idx441, i64 1)
  %44 = icmp ne i64 %return451, 0
  br i1 %44, label %true452, label %false453

true452:                                          ; preds = %false444
  %XST455 = load double*, double** %XST
  %return456 = call double* @"slice@[F[FIIIIII"(double* %XST455, i64 1, i64 10, i64 1, i64 20, i64 0, i64 0)
  %return457 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return458 = call i64 @"sample_cdf@[FFI"(double* %return456, double %return457)
  br label %UnifiedReturnBlock

false453:                                         ; preds = %false444
  %return460 = call i64 @"eq@III"(i64 %idx441, i64 2)
  %45 = icmp ne i64 %return460, 0
  br i1 %45, label %true461, label %false462

true461:                                          ; preds = %false453
  %XST464 = load double*, double** %XST
  %return465 = call double* @"slice@[F[FIIIIII"(double* %XST464, i64 1, i64 20, i64 1, i64 30, i64 0, i64 0)
  %return466 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return467 = call i64 @"sample_cdf@[FFI"(double* %return465, double %return466)
  br label %UnifiedReturnBlock

false462:                                         ; preds = %false453
  %return469 = call i64 @"eq@III"(i64 %idx441, i64 3)
  %46 = icmp ne i64 %return469, 0
  br i1 %46, label %true470, label %false471

true470:                                          ; preds = %false462
  %XST473 = load double*, double** %XST
  %return474 = call double* @"slice@[F[FIIIIII"(double* %XST473, i64 1, i64 30, i64 1, i64 40, i64 0, i64 0)
  %return475 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return476 = call i64 @"sample_cdf@[FFI"(double* %return474, double %return475)
  br label %UnifiedReturnBlock

false471:                                         ; preds = %false462
  %return478 = call i64 @"eq@III"(i64 %idx441, i64 4)
  %47 = icmp ne i64 %return478, 0
  br i1 %47, label %true479, label %false480

true479:                                          ; preds = %false471
  %XST482 = load double*, double** %XST
  %return483 = call double* @"slice@[F[FIIIIII"(double* %XST482, i64 1, i64 40, i64 1, i64 50, i64 0, i64 0)
  %return484 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return485 = call i64 @"sample_cdf@[FFI"(double* %return483, double %return484)
  br label %UnifiedReturnBlock

false480:                                         ; preds = %false471
  %return487 = call i64 @"eq@III"(i64 %idx441, i64 5)
  %48 = icmp ne i64 %return487, 0
  br i1 %48, label %true488, label %false489

true488:                                          ; preds = %false480
  %XST491 = load double*, double** %XST
  %return492 = call double* @"slice@[F[FIIIIII"(double* %XST491, i64 1, i64 50, i64 1, i64 60, i64 0, i64 0)
  %return493 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return494 = call i64 @"sample_cdf@[FFI"(double* %return492, double %return493)
  br label %UnifiedReturnBlock

false489:                                         ; preds = %false480
  %return496 = call i64 @"eq@III"(i64 %idx441, i64 6)
  %49 = icmp ne i64 %return496, 0
  br i1 %49, label %true497, label %false498

true497:                                          ; preds = %false489
  %XST500 = load double*, double** %XST
  %return501 = call double* @"slice@[F[FIIIIII"(double* %XST500, i64 1, i64 60, i64 1, i64 70, i64 0, i64 0)
  %return502 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return503 = call i64 @"sample_cdf@[FFI"(double* %return501, double %return502)
  br label %UnifiedReturnBlock

false498:                                         ; preds = %false489
  %return505 = call i64 @"eq@III"(i64 %idx441, i64 7)
  %50 = icmp ne i64 %return505, 0
  br i1 %50, label %true506, label %false507

true506:                                          ; preds = %false498
  %XST509 = load double*, double** %XST
  %return510 = call double* @"slice@[F[FIIIIII"(double* %XST509, i64 1, i64 70, i64 1, i64 80, i64 0, i64 0)
  %return511 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return512 = call i64 @"sample_cdf@[FFI"(double* %return510, double %return511)
  br label %UnifiedReturnBlock

false507:                                         ; preds = %false498
  %return514 = call i64 @"eq@III"(i64 %idx441, i64 8)
  %51 = icmp ne i64 %return514, 0
  br i1 %51, label %true515, label %false516

true515:                                          ; preds = %false507
  %XST518 = load double*, double** %XST
  %return519 = call double* @"slice@[F[FIIIIII"(double* %XST518, i64 1, i64 80, i64 1, i64 90, i64 0, i64 0)
  %return520 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return521 = call i64 @"sample_cdf@[FFI"(double* %return519, double %return520)
  br label %UnifiedReturnBlock

false516:                                         ; preds = %false507
  %return523 = call i64 @"eq@III"(i64 %idx441, i64 9)
  %52 = icmp ne i64 %return523, 0
  br i1 %52, label %true524, label %end

true524:                                          ; preds = %false516
  %XST526 = load double*, double** %XST
  %return527 = call double* @"slice@[F[FIIIIII"(double* %XST526, i64 1, i64 90, i64 1, i64 100, i64 0, i64 0)
  %return528 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return529 = call i64 @"sample_cdf@[FFI"(double* %return527, double %return528)
  br label %UnifiedReturnBlock

true533:                                          ; preds = %false439
  %idx536 = load i64, i64* %idx
  %return537 = call i64 @"eq@III"(i64 %idx536, i64 0)
  %53 = icmp ne i64 %return537, 0
  br i1 %53, label %true538, label %false539

false534:                                         ; preds = %false439
  %return635 = fcmp oeq double %res1, 1.200000e+01
  br i1 %return635, label %true637, label %false638

true538:                                          ; preds = %true533
  %XST541 = load double*, double** %XST
  %return542 = call double* @"slice@[F[FIIIIII"(double* %XST541, i64 1, i64 0, i64 1, i64 11, i64 0, i64 0)
  %return543 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return544 = call i64 @"sample_cdf@[FFI"(double* %return542, double %return543)
  br label %UnifiedReturnBlock

false539:                                         ; preds = %true533
  %return546 = call i64 @"eq@III"(i64 %idx536, i64 1)
  %54 = icmp ne i64 %return546, 0
  br i1 %54, label %true547, label %false548

true547:                                          ; preds = %false539
  %XST550 = load double*, double** %XST
  %return551 = call double* @"slice@[F[FIIIIII"(double* %XST550, i64 1, i64 11, i64 1, i64 22, i64 0, i64 0)
  %return552 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return553 = call i64 @"sample_cdf@[FFI"(double* %return551, double %return552)
  br label %UnifiedReturnBlock

false548:                                         ; preds = %false539
  %return555 = call i64 @"eq@III"(i64 %idx536, i64 2)
  %55 = icmp ne i64 %return555, 0
  br i1 %55, label %true556, label %false557

true556:                                          ; preds = %false548
  %XST559 = load double*, double** %XST
  %return560 = call double* @"slice@[F[FIIIIII"(double* %XST559, i64 1, i64 22, i64 1, i64 33, i64 0, i64 0)
  %return561 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return562 = call i64 @"sample_cdf@[FFI"(double* %return560, double %return561)
  br label %UnifiedReturnBlock

false557:                                         ; preds = %false548
  %return564 = call i64 @"eq@III"(i64 %idx536, i64 3)
  %56 = icmp ne i64 %return564, 0
  br i1 %56, label %true565, label %false566

true565:                                          ; preds = %false557
  %XST568 = load double*, double** %XST
  %return569 = call double* @"slice@[F[FIIIIII"(double* %XST568, i64 1, i64 33, i64 1, i64 44, i64 0, i64 0)
  %return570 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return571 = call i64 @"sample_cdf@[FFI"(double* %return569, double %return570)
  br label %UnifiedReturnBlock

false566:                                         ; preds = %false557
  %return573 = call i64 @"eq@III"(i64 %idx536, i64 4)
  %57 = icmp ne i64 %return573, 0
  br i1 %57, label %true574, label %false575

true574:                                          ; preds = %false566
  %XST577 = load double*, double** %XST
  %return578 = call double* @"slice@[F[FIIIIII"(double* %XST577, i64 1, i64 44, i64 1, i64 55, i64 0, i64 0)
  %return579 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return580 = call i64 @"sample_cdf@[FFI"(double* %return578, double %return579)
  br label %UnifiedReturnBlock

false575:                                         ; preds = %false566
  %return582 = call i64 @"eq@III"(i64 %idx536, i64 5)
  %58 = icmp ne i64 %return582, 0
  br i1 %58, label %true583, label %false584

true583:                                          ; preds = %false575
  %XST586 = load double*, double** %XST
  %return587 = call double* @"slice@[F[FIIIIII"(double* %XST586, i64 1, i64 55, i64 1, i64 66, i64 0, i64 0)
  %return588 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return589 = call i64 @"sample_cdf@[FFI"(double* %return587, double %return588)
  br label %UnifiedReturnBlock

false584:                                         ; preds = %false575
  %return591 = call i64 @"eq@III"(i64 %idx536, i64 6)
  %59 = icmp ne i64 %return591, 0
  br i1 %59, label %true592, label %false593

true592:                                          ; preds = %false584
  %XST595 = load double*, double** %XST
  %return596 = call double* @"slice@[F[FIIIIII"(double* %XST595, i64 1, i64 66, i64 1, i64 77, i64 0, i64 0)
  %return597 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return598 = call i64 @"sample_cdf@[FFI"(double* %return596, double %return597)
  br label %UnifiedReturnBlock

false593:                                         ; preds = %false584
  %return600 = call i64 @"eq@III"(i64 %idx536, i64 7)
  %60 = icmp ne i64 %return600, 0
  br i1 %60, label %true601, label %false602

true601:                                          ; preds = %false593
  %XST604 = load double*, double** %XST
  %return605 = call double* @"slice@[F[FIIIIII"(double* %XST604, i64 1, i64 77, i64 1, i64 88, i64 0, i64 0)
  %return606 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return607 = call i64 @"sample_cdf@[FFI"(double* %return605, double %return606)
  br label %UnifiedReturnBlock

false602:                                         ; preds = %false593
  %return609 = call i64 @"eq@III"(i64 %idx536, i64 8)
  %61 = icmp ne i64 %return609, 0
  br i1 %61, label %true610, label %false611

true610:                                          ; preds = %false602
  %XST613 = load double*, double** %XST
  %return614 = call double* @"slice@[F[FIIIIII"(double* %XST613, i64 1, i64 88, i64 1, i64 99, i64 0, i64 0)
  %return615 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return616 = call i64 @"sample_cdf@[FFI"(double* %return614, double %return615)
  br label %UnifiedReturnBlock

false611:                                         ; preds = %false602
  %return618 = call i64 @"eq@III"(i64 %idx536, i64 9)
  %62 = icmp ne i64 %return618, 0
  br i1 %62, label %true619, label %false620

true619:                                          ; preds = %false611
  %XST622 = load double*, double** %XST
  %return623 = call double* @"slice@[F[FIIIIII"(double* %XST622, i64 1, i64 99, i64 1, i64 110, i64 0, i64 0)
  %return624 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return625 = call i64 @"sample_cdf@[FFI"(double* %return623, double %return624)
  br label %UnifiedReturnBlock

false620:                                         ; preds = %false611
  %return627 = call i64 @"eq@III"(i64 %idx536, i64 10)
  %63 = icmp ne i64 %return627, 0
  br i1 %63, label %true628, label %end

true628:                                          ; preds = %false620
  %XST630 = load double*, double** %XST
  %return631 = call double* @"slice@[F[FIIIIII"(double* %XST630, i64 1, i64 110, i64 1, i64 121, i64 0, i64 0)
  %return632 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return633 = call i64 @"sample_cdf@[FFI"(double* %return631, double %return632)
  br label %UnifiedReturnBlock

true637:                                          ; preds = %false534
  %idx640 = load i64, i64* %idx
  %return641 = call i64 @"eq@III"(i64 %idx640, i64 0)
  %64 = icmp ne i64 %return641, 0
  br i1 %64, label %true642, label %false643

false638:                                         ; preds = %false534
  %return748 = fcmp oeq double %res1, 1.300000e+01
  br i1 %return748, label %true750, label %false751

true642:                                          ; preds = %true637
  %XST645 = load double*, double** %XST
  %return646 = call double* @"slice@[F[FIIIIII"(double* %XST645, i64 1, i64 0, i64 1, i64 12, i64 0, i64 0)
  %return647 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return648 = call i64 @"sample_cdf@[FFI"(double* %return646, double %return647)
  br label %UnifiedReturnBlock

false643:                                         ; preds = %true637
  %return650 = call i64 @"eq@III"(i64 %idx640, i64 1)
  %65 = icmp ne i64 %return650, 0
  br i1 %65, label %true651, label %false652

true651:                                          ; preds = %false643
  %XST654 = load double*, double** %XST
  %return655 = call double* @"slice@[F[FIIIIII"(double* %XST654, i64 1, i64 12, i64 1, i64 24, i64 0, i64 0)
  %return656 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return657 = call i64 @"sample_cdf@[FFI"(double* %return655, double %return656)
  br label %UnifiedReturnBlock

false652:                                         ; preds = %false643
  %return659 = call i64 @"eq@III"(i64 %idx640, i64 2)
  %66 = icmp ne i64 %return659, 0
  br i1 %66, label %true660, label %false661

true660:                                          ; preds = %false652
  %XST663 = load double*, double** %XST
  %return664 = call double* @"slice@[F[FIIIIII"(double* %XST663, i64 1, i64 24, i64 1, i64 36, i64 0, i64 0)
  %return665 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return666 = call i64 @"sample_cdf@[FFI"(double* %return664, double %return665)
  br label %UnifiedReturnBlock

false661:                                         ; preds = %false652
  %return668 = call i64 @"eq@III"(i64 %idx640, i64 3)
  %67 = icmp ne i64 %return668, 0
  br i1 %67, label %true669, label %false670

true669:                                          ; preds = %false661
  %XST672 = load double*, double** %XST
  %return673 = call double* @"slice@[F[FIIIIII"(double* %XST672, i64 1, i64 36, i64 1, i64 48, i64 0, i64 0)
  %return674 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return675 = call i64 @"sample_cdf@[FFI"(double* %return673, double %return674)
  br label %UnifiedReturnBlock

false670:                                         ; preds = %false661
  %return677 = call i64 @"eq@III"(i64 %idx640, i64 4)
  %68 = icmp ne i64 %return677, 0
  br i1 %68, label %true678, label %false679

true678:                                          ; preds = %false670
  %XST681 = load double*, double** %XST
  %return682 = call double* @"slice@[F[FIIIIII"(double* %XST681, i64 1, i64 48, i64 1, i64 60, i64 0, i64 0)
  %return683 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return684 = call i64 @"sample_cdf@[FFI"(double* %return682, double %return683)
  br label %UnifiedReturnBlock

false679:                                         ; preds = %false670
  %return686 = call i64 @"eq@III"(i64 %idx640, i64 5)
  %69 = icmp ne i64 %return686, 0
  br i1 %69, label %true687, label %false688

true687:                                          ; preds = %false679
  %XST690 = load double*, double** %XST
  %return691 = call double* @"slice@[F[FIIIIII"(double* %XST690, i64 1, i64 60, i64 1, i64 72, i64 0, i64 0)
  %return692 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return693 = call i64 @"sample_cdf@[FFI"(double* %return691, double %return692)
  br label %UnifiedReturnBlock

false688:                                         ; preds = %false679
  %return695 = call i64 @"eq@III"(i64 %idx640, i64 6)
  %70 = icmp ne i64 %return695, 0
  br i1 %70, label %true696, label %false697

true696:                                          ; preds = %false688
  %XST699 = load double*, double** %XST
  %return700 = call double* @"slice@[F[FIIIIII"(double* %XST699, i64 1, i64 72, i64 1, i64 84, i64 0, i64 0)
  %return701 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return702 = call i64 @"sample_cdf@[FFI"(double* %return700, double %return701)
  br label %UnifiedReturnBlock

false697:                                         ; preds = %false688
  %return704 = call i64 @"eq@III"(i64 %idx640, i64 7)
  %71 = icmp ne i64 %return704, 0
  br i1 %71, label %true705, label %false706

true705:                                          ; preds = %false697
  %XST708 = load double*, double** %XST
  %return709 = call double* @"slice@[F[FIIIIII"(double* %XST708, i64 1, i64 84, i64 1, i64 96, i64 0, i64 0)
  %return710 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return711 = call i64 @"sample_cdf@[FFI"(double* %return709, double %return710)
  br label %UnifiedReturnBlock

false706:                                         ; preds = %false697
  %return713 = call i64 @"eq@III"(i64 %idx640, i64 8)
  %72 = icmp ne i64 %return713, 0
  br i1 %72, label %true714, label %false715

true714:                                          ; preds = %false706
  %XST717 = load double*, double** %XST
  %return718 = call double* @"slice@[F[FIIIIII"(double* %XST717, i64 1, i64 96, i64 1, i64 108, i64 0, i64 0)
  %return719 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return720 = call i64 @"sample_cdf@[FFI"(double* %return718, double %return719)
  br label %UnifiedReturnBlock

false715:                                         ; preds = %false706
  %return722 = call i64 @"eq@III"(i64 %idx640, i64 9)
  %73 = icmp ne i64 %return722, 0
  br i1 %73, label %true723, label %false724

true723:                                          ; preds = %false715
  %XST726 = load double*, double** %XST
  %return727 = call double* @"slice@[F[FIIIIII"(double* %XST726, i64 1, i64 108, i64 1, i64 120, i64 0, i64 0)
  %return728 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return729 = call i64 @"sample_cdf@[FFI"(double* %return727, double %return728)
  br label %UnifiedReturnBlock

false724:                                         ; preds = %false715
  %return731 = call i64 @"eq@III"(i64 %idx640, i64 10)
  %74 = icmp ne i64 %return731, 0
  br i1 %74, label %true732, label %false733

true732:                                          ; preds = %false724
  %XST735 = load double*, double** %XST
  %return736 = call double* @"slice@[F[FIIIIII"(double* %XST735, i64 1, i64 120, i64 1, i64 132, i64 0, i64 0)
  %return737 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return738 = call i64 @"sample_cdf@[FFI"(double* %return736, double %return737)
  br label %UnifiedReturnBlock

false733:                                         ; preds = %false724
  %return740 = call i64 @"eq@III"(i64 %idx640, i64 11)
  %75 = icmp ne i64 %return740, 0
  br i1 %75, label %true741, label %end

true741:                                          ; preds = %false733
  %XST743 = load double*, double** %XST
  %return744 = call double* @"slice@[F[FIIIIII"(double* %XST743, i64 1, i64 132, i64 1, i64 144, i64 0, i64 0)
  %return745 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return746 = call i64 @"sample_cdf@[FFI"(double* %return744, double %return745)
  br label %UnifiedReturnBlock

true750:                                          ; preds = %false638
  %idx753 = load i64, i64* %idx
  %return754 = call i64 @"eq@III"(i64 %idx753, i64 0)
  %76 = icmp ne i64 %return754, 0
  br i1 %76, label %true755, label %false756

false751:                                         ; preds = %false638
  %return870 = fcmp oeq double %res1, 1.400000e+01
  br i1 %return870, label %true872, label %end

true755:                                          ; preds = %true750
  %XST758 = load double*, double** %XST
  %return759 = call double* @"slice@[F[FIIIIII"(double* %XST758, i64 1, i64 0, i64 1, i64 13, i64 0, i64 0)
  %return760 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return761 = call i64 @"sample_cdf@[FFI"(double* %return759, double %return760)
  br label %UnifiedReturnBlock

false756:                                         ; preds = %true750
  %return763 = call i64 @"eq@III"(i64 %idx753, i64 1)
  %77 = icmp ne i64 %return763, 0
  br i1 %77, label %true764, label %false765

true764:                                          ; preds = %false756
  %XST767 = load double*, double** %XST
  %return768 = call double* @"slice@[F[FIIIIII"(double* %XST767, i64 1, i64 13, i64 1, i64 26, i64 0, i64 0)
  %return769 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return770 = call i64 @"sample_cdf@[FFI"(double* %return768, double %return769)
  br label %UnifiedReturnBlock

false765:                                         ; preds = %false756
  %return772 = call i64 @"eq@III"(i64 %idx753, i64 2)
  %78 = icmp ne i64 %return772, 0
  br i1 %78, label %true773, label %false774

true773:                                          ; preds = %false765
  %XST776 = load double*, double** %XST
  %return777 = call double* @"slice@[F[FIIIIII"(double* %XST776, i64 1, i64 26, i64 1, i64 39, i64 0, i64 0)
  %return778 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return779 = call i64 @"sample_cdf@[FFI"(double* %return777, double %return778)
  br label %UnifiedReturnBlock

false774:                                         ; preds = %false765
  %return781 = call i64 @"eq@III"(i64 %idx753, i64 3)
  %79 = icmp ne i64 %return781, 0
  br i1 %79, label %true782, label %false783

true782:                                          ; preds = %false774
  %XST785 = load double*, double** %XST
  %return786 = call double* @"slice@[F[FIIIIII"(double* %XST785, i64 1, i64 39, i64 1, i64 52, i64 0, i64 0)
  %return787 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return788 = call i64 @"sample_cdf@[FFI"(double* %return786, double %return787)
  br label %UnifiedReturnBlock

false783:                                         ; preds = %false774
  %return790 = call i64 @"eq@III"(i64 %idx753, i64 4)
  %80 = icmp ne i64 %return790, 0
  br i1 %80, label %true791, label %false792

true791:                                          ; preds = %false783
  %XST794 = load double*, double** %XST
  %return795 = call double* @"slice@[F[FIIIIII"(double* %XST794, i64 1, i64 52, i64 1, i64 65, i64 0, i64 0)
  %return796 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return797 = call i64 @"sample_cdf@[FFI"(double* %return795, double %return796)
  br label %UnifiedReturnBlock

false792:                                         ; preds = %false783
  %return799 = call i64 @"eq@III"(i64 %idx753, i64 5)
  %81 = icmp ne i64 %return799, 0
  br i1 %81, label %true800, label %false801

true800:                                          ; preds = %false792
  %XST803 = load double*, double** %XST
  %return804 = call double* @"slice@[F[FIIIIII"(double* %XST803, i64 1, i64 65, i64 1, i64 78, i64 0, i64 0)
  %return805 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return806 = call i64 @"sample_cdf@[FFI"(double* %return804, double %return805)
  br label %UnifiedReturnBlock

false801:                                         ; preds = %false792
  %return808 = call i64 @"eq@III"(i64 %idx753, i64 6)
  %82 = icmp ne i64 %return808, 0
  br i1 %82, label %true809, label %false810

true809:                                          ; preds = %false801
  %XST812 = load double*, double** %XST
  %return813 = call double* @"slice@[F[FIIIIII"(double* %XST812, i64 1, i64 78, i64 1, i64 91, i64 0, i64 0)
  %return814 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return815 = call i64 @"sample_cdf@[FFI"(double* %return813, double %return814)
  br label %UnifiedReturnBlock

false810:                                         ; preds = %false801
  %return817 = call i64 @"eq@III"(i64 %idx753, i64 7)
  %83 = icmp ne i64 %return817, 0
  br i1 %83, label %true818, label %false819

true818:                                          ; preds = %false810
  %XST821 = load double*, double** %XST
  %return822 = call double* @"slice@[F[FIIIIII"(double* %XST821, i64 1, i64 91, i64 1, i64 104, i64 0, i64 0)
  %return823 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return824 = call i64 @"sample_cdf@[FFI"(double* %return822, double %return823)
  br label %UnifiedReturnBlock

false819:                                         ; preds = %false810
  %return826 = call i64 @"eq@III"(i64 %idx753, i64 8)
  %84 = icmp ne i64 %return826, 0
  br i1 %84, label %true827, label %false828

true827:                                          ; preds = %false819
  %XST830 = load double*, double** %XST
  %return831 = call double* @"slice@[F[FIIIIII"(double* %XST830, i64 1, i64 104, i64 1, i64 117, i64 0, i64 0)
  %return832 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return833 = call i64 @"sample_cdf@[FFI"(double* %return831, double %return832)
  br label %UnifiedReturnBlock

false828:                                         ; preds = %false819
  %return835 = call i64 @"eq@III"(i64 %idx753, i64 9)
  %85 = icmp ne i64 %return835, 0
  br i1 %85, label %true836, label %false837

true836:                                          ; preds = %false828
  %XST839 = load double*, double** %XST
  %return840 = call double* @"slice@[F[FIIIIII"(double* %XST839, i64 1, i64 117, i64 1, i64 130, i64 0, i64 0)
  %return841 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return842 = call i64 @"sample_cdf@[FFI"(double* %return840, double %return841)
  br label %UnifiedReturnBlock

false837:                                         ; preds = %false828
  %return844 = call i64 @"eq@III"(i64 %idx753, i64 10)
  %86 = icmp ne i64 %return844, 0
  br i1 %86, label %true845, label %false846

true845:                                          ; preds = %false837
  %XST848 = load double*, double** %XST
  %return849 = call double* @"slice@[F[FIIIIII"(double* %XST848, i64 1, i64 130, i64 1, i64 143, i64 0, i64 0)
  %return850 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return851 = call i64 @"sample_cdf@[FFI"(double* %return849, double %return850)
  br label %UnifiedReturnBlock

false846:                                         ; preds = %false837
  %return853 = call i64 @"eq@III"(i64 %idx753, i64 11)
  %87 = icmp ne i64 %return853, 0
  br i1 %87, label %true854, label %false855

true854:                                          ; preds = %false846
  %XST857 = load double*, double** %XST
  %return858 = call double* @"slice@[F[FIIIIII"(double* %XST857, i64 1, i64 143, i64 1, i64 156, i64 0, i64 0)
  %return859 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return860 = call i64 @"sample_cdf@[FFI"(double* %return858, double %return859)
  br label %UnifiedReturnBlock

false855:                                         ; preds = %false846
  %return862 = call i64 @"eq@III"(i64 %idx753, i64 12)
  %88 = icmp ne i64 %return862, 0
  br i1 %88, label %true863, label %end

true863:                                          ; preds = %false855
  %XST865 = load double*, double** %XST
  %return866 = call double* @"slice@[F[FIIIIII"(double* %XST865, i64 1, i64 156, i64 1, i64 169, i64 0, i64 0)
  %return867 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return868 = call i64 @"sample_cdf@[FFI"(double* %return866, double %return867)
  br label %UnifiedReturnBlock

true872:                                          ; preds = %false751
  %idx874 = load i64, i64* %idx
  %return875 = call i64 @"lt@III"(i64 %idx874, i64 7)
  %89 = icmp ne i64 %return875, 0
  br i1 %89, label %true876, label %false877

true876:                                          ; preds = %true872
  %return880 = call i64 @"eq@III"(i64 %idx874, i64 0)
  %90 = icmp ne i64 %return880, 0
  br i1 %90, label %true881, label %false882

false877:                                         ; preds = %true872
  %return942 = call i64 @"eq@III"(i64 %idx874, i64 7)
  %91 = icmp ne i64 %return942, 0
  br i1 %91, label %true943, label %false944

true881:                                          ; preds = %true876
  %XST884 = load double*, double** %XST
  %return885 = call double* @"slice@[F[FIIIIII"(double* %XST884, i64 1, i64 0, i64 1, i64 14, i64 0, i64 0)
  %return886 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return887 = call i64 @"sample_cdf@[FFI"(double* %return885, double %return886)
  br label %UnifiedReturnBlock

false882:                                         ; preds = %true876
  %return889 = call i64 @"eq@III"(i64 %idx874, i64 1)
  %92 = icmp ne i64 %return889, 0
  br i1 %92, label %true890, label %false891

true890:                                          ; preds = %false882
  %XST893 = load double*, double** %XST
  %return894 = call double* @"slice@[F[FIIIIII"(double* %XST893, i64 1, i64 14, i64 1, i64 28, i64 0, i64 0)
  %return895 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return896 = call i64 @"sample_cdf@[FFI"(double* %return894, double %return895)
  br label %UnifiedReturnBlock

false891:                                         ; preds = %false882
  %return898 = call i64 @"eq@III"(i64 %idx874, i64 2)
  %93 = icmp ne i64 %return898, 0
  br i1 %93, label %true899, label %false900

true899:                                          ; preds = %false891
  %XST902 = load double*, double** %XST
  %return903 = call double* @"slice@[F[FIIIIII"(double* %XST902, i64 1, i64 28, i64 1, i64 42, i64 0, i64 0)
  %return904 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return905 = call i64 @"sample_cdf@[FFI"(double* %return903, double %return904)
  br label %UnifiedReturnBlock

false900:                                         ; preds = %false891
  %return907 = call i64 @"eq@III"(i64 %idx874, i64 3)
  %94 = icmp ne i64 %return907, 0
  br i1 %94, label %true908, label %false909

true908:                                          ; preds = %false900
  %XST911 = load double*, double** %XST
  %return912 = call double* @"slice@[F[FIIIIII"(double* %XST911, i64 1, i64 42, i64 1, i64 56, i64 0, i64 0)
  %return913 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return914 = call i64 @"sample_cdf@[FFI"(double* %return912, double %return913)
  br label %UnifiedReturnBlock

false909:                                         ; preds = %false900
  %return916 = call i64 @"eq@III"(i64 %idx874, i64 4)
  %95 = icmp ne i64 %return916, 0
  br i1 %95, label %true917, label %false918

true917:                                          ; preds = %false909
  %XST920 = load double*, double** %XST
  %return921 = call double* @"slice@[F[FIIIIII"(double* %XST920, i64 1, i64 56, i64 1, i64 70, i64 0, i64 0)
  %return922 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return923 = call i64 @"sample_cdf@[FFI"(double* %return921, double %return922)
  br label %UnifiedReturnBlock

false918:                                         ; preds = %false909
  %return925 = call i64 @"eq@III"(i64 %idx874, i64 5)
  %96 = icmp ne i64 %return925, 0
  br i1 %96, label %true926, label %false927

true926:                                          ; preds = %false918
  %XST929 = load double*, double** %XST
  %return930 = call double* @"slice@[F[FIIIIII"(double* %XST929, i64 1, i64 70, i64 1, i64 84, i64 0, i64 0)
  %return931 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return932 = call i64 @"sample_cdf@[FFI"(double* %return930, double %return931)
  br label %UnifiedReturnBlock

false927:                                         ; preds = %false918
  %return934 = call i64 @"eq@III"(i64 %idx874, i64 6)
  %97 = icmp ne i64 %return934, 0
  br i1 %97, label %true935, label %end

true935:                                          ; preds = %false927
  %XST937 = load double*, double** %XST
  %return938 = call double* @"slice@[F[FIIIIII"(double* %XST937, i64 1, i64 84, i64 1, i64 98, i64 0, i64 0)
  %return939 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return940 = call i64 @"sample_cdf@[FFI"(double* %return938, double %return939)
  br label %UnifiedReturnBlock

true943:                                          ; preds = %false877
  %XST946 = load double*, double** %XST
  %return947 = call double* @"slice@[F[FIIIIII"(double* %XST946, i64 1, i64 98, i64 1, i64 112, i64 0, i64 0)
  %return948 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return949 = call i64 @"sample_cdf@[FFI"(double* %return947, double %return948)
  br label %UnifiedReturnBlock

false944:                                         ; preds = %false877
  %return951 = call i64 @"eq@III"(i64 %idx874, i64 8)
  %98 = icmp ne i64 %return951, 0
  br i1 %98, label %true952, label %false953

true952:                                          ; preds = %false944
  %XST955 = load double*, double** %XST
  %return956 = call double* @"slice@[F[FIIIIII"(double* %XST955, i64 1, i64 112, i64 1, i64 126, i64 0, i64 0)
  %return957 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return958 = call i64 @"sample_cdf@[FFI"(double* %return956, double %return957)
  br label %UnifiedReturnBlock

false953:                                         ; preds = %false944
  %return960 = call i64 @"eq@III"(i64 %idx874, i64 9)
  %99 = icmp ne i64 %return960, 0
  br i1 %99, label %true961, label %false962

true961:                                          ; preds = %false953
  %XST964 = load double*, double** %XST
  %return965 = call double* @"slice@[F[FIIIIII"(double* %XST964, i64 1, i64 126, i64 1, i64 140, i64 0, i64 0)
  %return966 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return967 = call i64 @"sample_cdf@[FFI"(double* %return965, double %return966)
  br label %UnifiedReturnBlock

false962:                                         ; preds = %false953
  %return969 = call i64 @"eq@III"(i64 %idx874, i64 10)
  %100 = icmp ne i64 %return969, 0
  br i1 %100, label %true970, label %false971

true970:                                          ; preds = %false962
  %XST973 = load double*, double** %XST
  %return974 = call double* @"slice@[F[FIIIIII"(double* %XST973, i64 1, i64 140, i64 1, i64 154, i64 0, i64 0)
  %return975 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return976 = call i64 @"sample_cdf@[FFI"(double* %return974, double %return975)
  br label %UnifiedReturnBlock

false971:                                         ; preds = %false962
  %return978 = call i64 @"eq@III"(i64 %idx874, i64 11)
  %101 = icmp ne i64 %return978, 0
  br i1 %101, label %true979, label %false980

true979:                                          ; preds = %false971
  %XST982 = load double*, double** %XST
  %return983 = call double* @"slice@[F[FIIIIII"(double* %XST982, i64 1, i64 154, i64 1, i64 168, i64 0, i64 0)
  %return984 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return985 = call i64 @"sample_cdf@[FFI"(double* %return983, double %return984)
  br label %UnifiedReturnBlock

false980:                                         ; preds = %false971
  %return987 = call i64 @"eq@III"(i64 %idx874, i64 12)
  %102 = icmp ne i64 %return987, 0
  br i1 %102, label %true988, label %false989

true988:                                          ; preds = %false980
  %XST991 = load double*, double** %XST
  %return992 = call double* @"slice@[F[FIIIIII"(double* %XST991, i64 1, i64 168, i64 1, i64 182, i64 0, i64 0)
  %return993 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return994 = call i64 @"sample_cdf@[FFI"(double* %return992, double %return993)
  br label %UnifiedReturnBlock

false989:                                         ; preds = %false980
  %return996 = call i64 @"eq@III"(i64 %idx874, i64 13)
  %103 = icmp ne i64 %return996, 0
  br i1 %103, label %true997, label %end

true997:                                          ; preds = %false989
  %XST999 = load double*, double** %XST
  %return1000 = call double* @"slice@[F[FIIIIII"(double* %XST999, i64 1, i64 182, i64 1, i64 196, i64 0, i64 0)
  %return1001 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1002 = call i64 @"sample_cdf@[FFI"(double* %return1000, double %return1001)
  br label %UnifiedReturnBlock

true1006:                                         ; preds = %false
  %return1009 = fcmp oeq double %res1, 1.500000e+01
  br i1 %return1009, label %true1011, label %false1012

true1011:                                         ; preds = %true1006
  %idx1014 = load i64, i64* %idx
  %return1015 = call i64 @"lt@III"(i64 %idx1014, i64 8)
  %104 = icmp ne i64 %return1015, 0
  br i1 %104, label %true1016, label %false1017

false1012:                                        ; preds = %true1006
  %return1153 = fcmp oeq double %res1, 1.600000e+01
  br i1 %return1153, label %true1155, label %false1156

true1016:                                         ; preds = %true1011
  %return1020 = call i64 @"eq@III"(i64 %idx1014, i64 0)
  %105 = icmp ne i64 %return1020, 0
  br i1 %105, label %true1021, label %false1022

false1017:                                        ; preds = %true1011
  %return1091 = call i64 @"eq@III"(i64 %idx1014, i64 8)
  %106 = icmp ne i64 %return1091, 0
  br i1 %106, label %true1092, label %false1093

true1021:                                         ; preds = %true1016
  %XST1024 = load double*, double** %XST
  %return1025 = call double* @"slice@[F[FIIIIII"(double* %XST1024, i64 1, i64 0, i64 1, i64 15, i64 0, i64 0)
  %return1026 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1027 = call i64 @"sample_cdf@[FFI"(double* %return1025, double %return1026)
  br label %UnifiedReturnBlock

false1022:                                        ; preds = %true1016
  %return1029 = call i64 @"eq@III"(i64 %idx1014, i64 1)
  %107 = icmp ne i64 %return1029, 0
  br i1 %107, label %true1030, label %false1031

true1030:                                         ; preds = %false1022
  %XST1033 = load double*, double** %XST
  %return1034 = call double* @"slice@[F[FIIIIII"(double* %XST1033, i64 1, i64 15, i64 1, i64 30, i64 0, i64 0)
  %return1035 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1036 = call i64 @"sample_cdf@[FFI"(double* %return1034, double %return1035)
  br label %UnifiedReturnBlock

false1031:                                        ; preds = %false1022
  %return1038 = call i64 @"eq@III"(i64 %idx1014, i64 2)
  %108 = icmp ne i64 %return1038, 0
  br i1 %108, label %true1039, label %false1040

true1039:                                         ; preds = %false1031
  %XST1042 = load double*, double** %XST
  %return1043 = call double* @"slice@[F[FIIIIII"(double* %XST1042, i64 1, i64 30, i64 1, i64 45, i64 0, i64 0)
  %return1044 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1045 = call i64 @"sample_cdf@[FFI"(double* %return1043, double %return1044)
  br label %UnifiedReturnBlock

false1040:                                        ; preds = %false1031
  %return1047 = call i64 @"eq@III"(i64 %idx1014, i64 3)
  %109 = icmp ne i64 %return1047, 0
  br i1 %109, label %true1048, label %false1049

true1048:                                         ; preds = %false1040
  %XST1051 = load double*, double** %XST
  %return1052 = call double* @"slice@[F[FIIIIII"(double* %XST1051, i64 1, i64 45, i64 1, i64 60, i64 0, i64 0)
  %return1053 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1054 = call i64 @"sample_cdf@[FFI"(double* %return1052, double %return1053)
  br label %UnifiedReturnBlock

false1049:                                        ; preds = %false1040
  %return1056 = call i64 @"eq@III"(i64 %idx1014, i64 4)
  %110 = icmp ne i64 %return1056, 0
  br i1 %110, label %true1057, label %false1058

true1057:                                         ; preds = %false1049
  %XST1060 = load double*, double** %XST
  %return1061 = call double* @"slice@[F[FIIIIII"(double* %XST1060, i64 1, i64 60, i64 1, i64 75, i64 0, i64 0)
  %return1062 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1063 = call i64 @"sample_cdf@[FFI"(double* %return1061, double %return1062)
  br label %UnifiedReturnBlock

false1058:                                        ; preds = %false1049
  %return1065 = call i64 @"eq@III"(i64 %idx1014, i64 5)
  %111 = icmp ne i64 %return1065, 0
  br i1 %111, label %true1066, label %false1067

true1066:                                         ; preds = %false1058
  %XST1069 = load double*, double** %XST
  %return1070 = call double* @"slice@[F[FIIIIII"(double* %XST1069, i64 1, i64 75, i64 1, i64 90, i64 0, i64 0)
  %return1071 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1072 = call i64 @"sample_cdf@[FFI"(double* %return1070, double %return1071)
  br label %UnifiedReturnBlock

false1067:                                        ; preds = %false1058
  %return1074 = call i64 @"eq@III"(i64 %idx1014, i64 6)
  %112 = icmp ne i64 %return1074, 0
  br i1 %112, label %true1075, label %false1076

true1075:                                         ; preds = %false1067
  %XST1078 = load double*, double** %XST
  %return1079 = call double* @"slice@[F[FIIIIII"(double* %XST1078, i64 1, i64 90, i64 1, i64 105, i64 0, i64 0)
  %return1080 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1081 = call i64 @"sample_cdf@[FFI"(double* %return1079, double %return1080)
  br label %UnifiedReturnBlock

false1076:                                        ; preds = %false1067
  %return1083 = call i64 @"eq@III"(i64 %idx1014, i64 7)
  %113 = icmp ne i64 %return1083, 0
  br i1 %113, label %true1084, label %end

true1084:                                         ; preds = %false1076
  %XST1086 = load double*, double** %XST
  %return1087 = call double* @"slice@[F[FIIIIII"(double* %XST1086, i64 1, i64 105, i64 1, i64 120, i64 0, i64 0)
  %return1088 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1089 = call i64 @"sample_cdf@[FFI"(double* %return1087, double %return1088)
  br label %UnifiedReturnBlock

true1092:                                         ; preds = %false1017
  %XST1095 = load double*, double** %XST
  %return1096 = call double* @"slice@[F[FIIIIII"(double* %XST1095, i64 1, i64 120, i64 1, i64 135, i64 0, i64 0)
  %return1097 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1098 = call i64 @"sample_cdf@[FFI"(double* %return1096, double %return1097)
  br label %UnifiedReturnBlock

false1093:                                        ; preds = %false1017
  %return1100 = call i64 @"eq@III"(i64 %idx1014, i64 9)
  %114 = icmp ne i64 %return1100, 0
  br i1 %114, label %true1101, label %false1102

true1101:                                         ; preds = %false1093
  %XST1104 = load double*, double** %XST
  %return1105 = call double* @"slice@[F[FIIIIII"(double* %XST1104, i64 1, i64 135, i64 1, i64 150, i64 0, i64 0)
  %return1106 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1107 = call i64 @"sample_cdf@[FFI"(double* %return1105, double %return1106)
  br label %UnifiedReturnBlock

false1102:                                        ; preds = %false1093
  %return1109 = call i64 @"eq@III"(i64 %idx1014, i64 10)
  %115 = icmp ne i64 %return1109, 0
  br i1 %115, label %true1110, label %false1111

true1110:                                         ; preds = %false1102
  %XST1113 = load double*, double** %XST
  %return1114 = call double* @"slice@[F[FIIIIII"(double* %XST1113, i64 1, i64 150, i64 1, i64 165, i64 0, i64 0)
  %return1115 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1116 = call i64 @"sample_cdf@[FFI"(double* %return1114, double %return1115)
  br label %UnifiedReturnBlock

false1111:                                        ; preds = %false1102
  %return1118 = call i64 @"eq@III"(i64 %idx1014, i64 11)
  %116 = icmp ne i64 %return1118, 0
  br i1 %116, label %true1119, label %false1120

true1119:                                         ; preds = %false1111
  %XST1122 = load double*, double** %XST
  %return1123 = call double* @"slice@[F[FIIIIII"(double* %XST1122, i64 1, i64 165, i64 1, i64 180, i64 0, i64 0)
  %return1124 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1125 = call i64 @"sample_cdf@[FFI"(double* %return1123, double %return1124)
  br label %UnifiedReturnBlock

false1120:                                        ; preds = %false1111
  %return1127 = call i64 @"eq@III"(i64 %idx1014, i64 12)
  %117 = icmp ne i64 %return1127, 0
  br i1 %117, label %true1128, label %false1129

true1128:                                         ; preds = %false1120
  %XST1131 = load double*, double** %XST
  %return1132 = call double* @"slice@[F[FIIIIII"(double* %XST1131, i64 1, i64 180, i64 1, i64 195, i64 0, i64 0)
  %return1133 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1134 = call i64 @"sample_cdf@[FFI"(double* %return1132, double %return1133)
  br label %UnifiedReturnBlock

false1129:                                        ; preds = %false1120
  %return1136 = call i64 @"eq@III"(i64 %idx1014, i64 13)
  %118 = icmp ne i64 %return1136, 0
  br i1 %118, label %true1137, label %false1138

true1137:                                         ; preds = %false1129
  %XST1140 = load double*, double** %XST
  %return1141 = call double* @"slice@[F[FIIIIII"(double* %XST1140, i64 1, i64 195, i64 1, i64 210, i64 0, i64 0)
  %return1142 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1143 = call i64 @"sample_cdf@[FFI"(double* %return1141, double %return1142)
  br label %UnifiedReturnBlock

false1138:                                        ; preds = %false1129
  %return1145 = call i64 @"eq@III"(i64 %idx1014, i64 14)
  %119 = icmp ne i64 %return1145, 0
  br i1 %119, label %true1146, label %end

true1146:                                         ; preds = %false1138
  %XST1148 = load double*, double** %XST
  %return1149 = call double* @"slice@[F[FIIIIII"(double* %XST1148, i64 1, i64 210, i64 1, i64 225, i64 0, i64 0)
  %return1150 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1151 = call i64 @"sample_cdf@[FFI"(double* %return1149, double %return1150)
  br label %UnifiedReturnBlock

true1155:                                         ; preds = %false1012
  %idx1158 = load i64, i64* %idx
  %return1159 = call i64 @"lt@III"(i64 %idx1158, i64 8)
  %120 = icmp ne i64 %return1159, 0
  br i1 %120, label %true1160, label %false1161

false1156:                                        ; preds = %false1012
  %return1306 = fcmp oeq double %res1, 1.700000e+01
  br i1 %return1306, label %true1308, label %false1309

true1160:                                         ; preds = %true1155
  %return1164 = call i64 @"eq@III"(i64 %idx1158, i64 0)
  %121 = icmp ne i64 %return1164, 0
  br i1 %121, label %true1165, label %false1166

false1161:                                        ; preds = %true1155
  %return1235 = call i64 @"eq@III"(i64 %idx1158, i64 8)
  %122 = icmp ne i64 %return1235, 0
  br i1 %122, label %true1236, label %false1237

true1165:                                         ; preds = %true1160
  %XST1168 = load double*, double** %XST
  %return1169 = call double* @"slice@[F[FIIIIII"(double* %XST1168, i64 1, i64 0, i64 1, i64 16, i64 0, i64 0)
  %return1170 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1171 = call i64 @"sample_cdf@[FFI"(double* %return1169, double %return1170)
  br label %UnifiedReturnBlock

false1166:                                        ; preds = %true1160
  %return1173 = call i64 @"eq@III"(i64 %idx1158, i64 1)
  %123 = icmp ne i64 %return1173, 0
  br i1 %123, label %true1174, label %false1175

true1174:                                         ; preds = %false1166
  %XST1177 = load double*, double** %XST
  %return1178 = call double* @"slice@[F[FIIIIII"(double* %XST1177, i64 1, i64 16, i64 1, i64 32, i64 0, i64 0)
  %return1179 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1180 = call i64 @"sample_cdf@[FFI"(double* %return1178, double %return1179)
  br label %UnifiedReturnBlock

false1175:                                        ; preds = %false1166
  %return1182 = call i64 @"eq@III"(i64 %idx1158, i64 2)
  %124 = icmp ne i64 %return1182, 0
  br i1 %124, label %true1183, label %false1184

true1183:                                         ; preds = %false1175
  %XST1186 = load double*, double** %XST
  %return1187 = call double* @"slice@[F[FIIIIII"(double* %XST1186, i64 1, i64 32, i64 1, i64 48, i64 0, i64 0)
  %return1188 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1189 = call i64 @"sample_cdf@[FFI"(double* %return1187, double %return1188)
  br label %UnifiedReturnBlock

false1184:                                        ; preds = %false1175
  %return1191 = call i64 @"eq@III"(i64 %idx1158, i64 3)
  %125 = icmp ne i64 %return1191, 0
  br i1 %125, label %true1192, label %false1193

true1192:                                         ; preds = %false1184
  %XST1195 = load double*, double** %XST
  %return1196 = call double* @"slice@[F[FIIIIII"(double* %XST1195, i64 1, i64 48, i64 1, i64 64, i64 0, i64 0)
  %return1197 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1198 = call i64 @"sample_cdf@[FFI"(double* %return1196, double %return1197)
  br label %UnifiedReturnBlock

false1193:                                        ; preds = %false1184
  %return1200 = call i64 @"eq@III"(i64 %idx1158, i64 4)
  %126 = icmp ne i64 %return1200, 0
  br i1 %126, label %true1201, label %false1202

true1201:                                         ; preds = %false1193
  %XST1204 = load double*, double** %XST
  %return1205 = call double* @"slice@[F[FIIIIII"(double* %XST1204, i64 1, i64 64, i64 1, i64 80, i64 0, i64 0)
  %return1206 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1207 = call i64 @"sample_cdf@[FFI"(double* %return1205, double %return1206)
  br label %UnifiedReturnBlock

false1202:                                        ; preds = %false1193
  %return1209 = call i64 @"eq@III"(i64 %idx1158, i64 5)
  %127 = icmp ne i64 %return1209, 0
  br i1 %127, label %true1210, label %false1211

true1210:                                         ; preds = %false1202
  %XST1213 = load double*, double** %XST
  %return1214 = call double* @"slice@[F[FIIIIII"(double* %XST1213, i64 1, i64 80, i64 1, i64 96, i64 0, i64 0)
  %return1215 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1216 = call i64 @"sample_cdf@[FFI"(double* %return1214, double %return1215)
  br label %UnifiedReturnBlock

false1211:                                        ; preds = %false1202
  %return1218 = call i64 @"eq@III"(i64 %idx1158, i64 6)
  %128 = icmp ne i64 %return1218, 0
  br i1 %128, label %true1219, label %false1220

true1219:                                         ; preds = %false1211
  %XST1222 = load double*, double** %XST
  %return1223 = call double* @"slice@[F[FIIIIII"(double* %XST1222, i64 1, i64 96, i64 1, i64 112, i64 0, i64 0)
  %return1224 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1225 = call i64 @"sample_cdf@[FFI"(double* %return1223, double %return1224)
  br label %UnifiedReturnBlock

false1220:                                        ; preds = %false1211
  %return1227 = call i64 @"eq@III"(i64 %idx1158, i64 7)
  %129 = icmp ne i64 %return1227, 0
  br i1 %129, label %true1228, label %end

true1228:                                         ; preds = %false1220
  %XST1230 = load double*, double** %XST
  %return1231 = call double* @"slice@[F[FIIIIII"(double* %XST1230, i64 1, i64 112, i64 1, i64 128, i64 0, i64 0)
  %return1232 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1233 = call i64 @"sample_cdf@[FFI"(double* %return1231, double %return1232)
  br label %UnifiedReturnBlock

true1236:                                         ; preds = %false1161
  %XST1239 = load double*, double** %XST
  %return1240 = call double* @"slice@[F[FIIIIII"(double* %XST1239, i64 1, i64 128, i64 1, i64 144, i64 0, i64 0)
  %return1241 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1242 = call i64 @"sample_cdf@[FFI"(double* %return1240, double %return1241)
  br label %UnifiedReturnBlock

false1237:                                        ; preds = %false1161
  %return1244 = call i64 @"eq@III"(i64 %idx1158, i64 9)
  %130 = icmp ne i64 %return1244, 0
  br i1 %130, label %true1245, label %false1246

true1245:                                         ; preds = %false1237
  %XST1248 = load double*, double** %XST
  %return1249 = call double* @"slice@[F[FIIIIII"(double* %XST1248, i64 1, i64 144, i64 1, i64 160, i64 0, i64 0)
  %return1250 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1251 = call i64 @"sample_cdf@[FFI"(double* %return1249, double %return1250)
  br label %UnifiedReturnBlock

false1246:                                        ; preds = %false1237
  %return1253 = call i64 @"eq@III"(i64 %idx1158, i64 10)
  %131 = icmp ne i64 %return1253, 0
  br i1 %131, label %true1254, label %false1255

true1254:                                         ; preds = %false1246
  %XST1257 = load double*, double** %XST
  %return1258 = call double* @"slice@[F[FIIIIII"(double* %XST1257, i64 1, i64 160, i64 1, i64 176, i64 0, i64 0)
  %return1259 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1260 = call i64 @"sample_cdf@[FFI"(double* %return1258, double %return1259)
  br label %UnifiedReturnBlock

false1255:                                        ; preds = %false1246
  %return1262 = call i64 @"eq@III"(i64 %idx1158, i64 11)
  %132 = icmp ne i64 %return1262, 0
  br i1 %132, label %true1263, label %false1264

true1263:                                         ; preds = %false1255
  %XST1266 = load double*, double** %XST
  %return1267 = call double* @"slice@[F[FIIIIII"(double* %XST1266, i64 1, i64 176, i64 1, i64 192, i64 0, i64 0)
  %return1268 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1269 = call i64 @"sample_cdf@[FFI"(double* %return1267, double %return1268)
  br label %UnifiedReturnBlock

false1264:                                        ; preds = %false1255
  %return1271 = call i64 @"eq@III"(i64 %idx1158, i64 12)
  %133 = icmp ne i64 %return1271, 0
  br i1 %133, label %true1272, label %false1273

true1272:                                         ; preds = %false1264
  %XST1275 = load double*, double** %XST
  %return1276 = call double* @"slice@[F[FIIIIII"(double* %XST1275, i64 1, i64 192, i64 1, i64 208, i64 0, i64 0)
  %return1277 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1278 = call i64 @"sample_cdf@[FFI"(double* %return1276, double %return1277)
  br label %UnifiedReturnBlock

false1273:                                        ; preds = %false1264
  %return1280 = call i64 @"eq@III"(i64 %idx1158, i64 13)
  %134 = icmp ne i64 %return1280, 0
  br i1 %134, label %true1281, label %false1282

true1281:                                         ; preds = %false1273
  %XST1284 = load double*, double** %XST
  %return1285 = call double* @"slice@[F[FIIIIII"(double* %XST1284, i64 1, i64 208, i64 1, i64 224, i64 0, i64 0)
  %return1286 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1287 = call i64 @"sample_cdf@[FFI"(double* %return1285, double %return1286)
  br label %UnifiedReturnBlock

false1282:                                        ; preds = %false1273
  %return1289 = call i64 @"eq@III"(i64 %idx1158, i64 14)
  %135 = icmp ne i64 %return1289, 0
  br i1 %135, label %true1290, label %false1291

true1290:                                         ; preds = %false1282
  %XST1293 = load double*, double** %XST
  %return1294 = call double* @"slice@[F[FIIIIII"(double* %XST1293, i64 1, i64 224, i64 1, i64 240, i64 0, i64 0)
  %return1295 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1296 = call i64 @"sample_cdf@[FFI"(double* %return1294, double %return1295)
  br label %UnifiedReturnBlock

false1291:                                        ; preds = %false1282
  %return1298 = call i64 @"eq@III"(i64 %idx1158, i64 15)
  %136 = icmp ne i64 %return1298, 0
  br i1 %136, label %true1299, label %end

true1299:                                         ; preds = %false1291
  %XST1301 = load double*, double** %XST
  %return1302 = call double* @"slice@[F[FIIIIII"(double* %XST1301, i64 1, i64 240, i64 1, i64 256, i64 0, i64 0)
  %return1303 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1304 = call i64 @"sample_cdf@[FFI"(double* %return1302, double %return1303)
  br label %UnifiedReturnBlock

true1308:                                         ; preds = %false1156
  %idx1311 = load i64, i64* %idx
  %return1312 = call i64 @"lt@III"(i64 %idx1311, i64 9)
  %137 = icmp ne i64 %return1312, 0
  br i1 %137, label %true1313, label %false1314

false1309:                                        ; preds = %false1156
  %return1468 = fcmp oeq double %res1, 1.800000e+01
  br i1 %return1468, label %true1470, label %false1471

true1313:                                         ; preds = %true1308
  %return1317 = call i64 @"eq@III"(i64 %idx1311, i64 0)
  %138 = icmp ne i64 %return1317, 0
  br i1 %138, label %true1318, label %false1319

false1314:                                        ; preds = %true1308
  %return1397 = call i64 @"eq@III"(i64 %idx1311, i64 9)
  %139 = icmp ne i64 %return1397, 0
  br i1 %139, label %true1398, label %false1399

true1318:                                         ; preds = %true1313
  %XST1321 = load double*, double** %XST
  %return1322 = call double* @"slice@[F[FIIIIII"(double* %XST1321, i64 1, i64 0, i64 1, i64 17, i64 0, i64 0)
  %return1323 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1324 = call i64 @"sample_cdf@[FFI"(double* %return1322, double %return1323)
  br label %UnifiedReturnBlock

false1319:                                        ; preds = %true1313
  %return1326 = call i64 @"eq@III"(i64 %idx1311, i64 1)
  %140 = icmp ne i64 %return1326, 0
  br i1 %140, label %true1327, label %false1328

true1327:                                         ; preds = %false1319
  %XST1330 = load double*, double** %XST
  %return1331 = call double* @"slice@[F[FIIIIII"(double* %XST1330, i64 1, i64 17, i64 1, i64 34, i64 0, i64 0)
  %return1332 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1333 = call i64 @"sample_cdf@[FFI"(double* %return1331, double %return1332)
  br label %UnifiedReturnBlock

false1328:                                        ; preds = %false1319
  %return1335 = call i64 @"eq@III"(i64 %idx1311, i64 2)
  %141 = icmp ne i64 %return1335, 0
  br i1 %141, label %true1336, label %false1337

true1336:                                         ; preds = %false1328
  %XST1339 = load double*, double** %XST
  %return1340 = call double* @"slice@[F[FIIIIII"(double* %XST1339, i64 1, i64 34, i64 1, i64 51, i64 0, i64 0)
  %return1341 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1342 = call i64 @"sample_cdf@[FFI"(double* %return1340, double %return1341)
  br label %UnifiedReturnBlock

false1337:                                        ; preds = %false1328
  %return1344 = call i64 @"eq@III"(i64 %idx1311, i64 3)
  %142 = icmp ne i64 %return1344, 0
  br i1 %142, label %true1345, label %false1346

true1345:                                         ; preds = %false1337
  %XST1348 = load double*, double** %XST
  %return1349 = call double* @"slice@[F[FIIIIII"(double* %XST1348, i64 1, i64 51, i64 1, i64 68, i64 0, i64 0)
  %return1350 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1351 = call i64 @"sample_cdf@[FFI"(double* %return1349, double %return1350)
  br label %UnifiedReturnBlock

false1346:                                        ; preds = %false1337
  %return1353 = call i64 @"eq@III"(i64 %idx1311, i64 4)
  %143 = icmp ne i64 %return1353, 0
  br i1 %143, label %true1354, label %false1355

true1354:                                         ; preds = %false1346
  %XST1357 = load double*, double** %XST
  %return1358 = call double* @"slice@[F[FIIIIII"(double* %XST1357, i64 1, i64 68, i64 1, i64 85, i64 0, i64 0)
  %return1359 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1360 = call i64 @"sample_cdf@[FFI"(double* %return1358, double %return1359)
  br label %UnifiedReturnBlock

false1355:                                        ; preds = %false1346
  %return1362 = call i64 @"eq@III"(i64 %idx1311, i64 5)
  %144 = icmp ne i64 %return1362, 0
  br i1 %144, label %true1363, label %false1364

true1363:                                         ; preds = %false1355
  %XST1366 = load double*, double** %XST
  %return1367 = call double* @"slice@[F[FIIIIII"(double* %XST1366, i64 1, i64 85, i64 1, i64 102, i64 0, i64 0)
  %return1368 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1369 = call i64 @"sample_cdf@[FFI"(double* %return1367, double %return1368)
  br label %UnifiedReturnBlock

false1364:                                        ; preds = %false1355
  %return1371 = call i64 @"eq@III"(i64 %idx1311, i64 6)
  %145 = icmp ne i64 %return1371, 0
  br i1 %145, label %true1372, label %false1373

true1372:                                         ; preds = %false1364
  %XST1375 = load double*, double** %XST
  %return1376 = call double* @"slice@[F[FIIIIII"(double* %XST1375, i64 1, i64 102, i64 1, i64 119, i64 0, i64 0)
  %return1377 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1378 = call i64 @"sample_cdf@[FFI"(double* %return1376, double %return1377)
  br label %UnifiedReturnBlock

false1373:                                        ; preds = %false1364
  %return1380 = call i64 @"eq@III"(i64 %idx1311, i64 7)
  %146 = icmp ne i64 %return1380, 0
  br i1 %146, label %true1381, label %false1382

true1381:                                         ; preds = %false1373
  %XST1384 = load double*, double** %XST
  %return1385 = call double* @"slice@[F[FIIIIII"(double* %XST1384, i64 1, i64 119, i64 1, i64 136, i64 0, i64 0)
  %return1386 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1387 = call i64 @"sample_cdf@[FFI"(double* %return1385, double %return1386)
  br label %UnifiedReturnBlock

false1382:                                        ; preds = %false1373
  %return1389 = call i64 @"eq@III"(i64 %idx1311, i64 8)
  %147 = icmp ne i64 %return1389, 0
  br i1 %147, label %true1390, label %end

true1390:                                         ; preds = %false1382
  %XST1392 = load double*, double** %XST
  %return1393 = call double* @"slice@[F[FIIIIII"(double* %XST1392, i64 1, i64 136, i64 1, i64 153, i64 0, i64 0)
  %return1394 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1395 = call i64 @"sample_cdf@[FFI"(double* %return1393, double %return1394)
  br label %UnifiedReturnBlock

true1398:                                         ; preds = %false1314
  %XST1401 = load double*, double** %XST
  %return1402 = call double* @"slice@[F[FIIIIII"(double* %XST1401, i64 1, i64 153, i64 1, i64 170, i64 0, i64 0)
  %return1403 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1404 = call i64 @"sample_cdf@[FFI"(double* %return1402, double %return1403)
  br label %UnifiedReturnBlock

false1399:                                        ; preds = %false1314
  %return1406 = call i64 @"eq@III"(i64 %idx1311, i64 10)
  %148 = icmp ne i64 %return1406, 0
  br i1 %148, label %true1407, label %false1408

true1407:                                         ; preds = %false1399
  %XST1410 = load double*, double** %XST
  %return1411 = call double* @"slice@[F[FIIIIII"(double* %XST1410, i64 1, i64 170, i64 1, i64 187, i64 0, i64 0)
  %return1412 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1413 = call i64 @"sample_cdf@[FFI"(double* %return1411, double %return1412)
  br label %UnifiedReturnBlock

false1408:                                        ; preds = %false1399
  %return1415 = call i64 @"eq@III"(i64 %idx1311, i64 11)
  %149 = icmp ne i64 %return1415, 0
  br i1 %149, label %true1416, label %false1417

true1416:                                         ; preds = %false1408
  %XST1419 = load double*, double** %XST
  %return1420 = call double* @"slice@[F[FIIIIII"(double* %XST1419, i64 1, i64 187, i64 1, i64 204, i64 0, i64 0)
  %return1421 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1422 = call i64 @"sample_cdf@[FFI"(double* %return1420, double %return1421)
  br label %UnifiedReturnBlock

false1417:                                        ; preds = %false1408
  %return1424 = call i64 @"eq@III"(i64 %idx1311, i64 12)
  %150 = icmp ne i64 %return1424, 0
  br i1 %150, label %true1425, label %false1426

true1425:                                         ; preds = %false1417
  %XST1428 = load double*, double** %XST
  %return1429 = call double* @"slice@[F[FIIIIII"(double* %XST1428, i64 1, i64 204, i64 1, i64 221, i64 0, i64 0)
  %return1430 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1431 = call i64 @"sample_cdf@[FFI"(double* %return1429, double %return1430)
  br label %UnifiedReturnBlock

false1426:                                        ; preds = %false1417
  %return1433 = call i64 @"eq@III"(i64 %idx1311, i64 13)
  %151 = icmp ne i64 %return1433, 0
  br i1 %151, label %true1434, label %false1435

true1434:                                         ; preds = %false1426
  %XST1437 = load double*, double** %XST
  %return1438 = call double* @"slice@[F[FIIIIII"(double* %XST1437, i64 1, i64 221, i64 1, i64 238, i64 0, i64 0)
  %return1439 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1440 = call i64 @"sample_cdf@[FFI"(double* %return1438, double %return1439)
  br label %UnifiedReturnBlock

false1435:                                        ; preds = %false1426
  %return1442 = call i64 @"eq@III"(i64 %idx1311, i64 14)
  %152 = icmp ne i64 %return1442, 0
  br i1 %152, label %true1443, label %false1444

true1443:                                         ; preds = %false1435
  %XST1446 = load double*, double** %XST
  %return1447 = call double* @"slice@[F[FIIIIII"(double* %XST1446, i64 1, i64 238, i64 1, i64 255, i64 0, i64 0)
  %return1448 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1449 = call i64 @"sample_cdf@[FFI"(double* %return1447, double %return1448)
  br label %UnifiedReturnBlock

false1444:                                        ; preds = %false1435
  %return1451 = call i64 @"eq@III"(i64 %idx1311, i64 15)
  %153 = icmp ne i64 %return1451, 0
  br i1 %153, label %true1452, label %false1453

true1452:                                         ; preds = %false1444
  %XST1455 = load double*, double** %XST
  %return1456 = call double* @"slice@[F[FIIIIII"(double* %XST1455, i64 1, i64 255, i64 1, i64 272, i64 0, i64 0)
  %return1457 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1458 = call i64 @"sample_cdf@[FFI"(double* %return1456, double %return1457)
  br label %UnifiedReturnBlock

false1453:                                        ; preds = %false1444
  %return1460 = call i64 @"eq@III"(i64 %idx1311, i64 16)
  %154 = icmp ne i64 %return1460, 0
  br i1 %154, label %true1461, label %end

true1461:                                         ; preds = %false1453
  %XST1463 = load double*, double** %XST
  %return1464 = call double* @"slice@[F[FIIIIII"(double* %XST1463, i64 1, i64 272, i64 1, i64 289, i64 0, i64 0)
  %return1465 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1466 = call i64 @"sample_cdf@[FFI"(double* %return1464, double %return1465)
  br label %UnifiedReturnBlock

true1470:                                         ; preds = %false1309
  %idx1473 = load i64, i64* %idx
  %return1474 = call i64 @"lt@III"(i64 %idx1473, i64 9)
  %155 = icmp ne i64 %return1474, 0
  br i1 %155, label %true1475, label %false1476

false1471:                                        ; preds = %false1309
  %return1639 = fcmp oeq double %res1, 1.900000e+01
  br i1 %return1639, label %true1641, label %false1642

true1475:                                         ; preds = %true1470
  %return1479 = call i64 @"eq@III"(i64 %idx1473, i64 0)
  %156 = icmp ne i64 %return1479, 0
  br i1 %156, label %true1480, label %false1481

false1476:                                        ; preds = %true1470
  %return1559 = call i64 @"eq@III"(i64 %idx1473, i64 9)
  %157 = icmp ne i64 %return1559, 0
  br i1 %157, label %true1560, label %false1561

true1480:                                         ; preds = %true1475
  %XST1483 = load double*, double** %XST
  %return1484 = call double* @"slice@[F[FIIIIII"(double* %XST1483, i64 1, i64 0, i64 1, i64 18, i64 0, i64 0)
  %return1485 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1486 = call i64 @"sample_cdf@[FFI"(double* %return1484, double %return1485)
  br label %UnifiedReturnBlock

false1481:                                        ; preds = %true1475
  %return1488 = call i64 @"eq@III"(i64 %idx1473, i64 1)
  %158 = icmp ne i64 %return1488, 0
  br i1 %158, label %true1489, label %false1490

true1489:                                         ; preds = %false1481
  %XST1492 = load double*, double** %XST
  %return1493 = call double* @"slice@[F[FIIIIII"(double* %XST1492, i64 1, i64 18, i64 1, i64 36, i64 0, i64 0)
  %return1494 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1495 = call i64 @"sample_cdf@[FFI"(double* %return1493, double %return1494)
  br label %UnifiedReturnBlock

false1490:                                        ; preds = %false1481
  %return1497 = call i64 @"eq@III"(i64 %idx1473, i64 2)
  %159 = icmp ne i64 %return1497, 0
  br i1 %159, label %true1498, label %false1499

true1498:                                         ; preds = %false1490
  %XST1501 = load double*, double** %XST
  %return1502 = call double* @"slice@[F[FIIIIII"(double* %XST1501, i64 1, i64 36, i64 1, i64 54, i64 0, i64 0)
  %return1503 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1504 = call i64 @"sample_cdf@[FFI"(double* %return1502, double %return1503)
  br label %UnifiedReturnBlock

false1499:                                        ; preds = %false1490
  %return1506 = call i64 @"eq@III"(i64 %idx1473, i64 3)
  %160 = icmp ne i64 %return1506, 0
  br i1 %160, label %true1507, label %false1508

true1507:                                         ; preds = %false1499
  %XST1510 = load double*, double** %XST
  %return1511 = call double* @"slice@[F[FIIIIII"(double* %XST1510, i64 1, i64 54, i64 1, i64 72, i64 0, i64 0)
  %return1512 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1513 = call i64 @"sample_cdf@[FFI"(double* %return1511, double %return1512)
  br label %UnifiedReturnBlock

false1508:                                        ; preds = %false1499
  %return1515 = call i64 @"eq@III"(i64 %idx1473, i64 4)
  %161 = icmp ne i64 %return1515, 0
  br i1 %161, label %true1516, label %false1517

true1516:                                         ; preds = %false1508
  %XST1519 = load double*, double** %XST
  %return1520 = call double* @"slice@[F[FIIIIII"(double* %XST1519, i64 1, i64 72, i64 1, i64 90, i64 0, i64 0)
  %return1521 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1522 = call i64 @"sample_cdf@[FFI"(double* %return1520, double %return1521)
  br label %UnifiedReturnBlock

false1517:                                        ; preds = %false1508
  %return1524 = call i64 @"eq@III"(i64 %idx1473, i64 5)
  %162 = icmp ne i64 %return1524, 0
  br i1 %162, label %true1525, label %false1526

true1525:                                         ; preds = %false1517
  %XST1528 = load double*, double** %XST
  %return1529 = call double* @"slice@[F[FIIIIII"(double* %XST1528, i64 1, i64 90, i64 1, i64 108, i64 0, i64 0)
  %return1530 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1531 = call i64 @"sample_cdf@[FFI"(double* %return1529, double %return1530)
  br label %UnifiedReturnBlock

false1526:                                        ; preds = %false1517
  %return1533 = call i64 @"eq@III"(i64 %idx1473, i64 6)
  %163 = icmp ne i64 %return1533, 0
  br i1 %163, label %true1534, label %false1535

true1534:                                         ; preds = %false1526
  %XST1537 = load double*, double** %XST
  %return1538 = call double* @"slice@[F[FIIIIII"(double* %XST1537, i64 1, i64 108, i64 1, i64 126, i64 0, i64 0)
  %return1539 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1540 = call i64 @"sample_cdf@[FFI"(double* %return1538, double %return1539)
  br label %UnifiedReturnBlock

false1535:                                        ; preds = %false1526
  %return1542 = call i64 @"eq@III"(i64 %idx1473, i64 7)
  %164 = icmp ne i64 %return1542, 0
  br i1 %164, label %true1543, label %false1544

true1543:                                         ; preds = %false1535
  %XST1546 = load double*, double** %XST
  %return1547 = call double* @"slice@[F[FIIIIII"(double* %XST1546, i64 1, i64 126, i64 1, i64 144, i64 0, i64 0)
  %return1548 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1549 = call i64 @"sample_cdf@[FFI"(double* %return1547, double %return1548)
  br label %UnifiedReturnBlock

false1544:                                        ; preds = %false1535
  %return1551 = call i64 @"eq@III"(i64 %idx1473, i64 8)
  %165 = icmp ne i64 %return1551, 0
  br i1 %165, label %true1552, label %end

true1552:                                         ; preds = %false1544
  %XST1554 = load double*, double** %XST
  %return1555 = call double* @"slice@[F[FIIIIII"(double* %XST1554, i64 1, i64 144, i64 1, i64 162, i64 0, i64 0)
  %return1556 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1557 = call i64 @"sample_cdf@[FFI"(double* %return1555, double %return1556)
  br label %UnifiedReturnBlock

true1560:                                         ; preds = %false1476
  %XST1563 = load double*, double** %XST
  %return1564 = call double* @"slice@[F[FIIIIII"(double* %XST1563, i64 1, i64 162, i64 1, i64 180, i64 0, i64 0)
  %return1565 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1566 = call i64 @"sample_cdf@[FFI"(double* %return1564, double %return1565)
  br label %UnifiedReturnBlock

false1561:                                        ; preds = %false1476
  %return1568 = call i64 @"eq@III"(i64 %idx1473, i64 10)
  %166 = icmp ne i64 %return1568, 0
  br i1 %166, label %true1569, label %false1570

true1569:                                         ; preds = %false1561
  %XST1572 = load double*, double** %XST
  %return1573 = call double* @"slice@[F[FIIIIII"(double* %XST1572, i64 1, i64 180, i64 1, i64 198, i64 0, i64 0)
  %return1574 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1575 = call i64 @"sample_cdf@[FFI"(double* %return1573, double %return1574)
  br label %UnifiedReturnBlock

false1570:                                        ; preds = %false1561
  %return1577 = call i64 @"eq@III"(i64 %idx1473, i64 11)
  %167 = icmp ne i64 %return1577, 0
  br i1 %167, label %true1578, label %false1579

true1578:                                         ; preds = %false1570
  %XST1581 = load double*, double** %XST
  %return1582 = call double* @"slice@[F[FIIIIII"(double* %XST1581, i64 1, i64 198, i64 1, i64 216, i64 0, i64 0)
  %return1583 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1584 = call i64 @"sample_cdf@[FFI"(double* %return1582, double %return1583)
  br label %UnifiedReturnBlock

false1579:                                        ; preds = %false1570
  %return1586 = call i64 @"eq@III"(i64 %idx1473, i64 12)
  %168 = icmp ne i64 %return1586, 0
  br i1 %168, label %true1587, label %false1588

true1587:                                         ; preds = %false1579
  %XST1590 = load double*, double** %XST
  %return1591 = call double* @"slice@[F[FIIIIII"(double* %XST1590, i64 1, i64 216, i64 1, i64 234, i64 0, i64 0)
  %return1592 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1593 = call i64 @"sample_cdf@[FFI"(double* %return1591, double %return1592)
  br label %UnifiedReturnBlock

false1588:                                        ; preds = %false1579
  %return1595 = call i64 @"eq@III"(i64 %idx1473, i64 13)
  %169 = icmp ne i64 %return1595, 0
  br i1 %169, label %true1596, label %false1597

true1596:                                         ; preds = %false1588
  %XST1599 = load double*, double** %XST
  %return1600 = call double* @"slice@[F[FIIIIII"(double* %XST1599, i64 1, i64 234, i64 1, i64 252, i64 0, i64 0)
  %return1601 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1602 = call i64 @"sample_cdf@[FFI"(double* %return1600, double %return1601)
  br label %UnifiedReturnBlock

false1597:                                        ; preds = %false1588
  %return1604 = call i64 @"eq@III"(i64 %idx1473, i64 14)
  %170 = icmp ne i64 %return1604, 0
  br i1 %170, label %true1605, label %false1606

true1605:                                         ; preds = %false1597
  %XST1608 = load double*, double** %XST
  %return1609 = call double* @"slice@[F[FIIIIII"(double* %XST1608, i64 1, i64 252, i64 1, i64 270, i64 0, i64 0)
  %return1610 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1611 = call i64 @"sample_cdf@[FFI"(double* %return1609, double %return1610)
  br label %UnifiedReturnBlock

false1606:                                        ; preds = %false1597
  %return1613 = call i64 @"eq@III"(i64 %idx1473, i64 15)
  %171 = icmp ne i64 %return1613, 0
  br i1 %171, label %true1614, label %false1615

true1614:                                         ; preds = %false1606
  %XST1617 = load double*, double** %XST
  %return1618 = call double* @"slice@[F[FIIIIII"(double* %XST1617, i64 1, i64 270, i64 1, i64 288, i64 0, i64 0)
  %return1619 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1620 = call i64 @"sample_cdf@[FFI"(double* %return1618, double %return1619)
  br label %UnifiedReturnBlock

false1615:                                        ; preds = %false1606
  %return1622 = call i64 @"eq@III"(i64 %idx1473, i64 16)
  %172 = icmp ne i64 %return1622, 0
  br i1 %172, label %true1623, label %false1624

true1623:                                         ; preds = %false1615
  %XST1626 = load double*, double** %XST
  %return1627 = call double* @"slice@[F[FIIIIII"(double* %XST1626, i64 1, i64 288, i64 1, i64 306, i64 0, i64 0)
  %return1628 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1629 = call i64 @"sample_cdf@[FFI"(double* %return1627, double %return1628)
  br label %UnifiedReturnBlock

false1624:                                        ; preds = %false1615
  %return1631 = call i64 @"eq@III"(i64 %idx1473, i64 17)
  %173 = icmp ne i64 %return1631, 0
  br i1 %173, label %true1632, label %end

true1632:                                         ; preds = %false1624
  %XST1634 = load double*, double** %XST
  %return1635 = call double* @"slice@[F[FIIIIII"(double* %XST1634, i64 1, i64 306, i64 1, i64 324, i64 0, i64 0)
  %return1636 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1637 = call i64 @"sample_cdf@[FFI"(double* %return1635, double %return1636)
  br label %UnifiedReturnBlock

true1641:                                         ; preds = %false1471
  %idx1644 = load i64, i64* %idx
  %return1645 = call i64 @"lt@III"(i64 %idx1644, i64 10)
  %174 = icmp ne i64 %return1645, 0
  br i1 %174, label %true1646, label %false1647

false1642:                                        ; preds = %false1471
  %return1819 = fcmp oeq double %res1, 2.000000e+01
  br i1 %return1819, label %true1821, label %end

true1646:                                         ; preds = %true1641
  %return1650 = call i64 @"eq@III"(i64 %idx1644, i64 0)
  %175 = icmp ne i64 %return1650, 0
  br i1 %175, label %true1651, label %false1652

false1647:                                        ; preds = %true1641
  %return1739 = call i64 @"eq@III"(i64 %idx1644, i64 10)
  %176 = icmp ne i64 %return1739, 0
  br i1 %176, label %true1740, label %false1741

true1651:                                         ; preds = %true1646
  %XST1654 = load double*, double** %XST
  %return1655 = call double* @"slice@[F[FIIIIII"(double* %XST1654, i64 1, i64 0, i64 1, i64 19, i64 0, i64 0)
  %return1656 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1657 = call i64 @"sample_cdf@[FFI"(double* %return1655, double %return1656)
  br label %UnifiedReturnBlock

false1652:                                        ; preds = %true1646
  %return1659 = call i64 @"eq@III"(i64 %idx1644, i64 1)
  %177 = icmp ne i64 %return1659, 0
  br i1 %177, label %true1660, label %false1661

true1660:                                         ; preds = %false1652
  %XST1663 = load double*, double** %XST
  %return1664 = call double* @"slice@[F[FIIIIII"(double* %XST1663, i64 1, i64 19, i64 1, i64 38, i64 0, i64 0)
  %return1665 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1666 = call i64 @"sample_cdf@[FFI"(double* %return1664, double %return1665)
  br label %UnifiedReturnBlock

false1661:                                        ; preds = %false1652
  %return1668 = call i64 @"eq@III"(i64 %idx1644, i64 2)
  %178 = icmp ne i64 %return1668, 0
  br i1 %178, label %true1669, label %false1670

true1669:                                         ; preds = %false1661
  %XST1672 = load double*, double** %XST
  %return1673 = call double* @"slice@[F[FIIIIII"(double* %XST1672, i64 1, i64 38, i64 1, i64 57, i64 0, i64 0)
  %return1674 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1675 = call i64 @"sample_cdf@[FFI"(double* %return1673, double %return1674)
  br label %UnifiedReturnBlock

false1670:                                        ; preds = %false1661
  %return1677 = call i64 @"eq@III"(i64 %idx1644, i64 3)
  %179 = icmp ne i64 %return1677, 0
  br i1 %179, label %true1678, label %false1679

true1678:                                         ; preds = %false1670
  %XST1681 = load double*, double** %XST
  %return1682 = call double* @"slice@[F[FIIIIII"(double* %XST1681, i64 1, i64 57, i64 1, i64 76, i64 0, i64 0)
  %return1683 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1684 = call i64 @"sample_cdf@[FFI"(double* %return1682, double %return1683)
  br label %UnifiedReturnBlock

false1679:                                        ; preds = %false1670
  %return1686 = call i64 @"eq@III"(i64 %idx1644, i64 4)
  %180 = icmp ne i64 %return1686, 0
  br i1 %180, label %true1687, label %false1688

true1687:                                         ; preds = %false1679
  %XST1690 = load double*, double** %XST
  %return1691 = call double* @"slice@[F[FIIIIII"(double* %XST1690, i64 1, i64 76, i64 1, i64 95, i64 0, i64 0)
  %return1692 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1693 = call i64 @"sample_cdf@[FFI"(double* %return1691, double %return1692)
  br label %UnifiedReturnBlock

false1688:                                        ; preds = %false1679
  %return1695 = call i64 @"eq@III"(i64 %idx1644, i64 5)
  %181 = icmp ne i64 %return1695, 0
  br i1 %181, label %true1696, label %false1697

true1696:                                         ; preds = %false1688
  %XST1699 = load double*, double** %XST
  %return1700 = call double* @"slice@[F[FIIIIII"(double* %XST1699, i64 1, i64 95, i64 1, i64 114, i64 0, i64 0)
  %return1701 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1702 = call i64 @"sample_cdf@[FFI"(double* %return1700, double %return1701)
  br label %UnifiedReturnBlock

false1697:                                        ; preds = %false1688
  %return1704 = call i64 @"eq@III"(i64 %idx1644, i64 6)
  %182 = icmp ne i64 %return1704, 0
  br i1 %182, label %true1705, label %false1706

true1705:                                         ; preds = %false1697
  %XST1708 = load double*, double** %XST
  %return1709 = call double* @"slice@[F[FIIIIII"(double* %XST1708, i64 1, i64 114, i64 1, i64 133, i64 0, i64 0)
  %return1710 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1711 = call i64 @"sample_cdf@[FFI"(double* %return1709, double %return1710)
  br label %UnifiedReturnBlock

false1706:                                        ; preds = %false1697
  %return1713 = call i64 @"eq@III"(i64 %idx1644, i64 7)
  %183 = icmp ne i64 %return1713, 0
  br i1 %183, label %true1714, label %false1715

true1714:                                         ; preds = %false1706
  %XST1717 = load double*, double** %XST
  %return1718 = call double* @"slice@[F[FIIIIII"(double* %XST1717, i64 1, i64 133, i64 1, i64 152, i64 0, i64 0)
  %return1719 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1720 = call i64 @"sample_cdf@[FFI"(double* %return1718, double %return1719)
  br label %UnifiedReturnBlock

false1715:                                        ; preds = %false1706
  %return1722 = call i64 @"eq@III"(i64 %idx1644, i64 8)
  %184 = icmp ne i64 %return1722, 0
  br i1 %184, label %true1723, label %false1724

true1723:                                         ; preds = %false1715
  %XST1726 = load double*, double** %XST
  %return1727 = call double* @"slice@[F[FIIIIII"(double* %XST1726, i64 1, i64 152, i64 1, i64 171, i64 0, i64 0)
  %return1728 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1729 = call i64 @"sample_cdf@[FFI"(double* %return1727, double %return1728)
  br label %UnifiedReturnBlock

false1724:                                        ; preds = %false1715
  %return1731 = call i64 @"eq@III"(i64 %idx1644, i64 9)
  %185 = icmp ne i64 %return1731, 0
  br i1 %185, label %true1732, label %end

true1732:                                         ; preds = %false1724
  %XST1734 = load double*, double** %XST
  %return1735 = call double* @"slice@[F[FIIIIII"(double* %XST1734, i64 1, i64 171, i64 1, i64 190, i64 0, i64 0)
  %return1736 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1737 = call i64 @"sample_cdf@[FFI"(double* %return1735, double %return1736)
  br label %UnifiedReturnBlock

true1740:                                         ; preds = %false1647
  %XST1743 = load double*, double** %XST
  %return1744 = call double* @"slice@[F[FIIIIII"(double* %XST1743, i64 1, i64 190, i64 1, i64 209, i64 0, i64 0)
  %return1745 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1746 = call i64 @"sample_cdf@[FFI"(double* %return1744, double %return1745)
  br label %UnifiedReturnBlock

false1741:                                        ; preds = %false1647
  %return1748 = call i64 @"eq@III"(i64 %idx1644, i64 11)
  %186 = icmp ne i64 %return1748, 0
  br i1 %186, label %true1749, label %false1750

true1749:                                         ; preds = %false1741
  %XST1752 = load double*, double** %XST
  %return1753 = call double* @"slice@[F[FIIIIII"(double* %XST1752, i64 1, i64 209, i64 1, i64 228, i64 0, i64 0)
  %return1754 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1755 = call i64 @"sample_cdf@[FFI"(double* %return1753, double %return1754)
  br label %UnifiedReturnBlock

false1750:                                        ; preds = %false1741
  %return1757 = call i64 @"eq@III"(i64 %idx1644, i64 12)
  %187 = icmp ne i64 %return1757, 0
  br i1 %187, label %true1758, label %false1759

true1758:                                         ; preds = %false1750
  %XST1761 = load double*, double** %XST
  %return1762 = call double* @"slice@[F[FIIIIII"(double* %XST1761, i64 1, i64 228, i64 1, i64 247, i64 0, i64 0)
  %return1763 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1764 = call i64 @"sample_cdf@[FFI"(double* %return1762, double %return1763)
  br label %UnifiedReturnBlock

false1759:                                        ; preds = %false1750
  %return1766 = call i64 @"eq@III"(i64 %idx1644, i64 13)
  %188 = icmp ne i64 %return1766, 0
  br i1 %188, label %true1767, label %false1768

true1767:                                         ; preds = %false1759
  %XST1770 = load double*, double** %XST
  %return1771 = call double* @"slice@[F[FIIIIII"(double* %XST1770, i64 1, i64 247, i64 1, i64 266, i64 0, i64 0)
  %return1772 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1773 = call i64 @"sample_cdf@[FFI"(double* %return1771, double %return1772)
  br label %UnifiedReturnBlock

false1768:                                        ; preds = %false1759
  %return1775 = call i64 @"eq@III"(i64 %idx1644, i64 14)
  %189 = icmp ne i64 %return1775, 0
  br i1 %189, label %true1776, label %false1777

true1776:                                         ; preds = %false1768
  %XST1779 = load double*, double** %XST
  %return1780 = call double* @"slice@[F[FIIIIII"(double* %XST1779, i64 1, i64 266, i64 1, i64 285, i64 0, i64 0)
  %return1781 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1782 = call i64 @"sample_cdf@[FFI"(double* %return1780, double %return1781)
  br label %UnifiedReturnBlock

false1777:                                        ; preds = %false1768
  %return1784 = call i64 @"eq@III"(i64 %idx1644, i64 15)
  %190 = icmp ne i64 %return1784, 0
  br i1 %190, label %true1785, label %false1786

true1785:                                         ; preds = %false1777
  %XST1788 = load double*, double** %XST
  %return1789 = call double* @"slice@[F[FIIIIII"(double* %XST1788, i64 1, i64 285, i64 1, i64 304, i64 0, i64 0)
  %return1790 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1791 = call i64 @"sample_cdf@[FFI"(double* %return1789, double %return1790)
  br label %UnifiedReturnBlock

false1786:                                        ; preds = %false1777
  %return1793 = call i64 @"eq@III"(i64 %idx1644, i64 16)
  %191 = icmp ne i64 %return1793, 0
  br i1 %191, label %true1794, label %false1795

true1794:                                         ; preds = %false1786
  %XST1797 = load double*, double** %XST
  %return1798 = call double* @"slice@[F[FIIIIII"(double* %XST1797, i64 1, i64 304, i64 1, i64 323, i64 0, i64 0)
  %return1799 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1800 = call i64 @"sample_cdf@[FFI"(double* %return1798, double %return1799)
  br label %UnifiedReturnBlock

false1795:                                        ; preds = %false1786
  %return1802 = call i64 @"eq@III"(i64 %idx1644, i64 17)
  %192 = icmp ne i64 %return1802, 0
  br i1 %192, label %true1803, label %false1804

true1803:                                         ; preds = %false1795
  %XST1806 = load double*, double** %XST
  %return1807 = call double* @"slice@[F[FIIIIII"(double* %XST1806, i64 1, i64 323, i64 1, i64 342, i64 0, i64 0)
  %return1808 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1809 = call i64 @"sample_cdf@[FFI"(double* %return1807, double %return1808)
  br label %UnifiedReturnBlock

false1804:                                        ; preds = %false1795
  %return1811 = call i64 @"eq@III"(i64 %idx1644, i64 18)
  %193 = icmp ne i64 %return1811, 0
  br i1 %193, label %true1812, label %end

true1812:                                         ; preds = %false1804
  %XST1814 = load double*, double** %XST
  %return1815 = call double* @"slice@[F[FIIIIII"(double* %XST1814, i64 1, i64 342, i64 1, i64 361, i64 0, i64 0)
  %return1816 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1817 = call i64 @"sample_cdf@[FFI"(double* %return1815, double %return1816)
  br label %UnifiedReturnBlock

true1821:                                         ; preds = %false1642
  %idx1823 = load i64, i64* %idx
  %return1824 = call i64 @"lt@III"(i64 %idx1823, i64 10)
  %194 = icmp ne i64 %return1824, 0
  br i1 %194, label %true1825, label %false1826

true1825:                                         ; preds = %true1821
  %return1829 = call i64 @"eq@III"(i64 %idx1823, i64 0)
  %195 = icmp ne i64 %return1829, 0
  br i1 %195, label %true1830, label %false1831

false1826:                                        ; preds = %true1821
  %return1918 = call i64 @"eq@III"(i64 %idx1823, i64 10)
  %196 = icmp ne i64 %return1918, 0
  br i1 %196, label %true1919, label %false1920

true1830:                                         ; preds = %true1825
  %XST1833 = load double*, double** %XST
  %return1834 = call double* @"slice@[F[FIIIIII"(double* %XST1833, i64 1, i64 0, i64 1, i64 20, i64 0, i64 0)
  %return1835 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1836 = call i64 @"sample_cdf@[FFI"(double* %return1834, double %return1835)
  br label %UnifiedReturnBlock

false1831:                                        ; preds = %true1825
  %return1838 = call i64 @"eq@III"(i64 %idx1823, i64 1)
  %197 = icmp ne i64 %return1838, 0
  br i1 %197, label %true1839, label %false1840

true1839:                                         ; preds = %false1831
  %XST1842 = load double*, double** %XST
  %return1843 = call double* @"slice@[F[FIIIIII"(double* %XST1842, i64 1, i64 20, i64 1, i64 40, i64 0, i64 0)
  %return1844 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1845 = call i64 @"sample_cdf@[FFI"(double* %return1843, double %return1844)
  br label %UnifiedReturnBlock

false1840:                                        ; preds = %false1831
  %return1847 = call i64 @"eq@III"(i64 %idx1823, i64 2)
  %198 = icmp ne i64 %return1847, 0
  br i1 %198, label %true1848, label %false1849

true1848:                                         ; preds = %false1840
  %XST1851 = load double*, double** %XST
  %return1852 = call double* @"slice@[F[FIIIIII"(double* %XST1851, i64 1, i64 40, i64 1, i64 60, i64 0, i64 0)
  %return1853 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1854 = call i64 @"sample_cdf@[FFI"(double* %return1852, double %return1853)
  br label %UnifiedReturnBlock

false1849:                                        ; preds = %false1840
  %return1856 = call i64 @"eq@III"(i64 %idx1823, i64 3)
  %199 = icmp ne i64 %return1856, 0
  br i1 %199, label %true1857, label %false1858

true1857:                                         ; preds = %false1849
  %XST1860 = load double*, double** %XST
  %return1861 = call double* @"slice@[F[FIIIIII"(double* %XST1860, i64 1, i64 60, i64 1, i64 80, i64 0, i64 0)
  %return1862 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1863 = call i64 @"sample_cdf@[FFI"(double* %return1861, double %return1862)
  br label %UnifiedReturnBlock

false1858:                                        ; preds = %false1849
  %return1865 = call i64 @"eq@III"(i64 %idx1823, i64 4)
  %200 = icmp ne i64 %return1865, 0
  br i1 %200, label %true1866, label %false1867

true1866:                                         ; preds = %false1858
  %XST1869 = load double*, double** %XST
  %return1870 = call double* @"slice@[F[FIIIIII"(double* %XST1869, i64 1, i64 80, i64 1, i64 100, i64 0, i64 0)
  %return1871 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1872 = call i64 @"sample_cdf@[FFI"(double* %return1870, double %return1871)
  br label %UnifiedReturnBlock

false1867:                                        ; preds = %false1858
  %return1874 = call i64 @"eq@III"(i64 %idx1823, i64 5)
  %201 = icmp ne i64 %return1874, 0
  br i1 %201, label %true1875, label %false1876

true1875:                                         ; preds = %false1867
  %XST1878 = load double*, double** %XST
  %return1879 = call double* @"slice@[F[FIIIIII"(double* %XST1878, i64 1, i64 100, i64 1, i64 120, i64 0, i64 0)
  %return1880 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1881 = call i64 @"sample_cdf@[FFI"(double* %return1879, double %return1880)
  br label %UnifiedReturnBlock

false1876:                                        ; preds = %false1867
  %return1883 = call i64 @"eq@III"(i64 %idx1823, i64 6)
  %202 = icmp ne i64 %return1883, 0
  br i1 %202, label %true1884, label %false1885

true1884:                                         ; preds = %false1876
  %XST1887 = load double*, double** %XST
  %return1888 = call double* @"slice@[F[FIIIIII"(double* %XST1887, i64 1, i64 120, i64 1, i64 140, i64 0, i64 0)
  %return1889 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1890 = call i64 @"sample_cdf@[FFI"(double* %return1888, double %return1889)
  br label %UnifiedReturnBlock

false1885:                                        ; preds = %false1876
  %return1892 = call i64 @"eq@III"(i64 %idx1823, i64 7)
  %203 = icmp ne i64 %return1892, 0
  br i1 %203, label %true1893, label %false1894

true1893:                                         ; preds = %false1885
  %XST1896 = load double*, double** %XST
  %return1897 = call double* @"slice@[F[FIIIIII"(double* %XST1896, i64 1, i64 140, i64 1, i64 160, i64 0, i64 0)
  %return1898 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1899 = call i64 @"sample_cdf@[FFI"(double* %return1897, double %return1898)
  br label %UnifiedReturnBlock

false1894:                                        ; preds = %false1885
  %return1901 = call i64 @"eq@III"(i64 %idx1823, i64 8)
  %204 = icmp ne i64 %return1901, 0
  br i1 %204, label %true1902, label %false1903

true1902:                                         ; preds = %false1894
  %XST1905 = load double*, double** %XST
  %return1906 = call double* @"slice@[F[FIIIIII"(double* %XST1905, i64 1, i64 160, i64 1, i64 180, i64 0, i64 0)
  %return1907 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1908 = call i64 @"sample_cdf@[FFI"(double* %return1906, double %return1907)
  br label %UnifiedReturnBlock

false1903:                                        ; preds = %false1894
  %return1910 = call i64 @"eq@III"(i64 %idx1823, i64 9)
  %205 = icmp ne i64 %return1910, 0
  br i1 %205, label %true1911, label %end

true1911:                                         ; preds = %false1903
  %XST1913 = load double*, double** %XST
  %return1914 = call double* @"slice@[F[FIIIIII"(double* %XST1913, i64 1, i64 180, i64 1, i64 200, i64 0, i64 0)
  %return1915 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1916 = call i64 @"sample_cdf@[FFI"(double* %return1914, double %return1915)
  br label %UnifiedReturnBlock

true1919:                                         ; preds = %false1826
  %XST1922 = load double*, double** %XST
  %return1923 = call double* @"slice@[F[FIIIIII"(double* %XST1922, i64 1, i64 200, i64 1, i64 220, i64 0, i64 0)
  %return1924 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1925 = call i64 @"sample_cdf@[FFI"(double* %return1923, double %return1924)
  br label %UnifiedReturnBlock

false1920:                                        ; preds = %false1826
  %return1927 = call i64 @"eq@III"(i64 %idx1823, i64 11)
  %206 = icmp ne i64 %return1927, 0
  br i1 %206, label %true1928, label %false1929

true1928:                                         ; preds = %false1920
  %XST1931 = load double*, double** %XST
  %return1932 = call double* @"slice@[F[FIIIIII"(double* %XST1931, i64 1, i64 220, i64 1, i64 240, i64 0, i64 0)
  %return1933 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1934 = call i64 @"sample_cdf@[FFI"(double* %return1932, double %return1933)
  br label %UnifiedReturnBlock

false1929:                                        ; preds = %false1920
  %return1936 = call i64 @"eq@III"(i64 %idx1823, i64 12)
  %207 = icmp ne i64 %return1936, 0
  br i1 %207, label %true1937, label %false1938

true1937:                                         ; preds = %false1929
  %XST1940 = load double*, double** %XST
  %return1941 = call double* @"slice@[F[FIIIIII"(double* %XST1940, i64 1, i64 240, i64 1, i64 260, i64 0, i64 0)
  %return1942 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1943 = call i64 @"sample_cdf@[FFI"(double* %return1941, double %return1942)
  br label %UnifiedReturnBlock

false1938:                                        ; preds = %false1929
  %return1945 = call i64 @"eq@III"(i64 %idx1823, i64 13)
  %208 = icmp ne i64 %return1945, 0
  br i1 %208, label %true1946, label %false1947

true1946:                                         ; preds = %false1938
  %XST1949 = load double*, double** %XST
  %return1950 = call double* @"slice@[F[FIIIIII"(double* %XST1949, i64 1, i64 260, i64 1, i64 280, i64 0, i64 0)
  %return1951 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1952 = call i64 @"sample_cdf@[FFI"(double* %return1950, double %return1951)
  br label %UnifiedReturnBlock

false1947:                                        ; preds = %false1938
  %return1954 = call i64 @"eq@III"(i64 %idx1823, i64 14)
  %209 = icmp ne i64 %return1954, 0
  br i1 %209, label %true1955, label %false1956

true1955:                                         ; preds = %false1947
  %XST1958 = load double*, double** %XST
  %return1959 = call double* @"slice@[F[FIIIIII"(double* %XST1958, i64 1, i64 280, i64 1, i64 300, i64 0, i64 0)
  %return1960 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1961 = call i64 @"sample_cdf@[FFI"(double* %return1959, double %return1960)
  br label %UnifiedReturnBlock

false1956:                                        ; preds = %false1947
  %return1963 = call i64 @"eq@III"(i64 %idx1823, i64 15)
  %210 = icmp ne i64 %return1963, 0
  br i1 %210, label %true1964, label %false1965

true1964:                                         ; preds = %false1956
  %XST1967 = load double*, double** %XST
  %return1968 = call double* @"slice@[F[FIIIIII"(double* %XST1967, i64 1, i64 300, i64 1, i64 320, i64 0, i64 0)
  %return1969 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1970 = call i64 @"sample_cdf@[FFI"(double* %return1968, double %return1969)
  br label %UnifiedReturnBlock

false1965:                                        ; preds = %false1956
  %return1972 = call i64 @"eq@III"(i64 %idx1823, i64 16)
  %211 = icmp ne i64 %return1972, 0
  br i1 %211, label %true1973, label %false1974

true1973:                                         ; preds = %false1965
  %XST1976 = load double*, double** %XST
  %return1977 = call double* @"slice@[F[FIIIIII"(double* %XST1976, i64 1, i64 320, i64 1, i64 340, i64 0, i64 0)
  %return1978 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1979 = call i64 @"sample_cdf@[FFI"(double* %return1977, double %return1978)
  br label %UnifiedReturnBlock

false1974:                                        ; preds = %false1965
  %return1981 = call i64 @"eq@III"(i64 %idx1823, i64 17)
  %212 = icmp ne i64 %return1981, 0
  br i1 %212, label %true1982, label %false1983

true1982:                                         ; preds = %false1974
  %XST1985 = load double*, double** %XST
  %return1986 = call double* @"slice@[F[FIIIIII"(double* %XST1985, i64 1, i64 340, i64 1, i64 360, i64 0, i64 0)
  %return1987 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1988 = call i64 @"sample_cdf@[FFI"(double* %return1986, double %return1987)
  br label %UnifiedReturnBlock

false1983:                                        ; preds = %false1974
  %return1990 = call i64 @"eq@III"(i64 %idx1823, i64 18)
  %213 = icmp ne i64 %return1990, 0
  br i1 %213, label %true1991, label %false1992

true1991:                                         ; preds = %false1983
  %XST1994 = load double*, double** %XST
  %return1995 = call double* @"slice@[F[FIIIIII"(double* %XST1994, i64 1, i64 360, i64 1, i64 380, i64 0, i64 0)
  %return1996 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return1997 = call i64 @"sample_cdf@[FFI"(double* %return1995, double %return1996)
  br label %UnifiedReturnBlock

false1992:                                        ; preds = %false1983
  %return1999 = call i64 @"eq@III"(i64 %idx1823, i64 19)
  %214 = icmp ne i64 %return1999, 0
  br i1 %214, label %true2000, label %end

true2000:                                         ; preds = %false1992
  %XST2002 = load double*, double** %XST
  %return2003 = call double* @"slice@[F[FIIIIII"(double* %XST2002, i64 1, i64 380, i64 1, i64 400, i64 0, i64 0)
  %return2004 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return2005 = call i64 @"sample_cdf@[FFI"(double* %return2003, double %return2004)
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %true2000, %true1991, %true1982, %true1973, %true1964, %true1955, %true1946, %true1937, %true1928, %true1919, %true1911, %true1902, %true1893, %true1884, %true1875, %true1866, %true1857, %true1848, %true1839, %true1830, %true1812, %true1803, %true1794, %true1785, %true1776, %true1767, %true1758, %true1749, %true1740, %true1732, %true1723, %true1714, %true1705, %true1696, %true1687, %true1678, %true1669, %true1660, %true1651, %true1632, %true1623, %true1614, %true1605, %true1596, %true1587, %true1578, %true1569, %true1560, %true1552, %true1543, %true1534, %true1525, %true1516, %true1507, %true1498, %true1489, %true1480, %true1461, %true1452, %true1443, %true1434, %true1425, %true1416, %true1407, %true1398, %true1390, %true1381, %true1372, %true1363, %true1354, %true1345, %true1336, %true1327, %true1318, %true1299, %true1290, %true1281, %true1272, %true1263, %true1254, %true1245, %true1236, %true1228, %true1219, %true1210, %true1201, %true1192, %true1183, %true1174, %true1165, %true1146, %true1137, %true1128, %true1119, %true1110, %true1101, %true1092, %true1084, %true1075, %true1066, %true1057, %true1048, %true1039, %true1030, %true1021, %true997, %true988, %true979, %true970, %true961, %true952, %true943, %true935, %true926, %true917, %true908, %true899, %true890, %true881, %true863, %true854, %true845, %true836, %true827, %true818, %true809, %true800, %true791, %true782, %true773, %true764, %true755, %true741, %true732, %true723, %true714, %true705, %true696, %true687, %true678, %true669, %true660, %true651, %true642, %true628, %true619, %true610, %true601, %true592, %true583, %true574, %true565, %true556, %true547, %true538, %true524, %true515, %true506, %true497, %true488, %true479, %true470, %true461, %true452, %true443, %true429, %true420, %true411, %true402, %true393, %true384, %true375, %true366, %true357, %true343, %true334, %true325, %true316, %true307, %true298, %true289, %true280, %true266, %true257, %true248, %true239, %true230, %true221, %true212, %true198, %true189, %true180, %true171, %true162, %true139, %true130, %true121, %true112, %true103, %true89, %true80, %true71, %true62, %true48, %true39, %true30, %false12, %true11, %end
  %UnifiedRetVal = phi i64 [ %idx2006, %end ], [ %return17, %true11 ], [ %return21, %false12 ], [ %return36, %true30 ], [ %return45, %true39 ], [ %return53, %true48 ], [ %return68, %true62 ], [ %return77, %true71 ], [ %return86, %true80 ], [ %return94, %true89 ], [ %return109, %true103 ], [ %return118, %true112 ], [ %return127, %true121 ], [ %return136, %true130 ], [ %return144, %true139 ], [ %return168, %true162 ], [ %return177, %true171 ], [ %return186, %true180 ], [ %return195, %true189 ], [ %return203, %true198 ], [ %return218, %true212 ], [ %return227, %true221 ], [ %return236, %true230 ], [ %return245, %true239 ], [ %return254, %true248 ], [ %return263, %true257 ], [ %return271, %true266 ], [ %return286, %true280 ], [ %return295, %true289 ], [ %return304, %true298 ], [ %return313, %true307 ], [ %return322, %true316 ], [ %return331, %true325 ], [ %return340, %true334 ], [ %return348, %true343 ], [ %return363, %true357 ], [ %return372, %true366 ], [ %return381, %true375 ], [ %return390, %true384 ], [ %return399, %true393 ], [ %return408, %true402 ], [ %return417, %true411 ], [ %return426, %true420 ], [ %return434, %true429 ], [ %return449, %true443 ], [ %return458, %true452 ], [ %return467, %true461 ], [ %return476, %true470 ], [ %return485, %true479 ], [ %return494, %true488 ], [ %return503, %true497 ], [ %return512, %true506 ], [ %return521, %true515 ], [ %return529, %true524 ], [ %return544, %true538 ], [ %return553, %true547 ], [ %return562, %true556 ], [ %return571, %true565 ], [ %return580, %true574 ], [ %return589, %true583 ], [ %return598, %true592 ], [ %return607, %true601 ], [ %return616, %true610 ], [ %return625, %true619 ], [ %return633, %true628 ], [ %return648, %true642 ], [ %return657, %true651 ], [ %return666, %true660 ], [ %return675, %true669 ], [ %return684, %true678 ], [ %return693, %true687 ], [ %return702, %true696 ], [ %return711, %true705 ], [ %return720, %true714 ], [ %return729, %true723 ], [ %return738, %true732 ], [ %return746, %true741 ], [ %return761, %true755 ], [ %return770, %true764 ], [ %return779, %true773 ], [ %return788, %true782 ], [ %return797, %true791 ], [ %return806, %true800 ], [ %return815, %true809 ], [ %return824, %true818 ], [ %return833, %true827 ], [ %return842, %true836 ], [ %return851, %true845 ], [ %return860, %true854 ], [ %return868, %true863 ], [ %return887, %true881 ], [ %return896, %true890 ], [ %return905, %true899 ], [ %return914, %true908 ], [ %return923, %true917 ], [ %return932, %true926 ], [ %return940, %true935 ], [ %return949, %true943 ], [ %return958, %true952 ], [ %return967, %true961 ], [ %return976, %true970 ], [ %return985, %true979 ], [ %return994, %true988 ], [ %return1002, %true997 ], [ %return1027, %true1021 ], [ %return1036, %true1030 ], [ %return1045, %true1039 ], [ %return1054, %true1048 ], [ %return1063, %true1057 ], [ %return1072, %true1066 ], [ %return1081, %true1075 ], [ %return1089, %true1084 ], [ %return1098, %true1092 ], [ %return1107, %true1101 ], [ %return1116, %true1110 ], [ %return1125, %true1119 ], [ %return1134, %true1128 ], [ %return1143, %true1137 ], [ %return1151, %true1146 ], [ %return1171, %true1165 ], [ %return1180, %true1174 ], [ %return1189, %true1183 ], [ %return1198, %true1192 ], [ %return1207, %true1201 ], [ %return1216, %true1210 ], [ %return1225, %true1219 ], [ %return1233, %true1228 ], [ %return1242, %true1236 ], [ %return1251, %true1245 ], [ %return1260, %true1254 ], [ %return1269, %true1263 ], [ %return1278, %true1272 ], [ %return1287, %true1281 ], [ %return1296, %true1290 ], [ %return1304, %true1299 ], [ %return1324, %true1318 ], [ %return1333, %true1327 ], [ %return1342, %true1336 ], [ %return1351, %true1345 ], [ %return1360, %true1354 ], [ %return1369, %true1363 ], [ %return1378, %true1372 ], [ %return1387, %true1381 ], [ %return1395, %true1390 ], [ %return1404, %true1398 ], [ %return1413, %true1407 ], [ %return1422, %true1416 ], [ %return1431, %true1425 ], [ %return1440, %true1434 ], [ %return1449, %true1443 ], [ %return1458, %true1452 ], [ %return1466, %true1461 ], [ %return1486, %true1480 ], [ %return1495, %true1489 ], [ %return1504, %true1498 ], [ %return1513, %true1507 ], [ %return1522, %true1516 ], [ %return1531, %true1525 ], [ %return1540, %true1534 ], [ %return1549, %true1543 ], [ %return1557, %true1552 ], [ %return1566, %true1560 ], [ %return1575, %true1569 ], [ %return1584, %true1578 ], [ %return1593, %true1587 ], [ %return1602, %true1596 ], [ %return1611, %true1605 ], [ %return1620, %true1614 ], [ %return1629, %true1623 ], [ %return1637, %true1632 ], [ %return1657, %true1651 ], [ %return1666, %true1660 ], [ %return1675, %true1669 ], [ %return1684, %true1678 ], [ %return1693, %true1687 ], [ %return1702, %true1696 ], [ %return1711, %true1705 ], [ %return1720, %true1714 ], [ %return1729, %true1723 ], [ %return1737, %true1732 ], [ %return1746, %true1740 ], [ %return1755, %true1749 ], [ %return1764, %true1758 ], [ %return1773, %true1767 ], [ %return1782, %true1776 ], [ %return1791, %true1785 ], [ %return1800, %true1794 ], [ %return1809, %true1803 ], [ %return1817, %true1812 ], [ %return1836, %true1830 ], [ %return1845, %true1839 ], [ %return1854, %true1848 ], [ %return1863, %true1857 ], [ %return1872, %true1866 ], [ %return1881, %true1875 ], [ %return1890, %true1884 ], [ %return1899, %true1893 ], [ %return1908, %true1902 ], [ %return1916, %true1911 ], [ %return1925, %true1919 ], [ %return1934, %true1928 ], [ %return1943, %true1937 ], [ %return1952, %true1946 ], [ %return1961, %true1955 ], [ %return1970, %true1964 ], [ %return1979, %true1973 ], [ %return1988, %true1982 ], [ %return1997, %true1991 ], [ %return2005, %true2000 ]
  ret i64 %UnifiedRetVal
}

; Function Attrs: nounwind
declare double* @"slice@[F[FIIIIII"(double*, i64, i64, i64, i64, i64, i64) #2

; Function Attrs: alwaysinline
define private i64 @"sample_cdf@[FFI"(double* %rw01, double %rw12) #3 {
__llvm_entry:
  %rw24 = call { i64, double, double } @"sample_cdf@[FFIFF"(double* %rw01, double %rw12)
  %rw25 = extractvalue { i64, double, double } %rw24, 0
  ret i64 %rw25
}

; Function Attrs: nounwind readnone
declare { i64, double, double } @"sample_cdf@[FFIFF"(double*, double) #0

; Function Attrs: alwaysinline nounwind
define private <2 x double> @"FLAME@UIIIUUUUF"(i64* %idx, i64* %T, i64* %f3c, <2 x double>* %pos, <2 x double>* %x, <2 x double>* %y, <2 x double>* %o, double* %w) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca double
  %2 = alloca <2 x double>
  %3 = alloca double
  %4 = alloca <2 x double>
  %5 = alloca double
  %6 = alloca <2 x double>
  %7 = alloca double
  %8 = alloca <2 x double>
  %9 = alloca double
  %10 = alloca <2 x double>
  %11 = alloca double
  %12 = alloca <2 x double>
  %13 = alloca double
  %14 = alloca <2 x double>
  %15 = alloca double
  %16 = alloca <2 x double>
  %17 = alloca double
  %18 = alloca <2 x double>
  %19 = alloca double
  %20 = alloca <2 x double>
  %21 = alloca double
  %22 = alloca <2 x double>
  %23 = alloca double
  %24 = alloca <2 x double>
  %25 = alloca double
  %26 = alloca <2 x double>
  %27 = alloca double
  %28 = alloca <2 x double>
  %29 = alloca double
  %30 = alloca double
  %31 = alloca double
  %32 = alloca double
  %33 = alloca double
  %34 = alloca <2 x double>
  %35 = alloca double
  %36 = alloca <2 x double>
  %37 = alloca double
  %38 = alloca double
  %39 = alloca double
  %40 = alloca <2 x double>
  %41 = alloca double
  %42 = alloca <2 x double>
  %43 = alloca double
  %44 = alloca <2 x double>
  %45 = alloca double
  %46 = alloca <2 x double>
  %47 = alloca double
  %48 = alloca double
  %49 = alloca <2 x double>
  %50 = alloca double
  %51 = alloca double
  %52 = alloca double
  %53 = alloca <2 x double>
  %54 = alloca double
  %55 = alloca <2 x double>
  %56 = alloca double
  %57 = alloca <2 x double>
  %58 = alloca double
  %59 = alloca double
  %60 = alloca <2 x double>
  %61 = alloca double
  %62 = alloca double
  %63 = alloca double
  %64 = alloca <2 x double>
  %65 = alloca double
  %66 = alloca double
  %67 = alloca double
  %68 = alloca double
  %69 = alloca double
  %70 = alloca <2 x double>
  %71 = alloca double
  %72 = alloca <4 x double>
  %73 = alloca <2 x double>
  %74 = alloca double
  %75 = alloca double
  %76 = alloca double
  %77 = alloca double
  %78 = alloca <2 x double>
  %79 = alloca double
  %80 = alloca double
  %81 = alloca double
  %82 = alloca <2 x double>
  %83 = alloca double
  %84 = alloca double
  %85 = alloca double
  %86 = alloca double
  %87 = alloca <2 x double>
  %88 = alloca double
  %89 = alloca <2 x double>
  %90 = alloca <2 x double>
  %91 = alloca double
  %92 = alloca double
  %93 = alloca <2 x double>
  %94 = alloca double
  %95 = alloca <2 x double>
  %96 = alloca <2 x double>
  %97 = alloca double
  %98 = alloca double
  %99 = alloca double
  %100 = alloca double
  %101 = alloca double
  %102 = alloca double
  %103 = alloca <2 x double>
  %104 = alloca double
  %105 = alloca <2 x double>
  %106 = alloca double
  %107 = alloca <2 x double>
  %108 = alloca double
  %109 = alloca <2 x double>
  %110 = alloca double
  %111 = alloca <2 x double>
  %112 = alloca double
  %113 = alloca <2 x double>
  %114 = alloca double
  %115 = alloca <2 x double>
  %116 = alloca double
  %117 = alloca <2 x double>
  %118 = alloca double
  %119 = alloca <2 x double>
  %120 = alloca double
  %121 = alloca double
  %122 = alloca double
  %123 = alloca double
  %124 = alloca double
  %125 = alloca double
  %126 = alloca <2 x double>
  %127 = alloca double
  %128 = alloca double
  %129 = alloca double
  %130 = alloca double
  %131 = alloca <3 x double>
  %132 = alloca <2 x double>
  %133 = alloca double
  %134 = alloca double
  %135 = alloca double
  %136 = alloca <2 x double>
  %137 = alloca double
  %138 = alloca double
  %139 = alloca double
  %140 = alloca <2 x double>
  %141 = alloca double
  %142 = alloca double
  %143 = alloca double
  %144 = alloca <2 x double>
  %145 = alloca double
  %146 = alloca <2 x double>
  %147 = alloca double
  %148 = alloca <2 x double>
  %149 = alloca <2 x double>
  %150 = alloca double
  %151 = alloca double
  %152 = alloca <2 x double>
  %153 = alloca double
  %154 = alloca <2 x double>
  %155 = alloca double
  %156 = alloca <2 x double>
  %157 = alloca double
  %158 = alloca double
  %159 = alloca <2 x double>
  %160 = alloca double
  %161 = alloca double
  %162 = alloca double
  %163 = alloca double
  %164 = alloca <2 x double>
  %165 = alloca double
  %166 = alloca <2 x double>
  %167 = alloca double
  %168 = alloca <2 x double>
  %169 = alloca double
  %170 = alloca double
  %171 = alloca <2 x double>
  %172 = alloca double
  %173 = alloca <2 x double>
  %174 = alloca double
  %175 = alloca double
  %176 = alloca double
  %177 = alloca double
  %178 = alloca <2 x double>
  %179 = alloca <2 x double>
  %180 = alloca double
  %181 = alloca <2 x double>
  %182 = alloca double
  %183 = alloca <2 x double>
  %184 = alloca <2 x double>
  %185 = alloca double
  %186 = alloca double
  %187 = alloca double
  %188 = alloca double
  %189 = alloca double
  %190 = alloca <2 x double>
  %191 = alloca double
  %192 = alloca <2 x double>
  %193 = alloca double
  %194 = alloca double
  %195 = alloca <2 x double>
  %196 = alloca <2 x double>
  %197 = alloca double
  %198 = alloca <2 x double>
  %199 = alloca <2 x double>
  %200 = alloca double
  %201 = alloca <2 x double>
  %202 = alloca double
  %203 = alloca <2 x double>
  %204 = alloca <2 x double>
  %205 = alloca <2 x double>
  %206 = alloca double
  %207 = alloca <2 x double>
  %208 = alloca <2 x double>
  %209 = alloca double
  %210 = alloca double
  %211 = alloca double
  %212 = alloca <2 x double>
  %213 = alloca double
  %214 = alloca double
  %215 = alloca double
  %216 = alloca double
  %217 = alloca double
  %218 = alloca <2 x double>
  %219 = alloca double
  %220 = alloca double
  %221 = alloca double
  %222 = alloca double
  %223 = alloca double
  %224 = alloca <2 x double>
  %225 = alloca double
  %226 = alloca double
  %227 = alloca double
  %228 = alloca double
  %229 = alloca double
  %230 = alloca <2 x double>
  %231 = alloca double
  %232 = alloca double
  %233 = alloca double
  %234 = alloca <2 x double>
  %235 = alloca double
  %236 = alloca <2 x double>
  %237 = alloca <2 x double>
  %238 = alloca <2 x double>
  %239 = alloca double
  %240 = alloca <2 x double>
  %241 = alloca double
  %242 = alloca i64
  %243 = alloca <2 x double>
  %244 = alloca double
  %245 = alloca i64
  %246 = alloca <2 x double>
  %247 = alloca double
  %248 = alloca i64
  %249 = alloca <2 x double>
  %250 = alloca double
  %251 = alloca i64
  %252 = alloca <2 x double>
  %253 = alloca double
  %254 = alloca i64
  %255 = alloca <2 x double>
  %256 = alloca double
  %257 = alloca i64
  %258 = alloca <2 x double>
  %259 = alloca double
  %260 = alloca i64
  %261 = alloca <2 x double>
  %262 = alloca double
  %263 = alloca i64
  %264 = alloca <2 x double>
  %265 = alloca double
  %266 = alloca i64
  %267 = alloca <2 x double>
  %268 = alloca double
  %269 = alloca i64
  %270 = alloca <2 x double>
  %271 = alloca double
  %272 = alloca i64
  %273 = alloca <2 x double>
  %274 = alloca double
  %275 = alloca i64
  %276 = alloca <2 x double>
  %277 = alloca double
  %278 = alloca <2 x double>
  %279 = alloca double
  %280 = alloca double
  %281 = alloca double
  %282 = alloca double
  %283 = alloca double
  %284 = alloca <2 x double>
  %285 = alloca double
  %286 = alloca double
  %287 = alloca <2 x double>
  %288 = alloca double
  %289 = alloca <4 x double>
  %290 = alloca <4 x double>
  %291 = alloca <2 x double>
  %292 = alloca double
  %293 = alloca <2 x double>
  %294 = alloca <2 x double>
  %295 = alloca <2 x double>
  %296 = alloca double
  %297 = alloca double
  %298 = alloca double
  %299 = alloca <2 x double>
  %300 = alloca double
  %301 = alloca double
  %302 = alloca double
  %303 = alloca double
  %304 = alloca double
  %305 = alloca double
  %306 = alloca <2 x double>
  %307 = alloca double
  %308 = alloca <2 x double>
  %309 = alloca double
  %310 = alloca <2 x double>
  %311 = alloca <2 x double>
  %312 = alloca <2 x double>
  %313 = alloca <2 x double>
  %314 = alloca double
  %315 = alloca double
  %316 = alloca double
  %317 = alloca double
  %318 = alloca double
  %319 = alloca double
  %320 = alloca double
  %321 = alloca <2 x double>
  %322 = alloca double
  %323 = alloca <2 x double>
  %324 = alloca double
  %325 = alloca <2 x double>
  %326 = alloca double
  %327 = alloca double
  %328 = alloca double
  %329 = alloca double
  %p = alloca <2 x double>
  store <2 x double> zeroinitializer, <2 x double>* %p, !vex-initializer-store !3
  %pos1 = load <2 x double>, <2 x double>* %pos
  %T2 = load i64, i64* %T
  %return = call i64 @"not@II"(i64 %T2)
  %330 = icmp ne i64 %return, 0
  br i1 %330, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %w4 = load double, double* %w
  %cast = call <2 x double> @"set@UF"(double %w4)
  %output = call <2 x double> @"mul@UU"(<2 x double> %pos1, <2 x double> %cast)
  br label %UnifiedReturnBlock

false:                                            ; preds = %__llvm_entry
  %return6 = call i64 @"lt@III"(i64 %T2, i64 35)
  %331 = icmp ne i64 %return6, 0
  br i1 %331, label %true7, label %false8

true7:                                            ; preds = %false
  %return11 = call i64 @"lt@III"(i64 %T2, i64 18)
  %332 = icmp ne i64 %return11, 0
  br i1 %332, label %true12, label %false13

false8:                                           ; preds = %false
  %return358 = call i64 @"lt@III"(i64 %T2, i64 70)
  %333 = icmp ne i64 %return358, 0
  br i1 %333, label %true359, label %false360

end9:                                             ; preds = %false1255, %end1007, %false763, %false550, %false341, %false146
  br label %UnifiedReturnBlock

true12:                                           ; preds = %true7
  %return16 = call i64 @"eq@III"(i64 %T2, i64 1)
  %334 = icmp ne i64 %return16, 0
  br i1 %334, label %true17, label %false18

false13:                                          ; preds = %true7
  %return163 = call i64 @"eq@III"(i64 %T2, i64 18)
  %335 = icmp ne i64 %return163, 0
  br i1 %335, label %true164, label %false165

true17:                                           ; preds = %true12
  store <2 x double> %pos1, <2 x double>* %0
  %w21 = load double, double* %w
  store double %w21, double* %1
  call void @"V_SINUSOIDAL@UUF"(<2 x double>* %p, <2 x double>* %0, double* %1)
  %p22 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false18:                                          ; preds = %true12
  %return24 = call i64 @"eq@III"(i64 %T2, i64 2)
  %336 = icmp ne i64 %return24, 0
  br i1 %336, label %true25, label %false26

true25:                                           ; preds = %false18
  store <2 x double> %pos1, <2 x double>* %2
  %w29 = load double, double* %w
  store double %w29, double* %3
  call void @"V_SPHERICAL@UUF"(<2 x double>* %p, <2 x double>* %2, double* %3)
  %p30 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false26:                                          ; preds = %false18
  %return32 = call i64 @"eq@III"(i64 %T2, i64 3)
  %337 = icmp ne i64 %return32, 0
  br i1 %337, label %true33, label %false34

true33:                                           ; preds = %false26
  store <2 x double> %pos1, <2 x double>* %4
  %w37 = load double, double* %w
  store double %w37, double* %5
  call void @"V_SWIRL@UUF"(<2 x double>* %p, <2 x double>* %4, double* %5)
  %p38 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false34:                                          ; preds = %false26
  %return40 = call i64 @"eq@III"(i64 %T2, i64 4)
  %338 = icmp ne i64 %return40, 0
  br i1 %338, label %true41, label %false42

true41:                                           ; preds = %false34
  store <2 x double> %pos1, <2 x double>* %6
  %w45 = load double, double* %w
  store double %w45, double* %7
  call void @"V_HORSESHOE@UUF"(<2 x double>* %p, <2 x double>* %6, double* %7)
  %p46 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false42:                                          ; preds = %false34
  %return48 = call i64 @"eq@III"(i64 %T2, i64 5)
  %339 = icmp ne i64 %return48, 0
  br i1 %339, label %true49, label %false50

true49:                                           ; preds = %false42
  store <2 x double> %pos1, <2 x double>* %8
  %w53 = load double, double* %w
  store double %w53, double* %9
  call void @"V_POLAR@UUF"(<2 x double>* %p, <2 x double>* %8, double* %9)
  %p54 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false50:                                          ; preds = %false42
  %return56 = call i64 @"eq@III"(i64 %T2, i64 6)
  %340 = icmp ne i64 %return56, 0
  br i1 %340, label %true57, label %false58

true57:                                           ; preds = %false50
  store <2 x double> %pos1, <2 x double>* %10
  %w61 = load double, double* %w
  store double %w61, double* %11
  call void @"V_HANDKERCHIEF@UUF"(<2 x double>* %p, <2 x double>* %10, double* %11)
  %p62 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false58:                                          ; preds = %false50
  %return64 = call i64 @"eq@III"(i64 %T2, i64 7)
  %341 = icmp ne i64 %return64, 0
  br i1 %341, label %true65, label %false66

true65:                                           ; preds = %false58
  store <2 x double> %pos1, <2 x double>* %12
  %w69 = load double, double* %w
  store double %w69, double* %13
  call void @"V_HEART@UUF"(<2 x double>* %p, <2 x double>* %12, double* %13)
  %p70 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false66:                                          ; preds = %false58
  %return72 = call i64 @"eq@III"(i64 %T2, i64 8)
  %342 = icmp ne i64 %return72, 0
  br i1 %342, label %true73, label %false74

true73:                                           ; preds = %false66
  store <2 x double> %pos1, <2 x double>* %14
  %w77 = load double, double* %w
  store double %w77, double* %15
  call void @"V_DISC@UUF"(<2 x double>* %p, <2 x double>* %14, double* %15)
  %p78 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false74:                                          ; preds = %false66
  %return80 = call i64 @"eq@III"(i64 %T2, i64 9)
  %343 = icmp ne i64 %return80, 0
  br i1 %343, label %true81, label %false82

true81:                                           ; preds = %false74
  store <2 x double> %pos1, <2 x double>* %16
  %w85 = load double, double* %w
  store double %w85, double* %17
  call void @"V_SPIRAL@UUF"(<2 x double>* %p, <2 x double>* %16, double* %17)
  %p86 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false82:                                          ; preds = %false74
  %return88 = call i64 @"eq@III"(i64 %T2, i64 10)
  %344 = icmp ne i64 %return88, 0
  br i1 %344, label %true89, label %false90

true89:                                           ; preds = %false82
  store <2 x double> %pos1, <2 x double>* %18
  %w93 = load double, double* %w
  store double %w93, double* %19
  call void @"V_HIPERBOLIC@UUF"(<2 x double>* %p, <2 x double>* %18, double* %19)
  %p94 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false90:                                          ; preds = %false82
  %return96 = call i64 @"eq@III"(i64 %T2, i64 11)
  %345 = icmp ne i64 %return96, 0
  br i1 %345, label %true97, label %false98

true97:                                           ; preds = %false90
  store <2 x double> %pos1, <2 x double>* %20
  %w101 = load double, double* %w
  store double %w101, double* %21
  call void @"V_DIAMOND@UUF"(<2 x double>* %p, <2 x double>* %20, double* %21)
  %p102 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false98:                                          ; preds = %false90
  %return104 = call i64 @"eq@III"(i64 %T2, i64 12)
  %346 = icmp ne i64 %return104, 0
  br i1 %346, label %true105, label %false106

true105:                                          ; preds = %false98
  store <2 x double> %pos1, <2 x double>* %22
  %w109 = load double, double* %w
  store double %w109, double* %23
  call void @"V_EX@UUF"(<2 x double>* %p, <2 x double>* %22, double* %23)
  %p110 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false106:                                         ; preds = %false98
  %return112 = call i64 @"eq@III"(i64 %T2, i64 13)
  %347 = icmp ne i64 %return112, 0
  br i1 %347, label %true113, label %false114

true113:                                          ; preds = %false106
  store <2 x double> %pos1, <2 x double>* %24
  %w117 = load double, double* %w
  store double %w117, double* %25
  call void @"V_JULIA@UUF"(<2 x double>* %p, <2 x double>* %24, double* %25)
  %p118 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false114:                                         ; preds = %false106
  %return120 = call i64 @"eq@III"(i64 %T2, i64 14)
  %348 = icmp ne i64 %return120, 0
  br i1 %348, label %true121, label %false122

true121:                                          ; preds = %false114
  store <2 x double> %pos1, <2 x double>* %26
  %w125 = load double, double* %w
  store double %w125, double* %27
  call void @"V_BENT@UUF"(<2 x double>* %p, <2 x double>* %26, double* %27)
  %p126 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false122:                                         ; preds = %false114
  %return128 = call i64 @"eq@III"(i64 %T2, i64 15)
  %349 = icmp ne i64 %return128, 0
  br i1 %349, label %true129, label %false130

true129:                                          ; preds = %false122
  store <2 x double> %pos1, <2 x double>* %28
  %w133 = load double, double* %w
  store double %w133, double* %29
  %y134 = load <2 x double>, <2 x double>* %y
  %return135 = call double @"getcomp@FUI"(<2 x double> %y134, i64 0)
  store double %return135, double* %30
  %o136 = load <2 x double>, <2 x double>* %o
  %return137 = call double @"getcomp@FUI"(<2 x double> %o136, i64 0)
  store double %return137, double* %31
  %y138 = load <2 x double>, <2 x double>* %y
  %return139 = call double @"getcomp@FUI"(<2 x double> %y138, i64 1)
  store double %return139, double* %32
  %o140 = load <2 x double>, <2 x double>* %o
  %return141 = call double @"getcomp@FUI"(<2 x double> %o140, i64 1)
  store double %return141, double* %33
  call void @"V_WAVES@UUFFFFF"(<2 x double>* %p, <2 x double>* %28, double* %29, double* %30, double* %31, double* %32, double* %33)
  %p142 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false130:                                         ; preds = %false122
  %return144 = call i64 @"eq@III"(i64 %T2, i64 16)
  %350 = icmp ne i64 %return144, 0
  br i1 %350, label %true145, label %false146

true145:                                          ; preds = %false130
  store <2 x double> %pos1, <2 x double>* %34
  %w149 = load double, double* %w
  store double %w149, double* %35
  call void @"V_FISHEYE@UUF"(<2 x double>* %p, <2 x double>* %34, double* %35)
  %p150 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false146:                                         ; preds = %false130
  %return152 = call i64 @"eq@III"(i64 %T2, i64 17)
  %351 = icmp ne i64 %return152, 0
  br i1 %351, label %true153, label %end9

true153:                                          ; preds = %false146
  store <2 x double> %pos1, <2 x double>* %36
  %w156 = load double, double* %w
  store double %w156, double* %37
  %o157 = load <2 x double>, <2 x double>* %o
  %return158 = call double @"getcomp@FUI"(<2 x double> %o157, i64 0)
  store double %return158, double* %38
  %o159 = load <2 x double>, <2 x double>* %o
  %return160 = call double @"getcomp@FUI"(<2 x double> %o159, i64 1)
  store double %return160, double* %39
  call void @"V_POPCORN@UUFFF"(<2 x double>* %p, <2 x double>* %36, double* %37, double* %38, double* %39)
  %p161 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true164:                                          ; preds = %false13
  store <2 x double> %pos1, <2 x double>* %40
  %w168 = load double, double* %w
  store double %w168, double* %41
  call void @"V_EXPONENTIAL@UUF"(<2 x double>* %p, <2 x double>* %40, double* %41)
  %p169 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false165:                                         ; preds = %false13
  %return171 = call i64 @"eq@III"(i64 %T2, i64 19)
  %352 = icmp ne i64 %return171, 0
  br i1 %352, label %true172, label %false173

true172:                                          ; preds = %false165
  store <2 x double> %pos1, <2 x double>* %42
  %w176 = load double, double* %w
  store double %w176, double* %43
  call void @"V_POWER@UUF"(<2 x double>* %p, <2 x double>* %42, double* %43)
  %p177 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false173:                                         ; preds = %false165
  %return179 = call i64 @"eq@III"(i64 %T2, i64 20)
  %353 = icmp ne i64 %return179, 0
  br i1 %353, label %true180, label %false181

true180:                                          ; preds = %false173
  store <2 x double> %pos1, <2 x double>* %44
  %w184 = load double, double* %w
  store double %w184, double* %45
  call void @"V_COSINE@UUF"(<2 x double>* %p, <2 x double>* %44, double* %45)
  %p185 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false181:                                         ; preds = %false173
  %return187 = call i64 @"eq@III"(i64 %T2, i64 21)
  %354 = icmp ne i64 %return187, 0
  br i1 %354, label %true188, label %false189

true188:                                          ; preds = %false181
  store <2 x double> %pos1, <2 x double>* %46
  %w192 = load double, double* %w
  store double %w192, double* %47
  %o193 = load <2 x double>, <2 x double>* %o
  %return194 = call double @"getcomp@FUI"(<2 x double> %o193, i64 0)
  store double %return194, double* %48
  call void @"V_RINGS@UUFF"(<2 x double>* %p, <2 x double>* %46, double* %47, double* %48)
  %p195 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false189:                                         ; preds = %false181
  %return197 = call i64 @"eq@III"(i64 %T2, i64 22)
  %355 = icmp ne i64 %return197, 0
  br i1 %355, label %true198, label %false199

true198:                                          ; preds = %false189
  store <2 x double> %pos1, <2 x double>* %49
  %w202 = load double, double* %w
  store double %w202, double* %50
  %o203 = load <2 x double>, <2 x double>* %o
  %return204 = call double @"getcomp@FUI"(<2 x double> %o203, i64 0)
  store double %return204, double* %51
  %o205 = load <2 x double>, <2 x double>* %o
  %return206 = call double @"getcomp@FUI"(<2 x double> %o205, i64 1)
  store double %return206, double* %52
  call void @"V_FAN@UUFFF"(<2 x double>* %p, <2 x double>* %49, double* %50, double* %51, double* %52)
  %p207 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false199:                                         ; preds = %false189
  %return209 = call i64 @"eq@III"(i64 %T2, i64 23)
  %356 = icmp ne i64 %return209, 0
  br i1 %356, label %true210, label %false211

true210:                                          ; preds = %false199
  store <2 x double> %pos1, <2 x double>* %53
  %w214 = load double, double* %w
  store double %w214, double* %54
  call void @"V_BUBBLE@UUF"(<2 x double>* %p, <2 x double>* %53, double* %54)
  %p215 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false211:                                         ; preds = %false199
  %return217 = call i64 @"eq@III"(i64 %T2, i64 24)
  %357 = icmp ne i64 %return217, 0
  br i1 %357, label %true218, label %false219

true218:                                          ; preds = %false211
  store <2 x double> %pos1, <2 x double>* %55
  %w222 = load double, double* %w
  store double %w222, double* %56
  call void @"V_CYLINDER@UUF"(<2 x double>* %p, <2 x double>* %55, double* %56)
  %p223 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false219:                                         ; preds = %false211
  %return225 = call i64 @"eq@III"(i64 %T2, i64 25)
  %358 = icmp ne i64 %return225, 0
  br i1 %358, label %true226, label %false227

true226:                                          ; preds = %false219
  store <2 x double> %pos1, <2 x double>* %57
  %w230 = load double, double* %w
  store double %w230, double* %58
  call void @"V_EYEFISH@UUF"(<2 x double>* %p, <2 x double>* %57, double* %58)
  %p231 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false227:                                         ; preds = %false219
  %return233 = call i64 @"eq@III"(i64 %T2, i64 26)
  %359 = icmp ne i64 %return233, 0
  br i1 %359, label %true234, label %false235

true234:                                          ; preds = %false227
  %w237 = load double, double* %w
  store double %w237, double* %59
  call void @"V_BLUR@UF"(<2 x double>* %p, double* %59)
  %p238 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false235:                                         ; preds = %false227
  %return240 = call i64 @"eq@III"(i64 %T2, i64 27)
  %360 = icmp ne i64 %return240, 0
  br i1 %360, label %true241, label %false242

true241:                                          ; preds = %false235
  %return244 = call i64 @"neg@II"(i64 16)
  %return245 = call <2 x double>* @"detail@[UIS"(i64 %return244, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @55, i64 0, i64 0))
  %idx246 = load i64, i64* %idx
  %return247 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return245, i64 %idx246)
  store <2 x double> %pos1, <2 x double>* %60
  %w249 = load double, double* %w
  store double %w249, double* %61
  %return251 = call double @"getcomp@FUI"(<2 x double> %return247, i64 0)
  store double %return251, double* %62
  %return253 = call double @"getcomp@FUI"(<2 x double> %return247, i64 1)
  store double %return253, double* %63
  call void @"V_CURL@UUFFF"(<2 x double>* %p, <2 x double>* %60, double* %61, double* %62, double* %63)
  %p254 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false242:                                         ; preds = %false235
  %return256 = call i64 @"eq@III"(i64 %T2, i64 28)
  %361 = icmp ne i64 %return256, 0
  br i1 %361, label %true257, label %false258

true257:                                          ; preds = %false242
  %return260 = call i64 @"neg@II"(i64 17)
  %return261 = call <4 x double>* @"detail@[PIS"(i64 %return260, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @56, i64 0, i64 0))
  %idx262 = load i64, i64* %idx
  %return263 = call <4 x double> @"getcomp@P[PI"(<4 x double>* %return261, i64 %idx262)
  store <2 x double> %pos1, <2 x double>* %64
  %w265 = load double, double* %w
  store double %w265, double* %65
  %return267 = call double @"getcomp@FPI"(<4 x double> %return263, i64 0)
  store double %return267, double* %66
  %return269 = call double @"getcomp@FPI"(<4 x double> %return263, i64 1)
  store double %return269, double* %67
  %return271 = call double @"getcomp@FPI"(<4 x double> %return263, i64 2)
  store double %return271, double* %68
  %return273 = call double @"getcomp@FPI"(<4 x double> %return263, i64 3)
  store double %return273, double* %69
  call void @"V_NGON@UUFFFFF"(<2 x double>* %p, <2 x double>* %64, double* %65, double* %66, double* %67, double* %68, double* %69)
  %p274 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false258:                                         ; preds = %false242
  %return276 = call i64 @"eq@III"(i64 %T2, i64 29)
  %362 = icmp ne i64 %return276, 0
  br i1 %362, label %true277, label %false278

true277:                                          ; preds = %false258
  %return280 = call i64 @"neg@II"(i64 18)
  %return281 = call <4 x double>* @"detail@[PIS"(i64 %return280, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @57, i64 0, i64 0))
  %idx282 = load i64, i64* %idx
  %return283 = call <4 x double> @"getcomp@P[PI"(<4 x double>* %return281, i64 %idx282)
  store <2 x double> %pos1, <2 x double>* %70
  %w285 = load double, double* %w
  store double %w285, double* %71
  store <4 x double> %return283, <4 x double>* %72
  call void @"V_PDJ@UUFP"(<2 x double>* %p, <2 x double>* %70, double* %71, <4 x double>* %72)
  %p287 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false278:                                         ; preds = %false258
  %return289 = call i64 @"eq@III"(i64 %T2, i64 30)
  %363 = icmp ne i64 %return289, 0
  br i1 %363, label %true290, label %false291

true290:                                          ; preds = %false278
  %return293 = call i64 @"neg@II"(i64 19)
  %return294 = call <3 x double>* @"detail@[VIS"(i64 %return293, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @58, i64 0, i64 0))
  %idx295 = load i64, i64* %idx
  %return296 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %return294, i64 %idx295)
  store <2 x double> %pos1, <2 x double>* %73
  %w298 = load double, double* %w
  store double %w298, double* %74
  %return300 = call double @"getcomp@FVI"(<3 x double> %return296, i64 0)
  store double %return300, double* %75
  %return302 = call double @"getcomp@FVI"(<3 x double> %return296, i64 1)
  store double %return302, double* %76
  %return304 = call double @"getcomp@FVI"(<3 x double> %return296, i64 2)
  store double %return304, double* %77
  call void @"V_BLOB@UUFFFF"(<2 x double>* %p, <2 x double>* %73, double* %74, double* %75, double* %76, double* %77)
  %p305 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false291:                                         ; preds = %false278
  %return307 = call i64 @"eq@III"(i64 %T2, i64 31)
  %364 = icmp ne i64 %return307, 0
  br i1 %364, label %true308, label %false309

true308:                                          ; preds = %false291
  %return311 = call i64 @"neg@II"(i64 20)
  %return312 = call <2 x double>* @"detail@[UIS"(i64 %return311, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @59, i64 0, i64 0))
  %idx313 = load i64, i64* %idx
  %return314 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return312, i64 %idx313)
  store <2 x double> %pos1, <2 x double>* %78
  %w316 = load double, double* %w
  store double %w316, double* %79
  %return318 = call double @"getcomp@FUI"(<2 x double> %return314, i64 0)
  store double %return318, double* %80
  %return320 = call double @"getcomp@FUI"(<2 x double> %return314, i64 1)
  store double %return320, double* %81
  call void @"V_JULIAN@UUFFF"(<2 x double>* %p, <2 x double>* %78, double* %79, double* %80, double* %81)
  %p321 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false309:                                         ; preds = %false291
  %return323 = call i64 @"eq@III"(i64 %T2, i64 32)
  %365 = icmp ne i64 %return323, 0
  br i1 %365, label %true324, label %false325

true324:                                          ; preds = %false309
  %return327 = call i64 @"neg@II"(i64 21)
  %return328 = call <2 x double>* @"detail@[UIS"(i64 %return327, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @60, i64 0, i64 0))
  %idx329 = load i64, i64* %idx
  %return330 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return328, i64 %idx329)
  store <2 x double> %pos1, <2 x double>* %82
  %w332 = load double, double* %w
  store double %w332, double* %83
  %return334 = call double @"getcomp@FUI"(<2 x double> %return330, i64 0)
  store double %return334, double* %84
  %return336 = call double @"getcomp@FUI"(<2 x double> %return330, i64 1)
  store double %return336, double* %85
  call void @"V_JULIASCOPE@UUFFF"(<2 x double>* %p, <2 x double>* %82, double* %83, double* %84, double* %85)
  %p337 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false325:                                         ; preds = %false309
  %return339 = call i64 @"eq@III"(i64 %T2, i64 33)
  %366 = icmp ne i64 %return339, 0
  br i1 %366, label %true340, label %false341

true340:                                          ; preds = %false325
  %w343 = load double, double* %w
  store double %w343, double* %86
  call void @"V_GAUSSIAN_BLUR@UF"(<2 x double>* %p, double* %86)
  %p344 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false341:                                         ; preds = %false325
  %return346 = call i64 @"eq@III"(i64 %T2, i64 34)
  %367 = icmp ne i64 %return346, 0
  br i1 %367, label %true347, label %end9

true347:                                          ; preds = %false341
  %return349 = call i64 @"neg@II"(i64 22)
  %return350 = call <2 x double>* @"detail@[UIS"(i64 %return349, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @61, i64 0, i64 0))
  %idx351 = load i64, i64* %idx
  %return352 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return350, i64 %idx351)
  store <2 x double> %pos1, <2 x double>* %87
  %w354 = load double, double* %w
  store double %w354, double* %88
  store <2 x double> %return352, <2 x double>* %89
  call void @"V_FAN2@UUFU"(<2 x double>* %p, <2 x double>* %87, double* %88, <2 x double>* %89)
  %p356 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true359:                                          ; preds = %false8
  %return363 = call i64 @"lt@III"(i64 %T2, i64 52)
  %368 = icmp ne i64 %return363, 0
  br i1 %368, label %true364, label %false365

false360:                                         ; preds = %false8
  %return786 = call i64 @"lt@III"(i64 %T2, i64 88)
  %369 = icmp ne i64 %return786, 0
  br i1 %369, label %true787, label %false788

true364:                                          ; preds = %true359
  %return368 = call i64 @"eq@III"(i64 %T2, i64 35)
  %370 = icmp ne i64 %return368, 0
  br i1 %370, label %true369, label %false370

false365:                                         ; preds = %true359
  %return579 = call i64 @"eq@III"(i64 %T2, i64 59)
  %371 = icmp ne i64 %return579, 0
  br i1 %371, label %true580, label %false581

true369:                                          ; preds = %true364
  %return372 = call i64 @"neg@II"(i64 23)
  %return373 = call double* @"detail@[FIS"(i64 %return372, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @62, i64 0, i64 0))
  store <2 x double> %pos1, <2 x double>* %90
  %w375 = load double, double* %w
  store double %w375, double* %91
  %idx377 = load i64, i64* %idx
  %return378 = call double @"getcomp@F[FI"(double* %return373, i64 %idx377)
  store double %return378, double* %92
  call void @"V_RINGS2@UUFF"(<2 x double>* %p, <2 x double>* %90, double* %91, double* %92)
  %p379 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false370:                                         ; preds = %true364
  %return381 = call i64 @"eq@III"(i64 %T2, i64 36)
  %372 = icmp ne i64 %return381, 0
  br i1 %372, label %true382, label %false383

true382:                                          ; preds = %false370
  %return385 = call i64 @"neg@II"(i64 24)
  %return386 = call <2 x double>* @"detail@[UIS"(i64 %return385, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @63, i64 0, i64 0))
  %idx387 = load i64, i64* %idx
  %return388 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return386, i64 %idx387)
  store <2 x double> %pos1, <2 x double>* %93
  %w390 = load double, double* %w
  store double %w390, double* %94
  store <2 x double> %return388, <2 x double>* %95
  call void @"V_RECTANGLES@UUFU"(<2 x double>* %p, <2 x double>* %93, double* %94, <2 x double>* %95)
  %p392 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false383:                                         ; preds = %false370
  %return394 = call i64 @"eq@III"(i64 %T2, i64 37)
  %373 = icmp ne i64 %return394, 0
  br i1 %373, label %true395, label %false396

true395:                                          ; preds = %false383
  %return398 = call i64 @"neg@II"(i64 25)
  %return399 = call double* @"detail@[FIS"(i64 %return398, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @64, i64 0, i64 0))
  store <2 x double> %pos1, <2 x double>* %96
  %w401 = load double, double* %w
  store double %w401, double* %97
  %idx403 = load i64, i64* %idx
  %return404 = call double @"getcomp@F[FI"(double* %return399, i64 %idx403)
  store double %return404, double* %98
  call void @"V_RADIALBLUR@UUFF"(<2 x double>* %p, <2 x double>* %96, double* %97, double* %98)
  %p405 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false396:                                         ; preds = %false383
  %return407 = call i64 @"eq@III"(i64 %T2, i64 38)
  %374 = icmp ne i64 %return407, 0
  br i1 %374, label %true408, label %false409

true408:                                          ; preds = %false396
  %return411 = call i64 @"neg@II"(i64 26)
  %return412 = call <3 x double>* @"detail@[VIS"(i64 %return411, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @65, i64 0, i64 0))
  %idx413 = load i64, i64* %idx
  %return414 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %return412, i64 %idx413)
  %w415 = load double, double* %w
  store double %w415, double* %99
  %return417 = call double @"getcomp@FVI"(<3 x double> %return414, i64 0)
  store double %return417, double* %100
  %return419 = call double @"getcomp@FVI"(<3 x double> %return414, i64 1)
  store double %return419, double* %101
  %return421 = call double @"getcomp@FVI"(<3 x double> %return414, i64 2)
  store double %return421, double* %102
  call void @"V_PIE@UFFFF"(<2 x double>* %p, double* %99, double* %100, double* %101, double* %102)
  %p422 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false409:                                         ; preds = %false396
  %return424 = call i64 @"eq@III"(i64 %T2, i64 39)
  %375 = icmp ne i64 %return424, 0
  br i1 %375, label %true425, label %false426

true425:                                          ; preds = %false409
  %w428 = load double, double* %w
  store double %w428, double* %104
  call void @"V_ARCH@UUF"(<2 x double>* %p, <2 x double>* %103, double* %104)
  %p429 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false426:                                         ; preds = %false409
  %return431 = call i64 @"eq@III"(i64 %T2, i64 40)
  %376 = icmp ne i64 %return431, 0
  br i1 %376, label %true432, label %false433

true432:                                          ; preds = %false426
  store <2 x double> %pos1, <2 x double>* %105
  %w436 = load double, double* %w
  store double %w436, double* %106
  call void @"V_TANGENT@UUF"(<2 x double>* %p, <2 x double>* %105, double* %106)
  %p437 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false433:                                         ; preds = %false426
  %return439 = call i64 @"eq@III"(i64 %T2, i64 41)
  %377 = icmp ne i64 %return439, 0
  br i1 %377, label %true440, label %false441

true440:                                          ; preds = %false433
  %w443 = load double, double* %w
  store double %w443, double* %108
  call void @"V_SQUARE@UUF"(<2 x double>* %p, <2 x double>* %107, double* %108)
  %p444 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false441:                                         ; preds = %false433
  %return446 = call i64 @"eq@III"(i64 %T2, i64 42)
  %378 = icmp ne i64 %return446, 0
  br i1 %378, label %true447, label %false448

true447:                                          ; preds = %false441
  store <2 x double> %pos1, <2 x double>* %109
  %w451 = load double, double* %w
  store double %w451, double* %110
  call void @"V_RAYS@UUF"(<2 x double>* %p, <2 x double>* %109, double* %110)
  %p452 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false448:                                         ; preds = %false441
  %return454 = call i64 @"eq@III"(i64 %T2, i64 43)
  %379 = icmp ne i64 %return454, 0
  br i1 %379, label %true455, label %false456

true455:                                          ; preds = %false448
  store <2 x double> %pos1, <2 x double>* %111
  %w459 = load double, double* %w
  store double %w459, double* %112
  call void @"V_BLADE@UUF"(<2 x double>* %p, <2 x double>* %111, double* %112)
  %p460 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false456:                                         ; preds = %false448
  %return462 = call i64 @"eq@III"(i64 %T2, i64 44)
  %380 = icmp ne i64 %return462, 0
  br i1 %380, label %true463, label %false464

true463:                                          ; preds = %false456
  store <2 x double> %pos1, <2 x double>* %113
  %w467 = load double, double* %w
  store double %w467, double* %114
  call void @"V_SECANT2@UUF"(<2 x double>* %p, <2 x double>* %113, double* %114)
  %p468 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false464:                                         ; preds = %false456
  %return470 = call i64 @"eq@III"(i64 %T2, i64 45)
  %381 = icmp ne i64 %return470, 0
  br i1 %381, label %true471, label %false472

true471:                                          ; preds = %false464
  store <2 x double> %pos1, <2 x double>* %115
  %w475 = load double, double* %w
  store double %w475, double* %116
  call void @"V_TWINTRIAN@UUF"(<2 x double>* %p, <2 x double>* %115, double* %116)
  %p476 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false472:                                         ; preds = %false464
  %return478 = call i64 @"eq@III"(i64 %T2, i64 46)
  %382 = icmp ne i64 %return478, 0
  br i1 %382, label %true479, label %false480

true479:                                          ; preds = %false472
  store <2 x double> %pos1, <2 x double>* %117
  %w483 = load double, double* %w
  store double %w483, double* %118
  call void @"V_CROSS@UUF"(<2 x double>* %p, <2 x double>* %117, double* %118)
  %p484 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false480:                                         ; preds = %false472
  %return486 = call i64 @"eq@III"(i64 %T2, i64 47)
  %383 = icmp ne i64 %return486, 0
  br i1 %383, label %true487, label %false488

true487:                                          ; preds = %false480
  %return490 = call i64 @"neg@II"(i64 27)
  %return491 = call <2 x double>* @"detail@[UIS"(i64 %return490, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @66, i64 0, i64 0))
  %return495 = call <3 x double>* @"detail@[VIS"(i64 %return490, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @67, i64 0, i64 0))
  %idx496 = load i64, i64* %idx
  %return497 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %return495, i64 %idx496)
  %output498 = call { double, double, double } @"assign@FFFV"(<3 x double> %return497)
  %output499 = extractvalue { double, double, double } %output498, 0
  %output500 = extractvalue { double, double, double } %output498, 1
  %output501 = extractvalue { double, double, double } %output498, 2
  store <2 x double> %pos1, <2 x double>* %119
  %w503 = load double, double* %w
  store double %w503, double* %120
  store double %output499, double* %123
  store double %output500, double* %124
  store double %output501, double* %125
  call void @"V_DISC2@UUFFFFFF"(<2 x double>* %p, <2 x double>* %119, double* %120, double* %121, double* %122, double* %123, double* %124, double* %125)
  %p507 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false488:                                         ; preds = %false480
  %return509 = call i64 @"eq@III"(i64 %T2, i64 48)
  %384 = icmp ne i64 %return509, 0
  br i1 %384, label %true510, label %false511

true510:                                          ; preds = %false488
  %return513 = call i64 @"neg@II"(i64 28)
  %return514 = call <3 x double>* @"detail@[VIS"(i64 %return513, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @68, i64 0, i64 0))
  %idx515 = load i64, i64* %idx
  %return516 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %return514, i64 %idx515)
  %return518 = call <3 x double>* @"detail@[VIS"(i64 %return513, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @69, i64 0, i64 0))
  %idx519 = load i64, i64* %idx
  %return520 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %return518, i64 %idx519)
  store <2 x double> %pos1, <2 x double>* %126
  %w522 = load double, double* %w
  store double %w522, double* %127
  %return524 = call double @"getcomp@FVI"(<3 x double> %return516, i64 0)
  store double %return524, double* %128
  %return526 = call double @"getcomp@FVI"(<3 x double> %return516, i64 1)
  store double %return526, double* %129
  %return528 = call double @"getcomp@FVI"(<3 x double> %return516, i64 2)
  store double %return528, double* %130
  store <3 x double> %return520, <3 x double>* %131
  call void @"V_SUPERSHAPE@UUFFFFV"(<2 x double>* %p, <2 x double>* %126, double* %127, double* %128, double* %129, double* %130, <3 x double>* %131)
  %p530 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false511:                                         ; preds = %false488
  %return532 = call i64 @"eq@III"(i64 %T2, i64 49)
  %385 = icmp ne i64 %return532, 0
  br i1 %385, label %true533, label %false534

true533:                                          ; preds = %false511
  %return536 = call i64 @"neg@II"(i64 29)
  %return537 = call <2 x double>* @"detail@[UIS"(i64 %return536, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @70, i64 0, i64 0))
  %idx538 = load i64, i64* %idx
  %return539 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return537, i64 %idx538)
  store <2 x double> %pos1, <2 x double>* %132
  %w541 = load double, double* %w
  store double %w541, double* %133
  %return543 = call double @"getcomp@FUI"(<2 x double> %return539, i64 0)
  store double %return543, double* %134
  %return545 = call double @"getcomp@FUI"(<2 x double> %return539, i64 1)
  store double %return545, double* %135
  call void @"V_FLOWER@UUFFF"(<2 x double>* %p, <2 x double>* %132, double* %133, double* %134, double* %135)
  %p546 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false534:                                         ; preds = %false511
  %return548 = call i64 @"eq@III"(i64 %T2, i64 50)
  %386 = icmp ne i64 %return548, 0
  br i1 %386, label %true549, label %false550

true549:                                          ; preds = %false534
  %return552 = call i64 @"neg@II"(i64 30)
  %return553 = call <2 x double>* @"detail@[UIS"(i64 %return552, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @71, i64 0, i64 0))
  %idx554 = load i64, i64* %idx
  %return555 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return553, i64 %idx554)
  store <2 x double> %pos1, <2 x double>* %136
  %w557 = load double, double* %w
  store double %w557, double* %137
  %return559 = call double @"getcomp@FUI"(<2 x double> %return555, i64 0)
  store double %return559, double* %138
  %return561 = call double @"getcomp@FUI"(<2 x double> %return555, i64 1)
  store double %return561, double* %139
  call void @"V_CONIC@UUFFF"(<2 x double>* %p, <2 x double>* %136, double* %137, double* %138, double* %139)
  %p562 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false550:                                         ; preds = %false534
  %return564 = call i64 @"eq@III"(i64 %T2, i64 51)
  %387 = icmp ne i64 %return564, 0
  br i1 %387, label %true565, label %end9

true565:                                          ; preds = %false550
  %return567 = call i64 @"neg@II"(i64 31)
  %return568 = call <2 x double>* @"detail@[UIS"(i64 %return567, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @72, i64 0, i64 0))
  %idx569 = load i64, i64* %idx
  %return570 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return568, i64 %idx569)
  store <2 x double> %pos1, <2 x double>* %140
  %w572 = load double, double* %w
  store double %w572, double* %141
  %return574 = call double @"getcomp@FUI"(<2 x double> %return570, i64 0)
  store double %return574, double* %142
  %return576 = call double @"getcomp@FUI"(<2 x double> %return570, i64 1)
  store double %return576, double* %143
  call void @"V_PARABOLA@UUFFF"(<2 x double>* %p, <2 x double>* %140, double* %141, double* %142, double* %143)
  %p577 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true580:                                          ; preds = %false365
  store <2 x double> %pos1, <2 x double>* %144
  %w584 = load double, double* %w
  store double %w584, double* %145
  call void @"V_ELLIPTIC@UUF"(<2 x double>* %p, <2 x double>* %144, double* %145)
  %p585 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false581:                                         ; preds = %false365
  %return587 = call i64 @"eq@III"(i64 %T2, i64 52)
  %388 = icmp ne i64 %return587, 0
  br i1 %388, label %true588, label %false589

true588:                                          ; preds = %false581
  %return591 = call i64 @"neg@II"(i64 32)
  %return592 = call <2 x double>* @"detail@[UIS"(i64 %return591, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @73, i64 0, i64 0))
  %idx593 = load i64, i64* %idx
  %return594 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return592, i64 %idx593)
  store <2 x double> %pos1, <2 x double>* %146
  %w596 = load double, double* %w
  store double %w596, double* %147
  store <2 x double> %return594, <2 x double>* %148
  call void @"V_BENT2@UUFU"(<2 x double>* %p, <2 x double>* %146, double* %147, <2 x double>* %148)
  %p598 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false589:                                         ; preds = %false581
  %return600 = call i64 @"eq@III"(i64 %T2, i64 53)
  %389 = icmp ne i64 %return600, 0
  br i1 %389, label %true601, label %false602

true601:                                          ; preds = %false589
  %return604 = call i64 @"neg@II"(i64 33)
  %return605 = call double* @"detail@[FIS"(i64 %return604, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @74, i64 0, i64 0))
  store <2 x double> %pos1, <2 x double>* %149
  %w607 = load double, double* %w
  store double %w607, double* %150
  %idx609 = load i64, i64* %idx
  %return610 = call double @"getcomp@F[FI"(double* %return605, i64 %idx609)
  store double %return610, double* %151
  call void @"V_BIPOLAR@UUFF"(<2 x double>* %p, <2 x double>* %149, double* %150, double* %151)
  %p611 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false602:                                         ; preds = %false589
  %return613 = call i64 @"eq@III"(i64 %T2, i64 54)
  %390 = icmp ne i64 %return613, 0
  br i1 %390, label %true614, label %false615

true614:                                          ; preds = %false602
  store <2 x double> %pos1, <2 x double>* %152
  %w618 = load double, double* %w
  store double %w618, double* %153
  call void @"V_BOARDERS@UUF"(<2 x double>* %p, <2 x double>* %152, double* %153)
  %p619 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false615:                                         ; preds = %false602
  %return621 = call i64 @"eq@III"(i64 %T2, i64 55)
  %391 = icmp ne i64 %return621, 0
  br i1 %391, label %true622, label %false623

true622:                                          ; preds = %false615
  store <2 x double> %pos1, <2 x double>* %154
  %w626 = load double, double* %w
  store double %w626, double* %155
  call void @"V_BUTTERFLY@UUF"(<2 x double>* %p, <2 x double>* %154, double* %155)
  %p627 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false623:                                         ; preds = %false615
  %return629 = call i64 @"eq@III"(i64 %T2, i64 56)
  %392 = icmp ne i64 %return629, 0
  br i1 %392, label %true630, label %false631

true630:                                          ; preds = %false623
  %return633 = call i64 @"neg@II"(i64 34)
  %return634 = call double* @"detail@[FIS"(i64 %return633, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @75, i64 0, i64 0))
  store <2 x double> %pos1, <2 x double>* %156
  %w636 = load double, double* %w
  store double %w636, double* %157
  %idx638 = load i64, i64* %idx
  %return639 = call double @"getcomp@F[FI"(double* %return634, i64 %idx638)
  store double %return639, double* %158
  call void @"V_CELL@UUFF"(<2 x double>* %p, <2 x double>* %156, double* %157, double* %158)
  %p640 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false631:                                         ; preds = %false623
  %return642 = call i64 @"eq@III"(i64 %T2, i64 57)
  %393 = icmp ne i64 %return642, 0
  br i1 %393, label %true643, label %false644

true643:                                          ; preds = %false631
  %return646 = call i64 @"neg@II"(i64 35)
  %return647 = call <3 x double>* @"detail@[VIS"(i64 %return646, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @76, i64 0, i64 0))
  %idx648 = load i64, i64* %idx
  %return649 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %return647, i64 %idx648)
  store <2 x double> %pos1, <2 x double>* %159
  %w651 = load double, double* %w
  store double %w651, double* %160
  %return653 = call double @"getcomp@FVI"(<3 x double> %return649, i64 0)
  store double %return653, double* %161
  %return655 = call double @"getcomp@FVI"(<3 x double> %return649, i64 1)
  store double %return655, double* %162
  %return657 = call double @"getcomp@FVI"(<3 x double> %return649, i64 2)
  store double %return657, double* %163
  call void @"V_CPOW@UUFFFF"(<2 x double>* %p, <2 x double>* %159, double* %160, double* %161, double* %162, double* %163)
  %p658 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false644:                                         ; preds = %false631
  %return660 = call i64 @"eq@III"(i64 %T2, i64 58)
  %394 = icmp ne i64 %return660, 0
  br i1 %394, label %true661, label %false662

true661:                                          ; preds = %false644
  store <2 x double> %pos1, <2 x double>* %164
  %w665 = load double, double* %w
  store double %w665, double* %165
  call void @"V_EDISC@UUF"(<2 x double>* %p, <2 x double>* %164, double* %165)
  %p666 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false662:                                         ; preds = %false644
  %return668 = call i64 @"eq@III"(i64 %T2, i64 60)
  %395 = icmp ne i64 %return668, 0
  br i1 %395, label %true669, label %false670

true669:                                          ; preds = %false662
  store <2 x double> %pos1, <2 x double>* %166
  %w673 = load double, double* %w
  store double %w673, double* %167
  call void @"V_NOISE@UUF"(<2 x double>* %p, <2 x double>* %166, double* %167)
  %p674 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false670:                                         ; preds = %false662
  %return676 = call i64 @"eq@III"(i64 %T2, i64 61)
  %396 = icmp ne i64 %return676, 0
  br i1 %396, label %true677, label %false678

true677:                                          ; preds = %false670
  %return680 = call i64 @"neg@II"(i64 36)
  %return681 = call double* @"detail@[FIS"(i64 %return680, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @77, i64 0, i64 0))
  store <2 x double> %pos1, <2 x double>* %168
  %w683 = load double, double* %w
  store double %w683, double* %169
  %idx685 = load i64, i64* %idx
  %return686 = call double @"getcomp@F[FI"(double* %return681, i64 %idx685)
  store double %return686, double* %170
  call void @"V_ESCHER@UUFF"(<2 x double>* %p, <2 x double>* %168, double* %169, double* %170)
  %p687 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false678:                                         ; preds = %false670
  %return689 = call i64 @"eq@III"(i64 %T2, i64 62)
  %397 = icmp ne i64 %return689, 0
  br i1 %397, label %true690, label %false691

true690:                                          ; preds = %false678
  store <2 x double> %pos1, <2 x double>* %171
  %w694 = load double, double* %w
  store double %w694, double* %172
  call void @"V_FOCI@UUF"(<2 x double>* %p, <2 x double>* %171, double* %172)
  %p695 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false691:                                         ; preds = %false678
  %return697 = call i64 @"eq@III"(i64 %T2, i64 63)
  %398 = icmp ne i64 %return697, 0
  br i1 %398, label %true698, label %false699

true698:                                          ; preds = %false691
  %return701 = call i64 @"neg@II"(i64 37)
  %return702 = call <3 x double>* @"detail@[VIS"(i64 %return701, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @78, i64 0, i64 0))
  %idx703 = load i64, i64* %idx
  %return704 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %return702, i64 %idx703)
  %return706 = call <2 x double>* @"detail@[UIS"(i64 %return701, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @79, i64 0, i64 0))
  %idx707 = load i64, i64* %idx
  %return708 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return706, i64 %idx707)
  store <2 x double> %pos1, <2 x double>* %173
  %w710 = load double, double* %w
  store double %w710, double* %174
  %return712 = call double @"getcomp@FVI"(<3 x double> %return704, i64 0)
  store double %return712, double* %175
  %return714 = call double @"getcomp@FVI"(<3 x double> %return704, i64 1)
  store double %return714, double* %176
  %return716 = call double @"getcomp@FVI"(<3 x double> %return704, i64 2)
  store double %return716, double* %177
  store <2 x double> %return708, <2 x double>* %178
  call void @"V_LAZYSUSAN@UUFFFFU"(<2 x double>* %p, <2 x double>* %173, double* %174, double* %175, double* %176, double* %177, <2 x double>* %178)
  %p718 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false699:                                         ; preds = %false691
  %return720 = call i64 @"eq@III"(i64 %T2, i64 64)
  %399 = icmp ne i64 %return720, 0
  br i1 %399, label %true721, label %false722

true721:                                          ; preds = %false699
  store <2 x double> %pos1, <2 x double>* %179
  %w725 = load double, double* %w
  store double %w725, double* %180
  call void @"V_LOONIE@UUF"(<2 x double>* %p, <2 x double>* %179, double* %180)
  %p726 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false722:                                         ; preds = %false699
  %return728 = call i64 @"eq@III"(i64 %T2, i64 66)
  %400 = icmp ne i64 %return728, 0
  br i1 %400, label %true729, label %false730

true729:                                          ; preds = %false722
  %return732 = call i64 @"neg@II"(i64 38)
  %return733 = call <2 x double>* @"detail@[UIS"(i64 %return732, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @80, i64 0, i64 0))
  %idx734 = load i64, i64* %idx
  %return735 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return733, i64 %idx734)
  store <2 x double> %pos1, <2 x double>* %181
  %w737 = load double, double* %w
  store double %w737, double* %182
  store <2 x double> %return735, <2 x double>* %183
  call void @"V_MODULUS@UUFU"(<2 x double>* %p, <2 x double>* %181, double* %182, <2 x double>* %183)
  %p739 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false730:                                         ; preds = %false722
  %return741 = call i64 @"eq@III"(i64 %T2, i64 67)
  %401 = icmp ne i64 %return741, 0
  br i1 %401, label %true742, label %false743

true742:                                          ; preds = %false730
  %return745 = call i64 @"neg@II"(i64 39)
  %return746 = call <4 x double>* @"detail@[PIS"(i64 %return745, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @81, i64 0, i64 0))
  %idx747 = load i64, i64* %idx
  %return748 = call <4 x double> @"getcomp@P[PI"(<4 x double>* %return746, i64 %idx747)
  store <2 x double> %pos1, <2 x double>* %184
  %w750 = load double, double* %w
  store double %w750, double* %185
  %return752 = call double @"getcomp@FPI"(<4 x double> %return748, i64 0)
  store double %return752, double* %186
  %return754 = call double @"getcomp@FPI"(<4 x double> %return748, i64 1)
  store double %return754, double* %187
  %return756 = call double @"getcomp@FPI"(<4 x double> %return748, i64 2)
  store double %return756, double* %188
  %return758 = call double @"getcomp@FPI"(<4 x double> %return748, i64 3)
  store double %return758, double* %189
  call void @"V_OSCOPE@UUFFFFF"(<2 x double>* %p, <2 x double>* %184, double* %185, double* %186, double* %187, double* %188, double* %189)
  %p759 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false743:                                         ; preds = %false730
  %return761 = call i64 @"eq@III"(i64 %T2, i64 68)
  %402 = icmp ne i64 %return761, 0
  br i1 %402, label %true762, label %false763

true762:                                          ; preds = %false743
  store <2 x double> %pos1, <2 x double>* %190
  %w766 = load double, double* %w
  store double %w766, double* %191
  call void @"V_POLAR2@UUF"(<2 x double>* %p, <2 x double>* %190, double* %191)
  %p767 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false763:                                         ; preds = %false743
  %return769 = call i64 @"eq@III"(i64 %T2, i64 69)
  %403 = icmp ne i64 %return769, 0
  br i1 %403, label %true770, label %end9

true770:                                          ; preds = %false763
  %return772 = call i64 @"neg@II"(i64 40)
  %return773 = call double* @"detail@[FIS"(i64 %return772, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @82, i64 0, i64 0))
  %return775 = call <2 x double>* @"detail@[UIS"(i64 %return772, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @83, i64 0, i64 0))
  %idx776 = load i64, i64* %idx
  %return777 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return775, i64 %idx776)
  store <2 x double> %pos1, <2 x double>* %192
  %w779 = load double, double* %w
  store double %w779, double* %193
  %idx781 = load i64, i64* %idx
  %return782 = call double @"getcomp@F[FI"(double* %return773, i64 %idx781)
  store double %return782, double* %194
  store <2 x double> %return777, <2 x double>* %195
  call void @"V_POPCORN2@UUFFU"(<2 x double>* %p, <2 x double>* %192, double* %193, double* %194, <2 x double>* %195)
  %p784 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true787:                                          ; preds = %false360
  %return791 = call i64 @"eq@III"(i64 %T2, i64 73)
  %404 = icmp ne i64 %return791, 0
  br i1 %404, label %true792, label %false793

false788:                                         ; preds = %false360
  %return1021 = call i64 @"eq@III"(i64 %T2, i64 88)
  %405 = icmp ne i64 %return1021, 0
  br i1 %405, label %true1022, label %false1023

true792:                                          ; preds = %true787
  %return795 = call i64 @"neg@II"(i64 43)
  %return796 = call <2 x double>* @"detail@[UIS"(i64 %return795, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @84, i64 0, i64 0))
  %idx797 = load i64, i64* %idx
  %return798 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return796, i64 %idx797)
  store <2 x double> %pos1, <2 x double>* %196
  %w800 = load double, double* %w
  store double %w800, double* %197
  store <2 x double> %return798, <2 x double>* %198
  call void @"V_SPLITS@UUFU"(<2 x double>* %p, <2 x double>* %196, double* %197, <2 x double>* %198)
  %p802 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false793:                                         ; preds = %true787
  %return804 = call i64 @"eq@III"(i64 %T2, i64 70)
  %406 = icmp ne i64 %return804, 0
  br i1 %406, label %true805, label %false806

true805:                                          ; preds = %false793
  store <2 x double> %pos1, <2 x double>* %199
  %w809 = load double, double* %w
  store double %w809, double* %200
  call void @"V_SCRY@UUF"(<2 x double>* %p, <2 x double>* %199, double* %200)
  %p810 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false806:                                         ; preds = %false793
  %return812 = call i64 @"eq@III"(i64 %T2, i64 71)
  %407 = icmp ne i64 %return812, 0
  br i1 %407, label %true813, label %false814

true813:                                          ; preds = %false806
  %return816 = call i64 @"neg@II"(i64 41)
  %return817 = call <2 x double>* @"detail@[UIS"(i64 %return816, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @85, i64 0, i64 0))
  %idx818 = load i64, i64* %idx
  %return819 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return817, i64 %idx818)
  %return821 = call <2 x double>* @"detail@[UIS"(i64 %return816, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @86, i64 0, i64 0))
  %idx822 = load i64, i64* %idx
  %return823 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return821, i64 %idx822)
  store <2 x double> %pos1, <2 x double>* %201
  %w825 = load double, double* %w
  store double %w825, double* %202
  store <2 x double> %return819, <2 x double>* %203
  store <2 x double> %return823, <2 x double>* %204
  call void @"V_SEPARATION@UUFUU"(<2 x double>* %p, <2 x double>* %201, double* %202, <2 x double>* %203, <2 x double>* %204)
  %p828 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false814:                                         ; preds = %false806
  %return830 = call i64 @"eq@III"(i64 %T2, i64 72)
  %408 = icmp ne i64 %return830, 0
  br i1 %408, label %true831, label %false832

true831:                                          ; preds = %false814
  %return834 = call i64 @"neg@II"(i64 42)
  %return835 = call <2 x double>* @"detail@[UIS"(i64 %return834, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @87, i64 0, i64 0))
  %idx836 = load i64, i64* %idx
  %return837 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return835, i64 %idx836)
  store <2 x double> %pos1, <2 x double>* %205
  %w839 = load double, double* %w
  store double %w839, double* %206
  store <2 x double> %return837, <2 x double>* %207
  call void @"V_SPLIT@UUFU"(<2 x double>* %p, <2 x double>* %205, double* %206, <2 x double>* %207)
  %p841 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false832:                                         ; preds = %false814
  %return843 = call i64 @"eq@III"(i64 %T2, i64 74)
  %409 = icmp ne i64 %return843, 0
  br i1 %409, label %true844, label %false845

true844:                                          ; preds = %false832
  %return847 = call i64 @"neg@II"(i64 44)
  %return848 = call <2 x double>* @"detail@[UIS"(i64 %return847, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @88, i64 0, i64 0))
  %idx849 = load i64, i64* %idx
  %return850 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return848, i64 %idx849)
  store <2 x double> %pos1, <2 x double>* %208
  %w852 = load double, double* %w
  store double %w852, double* %209
  %return854 = call double @"getcomp@FUI"(<2 x double> %return850, i64 0)
  store double %return854, double* %210
  %return856 = call double @"getcomp@FUI"(<2 x double> %return850, i64 1)
  store double %return856, double* %211
  call void @"V_STRIPES@UUFFF"(<2 x double>* %p, <2 x double>* %208, double* %209, double* %210, double* %211)
  %p857 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false845:                                         ; preds = %false832
  %return859 = call i64 @"eq@III"(i64 %T2, i64 75)
  %410 = icmp ne i64 %return859, 0
  br i1 %410, label %true860, label %false861

true860:                                          ; preds = %false845
  %return863 = call i64 @"neg@II"(i64 45)
  %return864 = call <4 x double>* @"detail@[PIS"(i64 %return863, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @89, i64 0, i64 0))
  %idx865 = load i64, i64* %idx
  %return866 = call <4 x double> @"getcomp@P[PI"(<4 x double>* %return864, i64 %idx865)
  store <2 x double> %pos1, <2 x double>* %212
  %w868 = load double, double* %w
  store double %w868, double* %213
  %return870 = call double @"getcomp@FPI"(<4 x double> %return866, i64 0)
  store double %return870, double* %214
  %return872 = call double @"getcomp@FPI"(<4 x double> %return866, i64 1)
  store double %return872, double* %215
  %return874 = call double @"getcomp@FPI"(<4 x double> %return866, i64 2)
  store double %return874, double* %216
  %return876 = call double @"getcomp@FPI"(<4 x double> %return866, i64 3)
  store double %return876, double* %217
  call void @"V_WEDGE@UUFFFFF"(<2 x double>* %p, <2 x double>* %212, double* %213, double* %214, double* %215, double* %216, double* %217)
  %p877 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false861:                                         ; preds = %false845
  %return879 = call i64 @"eq@III"(i64 %T2, i64 76)
  %411 = icmp ne i64 %return879, 0
  br i1 %411, label %true880, label %false881

true880:                                          ; preds = %false861
  %return883 = call i64 @"neg@II"(i64 46)
  %return884 = call <4 x double>* @"detail@[PIS"(i64 %return883, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @90, i64 0, i64 0))
  %idx885 = load i64, i64* %idx
  %return886 = call <4 x double> @"getcomp@P[PI"(<4 x double>* %return884, i64 %idx885)
  store <2 x double> %pos1, <2 x double>* %218
  %w888 = load double, double* %w
  store double %w888, double* %219
  %return890 = call double @"getcomp@FPI"(<4 x double> %return886, i64 0)
  store double %return890, double* %220
  %return892 = call double @"getcomp@FPI"(<4 x double> %return886, i64 1)
  store double %return892, double* %221
  %return894 = call double @"getcomp@FPI"(<4 x double> %return886, i64 2)
  store double %return894, double* %222
  %return896 = call double @"getcomp@FPI"(<4 x double> %return886, i64 3)
  store double %return896, double* %223
  call void @"V_WEDGEJULIA@UUFFFFF"(<2 x double>* %p, <2 x double>* %218, double* %219, double* %220, double* %221, double* %222, double* %223)
  %p897 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false881:                                         ; preds = %false861
  %return899 = call i64 @"eq@III"(i64 %T2, i64 77)
  %412 = icmp ne i64 %return899, 0
  br i1 %412, label %true900, label %false901

true900:                                          ; preds = %false881
  %return903 = call i64 @"neg@II"(i64 47)
  %return904 = call <4 x double>* @"detail@[PIS"(i64 %return903, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @91, i64 0, i64 0))
  %idx905 = load i64, i64* %idx
  %return906 = call <4 x double> @"getcomp@P[PI"(<4 x double>* %return904, i64 %idx905)
  store <2 x double> %pos1, <2 x double>* %224
  %w908 = load double, double* %w
  store double %w908, double* %225
  %return910 = call double @"getcomp@FPI"(<4 x double> %return906, i64 0)
  store double %return910, double* %226
  %return912 = call double @"getcomp@FPI"(<4 x double> %return906, i64 1)
  store double %return912, double* %227
  %return914 = call double @"getcomp@FPI"(<4 x double> %return906, i64 2)
  store double %return914, double* %228
  %return916 = call double @"getcomp@FPI"(<4 x double> %return906, i64 3)
  store double %return916, double* %229
  call void @"V_WEDGESPH@UUFFFFF"(<2 x double>* %p, <2 x double>* %224, double* %225, double* %226, double* %227, double* %228, double* %229)
  %p917 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false901:                                         ; preds = %false881
  %return919 = call i64 @"eq@III"(i64 %T2, i64 78)
  %413 = icmp ne i64 %return919, 0
  br i1 %413, label %true920, label %false921

true920:                                          ; preds = %false901
  %return923 = call i64 @"neg@II"(i64 48)
  %return924 = call <2 x double>* @"detail@[UIS"(i64 %return923, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @92, i64 0, i64 0))
  %idx925 = load i64, i64* %idx
  %return926 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return924, i64 %idx925)
  store <2 x double> %pos1, <2 x double>* %230
  %w928 = load double, double* %w
  store double %w928, double* %231
  %return930 = call double @"getcomp@FUI"(<2 x double> %return926, i64 0)
  store double %return930, double* %232
  %return932 = call double @"getcomp@FUI"(<2 x double> %return926, i64 1)
  store double %return932, double* %233
  call void @"V_WHORL@UUFFF"(<2 x double>* %p, <2 x double>* %230, double* %231, double* %232, double* %233)
  %p933 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false921:                                         ; preds = %false901
  %return935 = call i64 @"eq@III"(i64 %T2, i64 79)
  %414 = icmp ne i64 %return935, 0
  br i1 %414, label %true936, label %false937

true936:                                          ; preds = %false921
  %return939 = call i64 @"neg@II"(i64 49)
  %return940 = call <2 x double>* @"detail@[UIS"(i64 %return939, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @93, i64 0, i64 0))
  %idx941 = load i64, i64* %idx
  %return942 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return940, i64 %idx941)
  %return944 = call <2 x double>* @"detail@[UIS"(i64 %return939, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @94, i64 0, i64 0))
  %idx945 = load i64, i64* %idx
  %return946 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return944, i64 %idx945)
  store <2 x double> %pos1, <2 x double>* %234
  %w948 = load double, double* %w
  store double %w948, double* %235
  store <2 x double> %return942, <2 x double>* %236
  store <2 x double> %return946, <2 x double>* %237
  call void @"V_WAVES2@UUFUU"(<2 x double>* %p, <2 x double>* %234, double* %235, <2 x double>* %236, <2 x double>* %237)
  %p951 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false937:                                         ; preds = %false921
  %return953 = call i64 @"eq@III"(i64 %T2, i64 80)
  %415 = icmp ne i64 %return953, 0
  br i1 %415, label %true954, label %false955

true954:                                          ; preds = %false937
  store <2 x double> %pos1, <2 x double>* %238
  %w958 = load double, double* %w
  store double %w958, double* %239
  call void @"V_EXP@UUF"(<2 x double>* %p, <2 x double>* %238, double* %239)
  %p959 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false955:                                         ; preds = %false937
  %return961 = call i64 @"eq@III"(i64 %T2, i64 81)
  %416 = icmp ne i64 %return961, 0
  br i1 %416, label %true962, label %false963

true962:                                          ; preds = %false955
  store <2 x double> %pos1, <2 x double>* %240
  %w966 = load double, double* %w
  store double %w966, double* %241
  call void @"V_LOG@UUF"(<2 x double>* %p, <2 x double>* %240, double* %241)
  %p967 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false963:                                         ; preds = %false955
  %return969 = call i64 @"eq@III"(i64 %T2, i64 82)
  %417 = icmp ne i64 %return969, 0
  br i1 %417, label %true970, label %false971

true970:                                          ; preds = %false963
  %f3c973 = load i64, i64* %f3c
  store i64 %f3c973, i64* %242
  store <2 x double> %pos1, <2 x double>* %243
  %w975 = load double, double* %w
  store double %w975, double* %244
  call void @"V_SIN@IUUF"(i64* %242, <2 x double>* %p, <2 x double>* %243, double* %244)
  %p976 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false971:                                         ; preds = %false963
  %return978 = call i64 @"eq@III"(i64 %T2, i64 83)
  %418 = icmp ne i64 %return978, 0
  br i1 %418, label %true979, label %false980

true979:                                          ; preds = %false971
  %f3c982 = load i64, i64* %f3c
  store i64 %f3c982, i64* %245
  store <2 x double> %pos1, <2 x double>* %246
  %w984 = load double, double* %w
  store double %w984, double* %247
  call void @"V_COS@IUUF"(i64* %245, <2 x double>* %p, <2 x double>* %246, double* %247)
  %p985 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false980:                                         ; preds = %false971
  %return987 = call i64 @"eq@III"(i64 %T2, i64 84)
  %419 = icmp ne i64 %return987, 0
  br i1 %419, label %true988, label %false989

true988:                                          ; preds = %false980
  %f3c991 = load i64, i64* %f3c
  store i64 %f3c991, i64* %248
  store <2 x double> %pos1, <2 x double>* %249
  %w993 = load double, double* %w
  store double %w993, double* %250
  call void @"V_TAN@IUUF"(i64* %248, <2 x double>* %p, <2 x double>* %249, double* %250)
  %p994 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false989:                                         ; preds = %false980
  %return996 = call i64 @"eq@III"(i64 %T2, i64 85)
  %420 = icmp ne i64 %return996, 0
  br i1 %420, label %true997, label %false998

true997:                                          ; preds = %false989
  %f3c1000 = load i64, i64* %f3c
  store i64 %f3c1000, i64* %251
  store <2 x double> %pos1, <2 x double>* %252
  %w1002 = load double, double* %w
  store double %w1002, double* %253
  call void @"V_SEC@IUUF"(i64* %251, <2 x double>* %p, <2 x double>* %252, double* %253)
  %p1003 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false998:                                         ; preds = %false989
  %return1005 = call i64 @"eq@III"(i64 %T2, i64 86)
  %421 = icmp ne i64 %return1005, 0
  br i1 %421, label %true1006, label %end1007

true1006:                                         ; preds = %false998
  %f3c1008 = load i64, i64* %f3c
  store i64 %f3c1008, i64* %254
  store <2 x double> %pos1, <2 x double>* %255
  %w1010 = load double, double* %w
  store double %w1010, double* %256
  call void @"V_CSC@IUUF"(i64* %254, <2 x double>* %p, <2 x double>* %255, double* %256)
  %p1011 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

end1007:                                          ; preds = %false998
  %return1013 = call i64 @"eq@III"(i64 %T2, i64 87)
  %422 = icmp ne i64 %return1013, 0
  br i1 %422, label %true1014, label %end9

true1014:                                         ; preds = %end1007
  %f3c1016 = load i64, i64* %f3c
  store i64 %f3c1016, i64* %257
  store <2 x double> %pos1, <2 x double>* %258
  %w1018 = load double, double* %w
  store double %w1018, double* %259
  call void @"V_COT@IUUF"(i64* %257, <2 x double>* %p, <2 x double>* %258, double* %259)
  %p1019 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true1022:                                         ; preds = %false788
  %f3c1025 = load i64, i64* %f3c
  store i64 %f3c1025, i64* %260
  store <2 x double> %pos1, <2 x double>* %261
  %w1027 = load double, double* %w
  store double %w1027, double* %262
  call void @"V_SINH@IUUF"(i64* %260, <2 x double>* %p, <2 x double>* %261, double* %262)
  %p1028 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1023:                                        ; preds = %false788
  %return1030 = call i64 @"eq@III"(i64 %T2, i64 89)
  %423 = icmp ne i64 %return1030, 0
  br i1 %423, label %true1031, label %false1032

true1031:                                         ; preds = %false1023
  %f3c1034 = load i64, i64* %f3c
  store i64 %f3c1034, i64* %263
  store <2 x double> %pos1, <2 x double>* %264
  %w1036 = load double, double* %w
  store double %w1036, double* %265
  call void @"V_COSH@IUUF"(i64* %263, <2 x double>* %p, <2 x double>* %264, double* %265)
  %p1037 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1032:                                        ; preds = %false1023
  %return1039 = call i64 @"eq@III"(i64 %T2, i64 90)
  %424 = icmp ne i64 %return1039, 0
  br i1 %424, label %true1040, label %false1041

true1040:                                         ; preds = %false1032
  %f3c1043 = load i64, i64* %f3c
  store i64 %f3c1043, i64* %266
  store <2 x double> %pos1, <2 x double>* %267
  %w1045 = load double, double* %w
  store double %w1045, double* %268
  call void @"V_TANH@IUUF"(i64* %266, <2 x double>* %p, <2 x double>* %267, double* %268)
  %p1046 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1041:                                        ; preds = %false1032
  %return1048 = call i64 @"eq@III"(i64 %T2, i64 91)
  %425 = icmp ne i64 %return1048, 0
  br i1 %425, label %true1049, label %false1050

true1049:                                         ; preds = %false1041
  %f3c1052 = load i64, i64* %f3c
  store i64 %f3c1052, i64* %269
  store <2 x double> %pos1, <2 x double>* %270
  %w1054 = load double, double* %w
  store double %w1054, double* %271
  call void @"V_SECH@IUUF"(i64* %269, <2 x double>* %p, <2 x double>* %270, double* %271)
  %p1055 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1050:                                        ; preds = %false1041
  %return1057 = call i64 @"eq@III"(i64 %T2, i64 92)
  %426 = icmp ne i64 %return1057, 0
  br i1 %426, label %true1058, label %false1059

true1058:                                         ; preds = %false1050
  %f3c1061 = load i64, i64* %f3c
  store i64 %f3c1061, i64* %272
  store <2 x double> %pos1, <2 x double>* %273
  %w1063 = load double, double* %w
  store double %w1063, double* %274
  call void @"V_CSCH@IUUF"(i64* %272, <2 x double>* %p, <2 x double>* %273, double* %274)
  %p1064 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1059:                                        ; preds = %false1050
  %return1066 = call i64 @"eq@III"(i64 %T2, i64 93)
  %427 = icmp ne i64 %return1066, 0
  br i1 %427, label %true1067, label %false1068

true1067:                                         ; preds = %false1059
  %f3c1070 = load i64, i64* %f3c
  store i64 %f3c1070, i64* %275
  store <2 x double> %pos1, <2 x double>* %276
  %w1072 = load double, double* %w
  store double %w1072, double* %277
  call void @"V_COTH@IUUF"(i64* %275, <2 x double>* %p, <2 x double>* %276, double* %277)
  %p1073 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1068:                                        ; preds = %false1059
  %return1075 = call i64 @"eq@III"(i64 %T2, i64 94)
  %428 = icmp ne i64 %return1075, 0
  br i1 %428, label %true1076, label %false1077

true1076:                                         ; preds = %false1068
  %return1079 = call i64 @"neg@II"(i64 50)
  %return1080 = call <4 x double>* @"detail@[PIS"(i64 %return1079, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @95, i64 0, i64 0))
  %idx1081 = load i64, i64* %idx
  %return1082 = call <4 x double> @"getcomp@P[PI"(<4 x double>* %return1080, i64 %idx1081)
  store <2 x double> %pos1, <2 x double>* %278
  %w1084 = load double, double* %w
  store double %w1084, double* %279
  %return1086 = call double @"getcomp@FPI"(<4 x double> %return1082, i64 0)
  store double %return1086, double* %280
  %return1088 = call double @"getcomp@FPI"(<4 x double> %return1082, i64 1)
  store double %return1088, double* %281
  %return1090 = call double @"getcomp@FPI"(<4 x double> %return1082, i64 2)
  store double %return1090, double* %282
  %return1092 = call double @"getcomp@FPI"(<4 x double> %return1082, i64 3)
  store double %return1092, double* %283
  call void @"V_AUGER@UUFFFFF"(<2 x double>* %p, <2 x double>* %278, double* %279, double* %280, double* %281, double* %282, double* %283)
  %p1093 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1077:                                        ; preds = %false1068
  %return1095 = call i64 @"eq@III"(i64 %T2, i64 95)
  %429 = icmp ne i64 %return1095, 0
  br i1 %429, label %true1096, label %false1097

true1096:                                         ; preds = %false1077
  %return1099 = call i64 @"neg@II"(i64 51)
  %return1100 = call double* @"detail@[FIS"(i64 %return1099, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @96, i64 0, i64 0))
  store <2 x double> %pos1, <2 x double>* %284
  %w1102 = load double, double* %w
  store double %w1102, double* %285
  %idx1104 = load i64, i64* %idx
  %return1105 = call double @"getcomp@F[FI"(double* %return1100, i64 %idx1104)
  store double %return1105, double* %286
  call void @"V_FLUX@UUFF"(<2 x double>* %p, <2 x double>* %284, double* %285, double* %286)
  %p1106 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1097:                                        ; preds = %false1077
  %return1108 = call i64 @"eq@III"(i64 %T2, i64 96)
  %430 = icmp ne i64 %return1108, 0
  br i1 %430, label %true1109, label %false1110

true1109:                                         ; preds = %false1097
  %return1112 = call i64 @"neg@II"(i64 52)
  %return1113 = call <4 x double>* @"detail@[PIS"(i64 %return1112, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @97, i64 0, i64 0))
  %idx1114 = load i64, i64* %idx
  %return1115 = call <4 x double> @"getcomp@P[PI"(<4 x double>* %return1113, i64 %idx1114)
  %return1117 = call <4 x double>* @"detail@[PIS"(i64 %return1112, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @98, i64 0, i64 0))
  %idx1118 = load i64, i64* %idx
  %return1119 = call <4 x double> @"getcomp@P[PI"(<4 x double>* %return1117, i64 %idx1118)
  store <2 x double> %pos1, <2 x double>* %287
  %w1121 = load double, double* %w
  store double %w1121, double* %288
  store <4 x double> %return1115, <4 x double>* %289
  store <4 x double> %return1119, <4 x double>* %290
  call void @"V_MOBIUS@UUFPP"(<2 x double>* %p, <2 x double>* %287, double* %288, <4 x double>* %289, <4 x double>* %290)
  %p1124 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1110:                                        ; preds = %false1097
  %return1126 = call i64 @"eq@III"(i64 %T2, i64 97)
  %431 = icmp ne i64 %return1126, 0
  br i1 %431, label %true1127, label %false1128

true1127:                                         ; preds = %false1110
  %return1130 = call i64 @"neg@II"(i64 53)
  %return1131 = call <2 x double>* @"detail@[UIS"(i64 %return1130, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @99, i64 0, i64 0))
  %idx1132 = load i64, i64* %idx
  %return1133 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return1131, i64 %idx1132)
  %return1135 = call <2 x double>* @"detail@[UIS"(i64 %return1130, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @100, i64 0, i64 0))
  %idx1136 = load i64, i64* %idx
  %return1137 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return1135, i64 %idx1136)
  store <2 x double> %pos1, <2 x double>* %291
  %w1139 = load double, double* %w
  store double %w1139, double* %292
  store <2 x double> %return1133, <2 x double>* %293
  store <2 x double> %return1137, <2 x double>* %294
  call void @"V_CURVE@UUFUU"(<2 x double>* %p, <2 x double>* %291, double* %292, <2 x double>* %293, <2 x double>* %294)
  %p1142 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1128:                                        ; preds = %false1110
  %return1144 = call i64 @"eq@III"(i64 %T2, i64 98)
  %432 = icmp ne i64 %return1144, 0
  br i1 %432, label %true1145, label %false1146

true1145:                                         ; preds = %false1128
  %return1148 = call i64 @"neg@II"(i64 54)
  %return1149 = call <2 x double>* @"detail@[UIS"(i64 %return1148, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @101, i64 0, i64 0))
  %idx1150 = load i64, i64* %idx
  %return1151 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return1149, i64 %idx1150)
  store <2 x double> %pos1, <2 x double>* %295
  %w1153 = load double, double* %w
  store double %w1153, double* %296
  %return1155 = call double @"getcomp@FUI"(<2 x double> %return1151, i64 0)
  store double %return1155, double* %297
  %return1157 = call double @"getcomp@FUI"(<2 x double> %return1151, i64 1)
  store double %return1157, double* %298
  call void @"V_PERSPECTIVE@UUFFF"(<2 x double>* %p, <2 x double>* %295, double* %296, double* %297, double* %298)
  %p1158 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1146:                                        ; preds = %false1128
  %return1160 = call i64 @"eq@III"(i64 %T2, i64 99)
  %433 = icmp ne i64 %return1160, 0
  br i1 %433, label %true1161, label %false1162

true1161:                                         ; preds = %false1146
  %return1164 = call i64 @"neg@II"(i64 55)
  %return1165 = call <3 x double>* @"detail@[VIS"(i64 %return1164, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @102, i64 0, i64 0))
  %idx1166 = load i64, i64* %idx
  %return1167 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %return1165, i64 %idx1166)
  %return1169 = call <2 x double>* @"detail@[UIS"(i64 %return1164, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @103, i64 0, i64 0))
  %idx1170 = load i64, i64* %idx
  %return1171 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return1169, i64 %idx1170)
  store <2 x double> %pos1, <2 x double>* %299
  %w1173 = load double, double* %w
  store double %w1173, double* %300
  %return1175 = call double @"getcomp@FVI"(<3 x double> %return1167, i64 0)
  store double %return1175, double* %301
  %return1177 = call double @"getcomp@FVI"(<3 x double> %return1167, i64 1)
  store double %return1177, double* %302
  %return1179 = call double @"getcomp@FVI"(<3 x double> %return1167, i64 2)
  store double %return1179, double* %303
  %return1181 = call double @"getcomp@FUI"(<2 x double> %return1171, i64 0)
  store double %return1181, double* %304
  %return1183 = call double @"getcomp@FUI"(<2 x double> %return1171, i64 1)
  store double %return1183, double* %305
  call void @"V_BWRAPS@UUFFFFFF"(<2 x double>* %p, <2 x double>* %299, double* %300, double* %301, double* %302, double* %303, double* %304, double* %305)
  %p1184 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1162:                                        ; preds = %false1146
  %return1186 = call i64 @"eq@III"(i64 %T2, i64 100)
  %434 = icmp ne i64 %return1186, 0
  br i1 %434, label %true1187, label %false1188

true1187:                                         ; preds = %false1162
  store <2 x double> %pos1, <2 x double>* %306
  %w1191 = load double, double* %w
  store double %w1191, double* %307
  call void @"V_HEMISPHERE@UUF"(<2 x double>* %p, <2 x double>* %306, double* %307)
  %p1192 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1188:                                        ; preds = %false1162
  %return1194 = call i64 @"eq@III"(i64 %T2, i64 101)
  %435 = icmp ne i64 %return1194, 0
  br i1 %435, label %true1195, label %false1196

true1195:                                         ; preds = %false1188
  %return1198 = call i64 @"neg@II"(i64 56)
  %return1199 = call <2 x double>* @"detail@[UIS"(i64 %return1198, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @104, i64 0, i64 0))
  %idx1200 = load i64, i64* %idx
  %return1201 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return1199, i64 %idx1200)
  %return1203 = call <2 x double>* @"detail@[UIS"(i64 %return1198, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @105, i64 0, i64 0))
  %idx1204 = load i64, i64* %idx
  %return1205 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return1203, i64 %idx1204)
  %return1207 = call <2 x double>* @"detail@[UIS"(i64 %return1198, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @106, i64 0, i64 0))
  %idx1208 = load i64, i64* %idx
  %return1209 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return1207, i64 %idx1208)
  store <2 x double> %pos1, <2 x double>* %308
  %w1211 = load double, double* %w
  store double %w1211, double* %309
  store <2 x double> %return1201, <2 x double>* %310
  store <2 x double> %return1205, <2 x double>* %311
  store <2 x double> %return1209, <2 x double>* %312
  call void @"V_POLYNOMIAL@UUFUUU"(<2 x double>* %p, <2 x double>* %308, double* %309, <2 x double>* %310, <2 x double>* %311, <2 x double>* %312)
  %p1215 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1196:                                        ; preds = %false1188
  %return1217 = call i64 @"eq@III"(i64 %T2, i64 102)
  %436 = icmp ne i64 %return1217, 0
  br i1 %436, label %true1218, label %false1219

true1218:                                         ; preds = %false1196
  %return1221 = call i64 @"neg@II"(i64 57)
  %return1222 = call <4 x double>* @"detail@[PIS"(i64 %return1221, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @107, i64 0, i64 0))
  %idx1223 = load i64, i64* %idx
  %return1224 = call <4 x double> @"getcomp@P[PI"(<4 x double>* %return1222, i64 %idx1223)
  %return1226 = call <2 x double>* @"detail@[UIS"(i64 %return1221, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @108, i64 0, i64 0))
  %idx1227 = load i64, i64* %idx
  %return1228 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return1226, i64 %idx1227)
  store <2 x double> %pos1, <2 x double>* %313
  %w1230 = load double, double* %w
  store double %w1230, double* %314
  %return1232 = call double @"getcomp@FPI"(<4 x double> %return1224, i64 0)
  store double %return1232, double* %315
  %return1234 = call double @"getcomp@FPI"(<4 x double> %return1224, i64 1)
  store double %return1234, double* %316
  %return1236 = call double @"getcomp@FPI"(<4 x double> %return1224, i64 2)
  store double %return1236, double* %317
  %return1238 = call double @"getcomp@FPI"(<4 x double> %return1224, i64 3)
  store double %return1238, double* %318
  %return1240 = call double @"getcomp@FUI"(<2 x double> %return1228, i64 0)
  store double %return1240, double* %319
  %return1242 = call double @"getcomp@FUI"(<2 x double> %return1228, i64 1)
  store double %return1242, double* %320
  call void @"V_CROP@UUFFFFFFF"(<2 x double>* %p, <2 x double>* %313, double* %314, double* %315, double* %316, double* %317, double* %318, double* %319, double* %320)
  %p1243 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1219:                                        ; preds = %false1196
  %return1245 = call i64 @"eq@III"(i64 %T2, i64 103)
  %437 = icmp ne i64 %return1245, 0
  br i1 %437, label %true1246, label %false1247

true1246:                                         ; preds = %false1219
  store <2 x double> %pos1, <2 x double>* %321
  %w1250 = load double, double* %w
  store double %w1250, double* %322
  call void @"V_UNPOLAR@UUF"(<2 x double>* %p, <2 x double>* %321, double* %322)
  %p1251 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1247:                                        ; preds = %false1219
  %return1253 = call i64 @"eq@III"(i64 %T2, i64 104)
  %438 = icmp ne i64 %return1253, 0
  br i1 %438, label %true1254, label %false1255

true1254:                                         ; preds = %false1247
  store <2 x double> %pos1, <2 x double>* %323
  %w1258 = load double, double* %w
  store double %w1258, double* %324
  call void @"V_GLYNNIA@UUF"(<2 x double>* %p, <2 x double>* %323, double* %324)
  %p1259 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1255:                                        ; preds = %false1247
  %return1261 = call i64 @"eq@III"(i64 %T2, i64 105)
  %439 = icmp ne i64 %return1261, 0
  br i1 %439, label %true1262, label %end9

true1262:                                         ; preds = %false1255
  %return1264 = call i64 @"neg@II"(i64 58)
  %return1265 = call <3 x double>* @"detail@[VIS"(i64 %return1264, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @109, i64 0, i64 0))
  %idx1266 = load i64, i64* %idx
  %return1267 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %return1265, i64 %idx1266)
  store <2 x double> %pos1, <2 x double>* %325
  %w1269 = load double, double* %w
  store double %w1269, double* %326
  %return1271 = call double @"getcomp@FVI"(<3 x double> %return1267, i64 0)
  store double %return1271, double* %327
  %return1273 = call double @"getcomp@FVI"(<3 x double> %return1267, i64 1)
  store double %return1273, double* %328
  %return1275 = call double @"getcomp@FVI"(<3 x double> %return1267, i64 2)
  store double %return1275, double* %329
  call void @"V_POINT_SYMMETRY@UUFFFF"(<2 x double>* %p, <2 x double>* %325, double* %326, double* %327, double* %328, double* %329)
  %p1276 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %true1262, %true1254, %true1246, %true1218, %true1195, %true1187, %true1161, %true1145, %true1127, %true1109, %true1096, %true1076, %true1067, %true1058, %true1049, %true1040, %true1031, %true1022, %true1014, %true1006, %true997, %true988, %true979, %true970, %true962, %true954, %true936, %true920, %true900, %true880, %true860, %true844, %true831, %true813, %true805, %true792, %true770, %true762, %true742, %true729, %true721, %true698, %true690, %true677, %true669, %true661, %true643, %true630, %true622, %true614, %true601, %true588, %true580, %true565, %true549, %true533, %true510, %true487, %true479, %true471, %true463, %true455, %true447, %true440, %true432, %true425, %true408, %true395, %true382, %true369, %true347, %true340, %true324, %true308, %true290, %true277, %true257, %true241, %true234, %true226, %true218, %true210, %true198, %true188, %true180, %true172, %true164, %true153, %true145, %true129, %true121, %true113, %true105, %true97, %true89, %true81, %true73, %true65, %true57, %true49, %true41, %true33, %true25, %true17, %end9, %true
  %UnifiedRetVal = phi <2 x double> [ %output, %true ], [ %pos1, %end9 ], [ %p22, %true17 ], [ %p30, %true25 ], [ %p38, %true33 ], [ %p46, %true41 ], [ %p54, %true49 ], [ %p62, %true57 ], [ %p70, %true65 ], [ %p78, %true73 ], [ %p86, %true81 ], [ %p94, %true89 ], [ %p102, %true97 ], [ %p110, %true105 ], [ %p118, %true113 ], [ %p126, %true121 ], [ %p142, %true129 ], [ %p150, %true145 ], [ %p161, %true153 ], [ %p169, %true164 ], [ %p177, %true172 ], [ %p185, %true180 ], [ %p195, %true188 ], [ %p207, %true198 ], [ %p215, %true210 ], [ %p223, %true218 ], [ %p231, %true226 ], [ %p238, %true234 ], [ %p254, %true241 ], [ %p274, %true257 ], [ %p287, %true277 ], [ %p305, %true290 ], [ %p321, %true308 ], [ %p337, %true324 ], [ %p344, %true340 ], [ %p356, %true347 ], [ %p379, %true369 ], [ %p392, %true382 ], [ %p405, %true395 ], [ %p422, %true408 ], [ %p429, %true425 ], [ %p437, %true432 ], [ %p444, %true440 ], [ %p452, %true447 ], [ %p460, %true455 ], [ %p468, %true463 ], [ %p476, %true471 ], [ %p484, %true479 ], [ %p507, %true487 ], [ %p530, %true510 ], [ %p546, %true533 ], [ %p562, %true549 ], [ %p577, %true565 ], [ %p585, %true580 ], [ %p598, %true588 ], [ %p611, %true601 ], [ %p619, %true614 ], [ %p627, %true622 ], [ %p640, %true630 ], [ %p658, %true643 ], [ %p666, %true661 ], [ %p674, %true669 ], [ %p687, %true677 ], [ %p695, %true690 ], [ %p718, %true698 ], [ %p726, %true721 ], [ %p739, %true729 ], [ %p759, %true742 ], [ %p767, %true762 ], [ %p784, %true770 ], [ %p802, %true792 ], [ %p810, %true805 ], [ %p828, %true813 ], [ %p841, %true831 ], [ %p857, %true844 ], [ %p877, %true860 ], [ %p897, %true880 ], [ %p917, %true900 ], [ %p933, %true920 ], [ %p951, %true936 ], [ %p959, %true954 ], [ %p967, %true962 ], [ %p976, %true970 ], [ %p985, %true979 ], [ %p994, %true988 ], [ %p1003, %true997 ], [ %p1011, %true1006 ], [ %p1019, %true1014 ], [ %p1028, %true1022 ], [ %p1037, %true1031 ], [ %p1046, %true1040 ], [ %p1055, %true1049 ], [ %p1064, %true1058 ], [ %p1073, %true1067 ], [ %p1093, %true1076 ], [ %p1106, %true1096 ], [ %p1124, %true1109 ], [ %p1142, %true1127 ], [ %p1158, %true1145 ], [ %p1184, %true1161 ], [ %p1192, %true1187 ], [ %p1215, %true1195 ], [ %p1243, %true1218 ], [ %p1251, %true1246 ], [ %p1259, %true1254 ], [ %p1276, %true1262 ]
  ret <2 x double> %UnifiedRetVal
}

; Function Attrs: nounwind readnone
declare <2 x double> @"mul@UU"(<2 x double>, <2 x double>) #0

; Function Attrs: nounwind
declare <4 x double>* @"detail@[PIS"(i64, i8*) #2

; Function Attrs: nounwind readnone
declare <4 x double> @"getcomp@P[PI"(<4 x double>*, i64) #0

; Function Attrs: nounwind readnone
declare double @"getcomp@FPI"(<4 x double>, i64) #0

; Function Attrs: nounwind
declare <3 x double>* @"detail@[VIS"(i64, i8*) #2

; Function Attrs: nounwind readnone
declare <3 x double> @"getcomp@V[VI"(<3 x double>*, i64) #0

; Function Attrs: alwaysinline nounwind
define private <2 x double> @"FLAMEFF@USIIUUUUF"(i8** %prx, i64* %T, i64* %f3c, <2 x double>* %pos, <2 x double>* %x, <2 x double>* %y, <2 x double>* %o, double* %w) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca double
  %2 = alloca <2 x double>
  %3 = alloca double
  %4 = alloca <2 x double>
  %5 = alloca double
  %6 = alloca <2 x double>
  %7 = alloca double
  %8 = alloca <2 x double>
  %9 = alloca double
  %10 = alloca <2 x double>
  %11 = alloca double
  %12 = alloca <2 x double>
  %13 = alloca double
  %14 = alloca <2 x double>
  %15 = alloca double
  %16 = alloca <2 x double>
  %17 = alloca double
  %18 = alloca <2 x double>
  %19 = alloca double
  %20 = alloca <2 x double>
  %21 = alloca double
  %22 = alloca <2 x double>
  %23 = alloca double
  %24 = alloca <2 x double>
  %25 = alloca double
  %26 = alloca <2 x double>
  %27 = alloca double
  %28 = alloca <2 x double>
  %29 = alloca double
  %30 = alloca double
  %31 = alloca double
  %32 = alloca double
  %33 = alloca double
  %34 = alloca <2 x double>
  %35 = alloca double
  %36 = alloca <2 x double>
  %37 = alloca double
  %38 = alloca double
  %39 = alloca double
  %40 = alloca <2 x double>
  %41 = alloca double
  %42 = alloca <2 x double>
  %43 = alloca double
  %44 = alloca <2 x double>
  %45 = alloca double
  %46 = alloca <2 x double>
  %47 = alloca double
  %48 = alloca double
  %49 = alloca <2 x double>
  %50 = alloca double
  %51 = alloca double
  %52 = alloca double
  %53 = alloca <2 x double>
  %54 = alloca double
  %55 = alloca <2 x double>
  %56 = alloca double
  %57 = alloca <2 x double>
  %58 = alloca double
  %59 = alloca double
  %60 = alloca <2 x double>
  %61 = alloca double
  %62 = alloca double
  %63 = alloca double
  %64 = alloca <2 x double>
  %65 = alloca double
  %66 = alloca double
  %67 = alloca double
  %68 = alloca double
  %69 = alloca double
  %70 = alloca <2 x double>
  %71 = alloca double
  %72 = alloca <4 x double>
  %73 = alloca <2 x double>
  %74 = alloca double
  %75 = alloca double
  %76 = alloca double
  %77 = alloca double
  %78 = alloca <2 x double>
  %79 = alloca double
  %80 = alloca double
  %81 = alloca double
  %82 = alloca <2 x double>
  %83 = alloca double
  %84 = alloca double
  %85 = alloca double
  %86 = alloca double
  %87 = alloca <2 x double>
  %88 = alloca double
  %89 = alloca <2 x double>
  %90 = alloca <2 x double>
  %91 = alloca double
  %92 = alloca double
  %93 = alloca <2 x double>
  %94 = alloca double
  %95 = alloca <2 x double>
  %96 = alloca <2 x double>
  %97 = alloca double
  %98 = alloca double
  %99 = alloca double
  %100 = alloca double
  %101 = alloca double
  %102 = alloca double
  %103 = alloca <2 x double>
  %104 = alloca double
  %105 = alloca <2 x double>
  %106 = alloca double
  %107 = alloca <2 x double>
  %108 = alloca double
  %109 = alloca <2 x double>
  %110 = alloca double
  %111 = alloca <2 x double>
  %112 = alloca double
  %113 = alloca <2 x double>
  %114 = alloca double
  %115 = alloca <2 x double>
  %116 = alloca double
  %117 = alloca <2 x double>
  %118 = alloca double
  %119 = alloca <2 x double>
  %120 = alloca double
  %121 = alloca double
  %122 = alloca double
  %123 = alloca <2 x double>
  %124 = alloca double
  %125 = alloca double
  %126 = alloca double
  %127 = alloca double
  %128 = alloca <3 x double>
  %129 = alloca <2 x double>
  %130 = alloca double
  %131 = alloca double
  %132 = alloca double
  %133 = alloca <2 x double>
  %134 = alloca double
  %135 = alloca double
  %136 = alloca double
  %137 = alloca <2 x double>
  %138 = alloca double
  %139 = alloca double
  %140 = alloca double
  %141 = alloca <2 x double>
  %142 = alloca double
  %143 = alloca <2 x double>
  %144 = alloca <2 x double>
  %145 = alloca double
  %146 = alloca double
  %147 = alloca <2 x double>
  %148 = alloca double
  %149 = alloca <2 x double>
  %150 = alloca double
  %151 = alloca <2 x double>
  %152 = alloca double
  %153 = alloca double
  %154 = alloca <2 x double>
  %155 = alloca double
  %156 = alloca double
  %157 = alloca double
  %158 = alloca double
  %159 = alloca <2 x double>
  %160 = alloca double
  %161 = alloca <2 x double>
  %162 = alloca double
  %163 = alloca <2 x double>
  %164 = alloca double
  %165 = alloca <2 x double>
  %166 = alloca double
  %167 = alloca double
  %168 = alloca <2 x double>
  %169 = alloca double
  %170 = alloca <2 x double>
  %171 = alloca double
  %172 = alloca double
  %173 = alloca double
  %174 = alloca double
  %175 = alloca <2 x double>
  %176 = alloca <2 x double>
  %177 = alloca double
  %178 = alloca <2 x double>
  %179 = alloca double
  %180 = alloca <2 x double>
  %181 = alloca <2 x double>
  %182 = alloca double
  %183 = alloca double
  %184 = alloca double
  %185 = alloca double
  %186 = alloca double
  %187 = alloca <2 x double>
  %188 = alloca double
  %189 = alloca <2 x double>
  %190 = alloca double
  %191 = alloca double
  %192 = alloca <2 x double>
  %193 = alloca <2 x double>
  %194 = alloca double
  %195 = alloca <2 x double>
  %196 = alloca double
  %197 = alloca <2 x double>
  %198 = alloca <2 x double>
  %199 = alloca <2 x double>
  %200 = alloca double
  %201 = alloca <2 x double>
  %202 = alloca <2 x double>
  %203 = alloca double
  %204 = alloca <2 x double>
  %205 = alloca <2 x double>
  %206 = alloca double
  %207 = alloca double
  %208 = alloca double
  %209 = alloca <2 x double>
  %210 = alloca double
  %211 = alloca double
  %212 = alloca double
  %213 = alloca double
  %214 = alloca double
  %215 = alloca <2 x double>
  %216 = alloca double
  %217 = alloca double
  %218 = alloca double
  %219 = alloca double
  %220 = alloca double
  %221 = alloca <2 x double>
  %222 = alloca double
  %223 = alloca double
  %224 = alloca double
  %225 = alloca double
  %226 = alloca double
  %227 = alloca <2 x double>
  %228 = alloca double
  %229 = alloca double
  %230 = alloca double
  %231 = alloca <2 x double>
  %232 = alloca double
  %233 = alloca <2 x double>
  %234 = alloca <2 x double>
  %235 = alloca <2 x double>
  %236 = alloca double
  %237 = alloca <2 x double>
  %238 = alloca double
  %239 = alloca i64
  %240 = alloca <2 x double>
  %241 = alloca double
  %242 = alloca i64
  %243 = alloca <2 x double>
  %244 = alloca double
  %245 = alloca i64
  %246 = alloca <2 x double>
  %247 = alloca double
  %248 = alloca i64
  %249 = alloca <2 x double>
  %250 = alloca double
  %251 = alloca i64
  %252 = alloca <2 x double>
  %253 = alloca double
  %254 = alloca i64
  %255 = alloca <2 x double>
  %256 = alloca double
  %257 = alloca i64
  %258 = alloca <2 x double>
  %259 = alloca double
  %260 = alloca i64
  %261 = alloca <2 x double>
  %262 = alloca double
  %263 = alloca i64
  %264 = alloca <2 x double>
  %265 = alloca double
  %266 = alloca i64
  %267 = alloca <2 x double>
  %268 = alloca double
  %269 = alloca i64
  %270 = alloca <2 x double>
  %271 = alloca double
  %272 = alloca i64
  %273 = alloca <2 x double>
  %274 = alloca double
  %275 = alloca <2 x double>
  %276 = alloca double
  %277 = alloca double
  %278 = alloca double
  %279 = alloca double
  %280 = alloca double
  %281 = alloca <2 x double>
  %282 = alloca double
  %283 = alloca double
  %284 = alloca <2 x double>
  %285 = alloca double
  %286 = alloca <4 x double>
  %287 = alloca <4 x double>
  %288 = alloca <2 x double>
  %289 = alloca double
  %290 = alloca <2 x double>
  %291 = alloca <2 x double>
  %292 = alloca <2 x double>
  %293 = alloca double
  %294 = alloca double
  %295 = alloca double
  %296 = alloca <2 x double>
  %297 = alloca double
  %298 = alloca double
  %299 = alloca double
  %300 = alloca double
  %301 = alloca double
  %302 = alloca double
  %303 = alloca <2 x double>
  %304 = alloca double
  %305 = alloca <2 x double>
  %306 = alloca double
  %307 = alloca <2 x double>
  %308 = alloca <2 x double>
  %309 = alloca <2 x double>
  %310 = alloca <2 x double>
  %311 = alloca double
  %312 = alloca double
  %313 = alloca double
  %314 = alloca double
  %315 = alloca double
  %316 = alloca double
  %317 = alloca double
  %318 = alloca <2 x double>
  %319 = alloca double
  %320 = alloca <2 x double>
  %321 = alloca double
  %322 = alloca <2 x double>
  %323 = alloca double
  %324 = alloca double
  %325 = alloca double
  %326 = alloca double
  %p = alloca <2 x double>
  store <2 x double> zeroinitializer, <2 x double>* %p, !vex-initializer-store !3
  %pos1 = load <2 x double>, <2 x double>* %pos
  %T2 = load i64, i64* %T
  %return = call i64 @"not@II"(i64 %T2)
  %327 = icmp ne i64 %return, 0
  br i1 %327, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %w4 = load double, double* %w
  %cast = call <2 x double> @"set@UF"(double %w4)
  %output = call <2 x double> @"mul@UU"(<2 x double> %pos1, <2 x double> %cast)
  br label %UnifiedReturnBlock

false:                                            ; preds = %__llvm_entry
  %return6 = call i64 @"lt@III"(i64 %T2, i64 35)
  %328 = icmp ne i64 %return6, 0
  br i1 %328, label %true7, label %false8

true7:                                            ; preds = %false
  %return11 = call i64 @"lt@III"(i64 %T2, i64 18)
  %329 = icmp ne i64 %return11, 0
  br i1 %329, label %true12, label %false13

false8:                                           ; preds = %false
  %return351 = call i64 @"lt@III"(i64 %T2, i64 70)
  %330 = icmp ne i64 %return351, 0
  br i1 %330, label %true352, label %false353

end9:                                             ; preds = %false1196, %false961, %false730, %false528, %false335, %false146
  br label %UnifiedReturnBlock

true12:                                           ; preds = %true7
  %return16 = call i64 @"eq@III"(i64 %T2, i64 1)
  %331 = icmp ne i64 %return16, 0
  br i1 %331, label %true17, label %false18

false13:                                          ; preds = %true7
  %return163 = call i64 @"eq@III"(i64 %T2, i64 18)
  %332 = icmp ne i64 %return163, 0
  br i1 %332, label %true164, label %false165

true17:                                           ; preds = %true12
  store <2 x double> %pos1, <2 x double>* %0
  %w21 = load double, double* %w
  store double %w21, double* %1
  call void @"V_SINUSOIDAL@UUF"(<2 x double>* %p, <2 x double>* %0, double* %1)
  %p22 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false18:                                          ; preds = %true12
  %return24 = call i64 @"eq@III"(i64 %T2, i64 2)
  %333 = icmp ne i64 %return24, 0
  br i1 %333, label %true25, label %false26

true25:                                           ; preds = %false18
  store <2 x double> %pos1, <2 x double>* %2
  %w29 = load double, double* %w
  store double %w29, double* %3
  call void @"V_SPHERICAL@UUF"(<2 x double>* %p, <2 x double>* %2, double* %3)
  %p30 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false26:                                          ; preds = %false18
  %return32 = call i64 @"eq@III"(i64 %T2, i64 3)
  %334 = icmp ne i64 %return32, 0
  br i1 %334, label %true33, label %false34

true33:                                           ; preds = %false26
  store <2 x double> %pos1, <2 x double>* %4
  %w37 = load double, double* %w
  store double %w37, double* %5
  call void @"V_SWIRL@UUF"(<2 x double>* %p, <2 x double>* %4, double* %5)
  %p38 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false34:                                          ; preds = %false26
  %return40 = call i64 @"eq@III"(i64 %T2, i64 4)
  %335 = icmp ne i64 %return40, 0
  br i1 %335, label %true41, label %false42

true41:                                           ; preds = %false34
  store <2 x double> %pos1, <2 x double>* %6
  %w45 = load double, double* %w
  store double %w45, double* %7
  call void @"V_HORSESHOE@UUF"(<2 x double>* %p, <2 x double>* %6, double* %7)
  %p46 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false42:                                          ; preds = %false34
  %return48 = call i64 @"eq@III"(i64 %T2, i64 5)
  %336 = icmp ne i64 %return48, 0
  br i1 %336, label %true49, label %false50

true49:                                           ; preds = %false42
  store <2 x double> %pos1, <2 x double>* %8
  %w53 = load double, double* %w
  store double %w53, double* %9
  call void @"V_POLAR@UUF"(<2 x double>* %p, <2 x double>* %8, double* %9)
  %p54 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false50:                                          ; preds = %false42
  %return56 = call i64 @"eq@III"(i64 %T2, i64 6)
  %337 = icmp ne i64 %return56, 0
  br i1 %337, label %true57, label %false58

true57:                                           ; preds = %false50
  store <2 x double> %pos1, <2 x double>* %10
  %w61 = load double, double* %w
  store double %w61, double* %11
  call void @"V_HANDKERCHIEF@UUF"(<2 x double>* %p, <2 x double>* %10, double* %11)
  %p62 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false58:                                          ; preds = %false50
  %return64 = call i64 @"eq@III"(i64 %T2, i64 7)
  %338 = icmp ne i64 %return64, 0
  br i1 %338, label %true65, label %false66

true65:                                           ; preds = %false58
  store <2 x double> %pos1, <2 x double>* %12
  %w69 = load double, double* %w
  store double %w69, double* %13
  call void @"V_HEART@UUF"(<2 x double>* %p, <2 x double>* %12, double* %13)
  %p70 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false66:                                          ; preds = %false58
  %return72 = call i64 @"eq@III"(i64 %T2, i64 8)
  %339 = icmp ne i64 %return72, 0
  br i1 %339, label %true73, label %false74

true73:                                           ; preds = %false66
  store <2 x double> %pos1, <2 x double>* %14
  %w77 = load double, double* %w
  store double %w77, double* %15
  call void @"V_DISC@UUF"(<2 x double>* %p, <2 x double>* %14, double* %15)
  %p78 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false74:                                          ; preds = %false66
  %return80 = call i64 @"eq@III"(i64 %T2, i64 9)
  %340 = icmp ne i64 %return80, 0
  br i1 %340, label %true81, label %false82

true81:                                           ; preds = %false74
  store <2 x double> %pos1, <2 x double>* %16
  %w85 = load double, double* %w
  store double %w85, double* %17
  call void @"V_SPIRAL@UUF"(<2 x double>* %p, <2 x double>* %16, double* %17)
  %p86 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false82:                                          ; preds = %false74
  %return88 = call i64 @"eq@III"(i64 %T2, i64 10)
  %341 = icmp ne i64 %return88, 0
  br i1 %341, label %true89, label %false90

true89:                                           ; preds = %false82
  store <2 x double> %pos1, <2 x double>* %18
  %w93 = load double, double* %w
  store double %w93, double* %19
  call void @"V_HIPERBOLIC@UUF"(<2 x double>* %p, <2 x double>* %18, double* %19)
  %p94 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false90:                                          ; preds = %false82
  %return96 = call i64 @"eq@III"(i64 %T2, i64 11)
  %342 = icmp ne i64 %return96, 0
  br i1 %342, label %true97, label %false98

true97:                                           ; preds = %false90
  store <2 x double> %pos1, <2 x double>* %20
  %w101 = load double, double* %w
  store double %w101, double* %21
  call void @"V_DIAMOND@UUF"(<2 x double>* %p, <2 x double>* %20, double* %21)
  %p102 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false98:                                          ; preds = %false90
  %return104 = call i64 @"eq@III"(i64 %T2, i64 12)
  %343 = icmp ne i64 %return104, 0
  br i1 %343, label %true105, label %false106

true105:                                          ; preds = %false98
  store <2 x double> %pos1, <2 x double>* %22
  %w109 = load double, double* %w
  store double %w109, double* %23
  call void @"V_EX@UUF"(<2 x double>* %p, <2 x double>* %22, double* %23)
  %p110 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false106:                                         ; preds = %false98
  %return112 = call i64 @"eq@III"(i64 %T2, i64 13)
  %344 = icmp ne i64 %return112, 0
  br i1 %344, label %true113, label %false114

true113:                                          ; preds = %false106
  store <2 x double> %pos1, <2 x double>* %24
  %w117 = load double, double* %w
  store double %w117, double* %25
  call void @"V_JULIA@UUF"(<2 x double>* %p, <2 x double>* %24, double* %25)
  %p118 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false114:                                         ; preds = %false106
  %return120 = call i64 @"eq@III"(i64 %T2, i64 14)
  %345 = icmp ne i64 %return120, 0
  br i1 %345, label %true121, label %false122

true121:                                          ; preds = %false114
  store <2 x double> %pos1, <2 x double>* %26
  %w125 = load double, double* %w
  store double %w125, double* %27
  call void @"V_BENT@UUF"(<2 x double>* %p, <2 x double>* %26, double* %27)
  %p126 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false122:                                         ; preds = %false114
  %return128 = call i64 @"eq@III"(i64 %T2, i64 15)
  %346 = icmp ne i64 %return128, 0
  br i1 %346, label %true129, label %false130

true129:                                          ; preds = %false122
  store <2 x double> %pos1, <2 x double>* %28
  %w133 = load double, double* %w
  store double %w133, double* %29
  %y134 = load <2 x double>, <2 x double>* %y
  %return135 = call double @"getcomp@FUI"(<2 x double> %y134, i64 0)
  store double %return135, double* %30
  %o136 = load <2 x double>, <2 x double>* %o
  %return137 = call double @"getcomp@FUI"(<2 x double> %o136, i64 0)
  store double %return137, double* %31
  %y138 = load <2 x double>, <2 x double>* %y
  %return139 = call double @"getcomp@FUI"(<2 x double> %y138, i64 1)
  store double %return139, double* %32
  %o140 = load <2 x double>, <2 x double>* %o
  %return141 = call double @"getcomp@FUI"(<2 x double> %o140, i64 1)
  store double %return141, double* %33
  call void @"V_WAVES@UUFFFFF"(<2 x double>* %p, <2 x double>* %28, double* %29, double* %30, double* %31, double* %32, double* %33)
  %p142 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false130:                                         ; preds = %false122
  %return144 = call i64 @"eq@III"(i64 %T2, i64 16)
  %347 = icmp ne i64 %return144, 0
  br i1 %347, label %true145, label %false146

true145:                                          ; preds = %false130
  store <2 x double> %pos1, <2 x double>* %34
  %w149 = load double, double* %w
  store double %w149, double* %35
  call void @"V_FISHEYE@UUF"(<2 x double>* %p, <2 x double>* %34, double* %35)
  %p150 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false146:                                         ; preds = %false130
  %return152 = call i64 @"eq@III"(i64 %T2, i64 17)
  %348 = icmp ne i64 %return152, 0
  br i1 %348, label %true153, label %end9

true153:                                          ; preds = %false146
  store <2 x double> %pos1, <2 x double>* %36
  %w156 = load double, double* %w
  store double %w156, double* %37
  %o157 = load <2 x double>, <2 x double>* %o
  %return158 = call double @"getcomp@FUI"(<2 x double> %o157, i64 0)
  store double %return158, double* %38
  %o159 = load <2 x double>, <2 x double>* %o
  %return160 = call double @"getcomp@FUI"(<2 x double> %o159, i64 1)
  store double %return160, double* %39
  call void @"V_POPCORN@UUFFF"(<2 x double>* %p, <2 x double>* %36, double* %37, double* %38, double* %39)
  %p161 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true164:                                          ; preds = %false13
  store <2 x double> %pos1, <2 x double>* %40
  %w168 = load double, double* %w
  store double %w168, double* %41
  call void @"V_EXPONENTIAL@UUF"(<2 x double>* %p, <2 x double>* %40, double* %41)
  %p169 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false165:                                         ; preds = %false13
  %return171 = call i64 @"eq@III"(i64 %T2, i64 19)
  %349 = icmp ne i64 %return171, 0
  br i1 %349, label %true172, label %false173

true172:                                          ; preds = %false165
  store <2 x double> %pos1, <2 x double>* %42
  %w176 = load double, double* %w
  store double %w176, double* %43
  call void @"V_POWER@UUF"(<2 x double>* %p, <2 x double>* %42, double* %43)
  %p177 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false173:                                         ; preds = %false165
  %return179 = call i64 @"eq@III"(i64 %T2, i64 20)
  %350 = icmp ne i64 %return179, 0
  br i1 %350, label %true180, label %false181

true180:                                          ; preds = %false173
  store <2 x double> %pos1, <2 x double>* %44
  %w184 = load double, double* %w
  store double %w184, double* %45
  call void @"V_COSINE@UUF"(<2 x double>* %p, <2 x double>* %44, double* %45)
  %p185 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false181:                                         ; preds = %false173
  %return187 = call i64 @"eq@III"(i64 %T2, i64 21)
  %351 = icmp ne i64 %return187, 0
  br i1 %351, label %true188, label %false189

true188:                                          ; preds = %false181
  store <2 x double> %pos1, <2 x double>* %46
  %w192 = load double, double* %w
  store double %w192, double* %47
  %o193 = load <2 x double>, <2 x double>* %o
  %return194 = call double @"getcomp@FUI"(<2 x double> %o193, i64 0)
  store double %return194, double* %48
  call void @"V_RINGS@UUFF"(<2 x double>* %p, <2 x double>* %46, double* %47, double* %48)
  %p195 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false189:                                         ; preds = %false181
  %return197 = call i64 @"eq@III"(i64 %T2, i64 22)
  %352 = icmp ne i64 %return197, 0
  br i1 %352, label %true198, label %false199

true198:                                          ; preds = %false189
  store <2 x double> %pos1, <2 x double>* %49
  %w202 = load double, double* %w
  store double %w202, double* %50
  %o203 = load <2 x double>, <2 x double>* %o
  %return204 = call double @"getcomp@FUI"(<2 x double> %o203, i64 0)
  store double %return204, double* %51
  %o205 = load <2 x double>, <2 x double>* %o
  %return206 = call double @"getcomp@FUI"(<2 x double> %o205, i64 1)
  store double %return206, double* %52
  call void @"V_FAN@UUFFF"(<2 x double>* %p, <2 x double>* %49, double* %50, double* %51, double* %52)
  %p207 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false199:                                         ; preds = %false189
  %return209 = call i64 @"eq@III"(i64 %T2, i64 23)
  %353 = icmp ne i64 %return209, 0
  br i1 %353, label %true210, label %false211

true210:                                          ; preds = %false199
  store <2 x double> %pos1, <2 x double>* %53
  %w214 = load double, double* %w
  store double %w214, double* %54
  call void @"V_BUBBLE@UUF"(<2 x double>* %p, <2 x double>* %53, double* %54)
  %p215 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false211:                                         ; preds = %false199
  %return217 = call i64 @"eq@III"(i64 %T2, i64 24)
  %354 = icmp ne i64 %return217, 0
  br i1 %354, label %true218, label %false219

true218:                                          ; preds = %false211
  store <2 x double> %pos1, <2 x double>* %55
  %w222 = load double, double* %w
  store double %w222, double* %56
  call void @"V_CYLINDER@UUF"(<2 x double>* %p, <2 x double>* %55, double* %56)
  %p223 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false219:                                         ; preds = %false211
  %return225 = call i64 @"eq@III"(i64 %T2, i64 25)
  %355 = icmp ne i64 %return225, 0
  br i1 %355, label %true226, label %false227

true226:                                          ; preds = %false219
  store <2 x double> %pos1, <2 x double>* %57
  %w230 = load double, double* %w
  store double %w230, double* %58
  call void @"V_EYEFISH@UUF"(<2 x double>* %p, <2 x double>* %57, double* %58)
  %p231 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false227:                                         ; preds = %false219
  %return233 = call i64 @"eq@III"(i64 %T2, i64 26)
  %356 = icmp ne i64 %return233, 0
  br i1 %356, label %true234, label %false235

true234:                                          ; preds = %false227
  %w237 = load double, double* %w
  store double %w237, double* %59
  call void @"V_BLUR@UF"(<2 x double>* %p, double* %59)
  %p238 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false235:                                         ; preds = %false227
  %return240 = call i64 @"eq@III"(i64 %T2, i64 27)
  %357 = icmp ne i64 %return240, 0
  br i1 %357, label %true241, label %false242

true241:                                          ; preds = %false235
  %prx244 = load i8*, i8** %prx
  %return245 = call i8* @"concat@SSS"(i8* %prx244, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @110, i64 0, i64 0))
  %return246 = call <2 x double> @"chu@US"(i8* %return245)
  store <2 x double> %pos1, <2 x double>* %60
  %w248 = load double, double* %w
  store double %w248, double* %61
  %return250 = call double @"getcomp@FUI"(<2 x double> %return246, i64 0)
  store double %return250, double* %62
  %return252 = call double @"getcomp@FUI"(<2 x double> %return246, i64 1)
  store double %return252, double* %63
  call void @"V_CURL@UUFFF"(<2 x double>* %p, <2 x double>* %60, double* %61, double* %62, double* %63)
  %p253 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false242:                                         ; preds = %false235
  %return255 = call i64 @"eq@III"(i64 %T2, i64 28)
  %358 = icmp ne i64 %return255, 0
  br i1 %358, label %true256, label %false257

true256:                                          ; preds = %false242
  %prx259 = load i8*, i8** %prx
  %return260 = call i8* @"concat@SSS"(i8* %prx259, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @56, i64 0, i64 0))
  %return261 = call <4 x double> @"chp@PS"(i8* %return260)
  store <2 x double> %pos1, <2 x double>* %64
  %w263 = load double, double* %w
  store double %w263, double* %65
  %return265 = call double @"getcomp@FPI"(<4 x double> %return261, i64 0)
  store double %return265, double* %66
  %return267 = call double @"getcomp@FPI"(<4 x double> %return261, i64 1)
  store double %return267, double* %67
  %return269 = call double @"getcomp@FPI"(<4 x double> %return261, i64 2)
  store double %return269, double* %68
  %return271 = call double @"getcomp@FPI"(<4 x double> %return261, i64 3)
  store double %return271, double* %69
  call void @"V_NGON@UUFFFFF"(<2 x double>* %p, <2 x double>* %64, double* %65, double* %66, double* %67, double* %68, double* %69)
  %p272 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false257:                                         ; preds = %false242
  %return274 = call i64 @"eq@III"(i64 %T2, i64 29)
  %359 = icmp ne i64 %return274, 0
  br i1 %359, label %true275, label %false276

true275:                                          ; preds = %false257
  %prx278 = load i8*, i8** %prx
  %return279 = call i8* @"concat@SSS"(i8* %prx278, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @111, i64 0, i64 0))
  %return280 = call <4 x double> @"chp@PS"(i8* %return279)
  store <2 x double> %pos1, <2 x double>* %70
  %w282 = load double, double* %w
  store double %w282, double* %71
  store <4 x double> %return280, <4 x double>* %72
  call void @"V_PDJ@UUFP"(<2 x double>* %p, <2 x double>* %70, double* %71, <4 x double>* %72)
  %p284 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false276:                                         ; preds = %false257
  %return286 = call i64 @"eq@III"(i64 %T2, i64 30)
  %360 = icmp ne i64 %return286, 0
  br i1 %360, label %true287, label %false288

true287:                                          ; preds = %false276
  %prx290 = load i8*, i8** %prx
  %return291 = call i8* @"concat@SSS"(i8* %prx290, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @58, i64 0, i64 0))
  %return292 = call <3 x double> @"chv@VS"(i8* %return291)
  store <2 x double> %pos1, <2 x double>* %73
  %w294 = load double, double* %w
  store double %w294, double* %74
  %return296 = call double @"getcomp@FVI"(<3 x double> %return292, i64 0)
  store double %return296, double* %75
  %return298 = call double @"getcomp@FVI"(<3 x double> %return292, i64 1)
  store double %return298, double* %76
  %return300 = call double @"getcomp@FVI"(<3 x double> %return292, i64 2)
  store double %return300, double* %77
  call void @"V_BLOB@UUFFFF"(<2 x double>* %p, <2 x double>* %73, double* %74, double* %75, double* %76, double* %77)
  %p301 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false288:                                         ; preds = %false276
  %return303 = call i64 @"eq@III"(i64 %T2, i64 31)
  %361 = icmp ne i64 %return303, 0
  br i1 %361, label %true304, label %false305

true304:                                          ; preds = %false288
  %prx307 = load i8*, i8** %prx
  %return308 = call i8* @"concat@SSS"(i8* %prx307, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @59, i64 0, i64 0))
  %return309 = call <2 x double> @"chu@US"(i8* %return308)
  store <2 x double> %pos1, <2 x double>* %78
  %w311 = load double, double* %w
  store double %w311, double* %79
  %return313 = call double @"getcomp@FUI"(<2 x double> %return309, i64 0)
  store double %return313, double* %80
  %return315 = call double @"getcomp@FUI"(<2 x double> %return309, i64 1)
  store double %return315, double* %81
  call void @"V_JULIAN@UUFFF"(<2 x double>* %p, <2 x double>* %78, double* %79, double* %80, double* %81)
  %p316 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false305:                                         ; preds = %false288
  %return318 = call i64 @"eq@III"(i64 %T2, i64 32)
  %362 = icmp ne i64 %return318, 0
  br i1 %362, label %true319, label %false320

true319:                                          ; preds = %false305
  %prx322 = load i8*, i8** %prx
  %return323 = call i8* @"concat@SSS"(i8* %prx322, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @60, i64 0, i64 0))
  %return324 = call <2 x double> @"chu@US"(i8* %return323)
  store <2 x double> %pos1, <2 x double>* %82
  %w326 = load double, double* %w
  store double %w326, double* %83
  %return328 = call double @"getcomp@FUI"(<2 x double> %return324, i64 0)
  store double %return328, double* %84
  %return330 = call double @"getcomp@FUI"(<2 x double> %return324, i64 1)
  store double %return330, double* %85
  call void @"V_JULIASCOPE@UUFFF"(<2 x double>* %p, <2 x double>* %82, double* %83, double* %84, double* %85)
  %p331 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false320:                                         ; preds = %false305
  %return333 = call i64 @"eq@III"(i64 %T2, i64 33)
  %363 = icmp ne i64 %return333, 0
  br i1 %363, label %true334, label %false335

true334:                                          ; preds = %false320
  %w337 = load double, double* %w
  store double %w337, double* %86
  call void @"V_GAUSSIAN_BLUR@UF"(<2 x double>* %p, double* %86)
  %p338 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false335:                                         ; preds = %false320
  %return340 = call i64 @"eq@III"(i64 %T2, i64 34)
  %364 = icmp ne i64 %return340, 0
  br i1 %364, label %true341, label %end9

true341:                                          ; preds = %false335
  %prx343 = load i8*, i8** %prx
  %return344 = call i8* @"concat@SSS"(i8* %prx343, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @61, i64 0, i64 0))
  %return345 = call <2 x double> @"chu@US"(i8* %return344)
  store <2 x double> %pos1, <2 x double>* %87
  %w347 = load double, double* %w
  store double %w347, double* %88
  store <2 x double> %return345, <2 x double>* %89
  call void @"V_FAN2@UUFU"(<2 x double>* %p, <2 x double>* %87, double* %88, <2 x double>* %89)
  %p349 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true352:                                          ; preds = %false8
  %return356 = call i64 @"lt@III"(i64 %T2, i64 52)
  %365 = icmp ne i64 %return356, 0
  br i1 %365, label %true357, label %false358

false353:                                         ; preds = %false8
  %return751 = call i64 @"lt@III"(i64 %T2, i64 88)
  %366 = icmp ne i64 %return751, 0
  br i1 %366, label %true752, label %false753

true357:                                          ; preds = %true352
  %return361 = call i64 @"eq@III"(i64 %T2, i64 35)
  %367 = icmp ne i64 %return361, 0
  br i1 %367, label %true362, label %false363

false358:                                         ; preds = %true352
  %return555 = call i64 @"eq@III"(i64 %T2, i64 52)
  %368 = icmp ne i64 %return555, 0
  br i1 %368, label %true556, label %false557

true362:                                          ; preds = %true357
  %prx365 = load i8*, i8** %prx
  %return366 = call i8* @"concat@SSS"(i8* %prx365, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @112, i64 0, i64 0))
  %return367 = call double @"chf@FS"(i8* %return366)
  store <2 x double> %pos1, <2 x double>* %90
  %w369 = load double, double* %w
  store double %w369, double* %91
  store double %return367, double* %92
  call void @"V_RINGS2@UUFF"(<2 x double>* %p, <2 x double>* %90, double* %91, double* %92)
  %p371 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false363:                                         ; preds = %true357
  %return373 = call i64 @"eq@III"(i64 %T2, i64 36)
  %369 = icmp ne i64 %return373, 0
  br i1 %369, label %true374, label %false375

true374:                                          ; preds = %false363
  %prx377 = load i8*, i8** %prx
  %return378 = call i8* @"concat@SSS"(i8* %prx377, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @63, i64 0, i64 0))
  %return379 = call <2 x double> @"chu@US"(i8* %return378)
  store <2 x double> %pos1, <2 x double>* %93
  %w381 = load double, double* %w
  store double %w381, double* %94
  store <2 x double> %return379, <2 x double>* %95
  call void @"V_RECTANGLES@UUFU"(<2 x double>* %p, <2 x double>* %93, double* %94, <2 x double>* %95)
  %p383 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false375:                                         ; preds = %false363
  %return385 = call i64 @"eq@III"(i64 %T2, i64 37)
  %370 = icmp ne i64 %return385, 0
  br i1 %370, label %true386, label %false387

true386:                                          ; preds = %false375
  %prx389 = load i8*, i8** %prx
  %return390 = call i8* @"concat@SSS"(i8* %prx389, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @64, i64 0, i64 0))
  %return391 = call double @"chf@FS"(i8* %return390)
  store <2 x double> %pos1, <2 x double>* %96
  %w393 = load double, double* %w
  store double %w393, double* %97
  store double %return391, double* %98
  call void @"V_RADIALBLUR@UUFF"(<2 x double>* %p, <2 x double>* %96, double* %97, double* %98)
  %p395 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false387:                                         ; preds = %false375
  %return397 = call i64 @"eq@III"(i64 %T2, i64 38)
  %371 = icmp ne i64 %return397, 0
  br i1 %371, label %true398, label %false399

true398:                                          ; preds = %false387
  %prx401 = load i8*, i8** %prx
  %return402 = call i8* @"concat@SSS"(i8* %prx401, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @65, i64 0, i64 0))
  %return403 = call <3 x double> @"chv@VS"(i8* %return402)
  %w404 = load double, double* %w
  store double %w404, double* %99
  %return406 = call double @"getcomp@FVI"(<3 x double> %return403, i64 0)
  store double %return406, double* %100
  %return408 = call double @"getcomp@FVI"(<3 x double> %return403, i64 1)
  store double %return408, double* %101
  %return410 = call double @"getcomp@FVI"(<3 x double> %return403, i64 2)
  store double %return410, double* %102
  call void @"V_PIE@UFFFF"(<2 x double>* %p, double* %99, double* %100, double* %101, double* %102)
  %p411 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false399:                                         ; preds = %false387
  %return413 = call i64 @"eq@III"(i64 %T2, i64 39)
  %372 = icmp ne i64 %return413, 0
  br i1 %372, label %true414, label %false415

true414:                                          ; preds = %false399
  %w417 = load double, double* %w
  store double %w417, double* %104
  call void @"V_ARCH@UUF"(<2 x double>* %p, <2 x double>* %103, double* %104)
  %p418 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false415:                                         ; preds = %false399
  %return420 = call i64 @"eq@III"(i64 %T2, i64 40)
  %373 = icmp ne i64 %return420, 0
  br i1 %373, label %true421, label %false422

true421:                                          ; preds = %false415
  store <2 x double> %pos1, <2 x double>* %105
  %w425 = load double, double* %w
  store double %w425, double* %106
  call void @"V_TANGENT@UUF"(<2 x double>* %p, <2 x double>* %105, double* %106)
  %p426 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false422:                                         ; preds = %false415
  %return428 = call i64 @"eq@III"(i64 %T2, i64 41)
  %374 = icmp ne i64 %return428, 0
  br i1 %374, label %true429, label %false430

true429:                                          ; preds = %false422
  %w432 = load double, double* %w
  store double %w432, double* %108
  call void @"V_SQUARE@UUF"(<2 x double>* %p, <2 x double>* %107, double* %108)
  %p433 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false430:                                         ; preds = %false422
  %return435 = call i64 @"eq@III"(i64 %T2, i64 42)
  %375 = icmp ne i64 %return435, 0
  br i1 %375, label %true436, label %false437

true436:                                          ; preds = %false430
  store <2 x double> %pos1, <2 x double>* %109
  %w440 = load double, double* %w
  store double %w440, double* %110
  call void @"V_RAYS@UUF"(<2 x double>* %p, <2 x double>* %109, double* %110)
  %p441 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false437:                                         ; preds = %false430
  %return443 = call i64 @"eq@III"(i64 %T2, i64 43)
  %376 = icmp ne i64 %return443, 0
  br i1 %376, label %true444, label %false445

true444:                                          ; preds = %false437
  store <2 x double> %pos1, <2 x double>* %111
  %w448 = load double, double* %w
  store double %w448, double* %112
  call void @"V_BLADE@UUF"(<2 x double>* %p, <2 x double>* %111, double* %112)
  %p449 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false445:                                         ; preds = %false437
  %return451 = call i64 @"eq@III"(i64 %T2, i64 44)
  %377 = icmp ne i64 %return451, 0
  br i1 %377, label %true452, label %false453

true452:                                          ; preds = %false445
  store <2 x double> %pos1, <2 x double>* %113
  %w456 = load double, double* %w
  store double %w456, double* %114
  call void @"V_SECANT2@UUF"(<2 x double>* %p, <2 x double>* %113, double* %114)
  %p457 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false453:                                         ; preds = %false445
  %return459 = call i64 @"eq@III"(i64 %T2, i64 45)
  %378 = icmp ne i64 %return459, 0
  br i1 %378, label %true460, label %false461

true460:                                          ; preds = %false453
  store <2 x double> %pos1, <2 x double>* %115
  %w464 = load double, double* %w
  store double %w464, double* %116
  call void @"V_TWINTRIAN@UUF"(<2 x double>* %p, <2 x double>* %115, double* %116)
  %p465 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false461:                                         ; preds = %false453
  %return467 = call i64 @"eq@III"(i64 %T2, i64 46)
  %379 = icmp ne i64 %return467, 0
  br i1 %379, label %true468, label %false469

true468:                                          ; preds = %false461
  store <2 x double> %pos1, <2 x double>* %117
  %w472 = load double, double* %w
  store double %w472, double* %118
  call void @"V_CROSS@UUF"(<2 x double>* %p, <2 x double>* %117, double* %118)
  %p473 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false469:                                         ; preds = %false461
  %return475 = call i64 @"eq@III"(i64 %T2, i64 47)
  %380 = icmp ne i64 %return475, 0
  br i1 %380, label %true476, label %false477

true476:                                          ; preds = %false469
  %prx479 = load i8*, i8** %prx
  %return480 = call i8* @"concat@SSS"(i8* %prx479, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @66, i64 0, i64 0))
  %return481 = call <2 x double> @"chu@US"(i8* %return480)
  store <2 x double> %pos1, <2 x double>* %119
  %w483 = load double, double* %w
  store double %w483, double* %120
  %return485 = call double @"getcomp@FUI"(<2 x double> %return481, i64 0)
  store double %return485, double* %121
  %return487 = call double @"getcomp@FUI"(<2 x double> %return481, i64 1)
  store double %return487, double* %122
  call void @"V_DISC2_FF@UUFFF"(<2 x double>* %p, <2 x double>* %119, double* %120, double* %121, double* %122)
  %p488 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false477:                                         ; preds = %false469
  %return490 = call i64 @"eq@III"(i64 %T2, i64 48)
  %381 = icmp ne i64 %return490, 0
  br i1 %381, label %true491, label %false492

true491:                                          ; preds = %false477
  %prx494 = load i8*, i8** %prx
  %return495 = call i8* @"concat@SSS"(i8* %prx494, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @68, i64 0, i64 0))
  %return496 = call <3 x double> @"chv@VS"(i8* %return495)
  %return498 = call i8* @"concat@SSS"(i8* %prx494, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @113, i64 0, i64 0))
  %return499 = call <3 x double> @"chv@VS"(i8* %return498)
  store <2 x double> %pos1, <2 x double>* %123
  %w501 = load double, double* %w
  store double %w501, double* %124
  %return503 = call double @"getcomp@FVI"(<3 x double> %return496, i64 0)
  store double %return503, double* %125
  %return505 = call double @"getcomp@FVI"(<3 x double> %return496, i64 1)
  store double %return505, double* %126
  %return507 = call double @"getcomp@FVI"(<3 x double> %return496, i64 2)
  store double %return507, double* %127
  store <3 x double> %return499, <3 x double>* %128
  call void @"V_SUPERSHAPE@UUFFFFV"(<2 x double>* %p, <2 x double>* %123, double* %124, double* %125, double* %126, double* %127, <3 x double>* %128)
  %p509 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false492:                                         ; preds = %false477
  %return511 = call i64 @"eq@III"(i64 %T2, i64 49)
  %382 = icmp ne i64 %return511, 0
  br i1 %382, label %true512, label %false513

true512:                                          ; preds = %false492
  %prx515 = load i8*, i8** %prx
  %return516 = call i8* @"concat@SSS"(i8* %prx515, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @70, i64 0, i64 0))
  %return517 = call <2 x double> @"chu@US"(i8* %return516)
  store <2 x double> %pos1, <2 x double>* %129
  %w519 = load double, double* %w
  store double %w519, double* %130
  %return521 = call double @"getcomp@FUI"(<2 x double> %return517, i64 0)
  store double %return521, double* %131
  %return523 = call double @"getcomp@FUI"(<2 x double> %return517, i64 1)
  store double %return523, double* %132
  call void @"V_FLOWER@UUFFF"(<2 x double>* %p, <2 x double>* %129, double* %130, double* %131, double* %132)
  %p524 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false513:                                         ; preds = %false492
  %return526 = call i64 @"eq@III"(i64 %T2, i64 50)
  %383 = icmp ne i64 %return526, 0
  br i1 %383, label %true527, label %false528

true527:                                          ; preds = %false513
  %prx530 = load i8*, i8** %prx
  %return531 = call i8* @"concat@SSS"(i8* %prx530, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @71, i64 0, i64 0))
  %return532 = call <2 x double> @"chu@US"(i8* %return531)
  store <2 x double> %pos1, <2 x double>* %133
  %w534 = load double, double* %w
  store double %w534, double* %134
  %return536 = call double @"getcomp@FUI"(<2 x double> %return532, i64 0)
  store double %return536, double* %135
  %return538 = call double @"getcomp@FUI"(<2 x double> %return532, i64 1)
  store double %return538, double* %136
  call void @"V_CONIC@UUFFF"(<2 x double>* %p, <2 x double>* %133, double* %134, double* %135, double* %136)
  %p539 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false528:                                         ; preds = %false513
  %return541 = call i64 @"eq@III"(i64 %T2, i64 51)
  %384 = icmp ne i64 %return541, 0
  br i1 %384, label %true542, label %end9

true542:                                          ; preds = %false528
  %prx544 = load i8*, i8** %prx
  %return545 = call i8* @"concat@SSS"(i8* %prx544, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @72, i64 0, i64 0))
  %return546 = call <2 x double> @"chu@US"(i8* %return545)
  store <2 x double> %pos1, <2 x double>* %137
  %w548 = load double, double* %w
  store double %w548, double* %138
  %return550 = call double @"getcomp@FUI"(<2 x double> %return546, i64 0)
  store double %return550, double* %139
  %return552 = call double @"getcomp@FUI"(<2 x double> %return546, i64 1)
  store double %return552, double* %140
  call void @"V_PARABOLA@UUFFF"(<2 x double>* %p, <2 x double>* %137, double* %138, double* %139, double* %140)
  %p553 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true556:                                          ; preds = %false358
  %prx559 = load i8*, i8** %prx
  %return560 = call i8* @"concat@SSS"(i8* %prx559, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @114, i64 0, i64 0))
  %return561 = call <2 x double> @"chu@US"(i8* %return560)
  store <2 x double> %pos1, <2 x double>* %141
  %w563 = load double, double* %w
  store double %w563, double* %142
  store <2 x double> %return561, <2 x double>* %143
  call void @"V_BENT2@UUFU"(<2 x double>* %p, <2 x double>* %141, double* %142, <2 x double>* %143)
  %p565 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false557:                                         ; preds = %false358
  %return567 = call i64 @"eq@III"(i64 %T2, i64 53)
  %385 = icmp ne i64 %return567, 0
  br i1 %385, label %true568, label %false569

true568:                                          ; preds = %false557
  %prx571 = load i8*, i8** %prx
  %return572 = call i8* @"concat@SSS"(i8* %prx571, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @115, i64 0, i64 0))
  %return573 = call double @"chf@FS"(i8* %return572)
  store <2 x double> %pos1, <2 x double>* %144
  %w575 = load double, double* %w
  store double %w575, double* %145
  store double %return573, double* %146
  call void @"V_BIPOLAR@UUFF"(<2 x double>* %p, <2 x double>* %144, double* %145, double* %146)
  %p577 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false569:                                         ; preds = %false557
  %return579 = call i64 @"eq@III"(i64 %T2, i64 54)
  %386 = icmp ne i64 %return579, 0
  br i1 %386, label %true580, label %false581

true580:                                          ; preds = %false569
  store <2 x double> %pos1, <2 x double>* %147
  %w584 = load double, double* %w
  store double %w584, double* %148
  call void @"V_BOARDERS@UUF"(<2 x double>* %p, <2 x double>* %147, double* %148)
  %p585 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false581:                                         ; preds = %false569
  %return587 = call i64 @"eq@III"(i64 %T2, i64 55)
  %387 = icmp ne i64 %return587, 0
  br i1 %387, label %true588, label %false589

true588:                                          ; preds = %false581
  store <2 x double> %pos1, <2 x double>* %149
  %w592 = load double, double* %w
  store double %w592, double* %150
  call void @"V_BUTTERFLY@UUF"(<2 x double>* %p, <2 x double>* %149, double* %150)
  %p593 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false589:                                         ; preds = %false581
  %return595 = call i64 @"eq@III"(i64 %T2, i64 56)
  %388 = icmp ne i64 %return595, 0
  br i1 %388, label %true596, label %false597

true596:                                          ; preds = %false589
  %prx599 = load i8*, i8** %prx
  %return600 = call i8* @"concat@SSS"(i8* %prx599, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @116, i64 0, i64 0))
  %return601 = call double @"chf@FS"(i8* %return600)
  store <2 x double> %pos1, <2 x double>* %151
  %w603 = load double, double* %w
  store double %w603, double* %152
  store double %return601, double* %153
  call void @"V_CELL@UUFF"(<2 x double>* %p, <2 x double>* %151, double* %152, double* %153)
  %p605 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false597:                                         ; preds = %false589
  %return607 = call i64 @"eq@III"(i64 %T2, i64 57)
  %389 = icmp ne i64 %return607, 0
  br i1 %389, label %true608, label %false609

true608:                                          ; preds = %false597
  %prx611 = load i8*, i8** %prx
  %return612 = call i8* @"concat@SSS"(i8* %prx611, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @76, i64 0, i64 0))
  %return613 = call <3 x double> @"chv@VS"(i8* %return612)
  store <2 x double> %pos1, <2 x double>* %154
  %w615 = load double, double* %w
  store double %w615, double* %155
  %return617 = call double @"getcomp@FVI"(<3 x double> %return613, i64 0)
  store double %return617, double* %156
  %return619 = call double @"getcomp@FVI"(<3 x double> %return613, i64 1)
  store double %return619, double* %157
  %return621 = call double @"getcomp@FVI"(<3 x double> %return613, i64 2)
  store double %return621, double* %158
  call void @"V_CPOW@UUFFFF"(<2 x double>* %p, <2 x double>* %154, double* %155, double* %156, double* %157, double* %158)
  %p622 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false609:                                         ; preds = %false597
  %return624 = call i64 @"eq@III"(i64 %T2, i64 58)
  %390 = icmp ne i64 %return624, 0
  br i1 %390, label %true625, label %false626

true625:                                          ; preds = %false609
  store <2 x double> %pos1, <2 x double>* %159
  %w629 = load double, double* %w
  store double %w629, double* %160
  call void @"V_EDISC@UUF"(<2 x double>* %p, <2 x double>* %159, double* %160)
  %p630 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false626:                                         ; preds = %false609
  %return632 = call i64 @"eq@III"(i64 %T2, i64 59)
  %391 = icmp ne i64 %return632, 0
  br i1 %391, label %true633, label %false634

true633:                                          ; preds = %false626
  store <2 x double> %pos1, <2 x double>* %161
  %w637 = load double, double* %w
  store double %w637, double* %162
  call void @"V_ELLIPTIC@UUF"(<2 x double>* %p, <2 x double>* %161, double* %162)
  %p638 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false634:                                         ; preds = %false626
  %return640 = call i64 @"eq@III"(i64 %T2, i64 60)
  %392 = icmp ne i64 %return640, 0
  br i1 %392, label %true641, label %false642

true641:                                          ; preds = %false634
  store <2 x double> %pos1, <2 x double>* %163
  %w645 = load double, double* %w
  store double %w645, double* %164
  call void @"V_NOISE@UUF"(<2 x double>* %p, <2 x double>* %163, double* %164)
  %p646 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false642:                                         ; preds = %false634
  %return648 = call i64 @"eq@III"(i64 %T2, i64 61)
  %393 = icmp ne i64 %return648, 0
  br i1 %393, label %true649, label %false650

true649:                                          ; preds = %false642
  %prx652 = load i8*, i8** %prx
  %return653 = call i8* @"concat@SSS"(i8* %prx652, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @117, i64 0, i64 0))
  %return654 = call double @"chf@FS"(i8* %return653)
  store <2 x double> %pos1, <2 x double>* %165
  %w656 = load double, double* %w
  store double %w656, double* %166
  store double %return654, double* %167
  call void @"V_ESCHER@UUFF"(<2 x double>* %p, <2 x double>* %165, double* %166, double* %167)
  %p658 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false650:                                         ; preds = %false642
  %return660 = call i64 @"eq@III"(i64 %T2, i64 62)
  %394 = icmp ne i64 %return660, 0
  br i1 %394, label %true661, label %false662

true661:                                          ; preds = %false650
  store <2 x double> %pos1, <2 x double>* %168
  %w665 = load double, double* %w
  store double %w665, double* %169
  call void @"V_FOCI@UUF"(<2 x double>* %p, <2 x double>* %168, double* %169)
  %p666 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false662:                                         ; preds = %false650
  %return668 = call i64 @"eq@III"(i64 %T2, i64 63)
  %395 = icmp ne i64 %return668, 0
  br i1 %395, label %true669, label %false670

true669:                                          ; preds = %false662
  %prx672 = load i8*, i8** %prx
  %return673 = call i8* @"concat@SSS"(i8* %prx672, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @78, i64 0, i64 0))
  %return674 = call <3 x double> @"chv@VS"(i8* %return673)
  %return676 = call i8* @"concat@SSS"(i8* %prx672, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @79, i64 0, i64 0))
  %return677 = call <2 x double> @"chu@US"(i8* %return676)
  store <2 x double> %pos1, <2 x double>* %170
  %w679 = load double, double* %w
  store double %w679, double* %171
  %return681 = call double @"getcomp@FVI"(<3 x double> %return674, i64 0)
  store double %return681, double* %172
  %return683 = call double @"getcomp@FVI"(<3 x double> %return674, i64 1)
  store double %return683, double* %173
  %return685 = call double @"getcomp@FVI"(<3 x double> %return674, i64 2)
  store double %return685, double* %174
  store <2 x double> %return677, <2 x double>* %175
  call void @"V_LAZYSUSAN@UUFFFFU"(<2 x double>* %p, <2 x double>* %170, double* %171, double* %172, double* %173, double* %174, <2 x double>* %175)
  %p687 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false670:                                         ; preds = %false662
  %return689 = call i64 @"eq@III"(i64 %T2, i64 64)
  %396 = icmp ne i64 %return689, 0
  br i1 %396, label %true690, label %false691

true690:                                          ; preds = %false670
  store <2 x double> %pos1, <2 x double>* %176
  %w694 = load double, double* %w
  store double %w694, double* %177
  call void @"V_LOONIE@UUF"(<2 x double>* %p, <2 x double>* %176, double* %177)
  %p695 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false691:                                         ; preds = %false670
  %return697 = call i64 @"eq@III"(i64 %T2, i64 66)
  %397 = icmp ne i64 %return697, 0
  br i1 %397, label %true698, label %false699

true698:                                          ; preds = %false691
  %prx701 = load i8*, i8** %prx
  %return702 = call i8* @"concat@SSS"(i8* %prx701, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @118, i64 0, i64 0))
  %return703 = call <2 x double> @"chu@US"(i8* %return702)
  store <2 x double> %pos1, <2 x double>* %178
  %w705 = load double, double* %w
  store double %w705, double* %179
  store <2 x double> %return703, <2 x double>* %180
  call void @"V_MODULUS@UUFU"(<2 x double>* %p, <2 x double>* %178, double* %179, <2 x double>* %180)
  %p707 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false699:                                         ; preds = %false691
  %return709 = call i64 @"eq@III"(i64 %T2, i64 67)
  %398 = icmp ne i64 %return709, 0
  br i1 %398, label %true710, label %false711

true710:                                          ; preds = %false699
  %prx713 = load i8*, i8** %prx
  %return714 = call i8* @"concat@SSS"(i8* %prx713, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @81, i64 0, i64 0))
  %return715 = call <4 x double> @"chp@PS"(i8* %return714)
  store <2 x double> %pos1, <2 x double>* %181
  %w717 = load double, double* %w
  store double %w717, double* %182
  %return719 = call double @"getcomp@FPI"(<4 x double> %return715, i64 0)
  store double %return719, double* %183
  %return721 = call double @"getcomp@FPI"(<4 x double> %return715, i64 1)
  store double %return721, double* %184
  %return723 = call double @"getcomp@FPI"(<4 x double> %return715, i64 2)
  store double %return723, double* %185
  %return725 = call double @"getcomp@FPI"(<4 x double> %return715, i64 3)
  store double %return725, double* %186
  call void @"V_OSCOPE@UUFFFFF"(<2 x double>* %p, <2 x double>* %181, double* %182, double* %183, double* %184, double* %185, double* %186)
  %p726 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false711:                                         ; preds = %false699
  %return728 = call i64 @"eq@III"(i64 %T2, i64 68)
  %399 = icmp ne i64 %return728, 0
  br i1 %399, label %true729, label %false730

true729:                                          ; preds = %false711
  store <2 x double> %pos1, <2 x double>* %187
  %w733 = load double, double* %w
  store double %w733, double* %188
  call void @"V_POLAR2@UUF"(<2 x double>* %p, <2 x double>* %187, double* %188)
  %p734 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false730:                                         ; preds = %false711
  %return736 = call i64 @"eq@III"(i64 %T2, i64 69)
  %400 = icmp ne i64 %return736, 0
  br i1 %400, label %true737, label %end9

true737:                                          ; preds = %false730
  %prx739 = load i8*, i8** %prx
  %return740 = call i8* @"concat@SSS"(i8* %prx739, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @119, i64 0, i64 0))
  %return741 = call double @"chf@FS"(i8* %return740)
  %return743 = call i8* @"concat@SSS"(i8* %prx739, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @120, i64 0, i64 0))
  %return744 = call <2 x double> @"chu@US"(i8* %return743)
  store <2 x double> %pos1, <2 x double>* %189
  %w746 = load double, double* %w
  store double %w746, double* %190
  store double %return741, double* %191
  store <2 x double> %return744, <2 x double>* %192
  call void @"V_POPCORN2@UUFFU"(<2 x double>* %p, <2 x double>* %189, double* %190, double* %191, <2 x double>* %192)
  %p749 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true752:                                          ; preds = %false353
  %return756 = call i64 @"eq@III"(i64 %T2, i64 70)
  %401 = icmp ne i64 %return756, 0
  br i1 %401, label %true757, label %false758

false753:                                         ; preds = %false353
  %return976 = call i64 @"eq@III"(i64 %T2, i64 88)
  %402 = icmp ne i64 %return976, 0
  br i1 %402, label %true977, label %false978

true757:                                          ; preds = %true752
  store <2 x double> %pos1, <2 x double>* %193
  %w761 = load double, double* %w
  store double %w761, double* %194
  call void @"V_SCRY@UUF"(<2 x double>* %p, <2 x double>* %193, double* %194)
  %p762 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false758:                                         ; preds = %true752
  %return764 = call i64 @"eq@III"(i64 %T2, i64 71)
  %403 = icmp ne i64 %return764, 0
  br i1 %403, label %true765, label %false766

true765:                                          ; preds = %false758
  %prx768 = load i8*, i8** %prx
  %return769 = call i8* @"concat@SSS"(i8* %prx768, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @121, i64 0, i64 0))
  %return770 = call <2 x double> @"chu@US"(i8* %return769)
  %return772 = call i8* @"concat@SSS"(i8* %prx768, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @122, i64 0, i64 0))
  %return773 = call <2 x double> @"chu@US"(i8* %return772)
  store <2 x double> %pos1, <2 x double>* %195
  %w775 = load double, double* %w
  store double %w775, double* %196
  store <2 x double> %return770, <2 x double>* %197
  store <2 x double> %return773, <2 x double>* %198
  call void @"V_SEPARATION@UUFUU"(<2 x double>* %p, <2 x double>* %195, double* %196, <2 x double>* %197, <2 x double>* %198)
  %p778 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false766:                                         ; preds = %false758
  %return780 = call i64 @"eq@III"(i64 %T2, i64 72)
  %404 = icmp ne i64 %return780, 0
  br i1 %404, label %true781, label %false782

true781:                                          ; preds = %false766
  %prx784 = load i8*, i8** %prx
  %return785 = call i8* @"concat@SSS"(i8* %prx784, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @123, i64 0, i64 0))
  %return786 = call <2 x double> @"chu@US"(i8* %return785)
  store <2 x double> %pos1, <2 x double>* %199
  %w788 = load double, double* %w
  store double %w788, double* %200
  store <2 x double> %return786, <2 x double>* %201
  call void @"V_SPLIT@UUFU"(<2 x double>* %p, <2 x double>* %199, double* %200, <2 x double>* %201)
  %p790 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false782:                                         ; preds = %false766
  %return792 = call i64 @"eq@III"(i64 %T2, i64 73)
  %405 = icmp ne i64 %return792, 0
  br i1 %405, label %true793, label %false794

true793:                                          ; preds = %false782
  %prx796 = load i8*, i8** %prx
  %return797 = call i8* @"concat@SSS"(i8* %prx796, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @124, i64 0, i64 0))
  %return798 = call <2 x double> @"chu@US"(i8* %return797)
  store <2 x double> %pos1, <2 x double>* %202
  %w800 = load double, double* %w
  store double %w800, double* %203
  store <2 x double> %return798, <2 x double>* %204
  call void @"V_SPLITS@UUFU"(<2 x double>* %p, <2 x double>* %202, double* %203, <2 x double>* %204)
  %p802 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false794:                                         ; preds = %false782
  %return804 = call i64 @"eq@III"(i64 %T2, i64 74)
  %406 = icmp ne i64 %return804, 0
  br i1 %406, label %true805, label %false806

true805:                                          ; preds = %false794
  %prx808 = load i8*, i8** %prx
  %return809 = call i8* @"concat@SSS"(i8* %prx808, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @88, i64 0, i64 0))
  %return810 = call <2 x double> @"chu@US"(i8* %return809)
  store <2 x double> %pos1, <2 x double>* %205
  %w812 = load double, double* %w
  store double %w812, double* %206
  %return814 = call double @"getcomp@FUI"(<2 x double> %return810, i64 0)
  store double %return814, double* %207
  %return816 = call double @"getcomp@FUI"(<2 x double> %return810, i64 1)
  store double %return816, double* %208
  call void @"V_STRIPES@UUFFF"(<2 x double>* %p, <2 x double>* %205, double* %206, double* %207, double* %208)
  %p817 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false806:                                         ; preds = %false794
  %return819 = call i64 @"eq@III"(i64 %T2, i64 75)
  %407 = icmp ne i64 %return819, 0
  br i1 %407, label %true820, label %false821

true820:                                          ; preds = %false806
  %prx823 = load i8*, i8** %prx
  %return824 = call i8* @"concat@SSS"(i8* %prx823, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @89, i64 0, i64 0))
  %return825 = call <4 x double> @"chp@PS"(i8* %return824)
  store <2 x double> %pos1, <2 x double>* %209
  %w827 = load double, double* %w
  store double %w827, double* %210
  %return829 = call double @"getcomp@FPI"(<4 x double> %return825, i64 0)
  store double %return829, double* %211
  %return831 = call double @"getcomp@FPI"(<4 x double> %return825, i64 1)
  store double %return831, double* %212
  %return833 = call double @"getcomp@FPI"(<4 x double> %return825, i64 2)
  store double %return833, double* %213
  %return835 = call double @"getcomp@FPI"(<4 x double> %return825, i64 3)
  store double %return835, double* %214
  call void @"V_WEDGE@UUFFFFF"(<2 x double>* %p, <2 x double>* %209, double* %210, double* %211, double* %212, double* %213, double* %214)
  %p836 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false821:                                         ; preds = %false806
  %return838 = call i64 @"eq@III"(i64 %T2, i64 76)
  %408 = icmp ne i64 %return838, 0
  br i1 %408, label %true839, label %false840

true839:                                          ; preds = %false821
  %prx842 = load i8*, i8** %prx
  %return843 = call i8* @"concat@SSS"(i8* %prx842, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @90, i64 0, i64 0))
  %return844 = call <4 x double> @"chp@PS"(i8* %return843)
  store <2 x double> %pos1, <2 x double>* %215
  %w846 = load double, double* %w
  store double %w846, double* %216
  %return848 = call double @"getcomp@FPI"(<4 x double> %return844, i64 0)
  store double %return848, double* %217
  %return850 = call double @"getcomp@FPI"(<4 x double> %return844, i64 1)
  store double %return850, double* %218
  %return852 = call double @"getcomp@FPI"(<4 x double> %return844, i64 2)
  store double %return852, double* %219
  %return854 = call double @"getcomp@FPI"(<4 x double> %return844, i64 3)
  store double %return854, double* %220
  call void @"V_WEDGEJULIA@UUFFFFF"(<2 x double>* %p, <2 x double>* %215, double* %216, double* %217, double* %218, double* %219, double* %220)
  %p855 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false840:                                         ; preds = %false821
  %return857 = call i64 @"eq@III"(i64 %T2, i64 77)
  %409 = icmp ne i64 %return857, 0
  br i1 %409, label %true858, label %false859

true858:                                          ; preds = %false840
  %prx861 = load i8*, i8** %prx
  %return862 = call i8* @"concat@SSS"(i8* %prx861, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @91, i64 0, i64 0))
  %return863 = call <4 x double> @"chp@PS"(i8* %return862)
  store <2 x double> %pos1, <2 x double>* %221
  %w865 = load double, double* %w
  store double %w865, double* %222
  %return867 = call double @"getcomp@FPI"(<4 x double> %return863, i64 0)
  store double %return867, double* %223
  %return869 = call double @"getcomp@FPI"(<4 x double> %return863, i64 1)
  store double %return869, double* %224
  %return871 = call double @"getcomp@FPI"(<4 x double> %return863, i64 2)
  store double %return871, double* %225
  %return873 = call double @"getcomp@FPI"(<4 x double> %return863, i64 3)
  store double %return873, double* %226
  call void @"V_WEDGESPH@UUFFFFF"(<2 x double>* %p, <2 x double>* %221, double* %222, double* %223, double* %224, double* %225, double* %226)
  %p874 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false859:                                         ; preds = %false840
  %return876 = call i64 @"eq@III"(i64 %T2, i64 78)
  %410 = icmp ne i64 %return876, 0
  br i1 %410, label %true877, label %false878

true877:                                          ; preds = %false859
  %prx880 = load i8*, i8** %prx
  %return881 = call i8* @"concat@SSS"(i8* %prx880, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @92, i64 0, i64 0))
  %return882 = call <2 x double> @"chu@US"(i8* %return881)
  store <2 x double> %pos1, <2 x double>* %227
  %w884 = load double, double* %w
  store double %w884, double* %228
  %return886 = call double @"getcomp@FUI"(<2 x double> %return882, i64 0)
  store double %return886, double* %229
  %return888 = call double @"getcomp@FUI"(<2 x double> %return882, i64 1)
  store double %return888, double* %230
  call void @"V_WHORL@UUFFF"(<2 x double>* %p, <2 x double>* %227, double* %228, double* %229, double* %230)
  %p889 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false878:                                         ; preds = %false859
  %return891 = call i64 @"eq@III"(i64 %T2, i64 79)
  %411 = icmp ne i64 %return891, 0
  br i1 %411, label %true892, label %false893

true892:                                          ; preds = %false878
  %prx895 = load i8*, i8** %prx
  %return896 = call i8* @"concat@SSS"(i8* %prx895, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @125, i64 0, i64 0))
  %return897 = call <2 x double> @"chu@US"(i8* %return896)
  %return899 = call i8* @"concat@SSS"(i8* %prx895, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @126, i64 0, i64 0))
  %return900 = call <2 x double> @"chu@US"(i8* %return899)
  store <2 x double> %pos1, <2 x double>* %231
  %w902 = load double, double* %w
  store double %w902, double* %232
  store <2 x double> %return897, <2 x double>* %233
  store <2 x double> %return900, <2 x double>* %234
  call void @"V_WAVES2@UUFUU"(<2 x double>* %p, <2 x double>* %231, double* %232, <2 x double>* %233, <2 x double>* %234)
  %p905 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false893:                                         ; preds = %false878
  %return907 = call i64 @"eq@III"(i64 %T2, i64 80)
  %412 = icmp ne i64 %return907, 0
  br i1 %412, label %true908, label %false909

true908:                                          ; preds = %false893
  store <2 x double> %pos1, <2 x double>* %235
  %w912 = load double, double* %w
  store double %w912, double* %236
  call void @"V_EXP@UUF"(<2 x double>* %p, <2 x double>* %235, double* %236)
  %p913 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false909:                                         ; preds = %false893
  %return915 = call i64 @"eq@III"(i64 %T2, i64 81)
  %413 = icmp ne i64 %return915, 0
  br i1 %413, label %true916, label %false917

true916:                                          ; preds = %false909
  store <2 x double> %pos1, <2 x double>* %237
  %w920 = load double, double* %w
  store double %w920, double* %238
  call void @"V_LOG@UUF"(<2 x double>* %p, <2 x double>* %237, double* %238)
  %p921 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false917:                                         ; preds = %false909
  %return923 = call i64 @"eq@III"(i64 %T2, i64 82)
  %414 = icmp ne i64 %return923, 0
  br i1 %414, label %true924, label %false925

true924:                                          ; preds = %false917
  %f3c927 = load i64, i64* %f3c
  store i64 %f3c927, i64* %239
  store <2 x double> %pos1, <2 x double>* %240
  %w929 = load double, double* %w
  store double %w929, double* %241
  call void @"V_SIN@IUUF"(i64* %239, <2 x double>* %p, <2 x double>* %240, double* %241)
  %p930 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false925:                                         ; preds = %false917
  %return932 = call i64 @"eq@III"(i64 %T2, i64 83)
  %415 = icmp ne i64 %return932, 0
  br i1 %415, label %true933, label %false934

true933:                                          ; preds = %false925
  %f3c936 = load i64, i64* %f3c
  store i64 %f3c936, i64* %242
  store <2 x double> %pos1, <2 x double>* %243
  %w938 = load double, double* %w
  store double %w938, double* %244
  call void @"V_COS@IUUF"(i64* %242, <2 x double>* %p, <2 x double>* %243, double* %244)
  %p939 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false934:                                         ; preds = %false925
  %return941 = call i64 @"eq@III"(i64 %T2, i64 84)
  %416 = icmp ne i64 %return941, 0
  br i1 %416, label %true942, label %false943

true942:                                          ; preds = %false934
  %f3c945 = load i64, i64* %f3c
  store i64 %f3c945, i64* %245
  store <2 x double> %pos1, <2 x double>* %246
  %w947 = load double, double* %w
  store double %w947, double* %247
  call void @"V_TAN@IUUF"(i64* %245, <2 x double>* %p, <2 x double>* %246, double* %247)
  %p948 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false943:                                         ; preds = %false934
  %return950 = call i64 @"eq@III"(i64 %T2, i64 85)
  %417 = icmp ne i64 %return950, 0
  br i1 %417, label %true951, label %false952

true951:                                          ; preds = %false943
  %f3c954 = load i64, i64* %f3c
  store i64 %f3c954, i64* %248
  store <2 x double> %pos1, <2 x double>* %249
  %w956 = load double, double* %w
  store double %w956, double* %250
  call void @"V_SEC@IUUF"(i64* %248, <2 x double>* %p, <2 x double>* %249, double* %250)
  %p957 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false952:                                         ; preds = %false943
  %return959 = call i64 @"eq@III"(i64 %T2, i64 86)
  %418 = icmp ne i64 %return959, 0
  br i1 %418, label %true960, label %false961

true960:                                          ; preds = %false952
  %f3c963 = load i64, i64* %f3c
  store i64 %f3c963, i64* %251
  store <2 x double> %pos1, <2 x double>* %252
  %w965 = load double, double* %w
  store double %w965, double* %253
  call void @"V_CSC@IUUF"(i64* %251, <2 x double>* %p, <2 x double>* %252, double* %253)
  %p966 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false961:                                         ; preds = %false952
  %return968 = call i64 @"eq@III"(i64 %T2, i64 87)
  %419 = icmp ne i64 %return968, 0
  br i1 %419, label %true969, label %end9

true969:                                          ; preds = %false961
  %f3c971 = load i64, i64* %f3c
  store i64 %f3c971, i64* %254
  store <2 x double> %pos1, <2 x double>* %255
  %w973 = load double, double* %w
  store double %w973, double* %256
  call void @"V_COT@IUUF"(i64* %254, <2 x double>* %p, <2 x double>* %255, double* %256)
  %p974 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true977:                                          ; preds = %false753
  %f3c980 = load i64, i64* %f3c
  store i64 %f3c980, i64* %257
  store <2 x double> %pos1, <2 x double>* %258
  %w982 = load double, double* %w
  store double %w982, double* %259
  call void @"V_SINH@IUUF"(i64* %257, <2 x double>* %p, <2 x double>* %258, double* %259)
  %p983 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false978:                                         ; preds = %false753
  %return985 = call i64 @"eq@III"(i64 %T2, i64 89)
  %420 = icmp ne i64 %return985, 0
  br i1 %420, label %true986, label %false987

true986:                                          ; preds = %false978
  %f3c989 = load i64, i64* %f3c
  store i64 %f3c989, i64* %260
  store <2 x double> %pos1, <2 x double>* %261
  %w991 = load double, double* %w
  store double %w991, double* %262
  call void @"V_COSH@IUUF"(i64* %260, <2 x double>* %p, <2 x double>* %261, double* %262)
  %p992 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false987:                                         ; preds = %false978
  %return994 = call i64 @"eq@III"(i64 %T2, i64 90)
  %421 = icmp ne i64 %return994, 0
  br i1 %421, label %true995, label %false996

true995:                                          ; preds = %false987
  %f3c998 = load i64, i64* %f3c
  store i64 %f3c998, i64* %263
  store <2 x double> %pos1, <2 x double>* %264
  %w1000 = load double, double* %w
  store double %w1000, double* %265
  call void @"V_TANH@IUUF"(i64* %263, <2 x double>* %p, <2 x double>* %264, double* %265)
  %p1001 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false996:                                         ; preds = %false987
  %return1003 = call i64 @"eq@III"(i64 %T2, i64 91)
  %422 = icmp ne i64 %return1003, 0
  br i1 %422, label %true1004, label %false1005

true1004:                                         ; preds = %false996
  %f3c1007 = load i64, i64* %f3c
  store i64 %f3c1007, i64* %266
  store <2 x double> %pos1, <2 x double>* %267
  %w1009 = load double, double* %w
  store double %w1009, double* %268
  call void @"V_SECH@IUUF"(i64* %266, <2 x double>* %p, <2 x double>* %267, double* %268)
  %p1010 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1005:                                        ; preds = %false996
  %return1012 = call i64 @"eq@III"(i64 %T2, i64 92)
  %423 = icmp ne i64 %return1012, 0
  br i1 %423, label %true1013, label %false1014

true1013:                                         ; preds = %false1005
  %f3c1016 = load i64, i64* %f3c
  store i64 %f3c1016, i64* %269
  store <2 x double> %pos1, <2 x double>* %270
  %w1018 = load double, double* %w
  store double %w1018, double* %271
  call void @"V_CSCH@IUUF"(i64* %269, <2 x double>* %p, <2 x double>* %270, double* %271)
  %p1019 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1014:                                        ; preds = %false1005
  %return1021 = call i64 @"eq@III"(i64 %T2, i64 93)
  %424 = icmp ne i64 %return1021, 0
  br i1 %424, label %true1022, label %false1023

true1022:                                         ; preds = %false1014
  %f3c1025 = load i64, i64* %f3c
  store i64 %f3c1025, i64* %272
  store <2 x double> %pos1, <2 x double>* %273
  %w1027 = load double, double* %w
  store double %w1027, double* %274
  call void @"V_COTH@IUUF"(i64* %272, <2 x double>* %p, <2 x double>* %273, double* %274)
  %p1028 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1023:                                        ; preds = %false1014
  %return1030 = call i64 @"eq@III"(i64 %T2, i64 94)
  %425 = icmp ne i64 %return1030, 0
  br i1 %425, label %true1031, label %false1032

true1031:                                         ; preds = %false1023
  %prx1034 = load i8*, i8** %prx
  %return1035 = call i8* @"concat@SSS"(i8* %prx1034, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @95, i64 0, i64 0))
  %return1036 = call <4 x double> @"chp@PS"(i8* %return1035)
  store <2 x double> %pos1, <2 x double>* %275
  %w1038 = load double, double* %w
  store double %w1038, double* %276
  %return1040 = call double @"getcomp@FPI"(<4 x double> %return1036, i64 0)
  store double %return1040, double* %277
  %return1042 = call double @"getcomp@FPI"(<4 x double> %return1036, i64 1)
  store double %return1042, double* %278
  %return1044 = call double @"getcomp@FPI"(<4 x double> %return1036, i64 2)
  store double %return1044, double* %279
  %return1046 = call double @"getcomp@FPI"(<4 x double> %return1036, i64 3)
  store double %return1046, double* %280
  call void @"V_AUGER@UUFFFFF"(<2 x double>* %p, <2 x double>* %275, double* %276, double* %277, double* %278, double* %279, double* %280)
  %p1047 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1032:                                        ; preds = %false1023
  %return1049 = call i64 @"eq@III"(i64 %T2, i64 95)
  %426 = icmp ne i64 %return1049, 0
  br i1 %426, label %true1050, label %false1051

true1050:                                         ; preds = %false1032
  %prx1053 = load i8*, i8** %prx
  %return1054 = call i8* @"concat@SSS"(i8* %prx1053, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @127, i64 0, i64 0))
  %return1055 = call double @"chf@FS"(i8* %return1054)
  store <2 x double> %pos1, <2 x double>* %281
  %w1057 = load double, double* %w
  store double %w1057, double* %282
  store double %return1055, double* %283
  call void @"V_FLUX@UUFF"(<2 x double>* %p, <2 x double>* %281, double* %282, double* %283)
  %p1059 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1051:                                        ; preds = %false1032
  %return1061 = call i64 @"eq@III"(i64 %T2, i64 96)
  %427 = icmp ne i64 %return1061, 0
  br i1 %427, label %true1062, label %false1063

true1062:                                         ; preds = %false1051
  %prx1065 = load i8*, i8** %prx
  %return1066 = call i8* @"concat@SSS"(i8* %prx1065, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @128, i64 0, i64 0))
  %return1067 = call <4 x double> @"chp@PS"(i8* %return1066)
  %return1069 = call i8* @"concat@SSS"(i8* %prx1065, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @129, i64 0, i64 0))
  %return1070 = call <4 x double> @"chp@PS"(i8* %return1069)
  store <2 x double> %pos1, <2 x double>* %284
  %w1072 = load double, double* %w
  store double %w1072, double* %285
  store <4 x double> %return1067, <4 x double>* %286
  store <4 x double> %return1070, <4 x double>* %287
  call void @"V_MOBIUS@UUFPP"(<2 x double>* %p, <2 x double>* %284, double* %285, <4 x double>* %286, <4 x double>* %287)
  %p1075 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1063:                                        ; preds = %false1051
  %return1077 = call i64 @"eq@III"(i64 %T2, i64 97)
  %428 = icmp ne i64 %return1077, 0
  br i1 %428, label %true1078, label %false1079

true1078:                                         ; preds = %false1063
  %prx1081 = load i8*, i8** %prx
  %return1082 = call i8* @"concat@SSS"(i8* %prx1081, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @130, i64 0, i64 0))
  %return1083 = call <2 x double> @"chu@US"(i8* %return1082)
  %return1085 = call i8* @"concat@SSS"(i8* %prx1081, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @131, i64 0, i64 0))
  %return1086 = call <2 x double> @"chu@US"(i8* %return1085)
  store <2 x double> %pos1, <2 x double>* %288
  %w1088 = load double, double* %w
  store double %w1088, double* %289
  store <2 x double> %return1083, <2 x double>* %290
  store <2 x double> %return1086, <2 x double>* %291
  call void @"V_CURVE@UUFUU"(<2 x double>* %p, <2 x double>* %288, double* %289, <2 x double>* %290, <2 x double>* %291)
  %p1091 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1079:                                        ; preds = %false1063
  %return1093 = call i64 @"eq@III"(i64 %T2, i64 98)
  %429 = icmp ne i64 %return1093, 0
  br i1 %429, label %true1094, label %false1095

true1094:                                         ; preds = %false1079
  %prx1097 = load i8*, i8** %prx
  %return1098 = call i8* @"concat@SSS"(i8* %prx1097, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @101, i64 0, i64 0))
  %return1099 = call <2 x double> @"chu@US"(i8* %return1098)
  store <2 x double> %pos1, <2 x double>* %292
  %w1101 = load double, double* %w
  store double %w1101, double* %293
  %return1103 = call double @"getcomp@FUI"(<2 x double> %return1099, i64 0)
  store double %return1103, double* %294
  %return1105 = call double @"getcomp@FUI"(<2 x double> %return1099, i64 1)
  store double %return1105, double* %295
  call void @"V_PERSPECTIVE@UUFFF"(<2 x double>* %p, <2 x double>* %292, double* %293, double* %294, double* %295)
  %p1106 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1095:                                        ; preds = %false1079
  %return1108 = call i64 @"eq@III"(i64 %T2, i64 99)
  %430 = icmp ne i64 %return1108, 0
  br i1 %430, label %true1109, label %false1110

true1109:                                         ; preds = %false1095
  %prx1112 = load i8*, i8** %prx
  %return1113 = call i8* @"concat@SSS"(i8* %prx1112, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @102, i64 0, i64 0))
  %return1114 = call <3 x double> @"chv@VS"(i8* %return1113)
  %return1116 = call i8* @"concat@SSS"(i8* %prx1112, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @103, i64 0, i64 0))
  %return1117 = call <2 x double> @"chu@US"(i8* %return1116)
  store <2 x double> %pos1, <2 x double>* %296
  %w1119 = load double, double* %w
  store double %w1119, double* %297
  %return1121 = call double @"getcomp@FVI"(<3 x double> %return1114, i64 0)
  store double %return1121, double* %298
  %return1123 = call double @"getcomp@FVI"(<3 x double> %return1114, i64 1)
  store double %return1123, double* %299
  %return1125 = call double @"getcomp@FVI"(<3 x double> %return1114, i64 2)
  store double %return1125, double* %300
  %return1127 = call double @"getcomp@FUI"(<2 x double> %return1117, i64 0)
  store double %return1127, double* %301
  %return1129 = call double @"getcomp@FUI"(<2 x double> %return1117, i64 1)
  store double %return1129, double* %302
  call void @"V_BWRAPS@UUFFFFFF"(<2 x double>* %p, <2 x double>* %296, double* %297, double* %298, double* %299, double* %300, double* %301, double* %302)
  %p1130 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1110:                                        ; preds = %false1095
  %return1132 = call i64 @"eq@III"(i64 %T2, i64 100)
  %431 = icmp ne i64 %return1132, 0
  br i1 %431, label %true1133, label %false1134

true1133:                                         ; preds = %false1110
  store <2 x double> %pos1, <2 x double>* %303
  %w1137 = load double, double* %w
  store double %w1137, double* %304
  call void @"V_HEMISPHERE@UUF"(<2 x double>* %p, <2 x double>* %303, double* %304)
  %p1138 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1134:                                        ; preds = %false1110
  %return1140 = call i64 @"eq@III"(i64 %T2, i64 101)
  %432 = icmp ne i64 %return1140, 0
  br i1 %432, label %true1141, label %false1142

true1141:                                         ; preds = %false1134
  %prx1144 = load i8*, i8** %prx
  %return1145 = call i8* @"concat@SSS"(i8* %prx1144, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @132, i64 0, i64 0))
  %return1146 = call <2 x double> @"chu@US"(i8* %return1145)
  %return1148 = call i8* @"concat@SSS"(i8* %prx1144, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @133, i64 0, i64 0))
  %return1149 = call <2 x double> @"chu@US"(i8* %return1148)
  %return1151 = call i8* @"concat@SSS"(i8* %prx1144, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @134, i64 0, i64 0))
  %return1152 = call <2 x double> @"chu@US"(i8* %return1151)
  store <2 x double> %pos1, <2 x double>* %305
  %w1154 = load double, double* %w
  store double %w1154, double* %306
  store <2 x double> %return1146, <2 x double>* %307
  store <2 x double> %return1149, <2 x double>* %308
  store <2 x double> %return1152, <2 x double>* %309
  call void @"V_POLYNOMIAL@UUFUUU"(<2 x double>* %p, <2 x double>* %305, double* %306, <2 x double>* %307, <2 x double>* %308, <2 x double>* %309)
  %p1158 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1142:                                        ; preds = %false1134
  %return1160 = call i64 @"eq@III"(i64 %T2, i64 102)
  %433 = icmp ne i64 %return1160, 0
  br i1 %433, label %true1161, label %false1162

true1161:                                         ; preds = %false1142
  %prx1164 = load i8*, i8** %prx
  %return1165 = call i8* @"concat@SSS"(i8* %prx1164, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @135, i64 0, i64 0))
  %return1166 = call <4 x double> @"chp@PS"(i8* %return1165)
  %return1168 = call i8* @"concat@SSS"(i8* %prx1164, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @136, i64 0, i64 0))
  %return1169 = call <2 x double> @"chu@US"(i8* %return1168)
  store <2 x double> %pos1, <2 x double>* %310
  %w1171 = load double, double* %w
  store double %w1171, double* %311
  %return1173 = call double @"getcomp@FPI"(<4 x double> %return1166, i64 0)
  store double %return1173, double* %312
  %return1175 = call double @"getcomp@FPI"(<4 x double> %return1166, i64 1)
  store double %return1175, double* %313
  %return1177 = call double @"getcomp@FPI"(<4 x double> %return1166, i64 2)
  store double %return1177, double* %314
  %return1179 = call double @"getcomp@FPI"(<4 x double> %return1166, i64 3)
  store double %return1179, double* %315
  %return1181 = call double @"getcomp@FUI"(<2 x double> %return1169, i64 0)
  store double %return1181, double* %316
  %return1183 = call double @"getcomp@FUI"(<2 x double> %return1169, i64 1)
  store double %return1183, double* %317
  call void @"V_CROP@UUFFFFFFF"(<2 x double>* %p, <2 x double>* %310, double* %311, double* %312, double* %313, double* %314, double* %315, double* %316, double* %317)
  %p1184 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1162:                                        ; preds = %false1142
  %return1186 = call i64 @"eq@III"(i64 %T2, i64 103)
  %434 = icmp ne i64 %return1186, 0
  br i1 %434, label %true1187, label %false1188

true1187:                                         ; preds = %false1162
  store <2 x double> %pos1, <2 x double>* %318
  %w1191 = load double, double* %w
  store double %w1191, double* %319
  call void @"V_UNPOLAR@UUF"(<2 x double>* %p, <2 x double>* %318, double* %319)
  %p1192 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1188:                                        ; preds = %false1162
  %return1194 = call i64 @"eq@III"(i64 %T2, i64 104)
  %435 = icmp ne i64 %return1194, 0
  br i1 %435, label %true1195, label %false1196

true1195:                                         ; preds = %false1188
  store <2 x double> %pos1, <2 x double>* %320
  %w1199 = load double, double* %w
  store double %w1199, double* %321
  call void @"V_GLYNNIA@UUF"(<2 x double>* %p, <2 x double>* %320, double* %321)
  %p1200 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1196:                                        ; preds = %false1188
  %return1202 = call i64 @"eq@III"(i64 %T2, i64 105)
  %436 = icmp ne i64 %return1202, 0
  br i1 %436, label %true1203, label %end9

true1203:                                         ; preds = %false1196
  %prx1205 = load i8*, i8** %prx
  %return1206 = call i8* @"concat@SSS"(i8* %prx1205, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @137, i64 0, i64 0))
  %return1207 = call <3 x double> @"chv@VS"(i8* %return1206)
  store <2 x double> %pos1, <2 x double>* %322
  %w1209 = load double, double* %w
  store double %w1209, double* %323
  %return1211 = call double @"getcomp@FVI"(<3 x double> %return1207, i64 0)
  store double %return1211, double* %324
  %return1213 = call double @"getcomp@FVI"(<3 x double> %return1207, i64 1)
  store double %return1213, double* %325
  %return1215 = call double @"getcomp@FVI"(<3 x double> %return1207, i64 2)
  store double %return1215, double* %326
  call void @"V_POINT_SYMMETRY@UUFFFF"(<2 x double>* %p, <2 x double>* %322, double* %323, double* %324, double* %325, double* %326)
  %p1216 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %true1203, %true1195, %true1187, %true1161, %true1141, %true1133, %true1109, %true1094, %true1078, %true1062, %true1050, %true1031, %true1022, %true1013, %true1004, %true995, %true986, %true977, %true969, %true960, %true951, %true942, %true933, %true924, %true916, %true908, %true892, %true877, %true858, %true839, %true820, %true805, %true793, %true781, %true765, %true757, %true737, %true729, %true710, %true698, %true690, %true669, %true661, %true649, %true641, %true633, %true625, %true608, %true596, %true588, %true580, %true568, %true556, %true542, %true527, %true512, %true491, %true476, %true468, %true460, %true452, %true444, %true436, %true429, %true421, %true414, %true398, %true386, %true374, %true362, %true341, %true334, %true319, %true304, %true287, %true275, %true256, %true241, %true234, %true226, %true218, %true210, %true198, %true188, %true180, %true172, %true164, %true153, %true145, %true129, %true121, %true113, %true105, %true97, %true89, %true81, %true73, %true65, %true57, %true49, %true41, %true33, %true25, %true17, %end9, %true
  %UnifiedRetVal = phi <2 x double> [ %output, %true ], [ %pos1, %end9 ], [ %p22, %true17 ], [ %p30, %true25 ], [ %p38, %true33 ], [ %p46, %true41 ], [ %p54, %true49 ], [ %p62, %true57 ], [ %p70, %true65 ], [ %p78, %true73 ], [ %p86, %true81 ], [ %p94, %true89 ], [ %p102, %true97 ], [ %p110, %true105 ], [ %p118, %true113 ], [ %p126, %true121 ], [ %p142, %true129 ], [ %p150, %true145 ], [ %p161, %true153 ], [ %p169, %true164 ], [ %p177, %true172 ], [ %p185, %true180 ], [ %p195, %true188 ], [ %p207, %true198 ], [ %p215, %true210 ], [ %p223, %true218 ], [ %p231, %true226 ], [ %p238, %true234 ], [ %p253, %true241 ], [ %p272, %true256 ], [ %p284, %true275 ], [ %p301, %true287 ], [ %p316, %true304 ], [ %p331, %true319 ], [ %p338, %true334 ], [ %p349, %true341 ], [ %p371, %true362 ], [ %p383, %true374 ], [ %p395, %true386 ], [ %p411, %true398 ], [ %p418, %true414 ], [ %p426, %true421 ], [ %p433, %true429 ], [ %p441, %true436 ], [ %p449, %true444 ], [ %p457, %true452 ], [ %p465, %true460 ], [ %p473, %true468 ], [ %p488, %true476 ], [ %p509, %true491 ], [ %p524, %true512 ], [ %p539, %true527 ], [ %p553, %true542 ], [ %p565, %true556 ], [ %p577, %true568 ], [ %p585, %true580 ], [ %p593, %true588 ], [ %p605, %true596 ], [ %p622, %true608 ], [ %p630, %true625 ], [ %p638, %true633 ], [ %p646, %true641 ], [ %p658, %true649 ], [ %p666, %true661 ], [ %p687, %true669 ], [ %p695, %true690 ], [ %p707, %true698 ], [ %p726, %true710 ], [ %p734, %true729 ], [ %p749, %true737 ], [ %p762, %true757 ], [ %p778, %true765 ], [ %p790, %true781 ], [ %p802, %true793 ], [ %p817, %true805 ], [ %p836, %true820 ], [ %p855, %true839 ], [ %p874, %true858 ], [ %p889, %true877 ], [ %p905, %true892 ], [ %p913, %true908 ], [ %p921, %true916 ], [ %p930, %true924 ], [ %p939, %true933 ], [ %p948, %true942 ], [ %p957, %true951 ], [ %p966, %true960 ], [ %p974, %true969 ], [ %p983, %true977 ], [ %p992, %true986 ], [ %p1001, %true995 ], [ %p1010, %true1004 ], [ %p1019, %true1013 ], [ %p1028, %true1022 ], [ %p1047, %true1031 ], [ %p1059, %true1050 ], [ %p1075, %true1062 ], [ %p1091, %true1078 ], [ %p1106, %true1094 ], [ %p1130, %true1109 ], [ %p1138, %true1133 ], [ %p1158, %true1141 ], [ %p1184, %true1161 ], [ %p1192, %true1187 ], [ %p1200, %true1195 ], [ %p1216, %true1203 ]
  ret <2 x double> %UnifiedRetVal
}

; Function Attrs: alwaysinline nounwind
define private void @"_FLAM3@IFFFV"(i64* %_bound_ptnum, double* %_bound_pscale, double* %_bound_clr, double* %_bound_Alpha, <3 x double>* %_bound_P) #1 {
__llvm_entry:
  %idx = alloca i64
  %tmp = alloca <2 x double>
  %mem = alloca <2 x double>
  %GEMSYSGLB = alloca %gemSYSGLB
  %GEMSYS = alloca %gemSYS
  %GEM = alloca %gem
  %0 = alloca i64
  %1 = alloca double
  %2 = alloca double*
  %3 = alloca <2 x double>
  %4 = alloca <2 x double>
  %5 = alloca <2 x double>
  %6 = alloca double
  %7 = alloca i64
  %8 = alloca i64
  %9 = alloca i64
  %10 = alloca <2 x double>
  %11 = alloca <2 x double>
  %12 = alloca <2 x double>
  %13 = alloca <2 x double>
  %14 = alloca double
  %15 = alloca i64
  %16 = alloca i64
  %17 = alloca i64
  %18 = alloca <2 x double>
  %19 = alloca <2 x double>
  %20 = alloca <2 x double>
  %21 = alloca <2 x double>
  %22 = alloca double
  %23 = alloca i64
  %24 = alloca i64
  %25 = alloca i64
  %26 = alloca <2 x double>
  %27 = alloca <2 x double>
  %28 = alloca <2 x double>
  %29 = alloca <2 x double>
  %30 = alloca double
  %31 = alloca i64
  %32 = alloca i64
  %33 = alloca i64
  %34 = alloca <2 x double>
  %35 = alloca <2 x double>
  %36 = alloca <2 x double>
  %37 = alloca <2 x double>
  %38 = alloca double
  %39 = alloca i64
  %40 = alloca i64
  %41 = alloca i64
  %42 = alloca <2 x double>
  %43 = alloca <2 x double>
  %44 = alloca <2 x double>
  %45 = alloca <2 x double>
  %46 = alloca double
  %47 = alloca i64
  %48 = alloca i64
  %49 = alloca i64
  %50 = alloca <2 x double>
  %51 = alloca <2 x double>
  %52 = alloca <2 x double>
  %53 = alloca <2 x double>
  %54 = alloca double
  %55 = alloca i64
  %56 = alloca i64
  %57 = alloca i64
  %58 = alloca <2 x double>
  %59 = alloca <2 x double>
  %60 = alloca <2 x double>
  %61 = alloca <2 x double>
  %62 = alloca double
  %63 = alloca <2 x double>
  %64 = alloca <2 x double>
  %65 = alloca <2 x double>
  %66 = alloca <2 x double>
  %67 = alloca <2 x double>
  %68 = alloca <2 x double>
  %69 = alloca i64
  %70 = alloca <2 x double>
  %71 = alloca double
  %72 = alloca i8*
  %73 = alloca i64
  %74 = alloca i64
  %75 = alloca <2 x double>
  %76 = alloca <2 x double>
  %77 = alloca <2 x double>
  %78 = alloca <2 x double>
  %79 = alloca double
  %80 = alloca i8*
  %81 = alloca i64
  %82 = alloca i64
  %83 = alloca <2 x double>
  %84 = alloca <2 x double>
  %85 = alloca <2 x double>
  %86 = alloca <2 x double>
  %87 = alloca double
  %88 = alloca i8*
  %89 = alloca i64
  %90 = alloca i64
  %91 = alloca <2 x double>
  %92 = alloca <2 x double>
  %93 = alloca <2 x double>
  %94 = alloca <2 x double>
  %95 = alloca double
  %96 = alloca i8*
  %97 = alloca i64
  %98 = alloca i64
  %99 = alloca <2 x double>
  %100 = alloca <2 x double>
  %101 = alloca <2 x double>
  %102 = alloca <2 x double>
  %103 = alloca double
  %104 = alloca i8*
  %105 = alloca i64
  %106 = alloca i64
  %107 = alloca <2 x double>
  %108 = alloca <2 x double>
  %109 = alloca <2 x double>
  %110 = alloca <2 x double>
  %111 = alloca double
  %112 = alloca <2 x double>
  %113 = alloca <2 x double>
  %114 = alloca <2 x double>
  store i64 0, i64* %idx, !vex-initializer-store !3
  store <2 x double> zeroinitializer, <2 x double>* %tmp, !vex-initializer-store !3
  store <2 x double> zeroinitializer, <2 x double>* %mem, !vex-initializer-store !3
  %GEMSYSGLB1 = call %gemSYSGLB @"gemSYSGLB@Z9gemSYSGLBM5N2FFIN3RIPIN2MBIN3F3CIN4ITERI"()
  %GEMSYSGLB1.fca.0.extract = extractvalue %gemSYSGLB %GEMSYSGLB1, 0
  %GEMSYSGLB1.fca.0.gep = getelementptr inbounds %gemSYSGLB, %gemSYSGLB* %GEMSYSGLB, i32 0, i32 0
  store i64 %GEMSYSGLB1.fca.0.extract, i64* %GEMSYSGLB1.fca.0.gep
  %GEMSYSGLB1.fca.1.extract = extractvalue %gemSYSGLB %GEMSYSGLB1, 1
  %GEMSYSGLB1.fca.1.gep = getelementptr inbounds %gemSYSGLB, %gemSYSGLB* %GEMSYSGLB, i32 0, i32 1
  store i64 %GEMSYSGLB1.fca.1.extract, i64* %GEMSYSGLB1.fca.1.gep
  %GEMSYSGLB1.fca.2.extract = extractvalue %gemSYSGLB %GEMSYSGLB1, 2
  %GEMSYSGLB1.fca.2.gep = getelementptr inbounds %gemSYSGLB, %gemSYSGLB* %GEMSYSGLB, i32 0, i32 2
  store i64 %GEMSYSGLB1.fca.2.extract, i64* %GEMSYSGLB1.fca.2.gep
  %GEMSYSGLB1.fca.3.extract = extractvalue %gemSYSGLB %GEMSYSGLB1, 3
  %GEMSYSGLB1.fca.3.gep = getelementptr inbounds %gemSYSGLB, %gemSYSGLB* %GEMSYSGLB, i32 0, i32 3
  store i64 %GEMSYSGLB1.fca.3.extract, i64* %GEMSYSGLB1.fca.3.gep
  %GEMSYSGLB1.fca.4.extract = extractvalue %gemSYSGLB %GEMSYSGLB1, 4
  %GEMSYSGLB1.fca.4.gep = getelementptr inbounds %gemSYSGLB, %gemSYSGLB* %GEMSYSGLB, i32 0, i32 4
  store i64 %GEMSYSGLB1.fca.4.extract, i64* %GEMSYSGLB1.fca.4.gep
  call void @"gemSYSGLBBuild@Z9gemSYSGLBM5N2FFIN3RIPIN2MBIN3F3CIN4ITERI"(%gemSYSGLB* %GEMSYSGLB)
  %GEMSYSGLB2.fca.0.load = load i64, i64* %GEMSYSGLB1.fca.0.gep
  %GEMSYSGLB2.fca.0.insert = insertvalue %gemSYSGLB undef, i64 %GEMSYSGLB2.fca.0.load, 0
  %GEMSYSGLB2.fca.1.load = load i64, i64* %GEMSYSGLB1.fca.1.gep
  %GEMSYSGLB2.fca.1.insert = insertvalue %gemSYSGLB %GEMSYSGLB2.fca.0.insert, i64 %GEMSYSGLB2.fca.1.load, 1
  %GEMSYSGLB2.fca.2.load = load i64, i64* %GEMSYSGLB1.fca.2.gep
  %GEMSYSGLB2.fca.2.insert = insertvalue %gemSYSGLB %GEMSYSGLB2.fca.1.insert, i64 %GEMSYSGLB2.fca.2.load, 2
  %GEMSYSGLB2.fca.3.load = load i64, i64* %GEMSYSGLB1.fca.3.gep
  %GEMSYSGLB2.fca.3.insert = insertvalue %gemSYSGLB %GEMSYSGLB2.fca.2.insert, i64 %GEMSYSGLB2.fca.3.load, 3
  %GEMSYSGLB2.fca.4.load = load i64, i64* %GEMSYSGLB1.fca.4.gep
  %GEMSYS12 = call %gemSYS @"gemSYS@Z6gemSYSM4N3RESIN2XSIN2IW[FN3XST[F"()
  %GEMSYS12.fca.0.extract = extractvalue %gemSYS %GEMSYS12, 0
  %GEMSYS12.fca.0.gep = getelementptr inbounds %gemSYS, %gemSYS* %GEMSYS, i32 0, i32 0
  store i64 %GEMSYS12.fca.0.extract, i64* %GEMSYS12.fca.0.gep
  %GEMSYS12.fca.1.extract = extractvalue %gemSYS %GEMSYS12, 1
  %GEMSYS12.fca.1.gep = getelementptr inbounds %gemSYS, %gemSYS* %GEMSYS, i32 0, i32 1
  store i64 %GEMSYS12.fca.1.extract, i64* %GEMSYS12.fca.1.gep
  %GEMSYS12.fca.2.extract = extractvalue %gemSYS %GEMSYS12, 2
  %GEMSYS12.fca.2.gep = getelementptr inbounds %gemSYS, %gemSYS* %GEMSYS, i32 0, i32 2
  store double* %GEMSYS12.fca.2.extract, double** %GEMSYS12.fca.2.gep
  %GEMSYS12.fca.3.extract = extractvalue %gemSYS %GEMSYS12, 3
  %GEMSYS12.fca.3.gep = getelementptr inbounds %gemSYS, %gemSYS* %GEMSYS, i32 0, i32 3
  store double* %GEMSYS12.fca.3.extract, double** %GEMSYS12.fca.3.gep
  call void @"gemSYSBuild@Z6gemSYSM4N3RESIN2XSIN2IW[FN3XST[F"(%gemSYS* %GEMSYS)
  %GEMSYS13.fca.0.load = load i64, i64* %GEMSYS12.fca.0.gep
  %GEMSYS13.fca.0.insert = insertvalue %gemSYS undef, i64 %GEMSYS13.fca.0.load, 0
  %GEMSYS13.fca.1.load = load i64, i64* %GEMSYS12.fca.1.gep
  %GEMSYS13.fca.1.insert = insertvalue %gemSYS %GEMSYS13.fca.0.insert, i64 %GEMSYS13.fca.1.load, 1
  %GEMSYS13.fca.2.load = load double*, double** %GEMSYS12.fca.2.gep
  %GEMSYS13.fca.2.insert = insertvalue %gemSYS %GEMSYS13.fca.1.insert, double* %GEMSYS13.fca.2.load, 2
  %GEMSYS13.fca.3.load = load double*, double** %GEMSYS12.fca.3.gep
  %GEM21 = call %gem @"gem@Z3gemM43N3PFFIN3resIN3v1t[IN3v2t[IN3v3t[IN3v4t[IN3p1t[IN3p2t[IN3P1t[IN3PPL[IN4fp1tIN4fv1tIN4fv2tIN4fP1tIN4fP2tIN3v1w[FN3v2w[FN3v3w[FN3v4w[FN3pbw[FN3p1w[FN3p2w[FN3P1w[FN3CLR[FN2OM[FN1A[FN4fp1wFN4fv1wFN4fv2wFN4fP1wFN4fP2wFN1x[UN1y[UN1o[UN2px[UN2py[UN2po[UN2fxUN2fyUN2foUN3pfxUN3pfyUN3pfoU"()
  %GEM21.fca.0.extract = extractvalue %gem %GEM21, 0
  %GEM21.fca.0.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 0
  store i64 %GEM21.fca.0.extract, i64* %GEM21.fca.0.gep
  %GEM21.fca.1.extract = extractvalue %gem %GEM21, 1
  %GEM21.fca.1.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 1
  store i64 %GEM21.fca.1.extract, i64* %GEM21.fca.1.gep
  %GEM21.fca.2.extract = extractvalue %gem %GEM21, 2
  %GEM21.fca.2.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 2
  store i64* %GEM21.fca.2.extract, i64** %GEM21.fca.2.gep
  %GEM21.fca.3.extract = extractvalue %gem %GEM21, 3
  %GEM21.fca.3.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 3
  store i64* %GEM21.fca.3.extract, i64** %GEM21.fca.3.gep
  %GEM21.fca.4.extract = extractvalue %gem %GEM21, 4
  %GEM21.fca.4.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 4
  store i64* %GEM21.fca.4.extract, i64** %GEM21.fca.4.gep
  %GEM21.fca.5.extract = extractvalue %gem %GEM21, 5
  %GEM21.fca.5.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 5
  store i64* %GEM21.fca.5.extract, i64** %GEM21.fca.5.gep
  %GEM21.fca.6.extract = extractvalue %gem %GEM21, 6
  %GEM21.fca.6.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 6
  store i64* %GEM21.fca.6.extract, i64** %GEM21.fca.6.gep
  %GEM21.fca.7.extract = extractvalue %gem %GEM21, 7
  %GEM21.fca.7.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 7
  store i64* %GEM21.fca.7.extract, i64** %GEM21.fca.7.gep
  %GEM21.fca.8.extract = extractvalue %gem %GEM21, 8
  %GEM21.fca.8.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 8
  store i64* %GEM21.fca.8.extract, i64** %GEM21.fca.8.gep
  %GEM21.fca.9.extract = extractvalue %gem %GEM21, 9
  %GEM21.fca.9.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 9
  store i64* %GEM21.fca.9.extract, i64** %GEM21.fca.9.gep
  %GEM21.fca.10.extract = extractvalue %gem %GEM21, 10
  %GEM21.fca.10.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 10
  store i64 %GEM21.fca.10.extract, i64* %GEM21.fca.10.gep
  %GEM21.fca.11.extract = extractvalue %gem %GEM21, 11
  %GEM21.fca.11.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 11
  store i64 %GEM21.fca.11.extract, i64* %GEM21.fca.11.gep
  %GEM21.fca.12.extract = extractvalue %gem %GEM21, 12
  %GEM21.fca.12.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 12
  store i64 %GEM21.fca.12.extract, i64* %GEM21.fca.12.gep
  %GEM21.fca.13.extract = extractvalue %gem %GEM21, 13
  %GEM21.fca.13.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 13
  store i64 %GEM21.fca.13.extract, i64* %GEM21.fca.13.gep
  %GEM21.fca.14.extract = extractvalue %gem %GEM21, 14
  %GEM21.fca.14.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 14
  store i64 %GEM21.fca.14.extract, i64* %GEM21.fca.14.gep
  %GEM21.fca.15.extract = extractvalue %gem %GEM21, 15
  %GEM21.fca.15.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 15
  store double* %GEM21.fca.15.extract, double** %GEM21.fca.15.gep
  %GEM21.fca.16.extract = extractvalue %gem %GEM21, 16
  %GEM21.fca.16.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 16
  store double* %GEM21.fca.16.extract, double** %GEM21.fca.16.gep
  %GEM21.fca.17.extract = extractvalue %gem %GEM21, 17
  %GEM21.fca.17.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 17
  store double* %GEM21.fca.17.extract, double** %GEM21.fca.17.gep
  %GEM21.fca.18.extract = extractvalue %gem %GEM21, 18
  %GEM21.fca.18.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 18
  store double* %GEM21.fca.18.extract, double** %GEM21.fca.18.gep
  %GEM21.fca.19.extract = extractvalue %gem %GEM21, 19
  %GEM21.fca.19.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 19
  store double* %GEM21.fca.19.extract, double** %GEM21.fca.19.gep
  %GEM21.fca.20.extract = extractvalue %gem %GEM21, 20
  %GEM21.fca.20.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 20
  store double* %GEM21.fca.20.extract, double** %GEM21.fca.20.gep
  %GEM21.fca.21.extract = extractvalue %gem %GEM21, 21
  %GEM21.fca.21.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 21
  store double* %GEM21.fca.21.extract, double** %GEM21.fca.21.gep
  %GEM21.fca.22.extract = extractvalue %gem %GEM21, 22
  %GEM21.fca.22.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 22
  store double* %GEM21.fca.22.extract, double** %GEM21.fca.22.gep
  %GEM21.fca.23.extract = extractvalue %gem %GEM21, 23
  %GEM21.fca.23.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 23
  store double* %GEM21.fca.23.extract, double** %GEM21.fca.23.gep
  %GEM21.fca.24.extract = extractvalue %gem %GEM21, 24
  %GEM21.fca.24.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 24
  store double* %GEM21.fca.24.extract, double** %GEM21.fca.24.gep
  %GEM21.fca.25.extract = extractvalue %gem %GEM21, 25
  %GEM21.fca.25.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 25
  store double* %GEM21.fca.25.extract, double** %GEM21.fca.25.gep
  %GEM21.fca.26.extract = extractvalue %gem %GEM21, 26
  %GEM21.fca.26.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 26
  store double %GEM21.fca.26.extract, double* %GEM21.fca.26.gep
  %GEM21.fca.27.extract = extractvalue %gem %GEM21, 27
  %GEM21.fca.27.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 27
  store double %GEM21.fca.27.extract, double* %GEM21.fca.27.gep
  %GEM21.fca.28.extract = extractvalue %gem %GEM21, 28
  %GEM21.fca.28.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 28
  store double %GEM21.fca.28.extract, double* %GEM21.fca.28.gep
  %GEM21.fca.29.extract = extractvalue %gem %GEM21, 29
  %GEM21.fca.29.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 29
  store double %GEM21.fca.29.extract, double* %GEM21.fca.29.gep
  %GEM21.fca.30.extract = extractvalue %gem %GEM21, 30
  %GEM21.fca.30.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 30
  store double %GEM21.fca.30.extract, double* %GEM21.fca.30.gep
  %GEM21.fca.31.extract = extractvalue %gem %GEM21, 31
  %GEM21.fca.31.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 31
  store <2 x double>* %GEM21.fca.31.extract, <2 x double>** %GEM21.fca.31.gep
  %GEM21.fca.32.extract = extractvalue %gem %GEM21, 32
  %GEM21.fca.32.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 32
  store <2 x double>* %GEM21.fca.32.extract, <2 x double>** %GEM21.fca.32.gep
  %GEM21.fca.33.extract = extractvalue %gem %GEM21, 33
  %GEM21.fca.33.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 33
  store <2 x double>* %GEM21.fca.33.extract, <2 x double>** %GEM21.fca.33.gep
  %GEM21.fca.34.extract = extractvalue %gem %GEM21, 34
  %GEM21.fca.34.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 34
  store <2 x double>* %GEM21.fca.34.extract, <2 x double>** %GEM21.fca.34.gep
  %GEM21.fca.35.extract = extractvalue %gem %GEM21, 35
  %GEM21.fca.35.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 35
  store <2 x double>* %GEM21.fca.35.extract, <2 x double>** %GEM21.fca.35.gep
  %GEM21.fca.36.extract = extractvalue %gem %GEM21, 36
  %GEM21.fca.36.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 36
  store <2 x double>* %GEM21.fca.36.extract, <2 x double>** %GEM21.fca.36.gep
  %GEM21.fca.37.extract = extractvalue %gem %GEM21, 37
  %GEM21.fca.37.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 37
  store <2 x double> %GEM21.fca.37.extract, <2 x double>* %GEM21.fca.37.gep
  %GEM21.fca.38.extract = extractvalue %gem %GEM21, 38
  %GEM21.fca.38.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 38
  store <2 x double> %GEM21.fca.38.extract, <2 x double>* %GEM21.fca.38.gep
  %GEM21.fca.39.extract = extractvalue %gem %GEM21, 39
  %GEM21.fca.39.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 39
  store <2 x double> %GEM21.fca.39.extract, <2 x double>* %GEM21.fca.39.gep
  %GEM21.fca.40.extract = extractvalue %gem %GEM21, 40
  %GEM21.fca.40.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 40
  store <2 x double> %GEM21.fca.40.extract, <2 x double>* %GEM21.fca.40.gep
  %GEM21.fca.41.extract = extractvalue %gem %GEM21, 41
  %GEM21.fca.41.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 41
  store <2 x double> %GEM21.fca.41.extract, <2 x double>* %GEM21.fca.41.gep
  %GEM21.fca.42.extract = extractvalue %gem %GEM21, 42
  %GEM21.fca.42.gep = getelementptr inbounds %gem, %gem* %GEM, i32 0, i32 42
  store <2 x double> %GEM21.fca.42.extract, <2 x double>* %GEM21.fca.42.gep
  store i64 %GEMSYSGLB2.fca.0.load, i64* %0
  call void @"gemBuild@Z3gemM43N3PFFIN3resIN3v1t[IN3v2t[IN3v3t[IN3v4t[IN3p1t[IN3p2t[IN3P1t[IN3PPL[IN4fp1tIN4fv1tIN4fv2tIN4fP1tIN4fP2tIN3v1w[FN3v2w[FN3v3w[FN3v4w[FN3pbw[FN3p1w[FN3p2w[FN3P1w[FN3CLR[FN2OM[FN1A[FN4fp1wFN4fv1wFN4fv2wFN4fP1wFN4fP2wFN1x[UN1y[UN1o[UN2px[UN2py[UN2po[UN2fxUN2fyUN2foUN3pfxUN3pfyUN3pfoUI"(%gem* %GEM, i64* %0)
  %GEM23.fca.0.load = load i64, i64* %GEM21.fca.0.gep
  %GEM23.fca.0.insert = insertvalue %gem undef, i64 %GEM23.fca.0.load, 0
  %GEM23.fca.1.load = load i64, i64* %GEM21.fca.1.gep
  %GEM23.fca.1.insert = insertvalue %gem %GEM23.fca.0.insert, i64 %GEM23.fca.1.load, 1
  %GEM23.fca.2.load = load i64*, i64** %GEM21.fca.2.gep
  %GEM23.fca.2.insert = insertvalue %gem %GEM23.fca.1.insert, i64* %GEM23.fca.2.load, 2
  %GEM23.fca.3.load = load i64*, i64** %GEM21.fca.3.gep
  %GEM23.fca.3.insert = insertvalue %gem %GEM23.fca.2.insert, i64* %GEM23.fca.3.load, 3
  %GEM23.fca.4.load = load i64*, i64** %GEM21.fca.4.gep
  %GEM23.fca.4.insert = insertvalue %gem %GEM23.fca.3.insert, i64* %GEM23.fca.4.load, 4
  %GEM23.fca.5.load = load i64*, i64** %GEM21.fca.5.gep
  %GEM23.fca.5.insert = insertvalue %gem %GEM23.fca.4.insert, i64* %GEM23.fca.5.load, 5
  %GEM23.fca.6.load = load i64*, i64** %GEM21.fca.6.gep
  %GEM23.fca.6.insert = insertvalue %gem %GEM23.fca.5.insert, i64* %GEM23.fca.6.load, 6
  %GEM23.fca.7.load = load i64*, i64** %GEM21.fca.7.gep
  %GEM23.fca.7.insert = insertvalue %gem %GEM23.fca.6.insert, i64* %GEM23.fca.7.load, 7
  %GEM23.fca.8.load = load i64*, i64** %GEM21.fca.8.gep
  %GEM23.fca.8.insert = insertvalue %gem %GEM23.fca.7.insert, i64* %GEM23.fca.8.load, 8
  %GEM23.fca.9.load = load i64*, i64** %GEM21.fca.9.gep
  %GEM23.fca.9.insert = insertvalue %gem %GEM23.fca.8.insert, i64* %GEM23.fca.9.load, 9
  %GEM23.fca.10.load = load i64, i64* %GEM21.fca.10.gep
  %GEM23.fca.10.insert = insertvalue %gem %GEM23.fca.9.insert, i64 %GEM23.fca.10.load, 10
  %GEM23.fca.11.load = load i64, i64* %GEM21.fca.11.gep
  %GEM23.fca.11.insert = insertvalue %gem %GEM23.fca.10.insert, i64 %GEM23.fca.11.load, 11
  %GEM23.fca.12.load = load i64, i64* %GEM21.fca.12.gep
  %GEM23.fca.12.insert = insertvalue %gem %GEM23.fca.11.insert, i64 %GEM23.fca.12.load, 12
  %GEM23.fca.13.load = load i64, i64* %GEM21.fca.13.gep
  %GEM23.fca.13.insert = insertvalue %gem %GEM23.fca.12.insert, i64 %GEM23.fca.13.load, 13
  %GEM23.fca.14.load = load i64, i64* %GEM21.fca.14.gep
  %GEM23.fca.14.insert = insertvalue %gem %GEM23.fca.13.insert, i64 %GEM23.fca.14.load, 14
  %GEM23.fca.15.load = load double*, double** %GEM21.fca.15.gep
  %GEM23.fca.15.insert = insertvalue %gem %GEM23.fca.14.insert, double* %GEM23.fca.15.load, 15
  %GEM23.fca.16.load = load double*, double** %GEM21.fca.16.gep
  %GEM23.fca.16.insert = insertvalue %gem %GEM23.fca.15.insert, double* %GEM23.fca.16.load, 16
  %GEM23.fca.17.load = load double*, double** %GEM21.fca.17.gep
  %GEM23.fca.17.insert = insertvalue %gem %GEM23.fca.16.insert, double* %GEM23.fca.17.load, 17
  %GEM23.fca.18.load = load double*, double** %GEM21.fca.18.gep
  %GEM23.fca.18.insert = insertvalue %gem %GEM23.fca.17.insert, double* %GEM23.fca.18.load, 18
  %GEM23.fca.19.load = load double*, double** %GEM21.fca.19.gep
  %GEM23.fca.19.insert = insertvalue %gem %GEM23.fca.18.insert, double* %GEM23.fca.19.load, 19
  %GEM23.fca.20.load = load double*, double** %GEM21.fca.20.gep
  %GEM23.fca.20.insert = insertvalue %gem %GEM23.fca.19.insert, double* %GEM23.fca.20.load, 20
  %GEM23.fca.21.load = load double*, double** %GEM21.fca.21.gep
  %GEM23.fca.21.insert = insertvalue %gem %GEM23.fca.20.insert, double* %GEM23.fca.21.load, 21
  %GEM23.fca.22.load = load double*, double** %GEM21.fca.22.gep
  %GEM23.fca.22.insert = insertvalue %gem %GEM23.fca.21.insert, double* %GEM23.fca.22.load, 22
  %GEM23.fca.23.load = load double*, double** %GEM21.fca.23.gep
  %GEM23.fca.23.insert = insertvalue %gem %GEM23.fca.22.insert, double* %GEM23.fca.23.load, 23
  %GEM23.fca.24.load = load double*, double** %GEM21.fca.24.gep
  %GEM23.fca.24.insert = insertvalue %gem %GEM23.fca.23.insert, double* %GEM23.fca.24.load, 24
  %GEM23.fca.25.load = load double*, double** %GEM21.fca.25.gep
  %GEM23.fca.25.insert = insertvalue %gem %GEM23.fca.24.insert, double* %GEM23.fca.25.load, 25
  %GEM23.fca.26.load = load double, double* %GEM21.fca.26.gep
  %GEM23.fca.26.insert = insertvalue %gem %GEM23.fca.25.insert, double %GEM23.fca.26.load, 26
  %GEM23.fca.27.load = load double, double* %GEM21.fca.27.gep
  %GEM23.fca.27.insert = insertvalue %gem %GEM23.fca.26.insert, double %GEM23.fca.27.load, 27
  %GEM23.fca.28.load = load double, double* %GEM21.fca.28.gep
  %GEM23.fca.28.insert = insertvalue %gem %GEM23.fca.27.insert, double %GEM23.fca.28.load, 28
  %GEM23.fca.29.load = load double, double* %GEM21.fca.29.gep
  %GEM23.fca.29.insert = insertvalue %gem %GEM23.fca.28.insert, double %GEM23.fca.29.load, 29
  %GEM23.fca.30.load = load double, double* %GEM21.fca.30.gep
  %GEM23.fca.30.insert = insertvalue %gem %GEM23.fca.29.insert, double %GEM23.fca.30.load, 30
  %GEM23.fca.31.load = load <2 x double>*, <2 x double>** %GEM21.fca.31.gep
  %GEM23.fca.31.insert = insertvalue %gem %GEM23.fca.30.insert, <2 x double>* %GEM23.fca.31.load, 31
  %GEM23.fca.32.load = load <2 x double>*, <2 x double>** %GEM21.fca.32.gep
  %GEM23.fca.32.insert = insertvalue %gem %GEM23.fca.31.insert, <2 x double>* %GEM23.fca.32.load, 32
  %GEM23.fca.33.load = load <2 x double>*, <2 x double>** %GEM21.fca.33.gep
  %GEM23.fca.33.insert = insertvalue %gem %GEM23.fca.32.insert, <2 x double>* %GEM23.fca.33.load, 33
  %GEM23.fca.34.load = load <2 x double>*, <2 x double>** %GEM21.fca.34.gep
  %GEM23.fca.34.insert = insertvalue %gem %GEM23.fca.33.insert, <2 x double>* %GEM23.fca.34.load, 34
  %GEM23.fca.35.load = load <2 x double>*, <2 x double>** %GEM21.fca.35.gep
  %GEM23.fca.35.insert = insertvalue %gem %GEM23.fca.34.insert, <2 x double>* %GEM23.fca.35.load, 35
  %GEM23.fca.36.load = load <2 x double>*, <2 x double>** %GEM21.fca.36.gep
  %GEM23.fca.36.insert = insertvalue %gem %GEM23.fca.35.insert, <2 x double>* %GEM23.fca.36.load, 36
  %GEM23.fca.37.load = load <2 x double>, <2 x double>* %GEM21.fca.37.gep
  %GEM23.fca.37.insert = insertvalue %gem %GEM23.fca.36.insert, <2 x double> %GEM23.fca.37.load, 37
  %GEM23.fca.38.load = load <2 x double>, <2 x double>* %GEM21.fca.38.gep
  %GEM23.fca.38.insert = insertvalue %gem %GEM23.fca.37.insert, <2 x double> %GEM23.fca.38.load, 38
  %GEM23.fca.39.load = load <2 x double>, <2 x double>* %GEM21.fca.39.gep
  %GEM23.fca.39.insert = insertvalue %gem %GEM23.fca.38.insert, <2 x double> %GEM23.fca.39.load, 39
  %GEM23.fca.40.load = load <2 x double>, <2 x double>* %GEM21.fca.40.gep
  %GEM23.fca.40.insert = insertvalue %gem %GEM23.fca.39.insert, <2 x double> %GEM23.fca.40.load, 40
  %GEM23.fca.41.load = load <2 x double>, <2 x double>* %GEM21.fca.41.gep
  %GEM23.fca.41.insert = insertvalue %gem %GEM23.fca.40.insert, <2 x double> %GEM23.fca.41.load, 41
  %GEM23.fca.42.load = load <2 x double>, <2 x double>* %GEM21.fca.42.gep
  %biunit = call <2 x double> @"biunit@U"()
  store <2 x double> %biunit, <2 x double>* %mem
  %115 = icmp ne i64 %GEMSYS13.fca.1.load, 0
  br i1 %115, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return109 = call i64 @"sample_cdf@[FFI"(double* %GEMSYS13.fca.2.load, double %return)
  store i64 %return109, i64* %idx
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  br label %cond

cond:                                             ; preds = %end287, %end
  %clr.0 = phi double [ 0.000000e+00, %end ], [ %output301, %end287 ]
  %prv_clr.0 = phi double [ 0.000000e+00, %end ], [ %output301, %end287 ]
  %i.0 = phi i64 [ 0, %end ], [ %output304, %end287 ]
  %return112 = call i64 @"lt@III"(i64 %i.0, i64 %GEMSYSGLB2.fca.4.load)
  %116 = icmp ne i64 %return112, 0
  br i1 %116, label %body, label %end113

body:                                             ; preds = %cond
  br i1 %115, label %true115, label %false

end113:                                           ; preds = %cond
  %117 = icmp ne i64 %GEMSYSGLB2.fca.0.load, 0
  br i1 %117, label %true306, label %end307

true115:                                          ; preds = %body
  %cast = sitofp i64 %GEMSYS13.fca.0.load to double
  store double %cast, double* %1
  store double* %GEMSYS13.fca.3.load, double** %2
  %XAOS = call i64 @"XAOS@IIF[F"(i64* %idx, double* %1, double** %2)
  br label %end116

false:                                            ; preds = %body
  %return120 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return121 = call i64 @"sample_cdf@[FFI"(double* %GEMSYS13.fca.2.load, double %return120)
  br label %end116

end116:                                           ; preds = %false, %true115
  %phi = phi i64 [ %XAOS, %true115 ], [ %return121, %false ]
  store i64 %phi, i64* %idx
  %return124 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM23.fca.31.load, i64 %phi)
  %return127 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM23.fca.32.load, i64 %phi)
  %return130 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM23.fca.33.load, i64 %phi)
  %return133 = call double @"getcomp@F[FI"(double* %GEM23.fca.19.load, i64 %phi)
  %return136 = call double @"getcomp@F[FI"(double* %GEM23.fca.20.load, i64 %phi)
  %return139 = call double @"getcomp@F[FI"(double* %GEM23.fca.21.load, i64 %phi)
  %return142 = call double @"getcomp@F[FI"(double* %GEM23.fca.15.load, i64 %phi)
  %return145 = call double @"getcomp@F[FI"(double* %GEM23.fca.16.load, i64 %phi)
  %return148 = call double @"getcomp@F[FI"(double* %GEM23.fca.17.load, i64 %phi)
  %return151 = call double @"getcomp@F[FI"(double* %GEM23.fca.18.load, i64 %phi)
  %return154 = call double @"getcomp@F[FI"(double* %GEM23.fca.22.load, i64 %phi)
  %return157 = call i64 @"getcomp@I[II"(i64* %GEM23.fca.9.load, i64 %phi)
  %return160 = call double @"getcomp@F[FI"(double* %GEM23.fca.23.load, i64 %phi)
  %return163 = call double @"getcomp@F[FI"(double* %GEM23.fca.24.load, i64 %phi)
  store <2 x double> %return124, <2 x double>* %3
  store <2 x double> %return127, <2 x double>* %4
  store <2 x double> %return130, <2 x double>* %5
  call void @"affine@UUUU"(<2 x double>* %mem, <2 x double>* %3, <2 x double>* %4, <2 x double>* %5)
  %return168 = fcmp ogt double %return133, 0.000000e+00
  br i1 %return168, label %true170, label %end171

true170:                                          ; preds = %end116
  store double %return133, double* %6
  call void @"V_PREBLUR@UF"(<2 x double>* %mem, double* %6)
  br label %end171

end171:                                           ; preds = %true170, %end116
  %return174 = fcmp ogt double %return136, 0.000000e+00
  br i1 %return174, label %true176, label %end177

true176:                                          ; preds = %end171
  %idx178 = load i64, i64* %idx
  store i64 %idx178, i64* %7
  %idx180 = load i64, i64* %idx
  %return181 = call i64 @"getcomp@I[II"(i64* %GEM23.fca.6.load, i64 %idx180)
  store i64 %return181, i64* %8
  store i64 %GEMSYSGLB2.fca.3.load, i64* %9
  %mem183 = load <2 x double>, <2 x double>* %mem
  store <2 x double> %mem183, <2 x double>* %10
  store <2 x double> %return127, <2 x double>* %12
  store <2 x double> %return130, <2 x double>* %13
  store double %return136, double* %14
  %FLAME = call <2 x double> @"FLAME@UIIIUUUUF"(i64* %7, i64* %8, i64* %9, <2 x double>* %10, <2 x double>* %11, <2 x double>* %12, <2 x double>* %13, double* %14)
  store <2 x double> %FLAME, <2 x double>* %mem
  br label %end177

end177:                                           ; preds = %true176, %end171
  %return188 = fcmp ogt double %return139, 0.000000e+00
  br i1 %return188, label %true190, label %end191

true190:                                          ; preds = %end177
  %idx192 = load i64, i64* %idx
  store i64 %idx192, i64* %15
  %idx194 = load i64, i64* %idx
  %return195 = call i64 @"getcomp@I[II"(i64* %GEM23.fca.7.load, i64 %idx194)
  store i64 %return195, i64* %16
  store i64 %GEMSYSGLB2.fca.3.load, i64* %17
  %mem197 = load <2 x double>, <2 x double>* %mem
  store <2 x double> %mem197, <2 x double>* %18
  store <2 x double> %return127, <2 x double>* %20
  store <2 x double> %return130, <2 x double>* %21
  store double %return139, double* %22
  %FLAME201 = call <2 x double> @"FLAME@UIIIUUUUF"(i64* %15, i64* %16, i64* %17, <2 x double>* %18, <2 x double>* %19, <2 x double>* %20, <2 x double>* %21, double* %22)
  store <2 x double> %FLAME201, <2 x double>* %mem
  br label %end191

end191:                                           ; preds = %true190, %end177
  %cast202 = call <2 x double> @"set@UI"(i64 0)
  store <2 x double> %cast202, <2 x double>* %tmp
  %return204 = fcmp one double %return142, 0.000000e+00
  br i1 %return204, label %true206, label %end207

true206:                                          ; preds = %end191
  %idx209 = load i64, i64* %idx
  store i64 %idx209, i64* %23
  %idx211 = load i64, i64* %idx
  %return212 = call i64 @"getcomp@I[II"(i64* %GEM23.fca.2.load, i64 %idx211)
  store i64 %return212, i64* %24
  store i64 %GEMSYSGLB2.fca.3.load, i64* %25
  %mem214 = load <2 x double>, <2 x double>* %mem
  store <2 x double> %mem214, <2 x double>* %26
  store <2 x double> %return127, <2 x double>* %28
  store <2 x double> %return130, <2 x double>* %29
  store double %return142, double* %30
  %FLAME218 = call <2 x double> @"FLAME@UIIIUUUUF"(i64* %23, i64* %24, i64* %25, <2 x double>* %26, <2 x double>* %27, <2 x double>* %28, <2 x double>* %29, double* %30)
  %output = call <2 x double> @"add@UU"(<2 x double> %cast202, <2 x double> %FLAME218)
  store <2 x double> %output, <2 x double>* %tmp
  br label %end207

end207:                                           ; preds = %true206, %end191
  %return220 = fcmp one double %return145, 0.000000e+00
  br i1 %return220, label %true222, label %end223

true222:                                          ; preds = %end207
  %tmp224 = load <2 x double>, <2 x double>* %tmp
  %idx225 = load i64, i64* %idx
  store i64 %idx225, i64* %31
  %idx227 = load i64, i64* %idx
  %return228 = call i64 @"getcomp@I[II"(i64* %GEM23.fca.3.load, i64 %idx227)
  store i64 %return228, i64* %32
  store i64 %GEMSYSGLB2.fca.3.load, i64* %33
  %mem230 = load <2 x double>, <2 x double>* %mem
  store <2 x double> %mem230, <2 x double>* %34
  store <2 x double> %return127, <2 x double>* %36
  store <2 x double> %return130, <2 x double>* %37
  store double %return145, double* %38
  %FLAME234 = call <2 x double> @"FLAME@UIIIUUUUF"(i64* %31, i64* %32, i64* %33, <2 x double>* %34, <2 x double>* %35, <2 x double>* %36, <2 x double>* %37, double* %38)
  %output235 = call <2 x double> @"add@UU"(<2 x double> %tmp224, <2 x double> %FLAME234)
  store <2 x double> %output235, <2 x double>* %tmp
  br label %end223

end223:                                           ; preds = %true222, %end207
  %return237 = fcmp one double %return148, 0.000000e+00
  br i1 %return237, label %true239, label %end240

true239:                                          ; preds = %end223
  %tmp241 = load <2 x double>, <2 x double>* %tmp
  %idx242 = load i64, i64* %idx
  store i64 %idx242, i64* %39
  %idx244 = load i64, i64* %idx
  %return245 = call i64 @"getcomp@I[II"(i64* %GEM23.fca.4.load, i64 %idx244)
  store i64 %return245, i64* %40
  store i64 %GEMSYSGLB2.fca.3.load, i64* %41
  %mem247 = load <2 x double>, <2 x double>* %mem
  store <2 x double> %mem247, <2 x double>* %42
  store <2 x double> %return127, <2 x double>* %44
  store <2 x double> %return130, <2 x double>* %45
  store double %return148, double* %46
  %FLAME251 = call <2 x double> @"FLAME@UIIIUUUUF"(i64* %39, i64* %40, i64* %41, <2 x double>* %42, <2 x double>* %43, <2 x double>* %44, <2 x double>* %45, double* %46)
  %output252 = call <2 x double> @"add@UU"(<2 x double> %tmp241, <2 x double> %FLAME251)
  store <2 x double> %output252, <2 x double>* %tmp
  br label %end240

end240:                                           ; preds = %true239, %end223
  %return254 = fcmp one double %return151, 0.000000e+00
  br i1 %return254, label %true256, label %end257

true256:                                          ; preds = %end240
  %tmp258 = load <2 x double>, <2 x double>* %tmp
  %idx259 = load i64, i64* %idx
  store i64 %idx259, i64* %47
  %idx261 = load i64, i64* %idx
  %return262 = call i64 @"getcomp@I[II"(i64* %GEM23.fca.5.load, i64 %idx261)
  store i64 %return262, i64* %48
  store i64 %GEMSYSGLB2.fca.3.load, i64* %49
  %mem264 = load <2 x double>, <2 x double>* %mem
  store <2 x double> %mem264, <2 x double>* %50
  store <2 x double> %return127, <2 x double>* %52
  store <2 x double> %return130, <2 x double>* %53
  store double %return151, double* %54
  %FLAME268 = call <2 x double> @"FLAME@UIIIUUUUF"(i64* %47, i64* %48, i64* %49, <2 x double>* %50, <2 x double>* %51, <2 x double>* %52, <2 x double>* %53, double* %54)
  %output269 = call <2 x double> @"add@UU"(<2 x double> %tmp258, <2 x double> %FLAME268)
  store <2 x double> %output269, <2 x double>* %tmp
  br label %end257

end257:                                           ; preds = %true256, %end240
  %return271 = fcmp ogt double %return154, 0.000000e+00
  br i1 %return271, label %true273, label %end274

true273:                                          ; preds = %end257
  %idx275 = load i64, i64* %idx
  store i64 %idx275, i64* %55
  %idx277 = load i64, i64* %idx
  %return278 = call i64 @"getcomp@I[II"(i64* %GEM23.fca.8.load, i64 %idx277)
  store i64 %return278, i64* %56
  store i64 %GEMSYSGLB2.fca.3.load, i64* %57
  %tmp280 = load <2 x double>, <2 x double>* %tmp
  store <2 x double> %tmp280, <2 x double>* %58
  store <2 x double> %return127, <2 x double>* %60
  store <2 x double> %return130, <2 x double>* %61
  store double %return154, double* %62
  %FLAME284 = call <2 x double> @"FLAME@UIIIUUUUF"(i64* %55, i64* %56, i64* %57, <2 x double>* %58, <2 x double>* %59, <2 x double>* %60, <2 x double>* %61, double* %62)
  store <2 x double> %FLAME284, <2 x double>* %tmp
  br label %end274

end274:                                           ; preds = %true273, %end257
  %118 = icmp ne i64 %return157, 0
  br i1 %118, label %true286, label %end287

true286:                                          ; preds = %end274
  %idx289 = load i64, i64* %idx
  %return290 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM23.fca.34.load, i64 %idx289)
  store <2 x double> %return290, <2 x double>* %63
  %idx292 = load i64, i64* %idx
  %return293 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM23.fca.35.load, i64 %idx292)
  store <2 x double> %return293, <2 x double>* %64
  %idx295 = load i64, i64* %idx
  %return296 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEM23.fca.36.load, i64 %idx295)
  store <2 x double> %return296, <2 x double>* %65
  call void @"affine@UUUU"(<2 x double>* %tmp, <2 x double>* %63, <2 x double>* %64, <2 x double>* %65)
  br label %end287

end287:                                           ; preds = %true286, %end274
  %output300 = fmul double %return163, %prv_clr.0
  %output301 = fadd double %return160, %output300
  %tmp302 = load <2 x double>, <2 x double>* %tmp
  store <2 x double> %tmp302, <2 x double>* %mem
  %output304 = add i64 %i.0, 1
  br label %cond

true306:                                          ; preds = %end113
  store <2 x double> %GEM23.fca.37.load, <2 x double>* %66
  store <2 x double> %GEM23.fca.38.load, <2 x double>* %67
  store <2 x double> %GEM23.fca.39.load, <2 x double>* %68
  call void @"affine@UUUU"(<2 x double>* %mem, <2 x double>* %66, <2 x double>* %67, <2 x double>* %68)
  %return312 = fcmp ogt double %GEM23.fca.26.load, 0.000000e+00
  br i1 %return312, label %true314, label %end315

end307:                                           ; preds = %end377, %end113
  %idx383 = load i64, i64* %idx
  %return384 = call double @"getcomp@F[FI"(double* %GEM23.fca.25.load, i64 %idx383)
  store i64 %GEMSYSGLB2.fca.1.load, i64* %69
  %mem386 = load <2 x double>, <2 x double>* %mem
  store <2 x double> %mem386, <2 x double>* %70
  store double %return384, double* %71
  %chkPT = call i64 @"chkPT@IIUF"(i64* %69, <2 x double>* %70, double* %71)
  %119 = icmp ne i64 %chkPT, 0
  br i1 %119, label %true388, label %false389

true314:                                          ; preds = %true306
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @138, i64 0, i64 0), i8** %72
  store i64 %GEM23.fca.10.load, i64* %73
  store i64 %GEMSYSGLB2.fca.3.load, i64* %74
  %mem318 = load <2 x double>, <2 x double>* %mem
  store <2 x double> %mem318, <2 x double>* %75
  store <2 x double> %GEM23.fca.38.load, <2 x double>* %77
  store <2 x double> %GEM23.fca.39.load, <2 x double>* %78
  store double %GEM23.fca.26.load, double* %79
  %FLAMEFF = call <2 x double> @"FLAMEFF@USIIUUUUF"(i8** %72, i64* %73, i64* %74, <2 x double>* %75, <2 x double>* %76, <2 x double>* %77, <2 x double>* %78, double* %79)
  store <2 x double> %FLAMEFF, <2 x double>* %mem
  br label %end315

end315:                                           ; preds = %true314, %true306
  %cast322 = call <2 x double> @"set@UI"(i64 0)
  store <2 x double> %cast322, <2 x double>* %tmp
  %return324 = fcmp one double %GEM23.fca.27.load, 0.000000e+00
  br i1 %return324, label %true326, label %end327

true326:                                          ; preds = %end315
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @139, i64 0, i64 0), i8** %80
  store i64 %GEM23.fca.11.load, i64* %81
  store i64 %GEMSYSGLB2.fca.3.load, i64* %82
  %mem331 = load <2 x double>, <2 x double>* %mem
  store <2 x double> %mem331, <2 x double>* %83
  store <2 x double> %GEM23.fca.38.load, <2 x double>* %85
  store <2 x double> %GEM23.fca.39.load, <2 x double>* %86
  store double %GEM23.fca.27.load, double* %87
  %FLAMEFF335 = call <2 x double> @"FLAMEFF@USIIUUUUF"(i8** %80, i64* %81, i64* %82, <2 x double>* %83, <2 x double>* %84, <2 x double>* %85, <2 x double>* %86, double* %87)
  %output336 = call <2 x double> @"add@UU"(<2 x double> %cast322, <2 x double> %FLAMEFF335)
  store <2 x double> %output336, <2 x double>* %tmp
  br label %end327

end327:                                           ; preds = %true326, %end315
  %return338 = fcmp one double %GEM23.fca.28.load, 0.000000e+00
  br i1 %return338, label %true340, label %end341

true340:                                          ; preds = %end327
  %tmp342 = load <2 x double>, <2 x double>* %tmp
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @139, i64 0, i64 0), i8** %88
  store i64 %GEM23.fca.12.load, i64* %89
  store i64 %GEMSYSGLB2.fca.3.load, i64* %90
  %mem345 = load <2 x double>, <2 x double>* %mem
  store <2 x double> %mem345, <2 x double>* %91
  store <2 x double> %GEM23.fca.38.load, <2 x double>* %93
  store <2 x double> %GEM23.fca.39.load, <2 x double>* %94
  store double %GEM23.fca.28.load, double* %95
  %FLAMEFF349 = call <2 x double> @"FLAMEFF@USIIUUUUF"(i8** %88, i64* %89, i64* %90, <2 x double>* %91, <2 x double>* %92, <2 x double>* %93, <2 x double>* %94, double* %95)
  %output350 = call <2 x double> @"add@UU"(<2 x double> %tmp342, <2 x double> %FLAMEFF349)
  store <2 x double> %output350, <2 x double>* %tmp
  br label %end341

end341:                                           ; preds = %true340, %end327
  %return352 = fcmp ogt double %GEM23.fca.29.load, 0.000000e+00
  br i1 %return352, label %true354, label %end355

true354:                                          ; preds = %end341
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @138, i64 0, i64 0), i8** %96
  store i64 %GEM23.fca.13.load, i64* %97
  store i64 %GEMSYSGLB2.fca.3.load, i64* %98
  %tmp358 = load <2 x double>, <2 x double>* %tmp
  store <2 x double> %tmp358, <2 x double>* %99
  store <2 x double> %GEM23.fca.38.load, <2 x double>* %101
  store <2 x double> %GEM23.fca.39.load, <2 x double>* %102
  store double %GEM23.fca.29.load, double* %103
  %FLAMEFF362 = call <2 x double> @"FLAMEFF@USIIUUUUF"(i8** %96, i64* %97, i64* %98, <2 x double>* %99, <2 x double>* %100, <2 x double>* %101, <2 x double>* %102, double* %103)
  store <2 x double> %FLAMEFF362, <2 x double>* %tmp
  br label %end355

end355:                                           ; preds = %true354, %end341
  %return364 = fcmp ogt double %GEM23.fca.30.load, 0.000000e+00
  br i1 %return364, label %true366, label %end367

true366:                                          ; preds = %end355
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @138, i64 0, i64 0), i8** %104
  store i64 %GEM23.fca.14.load, i64* %105
  store i64 %GEMSYSGLB2.fca.3.load, i64* %106
  %tmp370 = load <2 x double>, <2 x double>* %tmp
  store <2 x double> %tmp370, <2 x double>* %107
  store <2 x double> %GEM23.fca.38.load, <2 x double>* %109
  store <2 x double> %GEM23.fca.39.load, <2 x double>* %110
  store double %GEM23.fca.30.load, double* %111
  %FLAMEFF374 = call <2 x double> @"FLAMEFF@USIIUUUUF"(i8** %104, i64* %105, i64* %106, <2 x double>* %107, <2 x double>* %108, <2 x double>* %109, <2 x double>* %110, double* %111)
  store <2 x double> %FLAMEFF374, <2 x double>* %tmp
  br label %end367

end367:                                           ; preds = %true366, %end355
  %120 = icmp ne i64 %GEM23.fca.0.load, 0
  br i1 %120, label %true376, label %end377

true376:                                          ; preds = %end367
  store <2 x double> %GEM23.fca.40.load, <2 x double>* %112
  store <2 x double> %GEM23.fca.41.load, <2 x double>* %113
  store <2 x double> %GEM23.fca.42.load, <2 x double>* %114
  call void @"affine@UUUU"(<2 x double>* %tmp, <2 x double>* %112, <2 x double>* %113, <2 x double>* %114)
  br label %end377

end377:                                           ; preds = %true376, %end367
  %tmp381 = load <2 x double>, <2 x double>* %tmp
  store <2 x double> %tmp381, <2 x double>* %mem
  br label %end307

true388:                                          ; preds = %end307
  %_bound_ptnum391 = load i64, i64* %_bound_ptnum
  %return392 = call i64 @"removepoint@III"(i64 0, i64 %_bound_ptnum391)
  br label %end390

false389:                                         ; preds = %end307
  %output395 = fmul double 1.000000e-03, %return384
  %121 = icmp ne i64 %GEMSYSGLB2.fca.2.load, 0
  br i1 %121, label %true397, label %end398

end390:                                           ; preds = %end398, %true388
  ret void

true397:                                          ; preds = %false389
  %return399 = call double @"detail@FISI"(i64 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @140, i64 0, i64 0), i64 0)
  %output402 = fmul double %output395, %return399
  %_bound_ptnum403 = load i64, i64* %_bound_ptnum
  %return405 = call i64 @"setpointattrib@IISIFS"(i64 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @141, i64 0, i64 0), i64 %_bound_ptnum403, double %return399, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @142, i64 0, i64 0))
  br label %end398

end398:                                           ; preds = %true397, %false389
  %pscl.0 = phi double [ %output402, %true397 ], [ %output395, %false389 ]
  %mem406 = load <2 x double>, <2 x double>* %mem
  %cast407 = call <3 x double> @"set@VU"(<2 x double> %mem406)
  store <3 x double> %cast407, <3 x double>* %_bound_P
  store double %clr.0, double* %_bound_clr
  store double %pscl.0, double* %_bound_pscale
  store double %return384, double* %_bound_Alpha
  br label %end390
}

; Function Attrs: nounwind readnone
declare <2 x double> @"set@UI"(i64) #0

; Function Attrs: nounwind readnone
declare <2 x double> @"add@UU"(<2 x double>, <2 x double>) #0

; Function Attrs: nounwind
declare i64 @"removepoint@III"(i64, i64) #2

; Function Attrs: nounwind
declare double @"detail@FISI"(i64, i8*, i64) #2

; Function Attrs: nounwind
declare i64 @"setpointattrib@IISIFS"(i64, i8*, i64, double, i8*) #2

; Function Attrs: nounwind readnone
declare <3 x double> @"set@VU"(<2 x double>) #0

; Function Attrs: nounwind
define void @FLAM3(i64 %ptnum, double %pscale, double %clr, double %Alpha, <3 x double> %P) #2 {
__llvm_entry:
  %"<pscale>" = alloca double
  %"<clr>" = alloca double
  %"<Alpha>" = alloca double
  %"<P>" = alloca <3 x double>
  %0 = alloca i64
  store double %pscale, double* %"<pscale>"
  store double %clr, double* %"<clr>"
  store double %Alpha, double* %"<Alpha>"
  store <3 x double> %P, <3 x double>* %"<P>"
  store i64 %ptnum, i64* %0
  call void @"_FLAM3@IFFFV"(i64* %0, double* %"<pscale>", double* %"<clr>", double* %"<Alpha>", <3 x double>* %"<P>")
  %gvalue = call i64 @"_export@ISI"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @143, i64 0, i64 0), i64 %ptnum) #4
  %evalue2 = load double, double* %"<pscale>"
  %gvalue3 = call double @"_export@FSF"(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @144, i64 0, i64 0), double %evalue2) #4
  %evalue4 = load double, double* %"<clr>"
  %gvalue5 = call double @"_export@FSF"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @145, i64 0, i64 0), double %evalue4) #4
  %evalue6 = load double, double* %"<Alpha>"
  %gvalue7 = call double @"_export@FSF"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @146, i64 0, i64 0), double %evalue6) #4
  %evalue8 = load <3 x double>, <3 x double>* %"<P>"
  %gvalue9 = call <3 x double> @"_export@VSV"(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @147, i64 0, i64 0), <3 x double> %evalue8) #4
  store i64 %gvalue, i64* @ptnum
  store double %gvalue3, double* @pscale
  store double %gvalue5, double* @clr
  store double %gvalue7, double* @Alpha
  store <3 x double> %gvalue9, <3 x double>* @P
  ret void
}

declare i64 @"_export@ISI"(i8*, i64)

declare double @"_export@FSF"(i8*, double)

declare <3 x double> @"_export@VSV"(i8*, <3 x double>)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @FLAM3(i64 0, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, <3 x double> zeroinitializer)
  ret void
}

attributes #0 = { nounwind readnone }
attributes #1 = { alwaysinline nounwind }
attributes #2 = { nounwind }
attributes #3 = { alwaysinline }
attributes #4 = { nounwind readonly }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"20.5.370"}
!2 = !{!"64"}
!3 = !{!""}

;_code_end
