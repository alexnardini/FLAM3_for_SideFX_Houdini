;_name	FLAM3
; ModuleID = 'FLAM3'
source_filename = "FLAM3"

%gemSYSGLB = type { i64, i64, i64, i64, i64 }
%gemSYS = type { i64, i64, double*, double* }
%gemSHD = type { double*, double*, double* }
%gemPV = type { i64*, i64*, double*, double*, double* }
%gemV = type { i64*, i64*, i64*, i64*, double*, double*, double*, double* }
%gemVP = type { i64*, i64*, double* }
%gemPA = type { <2 x double>*, <2 x double>*, <2 x double>* }
%gemAP = type { i64*, <2 x double>*, <2 x double>*, <2 x double>* }
%gemFFPV = type { i64, double }
%gemFFV = type { i64, i64, double, double }
%gemFFVP = type { i64, i64, double, double }
%gemFFPA = type { <2 x double>, <2 x double>, <2 x double> }
%gemFFAP = type { i64, <2 x double>, <2 x double>, <2 x double> }

@0 = private constant [8 x i8] c"twister\00"
@1 = private constant [3 x i8] c"FF\00"
@2 = private constant [4 x i8] c"RIP\00"
@3 = private constant [3 x i8] c"MB\00"
@4 = private constant [4 x i8] c"F3C\00"
@5 = private constant [5 x i8] c"ITER\00"
@6 = private constant [4 x i8] c"RES\00"
@7 = private constant [3 x i8] c"IW\00"
@8 = private constant [3 x i8] c"XS\00"
@9 = private constant [4 x i8] c"XST\00"
@10 = private constant [0 x double] zeroinitializer
@11 = private constant [2 x i8] c"A\00"
@12 = private constant [4 x i8] c"CLR\00"
@13 = private constant [3 x i8] c"OM\00"
@14 = private constant [4 x i8] c"p1t\00"
@15 = private constant [4 x i8] c"p2t\00"
@16 = private constant [4 x i8] c"pbw\00"
@17 = private constant [4 x i8] c"p1w\00"
@18 = private constant [4 x i8] c"p2w\00"
@19 = private constant [0 x i64] zeroinitializer
@20 = private constant [4 x i8] c"v1t\00"
@21 = private constant [4 x i8] c"v2t\00"
@22 = private constant [4 x i8] c"v3t\00"
@23 = private constant [4 x i8] c"v4t\00"
@24 = private constant [4 x i8] c"v1w\00"
@25 = private constant [4 x i8] c"v2w\00"
@26 = private constant [4 x i8] c"v3w\00"
@27 = private constant [4 x i8] c"v4w\00"
@28 = private constant [4 x i8] c"P1t\00"
@29 = private constant [4 x i8] c"P1w\00"
@30 = private constant [2 x i8] c"X\00"
@31 = private constant [2 x i8] c"Y\00"
@32 = private constant [2 x i8] c"O\00"
@33 = private constant [0 x <2 x double>] zeroinitializer
@34 = private constant [5 x i8] c"POST\00"
@35 = private constant [3 x i8] c"PX\00"
@36 = private constant [3 x i8] c"PY\00"
@37 = private constant [3 x i8] c"PO\00"
@38 = private constant [5 x i8] c"fp1t\00"
@39 = private constant [5 x i8] c"fp1w\00"
@40 = private constant [5 x i8] c"fv1t\00"
@41 = private constant [5 x i8] c"fv2t\00"
@42 = private constant [5 x i8] c"fv1w\00"
@43 = private constant [5 x i8] c"fv2w\00"
@44 = private constant [5 x i8] c"fP1t\00"
@45 = private constant [5 x i8] c"fP2t\00"
@46 = private constant [5 x i8] c"fP1w\00"
@47 = private constant [5 x i8] c"fP2w\00"
@48 = private constant [3 x i8] c"FX\00"
@49 = private constant [3 x i8] c"FY\00"
@50 = private constant [3 x i8] c"FO\00"
@51 = private constant [4 x i8] c"PFF\00"
@52 = private constant [4 x i8] c"PFX\00"
@53 = private constant [4 x i8] c"PFY\00"
@54 = private constant [4 x i8] c"PFO\00"
@55 = private constant [7 x i8] c"curl_c\00"
@56 = private constant [5 x i8] c"ngon\00"
@57 = private constant [6 x i8] c"pdj_w\00"
@58 = private constant [5 x i8] c"blob\00"
@59 = private constant [7 x i8] c"julian\00"
@60 = private constant [11 x i8] c"juliascope\00"
@61 = private constant [5 x i8] c"fan2\00"
@62 = private constant [11 x i8] c"rings2_val\00"
@63 = private constant [11 x i8] c"rectangles\00"
@64 = private constant [11 x i8] c"radialblur\00"
@65 = private constant [4 x i8] c"pie\00"
@66 = private constant [6 x i8] c"disc2\00"
@67 = private constant [9 x i8] c"pc_DISC2\00"
@68 = private constant [11 x i8] c"supershape\00"
@69 = private constant [13 x i8] c"supershape_n\00"
@70 = private constant [7 x i8] c"flower\00"
@71 = private constant [6 x i8] c"conic\00"
@72 = private constant [9 x i8] c"parabola\00"
@73 = private constant [6 x i8] c"bent2\00"
@74 = private constant [14 x i8] c"bipolar_shift\00"
@75 = private constant [10 x i8] c"cell_size\00"
@76 = private constant [5 x i8] c"cpow\00"
@77 = private constant [12 x i8] c"escher_beta\00"
@78 = private constant [10 x i8] c"lazysusan\00"
@79 = private constant [13 x i8] c"lazysusanxyz\00"
@80 = private constant [8 x i8] c"modulus\00"
@81 = private constant [7 x i8] c"oscope\00"
@82 = private constant [11 x i8] c"popcorn2_c\00"
@83 = private constant [9 x i8] c"popcorn2\00"
@84 = private constant [7 x i8] c"splits\00"
@85 = private constant [11 x i8] c"separation\00"
@86 = private constant [18 x i8] c"separation_inside\00"
@87 = private constant [6 x i8] c"split\00"
@88 = private constant [8 x i8] c"stripes\00"
@89 = private constant [6 x i8] c"wedge\00"
@90 = private constant [11 x i8] c"wedgejulia\00"
@91 = private constant [9 x i8] c"wedgesph\00"
@92 = private constant [6 x i8] c"whorl\00"
@93 = private constant [13 x i8] c"waves2_scale\00"
@94 = private constant [12 x i8] c"waves2_freq\00"
@95 = private constant [6 x i8] c"auger\00"
@96 = private constant [12 x i8] c"flux_spread\00"
@97 = private constant [10 x i8] c"mobius_re\00"
@98 = private constant [10 x i8] c"mobius_im\00"
@99 = private constant [13 x i8] c"curve_lenght\00"
@100 = private constant [10 x i8] c"curve_amp\00"
@101 = private constant [6 x i8] c"persp\00"
@102 = private constant [7 x i8] c"bwraps\00"
@103 = private constant [12 x i8] c"bwrapstwist\00"
@104 = private constant [15 x i8] c"polynomial_pow\00"
@105 = private constant [14 x i8] c"polynomial_lc\00"
@106 = private constant [14 x i8] c"polynomial_sc\00"
@107 = private constant [10 x i8] c"crop_ltrb\00"
@108 = private constant [8 x i8] c"crop_az\00"
@109 = private constant [15 x i8] c"point_symmetry\00"
@110 = private constant [6 x i8] c"curlc\00"
@111 = private constant [5 x i8] c"pdjw\00"
@112 = private constant [10 x i8] c"rings2val\00"
@113 = private constant [12 x i8] c"supershapen\00"
@114 = private constant [8 x i8] c"bent2xy\00"
@115 = private constant [13 x i8] c"bipolarshift\00"
@116 = private constant [9 x i8] c"cellsize\00"
@117 = private constant [11 x i8] c"escherbeta\00"
@118 = private constant [11 x i8] c"modulusXYZ\00"
@119 = private constant [10 x i8] c"popcorn2c\00"
@120 = private constant [12 x i8] c"popcorn2xyz\00"
@121 = private constant [14 x i8] c"separationxyz\00"
@122 = private constant [20 x i8] c"separationinsidexyz\00"
@123 = private constant [9 x i8] c"splitxyz\00"
@124 = private constant [10 x i8] c"splitsxyz\00"
@125 = private constant [15 x i8] c"waves2scalexyz\00"
@126 = private constant [14 x i8] c"waves2freqxyz\00"
@127 = private constant [11 x i8] c"fluxspread\00"
@128 = private constant [9 x i8] c"mobiusre\00"
@129 = private constant [9 x i8] c"mobiusim\00"
@130 = private constant [15 x i8] c"curvexyzlenght\00"
@131 = private constant [12 x i8] c"curvexyzamp\00"
@132 = private constant [14 x i8] c"polynomialpow\00"
@133 = private constant [13 x i8] c"polynomiallc\00"
@134 = private constant [13 x i8] c"polynomialsc\00"
@135 = private constant [9 x i8] c"cropltrb\00"
@136 = private constant [7 x i8] c"cropaz\00"
@137 = private constant [6 x i8] c"ptsym\00"
@138 = private constant [8 x i8] c"../fp1_\00"
@139 = private constant [7 x i8] c"../ff_\00"
@140 = private constant [11 x i8] c"Tstep_mult\00"
@ptnum = external global i64
@pscale = external global double
@clr = external global double
@Alpha = external global double
@mb = external global double
@P = external global <3 x double>
@141 = private constant [6 x i8] c"ptnum\00"
@142 = private constant [7 x i8] c"pscale\00"
@143 = private constant [4 x i8] c"clr\00"
@144 = private constant [6 x i8] c"Alpha\00"
@145 = private constant [3 x i8] c"mb\00"
@146 = private constant [2 x i8] c"P\00"

; Function Attrs: nounwind readnone
declare double @"div@FF"(double, double) #0

; Function Attrs: alwaysinline nounwind
define private double @"ATAN@FU"(<2 x double>* %p) #1 {
__llvm_entry:
  %p1 = load <2 x double>, <2 x double>* %p
  %return = call double @"getcomp@FUI"(<2 x double> %p1, i64 0)
  %return3 = call double @"getcomp@FUI"(<2 x double> %p1, i64 1)
  %return4 = call double @"atan2@FFF"(double %return, double %return3)
  ret double %return4
}

; Function Attrs: nounwind readnone
declare double @"getcomp@FUI"(<2 x double>, i64) #0

; Function Attrs: nounwind readnone
declare double @"atan2@FFF"(double, double) #0

; Function Attrs: alwaysinline nounwind
define private double @"ATANYX@FU"(<2 x double>* %p) #1 {
__llvm_entry:
  %p1 = load <2 x double>, <2 x double>* %p
  %return = call double @"getcomp@FUI"(<2 x double> %p1, i64 1)
  %return3 = call double @"getcomp@FUI"(<2 x double> %p1, i64 0)
  %return4 = call double @"atan2@FFF"(double %return, double %return3)
  ret double %return4
}

; Function Attrs: alwaysinline nounwind
define private double @"SUMSQ@FU"(<2 x double>* %p) #1 {
__llvm_entry:
  %p1 = load <2 x double>, <2 x double>* %p
  %return = call double @"getcomp@FUI"(<2 x double> %p1, i64 0)
  %output = fmul double %return, %return
  %return5 = call double @"getcomp@FUI"(<2 x double> %p1, i64 1)
  %output8 = fmul double %return5, %return5
  %output9 = fadd double %output, %output8
  ret double %output9
}

; Function Attrs: alwaysinline nounwind
define private double @"SQRT@FU"(<2 x double>* %p) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %p1 = load <2 x double>, <2 x double>* %p
  store <2 x double> %p1, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %return = call double @"sqrt@FF"(double %SUMSQ)
  ret double %return
}

; Function Attrs: nounwind readnone
declare double @"sqrt@FF"(double) #0

; Function Attrs: alwaysinline nounwind
define private double @"SafeTan@FF"(double* %x) #1 {
__llvm_entry:
  %x1 = load double, double* %x
  %return = call double @"neg@FF"(double 8.388607e+06)
  %return2 = call double @"clamp@FFFF"(double %x1, double %return, double 8.388607e+06)
  %return3 = call double @"tan@FF"(double %return2)
  ret double %return3
}

; Function Attrs: nounwind readnone
declare double @"neg@FF"(double) #0

; Function Attrs: nounwind
declare double @"clamp@FFFF"(double, double, double) #2

; Function Attrs: nounwind readnone
declare double @"tan@FF"(double) #0

; Function Attrs: alwaysinline nounwind
define private double @"Zeps@FF"(double* %x) #1 {
__llvm_entry:
  %x1 = load double, double* %x
  %return = fcmp oeq double %x1, 0.000000e+00
  br i1 %return, label %end, label %false

false:                                            ; preds = %__llvm_entry
  br label %end

end:                                              ; preds = %__llvm_entry, %false
  %phi = phi double [ %x1, %false ], [ 0x3CB0000000000000, %__llvm_entry ]
  ret double %phi
}

; Function Attrs: alwaysinline nounwind
define private double @"sgn@FF"(double* %n) #1 {
__llvm_entry:
  %n1 = load double, double* %n
  %return = fcmp olt double %n1, 0.000000e+00
  br i1 %return, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %return3 = call i64 @"neg@II"(i64 1)
  br label %end

false:                                            ; preds = %__llvm_entry
  %return5 = fcmp ogt double %n1, 0.000000e+00
  %. = select i1 %return5, i64 1, i64 0
  br label %end

end:                                              ; preds = %false, %true
  %phi10 = phi i64 [ %return3, %true ], [ %., %false ]
  %cast = sitofp i64 %phi10 to double
  ret double %cast
}

; Function Attrs: nounwind readnone
declare i64 @"neg@II"(i64) #0

; Function Attrs: alwaysinline nounwind
define private double @"fmod@FFF"(double* %a, double* %b) #1 {
__llvm_entry:
  %a1 = load double, double* %a
  %b3 = load double, double* %b
  %output = call double @"div@FF"(double %a1, double %b3)
  %return = call double @"floor@FF"(double %output)
  %output5 = fmul double %return, %b3
  %output6 = fsub double %a1, %output5
  ret double %output6
}

; Function Attrs: nounwind readnone
declare double @"floor@FF"(double) #0

; Function Attrs: alwaysinline nounwind
define private void @"sincos@FFF"(double* %a, double* %sa, double* %ca) #1 {
__llvm_entry:
  %a1 = load double, double* %a
  %return = call double @"sin@FF"(double %a1)
  store double %return, double* %sa
  %a2 = load double, double* %a
  %return3 = call double @"cos@FF"(double %a2)
  store double %return3, double* %ca
  ret void
}

; Function Attrs: nounwind readnone
declare double @"sin@FF"(double) #0

; Function Attrs: nounwind readnone
declare double @"cos@FF"(double) #0

; Function Attrs: alwaysinline nounwind
define private void @"precalc_V_DISC2@VFF"(<3 x double>* %disc2_precalc, double* %rot, double* %twist) #1 {
__llvm_entry:
  %0 = alloca double
  %1 = alloca double
  %2 = alloca double
  %rot1 = load double, double* %rot
  %output = fmul double %rot1, 0x400921FB4D12D84A
  %tmp = load <3 x double>, <3 x double>* %disc2_precalc
  %return = call { double, <3 x double> } @"setcomp@FVFI"(<3 x double> %tmp, double %output, i64 0)
  %output3 = extractvalue { double, <3 x double> } %return, 1
  store <3 x double> %output3, <3 x double>* %disc2_precalc
  %twist4 = load double, double* %twist
  store double %twist4, double* %0
  call void @"sincos@FFF"(double* %0, double* %1, double* %2)
  %arg = load double, double* %1
  %tmp5 = load <3 x double>, <3 x double>* %disc2_precalc
  %return6 = call { double, <3 x double> } @"setcomp@FVFI"(<3 x double> %tmp5, double %arg, i64 1)
  %output8 = extractvalue { double, <3 x double> } %return6, 1
  store <3 x double> %output8, <3 x double>* %disc2_precalc
  %arg9 = load double, double* %2
  %return11 = call { double, <3 x double> } @"setcomp@FVFI"(<3 x double> %output8, double %arg9, i64 2)
  %output13 = extractvalue { double, <3 x double> } %return11, 1
  store <3 x double> %output13, <3 x double>* %disc2_precalc
  %return15 = call double @"getcomp@FVI"(<3 x double> %output13, i64 2)
  %output16 = fsub double %return15, 1.000000e+00
  %return18 = call { double, <3 x double> } @"setcomp@FVFI"(<3 x double> %output13, double %output16, i64 2)
  %output20 = extractvalue { double, <3 x double> } %return18, 1
  store <3 x double> %output20, <3 x double>* %disc2_precalc
  %twist21 = load double, double* %twist
  %return22 = fcmp ogt double %twist21, 0x401921FB4D12D84A
  br i1 %return22, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %output25 = fadd double 1.000000e+00, %twist21
  %output26 = fsub double %output25, 0x401921FB4D12D84A
  %return28 = call double @"getcomp@FVI"(<3 x double> %output20, i64 2)
  %output30 = fmul double %return28, %output26
  %return32 = call { double, <3 x double> } @"setcomp@FVFI"(<3 x double> %output20, double %output30, i64 2)
  %output34 = extractvalue { double, <3 x double> } %return32, 1
  store <3 x double> %output34, <3 x double>* %disc2_precalc
  %return36 = call double @"getcomp@FVI"(<3 x double> %output34, i64 1)
  %output38 = fmul double %return36, %output26
  %return40 = call { double, <3 x double> } @"setcomp@FVFI"(<3 x double> %output34, double %output38, i64 1)
  %output42 = extractvalue { double, <3 x double> } %return40, 1
  store <3 x double> %output42, <3 x double>* %disc2_precalc
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %twist43 = load double, double* %twist
  %return44 = call i64 @"neg@II"(i64 2)
  %cast = sitofp i64 %return44 to double
  %output45 = fmul double %cast, 0x400921FB4D12D84A
  %return46 = fcmp olt double %twist43, %output45
  br i1 %return46, label %true48, label %end49

true48:                                           ; preds = %end
  %output51 = fadd double 1.000000e+00, %twist43
  %output52 = fadd double %output51, 0x401921FB4D12D84A
  %disc2_precalc53 = load <3 x double>, <3 x double>* %disc2_precalc
  %return54 = call double @"getcomp@FVI"(<3 x double> %disc2_precalc53, i64 2)
  %output56 = fmul double %return54, %output52
  %return58 = call { double, <3 x double> } @"setcomp@FVFI"(<3 x double> %disc2_precalc53, double %output56, i64 2)
  %output60 = extractvalue { double, <3 x double> } %return58, 1
  store <3 x double> %output60, <3 x double>* %disc2_precalc
  %return62 = call double @"getcomp@FVI"(<3 x double> %output60, i64 1)
  %output64 = fmul double %return62, %output52
  %return66 = call { double, <3 x double> } @"setcomp@FVFI"(<3 x double> %output60, double %output64, i64 1)
  %output68 = extractvalue { double, <3 x double> } %return66, 1
  store <3 x double> %output68, <3 x double>* %disc2_precalc
  br label %end49

end49:                                            ; preds = %true48, %end
  ret void
}

; Function Attrs: alwaysinline
define private { double, <3 x double> } @"setcomp@FVFI"(<3 x double> %rw11, double %rw22, i64 %rw33) #3 {
__llvm_entry:
  %rw16 = call <3 x double> @"setcomp@VFI"(<3 x double> %rw11, double %rw22, i64 %rw33)
  %mrv = insertvalue { double, <3 x double> } undef, double %rw22, 0
  %mrv9 = insertvalue { double, <3 x double> } %mrv, <3 x double> %rw16, 1
  ret { double, <3 x double> } %mrv9
}

; Function Attrs: nounwind readnone
declare <3 x double> @"setcomp@VFI"(<3 x double>, double, i64) #0

; Function Attrs: nounwind readnone
declare double @"getcomp@FVI"(<3 x double>, i64) #0

; Function Attrs: alwaysinline
define private { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %rw11, double %rw22, i64 %rw33) #3 {
__llvm_entry:
  %rw16 = call <2 x double> @"setcomp@UFI"(<2 x double> %rw11, double %rw22, i64 %rw33)
  %mrv = insertvalue { double, <2 x double> } undef, double %rw22, 0
  %mrv9 = insertvalue { double, <2 x double> } %mrv, <2 x double> %rw16, 1
  ret { double, <2 x double> } %mrv9
}

; Function Attrs: nounwind readnone
declare <2 x double> @"setcomp@UFI"(<2 x double>, double, i64) #0

; Function Attrs: nounwind
declare double @"abs@FF"(double) #2

; Function Attrs: alwaysinline nounwind
define private <2 x double> @"biunit@U"() #1 {
__llvm_entry:
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output = fmul double 2.000000e+00, %return
  %output1 = fsub double %output, 1.000000e+00
  %return2 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output3 = fmul double 2.000000e+00, %return2
  %output4 = fsub double %output3, 1.000000e+00
  %return5 = call <2 x double> @"set@UFF"(double %output1, double %output4)
  ret <2 x double> %return5
}

; Function Attrs: nounwind
declare double @"nrandom@F:S"(i8*) #2

; Function Attrs: nounwind readnone
declare <2 x double> @"set@UFF"(double, double) #0

; Function Attrs: alwaysinline nounwind
define private i64 @"chkPT@IIUF"(i64* %ACTIVE, <2 x double>* %vec, double* %alpha) #1 {
__llvm_entry:
  %ACTIVE1 = load i64, i64* %ACTIVE
  %0 = icmp ne i64 %ACTIVE1, 0
  br i1 %0, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %vec2 = load <2 x double>, <2 x double>* %vec
  %return = call double @"getcomp@FUI"(<2 x double> %vec2, i64 0)
  %return4 = call double @"getcomp@FUI"(<2 x double> %vec2, i64 1)
  %output = fadd double %return, %return4
  %return6 = call i64 @"isfinite@IF"(double %output)
  %return7 = call i64 @"not@II"(i64 %return6)
  %return9 = call i64 @"isnan@IF"(double %output)
  %return10 = call i64 @"or@III"(i64 %return7, i64 %return9)
  %return12 = call double @"length@FU"(<2 x double> %vec2)
  %return13 = fcmp ogt double %return12, 1.000000e+03
  %return14 = zext i1 %return13 to i64
  %return15 = call i64 @"or@III"(i64 %return10, i64 %return14)
  %alpha16 = load double, double* %alpha
  %return17 = fcmp oeq double %alpha16, 0.000000e+00
  %return18 = zext i1 %return17 to i64
  %return19 = call i64 @"or@III"(i64 %return15, i64 %return18)
  %1 = icmp ne i64 %return19, 0
  %. = select i1 %1, i64 1, i64 0
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %merge = phi i64 [ 0, %__llvm_entry ], [ %., %true ]
  ret i64 %merge
}

; Function Attrs: nounwind readnone
declare i64 @"isfinite@IF"(double) #0

; Function Attrs: nounwind readnone
declare i64 @"not@II"(i64) #0

; Function Attrs: nounwind readnone
declare i64 @"isnan@IF"(double) #0

; Function Attrs: nounwind readnone
declare i64 @"or@III"(i64, i64) #0

; Function Attrs: nounwind
declare double @"length@FU"(<2 x double>) #2

; Function Attrs: alwaysinline nounwind
define private void @"affine@UUUU"(<2 x double>* %p, <2 x double>* %x, <2 x double>* %y, <2 x double>* %o) #1 {
__llvm_entry:
  %x1 = load <2 x double>, <2 x double>* %x
  %return = call double @"getcomp@FUI"(<2 x double> %x1, i64 0)
  %p2 = load <2 x double>, <2 x double>* %p
  %return3 = call double @"getcomp@FUI"(<2 x double> %p2, i64 0)
  %output = fmul double %return, %return3
  %y4 = load <2 x double>, <2 x double>* %y
  %return5 = call double @"getcomp@FUI"(<2 x double> %y4, i64 0)
  %return7 = call double @"getcomp@FUI"(<2 x double> %p2, i64 1)
  %output8 = fmul double %return5, %return7
  %output9 = fadd double %output, %output8
  %o10 = load <2 x double>, <2 x double>* %o
  %return11 = call double @"getcomp@FUI"(<2 x double> %o10, i64 0)
  %output12 = fadd double %output9, %return11
  %return14 = call double @"getcomp@FUI"(<2 x double> %x1, i64 1)
  %output17 = fmul double %return14, %return3
  %return19 = call double @"getcomp@FUI"(<2 x double> %y4, i64 1)
  %output22 = fmul double %return19, %return7
  %output23 = fadd double %output17, %output22
  %return25 = call double @"getcomp@FUI"(<2 x double> %o10, i64 1)
  %output26 = fadd double %output23, %return25
  %return27 = call <2 x double> @"set@UFF"(double %output12, double %output26)
  store <2 x double> %return27, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind
declare <4 x double> @"set@2UU"(<2 x double>, <2 x double>) #2

; Function Attrs: nounwind readnone
declare <4 x double> @"rotate@2F"(<4 x double>, double) #0

; Function Attrs: nounwind readnone
declare i64 @"lt@III"(i64, i64) #0

; Function Attrs: nounwind readnone
declare i8* @"getcomp@S[SI"(i8**, i64) #0

; Function Attrs: nounwind
declare i8** @"append@[SS"(i8**, i8*) #2

; Function Attrs: alwaysinline nounwind
define private void @"gemSYSGLBBuild@Z9gemSYSGLBM5N2FFIN3RIPIN2MBIN3F3CIN4ITERI"(%gemSYSGLB* %this) #1 {
__llvm_entry:
  %return = call i64 @"neg@II"(i64 1)
  %return1 = call i64 @"detail@IIS"(i64 %return, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1, i64 0, i64 0))
  %tmp = load %gemSYSGLB, %gemSYSGLB* %this
  %0 = insertvalue %gemSYSGLB %tmp, i64 %return1, 0
  store %gemSYSGLB %0, %gemSYSGLB* %this
  %return3 = call i64 @"detail@IIS"(i64 %return, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @2, i64 0, i64 0))
  %tmp4 = load %gemSYSGLB, %gemSYSGLB* %this
  %1 = insertvalue %gemSYSGLB %tmp4, i64 %return3, 1
  store %gemSYSGLB %1, %gemSYSGLB* %this
  %return6 = call i64 @"detail@IIS"(i64 %return, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @3, i64 0, i64 0))
  %tmp7 = load %gemSYSGLB, %gemSYSGLB* %this
  %2 = insertvalue %gemSYSGLB %tmp7, i64 %return6, 2
  store %gemSYSGLB %2, %gemSYSGLB* %this
  %return9 = call i64 @"detail@IIS"(i64 %return, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @4, i64 0, i64 0))
  %tmp10 = load %gemSYSGLB, %gemSYSGLB* %this
  %3 = insertvalue %gemSYSGLB %tmp10, i64 %return9, 3
  store %gemSYSGLB %3, %gemSYSGLB* %this
  %return12 = call i64 @"detail@IIS"(i64 %return, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @5, i64 0, i64 0))
  %tmp13 = load %gemSYSGLB, %gemSYSGLB* %this
  %4 = insertvalue %gemSYSGLB %tmp13, i64 %return12, 4
  store %gemSYSGLB %4, %gemSYSGLB* %this
  ret void
}

; Function Attrs: nounwind
declare i64 @"detail@IIS"(i64, i8*) #2

; Function Attrs: alwaysinline nounwind
define private %gemSYSGLB @"gemSYSGLB@Z9gemSYSGLBM5N2FFIN3RIPIN2MBIN3F3CIN4ITERIIIIII"(i64* %FF, i64* %RIP, i64* %MB, i64* %F3C, i64* %ITER) #1 {
__llvm_entry:
  %FF1 = load i64, i64* %FF
  %0 = insertvalue %gemSYSGLB undef, i64 %FF1, 0
  %RIP2 = load i64, i64* %RIP
  %1 = insertvalue %gemSYSGLB %0, i64 %RIP2, 1
  %MB4 = load i64, i64* %MB
  %2 = insertvalue %gemSYSGLB %1, i64 %MB4, 2
  %F3C6 = load i64, i64* %F3C
  %3 = insertvalue %gemSYSGLB %2, i64 %F3C6, 3
  %ITER8 = load i64, i64* %ITER
  %4 = insertvalue %gemSYSGLB %3, i64 %ITER8, 4
  ret %gemSYSGLB %4
}

; Function Attrs: alwaysinline nounwind
define private %gemSYSGLB @"gemSYSGLB@Z9gemSYSGLBM5N2FFIN3RIPIN2MBIN3F3CIN4ITERI"() #1 {
__llvm_entry:
  %0 = alloca i64
  %1 = alloca i64
  %2 = alloca i64
  %3 = alloca i64
  %4 = alloca i64
  store i64 0, i64* %4
  store i64 0, i64* %0
  store i64 0, i64* %1
  store i64 0, i64* %2
  store i64 0, i64* %3
  %gemSYSGLB = call %gemSYSGLB @"gemSYSGLB@Z9gemSYSGLBM5N2FFIN3RIPIN2MBIN3F3CIN4ITERIIIIII"(i64* %4, i64* %0, i64* %1, i64* %2, i64* %3)
  ret %gemSYSGLB %gemSYSGLB
}

; Function Attrs: alwaysinline nounwind
define private void @"gemSYSBuild@Z6gemSYSM4N3RESIN2XSIN2IW[FN3XST[F"(%gemSYS* %this) #1 {
__llvm_entry:
  %return = call i64 @"neg@II"(i64 2)
  %return1 = call i64 @"detail@IIS"(i64 %return, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @6, i64 0, i64 0))
  %tmp = load %gemSYS, %gemSYS* %this
  %0 = insertvalue %gemSYS %tmp, i64 %return1, 0
  store %gemSYS %0, %gemSYS* %this
  %return2 = call i64 @"neg@II"(i64 3)
  %return3 = call double* @"detail@[FIS"(i64 %return2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @7, i64 0, i64 0))
  %tmp4 = load %gemSYS, %gemSYS* %this
  %1 = insertvalue %gemSYS %tmp4, double* %return3, 2
  store %gemSYS %1, %gemSYS* %this
  %return6 = call i64 @"detail@IIS"(i64 %return2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @8, i64 0, i64 0))
  %tmp7 = load %gemSYS, %gemSYS* %this
  %2 = insertvalue %gemSYS %tmp7, i64 %return6, 1
  store %gemSYS %2, %gemSYS* %this
  %return9 = call double* @"detail@[FIS"(i64 %return2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @9, i64 0, i64 0))
  %tmp10 = load %gemSYS, %gemSYS* %this
  %3 = insertvalue %gemSYS %tmp10, double* %return9, 3
  store %gemSYS %3, %gemSYS* %this
  ret void
}

; Function Attrs: nounwind
declare double* @"detail@[FIS"(i64, i8*) #2

; Function Attrs: alwaysinline nounwind
define private %gemSYS @"gemSYS@Z6gemSYSM4N3RESIN2XSIN2IW[FN3XST[FII[F[F"(i64* %RES, i64* %XS, double** %IW, double** %XST) #1 {
__llvm_entry:
  %RES1 = load i64, i64* %RES
  %0 = insertvalue %gemSYS undef, i64 %RES1, 0
  %XS2 = load i64, i64* %XS
  %1 = insertvalue %gemSYS %0, i64 %XS2, 1
  %IW4 = load double*, double** %IW
  %2 = insertvalue %gemSYS %1, double* %IW4, 2
  %XST6 = load double*, double** %XST
  %3 = insertvalue %gemSYS %2, double* %XST6, 3
  ret %gemSYS %3
}

; Function Attrs: alwaysinline nounwind
define private %gemSYS @"gemSYS@Z6gemSYSM4N3RESIN2XSIN2IW[FN3XST[F"() #1 {
__llvm_entry:
  %0 = alloca i64
  %1 = alloca double*
  %2 = alloca double*
  %3 = alloca i64
  store i64 0, i64* %3
  store i64 0, i64* %0
  store double* getelementptr inbounds ([0 x double], [0 x double]* @10, i64 0, i64 0), double** %1
  store double* getelementptr inbounds ([0 x double], [0 x double]* @10, i64 0, i64 0), double** %2
  %gemSYS = call %gemSYS @"gemSYS@Z6gemSYSM4N3RESIN2XSIN2IW[FN3XST[FII[F[F"(i64* %3, i64* %0, double** %1, double** %2)
  ret %gemSYS %gemSYS
}

; Function Attrs: alwaysinline nounwind
define private void @"gemSHDBuild@Z6gemSHDM3N3CLR[FN2OM[FN1A[F"(%gemSHD* %this) #1 {
__llvm_entry:
  %return = call i64 @"neg@II"(i64 4)
  %return1 = call double* @"detail@[FIS"(i64 %return, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i64 0, i64 0))
  %tmp = load %gemSHD, %gemSHD* %this
  %0 = insertvalue %gemSHD %tmp, double* %return1, 2
  store %gemSHD %0, %gemSHD* %this
  %return3 = call double* @"detail@[FIS"(i64 %return, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @12, i64 0, i64 0))
  %tmp4 = load %gemSHD, %gemSHD* %this
  %1 = insertvalue %gemSHD %tmp4, double* %return3, 0
  store %gemSHD %1, %gemSHD* %this
  %return6 = call double* @"detail@[FIS"(i64 %return, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @13, i64 0, i64 0))
  %tmp7 = load %gemSHD, %gemSHD* %this
  %2 = insertvalue %gemSHD %tmp7, double* %return6, 1
  store %gemSHD %2, %gemSHD* %this
  ret void
}

; Function Attrs: alwaysinline nounwind
define private %gemSHD @"gemSHD@Z6gemSHDM3N3CLR[FN2OM[FN1A[F[F[F[F"(double** %CLR, double** %OM, double** %A) #1 {
__llvm_entry:
  %CLR1 = load double*, double** %CLR
  %0 = insertvalue %gemSHD undef, double* %CLR1, 0
  %OM2 = load double*, double** %OM
  %1 = insertvalue %gemSHD %0, double* %OM2, 1
  %A4 = load double*, double** %A
  %2 = insertvalue %gemSHD %1, double* %A4, 2
  ret %gemSHD %2
}

; Function Attrs: alwaysinline nounwind
define private %gemSHD @"gemSHD@Z6gemSHDM3N3CLR[FN2OM[FN1A[F"() #1 {
__llvm_entry:
  %0 = alloca double*
  %1 = alloca double*
  %2 = alloca double*
  store double* getelementptr inbounds ([0 x double], [0 x double]* @10, i64 0, i64 0), double** %2
  store double* getelementptr inbounds ([0 x double], [0 x double]* @10, i64 0, i64 0), double** %0
  store double* getelementptr inbounds ([0 x double], [0 x double]* @10, i64 0, i64 0), double** %1
  %gemSHD = call %gemSHD @"gemSHD@Z6gemSHDM3N3CLR[FN2OM[FN1A[F[F[F[F"(double** %2, double** %0, double** %1)
  ret %gemSHD %gemSHD
}

; Function Attrs: alwaysinline nounwind
define private void @"gemPVBuild@Z5gemPVM5N3p1t[IN3p2t[IN3pbw[FN3p1w[FN3p2w[F"(%gemPV* %this) #1 {
__llvm_entry:
  %return = call i64 @"neg@II"(i64 5)
  %return1 = call i64* @"detail@[IIS"(i64 %return, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @14, i64 0, i64 0))
  %tmp = load %gemPV, %gemPV* %this
  %0 = insertvalue %gemPV %tmp, i64* %return1, 0
  store %gemPV %0, %gemPV* %this
  %return3 = call i64* @"detail@[IIS"(i64 %return, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @15, i64 0, i64 0))
  %tmp4 = load %gemPV, %gemPV* %this
  %1 = insertvalue %gemPV %tmp4, i64* %return3, 1
  store %gemPV %1, %gemPV* %this
  %return6 = call double* @"detail@[FIS"(i64 %return, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @16, i64 0, i64 0))
  %tmp7 = load %gemPV, %gemPV* %this
  %2 = insertvalue %gemPV %tmp7, double* %return6, 2
  store %gemPV %2, %gemPV* %this
  %return9 = call double* @"detail@[FIS"(i64 %return, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @17, i64 0, i64 0))
  %tmp10 = load %gemPV, %gemPV* %this
  %3 = insertvalue %gemPV %tmp10, double* %return9, 3
  store %gemPV %3, %gemPV* %this
  %return12 = call double* @"detail@[FIS"(i64 %return, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @18, i64 0, i64 0))
  %tmp13 = load %gemPV, %gemPV* %this
  %4 = insertvalue %gemPV %tmp13, double* %return12, 4
  store %gemPV %4, %gemPV* %this
  ret void
}

; Function Attrs: nounwind
declare i64* @"detail@[IIS"(i64, i8*) #2

; Function Attrs: alwaysinline nounwind
define private %gemPV @"gemPV@Z5gemPVM5N3p1t[IN3p2t[IN3pbw[FN3p1w[FN3p2w[F[I[I[F[F[F"(i64** %p1t, i64** %p2t, double** %pbw, double** %p1w, double** %p2w) #1 {
__llvm_entry:
  %p1t1 = load i64*, i64** %p1t
  %0 = insertvalue %gemPV undef, i64* %p1t1, 0
  %p2t2 = load i64*, i64** %p2t
  %1 = insertvalue %gemPV %0, i64* %p2t2, 1
  %pbw4 = load double*, double** %pbw
  %2 = insertvalue %gemPV %1, double* %pbw4, 2
  %p1w6 = load double*, double** %p1w
  %3 = insertvalue %gemPV %2, double* %p1w6, 3
  %p2w8 = load double*, double** %p2w
  %4 = insertvalue %gemPV %3, double* %p2w8, 4
  ret %gemPV %4
}

; Function Attrs: alwaysinline nounwind
define private %gemPV @"gemPV@Z5gemPVM5N3p1t[IN3p2t[IN3pbw[FN3p1w[FN3p2w[F"() #1 {
__llvm_entry:
  %0 = alloca i64*
  %1 = alloca double*
  %2 = alloca double*
  %3 = alloca double*
  %4 = alloca i64*
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @19, i64 0, i64 0), i64** %4
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @19, i64 0, i64 0), i64** %0
  store double* getelementptr inbounds ([0 x double], [0 x double]* @10, i64 0, i64 0), double** %1
  store double* getelementptr inbounds ([0 x double], [0 x double]* @10, i64 0, i64 0), double** %2
  store double* getelementptr inbounds ([0 x double], [0 x double]* @10, i64 0, i64 0), double** %3
  %gemPV = call %gemPV @"gemPV@Z5gemPVM5N3p1t[IN3p2t[IN3pbw[FN3p1w[FN3p2w[F[I[I[F[F[F"(i64** %4, i64** %0, double** %1, double** %2, double** %3)
  ret %gemPV %gemPV
}

; Function Attrs: alwaysinline nounwind
define private void @"gemVBuild@Z4gemVM8N3v1t[IN3v2t[IN3v3t[IN3v4t[IN3v1w[FN3v2w[FN3v3w[FN3v4w[F"(%gemV* %this) #1 {
__llvm_entry:
  %return = call i64 @"neg@II"(i64 6)
  %return1 = call i64* @"detail@[IIS"(i64 %return, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @20, i64 0, i64 0))
  %tmp = load %gemV, %gemV* %this
  %0 = insertvalue %gemV %tmp, i64* %return1, 0
  store %gemV %0, %gemV* %this
  %return3 = call i64* @"detail@[IIS"(i64 %return, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @21, i64 0, i64 0))
  %tmp4 = load %gemV, %gemV* %this
  %1 = insertvalue %gemV %tmp4, i64* %return3, 1
  store %gemV %1, %gemV* %this
  %return6 = call i64* @"detail@[IIS"(i64 %return, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @22, i64 0, i64 0))
  %tmp7 = load %gemV, %gemV* %this
  %2 = insertvalue %gemV %tmp7, i64* %return6, 2
  store %gemV %2, %gemV* %this
  %return9 = call i64* @"detail@[IIS"(i64 %return, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @23, i64 0, i64 0))
  %tmp10 = load %gemV, %gemV* %this
  %3 = insertvalue %gemV %tmp10, i64* %return9, 3
  store %gemV %3, %gemV* %this
  %return12 = call double* @"detail@[FIS"(i64 %return, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @24, i64 0, i64 0))
  %tmp13 = load %gemV, %gemV* %this
  %4 = insertvalue %gemV %tmp13, double* %return12, 4
  store %gemV %4, %gemV* %this
  %return15 = call double* @"detail@[FIS"(i64 %return, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @25, i64 0, i64 0))
  %tmp16 = load %gemV, %gemV* %this
  %5 = insertvalue %gemV %tmp16, double* %return15, 5
  store %gemV %5, %gemV* %this
  %return18 = call double* @"detail@[FIS"(i64 %return, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @26, i64 0, i64 0))
  %tmp19 = load %gemV, %gemV* %this
  %6 = insertvalue %gemV %tmp19, double* %return18, 6
  store %gemV %6, %gemV* %this
  %return21 = call double* @"detail@[FIS"(i64 %return, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @27, i64 0, i64 0))
  %tmp22 = load %gemV, %gemV* %this
  %7 = insertvalue %gemV %tmp22, double* %return21, 7
  store %gemV %7, %gemV* %this
  ret void
}

; Function Attrs: alwaysinline nounwind
define private %gemV @"gemV@Z4gemVM8N3v1t[IN3v2t[IN3v3t[IN3v4t[IN3v1w[FN3v2w[FN3v3w[FN3v4w[F[I[I[I[I[F[F[F[F"(i64** %v1t, i64** %v2t, i64** %v3t, i64** %v4t, double** %v1w, double** %v2w, double** %v3w, double** %v4w) #1 {
__llvm_entry:
  %v1t1 = load i64*, i64** %v1t
  %0 = insertvalue %gemV undef, i64* %v1t1, 0
  %v2t2 = load i64*, i64** %v2t
  %1 = insertvalue %gemV %0, i64* %v2t2, 1
  %v3t4 = load i64*, i64** %v3t
  %2 = insertvalue %gemV %1, i64* %v3t4, 2
  %v4t6 = load i64*, i64** %v4t
  %3 = insertvalue %gemV %2, i64* %v4t6, 3
  %v1w8 = load double*, double** %v1w
  %4 = insertvalue %gemV %3, double* %v1w8, 4
  %v2w10 = load double*, double** %v2w
  %5 = insertvalue %gemV %4, double* %v2w10, 5
  %v3w12 = load double*, double** %v3w
  %6 = insertvalue %gemV %5, double* %v3w12, 6
  %v4w14 = load double*, double** %v4w
  %7 = insertvalue %gemV %6, double* %v4w14, 7
  ret %gemV %7
}

; Function Attrs: alwaysinline nounwind
define private %gemV @"gemV@Z4gemVM8N3v1t[IN3v2t[IN3v3t[IN3v4t[IN3v1w[FN3v2w[FN3v3w[FN3v4w[F"() #1 {
__llvm_entry:
  %0 = alloca i64*
  %1 = alloca i64*
  %2 = alloca i64*
  %3 = alloca double*
  %4 = alloca double*
  %5 = alloca double*
  %6 = alloca double*
  %7 = alloca i64*
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @19, i64 0, i64 0), i64** %7
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @19, i64 0, i64 0), i64** %0
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @19, i64 0, i64 0), i64** %1
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @19, i64 0, i64 0), i64** %2
  store double* getelementptr inbounds ([0 x double], [0 x double]* @10, i64 0, i64 0), double** %3
  store double* getelementptr inbounds ([0 x double], [0 x double]* @10, i64 0, i64 0), double** %4
  store double* getelementptr inbounds ([0 x double], [0 x double]* @10, i64 0, i64 0), double** %5
  store double* getelementptr inbounds ([0 x double], [0 x double]* @10, i64 0, i64 0), double** %6
  %gemV = call %gemV @"gemV@Z4gemVM8N3v1t[IN3v2t[IN3v3t[IN3v4t[IN3v1w[FN3v2w[FN3v3w[FN3v4w[F[I[I[I[I[F[F[F[F"(i64** %7, i64** %0, i64** %1, i64** %2, double** %3, double** %4, double** %5, double** %6)
  ret %gemV %gemV
}

; Function Attrs: alwaysinline nounwind
define private void @"gemVPBuild@Z5gemVPM3N3PPL[IN3P1t[IN3P1w[F"(%gemVP* %this) #1 {
__llvm_entry:
  %return = call i64 @"neg@II"(i64 7)
  %return1 = call i64* @"detail@[IIS"(i64 %return, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @28, i64 0, i64 0))
  %tmp = load %gemVP, %gemVP* %this
  %0 = insertvalue %gemVP %tmp, i64* %return1, 1
  store %gemVP %0, %gemVP* %this
  %return3 = call double* @"detail@[FIS"(i64 %return, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @29, i64 0, i64 0))
  %tmp4 = load %gemVP, %gemVP* %this
  %1 = insertvalue %gemVP %tmp4, double* %return3, 2
  store %gemVP %1, %gemVP* %this
  ret void
}

; Function Attrs: alwaysinline nounwind
define private %gemVP @"gemVP@Z5gemVPM3N3PPL[IN3P1t[IN3P1w[F[I[I[F"(i64** %PPL, i64** %P1t, double** %P1w) #1 {
__llvm_entry:
  %PPL1 = load i64*, i64** %PPL
  %0 = insertvalue %gemVP undef, i64* %PPL1, 0
  %P1t2 = load i64*, i64** %P1t
  %1 = insertvalue %gemVP %0, i64* %P1t2, 1
  %P1w4 = load double*, double** %P1w
  %2 = insertvalue %gemVP %1, double* %P1w4, 2
  ret %gemVP %2
}

; Function Attrs: alwaysinline nounwind
define private %gemVP @"gemVP@Z5gemVPM3N3PPL[IN3P1t[IN3P1w[F"() #1 {
__llvm_entry:
  %0 = alloca i64*
  %1 = alloca double*
  %2 = alloca i64*
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @19, i64 0, i64 0), i64** %2
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @19, i64 0, i64 0), i64** %0
  store double* getelementptr inbounds ([0 x double], [0 x double]* @10, i64 0, i64 0), double** %1
  %gemVP = call %gemVP @"gemVP@Z5gemVPM3N3PPL[IN3P1t[IN3P1w[F[I[I[F"(i64** %2, i64** %0, double** %1)
  ret %gemVP %gemVP
}

; Function Attrs: alwaysinline nounwind
define private void @"gemPABuild@Z5gemPAM3N1x[UN1y[UN1o[U"(%gemPA* %this) #1 {
__llvm_entry:
  %return = call i64 @"neg@II"(i64 8)
  %return1 = call <2 x double>* @"detail@[UIS"(i64 %return, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @30, i64 0, i64 0))
  %tmp = load %gemPA, %gemPA* %this
  %0 = insertvalue %gemPA %tmp, <2 x double>* %return1, 0
  store %gemPA %0, %gemPA* %this
  %return3 = call <2 x double>* @"detail@[UIS"(i64 %return, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @31, i64 0, i64 0))
  %tmp4 = load %gemPA, %gemPA* %this
  %1 = insertvalue %gemPA %tmp4, <2 x double>* %return3, 1
  store %gemPA %1, %gemPA* %this
  %return6 = call <2 x double>* @"detail@[UIS"(i64 %return, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @32, i64 0, i64 0))
  %tmp7 = load %gemPA, %gemPA* %this
  %2 = insertvalue %gemPA %tmp7, <2 x double>* %return6, 2
  store %gemPA %2, %gemPA* %this
  ret void
}

; Function Attrs: nounwind
declare <2 x double>* @"detail@[UIS"(i64, i8*) #2

; Function Attrs: alwaysinline nounwind
define private %gemPA @"gemPA@Z5gemPAM3N1x[UN1y[UN1o[U[U[U[U"(<2 x double>** %x, <2 x double>** %y, <2 x double>** %o) #1 {
__llvm_entry:
  %x1 = load <2 x double>*, <2 x double>** %x
  %0 = insertvalue %gemPA undef, <2 x double>* %x1, 0
  %y2 = load <2 x double>*, <2 x double>** %y
  %1 = insertvalue %gemPA %0, <2 x double>* %y2, 1
  %o4 = load <2 x double>*, <2 x double>** %o
  %2 = insertvalue %gemPA %1, <2 x double>* %o4, 2
  ret %gemPA %2
}

; Function Attrs: alwaysinline nounwind
define private %gemPA @"gemPA@Z5gemPAM3N1x[UN1y[UN1o[U"() #1 {
__llvm_entry:
  %0 = alloca <2 x double>*
  %1 = alloca <2 x double>*
  %2 = alloca <2 x double>*
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @33, i64 0, i64 0), <2 x double>** %2
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @33, i64 0, i64 0), <2 x double>** %0
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @33, i64 0, i64 0), <2 x double>** %1
  %gemPA = call %gemPA @"gemPA@Z5gemPAM3N1x[UN1y[UN1o[U[U[U[U"(<2 x double>** %2, <2 x double>** %0, <2 x double>** %1)
  ret %gemPA %gemPA
}

; Function Attrs: alwaysinline nounwind
define private void @"gemAPBuild@Z5gemAPM4N3PPL[IN2px[UN2py[UN2po[U"(%gemAP* %this) #1 {
__llvm_entry:
  %return = call i64 @"neg@II"(i64 9)
  %return1 = call i64* @"detail@[IIS"(i64 %return, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @34, i64 0, i64 0))
  %tmp = load %gemAP, %gemAP* %this
  %0 = insertvalue %gemAP %tmp, i64* %return1, 0
  store %gemAP %0, %gemAP* %this
  %return3 = call <2 x double>* @"detail@[UIS"(i64 %return, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @35, i64 0, i64 0))
  %tmp4 = load %gemAP, %gemAP* %this
  %1 = insertvalue %gemAP %tmp4, <2 x double>* %return3, 1
  store %gemAP %1, %gemAP* %this
  %return6 = call <2 x double>* @"detail@[UIS"(i64 %return, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @36, i64 0, i64 0))
  %tmp7 = load %gemAP, %gemAP* %this
  %2 = insertvalue %gemAP %tmp7, <2 x double>* %return6, 2
  store %gemAP %2, %gemAP* %this
  %return9 = call <2 x double>* @"detail@[UIS"(i64 %return, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @37, i64 0, i64 0))
  %tmp10 = load %gemAP, %gemAP* %this
  %3 = insertvalue %gemAP %tmp10, <2 x double>* %return9, 3
  store %gemAP %3, %gemAP* %this
  ret void
}

; Function Attrs: alwaysinline nounwind
define private %gemAP @"gemAP@Z5gemAPM4N3PPL[IN2px[UN2py[UN2po[U[I[U[U[U"(i64** %PPL, <2 x double>** %px, <2 x double>** %py, <2 x double>** %po) #1 {
__llvm_entry:
  %PPL1 = load i64*, i64** %PPL
  %0 = insertvalue %gemAP undef, i64* %PPL1, 0
  %px2 = load <2 x double>*, <2 x double>** %px
  %1 = insertvalue %gemAP %0, <2 x double>* %px2, 1
  %py4 = load <2 x double>*, <2 x double>** %py
  %2 = insertvalue %gemAP %1, <2 x double>* %py4, 2
  %po6 = load <2 x double>*, <2 x double>** %po
  %3 = insertvalue %gemAP %2, <2 x double>* %po6, 3
  ret %gemAP %3
}

; Function Attrs: alwaysinline nounwind
define private %gemAP @"gemAP@Z5gemAPM4N3PPL[IN2px[UN2py[UN2po[U"() #1 {
__llvm_entry:
  %0 = alloca <2 x double>*
  %1 = alloca <2 x double>*
  %2 = alloca <2 x double>*
  %3 = alloca i64*
  store i64* getelementptr inbounds ([0 x i64], [0 x i64]* @19, i64 0, i64 0), i64** %3
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @33, i64 0, i64 0), <2 x double>** %0
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @33, i64 0, i64 0), <2 x double>** %1
  store <2 x double>* getelementptr inbounds ([0 x <2 x double>], [0 x <2 x double>]* @33, i64 0, i64 0), <2 x double>** %2
  %gemAP = call %gemAP @"gemAP@Z5gemAPM4N3PPL[IN2px[UN2py[UN2po[U[I[U[U[U"(i64** %3, <2 x double>** %0, <2 x double>** %1, <2 x double>** %2)
  ret %gemAP %gemAP
}

; Function Attrs: alwaysinline nounwind
define private void @"gemFFPVBuild@Z7gemFFPVM2N4fp1tIN4fp1wF"(%gemFFPV* %this) #1 {
__llvm_entry:
  %return = call i64 @"neg@II"(i64 10)
  %return1 = call i64 @"detail@IIS"(i64 %return, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @38, i64 0, i64 0))
  %tmp = load %gemFFPV, %gemFFPV* %this
  %0 = insertvalue %gemFFPV %tmp, i64 %return1, 0
  store %gemFFPV %0, %gemFFPV* %this
  %return3 = call double @"detail@FIS"(i64 %return, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @39, i64 0, i64 0))
  %tmp4 = load %gemFFPV, %gemFFPV* %this
  %1 = insertvalue %gemFFPV %tmp4, double %return3, 1
  store %gemFFPV %1, %gemFFPV* %this
  ret void
}

; Function Attrs: nounwind
declare double @"detail@FIS"(i64, i8*) #2

; Function Attrs: alwaysinline nounwind
define private %gemFFPV @"gemFFPV@Z7gemFFPVM2N4fp1tIN4fp1wFIF"(i64* %fp1t, double* %fp1w) #1 {
__llvm_entry:
  %fp1t1 = load i64, i64* %fp1t
  %0 = insertvalue %gemFFPV undef, i64 %fp1t1, 0
  %fp1w2 = load double, double* %fp1w
  %1 = insertvalue %gemFFPV %0, double %fp1w2, 1
  ret %gemFFPV %1
}

; Function Attrs: alwaysinline nounwind
define private %gemFFPV @"gemFFPV@Z7gemFFPVM2N4fp1tIN4fp1wF"() #1 {
__llvm_entry:
  %0 = alloca double
  %1 = alloca i64
  store i64 0, i64* %1
  store double 0.000000e+00, double* %0
  %gemFFPV = call %gemFFPV @"gemFFPV@Z7gemFFPVM2N4fp1tIN4fp1wFIF"(i64* %1, double* %0)
  ret %gemFFPV %gemFFPV
}

; Function Attrs: alwaysinline nounwind
define private void @"gemFFVBuild@Z6gemFFVM4N4fv1tIN4fv2tIN4fv1wFN4fv2wF"(%gemFFV* %this) #1 {
__llvm_entry:
  %return = call i64 @"neg@II"(i64 11)
  %return1 = call i64 @"detail@IIS"(i64 %return, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @40, i64 0, i64 0))
  %tmp = load %gemFFV, %gemFFV* %this
  %0 = insertvalue %gemFFV %tmp, i64 %return1, 0
  store %gemFFV %0, %gemFFV* %this
  %return3 = call i64 @"detail@IIS"(i64 %return, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @41, i64 0, i64 0))
  %tmp4 = load %gemFFV, %gemFFV* %this
  %1 = insertvalue %gemFFV %tmp4, i64 %return3, 1
  store %gemFFV %1, %gemFFV* %this
  %return6 = call double @"detail@FIS"(i64 %return, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @42, i64 0, i64 0))
  %tmp7 = load %gemFFV, %gemFFV* %this
  %2 = insertvalue %gemFFV %tmp7, double %return6, 2
  store %gemFFV %2, %gemFFV* %this
  %return9 = call double @"detail@FIS"(i64 %return, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @43, i64 0, i64 0))
  %tmp10 = load %gemFFV, %gemFFV* %this
  %3 = insertvalue %gemFFV %tmp10, double %return9, 3
  store %gemFFV %3, %gemFFV* %this
  ret void
}

; Function Attrs: alwaysinline nounwind
define private %gemFFV @"gemFFV@Z6gemFFVM4N4fv1tIN4fv2tIN4fv1wFN4fv2wFIIFF"(i64* %fv1t, i64* %fv2t, double* %fv1w, double* %fv2w) #1 {
__llvm_entry:
  %fv1t1 = load i64, i64* %fv1t
  %0 = insertvalue %gemFFV undef, i64 %fv1t1, 0
  %fv2t2 = load i64, i64* %fv2t
  %1 = insertvalue %gemFFV %0, i64 %fv2t2, 1
  %fv1w4 = load double, double* %fv1w
  %2 = insertvalue %gemFFV %1, double %fv1w4, 2
  %fv2w6 = load double, double* %fv2w
  %3 = insertvalue %gemFFV %2, double %fv2w6, 3
  ret %gemFFV %3
}

; Function Attrs: alwaysinline nounwind
define private %gemFFV @"gemFFV@Z6gemFFVM4N4fv1tIN4fv2tIN4fv1wFN4fv2wF"() #1 {
__llvm_entry:
  %0 = alloca i64
  %1 = alloca double
  %2 = alloca double
  %3 = alloca i64
  store i64 0, i64* %3
  store i64 0, i64* %0
  store double 0.000000e+00, double* %1
  store double 0.000000e+00, double* %2
  %gemFFV = call %gemFFV @"gemFFV@Z6gemFFVM4N4fv1tIN4fv2tIN4fv1wFN4fv2wFIIFF"(i64* %3, i64* %0, double* %1, double* %2)
  ret %gemFFV %gemFFV
}

; Function Attrs: alwaysinline nounwind
define private void @"gemFFVPBuild@Z7gemFFVPM4N4fP1tIN4fP2tIN4fP1wFN4fP2wF"(%gemFFVP* %this) #1 {
__llvm_entry:
  %return = call i64 @"neg@II"(i64 12)
  %return1 = call i64 @"detail@IIS"(i64 %return, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @44, i64 0, i64 0))
  %tmp = load %gemFFVP, %gemFFVP* %this
  %0 = insertvalue %gemFFVP %tmp, i64 %return1, 0
  store %gemFFVP %0, %gemFFVP* %this
  %return3 = call i64 @"detail@IIS"(i64 %return, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @45, i64 0, i64 0))
  %tmp4 = load %gemFFVP, %gemFFVP* %this
  %1 = insertvalue %gemFFVP %tmp4, i64 %return3, 1
  store %gemFFVP %1, %gemFFVP* %this
  %return6 = call double @"detail@FIS"(i64 %return, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @46, i64 0, i64 0))
  %tmp7 = load %gemFFVP, %gemFFVP* %this
  %2 = insertvalue %gemFFVP %tmp7, double %return6, 2
  store %gemFFVP %2, %gemFFVP* %this
  %return9 = call double @"detail@FIS"(i64 %return, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @47, i64 0, i64 0))
  %tmp10 = load %gemFFVP, %gemFFVP* %this
  %3 = insertvalue %gemFFVP %tmp10, double %return9, 3
  store %gemFFVP %3, %gemFFVP* %this
  ret void
}

; Function Attrs: alwaysinline nounwind
define private %gemFFVP @"gemFFVP@Z7gemFFVPM4N4fP1tIN4fP2tIN4fP1wFN4fP2wFIIFF"(i64* %fP1t, i64* %fP2t, double* %fP1w, double* %fP2w) #1 {
__llvm_entry:
  %fP1t1 = load i64, i64* %fP1t
  %0 = insertvalue %gemFFVP undef, i64 %fP1t1, 0
  %fP2t2 = load i64, i64* %fP2t
  %1 = insertvalue %gemFFVP %0, i64 %fP2t2, 1
  %fP1w4 = load double, double* %fP1w
  %2 = insertvalue %gemFFVP %1, double %fP1w4, 2
  %fP2w6 = load double, double* %fP2w
  %3 = insertvalue %gemFFVP %2, double %fP2w6, 3
  ret %gemFFVP %3
}

; Function Attrs: alwaysinline nounwind
define private %gemFFVP @"gemFFVP@Z7gemFFVPM4N4fP1tIN4fP2tIN4fP1wFN4fP2wF"() #1 {
__llvm_entry:
  %0 = alloca i64
  %1 = alloca double
  %2 = alloca double
  %3 = alloca i64
  store i64 0, i64* %3
  store i64 0, i64* %0
  store double 0.000000e+00, double* %1
  store double 0.000000e+00, double* %2
  %gemFFVP = call %gemFFVP @"gemFFVP@Z7gemFFVPM4N4fP1tIN4fP2tIN4fP1wFN4fP2wFIIFF"(i64* %3, i64* %0, double* %1, double* %2)
  ret %gemFFVP %gemFFVP
}

; Function Attrs: alwaysinline nounwind
define private void @"gemFFPABuild@Z7gemFFPAM3N2fxUN2fyUN2foU"(%gemFFPA* %this) #1 {
__llvm_entry:
  %return = call i64 @"neg@II"(i64 13)
  %return1 = call <2 x double> @"detail@UIS"(i64 %return, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @48, i64 0, i64 0))
  %tmp = load %gemFFPA, %gemFFPA* %this
  %0 = insertvalue %gemFFPA %tmp, <2 x double> %return1, 0
  store %gemFFPA %0, %gemFFPA* %this
  %return3 = call <2 x double> @"detail@UIS"(i64 %return, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @49, i64 0, i64 0))
  %tmp4 = load %gemFFPA, %gemFFPA* %this
  %1 = insertvalue %gemFFPA %tmp4, <2 x double> %return3, 1
  store %gemFFPA %1, %gemFFPA* %this
  %return6 = call <2 x double> @"detail@UIS"(i64 %return, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @50, i64 0, i64 0))
  %tmp7 = load %gemFFPA, %gemFFPA* %this
  %2 = insertvalue %gemFFPA %tmp7, <2 x double> %return6, 2
  store %gemFFPA %2, %gemFFPA* %this
  ret void
}

; Function Attrs: nounwind
declare <2 x double> @"detail@UIS"(i64, i8*) #2

; Function Attrs: alwaysinline nounwind
define private %gemFFPA @"gemFFPA@Z7gemFFPAM3N2fxUN2fyUN2foUUUU"(<2 x double>* %fx, <2 x double>* %fy, <2 x double>* %fo) #1 {
__llvm_entry:
  %fx1 = load <2 x double>, <2 x double>* %fx
  %0 = insertvalue %gemFFPA undef, <2 x double> %fx1, 0
  %fy2 = load <2 x double>, <2 x double>* %fy
  %1 = insertvalue %gemFFPA %0, <2 x double> %fy2, 1
  %fo4 = load <2 x double>, <2 x double>* %fo
  %2 = insertvalue %gemFFPA %1, <2 x double> %fo4, 2
  ret %gemFFPA %2
}

; Function Attrs: alwaysinline nounwind
define private %gemFFPA @"gemFFPA@Z7gemFFPAM3N2fxUN2fyUN2foU"() #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca <2 x double>
  store <2 x double> zeroinitializer, <2 x double>* %2
  store <2 x double> zeroinitializer, <2 x double>* %0
  store <2 x double> zeroinitializer, <2 x double>* %1
  %gemFFPA = call %gemFFPA @"gemFFPA@Z7gemFFPAM3N2fxUN2fyUN2foUUUU"(<2 x double>* %2, <2 x double>* %0, <2 x double>* %1)
  ret %gemFFPA %gemFFPA
}

; Function Attrs: alwaysinline nounwind
define private void @"gemFFAPBuild@Z7gemFFAPM4N3PFFIN3pfxUN3pfyUN3pfoU"(%gemFFAP* %this) #1 {
__llvm_entry:
  %return = call i64 @"neg@II"(i64 14)
  %return1 = call i64 @"detail@IIS"(i64 %return, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @51, i64 0, i64 0))
  %tmp = load %gemFFAP, %gemFFAP* %this
  %0 = insertvalue %gemFFAP %tmp, i64 %return1, 0
  store %gemFFAP %0, %gemFFAP* %this
  %return3 = call <2 x double> @"detail@UIS"(i64 %return, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @52, i64 0, i64 0))
  %tmp4 = load %gemFFAP, %gemFFAP* %this
  %1 = insertvalue %gemFFAP %tmp4, <2 x double> %return3, 1
  store %gemFFAP %1, %gemFFAP* %this
  %return6 = call <2 x double> @"detail@UIS"(i64 %return, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @53, i64 0, i64 0))
  %tmp7 = load %gemFFAP, %gemFFAP* %this
  %2 = insertvalue %gemFFAP %tmp7, <2 x double> %return6, 2
  store %gemFFAP %2, %gemFFAP* %this
  %return9 = call <2 x double> @"detail@UIS"(i64 %return, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @54, i64 0, i64 0))
  %tmp10 = load %gemFFAP, %gemFFAP* %this
  %3 = insertvalue %gemFFAP %tmp10, <2 x double> %return9, 3
  store %gemFFAP %3, %gemFFAP* %this
  ret void
}

; Function Attrs: alwaysinline nounwind
define private %gemFFAP @"gemFFAP@Z7gemFFAPM4N3PFFIN3pfxUN3pfyUN3pfoUIUUU"(i64* %PFF, <2 x double>* %pfx, <2 x double>* %pfy, <2 x double>* %pfo) #1 {
__llvm_entry:
  %PFF1 = load i64, i64* %PFF
  %0 = insertvalue %gemFFAP undef, i64 %PFF1, 0
  %pfx2 = load <2 x double>, <2 x double>* %pfx
  %1 = insertvalue %gemFFAP %0, <2 x double> %pfx2, 1
  %pfy4 = load <2 x double>, <2 x double>* %pfy
  %2 = insertvalue %gemFFAP %1, <2 x double> %pfy4, 2
  %pfo6 = load <2 x double>, <2 x double>* %pfo
  %3 = insertvalue %gemFFAP %2, <2 x double> %pfo6, 3
  ret %gemFFAP %3
}

; Function Attrs: alwaysinline nounwind
define private %gemFFAP @"gemFFAP@Z7gemFFAPM4N3PFFIN3pfxUN3pfyUN3pfoU"() #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca <2 x double>
  %3 = alloca i64
  store i64 0, i64* %3
  store <2 x double> zeroinitializer, <2 x double>* %0
  store <2 x double> zeroinitializer, <2 x double>* %1
  store <2 x double> zeroinitializer, <2 x double>* %2
  %gemFFAP = call %gemFFAP @"gemFFAP@Z7gemFFAPM4N3PFFIN3pfxUN3pfyUN3pfoUIUUU"(i64* %3, <2 x double>* %0, <2 x double>* %1, <2 x double>* %2)
  ret %gemFFAP %gemFFAP
}

; Function Attrs: nounwind
declare i64 @"max@I[I"(i64*) #2

; Function Attrs: nounwind readnone
declare i64 @"gt@III"(i64, i64) #0

; Function Attrs: nounwind readnone
declare i64 @"getcomp@I[II"(i64*, i64) #0

; Function Attrs: nounwind readnone
declare double @"getcomp@F[FI"(double*, i64) #0

; Function Attrs: nounwind
declare i64 @"find@I[FF"(double*, double) #2

; Function Attrs: nounwind readnone
declare i64 @"ge@III"(i64, i64) #0

; Function Attrs: nounwind readnone
declare i64 @"eq@III"(i64, i64) #0

; Function Attrs: nounwind readnone
declare i8* @"concat@SSS"(i8*, i8*) #0

; Function Attrs: nounwind readnone
declare <2 x double> @"chu@US"(i8*) #0

; Function Attrs: nounwind readnone
declare { <2 x double>, <2 x double>* } @"setcomp@U[UUI"(<2 x double>*, <2 x double>, i64) #0

; Function Attrs: nounwind readnone
declare <4 x double> @"chp@PS"(i8*) #0

; Function Attrs: nounwind readnone
declare { <4 x double>, <4 x double>* } @"setcomp@P[PPI"(<4 x double>*, <4 x double>, i64) #0

; Function Attrs: nounwind readnone
declare <3 x double> @"chv@VS"(i8*) #0

; Function Attrs: nounwind readnone
declare { <3 x double>, <3 x double>* } @"setcomp@V[VVI"(<3 x double>*, <3 x double>, i64) #0

; Function Attrs: nounwind readnone
declare double @"chf@FS"(i8*) #0

; Function Attrs: nounwind readnone
declare { double, double* } @"setcomp@F[FFI"(double*, double, i64) #0

; Function Attrs: nounwind readnone
declare <2 x double> @"getcomp@U[UI"(<2 x double>*, i64) #0

; Function Attrs: alwaysinline nounwind
define private void @"V_SINUSOIDAL@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %w4 = load double, double* %w
  %return = call double @"sin@FF"(double %output2)
  %output6 = fmul double %w4, %return
  %tmp = load <2 x double>, <2 x double>* %p
  %return7 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output6, i64 0)
  %output9 = extractvalue { double, <2 x double> } %return7, 1
  store <2 x double> %output9, <2 x double>* %p
  %w10 = load double, double* %w
  %return12 = call double @"sin@FF"(double %output3)
  %output13 = fmul double %w10, %return12
  %return15 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output9, double %output13, i64 1)
  %output17 = extractvalue { double, <2 x double> } %return15, 1
  store <2 x double> %output17, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind
declare { double, double } @"assign@FFU"(<2 x double>) #2

; Function Attrs: alwaysinline nounwind
define private void @"V_SPHERICAL@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %w4 = load double, double* %w
  %_p5 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p5, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %output6 = fadd double %SUMSQ, 0x3CB0000000000000
  %output7 = call double @"div@FF"(double %w4, double %output6)
  %output10 = fmul double %output7, %output2
  %tmp = load <2 x double>, <2 x double>* %p
  %return = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output10, i64 0)
  %output12 = extractvalue { double, <2 x double> } %return, 1
  store <2 x double> %output12, <2 x double>* %p
  %output15 = fmul double %output7, %output3
  %return17 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output12, double %output15, i64 1)
  %output19 = extractvalue { double, <2 x double> } %return17, 1
  store <2 x double> %output19, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SWIRL@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %_p4 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p4, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %return = call double @"sin@FF"(double %SUMSQ)
  %return7 = call double @"cos@FF"(double %SUMSQ)
  %output10 = fmul double %return, %output2
  %output13 = fmul double %return7, %output3
  %output14 = fsub double %output10, %output13
  %output17 = fmul double %return7, %output2
  %output20 = fmul double %return, %output3
  %output21 = fadd double %output17, %output20
  %w22 = load double, double* %w
  %output24 = fmul double %w22, %output14
  %tmp = load <2 x double>, <2 x double>* %p
  %return25 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output24, i64 0)
  %output27 = extractvalue { double, <2 x double> } %return25, 1
  store <2 x double> %output27, <2 x double>* %p
  %w28 = load double, double* %w
  %output30 = fmul double %w28, %output21
  %return32 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output27, double %output30, i64 1)
  %output34 = extractvalue { double, <2 x double> } %return32, 1
  store <2 x double> %output34, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_HORSESHOE@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %w4 = load double, double* %w
  %_p5 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p5, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %output6 = fadd double %SQRT, 0x3CB0000000000000
  %output7 = call double @"div@FF"(double %w4, double %output6)
  %output10 = fsub double %output2, %output3
  %output13 = fadd double %output2, %output3
  %output14 = fmul double %output10, %output13
  %output16 = fmul double %output14, %output7
  %tmp = load <2 x double>, <2 x double>* %p
  %return = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output16, i64 0)
  %output18 = extractvalue { double, <2 x double> } %return, 1
  store <2 x double> %output18, <2 x double>* %p
  %output20 = fmul double 2.000000e+00, %output2
  %output22 = fmul double %output20, %output3
  %output24 = fmul double %output22, %output7
  %return26 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output18, double %output24, i64 1)
  %output28 = extractvalue { double, <2 x double> } %return26, 1
  store <2 x double> %output28, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_POLAR@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %ATAN = call double @"ATAN@FU"(<2 x double>* %0)
  %output = fmul double %ATAN, 0x3FD45F306DC9C883
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %1
  %SQRT = call double @"SQRT@FU"(<2 x double>* %1)
  %output3 = fsub double %SQRT, 1.000000e+00
  %w4 = load double, double* %w
  %output6 = fmul double %w4, %output
  %tmp = load <2 x double>, <2 x double>* %p
  %return = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output6, i64 0)
  %output8 = extractvalue { double, <2 x double> } %return, 1
  store <2 x double> %output8, <2 x double>* %p
  %w9 = load double, double* %w
  %output11 = fmul double %w9, %output3
  %return13 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output8, double %output11, i64 1)
  %output15 = extractvalue { double, <2 x double> } %return13, 1
  store <2 x double> %output15, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_HANDKERCHIEF@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca <2 x double>
  %3 = alloca <2 x double>
  %4 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %ATAN = call double @"ATAN@FU"(<2 x double>* %0)
  %w2 = load double, double* %w
  %_p3 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p3, <2 x double>* %1
  %SQRT = call double @"SQRT@FU"(<2 x double>* %1)
  %output = fmul double %w2, %SQRT
  %_p5 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p5, <2 x double>* %2
  %SQRT6 = call double @"SQRT@FU"(<2 x double>* %2)
  %output7 = fadd double %ATAN, %SQRT6
  %return = call double @"sin@FF"(double %output7)
  %output8 = fmul double %output, %return
  %tmp = load <2 x double>, <2 x double>* %p
  %return9 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output8, i64 0)
  %output11 = extractvalue { double, <2 x double> } %return9, 1
  store <2 x double> %output11, <2 x double>* %p
  %w12 = load double, double* %w
  %_p13 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p13, <2 x double>* %3
  %SQRT14 = call double @"SQRT@FU"(<2 x double>* %3)
  %output15 = fmul double %w12, %SQRT14
  %_p17 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p17, <2 x double>* %4
  %SQRT18 = call double @"SQRT@FU"(<2 x double>* %4)
  %output19 = fsub double %ATAN, %SQRT18
  %return20 = call double @"cos@FF"(double %output19)
  %output21 = fmul double %output15, %return20
  %tmp22 = load <2 x double>, <2 x double>* %p
  %return23 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp22, double %output21, i64 1)
  %output25 = extractvalue { double, <2 x double> } %return23, 1
  store <2 x double> %output25, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_HEART@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %1
  %ATAN = call double @"ATAN@FU"(<2 x double>* %1)
  %output = fmul double %SQRT, %ATAN
  %w3 = load double, double* %w
  %_p4 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p4, <2 x double>* %2
  %SQRT5 = call double @"SQRT@FU"(<2 x double>* %2)
  %output6 = fmul double %w3, %SQRT5
  %return = call double @"sin@FF"(double %output)
  %output9 = fmul double %output6, %return
  %tmp = load <2 x double>, <2 x double>* %p
  %return10 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output9, i64 0)
  %output12 = extractvalue { double, <2 x double> } %return10, 1
  store <2 x double> %output12, <2 x double>* %p
  %return14 = call double @"neg@FF"(double %output6)
  %return16 = call double @"cos@FF"(double %output)
  %output17 = fmul double %return14, %return16
  %return19 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output12, double %output17, i64 1)
  %output21 = extractvalue { double, <2 x double> } %return19, 1
  store <2 x double> %output21, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_DISC@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %sr = alloca double
  %cr = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sr, !vex-initializer-store !3
  store double 0.000000e+00, double* %cr, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %ATAN = call double @"ATAN@FU"(<2 x double>* %0)
  %output = call double @"div@FF"(double 1.000000e+00, double 0x400921FB4D12D84A)
  %output2 = fmul double %ATAN, %output
  %_p3 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p3, <2 x double>* %1
  %SQRT = call double @"SQRT@FU"(<2 x double>* %1)
  %output4 = fmul double 0x400921FB4D12D84A, %SQRT
  store double %output4, double* %2
  call void @"sincos@FFF"(double* %2, double* %sr, double* %cr)
  %w6 = load double, double* %w
  %sr7 = load double, double* %sr
  %output8 = fmul double %w6, %sr7
  %output10 = fmul double %output8, %output2
  %tmp = load <2 x double>, <2 x double>* %p
  %return = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output10, i64 0)
  %output12 = extractvalue { double, <2 x double> } %return, 1
  store <2 x double> %output12, <2 x double>* %p
  %w13 = load double, double* %w
  %cr14 = load double, double* %cr
  %output15 = fmul double %w13, %cr14
  %output17 = fmul double %output15, %output2
  %return19 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output12, double %output17, i64 1)
  %output21 = extractvalue { double, <2 x double> } %return19, 1
  store <2 x double> %output21, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SPIRAL@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %sr = alloca double
  %cr = alloca double
  %1 = alloca <2 x double>
  %2 = alloca double
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %cast = call <2 x double> @"set@UF"(double %SQRT)
  %output = call <2 x double> @"div@UU"(<2 x double> %_p1, <2 x double> %cast)
  store double 0.000000e+00, double* %sr, !vex-initializer-store !3
  store double 0.000000e+00, double* %cr, !vex-initializer-store !3
  %_p3 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p3, <2 x double>* %1
  %SQRT4 = call double @"SQRT@FU"(<2 x double>* %1)
  %output5 = fadd double %SQRT4, 0x3CB0000000000000
  %w6 = load double, double* %w
  %output8 = call double @"div@FF"(double %w6, double %output5)
  store double %output5, double* %2
  call void @"sincos@FFF"(double* %2, double* %sr, double* %cr)
  %return = call double @"getcomp@FUI"(<2 x double> %output, i64 1)
  %sr12 = load double, double* %sr
  %output13 = fadd double %return, %sr12
  %output14 = fmul double %output8, %output13
  %tmp = load <2 x double>, <2 x double>* %p
  %return15 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output14, i64 0)
  %output17 = extractvalue { double, <2 x double> } %return15, 1
  store <2 x double> %output17, <2 x double>* %p
  %return20 = call double @"getcomp@FUI"(<2 x double> %output, i64 0)
  %cr21 = load double, double* %cr
  %output22 = fsub double %return20, %cr21
  %output23 = fmul double %output8, %output22
  %return25 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output17, double %output23, i64 1)
  %output27 = extractvalue { double, <2 x double> } %return25, 1
  store <2 x double> %output27, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind readnone
declare <2 x double> @"set@UF"(double) #0

; Function Attrs: nounwind readnone
declare <2 x double> @"div@UU"(<2 x double>, <2 x double>) #0

; Function Attrs: alwaysinline nounwind
define private void @"V_HIPERBOLIC@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca double
  %2 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %cast = call <2 x double> @"set@UF"(double %SQRT)
  %output = call <2 x double> @"div@UU"(<2 x double> %_p1, <2 x double> %cast)
  %_p3 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p3, <2 x double>* %2
  %SQRT4 = call double @"SQRT@FU"(<2 x double>* %2)
  store double %SQRT4, double* %1
  %Zeps = call double @"Zeps@FF"(double* %1)
  %w5 = load double, double* %w
  %return = call double @"getcomp@FUI"(<2 x double> %output, i64 0)
  %output7 = fmul double %w5, %return
  %output9 = call double @"div@FF"(double %output7, double %Zeps)
  %tmp = load <2 x double>, <2 x double>* %p
  %return10 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output9, i64 0)
  %output12 = extractvalue { double, <2 x double> } %return10, 1
  store <2 x double> %output12, <2 x double>* %p
  %w13 = load double, double* %w
  %return15 = call double @"getcomp@FUI"(<2 x double> %output, i64 1)
  %output16 = fmul double %w13, %return15
  %output18 = fmul double %output16, %Zeps
  %return20 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output12, double %output18, i64 1)
  %output22 = extractvalue { double, <2 x double> } %return20, 1
  store <2 x double> %output22, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_DIAMOND@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %return = call double @"atan2@FFF"(double %output2, double %output3)
  %output8 = fmul double %output2, %output2
  %output11 = fmul double %output3, %output3
  %output12 = fadd double %output8, %output11
  %return13 = call double @"sqrt@FF"(double %output12)
  %w14 = load double, double* %w
  %return16 = call double @"sin@FF"(double %return)
  %output17 = fmul double %w14, %return16
  %return19 = call double @"cos@FF"(double %return13)
  %output20 = fmul double %output17, %return19
  %tmp = load <2 x double>, <2 x double>* %p
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output20, i64 0)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  %w24 = load double, double* %w
  %return26 = call double @"cos@FF"(double %return)
  %output27 = fmul double %w24, %return26
  %return29 = call double @"sin@FF"(double %return13)
  %output30 = fmul double %output27, %return29
  %return32 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output23, double %output30, i64 1)
  %output34 = extractvalue { double, <2 x double> } %return32, 1
  store <2 x double> %output34, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_EX@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %ATAN = call double @"ATAN@FU"(<2 x double>* %0)
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %1
  %SQRT = call double @"SQRT@FU"(<2 x double>* %1)
  %output = fadd double %ATAN, %SQRT
  %return = call double @"sin@FF"(double %output)
  %output7 = fsub double %ATAN, %SQRT
  %return8 = call double @"cos@FF"(double %output7)
  %output11 = fmul double %return, %return
  %output13 = fmul double %output11, %return
  %output15 = fmul double %output13, %SQRT
  %output18 = fmul double %return8, %return8
  %output20 = fmul double %output18, %return8
  %output22 = fmul double %output20, %SQRT
  %w23 = load double, double* %w
  %output26 = fadd double %output15, %output22
  %output27 = fmul double %w23, %output26
  %tmp = load <2 x double>, <2 x double>* %p
  %return28 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output27, i64 0)
  %output30 = extractvalue { double, <2 x double> } %return28, 1
  store <2 x double> %output30, <2 x double>* %p
  %w31 = load double, double* %w
  %output34 = fsub double %output15, %output22
  %output35 = fmul double %w31, %output34
  %return37 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output30, double %output35, i64 1)
  %output39 = extractvalue { double, <2 x double> } %return37, 1
  store <2 x double> %output39, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_JULIA@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %ATAN = call double @"ATAN@FU"(<2 x double>* %0)
  %output = fmul double 5.000000e-01, %ATAN
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return2 = fcmp olt double %return, 5.000000e-01
  br i1 %return2, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %output5 = fadd double %output, 0x400921FB4D12D84A
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %a.0 = phi double [ %output5, %true ], [ %output, %__llvm_entry ]
  %w6 = load double, double* %w
  %_p7 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p7, <2 x double>* %1
  %SQRT = call double @"SQRT@FU"(<2 x double>* %1)
  %return8 = call double @"sqrt@FF"(double %SQRT)
  %output9 = fmul double %w6, %return8
  store double %a.0, double* %2
  call void @"sincos@FFF"(double* %2, double* %sa, double* %ca)
  %ca12 = load double, double* %ca
  %output13 = fmul double %output9, %ca12
  %tmp = load <2 x double>, <2 x double>* %p
  %return14 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output13, i64 0)
  %output16 = extractvalue { double, <2 x double> } %return14, 1
  store <2 x double> %output16, <2 x double>* %p
  %sa18 = load double, double* %sa
  %output19 = fmul double %output9, %sa18
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output16, double %output19, i64 1)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_BENT@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %return = fcmp olt double %output2, 0.000000e+00
  br i1 %return, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %output9 = fmul double %output2, 2.000000e+00
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %nx.0 = phi double [ %output9, %true ], [ %output2, %__llvm_entry ]
  %return11 = fcmp olt double %output3, 0.000000e+00
  br i1 %return11, label %true13, label %end14

true13:                                           ; preds = %end
  %output16 = call double @"div@FF"(double %output3, double 2.000000e+00)
  br label %end14

end14:                                            ; preds = %true13, %end
  %ny.0 = phi double [ %output16, %true13 ], [ %output3, %end ]
  %w17 = load double, double* %w
  %output19 = fmul double %w17, %nx.0
  %tmp = load <2 x double>, <2 x double>* %p
  %return20 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output19, i64 0)
  %output22 = extractvalue { double, <2 x double> } %return20, 1
  store <2 x double> %output22, <2 x double>* %p
  %w23 = load double, double* %w
  %output25 = fmul double %w23, %ny.0
  %return27 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output22, double %output25, i64 1)
  %output29 = extractvalue { double, <2 x double> } %return27, 1
  store <2 x double> %output29, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_WAVES@UUFFFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %b, double* %c, double* %e, double* %f) #1 {
__llvm_entry:
  %0 = alloca double
  %1 = alloca double
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %c4 = load double, double* %c
  %output6 = fmul double %c4, %c4
  store double %output6, double* %0
  %Zeps = call double @"Zeps@FF"(double* %0)
  %output7 = call double @"div@FF"(double 1.000000e+00, double %Zeps)
  %f8 = load double, double* %f
  %output10 = fmul double %f8, %f8
  store double %output10, double* %1
  %Zeps11 = call double @"Zeps@FF"(double* %1)
  %output12 = call double @"div@FF"(double 1.000000e+00, double %Zeps11)
  %b14 = load double, double* %b
  %output17 = fmul double %output3, %output7
  %return = call double @"sin@FF"(double %output17)
  %output18 = fmul double %b14, %return
  %output19 = fadd double %output2, %output18
  %e21 = load double, double* %e
  %output24 = fmul double %output2, %output12
  %return25 = call double @"sin@FF"(double %output24)
  %output26 = fmul double %e21, %return25
  %output27 = fadd double %output3, %output26
  %w28 = load double, double* %w
  %output30 = fmul double %w28, %output19
  %tmp = load <2 x double>, <2 x double>* %p
  %return31 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output30, i64 0)
  %output33 = extractvalue { double, <2 x double> } %return31, 1
  store <2 x double> %output33, <2 x double>* %p
  %w34 = load double, double* %w
  %output36 = fmul double %w34, %output27
  %return38 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output33, double %output36, i64 1)
  %output40 = extractvalue { double, <2 x double> } %return38, 1
  store <2 x double> %output40, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_FISHEYE@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %_p4 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p4, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %w5 = load double, double* %w
  %output6 = fmul double 2.000000e+00, %w5
  %output8 = fadd double %SQRT, 1.000000e+00
  %output9 = call double @"div@FF"(double %output6, double %output8)
  %output12 = fmul double %output9, %output3
  %tmp = load <2 x double>, <2 x double>* %p
  %return = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output12, i64 0)
  %output14 = extractvalue { double, <2 x double> } %return, 1
  store <2 x double> %output14, <2 x double>* %p
  %output17 = fmul double %output9, %output2
  %return19 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output14, double %output17, i64 1)
  %output21 = extractvalue { double, <2 x double> } %return19, 1
  store <2 x double> %output21, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_POPCORN@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %c, double* %f) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %output5 = fmul double 3.000000e+00, %output3
  %return = call double @"tan@FF"(double %output5)
  %output7 = fmul double 3.000000e+00, %output2
  %return8 = call double @"tan@FF"(double %output7)
  %c10 = load double, double* %c
  %return12 = call double @"sin@FF"(double %return)
  %output13 = fmul double %c10, %return12
  %output14 = fadd double %output2, %output13
  %f16 = load double, double* %f
  %return18 = call double @"sin@FF"(double %return8)
  %output19 = fmul double %f16, %return18
  %output20 = fadd double %output3, %output19
  %w21 = load double, double* %w
  %output23 = fmul double %w21, %output14
  %tmp = load <2 x double>, <2 x double>* %p
  %return24 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output23, i64 0)
  %output26 = extractvalue { double, <2 x double> } %return24, 1
  store <2 x double> %output26, <2 x double>* %p
  %w27 = load double, double* %w
  %output29 = fmul double %w27, %output20
  %return31 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output26, double %output29, i64 1)
  %output33 = extractvalue { double, <2 x double> } %return31, 1
  store <2 x double> %output33, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_EXPONENTIAL@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %sdy = alloca double
  %cdy = alloca double
  %0 = alloca double
  store double 0.000000e+00, double* %sdy, !vex-initializer-store !3
  store double 0.000000e+00, double* %cdy, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %w4 = load double, double* %w
  %output6 = fsub double %output2, 1.000000e+00
  %return = call double @"exp@FF"(double %output6)
  %output7 = fmul double %w4, %return
  %output9 = fmul double 0x400921FB4D12D84A, %output3
  store double %output9, double* %0
  call void @"sincos@FFF"(double* %0, double* %sdy, double* %cdy)
  %cdy12 = load double, double* %cdy
  %output13 = fmul double %output7, %cdy12
  %tmp = load <2 x double>, <2 x double>* %p
  %return14 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output13, i64 0)
  %output16 = extractvalue { double, <2 x double> } %return14, 1
  store <2 x double> %output16, <2 x double>* %p
  %sdy18 = load double, double* %sdy
  %output19 = fmul double %output7, %sdy18
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output16, double %output19, i64 1)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind readnone
declare double @"exp@FF"(double) #0

; Function Attrs: alwaysinline nounwind
define private void @"V_POWER@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %cast = call <2 x double> @"set@UF"(double %SQRT)
  %output = call <2 x double> @"div@UU"(<2 x double> %_p1, <2 x double> %cast)
  %w3 = load double, double* %w
  %_p4 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p4, <2 x double>* %1
  %SQRT5 = call double @"SQRT@FU"(<2 x double>* %1)
  %return = call double @"getcomp@FUI"(<2 x double> %output, i64 0)
  %return7 = call double @"pow@FFF"(double %SQRT5, double %return)
  %output8 = fmul double %w3, %return7
  %return11 = call double @"getcomp@FUI"(<2 x double> %output, i64 1)
  %output12 = fmul double %output8, %return11
  %tmp = load <2 x double>, <2 x double>* %p
  %return13 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output12, i64 0)
  %output15 = extractvalue { double, <2 x double> } %return13, 1
  store <2 x double> %output15, <2 x double>* %p
  %output19 = fmul double %output8, %return
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output15, double %output19, i64 1)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind readnone
declare double @"pow@FFF"(double, double) #0

; Function Attrs: alwaysinline nounwind
define private void @"V_COSINE@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %output5 = fmul double %output2, 0x400921FB4D12D84A
  store double %output5, double* %0
  call void @"sincos@FFF"(double* %0, double* %sa, double* %ca)
  %ca7 = load double, double* %ca
  %return = call double @"cosh@FF"(double %output3)
  %output9 = fmul double %ca7, %return
  %sa10 = load double, double* %sa
  %return11 = call double @"neg@FF"(double %sa10)
  %return13 = call double @"sinh@FF"(double %output3)
  %output14 = fmul double %return11, %return13
  %w15 = load double, double* %w
  %output17 = fmul double %w15, %output9
  %tmp = load <2 x double>, <2 x double>* %p
  %return18 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output17, i64 0)
  %output20 = extractvalue { double, <2 x double> } %return18, 1
  store <2 x double> %output20, <2 x double>* %p
  %w21 = load double, double* %w
  %output23 = fmul double %w21, %output14
  %return25 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output20, double %output23, i64 1)
  %output27 = extractvalue { double, <2 x double> } %return25, 1
  store <2 x double> %output27, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind readnone
declare double @"cosh@FF"(double) #0

; Function Attrs: nounwind readnone
declare double @"sinh@FF"(double) #0

; Function Attrs: alwaysinline nounwind
define private void @"V_RINGS@UUFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %d) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  %3 = alloca double
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %cast = call <2 x double> @"set@UF"(double %SQRT)
  %output = call <2 x double> @"div@UU"(<2 x double> %_p1, <2 x double> %cast)
  %d3 = load double, double* %d
  %output5 = fmul double %d3, %d3
  %output6 = fadd double %output5, 0x3CB0000000000000
  %_p7 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p7, <2 x double>* %1
  %SQRT8 = call double @"SQRT@FU"(<2 x double>* %1)
  %w9 = load double, double* %w
  %output12 = fadd double %SQRT8, %output6
  store double %output12, double* %2
  %output14 = fmul double 2.000000e+00, %output6
  store double %output14, double* %3
  %fmod = call double @"fmod@FFF"(double* %2, double* %3)
  %output16 = fsub double %fmod, %output6
  %output19 = fsub double 1.000000e+00, %output6
  %output20 = fmul double %SQRT8, %output19
  %output21 = fadd double %output16, %output20
  %output22 = fmul double %w9, %output21
  %return = call double @"getcomp@FUI"(<2 x double> %output, i64 1)
  %output25 = fmul double %output22, %return
  %tmp = load <2 x double>, <2 x double>* %p
  %return26 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output25, i64 0)
  %output28 = extractvalue { double, <2 x double> } %return26, 1
  store <2 x double> %output28, <2 x double>* %p
  %return31 = call double @"getcomp@FUI"(<2 x double> %output, i64 0)
  %output32 = fmul double %output22, %return31
  %return34 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output28, double %output32, i64 1)
  %output36 = extractvalue { double, <2 x double> } %return34, 1
  store <2 x double> %output36, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_FAN@UUFFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %c, double* %f) #1 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  %3 = alloca double
  %4 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %c1 = load double, double* %c
  %output = fmul double %c1, %c1
  %output3 = fadd double %output, 0x3CB0000000000000
  %output4 = fmul double 0x400921FB4D12D84A, %output3
  %f5 = load double, double* %f
  %output7 = fmul double 5.000000e-01, %output4
  %_p8 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p8, <2 x double>* %0
  %ATAN = call double @"ATAN@FU"(<2 x double>* %0)
  %w9 = load double, double* %w
  %_p10 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p10, <2 x double>* %1
  %SQRT = call double @"SQRT@FU"(<2 x double>* %1)
  %output11 = fmul double %w9, %SQRT
  %output15 = fadd double %ATAN, %f5
  store double %output15, double* %2
  store double %output4, double* %3
  %fmod = call double @"fmod@FFF"(double* %2, double* %3)
  %return = fcmp ogt double %fmod, %output7
  br i1 %return, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %return20 = call double @"neg@FF"(double %output7)
  br label %end

end:                                              ; preds = %__llvm_entry, %true
  %phi = phi double [ %return20, %true ], [ %output7, %__llvm_entry ]
  %output22 = fadd double %ATAN, %phi
  store double %output22, double* %4
  call void @"sincos@FFF"(double* %4, double* %sa, double* %ca)
  %ca25 = load double, double* %ca
  %output26 = fmul double %output11, %ca25
  %tmp = load <2 x double>, <2 x double>* %p
  %return27 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output26, i64 0)
  %output29 = extractvalue { double, <2 x double> } %return27, 1
  store <2 x double> %output29, <2 x double>* %p
  %sa31 = load double, double* %sa
  %output32 = fmul double %output11, %sa31
  %return34 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output29, double %output32, i64 1)
  %output36 = extractvalue { double, <2 x double> } %return34, 1
  store <2 x double> %output36, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_BUBBLE@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %w4 = load double, double* %w
  %_p5 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p5, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %output6 = fmul double 2.500000e-01, %SUMSQ
  %output7 = fadd double %output6, 1.000000e+00
  %output8 = call double @"div@FF"(double %w4, double %output7)
  %output11 = fmul double %output8, %output2
  %tmp = load <2 x double>, <2 x double>* %p
  %return = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output11, i64 0)
  %output13 = extractvalue { double, <2 x double> } %return, 1
  store <2 x double> %output13, <2 x double>* %p
  %output16 = fmul double %output8, %output3
  %return18 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output13, double %output16, i64 1)
  %output20 = extractvalue { double, <2 x double> } %return18, 1
  store <2 x double> %output20, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_CYLINDER@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %w4 = load double, double* %w
  %return = call double @"sin@FF"(double %output2)
  %output6 = fmul double %w4, %return
  %tmp = load <2 x double>, <2 x double>* %p
  %return7 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output6, i64 0)
  %output9 = extractvalue { double, <2 x double> } %return7, 1
  store <2 x double> %output9, <2 x double>* %p
  %w10 = load double, double* %w
  %output12 = fmul double %w10, %output3
  %return14 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output9, double %output12, i64 1)
  %output16 = extractvalue { double, <2 x double> } %return14, 1
  store <2 x double> %output16, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_EYEFISH@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %w4 = load double, double* %w
  %output5 = fmul double %w4, 2.000000e+00
  %_p6 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p6, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %output7 = fadd double 1.000000e+00, %SQRT
  %output8 = call double @"div@FF"(double %output5, double %output7)
  %output11 = fmul double %output8, %output2
  %tmp = load <2 x double>, <2 x double>* %p
  %return = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output11, i64 0)
  %output13 = extractvalue { double, <2 x double> } %return, 1
  store <2 x double> %output13, <2 x double>* %p
  %output16 = fmul double %output8, %output3
  %return18 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output13, double %output16, i64 1)
  %output20 = extractvalue { double, <2 x double> } %return18, 1
  store <2 x double> %output20, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_BLUR@UF"(<2 x double>* %p, double* %w) #1 {
__llvm_entry:
  %sinr = alloca double
  %cosr = alloca double
  %0 = alloca double
  store double 0.000000e+00, double* %sinr, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosr, !vex-initializer-store !3
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output = fmul double %return, 2.000000e+00
  %output1 = fmul double %output, 0x400921FB4D12D84A
  store double %output1, double* %0
  call void @"sincos@FFF"(double* %0, double* %sinr, double* %cosr)
  %w3 = load double, double* %w
  %return4 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output5 = fmul double %w3, %return4
  %cosr7 = load double, double* %cosr
  %output8 = fmul double %output5, %cosr7
  %tmp = load <2 x double>, <2 x double>* %p
  %return9 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output8, i64 0)
  %output11 = extractvalue { double, <2 x double> } %return9, 1
  store <2 x double> %output11, <2 x double>* %p
  %sinr13 = load double, double* %sinr
  %output14 = fmul double %output5, %sinr13
  %return16 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output11, double %output14, i64 1)
  %output18 = extractvalue { double, <2 x double> } %return16, 1
  store <2 x double> %output18, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_CURL@UUFU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %c) #1 {
__llvm_entry:
  %0 = alloca double
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %c4 = load <2 x double>, <2 x double>* %c
  %output5 = call { double, double } @"assign@FFU"(<2 x double> %c4)
  %output6 = extractvalue { double, double } %output5, 0
  %output7 = extractvalue { double, double } %output5, 1
  %output10 = fmul double %output6, %output2
  %output11 = fadd double 1.000000e+00, %output10
  %output15 = fmul double %output2, %output2
  %output18 = fmul double %output3, %output3
  %output19 = fsub double %output15, %output18
  %output20 = fmul double %output7, %output19
  %output21 = fadd double %output11, %output20
  %output24 = fmul double %output6, %output3
  %output26 = fmul double 2.000000e+00, %output7
  %output28 = fmul double %output26, %output2
  %output30 = fmul double %output28, %output3
  %output31 = fadd double %output24, %output30
  %w32 = load double, double* %w
  %output35 = fmul double %output21, %output21
  %output38 = fmul double %output31, %output31
  %output39 = fadd double %output35, %output38
  store double %output39, double* %0
  %Zeps = call double @"Zeps@FF"(double* %0)
  %output40 = call double @"div@FF"(double %w32, double %Zeps)
  %output43 = fmul double %output2, %output21
  %output46 = fmul double %output3, %output31
  %output47 = fadd double %output43, %output46
  %output49 = fmul double %output47, %output40
  %tmp = load <2 x double>, <2 x double>* %p
  %return = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output49, i64 0)
  %output51 = extractvalue { double, <2 x double> } %return, 1
  store <2 x double> %output51, <2 x double>* %p
  %output54 = fmul double %output3, %output21
  %output57 = fmul double %output2, %output31
  %output58 = fsub double %output54, %output57
  %output60 = fmul double %output58, %output40
  %return62 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output51, double %output60, i64 1)
  %output64 = extractvalue { double, <2 x double> } %return62, 1
  store <2 x double> %output64, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_NGON@UUFP"(<2 x double>* %p, <2 x double>* %_p, double* %w, <4 x double>* %ngon) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %ngon4 = load <4 x double>, <4 x double>* %ngon
  %output5 = call { double, double, double, double } @"assign@FFFFP"(<4 x double> %ngon4)
  %output6 = extractvalue { double, double, double, double } %output5, 0
  %output7 = extractvalue { double, double, double, double } %output5, 1
  %output8 = extractvalue { double, double, double, double } %output5, 2
  %output9 = extractvalue { double, double, double, double } %output5, 3
  %return = call double @"neg@FF"(double 5.000000e-01)
  %output11 = fmul double %return, %output6
  %output13 = call double @"div@FF"(double 0x401921FB4D12D84A, double %output7)
  %output15 = call double @"div@FF"(double 1.000000e+00, double %output13)
  %return17 = fcmp oeq double %output2, 0.000000e+00
  %return18 = zext i1 %return17 to i64
  %return20 = fcmp oeq double %output3, 0.000000e+00
  %return21 = zext i1 %return20 to i64
  %return22 = call i64 @"and@III"(i64 %return18, i64 %return21)
  %2 = icmp ne i64 %return22, 0
  br i1 %2, label %end, label %false

false:                                            ; preds = %__llvm_entry
  %_p23 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p23, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %return25 = call double @"pow@FFF"(double %SUMSQ, double %output11)
  br label %end

end:                                              ; preds = %__llvm_entry, %false
  %phi26 = phi double [ %return25, %false ], [ 0.000000e+00, %__llvm_entry ]
  %_p27 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p27, <2 x double>* %1
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %1)
  %output32 = fmul double %ATANYX, %output15
  %return33 = call double @"floor@FF"(double %output32)
  %output34 = fmul double %output13, %return33
  %output35 = fsub double %ATANYX, %output34
  %output38 = fmul double 5.000000e-01, %output13
  %return39 = fcmp ogt double %output35, %output38
  br i1 %return39, label %true41, label %end42

true41:                                           ; preds = %end
  %output45 = fsub double %output35, %output13
  br label %end42

end42:                                            ; preds = %true41, %end
  %phi.0 = phi double [ %output45, %true41 ], [ %output35, %end ]
  %return48 = call double @"cos@FF"(double %phi.0)
  %output49 = call double @"div@FF"(double 1.000000e+00, double %return48)
  %output50 = fsub double %output49, 1.000000e+00
  %output51 = fmul double %output8, %output50
  %output53 = fadd double %output51, %output9
  %w54 = load double, double* %w
  %output55 = fmul double %output53, %w54
  %output57 = fmul double %output55, %phi26
  %output60 = fmul double %output57, %output2
  %tmp = load <2 x double>, <2 x double>* %p
  %return61 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output60, i64 0)
  %output63 = extractvalue { double, <2 x double> } %return61, 1
  store <2 x double> %output63, <2 x double>* %p
  %output66 = fmul double %output57, %output3
  %return68 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output63, double %output66, i64 1)
  %output70 = extractvalue { double, <2 x double> } %return68, 1
  store <2 x double> %output70, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind
declare { double, double, double, double } @"assign@FFFFP"(<4 x double>) #2

; Function Attrs: nounwind readnone
declare i64 @"and@III"(i64, i64) #0

; Function Attrs: alwaysinline nounwind
define private void @"V_PDJ@UUFP"(<2 x double>* %p, <2 x double>* %_p, double* %w, <4 x double>* %pp) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %pp4 = load <4 x double>, <4 x double>* %pp
  %output5 = call { double, double, double, double } @"assign@FFFFP"(<4 x double> %pp4)
  %output6 = extractvalue { double, double, double, double } %output5, 0
  %output7 = extractvalue { double, double, double, double } %output5, 1
  %output8 = extractvalue { double, double, double, double } %output5, 2
  %output9 = extractvalue { double, double, double, double } %output5, 3
  %output12 = fmul double %output7, %output2
  %return = call double @"cos@FF"(double %output12)
  %output15 = fmul double %output8, %output2
  %return16 = call double @"sin@FF"(double %output15)
  %output19 = fmul double %output6, %output3
  %return20 = call double @"sin@FF"(double %output19)
  %output23 = fmul double %output9, %output3
  %return24 = call double @"cos@FF"(double %output23)
  %w25 = load double, double* %w
  %output28 = fsub double %return20, %return
  %output29 = fmul double %w25, %output28
  %tmp = load <2 x double>, <2 x double>* %p
  %return30 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output29, i64 0)
  %output32 = extractvalue { double, <2 x double> } %return30, 1
  store <2 x double> %output32, <2 x double>* %p
  %w33 = load double, double* %w
  %output36 = fsub double %return16, %return24
  %output37 = fmul double %w33, %output36
  %return39 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output32, double %output37, i64 1)
  %output41 = extractvalue { double, <2 x double> } %return39, 1
  store <2 x double> %output41, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_BLOB@UUFV"(<2 x double>* %p, <2 x double>* %_p, double* %w, <3 x double>* %blob) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %cast = call <2 x double> @"set@UF"(double %SQRT)
  %output = call <2 x double> @"div@UU"(<2 x double> %_p1, <2 x double> %cast)
  %blob3 = load <3 x double>, <3 x double>* %blob
  %output4 = call { double, double, double } @"assign@FFFV"(<3 x double> %blob3)
  %output5 = extractvalue { double, double, double } %output4, 0
  %output6 = extractvalue { double, double, double } %output4, 1
  %output7 = extractvalue { double, double, double } %output4, 2
  %_p9 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p9, <2 x double>* %1
  %SQRT10 = call double @"SQRT@FU"(<2 x double>* %1)
  %_p12 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p12, <2 x double>* %2
  %ATAN = call double @"ATAN@FU"(<2 x double>* %2)
  %output15 = fsub double %output6, %output5
  %output21 = fmul double %output7, %ATAN
  %return = call double @"sin@FF"(double %output21)
  %output22 = fmul double 5.000000e-01, %return
  %output23 = fadd double 5.000000e-01, %output22
  %output24 = fmul double %output15, %output23
  %output25 = fadd double %output5, %output24
  %output26 = fmul double %SQRT10, %output25
  %w27 = load double, double* %w
  %return29 = call double @"getcomp@FUI"(<2 x double> %output, i64 0)
  %output30 = fmul double %w27, %return29
  %output32 = fmul double %output30, %output26
  %tmp = load <2 x double>, <2 x double>* %p
  %return33 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output32, i64 0)
  %output35 = extractvalue { double, <2 x double> } %return33, 1
  store <2 x double> %output35, <2 x double>* %p
  %w36 = load double, double* %w
  %return38 = call double @"getcomp@FUI"(<2 x double> %output, i64 1)
  %output39 = fmul double %w36, %return38
  %output41 = fmul double %output39, %output26
  %return43 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output35, double %output41, i64 1)
  %output45 = extractvalue { double, <2 x double> } %return43, 1
  store <2 x double> %output45, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind
declare { double, double, double } @"assign@FFFV"(<3 x double>) #2

; Function Attrs: alwaysinline nounwind
define private void @"V_JULIAN@UUFU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %julian) #1 {
__llvm_entry:
  %sina = alloca double
  %cosa = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sina, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosa, !vex-initializer-store !3
  %julian1 = load <2 x double>, <2 x double>* %julian
  %output = call { double, double } @"assign@FFU"(<2 x double> %julian1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %output7 = call double @"div@FF"(double %output3, double %output2)
  %output8 = call double @"div@FF"(double %output7, double 2.000000e+00)
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output10 = fmul double %output2, %return
  %return11 = call double @"trunc@FF"(double %output10)
  %cast = fptosi double %return11 to i64
  %_p12 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p12, <2 x double>* %0
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %0)
  %cast14 = sitofp i64 %cast to double
  %output15 = fmul double 0x401921FB4D12D84A, %cast14
  %output16 = fadd double %ATANYX, %output15
  %output18 = call double @"div@FF"(double %output16, double %output2)
  %w19 = load double, double* %w
  %_p20 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p20, <2 x double>* %1
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %1)
  %return22 = call double @"pow@FFF"(double %SUMSQ, double %output8)
  %output23 = fmul double %w19, %return22
  store double %output18, double* %2
  call void @"sincos@FFF"(double* %2, double* %sina, double* %cosa)
  %cosa26 = load double, double* %cosa
  %output27 = fmul double %output23, %cosa26
  %tmp = load <2 x double>, <2 x double>* %p
  %return28 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output27, i64 0)
  %output30 = extractvalue { double, <2 x double> } %return28, 1
  store <2 x double> %output30, <2 x double>* %p
  %sina32 = load double, double* %sina
  %output33 = fmul double %output23, %sina32
  %return35 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output30, double %output33, i64 1)
  %output37 = extractvalue { double, <2 x double> } %return35, 1
  store <2 x double> %output37, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind readnone
declare double @"trunc@FF"(double) #0

; Function Attrs: alwaysinline nounwind
define private void @"V_JULIASCOPE@UUFU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %juliascope) #1 {
__llvm_entry:
  %sina = alloca double
  %cosa = alloca double
  %0 = alloca <2 x double>
  %1 = alloca double
  %2 = alloca <2 x double>
  store double 0.000000e+00, double* %sina, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosa, !vex-initializer-store !3
  %juliascope1 = load <2 x double>, <2 x double>* %juliascope
  %output = call { double, double } @"assign@FFU"(<2 x double> %juliascope1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %output7 = call double @"div@FF"(double %output3, double %output2)
  %output8 = call double @"div@FF"(double %output7, double 2.000000e+00)
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output10 = fmul double %output2, %return
  %return11 = call double @"trunc@FF"(double %output10)
  %cast = fptosi double %return11 to i64
  %return13 = and i64 %cast, 1
  %return14 = call i64 @"eq@III"(i64 %return13, i64 0)
  %3 = icmp ne i64 %return14, 0
  %cast16 = sitofp i64 %cast to double
  %output17 = fmul double 0x401921FB4D12D84A, %cast16
  %_p18 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p18, <2 x double>* %0
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %0)
  br i1 %3, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output19 = fadd double %output17, %ATANYX
  %output21 = call double @"div@FF"(double %output19, double %output2)
  br label %end

false:                                            ; preds = %__llvm_entry
  %output27 = fsub double %output17, %ATANYX
  %output29 = call double @"div@FF"(double %output27, double %output2)
  br label %end

end:                                              ; preds = %false, %true
  %phi = phi double [ %output21, %true ], [ %output29, %false ]
  store double %phi, double* %1
  call void @"sincos@FFF"(double* %1, double* %sina, double* %cosa)
  %w31 = load double, double* %w
  %_p32 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p32, <2 x double>* %2
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %2)
  %return34 = call double @"pow@FFF"(double %SUMSQ, double %output8)
  %output35 = fmul double %w31, %return34
  %cosa37 = load double, double* %cosa
  %output38 = fmul double %output35, %cosa37
  %tmp = load <2 x double>, <2 x double>* %p
  %return39 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output38, i64 0)
  %output41 = extractvalue { double, <2 x double> } %return39, 1
  store <2 x double> %output41, <2 x double>* %p
  %sina43 = load double, double* %sina
  %output44 = fmul double %output35, %sina43
  %return46 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output41, double %output44, i64 1)
  %output48 = extractvalue { double, <2 x double> } %return46, 1
  store <2 x double> %output48, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_GAUSSIAN_BLUR@UF"(<2 x double>* %p, double* %w) #1 {
__llvm_entry:
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output = fmul double %return, 2.000000e+00
  %output1 = fmul double %output, 0x400921FB4D12D84A
  %w2 = load double, double* %w
  %return3 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return4 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output5 = fadd double %return3, %return4
  %return6 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output7 = fadd double %output5, %return6
  %return8 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output9 = fadd double %output7, %return8
  %output10 = fsub double %output9, 2.000000e+00
  %output11 = fmul double %w2, %output10
  %return14 = call double @"cos@FF"(double %output1)
  %output15 = fmul double %output11, %return14
  %tmp = load <2 x double>, <2 x double>* %p
  %return16 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output15, i64 0)
  %output18 = extractvalue { double, <2 x double> } %return16, 1
  store <2 x double> %output18, <2 x double>* %p
  %return21 = call double @"sin@FF"(double %output1)
  %output22 = fmul double %output11, %return21
  %return24 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output18, double %output22, i64 1)
  %output26 = extractvalue { double, <2 x double> } %return24, 1
  store <2 x double> %output26, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_FAN2@UUFU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %fan2) #1 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %fan21 = load <2 x double>, <2 x double>* %fan2
  %return = call double @"getcomp@FUI"(<2 x double> %fan21, i64 1)
  %return3 = call double @"getcomp@FUI"(<2 x double> %fan21, i64 0)
  %output = fmul double %return3, %return3
  %output6 = fadd double %output, 0x3CB0000000000000
  %output7 = fmul double 0x400921FB4D12D84A, %output6
  %output9 = fmul double 5.000000e-01, %output7
  %_p10 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p10, <2 x double>* %0
  %ATAN = call double @"ATAN@FU"(<2 x double>* %0)
  %w11 = load double, double* %w
  %_p12 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p12, <2 x double>* %1
  %SQRT = call double @"SQRT@FU"(<2 x double>* %1)
  %output13 = fmul double %w11, %SQRT
  %output16 = fadd double %ATAN, %return
  %output22 = call double @"div@FF"(double %output16, double %output7)
  %cast = fptosi double %output22 to i64
  %cast23 = sitofp i64 %cast to double
  %output24 = fmul double %output7, %cast23
  %output25 = fsub double %output16, %output24
  %return28 = fcmp ogt double %output25, %output9
  %output32 = fsub double %ATAN, %output9
  %output35 = fadd double %ATAN, %output9
  %phi = select i1 %return28, double %output32, double %output35
  store double %phi, double* %2
  call void @"sincos@FFF"(double* %2, double* %sa, double* %ca)
  %sa38 = load double, double* %sa
  %output39 = fmul double %output13, %sa38
  %tmp = load <2 x double>, <2 x double>* %p
  %return40 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output39, i64 0)
  %output42 = extractvalue { double, <2 x double> } %return40, 1
  store <2 x double> %output42, <2 x double>* %p
  %ca44 = load double, double* %ca
  %output45 = fmul double %output13, %ca44
  %return47 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output42, double %output45, i64 1)
  %output49 = extractvalue { double, <2 x double> } %return47, 1
  store <2 x double> %output49, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_RINGS2@UUFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %rings2val) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %cast = call <2 x double> @"set@UF"(double %SQRT)
  %output = call <2 x double> @"div@UU"(<2 x double> %_p1, <2 x double> %cast)
  %_p3 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p3, <2 x double>* %1
  %SQRT4 = call double @"SQRT@FU"(<2 x double>* %1)
  %rings2val5 = load double, double* %rings2val
  %output7 = fmul double %rings2val5, %rings2val5
  %return = call double @"neg@FF"(double 2.000000e+00)
  %output10 = fmul double %return, %output7
  %output13 = fadd double %SQRT4, %output7
  %output15 = fmul double 2.000000e+00, %output7
  %output16 = call double @"div@FF"(double %output13, double %output15)
  %cast17 = fptosi double %output16 to i64
  %cast18 = sitofp i64 %cast17 to double
  %output19 = fmul double %output10, %cast18
  %output22 = fsub double 1.000000e+00, %output7
  %output23 = fmul double %SQRT4, %output22
  %output24 = fadd double %output19, %output23
  %output25 = fadd double %SQRT4, %output24
  %w26 = load double, double* %w
  %return28 = call double @"getcomp@FUI"(<2 x double> %output, i64 0)
  %output29 = fmul double %w26, %return28
  %output31 = fmul double %output29, %output25
  %tmp = load <2 x double>, <2 x double>* %p
  %return32 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output31, i64 0)
  %output34 = extractvalue { double, <2 x double> } %return32, 1
  store <2 x double> %output34, <2 x double>* %p
  %w35 = load double, double* %w
  %return37 = call double @"getcomp@FUI"(<2 x double> %output, i64 1)
  %output38 = fmul double %w35, %return37
  %output40 = fmul double %output38, %output25
  %return42 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output34, double %output40, i64 1)
  %output44 = extractvalue { double, <2 x double> } %return42, 1
  store <2 x double> %output44, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_RECTANGLES@UUFU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %rect) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %rect4 = load <2 x double>, <2 x double>* %rect
  %return = call double @"getcomp@FUI"(<2 x double> %rect4, i64 0)
  %return5 = fcmp oeq double %return, 0.000000e+00
  %w7 = load double, double* %w
  br i1 %return5, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output9 = fmul double %w7, %output2
  %tmp = load <2 x double>, <2 x double>* %p
  %return10 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output9, i64 0)
  %output12 = extractvalue { double, <2 x double> } %return10, 1
  store <2 x double> %output12, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %output17 = call double @"div@FF"(double %output2, double %return)
  %return18 = call i64 @"floor@IF"(double %output17)
  %output19 = mul i64 2, %return18
  %output20 = add i64 %output19, 1
  %rect21 = load <2 x double>, <2 x double>* %rect
  %return22 = call double @"getcomp@FUI"(<2 x double> %rect21, i64 0)
  %cast = sitofp i64 %output20 to double
  %output23 = fmul double %cast, %return22
  %output25 = fsub double %output23, %output2
  %output26 = fmul double %w7, %output25
  %tmp27 = load <2 x double>, <2 x double>* %p
  %return28 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp27, double %output26, i64 0)
  %output30 = extractvalue { double, <2 x double> } %return28, 1
  store <2 x double> %output30, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  %rect31 = load <2 x double>, <2 x double>* %rect
  %return32 = call double @"getcomp@FUI"(<2 x double> %rect31, i64 1)
  %return33 = fcmp oeq double %return32, 0.000000e+00
  %w38 = load double, double* %w
  br i1 %return33, label %true35, label %false36

true35:                                           ; preds = %end
  %output40 = fmul double %w38, %output3
  %tmp41 = load <2 x double>, <2 x double>* %p
  %return42 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp41, double %output40, i64 1)
  %output44 = extractvalue { double, <2 x double> } %return42, 1
  store <2 x double> %output44, <2 x double>* %p
  br label %end37

false36:                                          ; preds = %end
  %output49 = call double @"div@FF"(double %output3, double %return32)
  %return50 = call i64 @"floor@IF"(double %output49)
  %output51 = mul i64 2, %return50
  %output52 = add i64 %output51, 1
  %rect53 = load <2 x double>, <2 x double>* %rect
  %return54 = call double @"getcomp@FUI"(<2 x double> %rect53, i64 1)
  %cast55 = sitofp i64 %output52 to double
  %output56 = fmul double %cast55, %return54
  %output58 = fsub double %output56, %output3
  %output59 = fmul double %w38, %output58
  %tmp60 = load <2 x double>, <2 x double>* %p
  %return61 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp60, double %output59, i64 1)
  %output63 = extractvalue { double, <2 x double> } %return61, 1
  store <2 x double> %output63, <2 x double>* %p
  br label %end37

end37:                                            ; preds = %false36, %true35
  ret void
}

; Function Attrs: nounwind
declare i64 @"floor@IF"(double) #2

; Function Attrs: alwaysinline nounwind
define private void @"V_RADIALBLUR@UUFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %angle) #1 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %m_spin = alloca double
  %m_zoom = alloca double
  %0 = alloca double
  %1 = alloca <2 x double>
  %2 = alloca <2 x double>
  %3 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  store double 0.000000e+00, double* %m_spin, !vex-initializer-store !3
  store double 0.000000e+00, double* %m_zoom, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %angle4 = load double, double* %angle
  %output5 = fmul double %angle4, 0x400921FB4D12D84A
  %output6 = call double @"div@FF"(double %output5, double 2.000000e+00)
  store double %output6, double* %0
  call void @"sincos@FFF"(double* %0, double* %m_spin, double* %m_zoom)
  %w7 = load double, double* %w
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return8 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output9 = fadd double %return, %return8
  %return10 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output11 = fadd double %output9, %return10
  %return12 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output13 = fadd double %output11, %return12
  %output14 = fsub double %output13, 2.000000e+00
  %output15 = fmul double %w7, %output14
  %_p16 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p16, <2 x double>* %1
  %SQRT = call double @"SQRT@FU"(<2 x double>* %1)
  %_p17 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p17, <2 x double>* %2
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %2)
  %m_spin18 = load double, double* %m_spin
  %output20 = fmul double %m_spin18, %output15
  %output21 = fadd double %ATANYX, %output20
  store double %output21, double* %3
  call void @"sincos@FFF"(double* %3, double* %sa, double* %ca)
  %m_zoom23 = load double, double* %m_zoom
  %output25 = fmul double %m_zoom23, %output15
  %output26 = fsub double %output25, 1.000000e+00
  %ca28 = load double, double* %ca
  %output29 = fmul double %SQRT, %ca28
  %output32 = fmul double %output26, %output2
  %output33 = fadd double %output29, %output32
  %tmp = load <2 x double>, <2 x double>* %p
  %return34 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output33, i64 0)
  %output36 = extractvalue { double, <2 x double> } %return34, 1
  store <2 x double> %output36, <2 x double>* %p
  %sa38 = load double, double* %sa
  %output39 = fmul double %SQRT, %sa38
  %output42 = fmul double %output26, %output3
  %output43 = fadd double %output39, %output42
  %return45 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output36, double %output43, i64 1)
  %output47 = extractvalue { double, <2 x double> } %return45, 1
  store <2 x double> %output47, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_PIE@UFV"(<2 x double>* %p, double* %w, <3 x double>* %pie) #1 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %pie1 = load <3 x double>, <3 x double>* %pie
  %output = call { double, double, double } @"assign@FFFV"(<3 x double> %pie1)
  %output2 = extractvalue { double, double, double } %output, 0
  %output3 = extractvalue { double, double, double } %output, 1
  %output4 = extractvalue { double, double, double } %output, 2
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output6 = fmul double %return, %output2
  %cast = fptosi double %output6 to i64
  %cast7 = sitofp i64 %cast to double
  %return10 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output12 = fmul double %return10, %output3
  %output13 = fadd double %cast7, %output12
  %output14 = fmul double 0x401921FB4D12D84A, %output13
  %output16 = call double @"div@FF"(double %output14, double %output2)
  %output17 = fadd double %output4, %output16
  %w18 = load double, double* %w
  %return19 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output20 = fmul double %w18, %return19
  store double %output17, double* %0
  call void @"sincos@FFF"(double* %0, double* %sa, double* %ca)
  %ca23 = load double, double* %ca
  %output24 = fmul double %output20, %ca23
  %tmp = load <2 x double>, <2 x double>* %p
  %return25 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output24, i64 0)
  %output27 = extractvalue { double, <2 x double> } %return25, 1
  store <2 x double> %output27, <2 x double>* %p
  %sa29 = load double, double* %sa
  %output30 = fmul double %output20, %sa29
  %return32 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output27, double %output30, i64 1)
  %output34 = extractvalue { double, <2 x double> } %return32, 1
  store <2 x double> %output34, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_ARCH@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %sinr = alloca double
  %cosr = alloca double
  %0 = alloca double
  store double 0.000000e+00, double* %sinr, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosr, !vex-initializer-store !3
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %w1 = load double, double* %w
  %output = fmul double %return, %w1
  %output2 = fmul double %output, 0x400921FB4D12D84A
  store double %output2, double* %0
  call void @"sincos@FFF"(double* %0, double* %sinr, double* %cosr)
  %w4 = load double, double* %w
  %sinr5 = load double, double* %sinr
  %output6 = fmul double %w4, %sinr5
  %tmp = load <2 x double>, <2 x double>* %p
  %return7 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output6, i64 0)
  %output9 = extractvalue { double, <2 x double> } %return7, 1
  store <2 x double> %output9, <2 x double>* %p
  %w10 = load double, double* %w
  %sinr11 = load double, double* %sinr
  %output13 = fmul double %sinr11, %sinr11
  %output14 = fmul double %w10, %output13
  %cosr15 = load double, double* %cosr
  %output16 = call double @"div@FF"(double %output14, double %cosr15)
  %return18 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output9, double %output16, i64 1)
  %output20 = extractvalue { double, <2 x double> } %return18, 1
  store <2 x double> %output20, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_TANGENT@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %w4 = load double, double* %w
  %return = call double @"sin@FF"(double %output2)
  %return7 = call double @"cos@FF"(double %output3)
  %output8 = call double @"div@FF"(double %return, double %return7)
  %output9 = fmul double %w4, %output8
  %tmp = load <2 x double>, <2 x double>* %p
  %return10 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output9, i64 0)
  %output12 = extractvalue { double, <2 x double> } %return10, 1
  store <2 x double> %output12, <2 x double>* %p
  %w13 = load double, double* %w
  %return15 = call double @"tan@FF"(double %output3)
  %output16 = fmul double %w13, %return15
  %return18 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output12, double %output16, i64 1)
  %output20 = extractvalue { double, <2 x double> } %return18, 1
  store <2 x double> %output20, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SQUARE@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %w1 = load double, double* %w
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output = fsub double %return, 5.000000e-01
  %output2 = fmul double %w1, %output
  %tmp = load <2 x double>, <2 x double>* %p
  %return3 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output2, i64 0)
  %output5 = extractvalue { double, <2 x double> } %return3, 1
  store <2 x double> %output5, <2 x double>* %p
  %w6 = load double, double* %w
  %return7 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output8 = fsub double %return7, 5.000000e-01
  %output9 = fmul double %w6, %output8
  %tmp10 = load <2 x double>, <2 x double>* %p
  %return11 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp10, double %output9, i64 1)
  %output13 = extractvalue { double, <2 x double> } %return11, 1
  store <2 x double> %output13, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_RAYS@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %w4 = load double, double* %w
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output5 = fmul double %w4, %return
  %output6 = fmul double %output5, 0x400921FB4D12D84A
  %w7 = load double, double* %w
  %_p8 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p8, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %output9 = fadd double %SUMSQ, 0x3CB0000000000000
  %output10 = call double @"div@FF"(double %w7, double %output9)
  %w11 = load double, double* %w
  %return13 = call double @"tan@FF"(double %output6)
  %output14 = fmul double %w11, %return13
  %output16 = fmul double %output14, %output10
  %return19 = call double @"cos@FF"(double %output2)
  %output20 = fmul double %output16, %return19
  %tmp = load <2 x double>, <2 x double>* %p
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output20, i64 0)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  %return26 = call double @"sin@FF"(double %output3)
  %output27 = fmul double %output16, %return26
  %return29 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output23, double %output27, i64 1)
  %output31 = extractvalue { double, <2 x double> } %return29, 1
  store <2 x double> %output31, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_BLADE@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %sinr = alloca double
  %cosr = alloca double
  %0 = alloca <2 x double>
  %1 = alloca double
  store double 0.000000e+00, double* %sinr, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosr, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %w4 = load double, double* %w
  %output5 = fmul double %return, %w4
  %_p6 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p6, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %output7 = fmul double %output5, %SQRT
  store double %output7, double* %1
  call void @"sincos@FFF"(double* %1, double* %sinr, double* %cosr)
  %w9 = load double, double* %w
  %output11 = fmul double %w9, %output2
  %cosr12 = load double, double* %cosr
  %sinr13 = load double, double* %sinr
  %output14 = fadd double %cosr12, %sinr13
  %output15 = fmul double %output11, %output14
  %tmp = load <2 x double>, <2 x double>* %p
  %return16 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output15, i64 0)
  %output18 = extractvalue { double, <2 x double> } %return16, 1
  store <2 x double> %output18, <2 x double>* %p
  %w19 = load double, double* %w
  %output21 = fmul double %w19, %output2
  %cosr22 = load double, double* %cosr
  %sinr23 = load double, double* %sinr
  %output24 = fsub double %cosr22, %sinr23
  %output25 = fmul double %output21, %output24
  %return27 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output18, double %output25, i64 1)
  %output29 = extractvalue { double, <2 x double> } %return27, 1
  store <2 x double> %output29, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SECANT2@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  %return = call double @"getcomp@FUI"(<2 x double> %_p1, i64 0)
  %w2 = load double, double* %w
  store <2 x double> %_p1, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %output = fmul double %w2, %SQRT
  %return5 = call double @"cos@FF"(double %output)
  %output9 = call double @"div@FF"(double 1.000000e+00, double %return5)
  %w10 = load double, double* %w
  %output12 = fmul double %w10, %return
  %tmp = load <2 x double>, <2 x double>* %p
  %return13 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output12, i64 0)
  %output15 = extractvalue { double, <2 x double> } %return13, 1
  store <2 x double> %output15, <2 x double>* %p
  %return17 = fcmp olt double %return5, 0.000000e+00
  %w19 = load double, double* %w
  %output21 = fadd double %output9, 1.000000e+00
  %output22 = fmul double %w19, %output21
  %output25 = fsub double %output9, 1.000000e+00
  %output26 = fmul double %w19, %output25
  %phi = select i1 %return17, double %output22, double %output26
  %return28 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output15, double %phi, i64 1)
  %output30 = extractvalue { double, <2 x double> } %return28, 1
  store <2 x double> %output30, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_TWINTRIAN@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %sinr = alloca double
  %cosr = alloca double
  %0 = alloca <2 x double>
  %1 = alloca double
  store double 0.000000e+00, double* %sinr, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosr, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %w4 = load double, double* %w
  %output5 = fmul double %return, %w4
  %_p6 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p6, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %output7 = fmul double %output5, %SQRT
  store double %output7, double* %1
  call void @"sincos@FFF"(double* %1, double* %sinr, double* %cosr)
  %sinr9 = load double, double* %sinr
  %output11 = fmul double %sinr9, %sinr9
  %return12 = call double @"log10@FF"(double %output11)
  %cosr13 = load double, double* %cosr
  %output14 = fadd double %return12, %cosr13
  %return16 = call i64 @"isfinite@IF"(double %output14)
  %return17 = call i64 @"not@II"(i64 %return16)
  %return19 = call i64 @"isnan@IF"(double %output14)
  %return20 = call i64 @"or@III"(i64 %return17, i64 %return19)
  %2 = icmp ne i64 %return20, 0
  br i1 %2, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %return21 = call double @"neg@FF"(double 3.000000e+01)
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %diff.0 = phi double [ %return21, %true ], [ %output14, %__llvm_entry ]
  %w22 = load double, double* %w
  %output24 = fmul double %w22, %output2
  %output26 = fmul double %output24, %diff.0
  %tmp = load <2 x double>, <2 x double>* %p
  %return27 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output26, i64 0)
  %output29 = extractvalue { double, <2 x double> } %return27, 1
  store <2 x double> %output29, <2 x double>* %p
  %w30 = load double, double* %w
  %output32 = fmul double %w30, %output2
  %sinr34 = load double, double* %sinr
  %output35 = fmul double %sinr34, 0x400921FB4D12D84A
  %output36 = fsub double %diff.0, %output35
  %output37 = fmul double %output32, %output36
  %return39 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output29, double %output37, i64 1)
  %output41 = extractvalue { double, <2 x double> } %return39, 1
  store <2 x double> %output41, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind readnone
declare double @"log10@FF"(double) #0

; Function Attrs: alwaysinline nounwind
define private void @"V_CROSS@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %output6 = fmul double %output2, %output2
  %output9 = fmul double %output3, %output3
  %output10 = fsub double %output6, %output9
  %w11 = load double, double* %w
  %output14 = fmul double %output10, %output10
  %output15 = fadd double %output14, 0x3CB0000000000000
  %output16 = call double @"div@FF"(double 1.000000e+00, double %output15)
  %return = call double @"sqrt@FF"(double %output16)
  %output17 = fmul double %w11, %return
  %output20 = fmul double %output2, %output17
  %tmp = load <2 x double>, <2 x double>* %p
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output20, i64 0)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  %output26 = fmul double %output3, %output17
  %return28 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output23, double %output26, i64 1)
  %output30 = extractvalue { double, <2 x double> } %return28, 1
  store <2 x double> %output30, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_DISC2@UUFUV"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %disc2, <3 x double>* %disc2_pc) #1 {
__llvm_entry:
  %sinr = alloca double
  %cosr = alloca double
  %0 = alloca double
  %1 = alloca <2 x double>
  store double 0.000000e+00, double* %sinr, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosr, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %disc24 = load <2 x double>, <2 x double>* %disc2
  %output5 = call { double, double } @"assign@FFU"(<2 x double> %disc24)
  %disc2_pc8 = load <3 x double>, <3 x double>* %disc2_pc
  %output9 = call { double, double, double } @"assign@FFFV"(<3 x double> %disc2_pc8)
  %output10 = extractvalue { double, double, double } %output9, 0
  %output11 = extractvalue { double, double, double } %output9, 1
  %output12 = extractvalue { double, double, double } %output9, 2
  %output16 = fadd double %output2, %output3
  %output17 = fmul double %output10, %output16
  store double %output17, double* %0
  call void @"sincos@FFF"(double* %0, double* %sinr, double* %cosr)
  %w19 = load double, double* %w
  %_p20 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p20, <2 x double>* %1
  %ATAN = call double @"ATAN@FU"(<2 x double>* %1)
  %output21 = fmul double %w19, %ATAN
  %output22 = call double @"div@FF"(double %output21, double 0x400921FB4D12D84A)
  %sinr23 = load double, double* %sinr
  %output25 = fadd double %sinr23, %output12
  %output27 = fmul double %output25, %output22
  %tmp = load <2 x double>, <2 x double>* %p
  %return = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output27, i64 0)
  %output29 = extractvalue { double, <2 x double> } %return, 1
  store <2 x double> %output29, <2 x double>* %p
  %cosr30 = load double, double* %cosr
  %output32 = fadd double %cosr30, %output11
  %output34 = fmul double %output32, %output22
  %return36 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output29, double %output34, i64 1)
  %output38 = extractvalue { double, <2 x double> } %return36, 1
  store <2 x double> %output38, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_DISC2_FF@UUFU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %disc2) #1 {
__llvm_entry:
  %precalc = alloca <3 x double>
  %0 = alloca double
  %1 = alloca double
  %2 = alloca <2 x double>
  %3 = alloca double
  %4 = alloca <2 x double>
  %5 = alloca <3 x double>
  store <3 x double> zeroinitializer, <3 x double>* %precalc, !vex-initializer-store !3
  %disc21 = load <2 x double>, <2 x double>* %disc2
  %output = call { double, double } @"assign@FFU"(<2 x double> %disc21)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  store double %output2, double* %0
  store double %output3, double* %1
  call void @"precalc_V_DISC2@VFF"(<3 x double>* %precalc, double* %0, double* %1)
  %_p6 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p6, <2 x double>* %2
  %w7 = load double, double* %w
  store double %w7, double* %3
  %disc28 = load <2 x double>, <2 x double>* %disc2
  store <2 x double> %disc28, <2 x double>* %4
  %precalc9 = load <3 x double>, <3 x double>* %precalc
  store <3 x double> %precalc9, <3 x double>* %5
  call void @"V_DISC2@UUFUV"(<2 x double>* %p, <2 x double>* %2, double* %3, <2 x double>* %4, <3 x double>* %5)
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SUPERSHAPE@UUFVV"(<2 x double>* %p, <2 x double>* %_p, double* %w, <3 x double>* %ss, <3 x double>* %ss_n) #1 {
__llvm_entry:
  %st = alloca double
  %ct = alloca double
  %0 = alloca <2 x double>
  %1 = alloca double
  %2 = alloca <2 x double>
  store double 0.000000e+00, double* %st, !vex-initializer-store !3
  store double 0.000000e+00, double* %ct, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %ss4 = load <3 x double>, <3 x double>* %ss
  %output5 = call { double, double, double } @"assign@FFFV"(<3 x double> %ss4)
  %output6 = extractvalue { double, double, double } %output5, 0
  %output7 = extractvalue { double, double, double } %output5, 1
  %output8 = extractvalue { double, double, double } %output5, 2
  %ss_n9 = load <3 x double>, <3 x double>* %ss_n
  %output10 = call { double, double, double } @"assign@FFFV"(<3 x double> %ss_n9)
  %output11 = extractvalue { double, double, double } %output10, 0
  %output12 = extractvalue { double, double, double } %output10, 1
  %output13 = extractvalue { double, double, double } %output10, 2
  %output15 = call double @"div@FF"(double %output6, double 4.000000e+00)
  %return = call double @"neg@FF"(double 1.000000e+00)
  %output17 = call double @"div@FF"(double %return, double %output11)
  %_p19 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p19, <2 x double>* %0
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %0)
  %output20 = fmul double %output15, %ATANYX
  %output21 = fadd double %output20, 7.853981e-01
  store double %output21, double* %1
  call void @"sincos@FFF"(double* %1, double* %st, double* %ct)
  %ct23 = load double, double* %ct
  %return24 = call double @"abs@FF"(double %ct23)
  %return27 = call double @"pow@FFF"(double %return24, double %output12)
  %st28 = load double, double* %st
  %return29 = call double @"abs@FF"(double %st28)
  %return32 = call double @"pow@FFF"(double %return29, double %output13)
  %_p33 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p33, <2 x double>* %2
  %SQRT34 = call double @"SQRT@FU"(<2 x double>* %2)
  %w35 = load double, double* %w
  %return37 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output38 = fmul double %output7, %return37
  %output40 = fsub double 1.000000e+00, %output7
  %output42 = fmul double %output40, %SQRT34
  %output43 = fadd double %output38, %output42
  %output45 = fsub double %output43, %output8
  %output46 = fmul double %w35, %output45
  %output49 = fadd double %return27, %return32
  %return51 = call double @"pow@FFF"(double %output49, double %output17)
  %output52 = fmul double %output46, %return51
  %output54 = call double @"div@FF"(double %output52, double %SQRT34)
  %output57 = fmul double %output54, %output2
  %tmp = load <2 x double>, <2 x double>* %p
  %return58 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output57, i64 0)
  %output60 = extractvalue { double, <2 x double> } %return58, 1
  store <2 x double> %output60, <2 x double>* %p
  %output63 = fmul double %output54, %output3
  %return65 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output60, double %output63, i64 1)
  %output67 = extractvalue { double, <2 x double> } %return65, 1
  store <2 x double> %output67, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_FLOWER@UUFU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %flower) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %flower4 = load <2 x double>, <2 x double>* %flower
  %output5 = call { double, double } @"assign@FFU"(<2 x double> %flower4)
  %output6 = extractvalue { double, double } %output5, 0
  %output7 = extractvalue { double, double } %output5, 1
  %_p8 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p8, <2 x double>* %0
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %0)
  %w9 = load double, double* %w
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output11 = fsub double %return, %output7
  %output12 = fmul double %w9, %output11
  %output15 = fmul double %output6, %ATANYX
  %return16 = call double @"cos@FF"(double %output15)
  %output17 = fmul double %output12, %return16
  %_p18 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p18, <2 x double>* %1
  %SQRT = call double @"SQRT@FU"(<2 x double>* %1)
  %output19 = call double @"div@FF"(double %output17, double %SQRT)
  %output22 = fmul double %output19, %output2
  %tmp = load <2 x double>, <2 x double>* %p
  %return23 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output22, i64 0)
  %output25 = extractvalue { double, <2 x double> } %return23, 1
  store <2 x double> %output25, <2 x double>* %p
  %output28 = fmul double %output19, %output3
  %return30 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output25, double %output28, i64 1)
  %output32 = extractvalue { double, <2 x double> } %return30, 1
  store <2 x double> %output32, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_CONIC@UUFU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %conic) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %conic4 = load <2 x double>, <2 x double>* %conic
  %output5 = call { double, double } @"assign@FFU"(<2 x double> %conic4)
  %output6 = extractvalue { double, double } %output5, 0
  %output7 = extractvalue { double, double } %output5, 1
  %_p8 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p8, <2 x double>* %0
  %SQRT9 = call double @"SQRT@FU"(<2 x double>* %0)
  %output12 = call double @"div@FF"(double %output2, double %SQRT9)
  %w13 = load double, double* %w
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output15 = fsub double %return, %output7
  %output16 = fmul double %w13, %output15
  %output18 = fmul double %output16, %output6
  %output21 = fmul double %output6, %output12
  %output22 = fadd double 1.000000e+00, %output21
  %output23 = call double @"div@FF"(double %output18, double %output22)
  %output25 = call double @"div@FF"(double %output23, double %SQRT9)
  %output28 = fmul double %output25, %output2
  %tmp = load <2 x double>, <2 x double>* %p
  %return29 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output28, i64 0)
  %output31 = extractvalue { double, <2 x double> } %return29, 1
  store <2 x double> %output31, <2 x double>* %p
  %output34 = fmul double %output25, %output3
  %return36 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output31, double %output34, i64 1)
  %output38 = extractvalue { double, <2 x double> } %return36, 1
  store <2 x double> %output38, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_PARABOLA@UUFU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %parabola) #1 {
__llvm_entry:
  %sr = alloca double
  %cr = alloca double
  %0 = alloca <2 x double>
  %1 = alloca double
  store double 0.000000e+00, double* %sr, !vex-initializer-store !3
  store double 0.000000e+00, double* %cr, !vex-initializer-store !3
  %parabola1 = load <2 x double>, <2 x double>* %parabola
  %output = call { double, double } @"assign@FFU"(<2 x double> %parabola1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %_p4 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p4, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  store double %SQRT, double* %1
  call void @"sincos@FFF"(double* %1, double* %sr, double* %cr)
  %w7 = load double, double* %w
  %output8 = fmul double %output2, %w7
  %sr9 = load double, double* %sr
  %output10 = fmul double %output8, %sr9
  %output12 = fmul double %output10, %sr9
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output13 = fmul double %output12, %return
  %tmp = load <2 x double>, <2 x double>* %p
  %return14 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output13, i64 0)
  %output16 = extractvalue { double, <2 x double> } %return14, 1
  store <2 x double> %output16, <2 x double>* %p
  %w18 = load double, double* %w
  %output19 = fmul double %output3, %w18
  %cr20 = load double, double* %cr
  %output21 = fmul double %output19, %cr20
  %return22 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output23 = fmul double %output21, %return22
  %tmp24 = load <2 x double>, <2 x double>* %p
  %return25 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp24, double %output23, i64 1)
  %output27 = extractvalue { double, <2 x double> } %return25, 1
  store <2 x double> %output27, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_BENT2@UUFU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %bent2) #1 {
__llvm_entry:
  %bent21 = load <2 x double>, <2 x double>* %bent2
  %return = call double @"getcomp@FUI"(<2 x double> %bent21, i64 0)
  %return3 = call double @"getcomp@FUI"(<2 x double> %bent21, i64 1)
  %_p4 = load <2 x double>, <2 x double>* %_p
  %return5 = call double @"getcomp@FUI"(<2 x double> %_p4, i64 0)
  %return7 = call double @"getcomp@FUI"(<2 x double> %_p4, i64 1)
  %return9 = fcmp olt double %return5, 0.000000e+00
  br i1 %return9, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %output = fmul double %return5, %return
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %nx.0 = phi double [ %output, %true ], [ %return5, %__llvm_entry ]
  %return14 = fcmp olt double %return7, 0.000000e+00
  br i1 %return14, label %true16, label %end17

true16:                                           ; preds = %end
  %output20 = fmul double %return7, %return3
  br label %end17

end17:                                            ; preds = %true16, %end
  %ny.0 = phi double [ %output20, %true16 ], [ %return7, %end ]
  %w21 = load double, double* %w
  %output23 = fmul double %w21, %nx.0
  %tmp = load <2 x double>, <2 x double>* %p
  %return24 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output23, i64 0)
  %output26 = extractvalue { double, <2 x double> } %return24, 1
  store <2 x double> %output26, <2 x double>* %p
  %w27 = load double, double* %w
  %output29 = fmul double %w27, %ny.0
  %return31 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output26, double %output29, i64 1)
  %output33 = extractvalue { double, <2 x double> } %return31, 1
  store <2 x double> %output33, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_BIPOLAR@UUFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %shift) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca double
  %2 = alloca double
  %3 = alloca double
  %4 = alloca double
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %_p4 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p4, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %output6 = fadd double %SUMSQ, 1.000000e+00
  %output8 = fmul double 2.000000e+00, %output2
  %return = call double @"neg@FF"(double 0x3FF921FB4D12D84A)
  %shift9 = load double, double* %shift
  %output10 = fmul double %return, %shift9
  %output12 = fmul double 2.000000e+00, %output3
  %output14 = fsub double %SUMSQ, 1.000000e+00
  %return15 = call double @"atan2@FFF"(double %output12, double %output14)
  %output16 = fmul double 5.000000e-01, %return15
  %output18 = fadd double %output16, %output10
  %return20 = fcmp ogt double %output18, 0x3FF921FB4D12D84A
  br i1 %return20, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output24 = fadd double %output18, 0x3FF921FB4D12D84A
  store double %output24, double* %1
  store double 0x400921FB4D12D84A, double* %2
  %fmod = call double @"fmod@FFF"(double* %1, double* %2)
  %output25 = fadd double %return, %fmod
  br label %end

false:                                            ; preds = %__llvm_entry
  %return28 = fcmp olt double %output18, %return
  br i1 %return28, label %true30, label %end

end:                                              ; preds = %false, %true30, %true
  %y.0 = phi double [ %output25, %true ], [ %output35, %true30 ], [ %output18, %false ]
  %w36 = load double, double* %w
  %output37 = fmul double %w36, 2.500000e-01
  %output38 = fmul double %output37, 0x3FE45F306DC9C883
  %output41 = fadd double %output6, %output8
  %output44 = fsub double %output6, %output8
  %output45 = call double @"div@FF"(double %output41, double %output44)
  %return46 = call double @"log@FF"(double %output45)
  %output47 = fmul double %output38, %return46
  %tmp = load <2 x double>, <2 x double>* %p
  %return48 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output47, i64 0)
  %output50 = extractvalue { double, <2 x double> } %return48, 1
  store <2 x double> %output50, <2 x double>* %p
  %w51 = load double, double* %w
  %output52 = fmul double %w51, 0x3FE45F306DC9C883
  %output54 = fmul double %output52, %y.0
  %return56 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output50, double %output54, i64 1)
  %output58 = extractvalue { double, <2 x double> } %return56, 1
  store <2 x double> %output58, <2 x double>* %p
  ret void

true30:                                           ; preds = %false
  %output33 = fsub double 0x3FF921FB4D12D84A, %output18
  store double %output33, double* %3
  store double 0x400921FB4D12D84A, double* %4
  %fmod34 = call double @"fmod@FFF"(double* %3, double* %4)
  %output35 = fsub double 0x3FF921FB4D12D84A, %fmod34
  br label %end
}

; Function Attrs: nounwind readnone
declare double @"log@FF"(double) #0

; Function Attrs: alwaysinline nounwind
define private void @"V_BOARDERS@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %return = call double @"rint@FF"(double %output2)
  %return6 = call double @"rint@FF"(double %output3)
  %output9 = fsub double %output2, %return
  %output12 = fsub double %output3, %return6
  %return13 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return14 = fcmp oge double %return13, 7.500000e-01
  br i1 %return14, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output17 = fmul double %output9, 5.000000e-01
  %output19 = fadd double %output17, %return
  %tmp = load <2 x double>, <2 x double>* %p
  %return20 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output19, i64 0)
  %output22 = extractvalue { double, <2 x double> } %return20, 1
  store <2 x double> %output22, <2 x double>* %p
  %output24 = fmul double %output12, 5.000000e-01
  %output26 = fadd double %output24, %return6
  %return28 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output22, double %output26, i64 1)
  %output30 = extractvalue { double, <2 x double> } %return28, 1
  store <2 x double> %output30, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %return32 = call double @"abs@FF"(double %output9)
  %return34 = call double @"abs@FF"(double %output12)
  %return35 = fcmp oge double %return32, %return34
  br i1 %return35, label %true37, label %false38

end:                                              ; preds = %true101, %false102, %true43, %false44, %true
  ret void

true37:                                           ; preds = %false
  %return41 = fcmp oge double %output9, 0.000000e+00
  %w46 = load double, double* %w
  %output48 = fmul double %output9, 5.000000e-01
  %output50 = fadd double %output48, %return
  br i1 %return41, label %true43, label %false44

false38:                                          ; preds = %false
  %return99 = fcmp oge double %output12, 0.000000e+00
  %w104 = load double, double* %w
  %output106 = fmul double %output12, 5.000000e-01
  %output108 = fadd double %output106, %return6
  br i1 %return99, label %true101, label %false102

true43:                                           ; preds = %true37
  %output51 = fadd double %output50, 2.500000e-01
  %output52 = fmul double %w46, %output51
  %tmp53 = load <2 x double>, <2 x double>* %p
  %return54 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp53, double %output52, i64 0)
  %output56 = extractvalue { double, <2 x double> } %return54, 1
  store <2 x double> %output56, <2 x double>* %p
  %w57 = load double, double* %w
  %output59 = fmul double %output12, 5.000000e-01
  %output61 = fadd double %output59, %return6
  %output63 = fmul double 2.500000e-01, %output12
  %output65 = call double @"div@FF"(double %output63, double %output9)
  %output66 = fadd double %output61, %output65
  %output67 = fmul double %w57, %output66
  %return69 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output56, double %output67, i64 1)
  %output71 = extractvalue { double, <2 x double> } %return69, 1
  store <2 x double> %output71, <2 x double>* %p
  br label %end

false44:                                          ; preds = %true37
  %output77 = fsub double %output50, 2.500000e-01
  %output78 = fmul double %w46, %output77
  %tmp79 = load <2 x double>, <2 x double>* %p
  %return80 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp79, double %output78, i64 0)
  %output82 = extractvalue { double, <2 x double> } %return80, 1
  store <2 x double> %output82, <2 x double>* %p
  %w83 = load double, double* %w
  %output85 = fmul double %output12, 5.000000e-01
  %output87 = fadd double %output85, %return6
  %output89 = fmul double 2.500000e-01, %output12
  %output91 = call double @"div@FF"(double %output89, double %output9)
  %output92 = fsub double %output87, %output91
  %output93 = fmul double %w83, %output92
  %return95 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output82, double %output93, i64 1)
  %output97 = extractvalue { double, <2 x double> } %return95, 1
  store <2 x double> %output97, <2 x double>* %p
  br label %end

true101:                                          ; preds = %false38
  %output109 = fadd double %output108, 2.500000e-01
  %output110 = fmul double %w104, %output109
  %tmp111 = load <2 x double>, <2 x double>* %p
  %return112 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp111, double %output110, i64 1)
  %output114 = extractvalue { double, <2 x double> } %return112, 1
  store <2 x double> %output114, <2 x double>* %p
  %w115 = load double, double* %w
  %output117 = fmul double %output9, 5.000000e-01
  %output119 = fadd double %output117, %return
  %output122 = call double @"div@FF"(double %output9, double %output12)
  %output123 = fmul double %output122, 2.500000e-01
  %output124 = fadd double %output119, %output123
  %output125 = fmul double %w115, %output124
  %return127 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output114, double %output125, i64 0)
  %output129 = extractvalue { double, <2 x double> } %return127, 1
  store <2 x double> %output129, <2 x double>* %p
  br label %end

false102:                                         ; preds = %false38
  %output135 = fsub double %output108, 2.500000e-01
  %output136 = fmul double %w104, %output135
  %tmp137 = load <2 x double>, <2 x double>* %p
  %return138 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp137, double %output136, i64 1)
  %output140 = extractvalue { double, <2 x double> } %return138, 1
  store <2 x double> %output140, <2 x double>* %p
  %w141 = load double, double* %w
  %output143 = fmul double %output9, 5.000000e-01
  %output145 = fadd double %output143, %return
  %output148 = call double @"div@FF"(double %output9, double %output12)
  %output149 = fmul double %output148, 2.500000e-01
  %output150 = fsub double %output145, %output149
  %output151 = fmul double %w141, %output150
  %return153 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output140, double %output151, i64 0)
  %output155 = extractvalue { double, <2 x double> } %return153, 1
  store <2 x double> %output155, <2 x double>* %p
  br label %end
}

; Function Attrs: nounwind readnone
declare double @"rint@FF"(double) #0

; Function Attrs: alwaysinline nounwind
define private void @"V_BUTTERFLY@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %w4 = load double, double* %w
  %output5 = fmul double %w4, 0x3FF4D8D7A58FA311
  %output7 = fmul double %output3, 2.000000e+00
  %output11 = fmul double %output3, %output2
  %return = call double @"abs@FF"(double %output11)
  %output14 = fmul double %output2, %output2
  %output15 = fadd double 0x3CB0000000000000, %output14
  %output18 = fmul double %output7, %output7
  %output19 = fadd double %output15, %output18
  %output20 = call double @"div@FF"(double %return, double %output19)
  %return21 = call double @"sqrt@FF"(double %output20)
  %output22 = fmul double %output5, %return21
  %output25 = fmul double %output22, %output2
  %tmp = load <2 x double>, <2 x double>* %p
  %return26 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output25, i64 0)
  %output28 = extractvalue { double, <2 x double> } %return26, 1
  store <2 x double> %output28, <2 x double>* %p
  %output31 = fmul double %output22, %output7
  %return33 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output28, double %output31, i64 1)
  %output35 = extractvalue { double, <2 x double> } %return33, 1
  store <2 x double> %output35, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_CELL@UUFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %size) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %size4 = load double, double* %size
  %output5 = call double @"div@FF"(double 1.000000e+00, double %size4)
  %output8 = fmul double %output2, %output5
  %return = call double @"floor@FF"(double %output8)
  %output11 = fmul double %output3, %output5
  %return12 = call double @"floor@FF"(double %output11)
  %output16 = fmul double %return, %size4
  %output17 = fsub double %output2, %output16
  %output21 = fmul double %return12, %size4
  %output22 = fsub double %output3, %output21
  %return24 = fcmp oge double %return12, 0.000000e+00
  %return27 = fcmp oge double %return, 0.000000e+00
  br i1 %return24, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output33 = fmul double %return12, 2.000000e+00
  br i1 %return27, label %true29, label %false30

false:                                            ; preds = %__llvm_entry
  %output49 = fmul double 2.000000e+00, %return12
  %output50 = fadd double %output49, 1.000000e+00
  %return51 = call double @"neg@FF"(double %output50)
  br i1 %return27, label %true45, label %false46

end:                                              ; preds = %true45, %false46, %true29, %false30
  %y.0 = phi double [ %output33, %true29 ], [ %output33, %false30 ], [ %return51, %true45 ], [ %return51, %false46 ]
  %x.0 = phi double [ %output35, %true29 ], [ %return41, %false30 ], [ %output53, %true45 ], [ %return61, %false46 ]
  %w62 = load double, double* %w
  %size65 = load double, double* %size
  %output66 = fmul double %x.0, %size65
  %output67 = fadd double %output17, %output66
  %output68 = fmul double %w62, %output67
  %tmp = load <2 x double>, <2 x double>* %p
  %return69 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output68, i64 0)
  %output71 = extractvalue { double, <2 x double> } %return69, 1
  store <2 x double> %output71, <2 x double>* %p
  %w72 = load double, double* %w
  %size75 = load double, double* %size
  %output76 = fmul double %y.0, %size75
  %output77 = fadd double %output22, %output76
  %output78 = fmul double %w72, %output77
  %return79 = call double @"neg@FF"(double %output78)
  %return81 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output71, double %return79, i64 1)
  %output83 = extractvalue { double, <2 x double> } %return81, 1
  store <2 x double> %output83, <2 x double>* %p
  ret void

true29:                                           ; preds = %true
  %output35 = fmul double %return, 2.000000e+00
  br label %end

false30:                                          ; preds = %true
  %output39 = fmul double 2.000000e+00, %return
  %output40 = fadd double %output39, 1.000000e+00
  %return41 = call double @"neg@FF"(double %output40)
  br label %end

true45:                                           ; preds = %false
  %output53 = fmul double %return, 2.000000e+00
  br label %end

false46:                                          ; preds = %false
  %output59 = fmul double 2.000000e+00, %return
  %output60 = fadd double %output59, 1.000000e+00
  %return61 = call double @"neg@FF"(double %output60)
  br label %end
}

; Function Attrs: alwaysinline nounwind
define private void @"V_CPOW@UUFV"(<2 x double>* %p, <2 x double>* %_p, double* %w, <3 x double>* %cpow) #1 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %cpow1 = load <3 x double>, <3 x double>* %cpow
  %output = call { double, double, double } @"assign@FFFV"(<3 x double> %cpow1)
  %output2 = extractvalue { double, double, double } %output, 0
  %output3 = extractvalue { double, double, double } %output, 1
  %output4 = extractvalue { double, double, double } %output, 2
  %_p5 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p5, <2 x double>* %0
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %0)
  %_p6 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p6, <2 x double>* %1
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %1)
  %return = call double @"log@FF"(double %SUMSQ)
  %output7 = fmul double 5.000000e-01, %return
  %output9 = call double @"div@FF"(double 0x401921FB4D12D84A, double %output2)
  %output12 = call double @"div@FF"(double %output3, double %output2)
  %output15 = call double @"div@FF"(double %output4, double %output2)
  %output18 = fmul double %output12, %ATANYX
  %output21 = fmul double %output15, %output7
  %output22 = fadd double %output18, %output21
  %return25 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output26 = fmul double %output2, %return25
  %return27 = call double @"floor@FF"(double %output26)
  %output28 = fmul double %output9, %return27
  %output29 = fadd double %output22, %output28
  %w30 = load double, double* %w
  %output33 = fmul double %output12, %output7
  %output36 = fmul double %output15, %ATANYX
  %output37 = fsub double %output33, %output36
  %return38 = call double @"exp@FF"(double %output37)
  %output39 = fmul double %w30, %return38
  store double %output29, double* %2
  call void @"sincos@FFF"(double* %2, double* %sa, double* %ca)
  %ca42 = load double, double* %ca
  %output43 = fmul double %output39, %ca42
  %tmp = load <2 x double>, <2 x double>* %p
  %return44 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output43, i64 0)
  %output46 = extractvalue { double, <2 x double> } %return44, 1
  store <2 x double> %output46, <2 x double>* %p
  %sa48 = load double, double* %sa
  %output49 = fmul double %output39, %sa48
  %return51 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output46, double %output49, i64 1)
  %output53 = extractvalue { double, <2 x double> } %return51, 1
  store <2 x double> %output53, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_EDISC@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %snv = alloca double
  %csv = alloca double
  %0 = alloca <2 x double>
  %1 = alloca double
  %2 = alloca double
  store double 0.000000e+00, double* %snv, !vex-initializer-store !3
  store double 0.000000e+00, double* %csv, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %_p4 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p4, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %output5 = fadd double %SUMSQ, 1.000000e+00
  %output7 = fmul double 2.000000e+00, %output2
  %output10 = fadd double %output5, %output7
  %return = call double @"sqrt@FF"(double %output10)
  %output13 = fsub double %output5, %output7
  %return14 = call double @"sqrt@FF"(double %output13)
  %output17 = fadd double %return, %return14
  %output18 = fmul double %output17, 5.000000e-01
  store double %output18, double* %1
  %Zeps = call double @"Zeps@FF"(double* %1)
  %output21 = fsub double %Zeps, 1.000000e+00
  %return22 = call double @"sqrt@FF"(double %output21)
  %output23 = fadd double %Zeps, %return22
  %return24 = call double @"log@FF"(double %output23)
  %output27 = call double @"div@FF"(double %output2, double %Zeps)
  %return28 = call double @"acos@FF"(double %output27)
  %return29 = call double @"neg@FF"(double %return28)
  %w30 = load double, double* %w
  %output31 = call double @"div@FF"(double %w30, double 0x402724046ECF9681)
  store double %return24, double* %2
  call void @"sincos@FFF"(double* %2, double* %snv, double* %csv)
  %return34 = call double @"sinh@FF"(double %return29)
  %return36 = call double @"cosh@FF"(double %return29)
  %return38 = fcmp ogt double %output3, 0.000000e+00
  br i1 %return38, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %snv40 = load double, double* %snv
  %return41 = call double @"neg@FF"(double %snv40)
  store double %return41, double* %snv
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %output44 = fmul double %output31, %return36
  %csv45 = load double, double* %csv
  %output46 = fmul double %output44, %csv45
  %tmp47 = load <2 x double>, <2 x double>* %p
  %return48 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp47, double %output46, i64 0)
  %output50 = extractvalue { double, <2 x double> } %return48, 1
  store <2 x double> %output50, <2 x double>* %p
  %output53 = fmul double %output31, %return34
  %snv54 = load double, double* %snv
  %output55 = fmul double %output53, %snv54
  %return57 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output50, double %output55, i64 1)
  %output59 = extractvalue { double, <2 x double> } %return57, 1
  store <2 x double> %output59, <2 x double>* %p
  ret void
}

; Function Attrs: nounwind readnone
declare double @"acos@FF"(double) #0

; Function Attrs: alwaysinline nounwind
define private void @"V_ELLIPTIC@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %_p4 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p4, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %output5 = fadd double %SUMSQ, 1.000000e+00
  %output7 = fmul double 2.000000e+00, %output2
  %output10 = fadd double %output5, %output7
  %return = call double @"sqrt@FF"(double %output10)
  %output13 = fsub double %output5, %output7
  %return14 = call double @"sqrt@FF"(double %output13)
  %output15 = fadd double %return, %return14
  %output16 = fmul double 5.000000e-01, %output15
  %output19 = call double @"div@FF"(double %output2, double %output16)
  %output22 = fmul double %output19, %output19
  %output23 = fsub double 1.000000e+00, %output22
  %output25 = fsub double %output16, 1.000000e+00
  %w26 = load double, double* %w
  %output27 = call double @"div@FF"(double %w26, double 0x3FF921FB4D12D84A)
  %return29 = fcmp olt double %output23, 0.000000e+00
  br i1 %return29, label %end, label %false

false:                                            ; preds = %__llvm_entry
  %return32 = call double @"sqrt@FF"(double %output23)
  br label %end

end:                                              ; preds = %__llvm_entry, %false
  %phi = phi double [ %return32, %false ], [ 0.000000e+00, %__llvm_entry ]
  %return34 = fcmp olt double %output25, 0.000000e+00
  br i1 %return34, label %end38, label %false37

false37:                                          ; preds = %end
  %return40 = call double @"sqrt@FF"(double %output25)
  br label %end38

end38:                                            ; preds = %end, %false37
  %phi41 = phi double [ %return40, %false37 ], [ 0.000000e+00, %end ]
  %return45 = call double @"atan2@FFF"(double %output19, double %phi)
  %output46 = fmul double %output27, %return45
  %tmp47 = load <2 x double>, <2 x double>* %p
  %return48 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp47, double %output46, i64 0)
  %output50 = extractvalue { double, <2 x double> } %return48, 1
  store <2 x double> %output50, <2 x double>* %p
  %return52 = fcmp ogt double %output3, 0.000000e+00
  %output60 = fadd double %output16, %phi41
  %return61 = call double @"log@FF"(double %output60)
  br i1 %return52, label %true54, label %false55

true54:                                           ; preds = %end38
  %output62 = fmul double %output27, %return61
  br label %end56

false55:                                          ; preds = %end38
  %return68 = call double @"neg@FF"(double %return61)
  %output69 = fmul double %output27, %return68
  br label %end56

end56:                                            ; preds = %false55, %true54
  %phi70 = phi double [ %output62, %true54 ], [ %output69, %false55 ]
  %tmp71 = load <2 x double>, <2 x double>* %p
  %return72 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp71, double %phi70, i64 1)
  %output74 = extractvalue { double, <2 x double> } %return72, 1
  store <2 x double> %output74, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_NOISE@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %sinr = alloca double
  %cosr = alloca double
  %0 = alloca double
  store double 0.000000e+00, double* %sinr, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosr, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output4 = fmul double %return, 2.000000e+00
  %output5 = fmul double %output4, 0x400921FB4D12D84A
  store double %output5, double* %0
  call void @"sincos@FFF"(double* %0, double* %sinr, double* %cosr)
  %w7 = load double, double* %w
  %return8 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output9 = fmul double %w7, %return8
  %output12 = fmul double %output2, %output9
  %cosr13 = load double, double* %cosr
  %output14 = fmul double %output12, %cosr13
  %tmp = load <2 x double>, <2 x double>* %p
  %return15 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output14, i64 0)
  %output17 = extractvalue { double, <2 x double> } %return15, 1
  store <2 x double> %output17, <2 x double>* %p
  %output20 = fmul double %output3, %output9
  %sinr21 = load double, double* %sinr
  %output22 = fmul double %output20, %sinr21
  %return24 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output17, double %output22, i64 1)
  %output26 = extractvalue { double, <2 x double> } %return24, 1
  store <2 x double> %output26, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_ESCHER@UUFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %beta) #1 {
__llvm_entry:
  %seb = alloca double
  %ceb = alloca double
  %sn = alloca double
  %cn = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  %3 = alloca double
  store double 0.000000e+00, double* %seb, !vex-initializer-store !3
  store double 0.000000e+00, double* %ceb, !vex-initializer-store !3
  store double 0.000000e+00, double* %sn, !vex-initializer-store !3
  store double 0.000000e+00, double* %cn, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p1, <2 x double>* %0
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %0)
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %1
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %1)
  %return = call double @"log@FF"(double %SUMSQ)
  %output = fmul double 5.000000e-01, %return
  %beta3 = load double, double* %beta
  store double %beta3, double* %2
  call void @"sincos@FFF"(double* %2, double* %seb, double* %ceb)
  %ceb4 = load double, double* %ceb
  %output5 = fadd double 1.000000e+00, %ceb4
  %output6 = fmul double 5.000000e-01, %output5
  %seb7 = load double, double* %seb
  %output8 = fmul double 5.000000e-01, %seb7
  %w9 = load double, double* %w
  %output12 = fmul double %output6, %output
  %output15 = fmul double %output8, %ATANYX
  %output16 = fsub double %output12, %output15
  %return17 = call double @"exp@FF"(double %output16)
  %output18 = fmul double %w9, %return17
  %output21 = fmul double %output6, %ATANYX
  %output24 = fmul double %output8, %output
  %output25 = fadd double %output21, %output24
  store double %output25, double* %3
  call void @"sincos@FFF"(double* %3, double* %sn, double* %cn)
  %cn28 = load double, double* %cn
  %output29 = fmul double %output18, %cn28
  %tmp = load <2 x double>, <2 x double>* %p
  %return30 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output29, i64 0)
  %output32 = extractvalue { double, <2 x double> } %return30, 1
  store <2 x double> %output32, <2 x double>* %p
  %sn34 = load double, double* %sn
  %output35 = fmul double %output18, %sn34
  %return37 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output32, double %output35, i64 1)
  %output39 = extractvalue { double, <2 x double> } %return37, 1
  store <2 x double> %output39, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_FOCI@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %sn = alloca double
  %cn = alloca double
  %0 = alloca double
  %1 = alloca double
  %2 = alloca double
  store double 0.000000e+00, double* %sn, !vex-initializer-store !3
  store double 0.000000e+00, double* %cn, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %return = call double @"exp@FF"(double %output2)
  %output5 = fmul double %return, 5.000000e-01
  store double %output5, double* %0
  %Zeps = call double @"Zeps@FF"(double* %0)
  %output7 = call double @"div@FF"(double 2.500000e-01, double %Zeps)
  store double %output3, double* %1
  call void @"sincos@FFF"(double* %1, double* %sn, double* %cn)
  %w9 = load double, double* %w
  %output12 = fadd double %output5, %output7
  %cn13 = load double, double* %cn
  %output14 = fsub double %output12, %cn13
  store double %output14, double* %2
  %Zeps15 = call double @"Zeps@FF"(double* %2)
  %output16 = call double @"div@FF"(double %w9, double %Zeps15)
  %output20 = fsub double %output5, %output7
  %output21 = fmul double %output16, %output20
  %tmp22 = load <2 x double>, <2 x double>* %p
  %return23 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp22, double %output21, i64 0)
  %output25 = extractvalue { double, <2 x double> } %return23, 1
  store <2 x double> %output25, <2 x double>* %p
  %sn27 = load double, double* %sn
  %output28 = fmul double %output16, %sn27
  %return30 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output25, double %output28, i64 1)
  %output32 = extractvalue { double, <2 x double> } %return30, 1
  store <2 x double> %output32, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_LAZYSUSAN@UUFVU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <3 x double>* %lazysusan, <2 x double>* %lazy) #1 {
__llvm_entry:
  %sina = alloca double
  %cosa = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sina, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosa, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %lazysusan4 = load <3 x double>, <3 x double>* %lazysusan
  %output5 = call { double, double, double } @"assign@FFFV"(<3 x double> %lazysusan4)
  %output6 = extractvalue { double, double, double } %output5, 0
  %output7 = extractvalue { double, double, double } %output5, 1
  %output8 = extractvalue { double, double, double } %output5, 2
  %lazy9 = load <2 x double>, <2 x double>* %lazy
  %output10 = call { double, double } @"assign@FFU"(<2 x double> %lazy9)
  %output11 = extractvalue { double, double } %output10, 0
  %output12 = extractvalue { double, double } %output10, 1
  %output15 = fsub double %output2, %output11
  %output18 = fadd double %output3, %output12
  %return = call <2 x double> @"set@UFF"(double %output15, double %output18)
  store <2 x double> %return, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %w22 = load double, double* %w
  %return23 = fcmp olt double %SQRT, %w22
  br i1 %return23, label %true, label %false

true:                                             ; preds = %__llvm_entry
  store <2 x double> %return, <2 x double>* %1
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %1)
  %output29 = fadd double %ATANYX, %output6
  %w31 = load double, double* %w
  %output33 = fsub double %w31, %SQRT
  %output34 = fmul double %output7, %output33
  %output35 = fadd double %output29, %output34
  store double %output35, double* %2
  call void @"sincos@FFF"(double* %2, double* %sina, double* %cosa)
  %w37 = load double, double* %w
  %output39 = fmul double %w37, %SQRT
  %cosa41 = load double, double* %cosa
  %output42 = fmul double %output39, %cosa41
  %output44 = fadd double %output42, %output11
  %tmp = load <2 x double>, <2 x double>* %p
  %return45 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output44, i64 0)
  %output47 = extractvalue { double, <2 x double> } %return45, 1
  store <2 x double> %output47, <2 x double>* %p
  %sina49 = load double, double* %sina
  %output50 = fmul double %output39, %sina49
  %output52 = fsub double %output50, %output12
  %return54 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output47, double %output52, i64 1)
  %output56 = extractvalue { double, <2 x double> } %return54, 1
  store <2 x double> %output56, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %output60 = call double @"div@FF"(double %output8, double %SQRT)
  %output61 = fadd double 1.000000e+00, %output60
  %output62 = fmul double %w22, %output61
  %output65 = fmul double %output62, %output15
  %output67 = fadd double %output65, %output11
  %tmp68 = load <2 x double>, <2 x double>* %p
  %return69 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp68, double %output67, i64 0)
  %output71 = extractvalue { double, <2 x double> } %return69, 1
  store <2 x double> %output71, <2 x double>* %p
  %output74 = fmul double %output62, %output18
  %output76 = fsub double %output74, %output12
  %return78 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output71, double %output76, i64 1)
  %output80 = extractvalue { double, <2 x double> } %return78, 1
  store <2 x double> %output80, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_LOONIE@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %_p4 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p4, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %w5 = load double, double* %w
  %output7 = fmul double %w5, %w5
  %return = fcmp olt double %SUMSQ, %output7
  br i1 %return, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output14 = call double @"div@FF"(double %output7, double %SUMSQ)
  %output15 = fsub double %output14, 1.000000e+00
  %return16 = call double @"sqrt@FF"(double %output15)
  %output17 = fmul double %w5, %return16
  %output20 = fmul double %output17, %output2
  %tmp = load <2 x double>, <2 x double>* %p
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output20, i64 0)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  %output26 = fmul double %output17, %output3
  %return28 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output23, double %output26, i64 1)
  %output30 = extractvalue { double, <2 x double> } %return28, 1
  store <2 x double> %output30, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %output33 = fmul double %w5, %output2
  %tmp34 = load <2 x double>, <2 x double>* %p
  %return35 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp34, double %output33, i64 0)
  %output37 = extractvalue { double, <2 x double> } %return35, 1
  store <2 x double> %output37, <2 x double>* %p
  %w38 = load double, double* %w
  %output40 = fmul double %w38, %output3
  %return42 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output37, double %output40, i64 1)
  %output44 = extractvalue { double, <2 x double> } %return42, 1
  store <2 x double> %output44, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_PREBLUR@UF"(<2 x double>* %p, double* %w) #1 {
__llvm_entry:
  %sinA = alloca double
  %cosA = alloca double
  %0 = alloca double
  store double 0.000000e+00, double* %sinA, !vex-initializer-store !3
  store double 0.000000e+00, double* %cosA, !vex-initializer-store !3
  %w1 = load double, double* %w
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return2 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output = fadd double %return, %return2
  %return3 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output4 = fadd double %output, %return3
  %return5 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output6 = fadd double %output4, %return5
  %output7 = fsub double %output6, 2.000000e+00
  %output8 = fmul double %w1, %output7
  %return9 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output10 = fmul double %return9, 2.000000e+00
  %output11 = fmul double %output10, 0x400921FB4D12D84A
  store double %output11, double* %0
  call void @"sincos@FFF"(double* %0, double* %sinA, double* %cosA)
  %p13 = load <2 x double>, <2 x double>* %p
  %return14 = call double @"getcomp@FUI"(<2 x double> %p13, i64 0)
  %cosA16 = load double, double* %cosA
  %output17 = fmul double %output8, %cosA16
  %output18 = fadd double %return14, %output17
  %return19 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %p13, double %output18, i64 0)
  %output21 = extractvalue { double, <2 x double> } %return19, 1
  store <2 x double> %output21, <2 x double>* %p
  %return23 = call double @"getcomp@FUI"(<2 x double> %output21, i64 1)
  %sinA25 = load double, double* %sinA
  %output26 = fmul double %output8, %sinA25
  %output27 = fadd double %return23, %output26
  %return29 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output21, double %output27, i64 1)
  %output31 = extractvalue { double, <2 x double> } %return29, 1
  store <2 x double> %output31, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_MODULUS@UUFU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %m) #1 {
__llvm_entry:
  %0 = alloca double
  %1 = alloca double
  %2 = alloca double
  %3 = alloca double
  %4 = alloca double
  %5 = alloca double
  %6 = alloca double
  %7 = alloca double
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %m4 = load <2 x double>, <2 x double>* %m
  %output5 = call { double, double } @"assign@FFU"(<2 x double> %m4)
  %output6 = extractvalue { double, double } %output5, 0
  %output7 = extractvalue { double, double } %output5, 1
  %output9 = fmul double 2.000000e+00, %output6
  %output11 = fmul double 2.000000e+00, %output7
  %return = fcmp ogt double %output2, %output6
  br i1 %return, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %w15 = load double, double* %w
  %return17 = call double @"neg@FF"(double %output6)
  %output20 = fadd double %output2, %output6
  store double %output20, double* %0
  store double %output9, double* %1
  %fmod = call double @"fmod@FFF"(double* %0, double* %1)
  %output22 = fadd double %return17, %fmod
  %output23 = fmul double %w15, %output22
  %tmp = load <2 x double>, <2 x double>* %p
  %return24 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output23, i64 0)
  %output26 = extractvalue { double, <2 x double> } %return24, 1
  store <2 x double> %output26, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %return29 = call double @"neg@FF"(double %output6)
  %return30 = fcmp olt double %output2, %return29
  %w35 = load double, double* %w
  br i1 %return30, label %true32, label %false33

end:                                              ; preds = %true32, %false33, %true
  %return57 = fcmp ogt double %output3, %output7
  br i1 %return57, label %true59, label %false60

true32:                                           ; preds = %false
  %output39 = fsub double %output6, %output2
  store double %output39, double* %2
  store double %output9, double* %3
  %fmod41 = call double @"fmod@FFF"(double* %2, double* %3)
  %output42 = fsub double %output6, %fmod41
  %output43 = fmul double %w35, %output42
  %tmp44 = load <2 x double>, <2 x double>* %p
  %return45 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp44, double %output43, i64 0)
  %output47 = extractvalue { double, <2 x double> } %return45, 1
  store <2 x double> %output47, <2 x double>* %p
  br label %end

false33:                                          ; preds = %false
  %output50 = fmul double %w35, %output2
  %tmp51 = load <2 x double>, <2 x double>* %p
  %return52 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp51, double %output50, i64 0)
  %output54 = extractvalue { double, <2 x double> } %return52, 1
  store <2 x double> %output54, <2 x double>* %p
  br label %end

true59:                                           ; preds = %end
  %w62 = load double, double* %w
  %return64 = call double @"neg@FF"(double %output7)
  %output67 = fadd double %output3, %output7
  store double %output67, double* %4
  store double %output11, double* %5
  %fmod69 = call double @"fmod@FFF"(double* %4, double* %5)
  %output70 = fadd double %return64, %fmod69
  %output71 = fmul double %w62, %output70
  %tmp72 = load <2 x double>, <2 x double>* %p
  %return73 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp72, double %output71, i64 1)
  %output75 = extractvalue { double, <2 x double> } %return73, 1
  store <2 x double> %output75, <2 x double>* %p
  br label %end61

false60:                                          ; preds = %end
  %return78 = call double @"neg@FF"(double %output7)
  %return79 = fcmp olt double %output3, %return78
  %w84 = load double, double* %w
  br i1 %return79, label %true81, label %false82

end61:                                            ; preds = %true81, %false82, %true59
  ret void

true81:                                           ; preds = %false60
  %output88 = fsub double %output7, %output3
  store double %output88, double* %6
  store double %output11, double* %7
  %fmod90 = call double @"fmod@FFF"(double* %6, double* %7)
  %output91 = fsub double %output7, %fmod90
  %output92 = fmul double %w84, %output91
  %tmp93 = load <2 x double>, <2 x double>* %p
  %return94 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp93, double %output92, i64 1)
  %output96 = extractvalue { double, <2 x double> } %return94, 1
  store <2 x double> %output96, <2 x double>* %p
  br label %end61

false82:                                          ; preds = %false60
  %output99 = fmul double %w84, %output3
  %tmp100 = load <2 x double>, <2 x double>* %p
  %return101 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp100, double %output99, i64 1)
  %output103 = extractvalue { double, <2 x double> } %return101, 1
  store <2 x double> %output103, <2 x double>* %p
  br label %end61
}

; Function Attrs: alwaysinline nounwind
define private void @"V_OSCOPE@UUFP"(<2 x double>* %p, <2 x double>* %_p, double* %w, <4 x double>* %oscope) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %oscope4 = load <4 x double>, <4 x double>* %oscope
  %output5 = call { double, double, double, double } @"assign@FFFFP"(<4 x double> %oscope4)
  %output6 = extractvalue { double, double, double, double } %output5, 0
  %output7 = extractvalue { double, double, double, double } %output5, 1
  %output8 = extractvalue { double, double, double, double } %output5, 2
  %output9 = extractvalue { double, double, double, double } %output5, 3
  %output11 = fmul double 0x401921FB4D12D84A, %output6
  %return = fcmp oeq double %output8, 0.000000e+00
  br i1 %return, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output17 = fmul double %output11, %output2
  %return18 = call double @"cos@FF"(double %output17)
  %output19 = fmul double %output7, %return18
  %output21 = fadd double %output19, %output9
  br label %end

false:                                            ; preds = %__llvm_entry
  %return24 = call double @"abs@FF"(double %output2)
  %return25 = call double @"neg@FF"(double %return24)
  %output27 = fmul double %return25, %output8
  %return28 = call double @"exp@FF"(double %output27)
  %output29 = fmul double %output7, %return28
  %output32 = fmul double %output11, %output2
  %return33 = call double @"cos@FF"(double %output32)
  %output34 = fmul double %output29, %return33
  %output36 = fadd double %output34, %output9
  br label %end

end:                                              ; preds = %false, %true
  %tt.0 = phi double [ %output21, %true ], [ %output36, %false ]
  %return38 = call double @"abs@FF"(double %output3)
  %return40 = fcmp ole double %return38, %tt.0
  %w45 = load double, double* %w
  %output47 = fmul double %w45, %output2
  %tmp = load <2 x double>, <2 x double>* %p
  %return48 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output47, i64 0)
  %output50 = extractvalue { double, <2 x double> } %return48, 1
  store <2 x double> %output50, <2 x double>* %p
  %w51 = load double, double* %w
  br i1 %return40, label %true42, label %false43

true42:                                           ; preds = %end
  %return53 = call double @"neg@FF"(double %output3)
  %output54 = fmul double %w51, %return53
  %return56 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output50, double %output54, i64 1)
  %output58 = extractvalue { double, <2 x double> } %return56, 1
  store <2 x double> %output58, <2 x double>* %p
  br label %end44

false43:                                          ; preds = %end
  %output68 = fmul double %w51, %output3
  %return70 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output50, double %output68, i64 1)
  %output72 = extractvalue { double, <2 x double> } %return70, 1
  store <2 x double> %output72, <2 x double>* %p
  br label %end44

end44:                                            ; preds = %false43, %true42
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_POLAR2@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %w1 = load double, double* %w
  %output = call double @"div@FF"(double %w1, double 0x400921FB4D12D84A)
  %_p3 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p3, <2 x double>* %0
  %ATAN = call double @"ATAN@FU"(<2 x double>* %0)
  %output4 = fmul double %output, %ATAN
  %tmp = load <2 x double>, <2 x double>* %p
  %return = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output4, i64 0)
  %output6 = extractvalue { double, <2 x double> } %return, 1
  store <2 x double> %output6, <2 x double>* %p
  %output8 = call double @"div@FF"(double %output, double 2.000000e+00)
  %_p9 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p9, <2 x double>* %1
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %1)
  %return10 = call double @"log@FF"(double %SUMSQ)
  %output11 = fmul double %output8, %return10
  %tmp12 = load <2 x double>, <2 x double>* %p
  %return13 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp12, double %output11, i64 1)
  %output15 = extractvalue { double, <2 x double> } %return13, 1
  store <2 x double> %output15, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_POPCORN2@UUFFU"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %pop2c, <2 x double>* %pop2) #1 {
__llvm_entry:
  %0 = alloca double
  %1 = alloca double
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %pop24 = load <2 x double>, <2 x double>* %pop2
  %output5 = call { double, double } @"assign@FFU"(<2 x double> %pop24)
  %output6 = extractvalue { double, double } %output5, 0
  %output7 = extractvalue { double, double } %output5, 1
  %w8 = load double, double* %w
  %pop2c12 = load double, double* %pop2c
  %output13 = fmul double %output3, %pop2c12
  store double %output13, double* %0
  %SafeTan = call double @"SafeTan@FF"(double* %0)
  %return = call double @"sin@FF"(double %SafeTan)
  %output14 = fmul double %output6, %return
  %output15 = fadd double %output2, %output14
  %output16 = fmul double %w8, %output15
  %tmp = load <2 x double>, <2 x double>* %p
  %return17 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output16, i64 0)
  %output19 = extractvalue { double, <2 x double> } %return17, 1
  store <2 x double> %output19, <2 x double>* %p
  %w20 = load double, double* %w
  %pop2c24 = load double, double* %pop2c
  %output25 = fmul double %output2, %pop2c24
  store double %output25, double* %1
  %SafeTan26 = call double @"SafeTan@FF"(double* %1)
  %return27 = call double @"sin@FF"(double %SafeTan26)
  %output28 = fmul double %output7, %return27
  %output29 = fadd double %output3, %output28
  %output30 = fmul double %w20, %output29
  %tmp31 = load <2 x double>, <2 x double>* %p
  %return32 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp31, double %output30, i64 1)
  %output34 = extractvalue { double, <2 x double> } %return32, 1
  store <2 x double> %output34, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SCRY@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %_p4 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p4, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %_p5 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p5, <2 x double>* %1
  %SQRT = call double @"SQRT@FU"(<2 x double>* %1)
  %w7 = load double, double* %w
  %output8 = fadd double %w7, 0x3CB0000000000000
  %output9 = call double @"div@FF"(double 1.000000e+00, double %output8)
  %output10 = fadd double %SUMSQ, %output9
  %output11 = fmul double %SQRT, %output10
  %output12 = call double @"div@FF"(double 1.000000e+00, double %output11)
  %output15 = fmul double %output2, %output12
  %tmp = load <2 x double>, <2 x double>* %p
  %return = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output15, i64 0)
  %output17 = extractvalue { double, <2 x double> } %return, 1
  store <2 x double> %output17, <2 x double>* %p
  %output20 = fmul double %output3, %output12
  %return22 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output17, double %output20, i64 1)
  %output24 = extractvalue { double, <2 x double> } %return22, 1
  store <2 x double> %output24, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SEPARATION@UUFUU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %sep, <2 x double>* %ins) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %ins4 = load <2 x double>, <2 x double>* %ins
  %output5 = call { double, double } @"assign@FFU"(<2 x double> %ins4)
  %output6 = extractvalue { double, double } %output5, 0
  %output7 = extractvalue { double, double } %output5, 1
  %sep8 = load <2 x double>, <2 x double>* %sep
  %return = call double @"getcomp@FUI"(<2 x double> %sep8, i64 0)
  %output11 = fmul double %return, %return
  %return13 = call double @"getcomp@FUI"(<2 x double> %sep8, i64 1)
  %output16 = fmul double %return13, %return13
  %return18 = fcmp ogt double %output2, 0.000000e+00
  %w20 = load double, double* %w
  %output23 = fmul double %output2, %output2
  %output25 = fadd double %output23, %output11
  %return26 = call double @"sqrt@FF"(double %output25)
  %output29 = fmul double %output2, %output6
  br i1 %return18, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output30 = fsub double %return26, %output29
  %output31 = fmul double %w20, %output30
  %tmp = load <2 x double>, <2 x double>* %p
  %return32 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output31, i64 0)
  %output34 = extractvalue { double, <2 x double> } %return32, 1
  store <2 x double> %output34, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %output45 = fadd double %return26, %output29
  %return46 = call double @"neg@FF"(double %output45)
  %output47 = fmul double %w20, %return46
  %tmp48 = load <2 x double>, <2 x double>* %p
  %return49 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp48, double %output47, i64 0)
  %output51 = extractvalue { double, <2 x double> } %return49, 1
  store <2 x double> %output51, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  %return53 = fcmp ogt double %output3, 0.000000e+00
  %w58 = load double, double* %w
  %output61 = fmul double %output3, %output3
  %output63 = fadd double %output61, %output16
  %return64 = call double @"sqrt@FF"(double %output63)
  %output67 = fmul double %output3, %output7
  br i1 %return53, label %true55, label %false56

true55:                                           ; preds = %end
  %output68 = fsub double %return64, %output67
  %output69 = fmul double %w58, %output68
  %tmp70 = load <2 x double>, <2 x double>* %p
  %return71 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp70, double %output69, i64 1)
  %output73 = extractvalue { double, <2 x double> } %return71, 1
  store <2 x double> %output73, <2 x double>* %p
  br label %end57

false56:                                          ; preds = %end
  %output84 = fadd double %return64, %output67
  %return85 = call double @"neg@FF"(double %output84)
  %output86 = fmul double %w58, %return85
  %tmp87 = load <2 x double>, <2 x double>* %p
  %return88 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp87, double %output86, i64 1)
  %output90 = extractvalue { double, <2 x double> } %return88, 1
  store <2 x double> %output90, <2 x double>* %p
  br label %end57

end57:                                            ; preds = %false56, %true55
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SPLIT@UUFU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %split) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %split4 = load <2 x double>, <2 x double>* %split
  %output5 = call { double, double } @"assign@FFU"(<2 x double> %split4)
  %output6 = extractvalue { double, double } %output5, 0
  %output7 = extractvalue { double, double } %output5, 1
  %output10 = fmul double %output2, %output6
  %output11 = fmul double %output10, 0x400921FB4D12D84A
  %return = call double @"cos@FF"(double %output11)
  %return12 = fcmp oge double %return, 0.000000e+00
  %w14 = load double, double* %w
  br i1 %return12, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output16 = fmul double %w14, %output3
  %tmp = load <2 x double>, <2 x double>* %p
  %return17 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output16, i64 1)
  %output19 = extractvalue { double, <2 x double> } %return17, 1
  store <2 x double> %output19, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %_p21 = load <2 x double>, <2 x double>* %_p
  %return22 = call double @"getcomp@FUI"(<2 x double> %_p21, i64 1)
  %return23 = call double @"neg@FF"(double %return22)
  %output24 = fmul double %w14, %return23
  %tmp25 = load <2 x double>, <2 x double>* %p
  %return26 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp25, double %output24, i64 1)
  %output28 = extractvalue { double, <2 x double> } %return26, 1
  store <2 x double> %output28, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  %output31 = fmul double %output3, %output7
  %output32 = fmul double %output31, 0x400921FB4D12D84A
  %return33 = call double @"cos@FF"(double %output32)
  %return34 = fcmp oge double %return33, 0.000000e+00
  %w39 = load double, double* %w
  br i1 %return34, label %true36, label %false37

true36:                                           ; preds = %end
  %output41 = fmul double %w39, %output2
  %tmp42 = load <2 x double>, <2 x double>* %p
  %return43 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp42, double %output41, i64 0)
  %output45 = extractvalue { double, <2 x double> } %return43, 1
  store <2 x double> %output45, <2 x double>* %p
  br label %end38

false37:                                          ; preds = %end
  %return48 = call double @"neg@FF"(double %output2)
  %output49 = fmul double %w39, %return48
  %tmp50 = load <2 x double>, <2 x double>* %p
  %return51 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp50, double %output49, i64 0)
  %output53 = extractvalue { double, <2 x double> } %return51, 1
  store <2 x double> %output53, <2 x double>* %p
  br label %end38

end38:                                            ; preds = %false37, %true36
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SPLITS@UUFU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %splits) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %splits4 = load <2 x double>, <2 x double>* %splits
  %output5 = call { double, double } @"assign@FFU"(<2 x double> %splits4)
  %output6 = extractvalue { double, double } %output5, 0
  %output7 = extractvalue { double, double } %output5, 1
  %return = fcmp oge double %output2, 0.000000e+00
  %w10 = load double, double* %w
  br i1 %return, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output13 = fadd double %output2, %output6
  %output14 = fmul double %w10, %output13
  %tmp = load <2 x double>, <2 x double>* %p
  %return15 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output14, i64 0)
  %output17 = extractvalue { double, <2 x double> } %return15, 1
  store <2 x double> %output17, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %output21 = fsub double %output2, %output6
  %output22 = fmul double %w10, %output21
  %tmp23 = load <2 x double>, <2 x double>* %p
  %return24 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp23, double %output22, i64 0)
  %output26 = extractvalue { double, <2 x double> } %return24, 1
  store <2 x double> %output26, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  %return28 = fcmp oge double %output3, 0.000000e+00
  %w33 = load double, double* %w
  br i1 %return28, label %true30, label %false31

true30:                                           ; preds = %end
  %output36 = fadd double %output3, %output7
  %output37 = fmul double %w33, %output36
  %tmp38 = load <2 x double>, <2 x double>* %p
  %return39 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp38, double %output37, i64 1)
  %output41 = extractvalue { double, <2 x double> } %return39, 1
  store <2 x double> %output41, <2 x double>* %p
  br label %end32

false31:                                          ; preds = %end
  %output45 = fsub double %output3, %output7
  %output46 = fmul double %w33, %output45
  %tmp47 = load <2 x double>, <2 x double>* %p
  %return48 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp47, double %output46, i64 1)
  %output50 = extractvalue { double, <2 x double> } %return48, 1
  store <2 x double> %output50, <2 x double>* %p
  br label %end32

end32:                                            ; preds = %false31, %true30
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_STRIPES@UUFU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %stripes) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %stripes4 = load <2 x double>, <2 x double>* %stripes
  %output5 = call { double, double } @"assign@FFU"(<2 x double> %stripes4)
  %output6 = extractvalue { double, double } %output5, 0
  %output7 = extractvalue { double, double } %output5, 1
  %output9 = fadd double %output2, 5.000000e-01
  %return = call double @"floor@FF"(double %output9)
  %output12 = fsub double %output2, %return
  %w13 = load double, double* %w
  %output16 = fsub double 1.000000e+00, %output6
  %output17 = fmul double %output12, %output16
  %output19 = fadd double %output17, %return
  %output20 = fmul double %w13, %output19
  %tmp = load <2 x double>, <2 x double>* %p
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output20, i64 0)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  %w24 = load double, double* %w
  %output28 = fmul double %output12, %output12
  %output30 = fmul double %output28, %output7
  %output31 = fadd double %output3, %output30
  %output32 = fmul double %w24, %output31
  %return34 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output23, double %output32, i64 1)
  %output36 = extractvalue { double, <2 x double> } %return34, 1
  store <2 x double> %output36, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_WEDGE@UUFP"(<2 x double>* %p, <2 x double>* %_p, double* %w, <4 x double>* %wedge) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %wedge1 = load <4 x double>, <4 x double>* %wedge
  %output = call { double, double, double, double } @"assign@FFFFP"(<4 x double> %wedge1)
  %output2 = extractvalue { double, double, double, double } %output, 0
  %output3 = extractvalue { double, double, double, double } %output, 1
  %output4 = extractvalue { double, double, double, double } %output, 2
  %output5 = extractvalue { double, double, double, double } %output, 3
  %output8 = fmul double %output3, %output5
  %output9 = fmul double %output8, 0x3FD45F306DC9C883
  %output10 = fmul double %output9, 5.000000e-01
  %output11 = fsub double 1.000000e+00, %output10
  %_p12 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p12, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %_p13 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p13, <2 x double>* %1
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %1)
  %output16 = fmul double %output2, %SQRT
  %output17 = fadd double %ATANYX, %output16
  %output20 = fmul double %output5, %output17
  %output21 = fadd double %output20, 0x400921FB4D12D84A
  %output22 = fmul double %output21, 0x3FD45F306DC9C883
  %output23 = fmul double %output22, 5.000000e-01
  %return = call double @"floor@FF"(double %output23)
  %output26 = fmul double %output17, %output11
  %output29 = fmul double %return, %output3
  %output30 = fadd double %output26, %output29
  %w31 = load double, double* %w
  %output34 = fadd double %SQRT, %output4
  %output35 = fmul double %w31, %output34
  %return38 = call double @"cos@FF"(double %output30)
  %output39 = fmul double %output35, %return38
  %tmp = load <2 x double>, <2 x double>* %p
  %return40 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output39, i64 0)
  %output42 = extractvalue { double, <2 x double> } %return40, 1
  store <2 x double> %output42, <2 x double>* %p
  %return45 = call double @"sin@FF"(double %output30)
  %output46 = fmul double %output35, %return45
  %return48 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output42, double %output46, i64 1)
  %output50 = extractvalue { double, <2 x double> } %return48, 1
  store <2 x double> %output50, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_WEDGEJULIA@UUFP"(<2 x double>* %p, <2 x double>* %_p, double* %w, <4 x double>* %wedgejulia) #1 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %wedgejulia1 = load <4 x double>, <4 x double>* %wedgejulia
  %output = call { double, double, double, double } @"assign@FFFFP"(<4 x double> %wedgejulia1)
  %output2 = extractvalue { double, double, double, double } %output, 0
  %output3 = extractvalue { double, double, double, double } %output, 1
  %output4 = extractvalue { double, double, double, double } %output, 2
  %output5 = extractvalue { double, double, double, double } %output, 3
  %output8 = fmul double %output3, %output5
  %output9 = fmul double %output8, 0x3FD45F306DC9C883
  %output10 = fmul double %output9, 5.000000e-01
  %output11 = fsub double 1.000000e+00, %output10
  %return = call double @"abs@FF"(double %output2)
  %output15 = call double @"div@FF"(double %output4, double %output2)
  %output16 = call double @"div@FF"(double %output15, double 2.000000e+00)
  %w17 = load double, double* %w
  %_p18 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p18, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %return20 = call double @"pow@FFF"(double %SUMSQ, double %output16)
  %output21 = fmul double %w17, %return20
  %return23 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output24 = fmul double %return, %return23
  %cast = fptosi double %output24 to i64
  %cast25 = sitofp i64 %cast to double
  %_p26 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p26, <2 x double>* %1
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %1)
  %output28 = fmul double 0x401921FB4D12D84A, %cast25
  %output29 = fadd double %ATANYX, %output28
  %output31 = call double @"div@FF"(double %output29, double %output2)
  %output34 = fmul double %output5, %output31
  %output35 = fadd double %output34, 0x400921FB4D12D84A
  %output36 = fmul double %output35, 0x3FD45F306DC9C883
  %output37 = fmul double %output36, 5.000000e-01
  %return38 = call double @"floor@FF"(double %output37)
  %output41 = fmul double %output31, %output11
  %output44 = fmul double %return38, %output3
  %output45 = fadd double %output41, %output44
  store double %output45, double* %2
  call void @"sincos@FFF"(double* %2, double* %sa, double* %ca)
  %ca48 = load double, double* %ca
  %output49 = fmul double %output21, %ca48
  %tmp = load <2 x double>, <2 x double>* %p
  %return50 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output49, i64 0)
  %output52 = extractvalue { double, <2 x double> } %return50, 1
  store <2 x double> %output52, <2 x double>* %p
  %sa54 = load double, double* %sa
  %output55 = fmul double %output21, %sa54
  %return57 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output52, double %output55, i64 1)
  %output59 = extractvalue { double, <2 x double> } %return57, 1
  store <2 x double> %output59, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_WEDGESPH@UUFP"(<2 x double>* %p, <2 x double>* %_p, double* %w, <4 x double>* %wedgesph) #1 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %wedgesph1 = load <4 x double>, <4 x double>* %wedgesph
  %output = call { double, double, double, double } @"assign@FFFFP"(<4 x double> %wedgesph1)
  %output2 = extractvalue { double, double, double, double } %output, 0
  %output3 = extractvalue { double, double, double, double } %output, 1
  %output4 = extractvalue { double, double, double, double } %output, 2
  %output5 = extractvalue { double, double, double, double } %output, 3
  %_p6 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p6, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %output7 = fadd double %SQRT, 0x3CB0000000000000
  %output8 = call double @"div@FF"(double 1.000000e+00, double %output7)
  %_p9 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p9, <2 x double>* %1
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %1)
  %output12 = fmul double %output2, %output8
  %output13 = fadd double %ATANYX, %output12
  %output16 = fmul double %output5, %output13
  %output17 = fadd double %output16, 0x400921FB4D12D84A
  %output18 = fmul double %output17, 0x3FD45F306DC9C883
  %output19 = fmul double %output18, 5.000000e-01
  %return = call double @"floor@FF"(double %output19)
  %output22 = fmul double %output3, %output5
  %output23 = fmul double %output22, 0x3FD45F306DC9C883
  %output24 = fmul double %output23, 5.000000e-01
  %output25 = fsub double 1.000000e+00, %output24
  %output28 = fmul double %output13, %output25
  %output31 = fmul double %return, %output3
  %output32 = fadd double %output28, %output31
  store double %output32, double* %2
  call void @"sincos@FFF"(double* %2, double* %sa, double* %ca)
  %w34 = load double, double* %w
  %output37 = fadd double %output8, %output4
  %output38 = fmul double %w34, %output37
  %ca40 = load double, double* %ca
  %output41 = fmul double %output38, %ca40
  %tmp = load <2 x double>, <2 x double>* %p
  %return42 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output41, i64 0)
  %output44 = extractvalue { double, <2 x double> } %return42, 1
  store <2 x double> %output44, <2 x double>* %p
  %sa46 = load double, double* %sa
  %output47 = fmul double %output38, %sa46
  %return49 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output44, double %output47, i64 1)
  %output51 = extractvalue { double, <2 x double> } %return49, 1
  store <2 x double> %output51, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_WHORL@UUFU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %whorl) #1 {
__llvm_entry:
  %sa = alloca double
  %ca = alloca double
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %2 = alloca double
  store double 0.000000e+00, double* %sa, !vex-initializer-store !3
  store double 0.000000e+00, double* %ca, !vex-initializer-store !3
  %whorl1 = load <2 x double>, <2 x double>* %whorl
  %output = call { double, double } @"assign@FFU"(<2 x double> %whorl1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %_p4 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p4, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %w6 = load double, double* %w
  %return = fcmp olt double %SQRT, %w6
  %_p8 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p8, <2 x double>* %1
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %1)
  br i1 %return, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %w10 = load double, double* %w
  %output12 = fsub double %w10, %SQRT
  %output13 = call double @"div@FF"(double %output2, double %output12)
  %output14 = fadd double %ATANYX, %output13
  br label %end

false:                                            ; preds = %__llvm_entry
  %w18 = load double, double* %w
  %output20 = fsub double %w18, %SQRT
  %output21 = call double @"div@FF"(double %output3, double %output20)
  %output22 = fadd double %ATANYX, %output21
  br label %end

end:                                              ; preds = %false, %true
  %aa.0 = phi double [ %output14, %true ], [ %output22, %false ]
  store double %aa.0, double* %2
  call void @"sincos@FFF"(double* %2, double* %sa, double* %ca)
  %w24 = load double, double* %w
  %output26 = fmul double %w24, %SQRT
  %ca27 = load double, double* %ca
  %output28 = fmul double %output26, %ca27
  %tmp = load <2 x double>, <2 x double>* %p
  %return29 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output28, i64 0)
  %output31 = extractvalue { double, <2 x double> } %return29, 1
  store <2 x double> %output31, <2 x double>* %p
  %w32 = load double, double* %w
  %output34 = fmul double %w32, %SQRT
  %sa35 = load double, double* %sa
  %output36 = fmul double %output34, %sa35
  %return38 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output31, double %output36, i64 1)
  %output40 = extractvalue { double, <2 x double> } %return38, 1
  store <2 x double> %output40, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_WAVES2@UUFUU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %scl, <2 x double>* %freq) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %w4 = load double, double* %w
  %scl6 = load <2 x double>, <2 x double>* %scl
  %return = call double @"getcomp@FUI"(<2 x double> %scl6, i64 0)
  %freq8 = load <2 x double>, <2 x double>* %freq
  %return9 = call double @"getcomp@FUI"(<2 x double> %freq8, i64 0)
  %output10 = fmul double %output3, %return9
  %return11 = call double @"sin@FF"(double %output10)
  %output12 = fmul double %return, %return11
  %output13 = fadd double %output2, %output12
  %output14 = fmul double %w4, %output13
  %tmp = load <2 x double>, <2 x double>* %p
  %return15 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output14, i64 0)
  %output17 = extractvalue { double, <2 x double> } %return15, 1
  store <2 x double> %output17, <2 x double>* %p
  %w18 = load double, double* %w
  %scl20 = load <2 x double>, <2 x double>* %scl
  %return21 = call double @"getcomp@FUI"(<2 x double> %scl20, i64 1)
  %freq23 = load <2 x double>, <2 x double>* %freq
  %return24 = call double @"getcomp@FUI"(<2 x double> %freq23, i64 1)
  %output25 = fmul double %output2, %return24
  %return26 = call double @"sin@FF"(double %output25)
  %output27 = fmul double %return21, %return26
  %output28 = fadd double %output3, %output27
  %output29 = fmul double %w18, %output28
  %return31 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output17, double %output29, i64 1)
  %output33 = extractvalue { double, <2 x double> } %return31, 1
  store <2 x double> %output33, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_EXP@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %w4 = load double, double* %w
  %return = call double @"exp@FF"(double %output2)
  %output6 = fmul double %w4, %return
  %return9 = call double @"cos@FF"(double %output3)
  %output10 = fmul double %output6, %return9
  %tmp = load <2 x double>, <2 x double>* %p
  %return11 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output10, i64 0)
  %output13 = extractvalue { double, <2 x double> } %return11, 1
  store <2 x double> %output13, <2 x double>* %p
  %return16 = call double @"sin@FF"(double %output3)
  %output17 = fmul double %output6, %return16
  %return19 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output13, double %output17, i64 1)
  %output21 = extractvalue { double, <2 x double> } %return19, 1
  store <2 x double> %output21, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_LOG@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca <2 x double>
  %w1 = load double, double* %w
  %output = fmul double %w1, 5.000000e-01
  %_p2 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p2, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %return = call double @"log@FF"(double %SUMSQ)
  %output3 = fmul double %output, %return
  %tmp = load <2 x double>, <2 x double>* %p
  %return4 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output3, i64 0)
  %output6 = extractvalue { double, <2 x double> } %return4, 1
  store <2 x double> %output6, <2 x double>* %p
  %w7 = load double, double* %w
  %_p8 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p8, <2 x double>* %1
  %ATANYX = call double @"ATANYX@FU"(<2 x double>* %1)
  %output9 = fmul double %w7, %ATANYX
  %tmp10 = load <2 x double>, <2 x double>* %p
  %return11 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp10, double %output9, i64 1)
  %output13 = extractvalue { double, <2 x double> } %return11, 1
  store <2 x double> %output13, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SIN@IUUF"(i64* %f3c, <2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %f3c4 = load i64, i64* %f3c
  %0 = icmp ne i64 %f3c4, 0
  br i1 %0, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %w5 = load double, double* %w
  %return = call double @"sin@FF"(double %output2)
  %output7 = fmul double %w5, %return
  %return9 = call double @"cosh@FF"(double %output3)
  %output10 = fmul double %output7, %return9
  %tmp = load <2 x double>, <2 x double>* %p
  %return11 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output10, i64 0)
  %output13 = extractvalue { double, <2 x double> } %return11, 1
  store <2 x double> %output13, <2 x double>* %p
  %w14 = load double, double* %w
  %return16 = call double @"cos@FF"(double %output2)
  %output17 = fmul double %w14, %return16
  %return19 = call double @"sinh@FF"(double %output3)
  %output20 = fmul double %output17, %return19
  %return22 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output13, double %output20, i64 1)
  %output24 = extractvalue { double, <2 x double> } %return22, 1
  store <2 x double> %output24, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %output26 = fmul double %output2, 0x3FF921FB4D12D84A
  %output28 = fmul double %output3, 0x3FF921FB4D12D84A
  %w29 = load double, double* %w
  %return31 = call double @"sin@FF"(double %output26)
  %output32 = fmul double %w29, %return31
  %return34 = call double @"cosh@FF"(double %output28)
  %output35 = fmul double %output32, %return34
  %tmp36 = load <2 x double>, <2 x double>* %p
  %return37 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp36, double %output35, i64 0)
  %output39 = extractvalue { double, <2 x double> } %return37, 1
  store <2 x double> %output39, <2 x double>* %p
  %w40 = load double, double* %w
  %return42 = call double @"cos@FF"(double %output26)
  %output43 = fmul double %w40, %return42
  %return45 = call double @"sinh@FF"(double %output28)
  %output46 = fmul double %output43, %return45
  %return48 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output39, double %output46, i64 1)
  %output50 = extractvalue { double, <2 x double> } %return48, 1
  store <2 x double> %output50, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_COS@IUUF"(i64* %f3c, <2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %f3c4 = load i64, i64* %f3c
  %0 = icmp ne i64 %f3c4, 0
  br i1 %0, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %w5 = load double, double* %w
  %return = call double @"cos@FF"(double %output2)
  %output7 = fmul double %w5, %return
  %return9 = call double @"cosh@FF"(double %output3)
  %output10 = fmul double %output7, %return9
  %tmp = load <2 x double>, <2 x double>* %p
  %return11 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output10, i64 0)
  %output13 = extractvalue { double, <2 x double> } %return11, 1
  store <2 x double> %output13, <2 x double>* %p
  %w14 = load double, double* %w
  %return16 = call double @"sin@FF"(double %output2)
  %output17 = fmul double %w14, %return16
  %return19 = call double @"sinh@FF"(double %output3)
  %output20 = fmul double %output17, %return19
  %return21 = call double @"neg@FF"(double %output20)
  %return23 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output13, double %return21, i64 1)
  %output25 = extractvalue { double, <2 x double> } %return23, 1
  store <2 x double> %output25, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %output27 = fmul double %output2, 0x3FF921FB4D12D84A
  %output29 = fmul double %output3, 0x3FF921FB4D12D84A
  %w30 = load double, double* %w
  %return32 = call double @"cos@FF"(double %output27)
  %output33 = fmul double %w30, %return32
  %return35 = call double @"cosh@FF"(double %output29)
  %output36 = fmul double %output33, %return35
  %tmp37 = load <2 x double>, <2 x double>* %p
  %return38 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp37, double %output36, i64 0)
  %output40 = extractvalue { double, <2 x double> } %return38, 1
  store <2 x double> %output40, <2 x double>* %p
  %w41 = load double, double* %w
  %return43 = call double @"sin@FF"(double %output27)
  %return44 = call double @"neg@FF"(double %return43)
  %output45 = fmul double %w41, %return44
  %return47 = call double @"sinh@FF"(double %output29)
  %output48 = fmul double %output45, %return47
  %return50 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output40, double %output48, i64 1)
  %output52 = extractvalue { double, <2 x double> } %return50, 1
  store <2 x double> %output52, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_TAN@IUUF"(i64* %f3c, <2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %tancos = alloca double
  %0 = alloca double
  %1 = alloca double
  %2 = alloca double
  %tansin = alloca double
  store double 0.000000e+00, double* %tansin, !vex-initializer-store !3
  store double 0.000000e+00, double* %tancos, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %f3c4 = load i64, i64* %f3c
  %3 = icmp ne i64 %f3c4, 0
  br i1 %3, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output6 = fmul double 2.000000e+00, %output2
  store double %output6, double* %0
  call void @"sincos@FFF"(double* %0, double* %tansin, double* %tancos)
  %output8 = fmul double 2.000000e+00, %output3
  %return = call double @"sinh@FF"(double %output8)
  %return11 = call double @"cosh@FF"(double %output8)
  %tancos12 = load double, double* %tancos
  %output14 = fadd double %tancos12, %return11
  store double %output14, double* %1
  %Zeps = call double @"Zeps@FF"(double* %1)
  %output15 = call double @"div@FF"(double 1.000000e+00, double %Zeps)
  %w16 = load double, double* %w
  %output18 = fmul double %w16, %output15
  %tansin19 = load double, double* %tansin
  %output20 = fmul double %output18, %tansin19
  %tmp = load <2 x double>, <2 x double>* %p
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output20, i64 0)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  %w24 = load double, double* %w
  %output26 = fmul double %w24, %output15
  %output28 = fmul double %output26, %return
  %return30 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output23, double %output28, i64 1)
  %output32 = extractvalue { double, <2 x double> } %return30, 1
  store <2 x double> %output32, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %output34 = fmul double %output2, 0x3FF921FB4D12D84A
  store double %output34, double* %0
  %output36 = fmul double %output3, 0x3FF921FB4D12D84A
  %w37 = load double, double* %w
  %return39 = call double @"cos@FF"(double %output34)
  %return41 = call double @"cosh@FF"(double %output36)
  %output42 = fadd double %return39, %return41
  store double %output42, double* %2
  %Zeps43 = call double @"Zeps@FF"(double* %2)
  %output44 = call double @"div@FF"(double %w37, double %Zeps43)
  %x45 = load double, double* %0
  %return46 = call double @"sin@FF"(double %x45)
  %output48 = fmul double %return46, %output44
  %tmp49 = load <2 x double>, <2 x double>* %p
  %return50 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp49, double %output48, i64 0)
  %output52 = extractvalue { double, <2 x double> } %return50, 1
  store <2 x double> %output52, <2 x double>* %p
  %return54 = call double @"sinh@FF"(double %output36)
  %output56 = fmul double %return54, %output44
  %return58 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output52, double %output56, i64 1)
  %output60 = extractvalue { double, <2 x double> } %return58, 1
  store <2 x double> %output60, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SEC@IUUF"(i64* %f3c, <2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %seccos = alloca double
  %0 = alloca double
  %1 = alloca double
  %2 = alloca double
  %secsin = alloca double
  store double 0.000000e+00, double* %secsin, !vex-initializer-store !3
  store double 0.000000e+00, double* %seccos, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %f3c4 = load i64, i64* %f3c
  %3 = icmp ne i64 %f3c4, 0
  br i1 %3, label %true, label %false

true:                                             ; preds = %__llvm_entry
  store double %output2, double* %0
  call void @"sincos@FFF"(double* %0, double* %secsin, double* %seccos)
  %return = call double @"sinh@FF"(double %output3)
  %return8 = call double @"cosh@FF"(double %output3)
  %output10 = fmul double 2.000000e+00, %output2
  %return11 = call double @"cos@FF"(double %output10)
  %output13 = fmul double 2.000000e+00, %output3
  %return14 = call double @"cosh@FF"(double %output13)
  %output15 = fadd double %return11, %return14
  %output16 = call double @"div@FF"(double 2.000000e+00, double %output15)
  %w17 = load double, double* %w
  %output19 = fmul double %w17, %output16
  %seccos20 = load double, double* %seccos
  %output21 = fmul double %output19, %seccos20
  %output23 = fmul double %output21, %return8
  %tmp = load <2 x double>, <2 x double>* %p
  %return24 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output23, i64 0)
  %output26 = extractvalue { double, <2 x double> } %return24, 1
  store <2 x double> %output26, <2 x double>* %p
  %w27 = load double, double* %w
  %output29 = fmul double %w27, %output16
  %secsin30 = load double, double* %secsin
  %output31 = fmul double %output29, %secsin30
  %output33 = fmul double %output31, %return
  %return35 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output26, double %output33, i64 1)
  %output37 = extractvalue { double, <2 x double> } %return35, 1
  store <2 x double> %output37, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %output39 = fmul double %output2, 0x400921FB4D12D84A
  store double %output39, double* %0
  %output41 = fmul double %output3, 0x400921FB4D12D84A
  store double %output39, double* %1
  call void @"sincos@FFF"(double* %1, double* %secsin, double* %seccos)
  %return44 = call double @"sinh@FF"(double %output41)
  %return46 = call double @"cosh@FF"(double %output41)
  %w47 = load double, double* %w
  %x48 = load double, double* %0
  %output49 = fmul double 2.000000e+00, %x48
  %return50 = call double @"cos@FF"(double %output49)
  %output52 = fmul double 2.000000e+00, %output41
  %return53 = call double @"cosh@FF"(double %output52)
  %output54 = fadd double %return50, %return53
  store double %output54, double* %2
  %Zeps = call double @"Zeps@FF"(double* %2)
  %output55 = call double @"div@FF"(double 2.000000e+00, double %Zeps)
  %output56 = fmul double %w47, %output55
  %seccos58 = load double, double* %seccos
  %output59 = fmul double %output56, %seccos58
  %output61 = fmul double %output59, %return46
  %tmp62 = load <2 x double>, <2 x double>* %p
  %return63 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp62, double %output61, i64 0)
  %output65 = extractvalue { double, <2 x double> } %return63, 1
  store <2 x double> %output65, <2 x double>* %p
  %secsin67 = load double, double* %secsin
  %output68 = fmul double %output56, %secsin67
  %output70 = fmul double %output68, %return44
  %return72 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output65, double %output70, i64 1)
  %output74 = extractvalue { double, <2 x double> } %return72, 1
  store <2 x double> %output74, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_CSC@IUUF"(i64* %f3c, <2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %csccos = alloca double
  %0 = alloca double
  %1 = alloca double
  %2 = alloca double
  %cscsin = alloca double
  store double 0.000000e+00, double* %cscsin, !vex-initializer-store !3
  store double 0.000000e+00, double* %csccos, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %f3c4 = load i64, i64* %f3c
  %3 = icmp ne i64 %f3c4, 0
  br i1 %3, label %true, label %false

true:                                             ; preds = %__llvm_entry
  store double %output2, double* %0
  call void @"sincos@FFF"(double* %0, double* %cscsin, double* %csccos)
  %return = call double @"sinh@FF"(double %output3)
  %return8 = call double @"cosh@FF"(double %output3)
  %output10 = fmul double 2.000000e+00, %output3
  %return11 = call double @"cosh@FF"(double %output10)
  %output13 = fmul double 2.000000e+00, %output2
  %return14 = call double @"cos@FF"(double %output13)
  %output15 = fsub double %return11, %return14
  store double %output15, double* %1
  %Zeps = call double @"Zeps@FF"(double* %1)
  %output16 = call double @"div@FF"(double 2.000000e+00, double %Zeps)
  %w17 = load double, double* %w
  %output19 = fmul double %w17, %output16
  %cscsin20 = load double, double* %cscsin
  %output21 = fmul double %output19, %cscsin20
  %output23 = fmul double %output21, %return8
  %tmp = load <2 x double>, <2 x double>* %p
  %return24 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output23, i64 0)
  %output26 = extractvalue { double, <2 x double> } %return24, 1
  store <2 x double> %output26, <2 x double>* %p
  %w27 = load double, double* %w
  %output29 = fmul double %w27, %output16
  %csccos30 = load double, double* %csccos
  %output31 = fmul double %output29, %csccos30
  %output33 = fmul double %output31, %return
  %return34 = call double @"neg@FF"(double %output33)
  %return36 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output26, double %return34, i64 1)
  %output38 = extractvalue { double, <2 x double> } %return36, 1
  store <2 x double> %output38, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %output40 = fmul double %output2, 0x3FF921FB4D12D84A
  store double %output40, double* %0
  %output42 = fmul double %output3, 0x3FF921FB4D12D84A
  store double %output40, double* %2
  call void @"sincos@FFF"(double* %2, double* %cscsin, double* %csccos)
  %return45 = call double @"sinh@FF"(double %output42)
  %return47 = call double @"cosh@FF"(double %output42)
  %output49 = fmul double 2.000000e+00, %return45
  %output51 = fmul double %output49, %return45
  %output52 = fadd double 1.000000e+00, %output51
  %x53 = load double, double* %0
  %output54 = fmul double 2.000000e+00, %x53
  %return55 = call double @"cos@FF"(double %output54)
  %output56 = fsub double %output52, %return55
  %w57 = load double, double* %w
  %output58 = fmul double 2.000000e+00, %w57
  %output60 = call double @"div@FF"(double %output58, double %output56)
  %cscsin62 = load double, double* %cscsin
  %output63 = fmul double %output60, %cscsin62
  %output65 = fmul double %output63, %return47
  %tmp66 = load <2 x double>, <2 x double>* %p
  %return67 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp66, double %output65, i64 0)
  %output69 = extractvalue { double, <2 x double> } %return67, 1
  store <2 x double> %output69, <2 x double>* %p
  %csccos71 = load double, double* %csccos
  %output72 = fmul double %output60, %csccos71
  %output74 = fmul double %output72, %return45
  %return76 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output69, double %output74, i64 1)
  %output78 = extractvalue { double, <2 x double> } %return76, 1
  store <2 x double> %output78, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_COT@IUUF"(i64* %f3c, <2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %cotcos = alloca double
  %0 = alloca double
  %1 = alloca double
  %2 = alloca double
  %cotsin = alloca double
  store double 0.000000e+00, double* %cotsin, !vex-initializer-store !3
  store double 0.000000e+00, double* %cotcos, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %f3c4 = load i64, i64* %f3c
  %3 = icmp ne i64 %f3c4, 0
  br i1 %3, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output6 = fmul double 2.000000e+00, %output2
  store double %output6, double* %0
  call void @"sincos@FFF"(double* %0, double* %cotsin, double* %cotcos)
  %output8 = fmul double 2.000000e+00, %output3
  %return = call double @"sinh@FF"(double %output8)
  %return11 = call double @"cosh@FF"(double %output8)
  %cotcos13 = load double, double* %cotcos
  %output14 = fsub double %return11, %cotcos13
  %output15 = call double @"div@FF"(double 1.000000e+00, double %output14)
  %w16 = load double, double* %w
  %output18 = fmul double %w16, %output15
  %cotsin19 = load double, double* %cotsin
  %output20 = fmul double %output18, %cotsin19
  %tmp = load <2 x double>, <2 x double>* %p
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output20, i64 0)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  %w24 = load double, double* %w
  %output26 = fmul double %w24, %output15
  %return27 = call i64 @"neg@II"(i64 1)
  %cast = sitofp i64 %return27 to double
  %output28 = fmul double %output26, %cast
  %output30 = fmul double %output28, %return
  %return32 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output23, double %output30, i64 1)
  %output34 = extractvalue { double, <2 x double> } %return32, 1
  store <2 x double> %output34, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %output36 = fmul double %output2, 0x3FF921FB4D12D84A
  store double %output36, double* %0
  %output38 = fmul double %output3, 0x3FF921FB4D12D84A
  store double %output36, double* %1
  call void @"sincos@FFF"(double* %1, double* %cotsin, double* %cotcos)
  %return41 = call double @"sinh@FF"(double %output38)
  %return43 = call double @"cosh@FF"(double %output38)
  %w44 = load double, double* %w
  %cotcos46 = load double, double* %cotcos
  %output47 = fsub double %return43, %cotcos46
  store double %output47, double* %2
  %Zeps = call double @"Zeps@FF"(double* %2)
  %output48 = call double @"div@FF"(double %w44, double %Zeps)
  %cotsin50 = load double, double* %cotsin
  %output51 = fmul double %output48, %cotsin50
  %tmp52 = load <2 x double>, <2 x double>* %p
  %return53 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp52, double %output51, i64 0)
  %output55 = extractvalue { double, <2 x double> } %return53, 1
  store <2 x double> %output55, <2 x double>* %p
  %output58 = fmul double %output48, %return41
  %return60 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output55, double %output58, i64 1)
  %output62 = extractvalue { double, <2 x double> } %return60, 1
  store <2 x double> %output62, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SINH@IUUF"(i64* %f3c, <2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %sinhcos = alloca double
  %0 = alloca double
  %1 = alloca double
  %sinhsin = alloca double
  store double 0.000000e+00, double* %sinhsin, !vex-initializer-store !3
  store double 0.000000e+00, double* %sinhcos, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %f3c4 = load i64, i64* %f3c
  %2 = icmp ne i64 %f3c4, 0
  br i1 %2, label %true, label %false

true:                                             ; preds = %__llvm_entry
  store double %output3, double* %0
  call void @"sincos@FFF"(double* %0, double* %sinhsin, double* %sinhcos)
  %return = call double @"sinh@FF"(double %output2)
  %return8 = call double @"cosh@FF"(double %output2)
  %w9 = load double, double* %w
  %output11 = fmul double %w9, %return
  %sinhcos12 = load double, double* %sinhcos
  %output13 = fmul double %output11, %sinhcos12
  %tmp = load <2 x double>, <2 x double>* %p
  %return14 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output13, i64 0)
  %output16 = extractvalue { double, <2 x double> } %return14, 1
  store <2 x double> %output16, <2 x double>* %p
  %w17 = load double, double* %w
  %output19 = fmul double %w17, %return8
  %sinhsin20 = load double, double* %sinhsin
  %output21 = fmul double %output19, %sinhsin20
  %return23 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output16, double %output21, i64 1)
  %output25 = extractvalue { double, <2 x double> } %return23, 1
  store <2 x double> %output25, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %output27 = fmul double %output2, 7.853981e-01
  store double %output27, double* %0
  %output29 = fmul double %output3, 7.853981e-01
  store double %output29, double* %1
  call void @"sincos@FFF"(double* %1, double* %sinhsin, double* %sinhcos)
  %x31 = load double, double* %0
  %return32 = call double @"sinh@FF"(double %x31)
  %return34 = call double @"cosh@FF"(double %x31)
  %w35 = load double, double* %w
  %output37 = fmul double %w35, %return32
  %sinhcos38 = load double, double* %sinhcos
  %output39 = fmul double %output37, %sinhcos38
  %tmp40 = load <2 x double>, <2 x double>* %p
  %return41 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp40, double %output39, i64 0)
  %output43 = extractvalue { double, <2 x double> } %return41, 1
  store <2 x double> %output43, <2 x double>* %p
  %w44 = load double, double* %w
  %output46 = fmul double %w44, %return34
  %sinhsin47 = load double, double* %sinhsin
  %output48 = fmul double %output46, %sinhsin47
  %return50 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output43, double %output48, i64 1)
  %output52 = extractvalue { double, <2 x double> } %return50, 1
  store <2 x double> %output52, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_COSH@IUUF"(i64* %f3c, <2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %coshcos = alloca double
  %0 = alloca double
  %1 = alloca double
  %coshsin = alloca double
  store double 0.000000e+00, double* %coshsin, !vex-initializer-store !3
  store double 0.000000e+00, double* %coshcos, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %f3c4 = load i64, i64* %f3c
  %2 = icmp ne i64 %f3c4, 0
  br i1 %2, label %true, label %false

true:                                             ; preds = %__llvm_entry
  store double %output3, double* %0
  call void @"sincos@FFF"(double* %0, double* %coshsin, double* %coshcos)
  %return = call double @"sinh@FF"(double %output2)
  %return8 = call double @"cosh@FF"(double %output2)
  %w9 = load double, double* %w
  %output11 = fmul double %w9, %return8
  %coshcos12 = load double, double* %coshcos
  %output13 = fmul double %output11, %coshcos12
  %tmp = load <2 x double>, <2 x double>* %p
  %return14 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output13, i64 0)
  %output16 = extractvalue { double, <2 x double> } %return14, 1
  store <2 x double> %output16, <2 x double>* %p
  %w17 = load double, double* %w
  %output19 = fmul double %w17, %return
  %coshsin20 = load double, double* %coshsin
  %output21 = fmul double %output19, %coshsin20
  %return23 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output16, double %output21, i64 1)
  %output25 = extractvalue { double, <2 x double> } %return23, 1
  store <2 x double> %output25, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %output27 = fmul double %output2, 0x3FF921FB4D12D84A
  store double %output27, double* %0
  %output29 = fmul double %output3, 0x3FF921FB4D12D84A
  store double %output29, double* %1
  call void @"sincos@FFF"(double* %1, double* %coshsin, double* %coshcos)
  %x31 = load double, double* %0
  %return32 = call double @"sinh@FF"(double %x31)
  %return34 = call double @"cosh@FF"(double %x31)
  %w35 = load double, double* %w
  %output37 = fmul double %w35, %return34
  %coshcos38 = load double, double* %coshcos
  %output39 = fmul double %output37, %coshcos38
  %tmp40 = load <2 x double>, <2 x double>* %p
  %return41 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp40, double %output39, i64 0)
  %output43 = extractvalue { double, <2 x double> } %return41, 1
  store <2 x double> %output43, <2 x double>* %p
  %w44 = load double, double* %w
  %output46 = fmul double %w44, %return32
  %coshsin47 = load double, double* %coshsin
  %output48 = fmul double %output46, %coshsin47
  %return50 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output43, double %output48, i64 1)
  %output52 = extractvalue { double, <2 x double> } %return50, 1
  store <2 x double> %output52, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_TANH@IUUF"(i64* %f3c, <2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %tanhcos = alloca double
  %0 = alloca double
  %1 = alloca double
  %2 = alloca double
  %3 = alloca double
  %tanhsin = alloca double
  store double 0.000000e+00, double* %tanhsin, !vex-initializer-store !3
  store double 0.000000e+00, double* %tanhcos, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %f3c4 = load i64, i64* %f3c
  %4 = icmp ne i64 %f3c4, 0
  br i1 %4, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output6 = fmul double 2.000000e+00, %output3
  store double %output6, double* %0
  call void @"sincos@FFF"(double* %0, double* %tanhsin, double* %tanhcos)
  %output8 = fmul double 2.000000e+00, %output2
  %return = call double @"sinh@FF"(double %output8)
  %return11 = call double @"cosh@FF"(double %output8)
  %tanhcos12 = load double, double* %tanhcos
  %output14 = fadd double %tanhcos12, %return11
  store double %output14, double* %1
  %Zeps = call double @"Zeps@FF"(double* %1)
  %output15 = call double @"div@FF"(double 1.000000e+00, double %Zeps)
  %w16 = load double, double* %w
  %output18 = fmul double %w16, %output15
  %output20 = fmul double %output18, %return
  %tmp = load <2 x double>, <2 x double>* %p
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output20, i64 0)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  %w24 = load double, double* %w
  %output26 = fmul double %w24, %output15
  %tanhsin27 = load double, double* %tanhsin
  %output28 = fmul double %output26, %tanhsin27
  %return30 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output23, double %output28, i64 1)
  %output32 = extractvalue { double, <2 x double> } %return30, 1
  store <2 x double> %output32, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %output34 = fmul double %output2, 0x3FF921FB4D12D84A
  store double %output34, double* %0
  %output36 = fmul double %output3, 0x3FF921FB4D12D84A
  store double %output36, double* %2
  call void @"sincos@FFF"(double* %2, double* %tanhsin, double* %tanhcos)
  %x38 = load double, double* %0
  %return39 = call double @"sinh@FF"(double %x38)
  %return41 = call double @"cosh@FF"(double %x38)
  %w42 = load double, double* %w
  %tanhcos43 = load double, double* %tanhcos
  %output45 = fadd double %tanhcos43, %return41
  store double %output45, double* %3
  %Zeps46 = call double @"Zeps@FF"(double* %3)
  %output47 = call double @"div@FF"(double %w42, double %Zeps46)
  %output50 = fmul double %output47, %return39
  %tmp51 = load <2 x double>, <2 x double>* %p
  %return52 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp51, double %output50, i64 0)
  %output54 = extractvalue { double, <2 x double> } %return52, 1
  store <2 x double> %output54, <2 x double>* %p
  %tanhsin56 = load double, double* %tanhsin
  %output57 = fmul double %output47, %tanhsin56
  %return59 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output54, double %output57, i64 1)
  %output61 = extractvalue { double, <2 x double> } %return59, 1
  store <2 x double> %output61, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_SECH@IUUF"(i64* %f3c, <2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %sechcos = alloca double
  %0 = alloca double
  %1 = alloca double
  %2 = alloca double
  %3 = alloca double
  %sechsin = alloca double
  store double 0.000000e+00, double* %sechsin, !vex-initializer-store !3
  store double 0.000000e+00, double* %sechcos, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %f3c4 = load i64, i64* %f3c
  %4 = icmp ne i64 %f3c4, 0
  br i1 %4, label %true, label %false

true:                                             ; preds = %__llvm_entry
  store double %output3, double* %0
  call void @"sincos@FFF"(double* %0, double* %sechsin, double* %sechcos)
  %return = call double @"sinh@FF"(double %output2)
  %return8 = call double @"cosh@FF"(double %output2)
  %output10 = fmul double 2.000000e+00, %output3
  %return11 = call double @"cos@FF"(double %output10)
  %output13 = fmul double 2.000000e+00, %output2
  %return14 = call double @"cosh@FF"(double %output13)
  %output15 = fadd double %return11, %return14
  store double %output15, double* %1
  %Zeps = call double @"Zeps@FF"(double* %1)
  %output16 = call double @"div@FF"(double 2.000000e+00, double %Zeps)
  %w17 = load double, double* %w
  %output19 = fmul double %w17, %output16
  %sechcos20 = load double, double* %sechcos
  %output21 = fmul double %output19, %sechcos20
  %output23 = fmul double %output21, %return8
  %tmp = load <2 x double>, <2 x double>* %p
  %return24 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output23, i64 0)
  %output26 = extractvalue { double, <2 x double> } %return24, 1
  store <2 x double> %output26, <2 x double>* %p
  %w27 = load double, double* %w
  %output29 = fmul double %w27, %output16
  %sechsin30 = load double, double* %sechsin
  %output31 = fmul double %output29, %sechsin30
  %output33 = fmul double %output31, %return
  %return34 = call double @"neg@FF"(double %output33)
  %return36 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output26, double %return34, i64 1)
  %output38 = extractvalue { double, <2 x double> } %return36, 1
  store <2 x double> %output38, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %output40 = fmul double %output2, 7.853981e-01
  store double %output40, double* %0
  %output42 = fmul double %output3, 7.853981e-01
  store double %output42, double* %2
  call void @"sincos@FFF"(double* %2, double* %sechsin, double* %sechcos)
  %x44 = load double, double* %0
  %return45 = call double @"sinh@FF"(double %x44)
  %return47 = call double @"cosh@FF"(double %x44)
  %w48 = load double, double* %w
  %output50 = fmul double %output42, 2.000000e+00
  %return51 = call double @"cos@FF"(double %output50)
  %output53 = fmul double %x44, 2.000000e+00
  %return54 = call double @"cosh@FF"(double %output53)
  %output55 = fadd double %return51, %return54
  store double %output55, double* %3
  %Zeps56 = call double @"Zeps@FF"(double* %3)
  %output57 = call double @"div@FF"(double 2.000000e+00, double %Zeps56)
  %output58 = fmul double %w48, %output57
  %sechcos60 = load double, double* %sechcos
  %output61 = fmul double %output58, %sechcos60
  %output63 = fmul double %output61, %return47
  %tmp64 = load <2 x double>, <2 x double>* %p
  %return65 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp64, double %output63, i64 0)
  %output67 = extractvalue { double, <2 x double> } %return65, 1
  store <2 x double> %output67, <2 x double>* %p
  %sechsin69 = load double, double* %sechsin
  %output70 = fmul double %output58, %sechsin69
  %output72 = fmul double %output70, %return45
  %return74 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output67, double %output72, i64 1)
  %output76 = extractvalue { double, <2 x double> } %return74, 1
  store <2 x double> %output76, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_CSCH@IUUF"(i64* %f3c, <2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %cschcos = alloca double
  %0 = alloca double
  %1 = alloca double
  %2 = alloca double
  %3 = alloca double
  %cschsin = alloca double
  store double 0.000000e+00, double* %cschsin, !vex-initializer-store !3
  store double 0.000000e+00, double* %cschcos, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %f3c4 = load i64, i64* %f3c
  %4 = icmp ne i64 %f3c4, 0
  br i1 %4, label %true, label %false

true:                                             ; preds = %__llvm_entry
  store double %output3, double* %0
  call void @"sincos@FFF"(double* %0, double* %cschsin, double* %cschcos)
  %return = call double @"sinh@FF"(double %output2)
  %return8 = call double @"cosh@FF"(double %output2)
  %output10 = fmul double 2.000000e+00, %output2
  %return11 = call double @"cosh@FF"(double %output10)
  %output13 = fmul double 2.000000e+00, %output3
  %return14 = call double @"cos@FF"(double %output13)
  %output15 = fsub double %return11, %return14
  store double %output15, double* %1
  %Zeps = call double @"Zeps@FF"(double* %1)
  %output16 = call double @"div@FF"(double 2.000000e+00, double %Zeps)
  %w17 = load double, double* %w
  %output19 = fmul double %w17, %output16
  %output21 = fmul double %output19, %return
  %cschcos22 = load double, double* %cschcos
  %output23 = fmul double %output21, %cschcos22
  %tmp = load <2 x double>, <2 x double>* %p
  %return24 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output23, i64 0)
  %output26 = extractvalue { double, <2 x double> } %return24, 1
  store <2 x double> %output26, <2 x double>* %p
  %w27 = load double, double* %w
  %output29 = fmul double %w27, %output16
  %output31 = fmul double %output29, %return8
  %cschsin32 = load double, double* %cschsin
  %output33 = fmul double %output31, %cschsin32
  %return34 = call double @"neg@FF"(double %output33)
  %return36 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output26, double %return34, i64 1)
  %output38 = extractvalue { double, <2 x double> } %return36, 1
  store <2 x double> %output38, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %output40 = fmul double %output2, 7.853981e-01
  store double %output40, double* %0
  %output42 = fmul double %output3, 7.853981e-01
  store double %output42, double* %2
  call void @"sincos@FFF"(double* %2, double* %cschsin, double* %cschcos)
  %x44 = load double, double* %0
  %return45 = call double @"sinh@FF"(double %x44)
  %return47 = call double @"cosh@FF"(double %x44)
  %w48 = load double, double* %w
  %output50 = fmul double 2.000000e+00, %x44
  %return51 = call double @"cosh@FF"(double %output50)
  %output53 = fmul double 2.000000e+00, %output42
  %return54 = call double @"cos@FF"(double %output53)
  %output55 = fsub double %return51, %return54
  store double %output55, double* %3
  %Zeps56 = call double @"Zeps@FF"(double* %3)
  %output57 = call double @"div@FF"(double 2.000000e+00, double %Zeps56)
  %output58 = fmul double %w48, %output57
  %output61 = fmul double %output58, %return45
  %cschcos62 = load double, double* %cschcos
  %output63 = fmul double %output61, %cschcos62
  %tmp64 = load <2 x double>, <2 x double>* %p
  %return65 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp64, double %output63, i64 0)
  %output67 = extractvalue { double, <2 x double> } %return65, 1
  store <2 x double> %output67, <2 x double>* %p
  %output70 = fmul double %output58, %return47
  %cschsin71 = load double, double* %cschsin
  %output72 = fmul double %output70, %cschsin71
  %return74 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output67, double %output72, i64 1)
  %output76 = extractvalue { double, <2 x double> } %return74, 1
  store <2 x double> %output76, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_COTH@IUUF"(i64* %f3c, <2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %cothcos = alloca double
  %0 = alloca double
  %1 = alloca double
  %2 = alloca double
  %3 = alloca double
  %cothsin = alloca double
  store double 0.000000e+00, double* %cothsin, !vex-initializer-store !3
  store double 0.000000e+00, double* %cothcos, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %f3c4 = load i64, i64* %f3c
  %4 = icmp ne i64 %f3c4, 0
  br i1 %4, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output6 = fmul double 2.000000e+00, %output3
  store double %output6, double* %0
  call void @"sincos@FFF"(double* %0, double* %cothsin, double* %cothcos)
  %output8 = fmul double 2.000000e+00, %output2
  %return = call double @"sinh@FF"(double %output8)
  %return11 = call double @"cosh@FF"(double %output8)
  %cothcos13 = load double, double* %cothcos
  %output14 = fsub double %return11, %cothcos13
  store double %output14, double* %1
  %Zeps = call double @"Zeps@FF"(double* %1)
  %output15 = call double @"div@FF"(double 1.000000e+00, double %Zeps)
  %w16 = load double, double* %w
  %output18 = fmul double %w16, %output15
  %output20 = fmul double %output18, %return
  %tmp = load <2 x double>, <2 x double>* %p
  %return21 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output20, i64 0)
  %output23 = extractvalue { double, <2 x double> } %return21, 1
  store <2 x double> %output23, <2 x double>* %p
  %w24 = load double, double* %w
  %output26 = fmul double %w24, %output15
  %cothsin27 = load double, double* %cothsin
  %output28 = fmul double %output26, %cothsin27
  %return30 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output23, double %output28, i64 1)
  %output32 = extractvalue { double, <2 x double> } %return30, 1
  store <2 x double> %output32, <2 x double>* %p
  br label %end

false:                                            ; preds = %__llvm_entry
  %output34 = fmul double %output2, 0x3FF921FB4D12D84A
  store double %output34, double* %0
  %output36 = fmul double %output3, 0x3FF921FB4D12D84A
  store double %output36, double* %2
  call void @"sincos@FFF"(double* %2, double* %cothsin, double* %cothcos)
  %x38 = load double, double* %0
  %return39 = call double @"sinh@FF"(double %x38)
  %return41 = call double @"cosh@FF"(double %x38)
  %w42 = load double, double* %w
  %cothcos44 = load double, double* %cothcos
  %output45 = fsub double %return41, %cothcos44
  store double %output45, double* %3
  %Zeps46 = call double @"Zeps@FF"(double* %3)
  %output47 = call double @"div@FF"(double %w42, double %Zeps46)
  %output50 = fmul double %output47, %return39
  %tmp51 = load <2 x double>, <2 x double>* %p
  %return52 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp51, double %output50, i64 0)
  %output54 = extractvalue { double, <2 x double> } %return52, 1
  store <2 x double> %output54, <2 x double>* %p
  %cothsin56 = load double, double* %cothsin
  %output57 = fmul double %output47, %cothsin56
  %return59 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output54, double %output57, i64 1)
  %output61 = extractvalue { double, <2 x double> } %return59, 1
  store <2 x double> %output61, <2 x double>* %p
  br label %end

end:                                              ; preds = %false, %true
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_AUGER@UUFP"(<2 x double>* %p, <2 x double>* %_p, double* %w, <4 x double>* %auger) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %auger4 = load <4 x double>, <4 x double>* %auger
  %output5 = call { double, double, double, double } @"assign@FFFFP"(<4 x double> %auger4)
  %output6 = extractvalue { double, double, double, double } %output5, 0
  %output7 = extractvalue { double, double, double, double } %output5, 1
  %output8 = extractvalue { double, double, double, double } %output5, 2
  %output9 = extractvalue { double, double, double, double } %output5, 3
  %output11 = call double @"div@FF"(double %output7, double 2.000000e+00)
  %output14 = fmul double %output6, %output2
  %return = call double @"sin@FF"(double %output14)
  %output17 = fmul double %output6, %output3
  %return18 = call double @"sin@FF"(double %output17)
  %output23 = fmul double %output11, %return18
  %return25 = call double @"abs@FF"(double %output2)
  %output27 = fmul double %return25, %return18
  %output28 = fadd double %output23, %output27
  %output29 = fmul double %output9, %output28
  %output30 = fadd double %output2, %output29
  %output35 = fmul double %output11, %return
  %return37 = call double @"abs@FF"(double %output3)
  %output39 = fmul double %return37, %return
  %output40 = fadd double %output35, %output39
  %output41 = fmul double %output9, %output40
  %output42 = fadd double %output3, %output41
  %w43 = load double, double* %w
  %output48 = fsub double %output30, %output2
  %output49 = fmul double %output8, %output48
  %output50 = fadd double %output2, %output49
  %output51 = fmul double %w43, %output50
  %tmp = load <2 x double>, <2 x double>* %p
  %return52 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output51, i64 0)
  %output54 = extractvalue { double, <2 x double> } %return52, 1
  store <2 x double> %output54, <2 x double>* %p
  %w55 = load double, double* %w
  %output57 = fmul double %w55, %output42
  %return59 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output54, double %output57, i64 1)
  %output61 = extractvalue { double, <2 x double> } %return59, 1
  store <2 x double> %output61, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_FLUX@UUFF"(<2 x double>* %p, <2 x double>* %_p, double* %w, double* %spread) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %w5 = load double, double* %w
  %output6 = fadd double %output2, %w5
  %output9 = fsub double %output2, %w5
  %spread11 = load double, double* %spread
  %output12 = fadd double 2.000000e+00, %spread11
  %output13 = fmul double %w5, %output12
  %output16 = fmul double %output3, %output3
  %output19 = fmul double %output6, %output6
  %output20 = fadd double %output16, %output19
  %return = call double @"sqrt@FF"(double %output20)
  %output26 = fmul double %output9, %output9
  %output27 = fadd double %output16, %output26
  %return28 = call double @"sqrt@FF"(double %output27)
  %output29 = call double @"div@FF"(double %return, double %return28)
  %return30 = call double @"sqrt@FF"(double %output29)
  %output31 = fmul double %output13, %return30
  %return34 = call double @"atan2@FFF"(double %output3, double %output9)
  %return37 = call double @"atan2@FFF"(double %output3, double %output6)
  %output38 = fsub double %return34, %return37
  %output39 = fmul double %output38, 5.000000e-01
  %return42 = call double @"cos@FF"(double %output39)
  %output43 = fmul double %output31, %return42
  %tmp = load <2 x double>, <2 x double>* %p
  %return44 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output43, i64 0)
  %output46 = extractvalue { double, <2 x double> } %return44, 1
  store <2 x double> %output46, <2 x double>* %p
  %return49 = call double @"sin@FF"(double %output39)
  %output50 = fmul double %output31, %return49
  %return52 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output46, double %output50, i64 1)
  %output54 = extractvalue { double, <2 x double> } %return52, 1
  store <2 x double> %output54, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_MOBIUS@UUFPP"(<2 x double>* %p, <2 x double>* %_p, double* %w, <4 x double>* %re, <4 x double>* %im) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %re4 = load <4 x double>, <4 x double>* %re
  %output5 = call { double, double, double, double } @"assign@FFFFP"(<4 x double> %re4)
  %output6 = extractvalue { double, double, double, double } %output5, 0
  %output7 = extractvalue { double, double, double, double } %output5, 1
  %output8 = extractvalue { double, double, double, double } %output5, 2
  %output9 = extractvalue { double, double, double, double } %output5, 3
  %im10 = load <4 x double>, <4 x double>* %im
  %output11 = call { double, double, double, double } @"assign@FFFFP"(<4 x double> %im10)
  %output12 = extractvalue { double, double, double, double } %output11, 0
  %output13 = extractvalue { double, double, double, double } %output11, 1
  %output14 = extractvalue { double, double, double, double } %output11, 2
  %output15 = extractvalue { double, double, double, double } %output11, 3
  %output18 = fmul double %output6, %output2
  %output21 = fmul double %output12, %output3
  %output22 = fsub double %output18, %output21
  %output24 = fadd double %output22, %output7
  %output27 = fmul double %output6, %output3
  %output30 = fmul double %output12, %output2
  %output31 = fadd double %output27, %output30
  %output33 = fadd double %output31, %output13
  %output36 = fmul double %output8, %output2
  %output39 = fmul double %output14, %output3
  %output40 = fsub double %output36, %output39
  %output42 = fadd double %output40, %output9
  %output45 = fmul double %output8, %output3
  %output48 = fmul double %output14, %output2
  %output49 = fadd double %output45, %output48
  %output51 = fadd double %output49, %output15
  %w52 = load double, double* %w
  %output55 = fmul double %output42, %output42
  %output58 = fmul double %output51, %output51
  %output59 = fadd double %output55, %output58
  %output60 = call double @"div@FF"(double %w52, double %output59)
  %output64 = fmul double %output24, %output42
  %output67 = fmul double %output33, %output51
  %output68 = fadd double %output64, %output67
  %output69 = fmul double %output60, %output68
  %tmp = load <2 x double>, <2 x double>* %p
  %return = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output69, i64 0)
  %output71 = extractvalue { double, <2 x double> } %return, 1
  store <2 x double> %output71, <2 x double>* %p
  %output75 = fmul double %output33, %output42
  %output78 = fmul double %output24, %output51
  %output79 = fsub double %output75, %output78
  %output80 = fmul double %output60, %output79
  %return82 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output71, double %output80, i64 1)
  %output84 = extractvalue { double, <2 x double> } %return82, 1
  store <2 x double> %output84, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_CURVE@UUFUU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %l, <2 x double>* %a) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %w4 = load double, double* %w
  %output6 = fmul double %w4, %output2
  %a7 = load <2 x double>, <2 x double>* %a
  %return = call double @"getcomp@FUI"(<2 x double> %a7, i64 0)
  %return9 = call double @"neg@FF"(double %output3)
  %output11 = fmul double %return9, %output3
  %l12 = load <2 x double>, <2 x double>* %l
  %return13 = call double @"getcomp@FUI"(<2 x double> %l12, i64 0)
  %output14 = fmul double %output11, %return13
  %return15 = call double @"exp@FF"(double %output14)
  %output16 = fmul double %return, %return15
  %output17 = fadd double %output6, %output16
  %tmp = load <2 x double>, <2 x double>* %p
  %return18 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output17, i64 0)
  %output20 = extractvalue { double, <2 x double> } %return18, 1
  store <2 x double> %output20, <2 x double>* %p
  %w21 = load double, double* %w
  %output23 = fmul double %w21, %output3
  %a24 = load <2 x double>, <2 x double>* %a
  %return25 = call double @"getcomp@FUI"(<2 x double> %a24, i64 1)
  %return27 = call double @"neg@FF"(double %output2)
  %output29 = fmul double %return27, %output2
  %l30 = load <2 x double>, <2 x double>* %l
  %return31 = call double @"getcomp@FUI"(<2 x double> %l30, i64 1)
  %output32 = fmul double %output29, %return31
  %return33 = call double @"exp@FF"(double %output32)
  %output34 = fmul double %return25, %return33
  %output35 = fadd double %output23, %output34
  %return37 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output20, double %output35, i64 1)
  %output39 = extractvalue { double, <2 x double> } %return37, 1
  store <2 x double> %output39, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_PERSPECTIVE@UUFU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %persp) #1 {
__llvm_entry:
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %persp4 = load <2 x double>, <2 x double>* %persp
  %output5 = call { double, double } @"assign@FFU"(<2 x double> %persp4)
  %output6 = extractvalue { double, double } %output5, 0
  %output7 = extractvalue { double, double } %output5, 1
  %output9 = fmul double %output6, 0x400921FB4D12D84A
  %output10 = call double @"div@FF"(double %output9, double 2.000000e+00)
  %return = call double @"sin@FF"(double %output10)
  %return14 = call double @"cos@FF"(double %output10)
  %output15 = fmul double %output7, %return14
  %output19 = fmul double %output3, %return
  %output20 = fsub double %output7, %output19
  %output21 = call double @"div@FF"(double 1.000000e+00, double %output20)
  %w22 = load double, double* %w
  %output24 = fmul double %w22, %output7
  %output26 = fmul double %output24, %output2
  %output28 = fmul double %output26, %output21
  %tmp = load <2 x double>, <2 x double>* %p
  %return29 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output28, i64 0)
  %output31 = extractvalue { double, <2 x double> } %return29, 1
  store <2 x double> %output31, <2 x double>* %p
  %w32 = load double, double* %w
  %output34 = fmul double %w32, %output15
  %output36 = fmul double %output34, %output3
  %output38 = fmul double %output36, %output21
  %return40 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output31, double %output38, i64 1)
  %output42 = extractvalue { double, <2 x double> } %return40, 1
  store <2 x double> %output42, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_BWRAPS@UUFVU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <3 x double>* %bwraps, <2 x double>* %twist) #1 {
__llvm_entry:
  %ss = alloca double
  %cc = alloca double
  %0 = alloca double
  store double 0.000000e+00, double* %ss, !vex-initializer-store !3
  store double 0.000000e+00, double* %cc, !vex-initializer-store !3
  %bwraps1 = load <3 x double>, <3 x double>* %bwraps
  %output = call { double, double, double } @"assign@FFFV"(<3 x double> %bwraps1)
  %output2 = extractvalue { double, double, double } %output, 0
  %output3 = extractvalue { double, double, double } %output, 1
  %output4 = extractvalue { double, double, double } %output, 2
  %twist5 = load <2 x double>, <2 x double>* %twist
  %output6 = call { double, double } @"assign@FFU"(<2 x double> %twist5)
  %output7 = extractvalue { double, double } %output6, 0
  %output8 = extractvalue { double, double } %output6, 1
  %output12 = fmul double %output3, %output3
  %output13 = fadd double 1.000000e+00, %output12
  %output14 = call double @"div@FF"(double %output2, double %output13)
  %output15 = fmul double 5.000000e-01, %output14
  %return = call double @"sqrt@FF"(double %output4)
  %output18 = call double @"div@FF"(double %return, double %output2)
  %output19 = fadd double %output18, 1.000000e-06
  %output22 = fmul double %output19, %output15
  %return24 = fcmp ogt double %output22, 2.000000e+00
  br i1 %return24, label %end, label %false

false:                                            ; preds = %__llvm_entry
  %output30 = fmul double %output22, %output22
  %output31 = call double @"div@FF"(double %output30, double 4.000000e+00)
  %output32 = fadd double %output31, 1.000000e+00
  %output33 = call double @"div@FF"(double %output22, double %output32)
  br label %end

end:                                              ; preds = %__llvm_entry, %false
  %phi = phi double [ %output33, %false ], [ 1.000000e+00, %__llvm_entry ]
  %output36 = fmul double %output15, %output15
  %output39 = call double @"div@FF"(double %output15, double %phi)
  %_p40 = load <2 x double>, <2 x double>* %_p
  %return41 = call double @"getcomp@FUI"(<2 x double> %_p40, i64 0)
  %return43 = call double @"getcomp@FUI"(<2 x double> %_p40, i64 1)
  %return45 = fcmp oeq double %output2, 0.000000e+00
  br i1 %return45, label %true47, label %false48

true47:                                           ; preds = %end
  %w50 = load double, double* %w
  %output52 = fmul double %w50, %return41
  %tmp = load <2 x double>, <2 x double>* %p
  %return53 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output52, i64 0)
  %output55 = extractvalue { double, <2 x double> } %return53, 1
  store <2 x double> %output55, <2 x double>* %p
  %w56 = load double, double* %w
  %output58 = fmul double %w56, %return43
  %return60 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output55, double %output58, i64 1)
  %output62 = extractvalue { double, <2 x double> } %return60, 1
  store <2 x double> %output62, <2 x double>* %p
  br label %end49

false48:                                          ; preds = %end
  %output65 = call double @"div@FF"(double %return41, double %output2)
  %return66 = call double @"floor@FF"(double %output65)
  %output67 = fadd double %return66, 5.000000e-01
  %output69 = fmul double %output67, %output2
  %output72 = call double @"div@FF"(double %return43, double %output2)
  %return73 = call double @"floor@FF"(double %output72)
  %output74 = fadd double %return73, 5.000000e-01
  %output76 = fmul double %output74, %output2
  %output79 = fsub double %return41, %output69
  %output82 = fsub double %return43, %output76
  %output85 = fmul double %output79, %output79
  %output88 = fmul double %output82, %output82
  %output89 = fadd double %output85, %output88
  %return91 = fcmp ogt double %output89, %output36
  br i1 %return91, label %true93, label %false94

end49:                                            ; preds = %true93, %false94, %true47
  ret void

true93:                                           ; preds = %false48
  %w96 = load double, double* %w
  %output98 = fmul double %w96, %return41
  %tmp99 = load <2 x double>, <2 x double>* %p
  %return100 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp99, double %output98, i64 0)
  %output102 = extractvalue { double, <2 x double> } %return100, 1
  store <2 x double> %output102, <2 x double>* %p
  %w103 = load double, double* %w
  %output105 = fmul double %w103, %return43
  %return107 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output102, double %output105, i64 1)
  %output109 = extractvalue { double, <2 x double> } %return107, 1
  store <2 x double> %output109, <2 x double>* %p
  br label %end49

false94:                                          ; preds = %false48
  %output112 = fmul double %output79, %output19
  %output115 = fmul double %output82, %output19
  %output119 = fmul double %output112, %output112
  %output122 = fmul double %output115, %output115
  %output123 = fadd double %output119, %output122
  %output124 = call double @"div@FF"(double %output123, double 4.000000e+00)
  %output125 = fadd double %output124, 1.000000e+00
  %output126 = call double @"div@FF"(double %output39, double %output125)
  %output129 = fmul double %output112, %output126
  %output132 = fmul double %output115, %output126
  %output135 = fmul double %output129, %output129
  %output138 = fmul double %output132, %output132
  %output139 = fadd double %output135, %output138
  %output141 = call double @"div@FF"(double %output139, double %output36)
  %output144 = fsub double 1.000000e+00, %output141
  %output145 = fmul double %output7, %output144
  %output148 = fmul double %output8, %output141
  %output149 = fadd double %output145, %output148
  store double %output149, double* %0
  call void @"sincos@FFF"(double* %0, double* %ss, double* %cc)
  %cc152 = load double, double* %cc
  %output154 = fmul double %cc152, %output129
  %output155 = fadd double %output69, %output154
  %ss156 = load double, double* %ss
  %output158 = fmul double %ss156, %output132
  %output159 = fadd double %output155, %output158
  %output163 = fmul double %ss156, %output129
  %output164 = fsub double %output76, %output163
  %output167 = fmul double %cc152, %output132
  %output168 = fadd double %output164, %output167
  %w169 = load double, double* %w
  %output171 = fmul double %w169, %output159
  %tmp172 = load <2 x double>, <2 x double>* %p
  %return173 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp172, double %output171, i64 0)
  %output175 = extractvalue { double, <2 x double> } %return173, 1
  store <2 x double> %output175, <2 x double>* %p
  %w176 = load double, double* %w
  %output178 = fmul double %w176, %output168
  %return180 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output175, double %output178, i64 1)
  %output182 = extractvalue { double, <2 x double> } %return180, 1
  store <2 x double> %output182, <2 x double>* %p
  br label %end49
}

; Function Attrs: alwaysinline nounwind
define private void @"V_HEMISPHERE@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %w4 = load double, double* %w
  %_p5 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p5, <2 x double>* %0
  %SUMSQ = call double @"SUMSQ@FU"(<2 x double>* %0)
  %output6 = fadd double %SUMSQ, 1.000000e+00
  %return = call double @"sqrt@FF"(double %output6)
  %output7 = call double @"div@FF"(double %w4, double %return)
  %output10 = fmul double %output2, %output7
  %tmp = load <2 x double>, <2 x double>* %p
  %return11 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output10, i64 0)
  %output13 = extractvalue { double, <2 x double> } %return11, 1
  store <2 x double> %output13, <2 x double>* %p
  %output16 = fmul double %output3, %output7
  %return18 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output13, double %output16, i64 1)
  %output20 = extractvalue { double, <2 x double> } %return18, 1
  store <2 x double> %output20, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_POLYNOMIAL@UUFUUU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <2 x double>* %pow, <2 x double>* %lc, <2 x double>* %sc) #1 {
__llvm_entry:
  %0 = alloca double
  %1 = alloca double
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %pow4 = load <2 x double>, <2 x double>* %pow
  %output5 = call { double, double } @"assign@FFU"(<2 x double> %pow4)
  %output6 = extractvalue { double, double } %output5, 0
  %output7 = extractvalue { double, double } %output5, 1
  %lc8 = load <2 x double>, <2 x double>* %lc
  %output9 = call { double, double } @"assign@FFU"(<2 x double> %lc8)
  %output10 = extractvalue { double, double } %output9, 0
  %output11 = extractvalue { double, double } %output9, 1
  %sc12 = load <2 x double>, <2 x double>* %sc
  %output13 = call { double, double } @"assign@FFU"(<2 x double> %sc12)
  %output14 = extractvalue { double, double } %output13, 0
  %output15 = extractvalue { double, double } %output13, 1
  %w16 = load double, double* %w
  %return = call double @"abs@FF"(double %w16)
  %return18 = call double @"abs@FF"(double %output2)
  %output19 = fmul double %return, %return18
  %return21 = call double @"pow@FFF"(double %output19, double %output6)
  %w22 = load double, double* %w
  %return23 = call double @"abs@FF"(double %w22)
  %return25 = call double @"abs@FF"(double %output3)
  %output26 = fmul double %return23, %return25
  %return28 = call double @"pow@FFF"(double %output26, double %output7)
  store double %output2, double* %0
  %sgn = call double @"sgn@FF"(double* %0)
  %output31 = fmul double %return21, %sgn
  %output34 = fmul double %output10, %output2
  %output35 = fadd double %output31, %output34
  %output37 = fadd double %output35, %output14
  %tmp = load <2 x double>, <2 x double>* %p
  %return38 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output37, i64 0)
  %output40 = extractvalue { double, <2 x double> } %return38, 1
  store <2 x double> %output40, <2 x double>* %p
  store double %output3, double* %1
  %sgn43 = call double @"sgn@FF"(double* %1)
  %output44 = fmul double %return28, %sgn43
  %output47 = fmul double %output11, %output3
  %output48 = fadd double %output44, %output47
  %output50 = fadd double %output48, %output15
  %tmp51 = load <2 x double>, <2 x double>* %p
  %return52 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp51, double %output50, i64 1)
  %output54 = extractvalue { double, <2 x double> } %return52, 1
  store <2 x double> %output54, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_CROP@UUFPU"(<2 x double>* %p, <2 x double>* %_p, double* %w, <4 x double>* %ltrb, <2 x double>* %az) #1 {
__llvm_entry:
  %ltrb1 = load <4 x double>, <4 x double>* %ltrb
  %output = call { double, double, double, double } @"assign@FFFFP"(<4 x double> %ltrb1)
  %output2 = extractvalue { double, double, double, double } %output, 0
  %output3 = extractvalue { double, double, double, double } %output, 1
  %output4 = extractvalue { double, double, double, double } %output, 2
  %output5 = extractvalue { double, double, double, double } %output, 3
  %az6 = load <2 x double>, <2 x double>* %az
  %output7 = call { double, double } @"assign@FFU"(<2 x double> %az6)
  %output8 = extractvalue { double, double } %output7, 0
  %output9 = extractvalue { double, double } %output7, 1
  %return = fcmp olt double %output2, %output4
  br i1 %return, label %true, label %false

true:                                             ; preds = %__llvm_entry
  br label %end

false:                                            ; preds = %__llvm_entry
  br label %end

end:                                              ; preds = %false, %true
  %m_X0_.0 = phi double [ %output2, %true ], [ %output4, %false ]
  %m_X1_.0 = phi double [ %output4, %true ], [ %output2, %false ]
  %return19 = fcmp olt double %output3, %output5
  br i1 %return19, label %true21, label %false22

true21:                                           ; preds = %end
  br label %end23

false22:                                          ; preds = %end
  br label %end23

end23:                                            ; preds = %false22, %true21
  %m_Y0_.0 = phi double [ %output3, %true21 ], [ %output5, %false22 ]
  %m_Y1_.0 = phi double [ %output5, %true21 ], [ %output3, %false22 ]
  %output30 = fsub double %m_X1_.0, %m_X0_.0
  %output31 = fmul double %output30, 5.000000e-01
  %output33 = fmul double %output31, %output8
  %output36 = fsub double %m_Y1_.0, %m_Y0_.0
  %output37 = fmul double %output36, 5.000000e-01
  %output39 = fmul double %output37, %output8
  %_p40 = load <2 x double>, <2 x double>* %_p
  %return41 = call double @"getcomp@FUI"(<2 x double> %_p40, i64 0)
  %return43 = call double @"getcomp@FUI"(<2 x double> %_p40, i64 1)
  %return46 = fcmp olt double %return41, %m_X0_.0
  %return47 = zext i1 %return46 to i64
  %return50 = fcmp ogt double %return41, %m_X1_.0
  %return51 = zext i1 %return50 to i64
  %return52 = call i64 @"or@III"(i64 %return47, i64 %return51)
  %return55 = fcmp olt double %return43, %m_Y0_.0
  %return56 = zext i1 %return55 to i64
  %return57 = call i64 @"or@III"(i64 %return52, i64 %return56)
  %return60 = fcmp ogt double %return43, %m_Y1_.0
  %return61 = zext i1 %return60 to i64
  %return62 = call i64 @"or@III"(i64 %return57, i64 %return61)
  %return64 = fcmp one double %output9, 0.000000e+00
  %return65 = zext i1 %return64 to i64
  %return66 = call i64 @"and@III"(i64 %return62, i64 %return65)
  %0 = icmp ne i64 %return66, 0
  br i1 %0, label %true67, label %false68

true67:                                           ; preds = %end23
  br label %end69

false68:                                          ; preds = %end23
  br i1 %return46, label %true74, label %false75

end69:                                            ; preds = %false98, %true109, %true97, %true67
  %x.0 = phi double [ 0.000000e+00, %true67 ], [ %x.1, %true97 ], [ %x.1, %true109 ], [ %x.1, %false98 ]
  %y.0 = phi double [ 0.000000e+00, %true67 ], [ %output104, %true97 ], [ %output115, %true109 ], [ %return43, %false98 ]
  %w116 = load double, double* %w
  %output118 = fmul double %w116, %x.0
  %tmp = load <2 x double>, <2 x double>* %p
  %return119 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output118, i64 0)
  %output121 = extractvalue { double, <2 x double> } %return119, 1
  store <2 x double> %output121, <2 x double>* %p
  %w122 = load double, double* %w
  %output124 = fmul double %w122, %y.0
  %return126 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output121, double %output124, i64 1)
  %output128 = extractvalue { double, <2 x double> } %return126, 1
  store <2 x double> %output128, <2 x double>* %p
  ret void

true74:                                           ; preds = %false68
  %return78 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output80 = fmul double %return78, %output33
  %output81 = fadd double %m_X0_.0, %output80
  br label %end76

false75:                                          ; preds = %false68
  br i1 %return50, label %true86, label %end76

end76:                                            ; preds = %false75, %true86, %true74
  %x.1 = phi double [ %output81, %true74 ], [ %output92, %true86 ], [ %return41, %false75 ]
  br i1 %return55, label %true97, label %false98

true86:                                           ; preds = %false75
  %return89 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output91 = fmul double %return89, %output33
  %output92 = fsub double %m_X1_.0, %output91
  br label %end76

true97:                                           ; preds = %end76
  %return101 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output103 = fmul double %return101, %output39
  %output104 = fadd double %m_Y0_.0, %output103
  br label %end69

false98:                                          ; preds = %end76
  br i1 %return60, label %true109, label %end69

true109:                                          ; preds = %false98
  %return112 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output114 = fmul double %return112, %output39
  %output115 = fsub double %m_Y1_.0, %output114
  br label %end69
}

; Function Attrs: alwaysinline nounwind
define private void @"V_UNPOLAR@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %s = alloca double
  %c = alloca double
  %0 = alloca double
  store double 0.000000e+00, double* %s, !vex-initializer-store !3
  store double 0.000000e+00, double* %c, !vex-initializer-store !3
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %w4 = load double, double* %w
  %output5 = call double @"div@FF"(double %w4, double 0x400921FB4D12D84A)
  %output6 = fmul double %output5, 5.000000e-01
  %return = call double @"exp@FF"(double %output3)
  store double %output2, double* %0
  call void @"sincos@FFF"(double* %0, double* %s, double* %c)
  %output11 = fmul double %output6, %return
  %s12 = load double, double* %s
  %output13 = fmul double %output11, %s12
  %tmp = load <2 x double>, <2 x double>* %p
  %return14 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output13, i64 0)
  %output16 = extractvalue { double, <2 x double> } %return14, 1
  store <2 x double> %output16, <2 x double>* %p
  %c20 = load double, double* %c
  %output21 = fmul double %output11, %c20
  %return23 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output16, double %output21, i64 1)
  %output25 = extractvalue { double, <2 x double> } %return23, 1
  store <2 x double> %output25, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private void @"V_GLYNNIA@UUF"(<2 x double>* %p, <2 x double>* %_p, double* %w) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca double
  %2 = alloca double
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %w4 = load double, double* %w
  %return = call double @"sqrt@FF"(double 2.000000e+00)
  %output5 = fmul double %w4, %return
  %output6 = call double @"div@FF"(double %output5, double 2.000000e+00)
  %_p7 = load <2 x double>, <2 x double>* %_p
  store <2 x double> %_p7, <2 x double>* %0
  %SQRT = call double @"SQRT@FU"(<2 x double>* %0)
  %return9 = fcmp ogt double %SQRT, 1.000000e+00
  %return11 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return12 = fcmp ogt double %return11, 5.000000e-01
  br i1 %return9, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %output19 = fadd double %SQRT, %output2
  br i1 %return12, label %true14, label %false15

false:                                            ; preds = %__llvm_entry
  br i1 %return12, label %true69, label %false70

end:                                              ; preds = %true69, %false70, %true14, %false15
  ret void

true14:                                           ; preds = %true
  %return20 = call double @"sqrt@FF"(double %output19)
  %output23 = fmul double %output6, %return20
  %tmp = load <2 x double>, <2 x double>* %p
  %return24 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output23, i64 0)
  %output26 = extractvalue { double, <2 x double> } %return24, 1
  store <2 x double> %output26, <2 x double>* %p
  %output29 = call double @"div@FF"(double %output6, double %return20)
  %output31 = fmul double %output29, %output3
  %return32 = call double @"neg@FF"(double %output31)
  %return34 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output26, double %return32, i64 1)
  %output36 = extractvalue { double, <2 x double> } %return34, 1
  store <2 x double> %output36, <2 x double>* %p
  br label %end

false15:                                          ; preds = %true
  %w40 = load double, double* %w
  %output44 = fmul double %output3, %output3
  %output47 = fmul double %output19, %output19
  %output48 = fadd double %output44, %output47
  %output49 = fmul double %SQRT, %output48
  %return50 = call double @"sqrt@FF"(double %output49)
  %output51 = call double @"div@FF"(double %w40, double %return50)
  %output54 = fmul double %output51, %output19
  %tmp55 = load <2 x double>, <2 x double>* %p
  %return56 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp55, double %output54, i64 0)
  %output58 = extractvalue { double, <2 x double> } %return56, 1
  store <2 x double> %output58, <2 x double>* %p
  %output61 = fmul double %output51, %output3
  %return63 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output58, double %output61, i64 1)
  %output65 = extractvalue { double, <2 x double> } %return63, 1
  store <2 x double> %output65, <2 x double>* %p
  br label %end

true69:                                           ; preds = %false
  %output74 = fadd double %SQRT, %output2
  %return75 = call double @"sqrt@FF"(double %output74)
  store double %return75, double* %1
  %Zeps = call double @"Zeps@FF"(double* %1)
  %output78 = fmul double %output6, %Zeps
  %return79 = call double @"neg@FF"(double %output78)
  %tmp80 = load <2 x double>, <2 x double>* %p
  %return81 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp80, double %return79, i64 0)
  %output83 = extractvalue { double, <2 x double> } %return81, 1
  store <2 x double> %output83, <2 x double>* %p
  %output86 = call double @"div@FF"(double %output6, double %Zeps)
  %output88 = fmul double %output86, %output3
  %return89 = call double @"neg@FF"(double %output88)
  %return91 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output83, double %return89, i64 1)
  %output93 = extractvalue { double, <2 x double> } %return91, 1
  store <2 x double> %output93, <2 x double>* %p
  br label %end

false70:                                          ; preds = %false
  %output96 = fadd double %SQRT, %output2
  %w97 = load double, double* %w
  %output101 = fmul double %output3, %output3
  %output104 = fmul double %output96, %output96
  %output105 = fadd double %output101, %output104
  %output106 = fmul double %SQRT, %output105
  %return107 = call double @"sqrt@FF"(double %output106)
  store double %return107, double* %2
  %Zeps108 = call double @"Zeps@FF"(double* %2)
  %output109 = call double @"div@FF"(double %w97, double %Zeps108)
  %output112 = fmul double %output109, %output96
  %return113 = call double @"neg@FF"(double %output112)
  %tmp114 = load <2 x double>, <2 x double>* %p
  %return115 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp114, double %return113, i64 0)
  %output117 = extractvalue { double, <2 x double> } %return115, 1
  store <2 x double> %output117, <2 x double>* %p
  %output120 = fmul double %output109, %output3
  %return122 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output117, double %output120, i64 1)
  %output124 = extractvalue { double, <2 x double> } %return122, 1
  store <2 x double> %output124, <2 x double>* %p
  br label %end
}

; Function Attrs: alwaysinline nounwind
define private void @"V_POINT_SYMMETRY@UUFV"(<2 x double>* %p, <2 x double>* %_p, double* %w, <3 x double>* %ptsym) #1 {
__llvm_entry:
  %0 = alloca double
  %_p1 = load <2 x double>, <2 x double>* %_p
  %output = call { double, double } @"assign@FFU"(<2 x double> %_p1)
  %output2 = extractvalue { double, double } %output, 0
  %output3 = extractvalue { double, double } %output, 1
  %ptsym4 = load <3 x double>, <3 x double>* %ptsym
  %output5 = call { double, double, double } @"assign@FFFV"(<3 x double> %ptsym4)
  %output6 = extractvalue { double, double, double } %output5, 0
  %output7 = extractvalue { double, double, double } %output5, 1
  %output8 = extractvalue { double, double, double } %output5, 2
  store double %output6, double* %0
  %Zeps = call double @"Zeps@FF"(double* %0)
  %output10 = call double @"div@FF"(double 0x401921FB54442D18, double %Zeps)
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %output12 = fmul double %return, %output6
  %return13 = call double @"floor@FF"(double %output12)
  %output15 = fmul double %return13, %output10
  %output18 = fsub double %output2, %output7
  %w19 = load double, double* %w
  %output20 = fmul double %output18, %w19
  %output23 = fsub double %output3, %output8
  %output25 = fmul double %output23, %w19
  %return27 = call double @"cos@FF"(double %output15)
  %return29 = call double @"sin@FF"(double %output15)
  %output33 = fmul double %output20, %return27
  %output34 = fadd double %output7, %output33
  %output37 = fmul double %output25, %return29
  %output38 = fadd double %output34, %output37
  %tmp = load <2 x double>, <2 x double>* %p
  %return39 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %tmp, double %output38, i64 0)
  %output41 = extractvalue { double, <2 x double> } %return39, 1
  store <2 x double> %output41, <2 x double>* %p
  %output45 = fmul double %output25, %return27
  %output46 = fadd double %output8, %output45
  %output49 = fmul double %output20, %return29
  %output50 = fsub double %output46, %output49
  %return52 = call { double, <2 x double> } @"setcomp@FUFI"(<2 x double> %output41, double %output50, i64 1)
  %output54 = extractvalue { double, <2 x double> } %return52, 1
  store <2 x double> %output54, <2 x double>* %p
  ret void
}

; Function Attrs: alwaysinline nounwind
define private i64 @"XAOS@IIF[F"(i64* %idx, double* %res, double** %XST) #1 {
__llvm_entry:
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %res1 = load double, double* %res
  %return2 = fcmp olt double %res1, 1.500000e+01
  br i1 %return2, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %return5 = fcmp oeq double %res1, 2.000000e+00
  br i1 %return5, label %true7, label %false8

false:                                            ; preds = %__llvm_entry
  %return1005 = fcmp olt double %res1, 2.100000e+01
  br i1 %return1005, label %true1007, label %end

end:                                              ; preds = %false1993, %false1904, %false1643, %false1805, %false1725, %false1625, %false1545, %false1454, %false1383, %false1292, %false1221, %false1139, %false1077, %false, %false990, %false928, %false752, %false856, %false734, %false621, %false517, %false422, %false336, %false259, %false191, %false132, %false82, %false41
  %idx2007 = load i64, i64* %idx
  br label %UnifiedReturnBlock

true7:                                            ; preds = %true
  %idx10 = load i64, i64* %idx
  %return11 = call i64 @"eq@III"(i64 %idx10, i64 0)
  %0 = icmp ne i64 %return11, 0
  %XST15 = load double*, double** %XST
  br i1 %0, label %true12, label %false13

false8:                                           ; preds = %true
  %return24 = fcmp oeq double %res1, 3.000000e+00
  br i1 %return24, label %true26, label %false27

true12:                                           ; preds = %true7
  %return16 = call double* @"slice@[F[FIIIIII"(double* %XST15, i64 1, i64 0, i64 1, i64 2, i64 0, i64 0)
  %return18 = call i64 @"sample_cdf@[FFI"(double* %return16, double %return)
  br label %UnifiedReturnBlock

false13:                                          ; preds = %true7
  %return20 = call double* @"slice@[F[FIIIIII"(double* %XST15, i64 1, i64 2, i64 1, i64 4, i64 0, i64 0)
  %return22 = call i64 @"sample_cdf@[FFI"(double* %return20, double %return)
  br label %UnifiedReturnBlock

true26:                                           ; preds = %false8
  %idx29 = load i64, i64* %idx
  %return30 = call i64 @"eq@III"(i64 %idx29, i64 0)
  %1 = icmp ne i64 %return30, 0
  br i1 %1, label %true31, label %false32

false27:                                          ; preds = %false8
  %return56 = fcmp oeq double %res1, 4.000000e+00
  br i1 %return56, label %true58, label %false59

true31:                                           ; preds = %true26
  %XST34 = load double*, double** %XST
  %return35 = call double* @"slice@[F[FIIIIII"(double* %XST34, i64 1, i64 0, i64 1, i64 3, i64 0, i64 0)
  %return37 = call i64 @"sample_cdf@[FFI"(double* %return35, double %return)
  br label %UnifiedReturnBlock

false32:                                          ; preds = %true26
  %return39 = call i64 @"eq@III"(i64 %idx29, i64 1)
  %2 = icmp ne i64 %return39, 0
  br i1 %2, label %true40, label %false41

true40:                                           ; preds = %false32
  %XST43 = load double*, double** %XST
  %return44 = call double* @"slice@[F[FIIIIII"(double* %XST43, i64 1, i64 3, i64 1, i64 6, i64 0, i64 0)
  %return46 = call i64 @"sample_cdf@[FFI"(double* %return44, double %return)
  br label %UnifiedReturnBlock

false41:                                          ; preds = %false32
  %return48 = call i64 @"eq@III"(i64 %idx29, i64 2)
  %3 = icmp ne i64 %return48, 0
  br i1 %3, label %true49, label %end

true49:                                           ; preds = %false41
  %XST51 = load double*, double** %XST
  %return52 = call double* @"slice@[F[FIIIIII"(double* %XST51, i64 1, i64 6, i64 1, i64 9, i64 0, i64 0)
  %return54 = call i64 @"sample_cdf@[FFI"(double* %return52, double %return)
  br label %UnifiedReturnBlock

true58:                                           ; preds = %false27
  %idx61 = load i64, i64* %idx
  %return62 = call i64 @"eq@III"(i64 %idx61, i64 0)
  %4 = icmp ne i64 %return62, 0
  br i1 %4, label %true63, label %false64

false59:                                          ; preds = %false27
  %return97 = fcmp oeq double %res1, 5.000000e+00
  br i1 %return97, label %true99, label %false100

true63:                                           ; preds = %true58
  %XST66 = load double*, double** %XST
  %return67 = call double* @"slice@[F[FIIIIII"(double* %XST66, i64 1, i64 0, i64 1, i64 4, i64 0, i64 0)
  %return69 = call i64 @"sample_cdf@[FFI"(double* %return67, double %return)
  br label %UnifiedReturnBlock

false64:                                          ; preds = %true58
  %return71 = call i64 @"eq@III"(i64 %idx61, i64 1)
  %5 = icmp ne i64 %return71, 0
  br i1 %5, label %true72, label %false73

true72:                                           ; preds = %false64
  %XST75 = load double*, double** %XST
  %return76 = call double* @"slice@[F[FIIIIII"(double* %XST75, i64 1, i64 4, i64 1, i64 8, i64 0, i64 0)
  %return78 = call i64 @"sample_cdf@[FFI"(double* %return76, double %return)
  br label %UnifiedReturnBlock

false73:                                          ; preds = %false64
  %return80 = call i64 @"eq@III"(i64 %idx61, i64 2)
  %6 = icmp ne i64 %return80, 0
  br i1 %6, label %true81, label %false82

true81:                                           ; preds = %false73
  %XST84 = load double*, double** %XST
  %return85 = call double* @"slice@[F[FIIIIII"(double* %XST84, i64 1, i64 8, i64 1, i64 12, i64 0, i64 0)
  %return87 = call i64 @"sample_cdf@[FFI"(double* %return85, double %return)
  br label %UnifiedReturnBlock

false82:                                          ; preds = %false73
  %return89 = call i64 @"eq@III"(i64 %idx61, i64 3)
  %7 = icmp ne i64 %return89, 0
  br i1 %7, label %true90, label %end

true90:                                           ; preds = %false82
  %XST92 = load double*, double** %XST
  %return93 = call double* @"slice@[F[FIIIIII"(double* %XST92, i64 1, i64 12, i64 1, i64 16, i64 0, i64 0)
  %return95 = call i64 @"sample_cdf@[FFI"(double* %return93, double %return)
  br label %UnifiedReturnBlock

true99:                                           ; preds = %false59
  %idx102 = load i64, i64* %idx
  %return103 = call i64 @"eq@III"(i64 %idx102, i64 0)
  %8 = icmp ne i64 %return103, 0
  br i1 %8, label %true104, label %false105

false100:                                         ; preds = %false59
  %return147 = fcmp oeq double %res1, 6.000000e+00
  br i1 %return147, label %true149, label %false150

true104:                                          ; preds = %true99
  %XST107 = load double*, double** %XST
  %return108 = call double* @"slice@[F[FIIIIII"(double* %XST107, i64 1, i64 0, i64 1, i64 5, i64 0, i64 0)
  %return110 = call i64 @"sample_cdf@[FFI"(double* %return108, double %return)
  br label %UnifiedReturnBlock

false105:                                         ; preds = %true99
  %return112 = call i64 @"eq@III"(i64 %idx102, i64 1)
  %9 = icmp ne i64 %return112, 0
  br i1 %9, label %true113, label %false114

true113:                                          ; preds = %false105
  %XST116 = load double*, double** %XST
  %return117 = call double* @"slice@[F[FIIIIII"(double* %XST116, i64 1, i64 5, i64 1, i64 10, i64 0, i64 0)
  %return119 = call i64 @"sample_cdf@[FFI"(double* %return117, double %return)
  br label %UnifiedReturnBlock

false114:                                         ; preds = %false105
  %return121 = call i64 @"eq@III"(i64 %idx102, i64 2)
  %10 = icmp ne i64 %return121, 0
  br i1 %10, label %true122, label %false123

true122:                                          ; preds = %false114
  %XST125 = load double*, double** %XST
  %return126 = call double* @"slice@[F[FIIIIII"(double* %XST125, i64 1, i64 10, i64 1, i64 15, i64 0, i64 0)
  %return128 = call i64 @"sample_cdf@[FFI"(double* %return126, double %return)
  br label %UnifiedReturnBlock

false123:                                         ; preds = %false114
  %return130 = call i64 @"eq@III"(i64 %idx102, i64 3)
  %11 = icmp ne i64 %return130, 0
  br i1 %11, label %true131, label %false132

true131:                                          ; preds = %false123
  %XST134 = load double*, double** %XST
  %return135 = call double* @"slice@[F[FIIIIII"(double* %XST134, i64 1, i64 15, i64 1, i64 20, i64 0, i64 0)
  %return137 = call i64 @"sample_cdf@[FFI"(double* %return135, double %return)
  br label %UnifiedReturnBlock

false132:                                         ; preds = %false123
  %return139 = call i64 @"eq@III"(i64 %idx102, i64 4)
  %12 = icmp ne i64 %return139, 0
  br i1 %12, label %true140, label %end

true140:                                          ; preds = %false132
  %XST142 = load double*, double** %XST
  %return143 = call double* @"slice@[F[FIIIIII"(double* %XST142, i64 1, i64 20, i64 1, i64 25, i64 0, i64 0)
  %return145 = call i64 @"sample_cdf@[FFI"(double* %return143, double %return)
  br label %UnifiedReturnBlock

true149:                                          ; preds = %false100
  %idx152 = load i64, i64* %idx
  %return153 = call i64 @"eq@III"(i64 %idx152, i64 0)
  %13 = icmp ne i64 %return153, 0
  br i1 %13, label %true154, label %false155

false150:                                         ; preds = %false100
  %return206 = fcmp oeq double %res1, 7.000000e+00
  br i1 %return206, label %true208, label %false209

true154:                                          ; preds = %true149
  %XST157 = load double*, double** %XST
  %return158 = call double* @"slice@[F[FIIIIII"(double* %XST157, i64 1, i64 0, i64 1, i64 6, i64 0, i64 0)
  %return160 = call i64 @"sample_cdf@[FFI"(double* %return158, double %return)
  br label %UnifiedReturnBlock

false155:                                         ; preds = %true149
  %return162 = call i64 @"eq@III"(i64 %idx152, i64 1)
  %14 = icmp ne i64 %return162, 0
  br i1 %14, label %true163, label %false164

true163:                                          ; preds = %false155
  %XST166 = load double*, double** %XST
  %return167 = call double* @"slice@[F[FIIIIII"(double* %XST166, i64 1, i64 6, i64 1, i64 12, i64 0, i64 0)
  %return169 = call i64 @"sample_cdf@[FFI"(double* %return167, double %return)
  br label %UnifiedReturnBlock

false164:                                         ; preds = %false155
  %return171 = call i64 @"eq@III"(i64 %idx152, i64 2)
  %15 = icmp ne i64 %return171, 0
  br i1 %15, label %true172, label %false173

true172:                                          ; preds = %false164
  %XST175 = load double*, double** %XST
  %return176 = call double* @"slice@[F[FIIIIII"(double* %XST175, i64 1, i64 12, i64 1, i64 18, i64 0, i64 0)
  %return178 = call i64 @"sample_cdf@[FFI"(double* %return176, double %return)
  br label %UnifiedReturnBlock

false173:                                         ; preds = %false164
  %return180 = call i64 @"eq@III"(i64 %idx152, i64 3)
  %16 = icmp ne i64 %return180, 0
  br i1 %16, label %true181, label %false182

true181:                                          ; preds = %false173
  %XST184 = load double*, double** %XST
  %return185 = call double* @"slice@[F[FIIIIII"(double* %XST184, i64 1, i64 18, i64 1, i64 24, i64 0, i64 0)
  %return187 = call i64 @"sample_cdf@[FFI"(double* %return185, double %return)
  br label %UnifiedReturnBlock

false182:                                         ; preds = %false173
  %return189 = call i64 @"eq@III"(i64 %idx152, i64 4)
  %17 = icmp ne i64 %return189, 0
  br i1 %17, label %true190, label %false191

true190:                                          ; preds = %false182
  %XST193 = load double*, double** %XST
  %return194 = call double* @"slice@[F[FIIIIII"(double* %XST193, i64 1, i64 24, i64 1, i64 30, i64 0, i64 0)
  %return196 = call i64 @"sample_cdf@[FFI"(double* %return194, double %return)
  br label %UnifiedReturnBlock

false191:                                         ; preds = %false182
  %return198 = call i64 @"eq@III"(i64 %idx152, i64 5)
  %18 = icmp ne i64 %return198, 0
  br i1 %18, label %true199, label %end

true199:                                          ; preds = %false191
  %XST201 = load double*, double** %XST
  %return202 = call double* @"slice@[F[FIIIIII"(double* %XST201, i64 1, i64 30, i64 1, i64 36, i64 0, i64 0)
  %return204 = call i64 @"sample_cdf@[FFI"(double* %return202, double %return)
  br label %UnifiedReturnBlock

true208:                                          ; preds = %false150
  %idx211 = load i64, i64* %idx
  %return212 = call i64 @"eq@III"(i64 %idx211, i64 0)
  %19 = icmp ne i64 %return212, 0
  br i1 %19, label %true213, label %false214

false209:                                         ; preds = %false150
  %return274 = fcmp oeq double %res1, 8.000000e+00
  br i1 %return274, label %true276, label %false277

true213:                                          ; preds = %true208
  %XST216 = load double*, double** %XST
  %return217 = call double* @"slice@[F[FIIIIII"(double* %XST216, i64 1, i64 0, i64 1, i64 7, i64 0, i64 0)
  %return219 = call i64 @"sample_cdf@[FFI"(double* %return217, double %return)
  br label %UnifiedReturnBlock

false214:                                         ; preds = %true208
  %return221 = call i64 @"eq@III"(i64 %idx211, i64 1)
  %20 = icmp ne i64 %return221, 0
  br i1 %20, label %true222, label %false223

true222:                                          ; preds = %false214
  %XST225 = load double*, double** %XST
  %return226 = call double* @"slice@[F[FIIIIII"(double* %XST225, i64 1, i64 7, i64 1, i64 14, i64 0, i64 0)
  %return228 = call i64 @"sample_cdf@[FFI"(double* %return226, double %return)
  br label %UnifiedReturnBlock

false223:                                         ; preds = %false214
  %return230 = call i64 @"eq@III"(i64 %idx211, i64 2)
  %21 = icmp ne i64 %return230, 0
  br i1 %21, label %true231, label %false232

true231:                                          ; preds = %false223
  %XST234 = load double*, double** %XST
  %return235 = call double* @"slice@[F[FIIIIII"(double* %XST234, i64 1, i64 14, i64 1, i64 21, i64 0, i64 0)
  %return237 = call i64 @"sample_cdf@[FFI"(double* %return235, double %return)
  br label %UnifiedReturnBlock

false232:                                         ; preds = %false223
  %return239 = call i64 @"eq@III"(i64 %idx211, i64 3)
  %22 = icmp ne i64 %return239, 0
  br i1 %22, label %true240, label %false241

true240:                                          ; preds = %false232
  %XST243 = load double*, double** %XST
  %return244 = call double* @"slice@[F[FIIIIII"(double* %XST243, i64 1, i64 21, i64 1, i64 28, i64 0, i64 0)
  %return246 = call i64 @"sample_cdf@[FFI"(double* %return244, double %return)
  br label %UnifiedReturnBlock

false241:                                         ; preds = %false232
  %return248 = call i64 @"eq@III"(i64 %idx211, i64 4)
  %23 = icmp ne i64 %return248, 0
  br i1 %23, label %true249, label %false250

true249:                                          ; preds = %false241
  %XST252 = load double*, double** %XST
  %return253 = call double* @"slice@[F[FIIIIII"(double* %XST252, i64 1, i64 28, i64 1, i64 35, i64 0, i64 0)
  %return255 = call i64 @"sample_cdf@[FFI"(double* %return253, double %return)
  br label %UnifiedReturnBlock

false250:                                         ; preds = %false241
  %return257 = call i64 @"eq@III"(i64 %idx211, i64 5)
  %24 = icmp ne i64 %return257, 0
  br i1 %24, label %true258, label %false259

true258:                                          ; preds = %false250
  %XST261 = load double*, double** %XST
  %return262 = call double* @"slice@[F[FIIIIII"(double* %XST261, i64 1, i64 35, i64 1, i64 42, i64 0, i64 0)
  %return264 = call i64 @"sample_cdf@[FFI"(double* %return262, double %return)
  br label %UnifiedReturnBlock

false259:                                         ; preds = %false250
  %return266 = call i64 @"eq@III"(i64 %idx211, i64 6)
  %25 = icmp ne i64 %return266, 0
  br i1 %25, label %true267, label %end

true267:                                          ; preds = %false259
  %XST269 = load double*, double** %XST
  %return270 = call double* @"slice@[F[FIIIIII"(double* %XST269, i64 1, i64 42, i64 1, i64 49, i64 0, i64 0)
  %return272 = call i64 @"sample_cdf@[FFI"(double* %return270, double %return)
  br label %UnifiedReturnBlock

true276:                                          ; preds = %false209
  %idx279 = load i64, i64* %idx
  %return280 = call i64 @"eq@III"(i64 %idx279, i64 0)
  %26 = icmp ne i64 %return280, 0
  br i1 %26, label %true281, label %false282

false277:                                         ; preds = %false209
  %return351 = fcmp oeq double %res1, 9.000000e+00
  br i1 %return351, label %true353, label %false354

true281:                                          ; preds = %true276
  %XST284 = load double*, double** %XST
  %return285 = call double* @"slice@[F[FIIIIII"(double* %XST284, i64 1, i64 0, i64 1, i64 8, i64 0, i64 0)
  %return287 = call i64 @"sample_cdf@[FFI"(double* %return285, double %return)
  br label %UnifiedReturnBlock

false282:                                         ; preds = %true276
  %return289 = call i64 @"eq@III"(i64 %idx279, i64 1)
  %27 = icmp ne i64 %return289, 0
  br i1 %27, label %true290, label %false291

true290:                                          ; preds = %false282
  %XST293 = load double*, double** %XST
  %return294 = call double* @"slice@[F[FIIIIII"(double* %XST293, i64 1, i64 8, i64 1, i64 16, i64 0, i64 0)
  %return296 = call i64 @"sample_cdf@[FFI"(double* %return294, double %return)
  br label %UnifiedReturnBlock

false291:                                         ; preds = %false282
  %return298 = call i64 @"eq@III"(i64 %idx279, i64 2)
  %28 = icmp ne i64 %return298, 0
  br i1 %28, label %true299, label %false300

true299:                                          ; preds = %false291
  %XST302 = load double*, double** %XST
  %return303 = call double* @"slice@[F[FIIIIII"(double* %XST302, i64 1, i64 16, i64 1, i64 24, i64 0, i64 0)
  %return305 = call i64 @"sample_cdf@[FFI"(double* %return303, double %return)
  br label %UnifiedReturnBlock

false300:                                         ; preds = %false291
  %return307 = call i64 @"eq@III"(i64 %idx279, i64 3)
  %29 = icmp ne i64 %return307, 0
  br i1 %29, label %true308, label %false309

true308:                                          ; preds = %false300
  %XST311 = load double*, double** %XST
  %return312 = call double* @"slice@[F[FIIIIII"(double* %XST311, i64 1, i64 24, i64 1, i64 32, i64 0, i64 0)
  %return314 = call i64 @"sample_cdf@[FFI"(double* %return312, double %return)
  br label %UnifiedReturnBlock

false309:                                         ; preds = %false300
  %return316 = call i64 @"eq@III"(i64 %idx279, i64 4)
  %30 = icmp ne i64 %return316, 0
  br i1 %30, label %true317, label %false318

true317:                                          ; preds = %false309
  %XST320 = load double*, double** %XST
  %return321 = call double* @"slice@[F[FIIIIII"(double* %XST320, i64 1, i64 32, i64 1, i64 40, i64 0, i64 0)
  %return323 = call i64 @"sample_cdf@[FFI"(double* %return321, double %return)
  br label %UnifiedReturnBlock

false318:                                         ; preds = %false309
  %return325 = call i64 @"eq@III"(i64 %idx279, i64 5)
  %31 = icmp ne i64 %return325, 0
  br i1 %31, label %true326, label %false327

true326:                                          ; preds = %false318
  %XST329 = load double*, double** %XST
  %return330 = call double* @"slice@[F[FIIIIII"(double* %XST329, i64 1, i64 40, i64 1, i64 48, i64 0, i64 0)
  %return332 = call i64 @"sample_cdf@[FFI"(double* %return330, double %return)
  br label %UnifiedReturnBlock

false327:                                         ; preds = %false318
  %return334 = call i64 @"eq@III"(i64 %idx279, i64 6)
  %32 = icmp ne i64 %return334, 0
  br i1 %32, label %true335, label %false336

true335:                                          ; preds = %false327
  %XST338 = load double*, double** %XST
  %return339 = call double* @"slice@[F[FIIIIII"(double* %XST338, i64 1, i64 48, i64 1, i64 56, i64 0, i64 0)
  %return341 = call i64 @"sample_cdf@[FFI"(double* %return339, double %return)
  br label %UnifiedReturnBlock

false336:                                         ; preds = %false327
  %return343 = call i64 @"eq@III"(i64 %idx279, i64 7)
  %33 = icmp ne i64 %return343, 0
  br i1 %33, label %true344, label %end

true344:                                          ; preds = %false336
  %XST346 = load double*, double** %XST
  %return347 = call double* @"slice@[F[FIIIIII"(double* %XST346, i64 1, i64 56, i64 1, i64 64, i64 0, i64 0)
  %return349 = call i64 @"sample_cdf@[FFI"(double* %return347, double %return)
  br label %UnifiedReturnBlock

true353:                                          ; preds = %false277
  %idx356 = load i64, i64* %idx
  %return357 = call i64 @"eq@III"(i64 %idx356, i64 0)
  %34 = icmp ne i64 %return357, 0
  br i1 %34, label %true358, label %false359

false354:                                         ; preds = %false277
  %return437 = fcmp oeq double %res1, 1.000000e+01
  br i1 %return437, label %true439, label %false440

true358:                                          ; preds = %true353
  %XST361 = load double*, double** %XST
  %return362 = call double* @"slice@[F[FIIIIII"(double* %XST361, i64 1, i64 0, i64 1, i64 9, i64 0, i64 0)
  %return364 = call i64 @"sample_cdf@[FFI"(double* %return362, double %return)
  br label %UnifiedReturnBlock

false359:                                         ; preds = %true353
  %return366 = call i64 @"eq@III"(i64 %idx356, i64 1)
  %35 = icmp ne i64 %return366, 0
  br i1 %35, label %true367, label %false368

true367:                                          ; preds = %false359
  %XST370 = load double*, double** %XST
  %return371 = call double* @"slice@[F[FIIIIII"(double* %XST370, i64 1, i64 9, i64 1, i64 18, i64 0, i64 0)
  %return373 = call i64 @"sample_cdf@[FFI"(double* %return371, double %return)
  br label %UnifiedReturnBlock

false368:                                         ; preds = %false359
  %return375 = call i64 @"eq@III"(i64 %idx356, i64 2)
  %36 = icmp ne i64 %return375, 0
  br i1 %36, label %true376, label %false377

true376:                                          ; preds = %false368
  %XST379 = load double*, double** %XST
  %return380 = call double* @"slice@[F[FIIIIII"(double* %XST379, i64 1, i64 18, i64 1, i64 27, i64 0, i64 0)
  %return382 = call i64 @"sample_cdf@[FFI"(double* %return380, double %return)
  br label %UnifiedReturnBlock

false377:                                         ; preds = %false368
  %return384 = call i64 @"eq@III"(i64 %idx356, i64 3)
  %37 = icmp ne i64 %return384, 0
  br i1 %37, label %true385, label %false386

true385:                                          ; preds = %false377
  %XST388 = load double*, double** %XST
  %return389 = call double* @"slice@[F[FIIIIII"(double* %XST388, i64 1, i64 27, i64 1, i64 36, i64 0, i64 0)
  %return391 = call i64 @"sample_cdf@[FFI"(double* %return389, double %return)
  br label %UnifiedReturnBlock

false386:                                         ; preds = %false377
  %return393 = call i64 @"eq@III"(i64 %idx356, i64 4)
  %38 = icmp ne i64 %return393, 0
  br i1 %38, label %true394, label %false395

true394:                                          ; preds = %false386
  %XST397 = load double*, double** %XST
  %return398 = call double* @"slice@[F[FIIIIII"(double* %XST397, i64 1, i64 36, i64 1, i64 45, i64 0, i64 0)
  %return400 = call i64 @"sample_cdf@[FFI"(double* %return398, double %return)
  br label %UnifiedReturnBlock

false395:                                         ; preds = %false386
  %return402 = call i64 @"eq@III"(i64 %idx356, i64 5)
  %39 = icmp ne i64 %return402, 0
  br i1 %39, label %true403, label %false404

true403:                                          ; preds = %false395
  %XST406 = load double*, double** %XST
  %return407 = call double* @"slice@[F[FIIIIII"(double* %XST406, i64 1, i64 45, i64 1, i64 54, i64 0, i64 0)
  %return409 = call i64 @"sample_cdf@[FFI"(double* %return407, double %return)
  br label %UnifiedReturnBlock

false404:                                         ; preds = %false395
  %return411 = call i64 @"eq@III"(i64 %idx356, i64 6)
  %40 = icmp ne i64 %return411, 0
  br i1 %40, label %true412, label %false413

true412:                                          ; preds = %false404
  %XST415 = load double*, double** %XST
  %return416 = call double* @"slice@[F[FIIIIII"(double* %XST415, i64 1, i64 54, i64 1, i64 63, i64 0, i64 0)
  %return418 = call i64 @"sample_cdf@[FFI"(double* %return416, double %return)
  br label %UnifiedReturnBlock

false413:                                         ; preds = %false404
  %return420 = call i64 @"eq@III"(i64 %idx356, i64 7)
  %41 = icmp ne i64 %return420, 0
  br i1 %41, label %true421, label %false422

true421:                                          ; preds = %false413
  %XST424 = load double*, double** %XST
  %return425 = call double* @"slice@[F[FIIIIII"(double* %XST424, i64 1, i64 63, i64 1, i64 72, i64 0, i64 0)
  %return427 = call i64 @"sample_cdf@[FFI"(double* %return425, double %return)
  br label %UnifiedReturnBlock

false422:                                         ; preds = %false413
  %return429 = call i64 @"eq@III"(i64 %idx356, i64 8)
  %42 = icmp ne i64 %return429, 0
  br i1 %42, label %true430, label %end

true430:                                          ; preds = %false422
  %XST432 = load double*, double** %XST
  %return433 = call double* @"slice@[F[FIIIIII"(double* %XST432, i64 1, i64 72, i64 1, i64 81, i64 0, i64 0)
  %return435 = call i64 @"sample_cdf@[FFI"(double* %return433, double %return)
  br label %UnifiedReturnBlock

true439:                                          ; preds = %false354
  %idx442 = load i64, i64* %idx
  %return443 = call i64 @"eq@III"(i64 %idx442, i64 0)
  %43 = icmp ne i64 %return443, 0
  br i1 %43, label %true444, label %false445

false440:                                         ; preds = %false354
  %return532 = fcmp oeq double %res1, 1.100000e+01
  br i1 %return532, label %true534, label %false535

true444:                                          ; preds = %true439
  %XST447 = load double*, double** %XST
  %return448 = call double* @"slice@[F[FIIIIII"(double* %XST447, i64 1, i64 0, i64 1, i64 10, i64 0, i64 0)
  %return450 = call i64 @"sample_cdf@[FFI"(double* %return448, double %return)
  br label %UnifiedReturnBlock

false445:                                         ; preds = %true439
  %return452 = call i64 @"eq@III"(i64 %idx442, i64 1)
  %44 = icmp ne i64 %return452, 0
  br i1 %44, label %true453, label %false454

true453:                                          ; preds = %false445
  %XST456 = load double*, double** %XST
  %return457 = call double* @"slice@[F[FIIIIII"(double* %XST456, i64 1, i64 10, i64 1, i64 20, i64 0, i64 0)
  %return459 = call i64 @"sample_cdf@[FFI"(double* %return457, double %return)
  br label %UnifiedReturnBlock

false454:                                         ; preds = %false445
  %return461 = call i64 @"eq@III"(i64 %idx442, i64 2)
  %45 = icmp ne i64 %return461, 0
  br i1 %45, label %true462, label %false463

true462:                                          ; preds = %false454
  %XST465 = load double*, double** %XST
  %return466 = call double* @"slice@[F[FIIIIII"(double* %XST465, i64 1, i64 20, i64 1, i64 30, i64 0, i64 0)
  %return468 = call i64 @"sample_cdf@[FFI"(double* %return466, double %return)
  br label %UnifiedReturnBlock

false463:                                         ; preds = %false454
  %return470 = call i64 @"eq@III"(i64 %idx442, i64 3)
  %46 = icmp ne i64 %return470, 0
  br i1 %46, label %true471, label %false472

true471:                                          ; preds = %false463
  %XST474 = load double*, double** %XST
  %return475 = call double* @"slice@[F[FIIIIII"(double* %XST474, i64 1, i64 30, i64 1, i64 40, i64 0, i64 0)
  %return477 = call i64 @"sample_cdf@[FFI"(double* %return475, double %return)
  br label %UnifiedReturnBlock

false472:                                         ; preds = %false463
  %return479 = call i64 @"eq@III"(i64 %idx442, i64 4)
  %47 = icmp ne i64 %return479, 0
  br i1 %47, label %true480, label %false481

true480:                                          ; preds = %false472
  %XST483 = load double*, double** %XST
  %return484 = call double* @"slice@[F[FIIIIII"(double* %XST483, i64 1, i64 40, i64 1, i64 50, i64 0, i64 0)
  %return486 = call i64 @"sample_cdf@[FFI"(double* %return484, double %return)
  br label %UnifiedReturnBlock

false481:                                         ; preds = %false472
  %return488 = call i64 @"eq@III"(i64 %idx442, i64 5)
  %48 = icmp ne i64 %return488, 0
  br i1 %48, label %true489, label %false490

true489:                                          ; preds = %false481
  %XST492 = load double*, double** %XST
  %return493 = call double* @"slice@[F[FIIIIII"(double* %XST492, i64 1, i64 50, i64 1, i64 60, i64 0, i64 0)
  %return495 = call i64 @"sample_cdf@[FFI"(double* %return493, double %return)
  br label %UnifiedReturnBlock

false490:                                         ; preds = %false481
  %return497 = call i64 @"eq@III"(i64 %idx442, i64 6)
  %49 = icmp ne i64 %return497, 0
  br i1 %49, label %true498, label %false499

true498:                                          ; preds = %false490
  %XST501 = load double*, double** %XST
  %return502 = call double* @"slice@[F[FIIIIII"(double* %XST501, i64 1, i64 60, i64 1, i64 70, i64 0, i64 0)
  %return504 = call i64 @"sample_cdf@[FFI"(double* %return502, double %return)
  br label %UnifiedReturnBlock

false499:                                         ; preds = %false490
  %return506 = call i64 @"eq@III"(i64 %idx442, i64 7)
  %50 = icmp ne i64 %return506, 0
  br i1 %50, label %true507, label %false508

true507:                                          ; preds = %false499
  %XST510 = load double*, double** %XST
  %return511 = call double* @"slice@[F[FIIIIII"(double* %XST510, i64 1, i64 70, i64 1, i64 80, i64 0, i64 0)
  %return513 = call i64 @"sample_cdf@[FFI"(double* %return511, double %return)
  br label %UnifiedReturnBlock

false508:                                         ; preds = %false499
  %return515 = call i64 @"eq@III"(i64 %idx442, i64 8)
  %51 = icmp ne i64 %return515, 0
  br i1 %51, label %true516, label %false517

true516:                                          ; preds = %false508
  %XST519 = load double*, double** %XST
  %return520 = call double* @"slice@[F[FIIIIII"(double* %XST519, i64 1, i64 80, i64 1, i64 90, i64 0, i64 0)
  %return522 = call i64 @"sample_cdf@[FFI"(double* %return520, double %return)
  br label %UnifiedReturnBlock

false517:                                         ; preds = %false508
  %return524 = call i64 @"eq@III"(i64 %idx442, i64 9)
  %52 = icmp ne i64 %return524, 0
  br i1 %52, label %true525, label %end

true525:                                          ; preds = %false517
  %XST527 = load double*, double** %XST
  %return528 = call double* @"slice@[F[FIIIIII"(double* %XST527, i64 1, i64 90, i64 1, i64 100, i64 0, i64 0)
  %return530 = call i64 @"sample_cdf@[FFI"(double* %return528, double %return)
  br label %UnifiedReturnBlock

true534:                                          ; preds = %false440
  %idx537 = load i64, i64* %idx
  %return538 = call i64 @"eq@III"(i64 %idx537, i64 0)
  %53 = icmp ne i64 %return538, 0
  br i1 %53, label %true539, label %false540

false535:                                         ; preds = %false440
  %return636 = fcmp oeq double %res1, 1.200000e+01
  br i1 %return636, label %true638, label %false639

true539:                                          ; preds = %true534
  %XST542 = load double*, double** %XST
  %return543 = call double* @"slice@[F[FIIIIII"(double* %XST542, i64 1, i64 0, i64 1, i64 11, i64 0, i64 0)
  %return545 = call i64 @"sample_cdf@[FFI"(double* %return543, double %return)
  br label %UnifiedReturnBlock

false540:                                         ; preds = %true534
  %return547 = call i64 @"eq@III"(i64 %idx537, i64 1)
  %54 = icmp ne i64 %return547, 0
  br i1 %54, label %true548, label %false549

true548:                                          ; preds = %false540
  %XST551 = load double*, double** %XST
  %return552 = call double* @"slice@[F[FIIIIII"(double* %XST551, i64 1, i64 11, i64 1, i64 22, i64 0, i64 0)
  %return554 = call i64 @"sample_cdf@[FFI"(double* %return552, double %return)
  br label %UnifiedReturnBlock

false549:                                         ; preds = %false540
  %return556 = call i64 @"eq@III"(i64 %idx537, i64 2)
  %55 = icmp ne i64 %return556, 0
  br i1 %55, label %true557, label %false558

true557:                                          ; preds = %false549
  %XST560 = load double*, double** %XST
  %return561 = call double* @"slice@[F[FIIIIII"(double* %XST560, i64 1, i64 22, i64 1, i64 33, i64 0, i64 0)
  %return563 = call i64 @"sample_cdf@[FFI"(double* %return561, double %return)
  br label %UnifiedReturnBlock

false558:                                         ; preds = %false549
  %return565 = call i64 @"eq@III"(i64 %idx537, i64 3)
  %56 = icmp ne i64 %return565, 0
  br i1 %56, label %true566, label %false567

true566:                                          ; preds = %false558
  %XST569 = load double*, double** %XST
  %return570 = call double* @"slice@[F[FIIIIII"(double* %XST569, i64 1, i64 33, i64 1, i64 44, i64 0, i64 0)
  %return572 = call i64 @"sample_cdf@[FFI"(double* %return570, double %return)
  br label %UnifiedReturnBlock

false567:                                         ; preds = %false558
  %return574 = call i64 @"eq@III"(i64 %idx537, i64 4)
  %57 = icmp ne i64 %return574, 0
  br i1 %57, label %true575, label %false576

true575:                                          ; preds = %false567
  %XST578 = load double*, double** %XST
  %return579 = call double* @"slice@[F[FIIIIII"(double* %XST578, i64 1, i64 44, i64 1, i64 55, i64 0, i64 0)
  %return581 = call i64 @"sample_cdf@[FFI"(double* %return579, double %return)
  br label %UnifiedReturnBlock

false576:                                         ; preds = %false567
  %return583 = call i64 @"eq@III"(i64 %idx537, i64 5)
  %58 = icmp ne i64 %return583, 0
  br i1 %58, label %true584, label %false585

true584:                                          ; preds = %false576
  %XST587 = load double*, double** %XST
  %return588 = call double* @"slice@[F[FIIIIII"(double* %XST587, i64 1, i64 55, i64 1, i64 66, i64 0, i64 0)
  %return590 = call i64 @"sample_cdf@[FFI"(double* %return588, double %return)
  br label %UnifiedReturnBlock

false585:                                         ; preds = %false576
  %return592 = call i64 @"eq@III"(i64 %idx537, i64 6)
  %59 = icmp ne i64 %return592, 0
  br i1 %59, label %true593, label %false594

true593:                                          ; preds = %false585
  %XST596 = load double*, double** %XST
  %return597 = call double* @"slice@[F[FIIIIII"(double* %XST596, i64 1, i64 66, i64 1, i64 77, i64 0, i64 0)
  %return599 = call i64 @"sample_cdf@[FFI"(double* %return597, double %return)
  br label %UnifiedReturnBlock

false594:                                         ; preds = %false585
  %return601 = call i64 @"eq@III"(i64 %idx537, i64 7)
  %60 = icmp ne i64 %return601, 0
  br i1 %60, label %true602, label %false603

true602:                                          ; preds = %false594
  %XST605 = load double*, double** %XST
  %return606 = call double* @"slice@[F[FIIIIII"(double* %XST605, i64 1, i64 77, i64 1, i64 88, i64 0, i64 0)
  %return608 = call i64 @"sample_cdf@[FFI"(double* %return606, double %return)
  br label %UnifiedReturnBlock

false603:                                         ; preds = %false594
  %return610 = call i64 @"eq@III"(i64 %idx537, i64 8)
  %61 = icmp ne i64 %return610, 0
  br i1 %61, label %true611, label %false612

true611:                                          ; preds = %false603
  %XST614 = load double*, double** %XST
  %return615 = call double* @"slice@[F[FIIIIII"(double* %XST614, i64 1, i64 88, i64 1, i64 99, i64 0, i64 0)
  %return617 = call i64 @"sample_cdf@[FFI"(double* %return615, double %return)
  br label %UnifiedReturnBlock

false612:                                         ; preds = %false603
  %return619 = call i64 @"eq@III"(i64 %idx537, i64 9)
  %62 = icmp ne i64 %return619, 0
  br i1 %62, label %true620, label %false621

true620:                                          ; preds = %false612
  %XST623 = load double*, double** %XST
  %return624 = call double* @"slice@[F[FIIIIII"(double* %XST623, i64 1, i64 99, i64 1, i64 110, i64 0, i64 0)
  %return626 = call i64 @"sample_cdf@[FFI"(double* %return624, double %return)
  br label %UnifiedReturnBlock

false621:                                         ; preds = %false612
  %return628 = call i64 @"eq@III"(i64 %idx537, i64 10)
  %63 = icmp ne i64 %return628, 0
  br i1 %63, label %true629, label %end

true629:                                          ; preds = %false621
  %XST631 = load double*, double** %XST
  %return632 = call double* @"slice@[F[FIIIIII"(double* %XST631, i64 1, i64 110, i64 1, i64 121, i64 0, i64 0)
  %return634 = call i64 @"sample_cdf@[FFI"(double* %return632, double %return)
  br label %UnifiedReturnBlock

true638:                                          ; preds = %false535
  %idx641 = load i64, i64* %idx
  %return642 = call i64 @"eq@III"(i64 %idx641, i64 0)
  %64 = icmp ne i64 %return642, 0
  br i1 %64, label %true643, label %false644

false639:                                         ; preds = %false535
  %return749 = fcmp oeq double %res1, 1.300000e+01
  br i1 %return749, label %true751, label %false752

true643:                                          ; preds = %true638
  %XST646 = load double*, double** %XST
  %return647 = call double* @"slice@[F[FIIIIII"(double* %XST646, i64 1, i64 0, i64 1, i64 12, i64 0, i64 0)
  %return649 = call i64 @"sample_cdf@[FFI"(double* %return647, double %return)
  br label %UnifiedReturnBlock

false644:                                         ; preds = %true638
  %return651 = call i64 @"eq@III"(i64 %idx641, i64 1)
  %65 = icmp ne i64 %return651, 0
  br i1 %65, label %true652, label %false653

true652:                                          ; preds = %false644
  %XST655 = load double*, double** %XST
  %return656 = call double* @"slice@[F[FIIIIII"(double* %XST655, i64 1, i64 12, i64 1, i64 24, i64 0, i64 0)
  %return658 = call i64 @"sample_cdf@[FFI"(double* %return656, double %return)
  br label %UnifiedReturnBlock

false653:                                         ; preds = %false644
  %return660 = call i64 @"eq@III"(i64 %idx641, i64 2)
  %66 = icmp ne i64 %return660, 0
  br i1 %66, label %true661, label %false662

true661:                                          ; preds = %false653
  %XST664 = load double*, double** %XST
  %return665 = call double* @"slice@[F[FIIIIII"(double* %XST664, i64 1, i64 24, i64 1, i64 36, i64 0, i64 0)
  %return667 = call i64 @"sample_cdf@[FFI"(double* %return665, double %return)
  br label %UnifiedReturnBlock

false662:                                         ; preds = %false653
  %return669 = call i64 @"eq@III"(i64 %idx641, i64 3)
  %67 = icmp ne i64 %return669, 0
  br i1 %67, label %true670, label %false671

true670:                                          ; preds = %false662
  %XST673 = load double*, double** %XST
  %return674 = call double* @"slice@[F[FIIIIII"(double* %XST673, i64 1, i64 36, i64 1, i64 48, i64 0, i64 0)
  %return676 = call i64 @"sample_cdf@[FFI"(double* %return674, double %return)
  br label %UnifiedReturnBlock

false671:                                         ; preds = %false662
  %return678 = call i64 @"eq@III"(i64 %idx641, i64 4)
  %68 = icmp ne i64 %return678, 0
  br i1 %68, label %true679, label %false680

true679:                                          ; preds = %false671
  %XST682 = load double*, double** %XST
  %return683 = call double* @"slice@[F[FIIIIII"(double* %XST682, i64 1, i64 48, i64 1, i64 60, i64 0, i64 0)
  %return685 = call i64 @"sample_cdf@[FFI"(double* %return683, double %return)
  br label %UnifiedReturnBlock

false680:                                         ; preds = %false671
  %return687 = call i64 @"eq@III"(i64 %idx641, i64 5)
  %69 = icmp ne i64 %return687, 0
  br i1 %69, label %true688, label %false689

true688:                                          ; preds = %false680
  %XST691 = load double*, double** %XST
  %return692 = call double* @"slice@[F[FIIIIII"(double* %XST691, i64 1, i64 60, i64 1, i64 72, i64 0, i64 0)
  %return694 = call i64 @"sample_cdf@[FFI"(double* %return692, double %return)
  br label %UnifiedReturnBlock

false689:                                         ; preds = %false680
  %return696 = call i64 @"eq@III"(i64 %idx641, i64 6)
  %70 = icmp ne i64 %return696, 0
  br i1 %70, label %true697, label %false698

true697:                                          ; preds = %false689
  %XST700 = load double*, double** %XST
  %return701 = call double* @"slice@[F[FIIIIII"(double* %XST700, i64 1, i64 72, i64 1, i64 84, i64 0, i64 0)
  %return703 = call i64 @"sample_cdf@[FFI"(double* %return701, double %return)
  br label %UnifiedReturnBlock

false698:                                         ; preds = %false689
  %return705 = call i64 @"eq@III"(i64 %idx641, i64 7)
  %71 = icmp ne i64 %return705, 0
  br i1 %71, label %true706, label %false707

true706:                                          ; preds = %false698
  %XST709 = load double*, double** %XST
  %return710 = call double* @"slice@[F[FIIIIII"(double* %XST709, i64 1, i64 84, i64 1, i64 96, i64 0, i64 0)
  %return712 = call i64 @"sample_cdf@[FFI"(double* %return710, double %return)
  br label %UnifiedReturnBlock

false707:                                         ; preds = %false698
  %return714 = call i64 @"eq@III"(i64 %idx641, i64 8)
  %72 = icmp ne i64 %return714, 0
  br i1 %72, label %true715, label %false716

true715:                                          ; preds = %false707
  %XST718 = load double*, double** %XST
  %return719 = call double* @"slice@[F[FIIIIII"(double* %XST718, i64 1, i64 96, i64 1, i64 108, i64 0, i64 0)
  %return721 = call i64 @"sample_cdf@[FFI"(double* %return719, double %return)
  br label %UnifiedReturnBlock

false716:                                         ; preds = %false707
  %return723 = call i64 @"eq@III"(i64 %idx641, i64 9)
  %73 = icmp ne i64 %return723, 0
  br i1 %73, label %true724, label %false725

true724:                                          ; preds = %false716
  %XST727 = load double*, double** %XST
  %return728 = call double* @"slice@[F[FIIIIII"(double* %XST727, i64 1, i64 108, i64 1, i64 120, i64 0, i64 0)
  %return730 = call i64 @"sample_cdf@[FFI"(double* %return728, double %return)
  br label %UnifiedReturnBlock

false725:                                         ; preds = %false716
  %return732 = call i64 @"eq@III"(i64 %idx641, i64 10)
  %74 = icmp ne i64 %return732, 0
  br i1 %74, label %true733, label %false734

true733:                                          ; preds = %false725
  %XST736 = load double*, double** %XST
  %return737 = call double* @"slice@[F[FIIIIII"(double* %XST736, i64 1, i64 120, i64 1, i64 132, i64 0, i64 0)
  %return739 = call i64 @"sample_cdf@[FFI"(double* %return737, double %return)
  br label %UnifiedReturnBlock

false734:                                         ; preds = %false725
  %return741 = call i64 @"eq@III"(i64 %idx641, i64 11)
  %75 = icmp ne i64 %return741, 0
  br i1 %75, label %true742, label %end

true742:                                          ; preds = %false734
  %XST744 = load double*, double** %XST
  %return745 = call double* @"slice@[F[FIIIIII"(double* %XST744, i64 1, i64 132, i64 1, i64 144, i64 0, i64 0)
  %return747 = call i64 @"sample_cdf@[FFI"(double* %return745, double %return)
  br label %UnifiedReturnBlock

true751:                                          ; preds = %false639
  %idx754 = load i64, i64* %idx
  %return755 = call i64 @"eq@III"(i64 %idx754, i64 0)
  %76 = icmp ne i64 %return755, 0
  br i1 %76, label %true756, label %false757

false752:                                         ; preds = %false639
  %return871 = fcmp oeq double %res1, 1.400000e+01
  br i1 %return871, label %true873, label %end

true756:                                          ; preds = %true751
  %XST759 = load double*, double** %XST
  %return760 = call double* @"slice@[F[FIIIIII"(double* %XST759, i64 1, i64 0, i64 1, i64 13, i64 0, i64 0)
  %return762 = call i64 @"sample_cdf@[FFI"(double* %return760, double %return)
  br label %UnifiedReturnBlock

false757:                                         ; preds = %true751
  %return764 = call i64 @"eq@III"(i64 %idx754, i64 1)
  %77 = icmp ne i64 %return764, 0
  br i1 %77, label %true765, label %false766

true765:                                          ; preds = %false757
  %XST768 = load double*, double** %XST
  %return769 = call double* @"slice@[F[FIIIIII"(double* %XST768, i64 1, i64 13, i64 1, i64 26, i64 0, i64 0)
  %return771 = call i64 @"sample_cdf@[FFI"(double* %return769, double %return)
  br label %UnifiedReturnBlock

false766:                                         ; preds = %false757
  %return773 = call i64 @"eq@III"(i64 %idx754, i64 2)
  %78 = icmp ne i64 %return773, 0
  br i1 %78, label %true774, label %false775

true774:                                          ; preds = %false766
  %XST777 = load double*, double** %XST
  %return778 = call double* @"slice@[F[FIIIIII"(double* %XST777, i64 1, i64 26, i64 1, i64 39, i64 0, i64 0)
  %return780 = call i64 @"sample_cdf@[FFI"(double* %return778, double %return)
  br label %UnifiedReturnBlock

false775:                                         ; preds = %false766
  %return782 = call i64 @"eq@III"(i64 %idx754, i64 3)
  %79 = icmp ne i64 %return782, 0
  br i1 %79, label %true783, label %false784

true783:                                          ; preds = %false775
  %XST786 = load double*, double** %XST
  %return787 = call double* @"slice@[F[FIIIIII"(double* %XST786, i64 1, i64 39, i64 1, i64 52, i64 0, i64 0)
  %return789 = call i64 @"sample_cdf@[FFI"(double* %return787, double %return)
  br label %UnifiedReturnBlock

false784:                                         ; preds = %false775
  %return791 = call i64 @"eq@III"(i64 %idx754, i64 4)
  %80 = icmp ne i64 %return791, 0
  br i1 %80, label %true792, label %false793

true792:                                          ; preds = %false784
  %XST795 = load double*, double** %XST
  %return796 = call double* @"slice@[F[FIIIIII"(double* %XST795, i64 1, i64 52, i64 1, i64 65, i64 0, i64 0)
  %return798 = call i64 @"sample_cdf@[FFI"(double* %return796, double %return)
  br label %UnifiedReturnBlock

false793:                                         ; preds = %false784
  %return800 = call i64 @"eq@III"(i64 %idx754, i64 5)
  %81 = icmp ne i64 %return800, 0
  br i1 %81, label %true801, label %false802

true801:                                          ; preds = %false793
  %XST804 = load double*, double** %XST
  %return805 = call double* @"slice@[F[FIIIIII"(double* %XST804, i64 1, i64 65, i64 1, i64 78, i64 0, i64 0)
  %return807 = call i64 @"sample_cdf@[FFI"(double* %return805, double %return)
  br label %UnifiedReturnBlock

false802:                                         ; preds = %false793
  %return809 = call i64 @"eq@III"(i64 %idx754, i64 6)
  %82 = icmp ne i64 %return809, 0
  br i1 %82, label %true810, label %false811

true810:                                          ; preds = %false802
  %XST813 = load double*, double** %XST
  %return814 = call double* @"slice@[F[FIIIIII"(double* %XST813, i64 1, i64 78, i64 1, i64 91, i64 0, i64 0)
  %return816 = call i64 @"sample_cdf@[FFI"(double* %return814, double %return)
  br label %UnifiedReturnBlock

false811:                                         ; preds = %false802
  %return818 = call i64 @"eq@III"(i64 %idx754, i64 7)
  %83 = icmp ne i64 %return818, 0
  br i1 %83, label %true819, label %false820

true819:                                          ; preds = %false811
  %XST822 = load double*, double** %XST
  %return823 = call double* @"slice@[F[FIIIIII"(double* %XST822, i64 1, i64 91, i64 1, i64 104, i64 0, i64 0)
  %return825 = call i64 @"sample_cdf@[FFI"(double* %return823, double %return)
  br label %UnifiedReturnBlock

false820:                                         ; preds = %false811
  %return827 = call i64 @"eq@III"(i64 %idx754, i64 8)
  %84 = icmp ne i64 %return827, 0
  br i1 %84, label %true828, label %false829

true828:                                          ; preds = %false820
  %XST831 = load double*, double** %XST
  %return832 = call double* @"slice@[F[FIIIIII"(double* %XST831, i64 1, i64 104, i64 1, i64 117, i64 0, i64 0)
  %return834 = call i64 @"sample_cdf@[FFI"(double* %return832, double %return)
  br label %UnifiedReturnBlock

false829:                                         ; preds = %false820
  %return836 = call i64 @"eq@III"(i64 %idx754, i64 9)
  %85 = icmp ne i64 %return836, 0
  br i1 %85, label %true837, label %false838

true837:                                          ; preds = %false829
  %XST840 = load double*, double** %XST
  %return841 = call double* @"slice@[F[FIIIIII"(double* %XST840, i64 1, i64 117, i64 1, i64 130, i64 0, i64 0)
  %return843 = call i64 @"sample_cdf@[FFI"(double* %return841, double %return)
  br label %UnifiedReturnBlock

false838:                                         ; preds = %false829
  %return845 = call i64 @"eq@III"(i64 %idx754, i64 10)
  %86 = icmp ne i64 %return845, 0
  br i1 %86, label %true846, label %false847

true846:                                          ; preds = %false838
  %XST849 = load double*, double** %XST
  %return850 = call double* @"slice@[F[FIIIIII"(double* %XST849, i64 1, i64 130, i64 1, i64 143, i64 0, i64 0)
  %return852 = call i64 @"sample_cdf@[FFI"(double* %return850, double %return)
  br label %UnifiedReturnBlock

false847:                                         ; preds = %false838
  %return854 = call i64 @"eq@III"(i64 %idx754, i64 11)
  %87 = icmp ne i64 %return854, 0
  br i1 %87, label %true855, label %false856

true855:                                          ; preds = %false847
  %XST858 = load double*, double** %XST
  %return859 = call double* @"slice@[F[FIIIIII"(double* %XST858, i64 1, i64 143, i64 1, i64 156, i64 0, i64 0)
  %return861 = call i64 @"sample_cdf@[FFI"(double* %return859, double %return)
  br label %UnifiedReturnBlock

false856:                                         ; preds = %false847
  %return863 = call i64 @"eq@III"(i64 %idx754, i64 12)
  %88 = icmp ne i64 %return863, 0
  br i1 %88, label %true864, label %end

true864:                                          ; preds = %false856
  %XST866 = load double*, double** %XST
  %return867 = call double* @"slice@[F[FIIIIII"(double* %XST866, i64 1, i64 156, i64 1, i64 169, i64 0, i64 0)
  %return869 = call i64 @"sample_cdf@[FFI"(double* %return867, double %return)
  br label %UnifiedReturnBlock

true873:                                          ; preds = %false752
  %idx875 = load i64, i64* %idx
  %return876 = call i64 @"lt@III"(i64 %idx875, i64 7)
  %89 = icmp ne i64 %return876, 0
  br i1 %89, label %true877, label %false878

true877:                                          ; preds = %true873
  %return881 = call i64 @"eq@III"(i64 %idx875, i64 0)
  %90 = icmp ne i64 %return881, 0
  br i1 %90, label %true882, label %false883

false878:                                         ; preds = %true873
  %return943 = call i64 @"eq@III"(i64 %idx875, i64 7)
  %91 = icmp ne i64 %return943, 0
  br i1 %91, label %true944, label %false945

true882:                                          ; preds = %true877
  %XST885 = load double*, double** %XST
  %return886 = call double* @"slice@[F[FIIIIII"(double* %XST885, i64 1, i64 0, i64 1, i64 14, i64 0, i64 0)
  %return888 = call i64 @"sample_cdf@[FFI"(double* %return886, double %return)
  br label %UnifiedReturnBlock

false883:                                         ; preds = %true877
  %return890 = call i64 @"eq@III"(i64 %idx875, i64 1)
  %92 = icmp ne i64 %return890, 0
  br i1 %92, label %true891, label %false892

true891:                                          ; preds = %false883
  %XST894 = load double*, double** %XST
  %return895 = call double* @"slice@[F[FIIIIII"(double* %XST894, i64 1, i64 14, i64 1, i64 28, i64 0, i64 0)
  %return897 = call i64 @"sample_cdf@[FFI"(double* %return895, double %return)
  br label %UnifiedReturnBlock

false892:                                         ; preds = %false883
  %return899 = call i64 @"eq@III"(i64 %idx875, i64 2)
  %93 = icmp ne i64 %return899, 0
  br i1 %93, label %true900, label %false901

true900:                                          ; preds = %false892
  %XST903 = load double*, double** %XST
  %return904 = call double* @"slice@[F[FIIIIII"(double* %XST903, i64 1, i64 28, i64 1, i64 42, i64 0, i64 0)
  %return906 = call i64 @"sample_cdf@[FFI"(double* %return904, double %return)
  br label %UnifiedReturnBlock

false901:                                         ; preds = %false892
  %return908 = call i64 @"eq@III"(i64 %idx875, i64 3)
  %94 = icmp ne i64 %return908, 0
  br i1 %94, label %true909, label %false910

true909:                                          ; preds = %false901
  %XST912 = load double*, double** %XST
  %return913 = call double* @"slice@[F[FIIIIII"(double* %XST912, i64 1, i64 42, i64 1, i64 56, i64 0, i64 0)
  %return915 = call i64 @"sample_cdf@[FFI"(double* %return913, double %return)
  br label %UnifiedReturnBlock

false910:                                         ; preds = %false901
  %return917 = call i64 @"eq@III"(i64 %idx875, i64 4)
  %95 = icmp ne i64 %return917, 0
  br i1 %95, label %true918, label %false919

true918:                                          ; preds = %false910
  %XST921 = load double*, double** %XST
  %return922 = call double* @"slice@[F[FIIIIII"(double* %XST921, i64 1, i64 56, i64 1, i64 70, i64 0, i64 0)
  %return924 = call i64 @"sample_cdf@[FFI"(double* %return922, double %return)
  br label %UnifiedReturnBlock

false919:                                         ; preds = %false910
  %return926 = call i64 @"eq@III"(i64 %idx875, i64 5)
  %96 = icmp ne i64 %return926, 0
  br i1 %96, label %true927, label %false928

true927:                                          ; preds = %false919
  %XST930 = load double*, double** %XST
  %return931 = call double* @"slice@[F[FIIIIII"(double* %XST930, i64 1, i64 70, i64 1, i64 84, i64 0, i64 0)
  %return933 = call i64 @"sample_cdf@[FFI"(double* %return931, double %return)
  br label %UnifiedReturnBlock

false928:                                         ; preds = %false919
  %return935 = call i64 @"eq@III"(i64 %idx875, i64 6)
  %97 = icmp ne i64 %return935, 0
  br i1 %97, label %true936, label %end

true936:                                          ; preds = %false928
  %XST938 = load double*, double** %XST
  %return939 = call double* @"slice@[F[FIIIIII"(double* %XST938, i64 1, i64 84, i64 1, i64 98, i64 0, i64 0)
  %return941 = call i64 @"sample_cdf@[FFI"(double* %return939, double %return)
  br label %UnifiedReturnBlock

true944:                                          ; preds = %false878
  %XST947 = load double*, double** %XST
  %return948 = call double* @"slice@[F[FIIIIII"(double* %XST947, i64 1, i64 98, i64 1, i64 112, i64 0, i64 0)
  %return950 = call i64 @"sample_cdf@[FFI"(double* %return948, double %return)
  br label %UnifiedReturnBlock

false945:                                         ; preds = %false878
  %return952 = call i64 @"eq@III"(i64 %idx875, i64 8)
  %98 = icmp ne i64 %return952, 0
  br i1 %98, label %true953, label %false954

true953:                                          ; preds = %false945
  %XST956 = load double*, double** %XST
  %return957 = call double* @"slice@[F[FIIIIII"(double* %XST956, i64 1, i64 112, i64 1, i64 126, i64 0, i64 0)
  %return959 = call i64 @"sample_cdf@[FFI"(double* %return957, double %return)
  br label %UnifiedReturnBlock

false954:                                         ; preds = %false945
  %return961 = call i64 @"eq@III"(i64 %idx875, i64 9)
  %99 = icmp ne i64 %return961, 0
  br i1 %99, label %true962, label %false963

true962:                                          ; preds = %false954
  %XST965 = load double*, double** %XST
  %return966 = call double* @"slice@[F[FIIIIII"(double* %XST965, i64 1, i64 126, i64 1, i64 140, i64 0, i64 0)
  %return968 = call i64 @"sample_cdf@[FFI"(double* %return966, double %return)
  br label %UnifiedReturnBlock

false963:                                         ; preds = %false954
  %return970 = call i64 @"eq@III"(i64 %idx875, i64 10)
  %100 = icmp ne i64 %return970, 0
  br i1 %100, label %true971, label %false972

true971:                                          ; preds = %false963
  %XST974 = load double*, double** %XST
  %return975 = call double* @"slice@[F[FIIIIII"(double* %XST974, i64 1, i64 140, i64 1, i64 154, i64 0, i64 0)
  %return977 = call i64 @"sample_cdf@[FFI"(double* %return975, double %return)
  br label %UnifiedReturnBlock

false972:                                         ; preds = %false963
  %return979 = call i64 @"eq@III"(i64 %idx875, i64 11)
  %101 = icmp ne i64 %return979, 0
  br i1 %101, label %true980, label %false981

true980:                                          ; preds = %false972
  %XST983 = load double*, double** %XST
  %return984 = call double* @"slice@[F[FIIIIII"(double* %XST983, i64 1, i64 154, i64 1, i64 168, i64 0, i64 0)
  %return986 = call i64 @"sample_cdf@[FFI"(double* %return984, double %return)
  br label %UnifiedReturnBlock

false981:                                         ; preds = %false972
  %return988 = call i64 @"eq@III"(i64 %idx875, i64 12)
  %102 = icmp ne i64 %return988, 0
  br i1 %102, label %true989, label %false990

true989:                                          ; preds = %false981
  %XST992 = load double*, double** %XST
  %return993 = call double* @"slice@[F[FIIIIII"(double* %XST992, i64 1, i64 168, i64 1, i64 182, i64 0, i64 0)
  %return995 = call i64 @"sample_cdf@[FFI"(double* %return993, double %return)
  br label %UnifiedReturnBlock

false990:                                         ; preds = %false981
  %return997 = call i64 @"eq@III"(i64 %idx875, i64 13)
  %103 = icmp ne i64 %return997, 0
  br i1 %103, label %true998, label %end

true998:                                          ; preds = %false990
  %XST1000 = load double*, double** %XST
  %return1001 = call double* @"slice@[F[FIIIIII"(double* %XST1000, i64 1, i64 182, i64 1, i64 196, i64 0, i64 0)
  %return1003 = call i64 @"sample_cdf@[FFI"(double* %return1001, double %return)
  br label %UnifiedReturnBlock

true1007:                                         ; preds = %false
  %return1010 = fcmp oeq double %res1, 1.500000e+01
  br i1 %return1010, label %true1012, label %false1013

true1012:                                         ; preds = %true1007
  %idx1015 = load i64, i64* %idx
  %return1016 = call i64 @"lt@III"(i64 %idx1015, i64 8)
  %104 = icmp ne i64 %return1016, 0
  br i1 %104, label %true1017, label %false1018

false1013:                                        ; preds = %true1007
  %return1154 = fcmp oeq double %res1, 1.600000e+01
  br i1 %return1154, label %true1156, label %false1157

true1017:                                         ; preds = %true1012
  %return1021 = call i64 @"eq@III"(i64 %idx1015, i64 0)
  %105 = icmp ne i64 %return1021, 0
  br i1 %105, label %true1022, label %false1023

false1018:                                        ; preds = %true1012
  %return1092 = call i64 @"eq@III"(i64 %idx1015, i64 8)
  %106 = icmp ne i64 %return1092, 0
  br i1 %106, label %true1093, label %false1094

true1022:                                         ; preds = %true1017
  %XST1025 = load double*, double** %XST
  %return1026 = call double* @"slice@[F[FIIIIII"(double* %XST1025, i64 1, i64 0, i64 1, i64 15, i64 0, i64 0)
  %return1028 = call i64 @"sample_cdf@[FFI"(double* %return1026, double %return)
  br label %UnifiedReturnBlock

false1023:                                        ; preds = %true1017
  %return1030 = call i64 @"eq@III"(i64 %idx1015, i64 1)
  %107 = icmp ne i64 %return1030, 0
  br i1 %107, label %true1031, label %false1032

true1031:                                         ; preds = %false1023
  %XST1034 = load double*, double** %XST
  %return1035 = call double* @"slice@[F[FIIIIII"(double* %XST1034, i64 1, i64 15, i64 1, i64 30, i64 0, i64 0)
  %return1037 = call i64 @"sample_cdf@[FFI"(double* %return1035, double %return)
  br label %UnifiedReturnBlock

false1032:                                        ; preds = %false1023
  %return1039 = call i64 @"eq@III"(i64 %idx1015, i64 2)
  %108 = icmp ne i64 %return1039, 0
  br i1 %108, label %true1040, label %false1041

true1040:                                         ; preds = %false1032
  %XST1043 = load double*, double** %XST
  %return1044 = call double* @"slice@[F[FIIIIII"(double* %XST1043, i64 1, i64 30, i64 1, i64 45, i64 0, i64 0)
  %return1046 = call i64 @"sample_cdf@[FFI"(double* %return1044, double %return)
  br label %UnifiedReturnBlock

false1041:                                        ; preds = %false1032
  %return1048 = call i64 @"eq@III"(i64 %idx1015, i64 3)
  %109 = icmp ne i64 %return1048, 0
  br i1 %109, label %true1049, label %false1050

true1049:                                         ; preds = %false1041
  %XST1052 = load double*, double** %XST
  %return1053 = call double* @"slice@[F[FIIIIII"(double* %XST1052, i64 1, i64 45, i64 1, i64 60, i64 0, i64 0)
  %return1055 = call i64 @"sample_cdf@[FFI"(double* %return1053, double %return)
  br label %UnifiedReturnBlock

false1050:                                        ; preds = %false1041
  %return1057 = call i64 @"eq@III"(i64 %idx1015, i64 4)
  %110 = icmp ne i64 %return1057, 0
  br i1 %110, label %true1058, label %false1059

true1058:                                         ; preds = %false1050
  %XST1061 = load double*, double** %XST
  %return1062 = call double* @"slice@[F[FIIIIII"(double* %XST1061, i64 1, i64 60, i64 1, i64 75, i64 0, i64 0)
  %return1064 = call i64 @"sample_cdf@[FFI"(double* %return1062, double %return)
  br label %UnifiedReturnBlock

false1059:                                        ; preds = %false1050
  %return1066 = call i64 @"eq@III"(i64 %idx1015, i64 5)
  %111 = icmp ne i64 %return1066, 0
  br i1 %111, label %true1067, label %false1068

true1067:                                         ; preds = %false1059
  %XST1070 = load double*, double** %XST
  %return1071 = call double* @"slice@[F[FIIIIII"(double* %XST1070, i64 1, i64 75, i64 1, i64 90, i64 0, i64 0)
  %return1073 = call i64 @"sample_cdf@[FFI"(double* %return1071, double %return)
  br label %UnifiedReturnBlock

false1068:                                        ; preds = %false1059
  %return1075 = call i64 @"eq@III"(i64 %idx1015, i64 6)
  %112 = icmp ne i64 %return1075, 0
  br i1 %112, label %true1076, label %false1077

true1076:                                         ; preds = %false1068
  %XST1079 = load double*, double** %XST
  %return1080 = call double* @"slice@[F[FIIIIII"(double* %XST1079, i64 1, i64 90, i64 1, i64 105, i64 0, i64 0)
  %return1082 = call i64 @"sample_cdf@[FFI"(double* %return1080, double %return)
  br label %UnifiedReturnBlock

false1077:                                        ; preds = %false1068
  %return1084 = call i64 @"eq@III"(i64 %idx1015, i64 7)
  %113 = icmp ne i64 %return1084, 0
  br i1 %113, label %true1085, label %end

true1085:                                         ; preds = %false1077
  %XST1087 = load double*, double** %XST
  %return1088 = call double* @"slice@[F[FIIIIII"(double* %XST1087, i64 1, i64 105, i64 1, i64 120, i64 0, i64 0)
  %return1090 = call i64 @"sample_cdf@[FFI"(double* %return1088, double %return)
  br label %UnifiedReturnBlock

true1093:                                         ; preds = %false1018
  %XST1096 = load double*, double** %XST
  %return1097 = call double* @"slice@[F[FIIIIII"(double* %XST1096, i64 1, i64 120, i64 1, i64 135, i64 0, i64 0)
  %return1099 = call i64 @"sample_cdf@[FFI"(double* %return1097, double %return)
  br label %UnifiedReturnBlock

false1094:                                        ; preds = %false1018
  %return1101 = call i64 @"eq@III"(i64 %idx1015, i64 9)
  %114 = icmp ne i64 %return1101, 0
  br i1 %114, label %true1102, label %false1103

true1102:                                         ; preds = %false1094
  %XST1105 = load double*, double** %XST
  %return1106 = call double* @"slice@[F[FIIIIII"(double* %XST1105, i64 1, i64 135, i64 1, i64 150, i64 0, i64 0)
  %return1108 = call i64 @"sample_cdf@[FFI"(double* %return1106, double %return)
  br label %UnifiedReturnBlock

false1103:                                        ; preds = %false1094
  %return1110 = call i64 @"eq@III"(i64 %idx1015, i64 10)
  %115 = icmp ne i64 %return1110, 0
  br i1 %115, label %true1111, label %false1112

true1111:                                         ; preds = %false1103
  %XST1114 = load double*, double** %XST
  %return1115 = call double* @"slice@[F[FIIIIII"(double* %XST1114, i64 1, i64 150, i64 1, i64 165, i64 0, i64 0)
  %return1117 = call i64 @"sample_cdf@[FFI"(double* %return1115, double %return)
  br label %UnifiedReturnBlock

false1112:                                        ; preds = %false1103
  %return1119 = call i64 @"eq@III"(i64 %idx1015, i64 11)
  %116 = icmp ne i64 %return1119, 0
  br i1 %116, label %true1120, label %false1121

true1120:                                         ; preds = %false1112
  %XST1123 = load double*, double** %XST
  %return1124 = call double* @"slice@[F[FIIIIII"(double* %XST1123, i64 1, i64 165, i64 1, i64 180, i64 0, i64 0)
  %return1126 = call i64 @"sample_cdf@[FFI"(double* %return1124, double %return)
  br label %UnifiedReturnBlock

false1121:                                        ; preds = %false1112
  %return1128 = call i64 @"eq@III"(i64 %idx1015, i64 12)
  %117 = icmp ne i64 %return1128, 0
  br i1 %117, label %true1129, label %false1130

true1129:                                         ; preds = %false1121
  %XST1132 = load double*, double** %XST
  %return1133 = call double* @"slice@[F[FIIIIII"(double* %XST1132, i64 1, i64 180, i64 1, i64 195, i64 0, i64 0)
  %return1135 = call i64 @"sample_cdf@[FFI"(double* %return1133, double %return)
  br label %UnifiedReturnBlock

false1130:                                        ; preds = %false1121
  %return1137 = call i64 @"eq@III"(i64 %idx1015, i64 13)
  %118 = icmp ne i64 %return1137, 0
  br i1 %118, label %true1138, label %false1139

true1138:                                         ; preds = %false1130
  %XST1141 = load double*, double** %XST
  %return1142 = call double* @"slice@[F[FIIIIII"(double* %XST1141, i64 1, i64 195, i64 1, i64 210, i64 0, i64 0)
  %return1144 = call i64 @"sample_cdf@[FFI"(double* %return1142, double %return)
  br label %UnifiedReturnBlock

false1139:                                        ; preds = %false1130
  %return1146 = call i64 @"eq@III"(i64 %idx1015, i64 14)
  %119 = icmp ne i64 %return1146, 0
  br i1 %119, label %true1147, label %end

true1147:                                         ; preds = %false1139
  %XST1149 = load double*, double** %XST
  %return1150 = call double* @"slice@[F[FIIIIII"(double* %XST1149, i64 1, i64 210, i64 1, i64 225, i64 0, i64 0)
  %return1152 = call i64 @"sample_cdf@[FFI"(double* %return1150, double %return)
  br label %UnifiedReturnBlock

true1156:                                         ; preds = %false1013
  %idx1159 = load i64, i64* %idx
  %return1160 = call i64 @"lt@III"(i64 %idx1159, i64 8)
  %120 = icmp ne i64 %return1160, 0
  br i1 %120, label %true1161, label %false1162

false1157:                                        ; preds = %false1013
  %return1307 = fcmp oeq double %res1, 1.700000e+01
  br i1 %return1307, label %true1309, label %false1310

true1161:                                         ; preds = %true1156
  %return1165 = call i64 @"eq@III"(i64 %idx1159, i64 0)
  %121 = icmp ne i64 %return1165, 0
  br i1 %121, label %true1166, label %false1167

false1162:                                        ; preds = %true1156
  %return1236 = call i64 @"eq@III"(i64 %idx1159, i64 8)
  %122 = icmp ne i64 %return1236, 0
  br i1 %122, label %true1237, label %false1238

true1166:                                         ; preds = %true1161
  %XST1169 = load double*, double** %XST
  %return1170 = call double* @"slice@[F[FIIIIII"(double* %XST1169, i64 1, i64 0, i64 1, i64 16, i64 0, i64 0)
  %return1172 = call i64 @"sample_cdf@[FFI"(double* %return1170, double %return)
  br label %UnifiedReturnBlock

false1167:                                        ; preds = %true1161
  %return1174 = call i64 @"eq@III"(i64 %idx1159, i64 1)
  %123 = icmp ne i64 %return1174, 0
  br i1 %123, label %true1175, label %false1176

true1175:                                         ; preds = %false1167
  %XST1178 = load double*, double** %XST
  %return1179 = call double* @"slice@[F[FIIIIII"(double* %XST1178, i64 1, i64 16, i64 1, i64 32, i64 0, i64 0)
  %return1181 = call i64 @"sample_cdf@[FFI"(double* %return1179, double %return)
  br label %UnifiedReturnBlock

false1176:                                        ; preds = %false1167
  %return1183 = call i64 @"eq@III"(i64 %idx1159, i64 2)
  %124 = icmp ne i64 %return1183, 0
  br i1 %124, label %true1184, label %false1185

true1184:                                         ; preds = %false1176
  %XST1187 = load double*, double** %XST
  %return1188 = call double* @"slice@[F[FIIIIII"(double* %XST1187, i64 1, i64 32, i64 1, i64 48, i64 0, i64 0)
  %return1190 = call i64 @"sample_cdf@[FFI"(double* %return1188, double %return)
  br label %UnifiedReturnBlock

false1185:                                        ; preds = %false1176
  %return1192 = call i64 @"eq@III"(i64 %idx1159, i64 3)
  %125 = icmp ne i64 %return1192, 0
  br i1 %125, label %true1193, label %false1194

true1193:                                         ; preds = %false1185
  %XST1196 = load double*, double** %XST
  %return1197 = call double* @"slice@[F[FIIIIII"(double* %XST1196, i64 1, i64 48, i64 1, i64 64, i64 0, i64 0)
  %return1199 = call i64 @"sample_cdf@[FFI"(double* %return1197, double %return)
  br label %UnifiedReturnBlock

false1194:                                        ; preds = %false1185
  %return1201 = call i64 @"eq@III"(i64 %idx1159, i64 4)
  %126 = icmp ne i64 %return1201, 0
  br i1 %126, label %true1202, label %false1203

true1202:                                         ; preds = %false1194
  %XST1205 = load double*, double** %XST
  %return1206 = call double* @"slice@[F[FIIIIII"(double* %XST1205, i64 1, i64 64, i64 1, i64 80, i64 0, i64 0)
  %return1208 = call i64 @"sample_cdf@[FFI"(double* %return1206, double %return)
  br label %UnifiedReturnBlock

false1203:                                        ; preds = %false1194
  %return1210 = call i64 @"eq@III"(i64 %idx1159, i64 5)
  %127 = icmp ne i64 %return1210, 0
  br i1 %127, label %true1211, label %false1212

true1211:                                         ; preds = %false1203
  %XST1214 = load double*, double** %XST
  %return1215 = call double* @"slice@[F[FIIIIII"(double* %XST1214, i64 1, i64 80, i64 1, i64 96, i64 0, i64 0)
  %return1217 = call i64 @"sample_cdf@[FFI"(double* %return1215, double %return)
  br label %UnifiedReturnBlock

false1212:                                        ; preds = %false1203
  %return1219 = call i64 @"eq@III"(i64 %idx1159, i64 6)
  %128 = icmp ne i64 %return1219, 0
  br i1 %128, label %true1220, label %false1221

true1220:                                         ; preds = %false1212
  %XST1223 = load double*, double** %XST
  %return1224 = call double* @"slice@[F[FIIIIII"(double* %XST1223, i64 1, i64 96, i64 1, i64 112, i64 0, i64 0)
  %return1226 = call i64 @"sample_cdf@[FFI"(double* %return1224, double %return)
  br label %UnifiedReturnBlock

false1221:                                        ; preds = %false1212
  %return1228 = call i64 @"eq@III"(i64 %idx1159, i64 7)
  %129 = icmp ne i64 %return1228, 0
  br i1 %129, label %true1229, label %end

true1229:                                         ; preds = %false1221
  %XST1231 = load double*, double** %XST
  %return1232 = call double* @"slice@[F[FIIIIII"(double* %XST1231, i64 1, i64 112, i64 1, i64 128, i64 0, i64 0)
  %return1234 = call i64 @"sample_cdf@[FFI"(double* %return1232, double %return)
  br label %UnifiedReturnBlock

true1237:                                         ; preds = %false1162
  %XST1240 = load double*, double** %XST
  %return1241 = call double* @"slice@[F[FIIIIII"(double* %XST1240, i64 1, i64 128, i64 1, i64 144, i64 0, i64 0)
  %return1243 = call i64 @"sample_cdf@[FFI"(double* %return1241, double %return)
  br label %UnifiedReturnBlock

false1238:                                        ; preds = %false1162
  %return1245 = call i64 @"eq@III"(i64 %idx1159, i64 9)
  %130 = icmp ne i64 %return1245, 0
  br i1 %130, label %true1246, label %false1247

true1246:                                         ; preds = %false1238
  %XST1249 = load double*, double** %XST
  %return1250 = call double* @"slice@[F[FIIIIII"(double* %XST1249, i64 1, i64 144, i64 1, i64 160, i64 0, i64 0)
  %return1252 = call i64 @"sample_cdf@[FFI"(double* %return1250, double %return)
  br label %UnifiedReturnBlock

false1247:                                        ; preds = %false1238
  %return1254 = call i64 @"eq@III"(i64 %idx1159, i64 10)
  %131 = icmp ne i64 %return1254, 0
  br i1 %131, label %true1255, label %false1256

true1255:                                         ; preds = %false1247
  %XST1258 = load double*, double** %XST
  %return1259 = call double* @"slice@[F[FIIIIII"(double* %XST1258, i64 1, i64 160, i64 1, i64 176, i64 0, i64 0)
  %return1261 = call i64 @"sample_cdf@[FFI"(double* %return1259, double %return)
  br label %UnifiedReturnBlock

false1256:                                        ; preds = %false1247
  %return1263 = call i64 @"eq@III"(i64 %idx1159, i64 11)
  %132 = icmp ne i64 %return1263, 0
  br i1 %132, label %true1264, label %false1265

true1264:                                         ; preds = %false1256
  %XST1267 = load double*, double** %XST
  %return1268 = call double* @"slice@[F[FIIIIII"(double* %XST1267, i64 1, i64 176, i64 1, i64 192, i64 0, i64 0)
  %return1270 = call i64 @"sample_cdf@[FFI"(double* %return1268, double %return)
  br label %UnifiedReturnBlock

false1265:                                        ; preds = %false1256
  %return1272 = call i64 @"eq@III"(i64 %idx1159, i64 12)
  %133 = icmp ne i64 %return1272, 0
  br i1 %133, label %true1273, label %false1274

true1273:                                         ; preds = %false1265
  %XST1276 = load double*, double** %XST
  %return1277 = call double* @"slice@[F[FIIIIII"(double* %XST1276, i64 1, i64 192, i64 1, i64 208, i64 0, i64 0)
  %return1279 = call i64 @"sample_cdf@[FFI"(double* %return1277, double %return)
  br label %UnifiedReturnBlock

false1274:                                        ; preds = %false1265
  %return1281 = call i64 @"eq@III"(i64 %idx1159, i64 13)
  %134 = icmp ne i64 %return1281, 0
  br i1 %134, label %true1282, label %false1283

true1282:                                         ; preds = %false1274
  %XST1285 = load double*, double** %XST
  %return1286 = call double* @"slice@[F[FIIIIII"(double* %XST1285, i64 1, i64 208, i64 1, i64 224, i64 0, i64 0)
  %return1288 = call i64 @"sample_cdf@[FFI"(double* %return1286, double %return)
  br label %UnifiedReturnBlock

false1283:                                        ; preds = %false1274
  %return1290 = call i64 @"eq@III"(i64 %idx1159, i64 14)
  %135 = icmp ne i64 %return1290, 0
  br i1 %135, label %true1291, label %false1292

true1291:                                         ; preds = %false1283
  %XST1294 = load double*, double** %XST
  %return1295 = call double* @"slice@[F[FIIIIII"(double* %XST1294, i64 1, i64 224, i64 1, i64 240, i64 0, i64 0)
  %return1297 = call i64 @"sample_cdf@[FFI"(double* %return1295, double %return)
  br label %UnifiedReturnBlock

false1292:                                        ; preds = %false1283
  %return1299 = call i64 @"eq@III"(i64 %idx1159, i64 15)
  %136 = icmp ne i64 %return1299, 0
  br i1 %136, label %true1300, label %end

true1300:                                         ; preds = %false1292
  %XST1302 = load double*, double** %XST
  %return1303 = call double* @"slice@[F[FIIIIII"(double* %XST1302, i64 1, i64 240, i64 1, i64 256, i64 0, i64 0)
  %return1305 = call i64 @"sample_cdf@[FFI"(double* %return1303, double %return)
  br label %UnifiedReturnBlock

true1309:                                         ; preds = %false1157
  %idx1312 = load i64, i64* %idx
  %return1313 = call i64 @"lt@III"(i64 %idx1312, i64 9)
  %137 = icmp ne i64 %return1313, 0
  br i1 %137, label %true1314, label %false1315

false1310:                                        ; preds = %false1157
  %return1469 = fcmp oeq double %res1, 1.800000e+01
  br i1 %return1469, label %true1471, label %false1472

true1314:                                         ; preds = %true1309
  %return1318 = call i64 @"eq@III"(i64 %idx1312, i64 0)
  %138 = icmp ne i64 %return1318, 0
  br i1 %138, label %true1319, label %false1320

false1315:                                        ; preds = %true1309
  %return1398 = call i64 @"eq@III"(i64 %idx1312, i64 9)
  %139 = icmp ne i64 %return1398, 0
  br i1 %139, label %true1399, label %false1400

true1319:                                         ; preds = %true1314
  %XST1322 = load double*, double** %XST
  %return1323 = call double* @"slice@[F[FIIIIII"(double* %XST1322, i64 1, i64 0, i64 1, i64 17, i64 0, i64 0)
  %return1325 = call i64 @"sample_cdf@[FFI"(double* %return1323, double %return)
  br label %UnifiedReturnBlock

false1320:                                        ; preds = %true1314
  %return1327 = call i64 @"eq@III"(i64 %idx1312, i64 1)
  %140 = icmp ne i64 %return1327, 0
  br i1 %140, label %true1328, label %false1329

true1328:                                         ; preds = %false1320
  %XST1331 = load double*, double** %XST
  %return1332 = call double* @"slice@[F[FIIIIII"(double* %XST1331, i64 1, i64 17, i64 1, i64 34, i64 0, i64 0)
  %return1334 = call i64 @"sample_cdf@[FFI"(double* %return1332, double %return)
  br label %UnifiedReturnBlock

false1329:                                        ; preds = %false1320
  %return1336 = call i64 @"eq@III"(i64 %idx1312, i64 2)
  %141 = icmp ne i64 %return1336, 0
  br i1 %141, label %true1337, label %false1338

true1337:                                         ; preds = %false1329
  %XST1340 = load double*, double** %XST
  %return1341 = call double* @"slice@[F[FIIIIII"(double* %XST1340, i64 1, i64 34, i64 1, i64 51, i64 0, i64 0)
  %return1343 = call i64 @"sample_cdf@[FFI"(double* %return1341, double %return)
  br label %UnifiedReturnBlock

false1338:                                        ; preds = %false1329
  %return1345 = call i64 @"eq@III"(i64 %idx1312, i64 3)
  %142 = icmp ne i64 %return1345, 0
  br i1 %142, label %true1346, label %false1347

true1346:                                         ; preds = %false1338
  %XST1349 = load double*, double** %XST
  %return1350 = call double* @"slice@[F[FIIIIII"(double* %XST1349, i64 1, i64 51, i64 1, i64 68, i64 0, i64 0)
  %return1352 = call i64 @"sample_cdf@[FFI"(double* %return1350, double %return)
  br label %UnifiedReturnBlock

false1347:                                        ; preds = %false1338
  %return1354 = call i64 @"eq@III"(i64 %idx1312, i64 4)
  %143 = icmp ne i64 %return1354, 0
  br i1 %143, label %true1355, label %false1356

true1355:                                         ; preds = %false1347
  %XST1358 = load double*, double** %XST
  %return1359 = call double* @"slice@[F[FIIIIII"(double* %XST1358, i64 1, i64 68, i64 1, i64 85, i64 0, i64 0)
  %return1361 = call i64 @"sample_cdf@[FFI"(double* %return1359, double %return)
  br label %UnifiedReturnBlock

false1356:                                        ; preds = %false1347
  %return1363 = call i64 @"eq@III"(i64 %idx1312, i64 5)
  %144 = icmp ne i64 %return1363, 0
  br i1 %144, label %true1364, label %false1365

true1364:                                         ; preds = %false1356
  %XST1367 = load double*, double** %XST
  %return1368 = call double* @"slice@[F[FIIIIII"(double* %XST1367, i64 1, i64 85, i64 1, i64 102, i64 0, i64 0)
  %return1370 = call i64 @"sample_cdf@[FFI"(double* %return1368, double %return)
  br label %UnifiedReturnBlock

false1365:                                        ; preds = %false1356
  %return1372 = call i64 @"eq@III"(i64 %idx1312, i64 6)
  %145 = icmp ne i64 %return1372, 0
  br i1 %145, label %true1373, label %false1374

true1373:                                         ; preds = %false1365
  %XST1376 = load double*, double** %XST
  %return1377 = call double* @"slice@[F[FIIIIII"(double* %XST1376, i64 1, i64 102, i64 1, i64 119, i64 0, i64 0)
  %return1379 = call i64 @"sample_cdf@[FFI"(double* %return1377, double %return)
  br label %UnifiedReturnBlock

false1374:                                        ; preds = %false1365
  %return1381 = call i64 @"eq@III"(i64 %idx1312, i64 7)
  %146 = icmp ne i64 %return1381, 0
  br i1 %146, label %true1382, label %false1383

true1382:                                         ; preds = %false1374
  %XST1385 = load double*, double** %XST
  %return1386 = call double* @"slice@[F[FIIIIII"(double* %XST1385, i64 1, i64 119, i64 1, i64 136, i64 0, i64 0)
  %return1388 = call i64 @"sample_cdf@[FFI"(double* %return1386, double %return)
  br label %UnifiedReturnBlock

false1383:                                        ; preds = %false1374
  %return1390 = call i64 @"eq@III"(i64 %idx1312, i64 8)
  %147 = icmp ne i64 %return1390, 0
  br i1 %147, label %true1391, label %end

true1391:                                         ; preds = %false1383
  %XST1393 = load double*, double** %XST
  %return1394 = call double* @"slice@[F[FIIIIII"(double* %XST1393, i64 1, i64 136, i64 1, i64 153, i64 0, i64 0)
  %return1396 = call i64 @"sample_cdf@[FFI"(double* %return1394, double %return)
  br label %UnifiedReturnBlock

true1399:                                         ; preds = %false1315
  %XST1402 = load double*, double** %XST
  %return1403 = call double* @"slice@[F[FIIIIII"(double* %XST1402, i64 1, i64 153, i64 1, i64 170, i64 0, i64 0)
  %return1405 = call i64 @"sample_cdf@[FFI"(double* %return1403, double %return)
  br label %UnifiedReturnBlock

false1400:                                        ; preds = %false1315
  %return1407 = call i64 @"eq@III"(i64 %idx1312, i64 10)
  %148 = icmp ne i64 %return1407, 0
  br i1 %148, label %true1408, label %false1409

true1408:                                         ; preds = %false1400
  %XST1411 = load double*, double** %XST
  %return1412 = call double* @"slice@[F[FIIIIII"(double* %XST1411, i64 1, i64 170, i64 1, i64 187, i64 0, i64 0)
  %return1414 = call i64 @"sample_cdf@[FFI"(double* %return1412, double %return)
  br label %UnifiedReturnBlock

false1409:                                        ; preds = %false1400
  %return1416 = call i64 @"eq@III"(i64 %idx1312, i64 11)
  %149 = icmp ne i64 %return1416, 0
  br i1 %149, label %true1417, label %false1418

true1417:                                         ; preds = %false1409
  %XST1420 = load double*, double** %XST
  %return1421 = call double* @"slice@[F[FIIIIII"(double* %XST1420, i64 1, i64 187, i64 1, i64 204, i64 0, i64 0)
  %return1423 = call i64 @"sample_cdf@[FFI"(double* %return1421, double %return)
  br label %UnifiedReturnBlock

false1418:                                        ; preds = %false1409
  %return1425 = call i64 @"eq@III"(i64 %idx1312, i64 12)
  %150 = icmp ne i64 %return1425, 0
  br i1 %150, label %true1426, label %false1427

true1426:                                         ; preds = %false1418
  %XST1429 = load double*, double** %XST
  %return1430 = call double* @"slice@[F[FIIIIII"(double* %XST1429, i64 1, i64 204, i64 1, i64 221, i64 0, i64 0)
  %return1432 = call i64 @"sample_cdf@[FFI"(double* %return1430, double %return)
  br label %UnifiedReturnBlock

false1427:                                        ; preds = %false1418
  %return1434 = call i64 @"eq@III"(i64 %idx1312, i64 13)
  %151 = icmp ne i64 %return1434, 0
  br i1 %151, label %true1435, label %false1436

true1435:                                         ; preds = %false1427
  %XST1438 = load double*, double** %XST
  %return1439 = call double* @"slice@[F[FIIIIII"(double* %XST1438, i64 1, i64 221, i64 1, i64 238, i64 0, i64 0)
  %return1441 = call i64 @"sample_cdf@[FFI"(double* %return1439, double %return)
  br label %UnifiedReturnBlock

false1436:                                        ; preds = %false1427
  %return1443 = call i64 @"eq@III"(i64 %idx1312, i64 14)
  %152 = icmp ne i64 %return1443, 0
  br i1 %152, label %true1444, label %false1445

true1444:                                         ; preds = %false1436
  %XST1447 = load double*, double** %XST
  %return1448 = call double* @"slice@[F[FIIIIII"(double* %XST1447, i64 1, i64 238, i64 1, i64 255, i64 0, i64 0)
  %return1450 = call i64 @"sample_cdf@[FFI"(double* %return1448, double %return)
  br label %UnifiedReturnBlock

false1445:                                        ; preds = %false1436
  %return1452 = call i64 @"eq@III"(i64 %idx1312, i64 15)
  %153 = icmp ne i64 %return1452, 0
  br i1 %153, label %true1453, label %false1454

true1453:                                         ; preds = %false1445
  %XST1456 = load double*, double** %XST
  %return1457 = call double* @"slice@[F[FIIIIII"(double* %XST1456, i64 1, i64 255, i64 1, i64 272, i64 0, i64 0)
  %return1459 = call i64 @"sample_cdf@[FFI"(double* %return1457, double %return)
  br label %UnifiedReturnBlock

false1454:                                        ; preds = %false1445
  %return1461 = call i64 @"eq@III"(i64 %idx1312, i64 16)
  %154 = icmp ne i64 %return1461, 0
  br i1 %154, label %true1462, label %end

true1462:                                         ; preds = %false1454
  %XST1464 = load double*, double** %XST
  %return1465 = call double* @"slice@[F[FIIIIII"(double* %XST1464, i64 1, i64 272, i64 1, i64 289, i64 0, i64 0)
  %return1467 = call i64 @"sample_cdf@[FFI"(double* %return1465, double %return)
  br label %UnifiedReturnBlock

true1471:                                         ; preds = %false1310
  %idx1474 = load i64, i64* %idx
  %return1475 = call i64 @"lt@III"(i64 %idx1474, i64 9)
  %155 = icmp ne i64 %return1475, 0
  br i1 %155, label %true1476, label %false1477

false1472:                                        ; preds = %false1310
  %return1640 = fcmp oeq double %res1, 1.900000e+01
  br i1 %return1640, label %true1642, label %false1643

true1476:                                         ; preds = %true1471
  %return1480 = call i64 @"eq@III"(i64 %idx1474, i64 0)
  %156 = icmp ne i64 %return1480, 0
  br i1 %156, label %true1481, label %false1482

false1477:                                        ; preds = %true1471
  %return1560 = call i64 @"eq@III"(i64 %idx1474, i64 9)
  %157 = icmp ne i64 %return1560, 0
  br i1 %157, label %true1561, label %false1562

true1481:                                         ; preds = %true1476
  %XST1484 = load double*, double** %XST
  %return1485 = call double* @"slice@[F[FIIIIII"(double* %XST1484, i64 1, i64 0, i64 1, i64 18, i64 0, i64 0)
  %return1487 = call i64 @"sample_cdf@[FFI"(double* %return1485, double %return)
  br label %UnifiedReturnBlock

false1482:                                        ; preds = %true1476
  %return1489 = call i64 @"eq@III"(i64 %idx1474, i64 1)
  %158 = icmp ne i64 %return1489, 0
  br i1 %158, label %true1490, label %false1491

true1490:                                         ; preds = %false1482
  %XST1493 = load double*, double** %XST
  %return1494 = call double* @"slice@[F[FIIIIII"(double* %XST1493, i64 1, i64 18, i64 1, i64 36, i64 0, i64 0)
  %return1496 = call i64 @"sample_cdf@[FFI"(double* %return1494, double %return)
  br label %UnifiedReturnBlock

false1491:                                        ; preds = %false1482
  %return1498 = call i64 @"eq@III"(i64 %idx1474, i64 2)
  %159 = icmp ne i64 %return1498, 0
  br i1 %159, label %true1499, label %false1500

true1499:                                         ; preds = %false1491
  %XST1502 = load double*, double** %XST
  %return1503 = call double* @"slice@[F[FIIIIII"(double* %XST1502, i64 1, i64 36, i64 1, i64 54, i64 0, i64 0)
  %return1505 = call i64 @"sample_cdf@[FFI"(double* %return1503, double %return)
  br label %UnifiedReturnBlock

false1500:                                        ; preds = %false1491
  %return1507 = call i64 @"eq@III"(i64 %idx1474, i64 3)
  %160 = icmp ne i64 %return1507, 0
  br i1 %160, label %true1508, label %false1509

true1508:                                         ; preds = %false1500
  %XST1511 = load double*, double** %XST
  %return1512 = call double* @"slice@[F[FIIIIII"(double* %XST1511, i64 1, i64 54, i64 1, i64 72, i64 0, i64 0)
  %return1514 = call i64 @"sample_cdf@[FFI"(double* %return1512, double %return)
  br label %UnifiedReturnBlock

false1509:                                        ; preds = %false1500
  %return1516 = call i64 @"eq@III"(i64 %idx1474, i64 4)
  %161 = icmp ne i64 %return1516, 0
  br i1 %161, label %true1517, label %false1518

true1517:                                         ; preds = %false1509
  %XST1520 = load double*, double** %XST
  %return1521 = call double* @"slice@[F[FIIIIII"(double* %XST1520, i64 1, i64 72, i64 1, i64 90, i64 0, i64 0)
  %return1523 = call i64 @"sample_cdf@[FFI"(double* %return1521, double %return)
  br label %UnifiedReturnBlock

false1518:                                        ; preds = %false1509
  %return1525 = call i64 @"eq@III"(i64 %idx1474, i64 5)
  %162 = icmp ne i64 %return1525, 0
  br i1 %162, label %true1526, label %false1527

true1526:                                         ; preds = %false1518
  %XST1529 = load double*, double** %XST
  %return1530 = call double* @"slice@[F[FIIIIII"(double* %XST1529, i64 1, i64 90, i64 1, i64 108, i64 0, i64 0)
  %return1532 = call i64 @"sample_cdf@[FFI"(double* %return1530, double %return)
  br label %UnifiedReturnBlock

false1527:                                        ; preds = %false1518
  %return1534 = call i64 @"eq@III"(i64 %idx1474, i64 6)
  %163 = icmp ne i64 %return1534, 0
  br i1 %163, label %true1535, label %false1536

true1535:                                         ; preds = %false1527
  %XST1538 = load double*, double** %XST
  %return1539 = call double* @"slice@[F[FIIIIII"(double* %XST1538, i64 1, i64 108, i64 1, i64 126, i64 0, i64 0)
  %return1541 = call i64 @"sample_cdf@[FFI"(double* %return1539, double %return)
  br label %UnifiedReturnBlock

false1536:                                        ; preds = %false1527
  %return1543 = call i64 @"eq@III"(i64 %idx1474, i64 7)
  %164 = icmp ne i64 %return1543, 0
  br i1 %164, label %true1544, label %false1545

true1544:                                         ; preds = %false1536
  %XST1547 = load double*, double** %XST
  %return1548 = call double* @"slice@[F[FIIIIII"(double* %XST1547, i64 1, i64 126, i64 1, i64 144, i64 0, i64 0)
  %return1550 = call i64 @"sample_cdf@[FFI"(double* %return1548, double %return)
  br label %UnifiedReturnBlock

false1545:                                        ; preds = %false1536
  %return1552 = call i64 @"eq@III"(i64 %idx1474, i64 8)
  %165 = icmp ne i64 %return1552, 0
  br i1 %165, label %true1553, label %end

true1553:                                         ; preds = %false1545
  %XST1555 = load double*, double** %XST
  %return1556 = call double* @"slice@[F[FIIIIII"(double* %XST1555, i64 1, i64 144, i64 1, i64 162, i64 0, i64 0)
  %return1558 = call i64 @"sample_cdf@[FFI"(double* %return1556, double %return)
  br label %UnifiedReturnBlock

true1561:                                         ; preds = %false1477
  %XST1564 = load double*, double** %XST
  %return1565 = call double* @"slice@[F[FIIIIII"(double* %XST1564, i64 1, i64 162, i64 1, i64 180, i64 0, i64 0)
  %return1567 = call i64 @"sample_cdf@[FFI"(double* %return1565, double %return)
  br label %UnifiedReturnBlock

false1562:                                        ; preds = %false1477
  %return1569 = call i64 @"eq@III"(i64 %idx1474, i64 10)
  %166 = icmp ne i64 %return1569, 0
  br i1 %166, label %true1570, label %false1571

true1570:                                         ; preds = %false1562
  %XST1573 = load double*, double** %XST
  %return1574 = call double* @"slice@[F[FIIIIII"(double* %XST1573, i64 1, i64 180, i64 1, i64 198, i64 0, i64 0)
  %return1576 = call i64 @"sample_cdf@[FFI"(double* %return1574, double %return)
  br label %UnifiedReturnBlock

false1571:                                        ; preds = %false1562
  %return1578 = call i64 @"eq@III"(i64 %idx1474, i64 11)
  %167 = icmp ne i64 %return1578, 0
  br i1 %167, label %true1579, label %false1580

true1579:                                         ; preds = %false1571
  %XST1582 = load double*, double** %XST
  %return1583 = call double* @"slice@[F[FIIIIII"(double* %XST1582, i64 1, i64 198, i64 1, i64 216, i64 0, i64 0)
  %return1585 = call i64 @"sample_cdf@[FFI"(double* %return1583, double %return)
  br label %UnifiedReturnBlock

false1580:                                        ; preds = %false1571
  %return1587 = call i64 @"eq@III"(i64 %idx1474, i64 12)
  %168 = icmp ne i64 %return1587, 0
  br i1 %168, label %true1588, label %false1589

true1588:                                         ; preds = %false1580
  %XST1591 = load double*, double** %XST
  %return1592 = call double* @"slice@[F[FIIIIII"(double* %XST1591, i64 1, i64 216, i64 1, i64 234, i64 0, i64 0)
  %return1594 = call i64 @"sample_cdf@[FFI"(double* %return1592, double %return)
  br label %UnifiedReturnBlock

false1589:                                        ; preds = %false1580
  %return1596 = call i64 @"eq@III"(i64 %idx1474, i64 13)
  %169 = icmp ne i64 %return1596, 0
  br i1 %169, label %true1597, label %false1598

true1597:                                         ; preds = %false1589
  %XST1600 = load double*, double** %XST
  %return1601 = call double* @"slice@[F[FIIIIII"(double* %XST1600, i64 1, i64 234, i64 1, i64 252, i64 0, i64 0)
  %return1603 = call i64 @"sample_cdf@[FFI"(double* %return1601, double %return)
  br label %UnifiedReturnBlock

false1598:                                        ; preds = %false1589
  %return1605 = call i64 @"eq@III"(i64 %idx1474, i64 14)
  %170 = icmp ne i64 %return1605, 0
  br i1 %170, label %true1606, label %false1607

true1606:                                         ; preds = %false1598
  %XST1609 = load double*, double** %XST
  %return1610 = call double* @"slice@[F[FIIIIII"(double* %XST1609, i64 1, i64 252, i64 1, i64 270, i64 0, i64 0)
  %return1612 = call i64 @"sample_cdf@[FFI"(double* %return1610, double %return)
  br label %UnifiedReturnBlock

false1607:                                        ; preds = %false1598
  %return1614 = call i64 @"eq@III"(i64 %idx1474, i64 15)
  %171 = icmp ne i64 %return1614, 0
  br i1 %171, label %true1615, label %false1616

true1615:                                         ; preds = %false1607
  %XST1618 = load double*, double** %XST
  %return1619 = call double* @"slice@[F[FIIIIII"(double* %XST1618, i64 1, i64 270, i64 1, i64 288, i64 0, i64 0)
  %return1621 = call i64 @"sample_cdf@[FFI"(double* %return1619, double %return)
  br label %UnifiedReturnBlock

false1616:                                        ; preds = %false1607
  %return1623 = call i64 @"eq@III"(i64 %idx1474, i64 16)
  %172 = icmp ne i64 %return1623, 0
  br i1 %172, label %true1624, label %false1625

true1624:                                         ; preds = %false1616
  %XST1627 = load double*, double** %XST
  %return1628 = call double* @"slice@[F[FIIIIII"(double* %XST1627, i64 1, i64 288, i64 1, i64 306, i64 0, i64 0)
  %return1630 = call i64 @"sample_cdf@[FFI"(double* %return1628, double %return)
  br label %UnifiedReturnBlock

false1625:                                        ; preds = %false1616
  %return1632 = call i64 @"eq@III"(i64 %idx1474, i64 17)
  %173 = icmp ne i64 %return1632, 0
  br i1 %173, label %true1633, label %end

true1633:                                         ; preds = %false1625
  %XST1635 = load double*, double** %XST
  %return1636 = call double* @"slice@[F[FIIIIII"(double* %XST1635, i64 1, i64 306, i64 1, i64 324, i64 0, i64 0)
  %return1638 = call i64 @"sample_cdf@[FFI"(double* %return1636, double %return)
  br label %UnifiedReturnBlock

true1642:                                         ; preds = %false1472
  %idx1645 = load i64, i64* %idx
  %return1646 = call i64 @"lt@III"(i64 %idx1645, i64 10)
  %174 = icmp ne i64 %return1646, 0
  br i1 %174, label %true1647, label %false1648

false1643:                                        ; preds = %false1472
  %return1820 = fcmp oeq double %res1, 2.000000e+01
  br i1 %return1820, label %true1822, label %end

true1647:                                         ; preds = %true1642
  %return1651 = call i64 @"eq@III"(i64 %idx1645, i64 0)
  %175 = icmp ne i64 %return1651, 0
  br i1 %175, label %true1652, label %false1653

false1648:                                        ; preds = %true1642
  %return1740 = call i64 @"eq@III"(i64 %idx1645, i64 10)
  %176 = icmp ne i64 %return1740, 0
  br i1 %176, label %true1741, label %false1742

true1652:                                         ; preds = %true1647
  %XST1655 = load double*, double** %XST
  %return1656 = call double* @"slice@[F[FIIIIII"(double* %XST1655, i64 1, i64 0, i64 1, i64 19, i64 0, i64 0)
  %return1658 = call i64 @"sample_cdf@[FFI"(double* %return1656, double %return)
  br label %UnifiedReturnBlock

false1653:                                        ; preds = %true1647
  %return1660 = call i64 @"eq@III"(i64 %idx1645, i64 1)
  %177 = icmp ne i64 %return1660, 0
  br i1 %177, label %true1661, label %false1662

true1661:                                         ; preds = %false1653
  %XST1664 = load double*, double** %XST
  %return1665 = call double* @"slice@[F[FIIIIII"(double* %XST1664, i64 1, i64 19, i64 1, i64 38, i64 0, i64 0)
  %return1667 = call i64 @"sample_cdf@[FFI"(double* %return1665, double %return)
  br label %UnifiedReturnBlock

false1662:                                        ; preds = %false1653
  %return1669 = call i64 @"eq@III"(i64 %idx1645, i64 2)
  %178 = icmp ne i64 %return1669, 0
  br i1 %178, label %true1670, label %false1671

true1670:                                         ; preds = %false1662
  %XST1673 = load double*, double** %XST
  %return1674 = call double* @"slice@[F[FIIIIII"(double* %XST1673, i64 1, i64 38, i64 1, i64 57, i64 0, i64 0)
  %return1676 = call i64 @"sample_cdf@[FFI"(double* %return1674, double %return)
  br label %UnifiedReturnBlock

false1671:                                        ; preds = %false1662
  %return1678 = call i64 @"eq@III"(i64 %idx1645, i64 3)
  %179 = icmp ne i64 %return1678, 0
  br i1 %179, label %true1679, label %false1680

true1679:                                         ; preds = %false1671
  %XST1682 = load double*, double** %XST
  %return1683 = call double* @"slice@[F[FIIIIII"(double* %XST1682, i64 1, i64 57, i64 1, i64 76, i64 0, i64 0)
  %return1685 = call i64 @"sample_cdf@[FFI"(double* %return1683, double %return)
  br label %UnifiedReturnBlock

false1680:                                        ; preds = %false1671
  %return1687 = call i64 @"eq@III"(i64 %idx1645, i64 4)
  %180 = icmp ne i64 %return1687, 0
  br i1 %180, label %true1688, label %false1689

true1688:                                         ; preds = %false1680
  %XST1691 = load double*, double** %XST
  %return1692 = call double* @"slice@[F[FIIIIII"(double* %XST1691, i64 1, i64 76, i64 1, i64 95, i64 0, i64 0)
  %return1694 = call i64 @"sample_cdf@[FFI"(double* %return1692, double %return)
  br label %UnifiedReturnBlock

false1689:                                        ; preds = %false1680
  %return1696 = call i64 @"eq@III"(i64 %idx1645, i64 5)
  %181 = icmp ne i64 %return1696, 0
  br i1 %181, label %true1697, label %false1698

true1697:                                         ; preds = %false1689
  %XST1700 = load double*, double** %XST
  %return1701 = call double* @"slice@[F[FIIIIII"(double* %XST1700, i64 1, i64 95, i64 1, i64 114, i64 0, i64 0)
  %return1703 = call i64 @"sample_cdf@[FFI"(double* %return1701, double %return)
  br label %UnifiedReturnBlock

false1698:                                        ; preds = %false1689
  %return1705 = call i64 @"eq@III"(i64 %idx1645, i64 6)
  %182 = icmp ne i64 %return1705, 0
  br i1 %182, label %true1706, label %false1707

true1706:                                         ; preds = %false1698
  %XST1709 = load double*, double** %XST
  %return1710 = call double* @"slice@[F[FIIIIII"(double* %XST1709, i64 1, i64 114, i64 1, i64 133, i64 0, i64 0)
  %return1712 = call i64 @"sample_cdf@[FFI"(double* %return1710, double %return)
  br label %UnifiedReturnBlock

false1707:                                        ; preds = %false1698
  %return1714 = call i64 @"eq@III"(i64 %idx1645, i64 7)
  %183 = icmp ne i64 %return1714, 0
  br i1 %183, label %true1715, label %false1716

true1715:                                         ; preds = %false1707
  %XST1718 = load double*, double** %XST
  %return1719 = call double* @"slice@[F[FIIIIII"(double* %XST1718, i64 1, i64 133, i64 1, i64 152, i64 0, i64 0)
  %return1721 = call i64 @"sample_cdf@[FFI"(double* %return1719, double %return)
  br label %UnifiedReturnBlock

false1716:                                        ; preds = %false1707
  %return1723 = call i64 @"eq@III"(i64 %idx1645, i64 8)
  %184 = icmp ne i64 %return1723, 0
  br i1 %184, label %true1724, label %false1725

true1724:                                         ; preds = %false1716
  %XST1727 = load double*, double** %XST
  %return1728 = call double* @"slice@[F[FIIIIII"(double* %XST1727, i64 1, i64 152, i64 1, i64 171, i64 0, i64 0)
  %return1730 = call i64 @"sample_cdf@[FFI"(double* %return1728, double %return)
  br label %UnifiedReturnBlock

false1725:                                        ; preds = %false1716
  %return1732 = call i64 @"eq@III"(i64 %idx1645, i64 9)
  %185 = icmp ne i64 %return1732, 0
  br i1 %185, label %true1733, label %end

true1733:                                         ; preds = %false1725
  %XST1735 = load double*, double** %XST
  %return1736 = call double* @"slice@[F[FIIIIII"(double* %XST1735, i64 1, i64 171, i64 1, i64 190, i64 0, i64 0)
  %return1738 = call i64 @"sample_cdf@[FFI"(double* %return1736, double %return)
  br label %UnifiedReturnBlock

true1741:                                         ; preds = %false1648
  %XST1744 = load double*, double** %XST
  %return1745 = call double* @"slice@[F[FIIIIII"(double* %XST1744, i64 1, i64 190, i64 1, i64 209, i64 0, i64 0)
  %return1747 = call i64 @"sample_cdf@[FFI"(double* %return1745, double %return)
  br label %UnifiedReturnBlock

false1742:                                        ; preds = %false1648
  %return1749 = call i64 @"eq@III"(i64 %idx1645, i64 11)
  %186 = icmp ne i64 %return1749, 0
  br i1 %186, label %true1750, label %false1751

true1750:                                         ; preds = %false1742
  %XST1753 = load double*, double** %XST
  %return1754 = call double* @"slice@[F[FIIIIII"(double* %XST1753, i64 1, i64 209, i64 1, i64 228, i64 0, i64 0)
  %return1756 = call i64 @"sample_cdf@[FFI"(double* %return1754, double %return)
  br label %UnifiedReturnBlock

false1751:                                        ; preds = %false1742
  %return1758 = call i64 @"eq@III"(i64 %idx1645, i64 12)
  %187 = icmp ne i64 %return1758, 0
  br i1 %187, label %true1759, label %false1760

true1759:                                         ; preds = %false1751
  %XST1762 = load double*, double** %XST
  %return1763 = call double* @"slice@[F[FIIIIII"(double* %XST1762, i64 1, i64 228, i64 1, i64 247, i64 0, i64 0)
  %return1765 = call i64 @"sample_cdf@[FFI"(double* %return1763, double %return)
  br label %UnifiedReturnBlock

false1760:                                        ; preds = %false1751
  %return1767 = call i64 @"eq@III"(i64 %idx1645, i64 13)
  %188 = icmp ne i64 %return1767, 0
  br i1 %188, label %true1768, label %false1769

true1768:                                         ; preds = %false1760
  %XST1771 = load double*, double** %XST
  %return1772 = call double* @"slice@[F[FIIIIII"(double* %XST1771, i64 1, i64 247, i64 1, i64 266, i64 0, i64 0)
  %return1774 = call i64 @"sample_cdf@[FFI"(double* %return1772, double %return)
  br label %UnifiedReturnBlock

false1769:                                        ; preds = %false1760
  %return1776 = call i64 @"eq@III"(i64 %idx1645, i64 14)
  %189 = icmp ne i64 %return1776, 0
  br i1 %189, label %true1777, label %false1778

true1777:                                         ; preds = %false1769
  %XST1780 = load double*, double** %XST
  %return1781 = call double* @"slice@[F[FIIIIII"(double* %XST1780, i64 1, i64 266, i64 1, i64 285, i64 0, i64 0)
  %return1783 = call i64 @"sample_cdf@[FFI"(double* %return1781, double %return)
  br label %UnifiedReturnBlock

false1778:                                        ; preds = %false1769
  %return1785 = call i64 @"eq@III"(i64 %idx1645, i64 15)
  %190 = icmp ne i64 %return1785, 0
  br i1 %190, label %true1786, label %false1787

true1786:                                         ; preds = %false1778
  %XST1789 = load double*, double** %XST
  %return1790 = call double* @"slice@[F[FIIIIII"(double* %XST1789, i64 1, i64 285, i64 1, i64 304, i64 0, i64 0)
  %return1792 = call i64 @"sample_cdf@[FFI"(double* %return1790, double %return)
  br label %UnifiedReturnBlock

false1787:                                        ; preds = %false1778
  %return1794 = call i64 @"eq@III"(i64 %idx1645, i64 16)
  %191 = icmp ne i64 %return1794, 0
  br i1 %191, label %true1795, label %false1796

true1795:                                         ; preds = %false1787
  %XST1798 = load double*, double** %XST
  %return1799 = call double* @"slice@[F[FIIIIII"(double* %XST1798, i64 1, i64 304, i64 1, i64 323, i64 0, i64 0)
  %return1801 = call i64 @"sample_cdf@[FFI"(double* %return1799, double %return)
  br label %UnifiedReturnBlock

false1796:                                        ; preds = %false1787
  %return1803 = call i64 @"eq@III"(i64 %idx1645, i64 17)
  %192 = icmp ne i64 %return1803, 0
  br i1 %192, label %true1804, label %false1805

true1804:                                         ; preds = %false1796
  %XST1807 = load double*, double** %XST
  %return1808 = call double* @"slice@[F[FIIIIII"(double* %XST1807, i64 1, i64 323, i64 1, i64 342, i64 0, i64 0)
  %return1810 = call i64 @"sample_cdf@[FFI"(double* %return1808, double %return)
  br label %UnifiedReturnBlock

false1805:                                        ; preds = %false1796
  %return1812 = call i64 @"eq@III"(i64 %idx1645, i64 18)
  %193 = icmp ne i64 %return1812, 0
  br i1 %193, label %true1813, label %end

true1813:                                         ; preds = %false1805
  %XST1815 = load double*, double** %XST
  %return1816 = call double* @"slice@[F[FIIIIII"(double* %XST1815, i64 1, i64 342, i64 1, i64 361, i64 0, i64 0)
  %return1818 = call i64 @"sample_cdf@[FFI"(double* %return1816, double %return)
  br label %UnifiedReturnBlock

true1822:                                         ; preds = %false1643
  %idx1824 = load i64, i64* %idx
  %return1825 = call i64 @"lt@III"(i64 %idx1824, i64 10)
  %194 = icmp ne i64 %return1825, 0
  br i1 %194, label %true1826, label %false1827

true1826:                                         ; preds = %true1822
  %return1830 = call i64 @"eq@III"(i64 %idx1824, i64 0)
  %195 = icmp ne i64 %return1830, 0
  br i1 %195, label %true1831, label %false1832

false1827:                                        ; preds = %true1822
  %return1919 = call i64 @"eq@III"(i64 %idx1824, i64 10)
  %196 = icmp ne i64 %return1919, 0
  br i1 %196, label %true1920, label %false1921

true1831:                                         ; preds = %true1826
  %XST1834 = load double*, double** %XST
  %return1835 = call double* @"slice@[F[FIIIIII"(double* %XST1834, i64 1, i64 0, i64 1, i64 20, i64 0, i64 0)
  %return1837 = call i64 @"sample_cdf@[FFI"(double* %return1835, double %return)
  br label %UnifiedReturnBlock

false1832:                                        ; preds = %true1826
  %return1839 = call i64 @"eq@III"(i64 %idx1824, i64 1)
  %197 = icmp ne i64 %return1839, 0
  br i1 %197, label %true1840, label %false1841

true1840:                                         ; preds = %false1832
  %XST1843 = load double*, double** %XST
  %return1844 = call double* @"slice@[F[FIIIIII"(double* %XST1843, i64 1, i64 20, i64 1, i64 40, i64 0, i64 0)
  %return1846 = call i64 @"sample_cdf@[FFI"(double* %return1844, double %return)
  br label %UnifiedReturnBlock

false1841:                                        ; preds = %false1832
  %return1848 = call i64 @"eq@III"(i64 %idx1824, i64 2)
  %198 = icmp ne i64 %return1848, 0
  br i1 %198, label %true1849, label %false1850

true1849:                                         ; preds = %false1841
  %XST1852 = load double*, double** %XST
  %return1853 = call double* @"slice@[F[FIIIIII"(double* %XST1852, i64 1, i64 40, i64 1, i64 60, i64 0, i64 0)
  %return1855 = call i64 @"sample_cdf@[FFI"(double* %return1853, double %return)
  br label %UnifiedReturnBlock

false1850:                                        ; preds = %false1841
  %return1857 = call i64 @"eq@III"(i64 %idx1824, i64 3)
  %199 = icmp ne i64 %return1857, 0
  br i1 %199, label %true1858, label %false1859

true1858:                                         ; preds = %false1850
  %XST1861 = load double*, double** %XST
  %return1862 = call double* @"slice@[F[FIIIIII"(double* %XST1861, i64 1, i64 60, i64 1, i64 80, i64 0, i64 0)
  %return1864 = call i64 @"sample_cdf@[FFI"(double* %return1862, double %return)
  br label %UnifiedReturnBlock

false1859:                                        ; preds = %false1850
  %return1866 = call i64 @"eq@III"(i64 %idx1824, i64 4)
  %200 = icmp ne i64 %return1866, 0
  br i1 %200, label %true1867, label %false1868

true1867:                                         ; preds = %false1859
  %XST1870 = load double*, double** %XST
  %return1871 = call double* @"slice@[F[FIIIIII"(double* %XST1870, i64 1, i64 80, i64 1, i64 100, i64 0, i64 0)
  %return1873 = call i64 @"sample_cdf@[FFI"(double* %return1871, double %return)
  br label %UnifiedReturnBlock

false1868:                                        ; preds = %false1859
  %return1875 = call i64 @"eq@III"(i64 %idx1824, i64 5)
  %201 = icmp ne i64 %return1875, 0
  br i1 %201, label %true1876, label %false1877

true1876:                                         ; preds = %false1868
  %XST1879 = load double*, double** %XST
  %return1880 = call double* @"slice@[F[FIIIIII"(double* %XST1879, i64 1, i64 100, i64 1, i64 120, i64 0, i64 0)
  %return1882 = call i64 @"sample_cdf@[FFI"(double* %return1880, double %return)
  br label %UnifiedReturnBlock

false1877:                                        ; preds = %false1868
  %return1884 = call i64 @"eq@III"(i64 %idx1824, i64 6)
  %202 = icmp ne i64 %return1884, 0
  br i1 %202, label %true1885, label %false1886

true1885:                                         ; preds = %false1877
  %XST1888 = load double*, double** %XST
  %return1889 = call double* @"slice@[F[FIIIIII"(double* %XST1888, i64 1, i64 120, i64 1, i64 140, i64 0, i64 0)
  %return1891 = call i64 @"sample_cdf@[FFI"(double* %return1889, double %return)
  br label %UnifiedReturnBlock

false1886:                                        ; preds = %false1877
  %return1893 = call i64 @"eq@III"(i64 %idx1824, i64 7)
  %203 = icmp ne i64 %return1893, 0
  br i1 %203, label %true1894, label %false1895

true1894:                                         ; preds = %false1886
  %XST1897 = load double*, double** %XST
  %return1898 = call double* @"slice@[F[FIIIIII"(double* %XST1897, i64 1, i64 140, i64 1, i64 160, i64 0, i64 0)
  %return1900 = call i64 @"sample_cdf@[FFI"(double* %return1898, double %return)
  br label %UnifiedReturnBlock

false1895:                                        ; preds = %false1886
  %return1902 = call i64 @"eq@III"(i64 %idx1824, i64 8)
  %204 = icmp ne i64 %return1902, 0
  br i1 %204, label %true1903, label %false1904

true1903:                                         ; preds = %false1895
  %XST1906 = load double*, double** %XST
  %return1907 = call double* @"slice@[F[FIIIIII"(double* %XST1906, i64 1, i64 160, i64 1, i64 180, i64 0, i64 0)
  %return1909 = call i64 @"sample_cdf@[FFI"(double* %return1907, double %return)
  br label %UnifiedReturnBlock

false1904:                                        ; preds = %false1895
  %return1911 = call i64 @"eq@III"(i64 %idx1824, i64 9)
  %205 = icmp ne i64 %return1911, 0
  br i1 %205, label %true1912, label %end

true1912:                                         ; preds = %false1904
  %XST1914 = load double*, double** %XST
  %return1915 = call double* @"slice@[F[FIIIIII"(double* %XST1914, i64 1, i64 180, i64 1, i64 200, i64 0, i64 0)
  %return1917 = call i64 @"sample_cdf@[FFI"(double* %return1915, double %return)
  br label %UnifiedReturnBlock

true1920:                                         ; preds = %false1827
  %XST1923 = load double*, double** %XST
  %return1924 = call double* @"slice@[F[FIIIIII"(double* %XST1923, i64 1, i64 200, i64 1, i64 220, i64 0, i64 0)
  %return1926 = call i64 @"sample_cdf@[FFI"(double* %return1924, double %return)
  br label %UnifiedReturnBlock

false1921:                                        ; preds = %false1827
  %return1928 = call i64 @"eq@III"(i64 %idx1824, i64 11)
  %206 = icmp ne i64 %return1928, 0
  br i1 %206, label %true1929, label %false1930

true1929:                                         ; preds = %false1921
  %XST1932 = load double*, double** %XST
  %return1933 = call double* @"slice@[F[FIIIIII"(double* %XST1932, i64 1, i64 220, i64 1, i64 240, i64 0, i64 0)
  %return1935 = call i64 @"sample_cdf@[FFI"(double* %return1933, double %return)
  br label %UnifiedReturnBlock

false1930:                                        ; preds = %false1921
  %return1937 = call i64 @"eq@III"(i64 %idx1824, i64 12)
  %207 = icmp ne i64 %return1937, 0
  br i1 %207, label %true1938, label %false1939

true1938:                                         ; preds = %false1930
  %XST1941 = load double*, double** %XST
  %return1942 = call double* @"slice@[F[FIIIIII"(double* %XST1941, i64 1, i64 240, i64 1, i64 260, i64 0, i64 0)
  %return1944 = call i64 @"sample_cdf@[FFI"(double* %return1942, double %return)
  br label %UnifiedReturnBlock

false1939:                                        ; preds = %false1930
  %return1946 = call i64 @"eq@III"(i64 %idx1824, i64 13)
  %208 = icmp ne i64 %return1946, 0
  br i1 %208, label %true1947, label %false1948

true1947:                                         ; preds = %false1939
  %XST1950 = load double*, double** %XST
  %return1951 = call double* @"slice@[F[FIIIIII"(double* %XST1950, i64 1, i64 260, i64 1, i64 280, i64 0, i64 0)
  %return1953 = call i64 @"sample_cdf@[FFI"(double* %return1951, double %return)
  br label %UnifiedReturnBlock

false1948:                                        ; preds = %false1939
  %return1955 = call i64 @"eq@III"(i64 %idx1824, i64 14)
  %209 = icmp ne i64 %return1955, 0
  br i1 %209, label %true1956, label %false1957

true1956:                                         ; preds = %false1948
  %XST1959 = load double*, double** %XST
  %return1960 = call double* @"slice@[F[FIIIIII"(double* %XST1959, i64 1, i64 280, i64 1, i64 300, i64 0, i64 0)
  %return1962 = call i64 @"sample_cdf@[FFI"(double* %return1960, double %return)
  br label %UnifiedReturnBlock

false1957:                                        ; preds = %false1948
  %return1964 = call i64 @"eq@III"(i64 %idx1824, i64 15)
  %210 = icmp ne i64 %return1964, 0
  br i1 %210, label %true1965, label %false1966

true1965:                                         ; preds = %false1957
  %XST1968 = load double*, double** %XST
  %return1969 = call double* @"slice@[F[FIIIIII"(double* %XST1968, i64 1, i64 300, i64 1, i64 320, i64 0, i64 0)
  %return1971 = call i64 @"sample_cdf@[FFI"(double* %return1969, double %return)
  br label %UnifiedReturnBlock

false1966:                                        ; preds = %false1957
  %return1973 = call i64 @"eq@III"(i64 %idx1824, i64 16)
  %211 = icmp ne i64 %return1973, 0
  br i1 %211, label %true1974, label %false1975

true1974:                                         ; preds = %false1966
  %XST1977 = load double*, double** %XST
  %return1978 = call double* @"slice@[F[FIIIIII"(double* %XST1977, i64 1, i64 320, i64 1, i64 340, i64 0, i64 0)
  %return1980 = call i64 @"sample_cdf@[FFI"(double* %return1978, double %return)
  br label %UnifiedReturnBlock

false1975:                                        ; preds = %false1966
  %return1982 = call i64 @"eq@III"(i64 %idx1824, i64 17)
  %212 = icmp ne i64 %return1982, 0
  br i1 %212, label %true1983, label %false1984

true1983:                                         ; preds = %false1975
  %XST1986 = load double*, double** %XST
  %return1987 = call double* @"slice@[F[FIIIIII"(double* %XST1986, i64 1, i64 340, i64 1, i64 360, i64 0, i64 0)
  %return1989 = call i64 @"sample_cdf@[FFI"(double* %return1987, double %return)
  br label %UnifiedReturnBlock

false1984:                                        ; preds = %false1975
  %return1991 = call i64 @"eq@III"(i64 %idx1824, i64 18)
  %213 = icmp ne i64 %return1991, 0
  br i1 %213, label %true1992, label %false1993

true1992:                                         ; preds = %false1984
  %XST1995 = load double*, double** %XST
  %return1996 = call double* @"slice@[F[FIIIIII"(double* %XST1995, i64 1, i64 360, i64 1, i64 380, i64 0, i64 0)
  %return1998 = call i64 @"sample_cdf@[FFI"(double* %return1996, double %return)
  br label %UnifiedReturnBlock

false1993:                                        ; preds = %false1984
  %return2000 = call i64 @"eq@III"(i64 %idx1824, i64 19)
  %214 = icmp ne i64 %return2000, 0
  br i1 %214, label %true2001, label %end

true2001:                                         ; preds = %false1993
  %XST2003 = load double*, double** %XST
  %return2004 = call double* @"slice@[F[FIIIIII"(double* %XST2003, i64 1, i64 380, i64 1, i64 400, i64 0, i64 0)
  %return2006 = call i64 @"sample_cdf@[FFI"(double* %return2004, double %return)
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %true2001, %true1992, %true1983, %true1974, %true1965, %true1956, %true1947, %true1938, %true1929, %true1920, %true1912, %true1903, %true1894, %true1885, %true1876, %true1867, %true1858, %true1849, %true1840, %true1831, %true1813, %true1804, %true1795, %true1786, %true1777, %true1768, %true1759, %true1750, %true1741, %true1733, %true1724, %true1715, %true1706, %true1697, %true1688, %true1679, %true1670, %true1661, %true1652, %true1633, %true1624, %true1615, %true1606, %true1597, %true1588, %true1579, %true1570, %true1561, %true1553, %true1544, %true1535, %true1526, %true1517, %true1508, %true1499, %true1490, %true1481, %true1462, %true1453, %true1444, %true1435, %true1426, %true1417, %true1408, %true1399, %true1391, %true1382, %true1373, %true1364, %true1355, %true1346, %true1337, %true1328, %true1319, %true1300, %true1291, %true1282, %true1273, %true1264, %true1255, %true1246, %true1237, %true1229, %true1220, %true1211, %true1202, %true1193, %true1184, %true1175, %true1166, %true1147, %true1138, %true1129, %true1120, %true1111, %true1102, %true1093, %true1085, %true1076, %true1067, %true1058, %true1049, %true1040, %true1031, %true1022, %true998, %true989, %true980, %true971, %true962, %true953, %true944, %true936, %true927, %true918, %true909, %true900, %true891, %true882, %true864, %true855, %true846, %true837, %true828, %true819, %true810, %true801, %true792, %true783, %true774, %true765, %true756, %true742, %true733, %true724, %true715, %true706, %true697, %true688, %true679, %true670, %true661, %true652, %true643, %true629, %true620, %true611, %true602, %true593, %true584, %true575, %true566, %true557, %true548, %true539, %true525, %true516, %true507, %true498, %true489, %true480, %true471, %true462, %true453, %true444, %true430, %true421, %true412, %true403, %true394, %true385, %true376, %true367, %true358, %true344, %true335, %true326, %true317, %true308, %true299, %true290, %true281, %true267, %true258, %true249, %true240, %true231, %true222, %true213, %true199, %true190, %true181, %true172, %true163, %true154, %true140, %true131, %true122, %true113, %true104, %true90, %true81, %true72, %true63, %true49, %true40, %true31, %false13, %true12, %end
  %UnifiedRetVal = phi i64 [ %idx2007, %end ], [ %return18, %true12 ], [ %return22, %false13 ], [ %return37, %true31 ], [ %return46, %true40 ], [ %return54, %true49 ], [ %return69, %true63 ], [ %return78, %true72 ], [ %return87, %true81 ], [ %return95, %true90 ], [ %return110, %true104 ], [ %return119, %true113 ], [ %return128, %true122 ], [ %return137, %true131 ], [ %return145, %true140 ], [ %return160, %true154 ], [ %return169, %true163 ], [ %return178, %true172 ], [ %return187, %true181 ], [ %return196, %true190 ], [ %return204, %true199 ], [ %return219, %true213 ], [ %return228, %true222 ], [ %return237, %true231 ], [ %return246, %true240 ], [ %return255, %true249 ], [ %return264, %true258 ], [ %return272, %true267 ], [ %return287, %true281 ], [ %return296, %true290 ], [ %return305, %true299 ], [ %return314, %true308 ], [ %return323, %true317 ], [ %return332, %true326 ], [ %return341, %true335 ], [ %return349, %true344 ], [ %return364, %true358 ], [ %return373, %true367 ], [ %return382, %true376 ], [ %return391, %true385 ], [ %return400, %true394 ], [ %return409, %true403 ], [ %return418, %true412 ], [ %return427, %true421 ], [ %return435, %true430 ], [ %return450, %true444 ], [ %return459, %true453 ], [ %return468, %true462 ], [ %return477, %true471 ], [ %return486, %true480 ], [ %return495, %true489 ], [ %return504, %true498 ], [ %return513, %true507 ], [ %return522, %true516 ], [ %return530, %true525 ], [ %return545, %true539 ], [ %return554, %true548 ], [ %return563, %true557 ], [ %return572, %true566 ], [ %return581, %true575 ], [ %return590, %true584 ], [ %return599, %true593 ], [ %return608, %true602 ], [ %return617, %true611 ], [ %return626, %true620 ], [ %return634, %true629 ], [ %return649, %true643 ], [ %return658, %true652 ], [ %return667, %true661 ], [ %return676, %true670 ], [ %return685, %true679 ], [ %return694, %true688 ], [ %return703, %true697 ], [ %return712, %true706 ], [ %return721, %true715 ], [ %return730, %true724 ], [ %return739, %true733 ], [ %return747, %true742 ], [ %return762, %true756 ], [ %return771, %true765 ], [ %return780, %true774 ], [ %return789, %true783 ], [ %return798, %true792 ], [ %return807, %true801 ], [ %return816, %true810 ], [ %return825, %true819 ], [ %return834, %true828 ], [ %return843, %true837 ], [ %return852, %true846 ], [ %return861, %true855 ], [ %return869, %true864 ], [ %return888, %true882 ], [ %return897, %true891 ], [ %return906, %true900 ], [ %return915, %true909 ], [ %return924, %true918 ], [ %return933, %true927 ], [ %return941, %true936 ], [ %return950, %true944 ], [ %return959, %true953 ], [ %return968, %true962 ], [ %return977, %true971 ], [ %return986, %true980 ], [ %return995, %true989 ], [ %return1003, %true998 ], [ %return1028, %true1022 ], [ %return1037, %true1031 ], [ %return1046, %true1040 ], [ %return1055, %true1049 ], [ %return1064, %true1058 ], [ %return1073, %true1067 ], [ %return1082, %true1076 ], [ %return1090, %true1085 ], [ %return1099, %true1093 ], [ %return1108, %true1102 ], [ %return1117, %true1111 ], [ %return1126, %true1120 ], [ %return1135, %true1129 ], [ %return1144, %true1138 ], [ %return1152, %true1147 ], [ %return1172, %true1166 ], [ %return1181, %true1175 ], [ %return1190, %true1184 ], [ %return1199, %true1193 ], [ %return1208, %true1202 ], [ %return1217, %true1211 ], [ %return1226, %true1220 ], [ %return1234, %true1229 ], [ %return1243, %true1237 ], [ %return1252, %true1246 ], [ %return1261, %true1255 ], [ %return1270, %true1264 ], [ %return1279, %true1273 ], [ %return1288, %true1282 ], [ %return1297, %true1291 ], [ %return1305, %true1300 ], [ %return1325, %true1319 ], [ %return1334, %true1328 ], [ %return1343, %true1337 ], [ %return1352, %true1346 ], [ %return1361, %true1355 ], [ %return1370, %true1364 ], [ %return1379, %true1373 ], [ %return1388, %true1382 ], [ %return1396, %true1391 ], [ %return1405, %true1399 ], [ %return1414, %true1408 ], [ %return1423, %true1417 ], [ %return1432, %true1426 ], [ %return1441, %true1435 ], [ %return1450, %true1444 ], [ %return1459, %true1453 ], [ %return1467, %true1462 ], [ %return1487, %true1481 ], [ %return1496, %true1490 ], [ %return1505, %true1499 ], [ %return1514, %true1508 ], [ %return1523, %true1517 ], [ %return1532, %true1526 ], [ %return1541, %true1535 ], [ %return1550, %true1544 ], [ %return1558, %true1553 ], [ %return1567, %true1561 ], [ %return1576, %true1570 ], [ %return1585, %true1579 ], [ %return1594, %true1588 ], [ %return1603, %true1597 ], [ %return1612, %true1606 ], [ %return1621, %true1615 ], [ %return1630, %true1624 ], [ %return1638, %true1633 ], [ %return1658, %true1652 ], [ %return1667, %true1661 ], [ %return1676, %true1670 ], [ %return1685, %true1679 ], [ %return1694, %true1688 ], [ %return1703, %true1697 ], [ %return1712, %true1706 ], [ %return1721, %true1715 ], [ %return1730, %true1724 ], [ %return1738, %true1733 ], [ %return1747, %true1741 ], [ %return1756, %true1750 ], [ %return1765, %true1759 ], [ %return1774, %true1768 ], [ %return1783, %true1777 ], [ %return1792, %true1786 ], [ %return1801, %true1795 ], [ %return1810, %true1804 ], [ %return1818, %true1813 ], [ %return1837, %true1831 ], [ %return1846, %true1840 ], [ %return1855, %true1849 ], [ %return1864, %true1858 ], [ %return1873, %true1867 ], [ %return1882, %true1876 ], [ %return1891, %true1885 ], [ %return1900, %true1894 ], [ %return1909, %true1903 ], [ %return1917, %true1912 ], [ %return1926, %true1920 ], [ %return1935, %true1929 ], [ %return1944, %true1938 ], [ %return1953, %true1947 ], [ %return1962, %true1956 ], [ %return1971, %true1965 ], [ %return1980, %true1974 ], [ %return1989, %true1983 ], [ %return1998, %true1992 ], [ %return2006, %true2001 ]
  ret i64 %UnifiedRetVal
}

; Function Attrs: nounwind
declare double* @"slice@[F[FIIIIII"(double*, i64, i64, i64, i64, i64, i64) #2

; Function Attrs: alwaysinline
define private i64 @"sample_cdf@[FFI"(double* %rw01, double %rw12) #3 {
__llvm_entry:
  %rw24 = call { i64, double, double } @"sample_cdf@[FFIFF"(double* %rw01, double %rw12)
  %rw25 = extractvalue { i64, double, double } %rw24, 0
  ret i64 %rw25
}

; Function Attrs: nounwind readnone
declare { i64, double, double } @"sample_cdf@[FFIFF"(double*, double) #0

; Function Attrs: alwaysinline nounwind
define private <2 x double> @"FLAME@UIIIUUUUF"(i64* %idx, i64* %T, i64* %f3c, <2 x double>* %pos, <2 x double>* %x, <2 x double>* %y, <2 x double>* %o, double* %w) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca double
  %2 = alloca <2 x double>
  %3 = alloca double
  %4 = alloca <2 x double>
  %5 = alloca double
  %6 = alloca <2 x double>
  %7 = alloca double
  %8 = alloca <2 x double>
  %9 = alloca double
  %10 = alloca <2 x double>
  %11 = alloca double
  %12 = alloca <2 x double>
  %13 = alloca double
  %14 = alloca <2 x double>
  %15 = alloca double
  %16 = alloca <2 x double>
  %17 = alloca double
  %18 = alloca <2 x double>
  %19 = alloca double
  %20 = alloca <2 x double>
  %21 = alloca double
  %22 = alloca <2 x double>
  %23 = alloca double
  %24 = alloca <2 x double>
  %25 = alloca double
  %26 = alloca <2 x double>
  %27 = alloca double
  %28 = alloca <2 x double>
  %29 = alloca double
  %30 = alloca double
  %31 = alloca double
  %32 = alloca double
  %33 = alloca double
  %34 = alloca <2 x double>
  %35 = alloca double
  %36 = alloca <2 x double>
  %37 = alloca double
  %38 = alloca double
  %39 = alloca double
  %40 = alloca <2 x double>
  %41 = alloca double
  %42 = alloca <2 x double>
  %43 = alloca double
  %44 = alloca <2 x double>
  %45 = alloca double
  %46 = alloca <2 x double>
  %47 = alloca double
  %48 = alloca double
  %49 = alloca <2 x double>
  %50 = alloca double
  %51 = alloca double
  %52 = alloca double
  %53 = alloca <2 x double>
  %54 = alloca double
  %55 = alloca <2 x double>
  %56 = alloca double
  %57 = alloca <2 x double>
  %58 = alloca double
  %59 = alloca double
  %60 = alloca <2 x double>
  %61 = alloca double
  %62 = alloca <2 x double>
  %63 = alloca <2 x double>
  %64 = alloca double
  %65 = alloca <4 x double>
  %66 = alloca <2 x double>
  %67 = alloca double
  %68 = alloca <4 x double>
  %69 = alloca <2 x double>
  %70 = alloca double
  %71 = alloca <3 x double>
  %72 = alloca <2 x double>
  %73 = alloca double
  %74 = alloca <2 x double>
  %75 = alloca <2 x double>
  %76 = alloca double
  %77 = alloca <2 x double>
  %78 = alloca double
  %79 = alloca <2 x double>
  %80 = alloca double
  %81 = alloca <2 x double>
  %82 = alloca <2 x double>
  %83 = alloca double
  %84 = alloca double
  %85 = alloca <2 x double>
  %86 = alloca double
  %87 = alloca <2 x double>
  %88 = alloca <2 x double>
  %89 = alloca double
  %90 = alloca double
  %91 = alloca double
  %92 = alloca <3 x double>
  %93 = alloca <2 x double>
  %94 = alloca double
  %95 = alloca <2 x double>
  %96 = alloca double
  %97 = alloca <2 x double>
  %98 = alloca double
  %99 = alloca <2 x double>
  %100 = alloca double
  %101 = alloca <2 x double>
  %102 = alloca double
  %103 = alloca <2 x double>
  %104 = alloca double
  %105 = alloca <2 x double>
  %106 = alloca double
  %107 = alloca <2 x double>
  %108 = alloca double
  %109 = alloca <2 x double>
  %110 = alloca double
  %111 = alloca <2 x double>
  %112 = alloca <3 x double>
  %113 = alloca <2 x double>
  %114 = alloca double
  %115 = alloca <3 x double>
  %116 = alloca <3 x double>
  %117 = alloca <2 x double>
  %118 = alloca double
  %119 = alloca <2 x double>
  %120 = alloca <2 x double>
  %121 = alloca double
  %122 = alloca <2 x double>
  %123 = alloca <2 x double>
  %124 = alloca double
  %125 = alloca <2 x double>
  %126 = alloca <2 x double>
  %127 = alloca double
  %128 = alloca <2 x double>
  %129 = alloca double
  %130 = alloca <2 x double>
  %131 = alloca <2 x double>
  %132 = alloca double
  %133 = alloca double
  %134 = alloca <2 x double>
  %135 = alloca double
  %136 = alloca <2 x double>
  %137 = alloca double
  %138 = alloca <2 x double>
  %139 = alloca double
  %140 = alloca double
  %141 = alloca <2 x double>
  %142 = alloca double
  %143 = alloca <3 x double>
  %144 = alloca <2 x double>
  %145 = alloca double
  %146 = alloca <2 x double>
  %147 = alloca double
  %148 = alloca <2 x double>
  %149 = alloca double
  %150 = alloca double
  %151 = alloca <2 x double>
  %152 = alloca double
  %153 = alloca <2 x double>
  %154 = alloca double
  %155 = alloca <3 x double>
  %156 = alloca <2 x double>
  %157 = alloca <2 x double>
  %158 = alloca double
  %159 = alloca <2 x double>
  %160 = alloca double
  %161 = alloca <2 x double>
  %162 = alloca <2 x double>
  %163 = alloca double
  %164 = alloca <4 x double>
  %165 = alloca <2 x double>
  %166 = alloca double
  %167 = alloca <2 x double>
  %168 = alloca double
  %169 = alloca double
  %170 = alloca <2 x double>
  %171 = alloca <2 x double>
  %172 = alloca double
  %173 = alloca <2 x double>
  %174 = alloca <2 x double>
  %175 = alloca double
  %176 = alloca <2 x double>
  %177 = alloca double
  %178 = alloca <2 x double>
  %179 = alloca <2 x double>
  %180 = alloca <2 x double>
  %181 = alloca double
  %182 = alloca <2 x double>
  %183 = alloca <2 x double>
  %184 = alloca double
  %185 = alloca <2 x double>
  %186 = alloca <2 x double>
  %187 = alloca double
  %188 = alloca <4 x double>
  %189 = alloca <2 x double>
  %190 = alloca double
  %191 = alloca <4 x double>
  %192 = alloca <2 x double>
  %193 = alloca double
  %194 = alloca <4 x double>
  %195 = alloca <2 x double>
  %196 = alloca double
  %197 = alloca <2 x double>
  %198 = alloca <2 x double>
  %199 = alloca double
  %200 = alloca <2 x double>
  %201 = alloca <2 x double>
  %202 = alloca <2 x double>
  %203 = alloca double
  %204 = alloca <2 x double>
  %205 = alloca double
  %206 = alloca i64
  %207 = alloca <2 x double>
  %208 = alloca double
  %209 = alloca i64
  %210 = alloca <2 x double>
  %211 = alloca double
  %212 = alloca i64
  %213 = alloca <2 x double>
  %214 = alloca double
  %215 = alloca i64
  %216 = alloca <2 x double>
  %217 = alloca double
  %218 = alloca i64
  %219 = alloca <2 x double>
  %220 = alloca double
  %221 = alloca i64
  %222 = alloca <2 x double>
  %223 = alloca double
  %224 = alloca i64
  %225 = alloca <2 x double>
  %226 = alloca double
  %227 = alloca i64
  %228 = alloca <2 x double>
  %229 = alloca double
  %230 = alloca i64
  %231 = alloca <2 x double>
  %232 = alloca double
  %233 = alloca i64
  %234 = alloca <2 x double>
  %235 = alloca double
  %236 = alloca i64
  %237 = alloca <2 x double>
  %238 = alloca double
  %239 = alloca i64
  %240 = alloca <2 x double>
  %241 = alloca double
  %242 = alloca <2 x double>
  %243 = alloca double
  %244 = alloca <4 x double>
  %245 = alloca <2 x double>
  %246 = alloca double
  %247 = alloca double
  %248 = alloca <2 x double>
  %249 = alloca double
  %250 = alloca <4 x double>
  %251 = alloca <4 x double>
  %252 = alloca <2 x double>
  %253 = alloca double
  %254 = alloca <2 x double>
  %255 = alloca <2 x double>
  %256 = alloca <2 x double>
  %257 = alloca double
  %258 = alloca <2 x double>
  %259 = alloca <2 x double>
  %260 = alloca double
  %261 = alloca <3 x double>
  %262 = alloca <2 x double>
  %263 = alloca <2 x double>
  %264 = alloca double
  %265 = alloca <2 x double>
  %266 = alloca double
  %267 = alloca <2 x double>
  %268 = alloca <2 x double>
  %269 = alloca <2 x double>
  %270 = alloca <2 x double>
  %271 = alloca double
  %272 = alloca <4 x double>
  %273 = alloca <2 x double>
  %274 = alloca <2 x double>
  %275 = alloca double
  %276 = alloca <2 x double>
  %277 = alloca double
  %278 = alloca <2 x double>
  %279 = alloca double
  %280 = alloca <3 x double>
  %p = alloca <2 x double>
  store <2 x double> zeroinitializer, <2 x double>* %p, !vex-initializer-store !3
  %pos1 = load <2 x double>, <2 x double>* %pos
  %T2 = load i64, i64* %T
  %return = call i64 @"not@II"(i64 %T2)
  %281 = icmp ne i64 %return, 0
  br i1 %281, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %w4 = load double, double* %w
  %cast = call <2 x double> @"set@UF"(double %w4)
  %output = call <2 x double> @"mul@UU"(<2 x double> %pos1, <2 x double> %cast)
  br label %UnifiedReturnBlock

false:                                            ; preds = %__llvm_entry
  %return6 = call i64 @"lt@III"(i64 %T2, i64 35)
  %282 = icmp ne i64 %return6, 0
  br i1 %282, label %true7, label %false8

true7:                                            ; preds = %false
  %return11 = call i64 @"lt@III"(i64 %T2, i64 18)
  %283 = icmp ne i64 %return11, 0
  br i1 %283, label %true12, label %false13

false8:                                           ; preds = %false
  %return337 = call i64 @"lt@III"(i64 %T2, i64 70)
  %284 = icmp ne i64 %return337, 0
  br i1 %284, label %true338, label %false339

end9:                                             ; preds = %false1138, %end918, %false701, %false511, %false320, %false146
  br label %UnifiedReturnBlock

true12:                                           ; preds = %true7
  %return16 = call i64 @"eq@III"(i64 %T2, i64 1)
  %285 = icmp ne i64 %return16, 0
  br i1 %285, label %true17, label %false18

false13:                                          ; preds = %true7
  %return163 = call i64 @"eq@III"(i64 %T2, i64 18)
  %286 = icmp ne i64 %return163, 0
  br i1 %286, label %true164, label %false165

true17:                                           ; preds = %true12
  store <2 x double> %pos1, <2 x double>* %0
  %w21 = load double, double* %w
  store double %w21, double* %1
  call void @"V_SINUSOIDAL@UUF"(<2 x double>* %p, <2 x double>* %0, double* %1)
  %p22 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false18:                                          ; preds = %true12
  %return24 = call i64 @"eq@III"(i64 %T2, i64 2)
  %287 = icmp ne i64 %return24, 0
  br i1 %287, label %true25, label %false26

true25:                                           ; preds = %false18
  store <2 x double> %pos1, <2 x double>* %2
  %w29 = load double, double* %w
  store double %w29, double* %3
  call void @"V_SPHERICAL@UUF"(<2 x double>* %p, <2 x double>* %2, double* %3)
  %p30 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false26:                                          ; preds = %false18
  %return32 = call i64 @"eq@III"(i64 %T2, i64 3)
  %288 = icmp ne i64 %return32, 0
  br i1 %288, label %true33, label %false34

true33:                                           ; preds = %false26
  store <2 x double> %pos1, <2 x double>* %4
  %w37 = load double, double* %w
  store double %w37, double* %5
  call void @"V_SWIRL@UUF"(<2 x double>* %p, <2 x double>* %4, double* %5)
  %p38 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false34:                                          ; preds = %false26
  %return40 = call i64 @"eq@III"(i64 %T2, i64 4)
  %289 = icmp ne i64 %return40, 0
  br i1 %289, label %true41, label %false42

true41:                                           ; preds = %false34
  store <2 x double> %pos1, <2 x double>* %6
  %w45 = load double, double* %w
  store double %w45, double* %7
  call void @"V_HORSESHOE@UUF"(<2 x double>* %p, <2 x double>* %6, double* %7)
  %p46 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false42:                                          ; preds = %false34
  %return48 = call i64 @"eq@III"(i64 %T2, i64 5)
  %290 = icmp ne i64 %return48, 0
  br i1 %290, label %true49, label %false50

true49:                                           ; preds = %false42
  store <2 x double> %pos1, <2 x double>* %8
  %w53 = load double, double* %w
  store double %w53, double* %9
  call void @"V_POLAR@UUF"(<2 x double>* %p, <2 x double>* %8, double* %9)
  %p54 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false50:                                          ; preds = %false42
  %return56 = call i64 @"eq@III"(i64 %T2, i64 6)
  %291 = icmp ne i64 %return56, 0
  br i1 %291, label %true57, label %false58

true57:                                           ; preds = %false50
  store <2 x double> %pos1, <2 x double>* %10
  %w61 = load double, double* %w
  store double %w61, double* %11
  call void @"V_HANDKERCHIEF@UUF"(<2 x double>* %p, <2 x double>* %10, double* %11)
  %p62 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false58:                                          ; preds = %false50
  %return64 = call i64 @"eq@III"(i64 %T2, i64 7)
  %292 = icmp ne i64 %return64, 0
  br i1 %292, label %true65, label %false66

true65:                                           ; preds = %false58
  store <2 x double> %pos1, <2 x double>* %12
  %w69 = load double, double* %w
  store double %w69, double* %13
  call void @"V_HEART@UUF"(<2 x double>* %p, <2 x double>* %12, double* %13)
  %p70 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false66:                                          ; preds = %false58
  %return72 = call i64 @"eq@III"(i64 %T2, i64 8)
  %293 = icmp ne i64 %return72, 0
  br i1 %293, label %true73, label %false74

true73:                                           ; preds = %false66
  store <2 x double> %pos1, <2 x double>* %14
  %w77 = load double, double* %w
  store double %w77, double* %15
  call void @"V_DISC@UUF"(<2 x double>* %p, <2 x double>* %14, double* %15)
  %p78 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false74:                                          ; preds = %false66
  %return80 = call i64 @"eq@III"(i64 %T2, i64 9)
  %294 = icmp ne i64 %return80, 0
  br i1 %294, label %true81, label %false82

true81:                                           ; preds = %false74
  store <2 x double> %pos1, <2 x double>* %16
  %w85 = load double, double* %w
  store double %w85, double* %17
  call void @"V_SPIRAL@UUF"(<2 x double>* %p, <2 x double>* %16, double* %17)
  %p86 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false82:                                          ; preds = %false74
  %return88 = call i64 @"eq@III"(i64 %T2, i64 10)
  %295 = icmp ne i64 %return88, 0
  br i1 %295, label %true89, label %false90

true89:                                           ; preds = %false82
  store <2 x double> %pos1, <2 x double>* %18
  %w93 = load double, double* %w
  store double %w93, double* %19
  call void @"V_HIPERBOLIC@UUF"(<2 x double>* %p, <2 x double>* %18, double* %19)
  %p94 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false90:                                          ; preds = %false82
  %return96 = call i64 @"eq@III"(i64 %T2, i64 11)
  %296 = icmp ne i64 %return96, 0
  br i1 %296, label %true97, label %false98

true97:                                           ; preds = %false90
  store <2 x double> %pos1, <2 x double>* %20
  %w101 = load double, double* %w
  store double %w101, double* %21
  call void @"V_DIAMOND@UUF"(<2 x double>* %p, <2 x double>* %20, double* %21)
  %p102 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false98:                                          ; preds = %false90
  %return104 = call i64 @"eq@III"(i64 %T2, i64 12)
  %297 = icmp ne i64 %return104, 0
  br i1 %297, label %true105, label %false106

true105:                                          ; preds = %false98
  store <2 x double> %pos1, <2 x double>* %22
  %w109 = load double, double* %w
  store double %w109, double* %23
  call void @"V_EX@UUF"(<2 x double>* %p, <2 x double>* %22, double* %23)
  %p110 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false106:                                         ; preds = %false98
  %return112 = call i64 @"eq@III"(i64 %T2, i64 13)
  %298 = icmp ne i64 %return112, 0
  br i1 %298, label %true113, label %false114

true113:                                          ; preds = %false106
  store <2 x double> %pos1, <2 x double>* %24
  %w117 = load double, double* %w
  store double %w117, double* %25
  call void @"V_JULIA@UUF"(<2 x double>* %p, <2 x double>* %24, double* %25)
  %p118 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false114:                                         ; preds = %false106
  %return120 = call i64 @"eq@III"(i64 %T2, i64 14)
  %299 = icmp ne i64 %return120, 0
  br i1 %299, label %true121, label %false122

true121:                                          ; preds = %false114
  store <2 x double> %pos1, <2 x double>* %26
  %w125 = load double, double* %w
  store double %w125, double* %27
  call void @"V_BENT@UUF"(<2 x double>* %p, <2 x double>* %26, double* %27)
  %p126 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false122:                                         ; preds = %false114
  %return128 = call i64 @"eq@III"(i64 %T2, i64 15)
  %300 = icmp ne i64 %return128, 0
  br i1 %300, label %true129, label %false130

true129:                                          ; preds = %false122
  store <2 x double> %pos1, <2 x double>* %28
  %w133 = load double, double* %w
  store double %w133, double* %29
  %y134 = load <2 x double>, <2 x double>* %y
  %return135 = call double @"getcomp@FUI"(<2 x double> %y134, i64 0)
  store double %return135, double* %30
  %o136 = load <2 x double>, <2 x double>* %o
  %return137 = call double @"getcomp@FUI"(<2 x double> %o136, i64 0)
  store double %return137, double* %31
  %y138 = load <2 x double>, <2 x double>* %y
  %return139 = call double @"getcomp@FUI"(<2 x double> %y138, i64 1)
  store double %return139, double* %32
  %o140 = load <2 x double>, <2 x double>* %o
  %return141 = call double @"getcomp@FUI"(<2 x double> %o140, i64 1)
  store double %return141, double* %33
  call void @"V_WAVES@UUFFFFF"(<2 x double>* %p, <2 x double>* %28, double* %29, double* %30, double* %31, double* %32, double* %33)
  %p142 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false130:                                         ; preds = %false122
  %return144 = call i64 @"eq@III"(i64 %T2, i64 16)
  %301 = icmp ne i64 %return144, 0
  br i1 %301, label %true145, label %false146

true145:                                          ; preds = %false130
  store <2 x double> %pos1, <2 x double>* %34
  %w149 = load double, double* %w
  store double %w149, double* %35
  call void @"V_FISHEYE@UUF"(<2 x double>* %p, <2 x double>* %34, double* %35)
  %p150 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false146:                                         ; preds = %false130
  %return152 = call i64 @"eq@III"(i64 %T2, i64 17)
  %302 = icmp ne i64 %return152, 0
  br i1 %302, label %true153, label %end9

true153:                                          ; preds = %false146
  store <2 x double> %pos1, <2 x double>* %36
  %w156 = load double, double* %w
  store double %w156, double* %37
  %o157 = load <2 x double>, <2 x double>* %o
  %return158 = call double @"getcomp@FUI"(<2 x double> %o157, i64 0)
  store double %return158, double* %38
  %o159 = load <2 x double>, <2 x double>* %o
  %return160 = call double @"getcomp@FUI"(<2 x double> %o159, i64 1)
  store double %return160, double* %39
  call void @"V_POPCORN@UUFFF"(<2 x double>* %p, <2 x double>* %36, double* %37, double* %38, double* %39)
  %p161 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true164:                                          ; preds = %false13
  store <2 x double> %pos1, <2 x double>* %40
  %w168 = load double, double* %w
  store double %w168, double* %41
  call void @"V_EXPONENTIAL@UUF"(<2 x double>* %p, <2 x double>* %40, double* %41)
  %p169 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false165:                                         ; preds = %false13
  %return171 = call i64 @"eq@III"(i64 %T2, i64 19)
  %303 = icmp ne i64 %return171, 0
  br i1 %303, label %true172, label %false173

true172:                                          ; preds = %false165
  store <2 x double> %pos1, <2 x double>* %42
  %w176 = load double, double* %w
  store double %w176, double* %43
  call void @"V_POWER@UUF"(<2 x double>* %p, <2 x double>* %42, double* %43)
  %p177 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false173:                                         ; preds = %false165
  %return179 = call i64 @"eq@III"(i64 %T2, i64 20)
  %304 = icmp ne i64 %return179, 0
  br i1 %304, label %true180, label %false181

true180:                                          ; preds = %false173
  store <2 x double> %pos1, <2 x double>* %44
  %w184 = load double, double* %w
  store double %w184, double* %45
  call void @"V_COSINE@UUF"(<2 x double>* %p, <2 x double>* %44, double* %45)
  %p185 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false181:                                         ; preds = %false173
  %return187 = call i64 @"eq@III"(i64 %T2, i64 21)
  %305 = icmp ne i64 %return187, 0
  br i1 %305, label %true188, label %false189

true188:                                          ; preds = %false181
  store <2 x double> %pos1, <2 x double>* %46
  %w192 = load double, double* %w
  store double %w192, double* %47
  %o193 = load <2 x double>, <2 x double>* %o
  %return194 = call double @"getcomp@FUI"(<2 x double> %o193, i64 0)
  store double %return194, double* %48
  call void @"V_RINGS@UUFF"(<2 x double>* %p, <2 x double>* %46, double* %47, double* %48)
  %p195 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false189:                                         ; preds = %false181
  %return197 = call i64 @"eq@III"(i64 %T2, i64 22)
  %306 = icmp ne i64 %return197, 0
  br i1 %306, label %true198, label %false199

true198:                                          ; preds = %false189
  store <2 x double> %pos1, <2 x double>* %49
  %w202 = load double, double* %w
  store double %w202, double* %50
  %o203 = load <2 x double>, <2 x double>* %o
  %return204 = call double @"getcomp@FUI"(<2 x double> %o203, i64 0)
  store double %return204, double* %51
  %o205 = load <2 x double>, <2 x double>* %o
  %return206 = call double @"getcomp@FUI"(<2 x double> %o205, i64 1)
  store double %return206, double* %52
  call void @"V_FAN@UUFFF"(<2 x double>* %p, <2 x double>* %49, double* %50, double* %51, double* %52)
  %p207 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false199:                                         ; preds = %false189
  %return209 = call i64 @"eq@III"(i64 %T2, i64 23)
  %307 = icmp ne i64 %return209, 0
  br i1 %307, label %true210, label %false211

true210:                                          ; preds = %false199
  store <2 x double> %pos1, <2 x double>* %53
  %w214 = load double, double* %w
  store double %w214, double* %54
  call void @"V_BUBBLE@UUF"(<2 x double>* %p, <2 x double>* %53, double* %54)
  %p215 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false211:                                         ; preds = %false199
  %return217 = call i64 @"eq@III"(i64 %T2, i64 24)
  %308 = icmp ne i64 %return217, 0
  br i1 %308, label %true218, label %false219

true218:                                          ; preds = %false211
  store <2 x double> %pos1, <2 x double>* %55
  %w222 = load double, double* %w
  store double %w222, double* %56
  call void @"V_CYLINDER@UUF"(<2 x double>* %p, <2 x double>* %55, double* %56)
  %p223 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false219:                                         ; preds = %false211
  %return225 = call i64 @"eq@III"(i64 %T2, i64 25)
  %309 = icmp ne i64 %return225, 0
  br i1 %309, label %true226, label %false227

true226:                                          ; preds = %false219
  store <2 x double> %pos1, <2 x double>* %57
  %w230 = load double, double* %w
  store double %w230, double* %58
  call void @"V_EYEFISH@UUF"(<2 x double>* %p, <2 x double>* %57, double* %58)
  %p231 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false227:                                         ; preds = %false219
  %return233 = call i64 @"eq@III"(i64 %T2, i64 26)
  %310 = icmp ne i64 %return233, 0
  br i1 %310, label %true234, label %false235

true234:                                          ; preds = %false227
  %w237 = load double, double* %w
  store double %w237, double* %59
  call void @"V_BLUR@UF"(<2 x double>* %p, double* %59)
  %p238 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false235:                                         ; preds = %false227
  %return240 = call i64 @"eq@III"(i64 %T2, i64 27)
  %311 = icmp ne i64 %return240, 0
  br i1 %311, label %true241, label %false242

true241:                                          ; preds = %false235
  %return244 = call i64 @"neg@II"(i64 16)
  %return245 = call <2 x double>* @"detail@[UIS"(i64 %return244, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @55, i64 0, i64 0))
  %idx246 = load i64, i64* %idx
  %return247 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return245, i64 %idx246)
  store <2 x double> %pos1, <2 x double>* %60
  %w249 = load double, double* %w
  store double %w249, double* %61
  store <2 x double> %return247, <2 x double>* %62
  call void @"V_CURL@UUFU"(<2 x double>* %p, <2 x double>* %60, double* %61, <2 x double>* %62)
  %p251 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false242:                                         ; preds = %false235
  %return253 = call i64 @"eq@III"(i64 %T2, i64 28)
  %312 = icmp ne i64 %return253, 0
  br i1 %312, label %true254, label %false255

true254:                                          ; preds = %false242
  %return257 = call i64 @"neg@II"(i64 17)
  %return258 = call <4 x double>* @"detail@[PIS"(i64 %return257, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @56, i64 0, i64 0))
  %idx259 = load i64, i64* %idx
  %return260 = call <4 x double> @"getcomp@P[PI"(<4 x double>* %return258, i64 %idx259)
  store <2 x double> %pos1, <2 x double>* %63
  %w262 = load double, double* %w
  store double %w262, double* %64
  store <4 x double> %return260, <4 x double>* %65
  call void @"V_NGON@UUFP"(<2 x double>* %p, <2 x double>* %63, double* %64, <4 x double>* %65)
  %p264 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false255:                                         ; preds = %false242
  %return266 = call i64 @"eq@III"(i64 %T2, i64 29)
  %313 = icmp ne i64 %return266, 0
  br i1 %313, label %true267, label %false268

true267:                                          ; preds = %false255
  %return270 = call i64 @"neg@II"(i64 18)
  %return271 = call <4 x double>* @"detail@[PIS"(i64 %return270, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @57, i64 0, i64 0))
  %idx272 = load i64, i64* %idx
  %return273 = call <4 x double> @"getcomp@P[PI"(<4 x double>* %return271, i64 %idx272)
  store <2 x double> %pos1, <2 x double>* %66
  %w275 = load double, double* %w
  store double %w275, double* %67
  store <4 x double> %return273, <4 x double>* %68
  call void @"V_PDJ@UUFP"(<2 x double>* %p, <2 x double>* %66, double* %67, <4 x double>* %68)
  %p277 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false268:                                         ; preds = %false255
  %return279 = call i64 @"eq@III"(i64 %T2, i64 30)
  %314 = icmp ne i64 %return279, 0
  br i1 %314, label %true280, label %false281

true280:                                          ; preds = %false268
  %return283 = call i64 @"neg@II"(i64 19)
  %return284 = call <3 x double>* @"detail@[VIS"(i64 %return283, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @58, i64 0, i64 0))
  %idx285 = load i64, i64* %idx
  %return286 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %return284, i64 %idx285)
  store <2 x double> %pos1, <2 x double>* %69
  %w288 = load double, double* %w
  store double %w288, double* %70
  store <3 x double> %return286, <3 x double>* %71
  call void @"V_BLOB@UUFV"(<2 x double>* %p, <2 x double>* %69, double* %70, <3 x double>* %71)
  %p290 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false281:                                         ; preds = %false268
  %return292 = call i64 @"eq@III"(i64 %T2, i64 31)
  %315 = icmp ne i64 %return292, 0
  br i1 %315, label %true293, label %false294

true293:                                          ; preds = %false281
  %return296 = call i64 @"neg@II"(i64 20)
  %return297 = call <2 x double>* @"detail@[UIS"(i64 %return296, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @59, i64 0, i64 0))
  %idx298 = load i64, i64* %idx
  %return299 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return297, i64 %idx298)
  store <2 x double> %pos1, <2 x double>* %72
  %w301 = load double, double* %w
  store double %w301, double* %73
  store <2 x double> %return299, <2 x double>* %74
  call void @"V_JULIAN@UUFU"(<2 x double>* %p, <2 x double>* %72, double* %73, <2 x double>* %74)
  %p303 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false294:                                         ; preds = %false281
  %return305 = call i64 @"eq@III"(i64 %T2, i64 32)
  %316 = icmp ne i64 %return305, 0
  br i1 %316, label %true306, label %false307

true306:                                          ; preds = %false294
  %return309 = call i64 @"neg@II"(i64 21)
  %return310 = call <2 x double>* @"detail@[UIS"(i64 %return309, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @60, i64 0, i64 0))
  %idx311 = load i64, i64* %idx
  %return312 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return310, i64 %idx311)
  store <2 x double> %pos1, <2 x double>* %75
  %w314 = load double, double* %w
  store double %w314, double* %76
  store <2 x double> %return312, <2 x double>* %77
  call void @"V_JULIASCOPE@UUFU"(<2 x double>* %p, <2 x double>* %75, double* %76, <2 x double>* %77)
  %p316 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false307:                                         ; preds = %false294
  %return318 = call i64 @"eq@III"(i64 %T2, i64 33)
  %317 = icmp ne i64 %return318, 0
  br i1 %317, label %true319, label %false320

true319:                                          ; preds = %false307
  %w322 = load double, double* %w
  store double %w322, double* %78
  call void @"V_GAUSSIAN_BLUR@UF"(<2 x double>* %p, double* %78)
  %p323 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false320:                                         ; preds = %false307
  %return325 = call i64 @"eq@III"(i64 %T2, i64 34)
  %318 = icmp ne i64 %return325, 0
  br i1 %318, label %true326, label %end9

true326:                                          ; preds = %false320
  %return328 = call i64 @"neg@II"(i64 22)
  %return329 = call <2 x double>* @"detail@[UIS"(i64 %return328, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @61, i64 0, i64 0))
  %idx330 = load i64, i64* %idx
  %return331 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return329, i64 %idx330)
  store <2 x double> %pos1, <2 x double>* %79
  %w333 = load double, double* %w
  store double %w333, double* %80
  store <2 x double> %return331, <2 x double>* %81
  call void @"V_FAN2@UUFU"(<2 x double>* %p, <2 x double>* %79, double* %80, <2 x double>* %81)
  %p335 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true338:                                          ; preds = %false8
  %return342 = call i64 @"lt@III"(i64 %T2, i64 52)
  %319 = icmp ne i64 %return342, 0
  br i1 %319, label %true343, label %false344

false339:                                         ; preds = %false8
  %return724 = call i64 @"lt@III"(i64 %T2, i64 88)
  %320 = icmp ne i64 %return724, 0
  br i1 %320, label %true725, label %false726

true343:                                          ; preds = %true338
  %return347 = call i64 @"eq@III"(i64 %T2, i64 35)
  %321 = icmp ne i64 %return347, 0
  br i1 %321, label %true348, label %false349

false344:                                         ; preds = %true338
  %return534 = call i64 @"eq@III"(i64 %T2, i64 59)
  %322 = icmp ne i64 %return534, 0
  br i1 %322, label %true535, label %false536

true348:                                          ; preds = %true343
  %return351 = call i64 @"neg@II"(i64 23)
  %return352 = call double* @"detail@[FIS"(i64 %return351, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @62, i64 0, i64 0))
  store <2 x double> %pos1, <2 x double>* %82
  %w354 = load double, double* %w
  store double %w354, double* %83
  %idx356 = load i64, i64* %idx
  %return357 = call double @"getcomp@F[FI"(double* %return352, i64 %idx356)
  store double %return357, double* %84
  call void @"V_RINGS2@UUFF"(<2 x double>* %p, <2 x double>* %82, double* %83, double* %84)
  %p358 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false349:                                         ; preds = %true343
  %return360 = call i64 @"eq@III"(i64 %T2, i64 36)
  %323 = icmp ne i64 %return360, 0
  br i1 %323, label %true361, label %false362

true361:                                          ; preds = %false349
  %return364 = call i64 @"neg@II"(i64 24)
  %return365 = call <2 x double>* @"detail@[UIS"(i64 %return364, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @63, i64 0, i64 0))
  %idx366 = load i64, i64* %idx
  %return367 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return365, i64 %idx366)
  store <2 x double> %pos1, <2 x double>* %85
  %w369 = load double, double* %w
  store double %w369, double* %86
  store <2 x double> %return367, <2 x double>* %87
  call void @"V_RECTANGLES@UUFU"(<2 x double>* %p, <2 x double>* %85, double* %86, <2 x double>* %87)
  %p371 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false362:                                         ; preds = %false349
  %return373 = call i64 @"eq@III"(i64 %T2, i64 37)
  %324 = icmp ne i64 %return373, 0
  br i1 %324, label %true374, label %false375

true374:                                          ; preds = %false362
  %return377 = call i64 @"neg@II"(i64 25)
  %return378 = call double* @"detail@[FIS"(i64 %return377, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @64, i64 0, i64 0))
  store <2 x double> %pos1, <2 x double>* %88
  %w380 = load double, double* %w
  store double %w380, double* %89
  %idx382 = load i64, i64* %idx
  %return383 = call double @"getcomp@F[FI"(double* %return378, i64 %idx382)
  store double %return383, double* %90
  call void @"V_RADIALBLUR@UUFF"(<2 x double>* %p, <2 x double>* %88, double* %89, double* %90)
  %p384 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false375:                                         ; preds = %false362
  %return386 = call i64 @"eq@III"(i64 %T2, i64 38)
  %325 = icmp ne i64 %return386, 0
  br i1 %325, label %true387, label %false388

true387:                                          ; preds = %false375
  %return390 = call i64 @"neg@II"(i64 26)
  %return391 = call <3 x double>* @"detail@[VIS"(i64 %return390, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @65, i64 0, i64 0))
  %idx392 = load i64, i64* %idx
  %return393 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %return391, i64 %idx392)
  %w394 = load double, double* %w
  store double %w394, double* %91
  store <3 x double> %return393, <3 x double>* %92
  call void @"V_PIE@UFV"(<2 x double>* %p, double* %91, <3 x double>* %92)
  %p396 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false388:                                         ; preds = %false375
  %return398 = call i64 @"eq@III"(i64 %T2, i64 39)
  %326 = icmp ne i64 %return398, 0
  br i1 %326, label %true399, label %false400

true399:                                          ; preds = %false388
  %w402 = load double, double* %w
  store double %w402, double* %94
  call void @"V_ARCH@UUF"(<2 x double>* %p, <2 x double>* %93, double* %94)
  %p403 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false400:                                         ; preds = %false388
  %return405 = call i64 @"eq@III"(i64 %T2, i64 40)
  %327 = icmp ne i64 %return405, 0
  br i1 %327, label %true406, label %false407

true406:                                          ; preds = %false400
  store <2 x double> %pos1, <2 x double>* %95
  %w410 = load double, double* %w
  store double %w410, double* %96
  call void @"V_TANGENT@UUF"(<2 x double>* %p, <2 x double>* %95, double* %96)
  %p411 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false407:                                         ; preds = %false400
  %return413 = call i64 @"eq@III"(i64 %T2, i64 41)
  %328 = icmp ne i64 %return413, 0
  br i1 %328, label %true414, label %false415

true414:                                          ; preds = %false407
  %w417 = load double, double* %w
  store double %w417, double* %98
  call void @"V_SQUARE@UUF"(<2 x double>* %p, <2 x double>* %97, double* %98)
  %p418 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false415:                                         ; preds = %false407
  %return420 = call i64 @"eq@III"(i64 %T2, i64 42)
  %329 = icmp ne i64 %return420, 0
  br i1 %329, label %true421, label %false422

true421:                                          ; preds = %false415
  store <2 x double> %pos1, <2 x double>* %99
  %w425 = load double, double* %w
  store double %w425, double* %100
  call void @"V_RAYS@UUF"(<2 x double>* %p, <2 x double>* %99, double* %100)
  %p426 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false422:                                         ; preds = %false415
  %return428 = call i64 @"eq@III"(i64 %T2, i64 43)
  %330 = icmp ne i64 %return428, 0
  br i1 %330, label %true429, label %false430

true429:                                          ; preds = %false422
  store <2 x double> %pos1, <2 x double>* %101
  %w433 = load double, double* %w
  store double %w433, double* %102
  call void @"V_BLADE@UUF"(<2 x double>* %p, <2 x double>* %101, double* %102)
  %p434 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false430:                                         ; preds = %false422
  %return436 = call i64 @"eq@III"(i64 %T2, i64 44)
  %331 = icmp ne i64 %return436, 0
  br i1 %331, label %true437, label %false438

true437:                                          ; preds = %false430
  store <2 x double> %pos1, <2 x double>* %103
  %w441 = load double, double* %w
  store double %w441, double* %104
  call void @"V_SECANT2@UUF"(<2 x double>* %p, <2 x double>* %103, double* %104)
  %p442 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false438:                                         ; preds = %false430
  %return444 = call i64 @"eq@III"(i64 %T2, i64 45)
  %332 = icmp ne i64 %return444, 0
  br i1 %332, label %true445, label %false446

true445:                                          ; preds = %false438
  store <2 x double> %pos1, <2 x double>* %105
  %w449 = load double, double* %w
  store double %w449, double* %106
  call void @"V_TWINTRIAN@UUF"(<2 x double>* %p, <2 x double>* %105, double* %106)
  %p450 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false446:                                         ; preds = %false438
  %return452 = call i64 @"eq@III"(i64 %T2, i64 46)
  %333 = icmp ne i64 %return452, 0
  br i1 %333, label %true453, label %false454

true453:                                          ; preds = %false446
  store <2 x double> %pos1, <2 x double>* %107
  %w457 = load double, double* %w
  store double %w457, double* %108
  call void @"V_CROSS@UUF"(<2 x double>* %p, <2 x double>* %107, double* %108)
  %p458 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false454:                                         ; preds = %false446
  %return460 = call i64 @"eq@III"(i64 %T2, i64 47)
  %334 = icmp ne i64 %return460, 0
  br i1 %334, label %true461, label %false462

true461:                                          ; preds = %false454
  %return464 = call i64 @"neg@II"(i64 27)
  %return465 = call <2 x double>* @"detail@[UIS"(i64 %return464, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @66, i64 0, i64 0))
  %idx466 = load i64, i64* %idx
  %return467 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return465, i64 %idx466)
  %return469 = call <3 x double>* @"detail@[VIS"(i64 %return464, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @67, i64 0, i64 0))
  %idx470 = load i64, i64* %idx
  %return471 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %return469, i64 %idx470)
  store <2 x double> %pos1, <2 x double>* %109
  %w473 = load double, double* %w
  store double %w473, double* %110
  store <2 x double> %return467, <2 x double>* %111
  store <3 x double> %return471, <3 x double>* %112
  call void @"V_DISC2@UUFUV"(<2 x double>* %p, <2 x double>* %109, double* %110, <2 x double>* %111, <3 x double>* %112)
  %p476 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false462:                                         ; preds = %false454
  %return478 = call i64 @"eq@III"(i64 %T2, i64 48)
  %335 = icmp ne i64 %return478, 0
  br i1 %335, label %true479, label %false480

true479:                                          ; preds = %false462
  %return482 = call i64 @"neg@II"(i64 28)
  %return483 = call <3 x double>* @"detail@[VIS"(i64 %return482, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @68, i64 0, i64 0))
  %idx484 = load i64, i64* %idx
  %return485 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %return483, i64 %idx484)
  %return487 = call <3 x double>* @"detail@[VIS"(i64 %return482, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @69, i64 0, i64 0))
  %idx488 = load i64, i64* %idx
  %return489 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %return487, i64 %idx488)
  store <2 x double> %pos1, <2 x double>* %113
  %w491 = load double, double* %w
  store double %w491, double* %114
  store <3 x double> %return485, <3 x double>* %115
  store <3 x double> %return489, <3 x double>* %116
  call void @"V_SUPERSHAPE@UUFVV"(<2 x double>* %p, <2 x double>* %113, double* %114, <3 x double>* %115, <3 x double>* %116)
  %p494 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false480:                                         ; preds = %false462
  %return496 = call i64 @"eq@III"(i64 %T2, i64 49)
  %336 = icmp ne i64 %return496, 0
  br i1 %336, label %true497, label %false498

true497:                                          ; preds = %false480
  %return500 = call i64 @"neg@II"(i64 29)
  %return501 = call <2 x double>* @"detail@[UIS"(i64 %return500, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @70, i64 0, i64 0))
  %idx502 = load i64, i64* %idx
  %return503 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return501, i64 %idx502)
  store <2 x double> %pos1, <2 x double>* %117
  %w505 = load double, double* %w
  store double %w505, double* %118
  store <2 x double> %return503, <2 x double>* %119
  call void @"V_FLOWER@UUFU"(<2 x double>* %p, <2 x double>* %117, double* %118, <2 x double>* %119)
  %p507 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false498:                                         ; preds = %false480
  %return509 = call i64 @"eq@III"(i64 %T2, i64 50)
  %337 = icmp ne i64 %return509, 0
  br i1 %337, label %true510, label %false511

true510:                                          ; preds = %false498
  %return513 = call i64 @"neg@II"(i64 30)
  %return514 = call <2 x double>* @"detail@[UIS"(i64 %return513, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @71, i64 0, i64 0))
  %idx515 = load i64, i64* %idx
  %return516 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return514, i64 %idx515)
  store <2 x double> %pos1, <2 x double>* %120
  %w518 = load double, double* %w
  store double %w518, double* %121
  store <2 x double> %return516, <2 x double>* %122
  call void @"V_CONIC@UUFU"(<2 x double>* %p, <2 x double>* %120, double* %121, <2 x double>* %122)
  %p520 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false511:                                         ; preds = %false498
  %return522 = call i64 @"eq@III"(i64 %T2, i64 51)
  %338 = icmp ne i64 %return522, 0
  br i1 %338, label %true523, label %end9

true523:                                          ; preds = %false511
  %return525 = call i64 @"neg@II"(i64 31)
  %return526 = call <2 x double>* @"detail@[UIS"(i64 %return525, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @72, i64 0, i64 0))
  %idx527 = load i64, i64* %idx
  %return528 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return526, i64 %idx527)
  store <2 x double> %pos1, <2 x double>* %123
  %w530 = load double, double* %w
  store double %w530, double* %124
  store <2 x double> %return528, <2 x double>* %125
  call void @"V_PARABOLA@UUFU"(<2 x double>* %p, <2 x double>* %123, double* %124, <2 x double>* %125)
  %p532 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true535:                                          ; preds = %false344
  store <2 x double> %pos1, <2 x double>* %126
  %w539 = load double, double* %w
  store double %w539, double* %127
  call void @"V_ELLIPTIC@UUF"(<2 x double>* %p, <2 x double>* %126, double* %127)
  %p540 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false536:                                         ; preds = %false344
  %return542 = call i64 @"eq@III"(i64 %T2, i64 52)
  %339 = icmp ne i64 %return542, 0
  br i1 %339, label %true543, label %false544

true543:                                          ; preds = %false536
  %return546 = call i64 @"neg@II"(i64 32)
  %return547 = call <2 x double>* @"detail@[UIS"(i64 %return546, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @73, i64 0, i64 0))
  %idx548 = load i64, i64* %idx
  %return549 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return547, i64 %idx548)
  store <2 x double> %pos1, <2 x double>* %128
  %w551 = load double, double* %w
  store double %w551, double* %129
  store <2 x double> %return549, <2 x double>* %130
  call void @"V_BENT2@UUFU"(<2 x double>* %p, <2 x double>* %128, double* %129, <2 x double>* %130)
  %p553 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false544:                                         ; preds = %false536
  %return555 = call i64 @"eq@III"(i64 %T2, i64 53)
  %340 = icmp ne i64 %return555, 0
  br i1 %340, label %true556, label %false557

true556:                                          ; preds = %false544
  %return559 = call i64 @"neg@II"(i64 33)
  %return560 = call double* @"detail@[FIS"(i64 %return559, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @74, i64 0, i64 0))
  store <2 x double> %pos1, <2 x double>* %131
  %w562 = load double, double* %w
  store double %w562, double* %132
  %idx564 = load i64, i64* %idx
  %return565 = call double @"getcomp@F[FI"(double* %return560, i64 %idx564)
  store double %return565, double* %133
  call void @"V_BIPOLAR@UUFF"(<2 x double>* %p, <2 x double>* %131, double* %132, double* %133)
  %p566 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false557:                                         ; preds = %false544
  %return568 = call i64 @"eq@III"(i64 %T2, i64 54)
  %341 = icmp ne i64 %return568, 0
  br i1 %341, label %true569, label %false570

true569:                                          ; preds = %false557
  store <2 x double> %pos1, <2 x double>* %134
  %w573 = load double, double* %w
  store double %w573, double* %135
  call void @"V_BOARDERS@UUF"(<2 x double>* %p, <2 x double>* %134, double* %135)
  %p574 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false570:                                         ; preds = %false557
  %return576 = call i64 @"eq@III"(i64 %T2, i64 55)
  %342 = icmp ne i64 %return576, 0
  br i1 %342, label %true577, label %false578

true577:                                          ; preds = %false570
  store <2 x double> %pos1, <2 x double>* %136
  %w581 = load double, double* %w
  store double %w581, double* %137
  call void @"V_BUTTERFLY@UUF"(<2 x double>* %p, <2 x double>* %136, double* %137)
  %p582 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false578:                                         ; preds = %false570
  %return584 = call i64 @"eq@III"(i64 %T2, i64 56)
  %343 = icmp ne i64 %return584, 0
  br i1 %343, label %true585, label %false586

true585:                                          ; preds = %false578
  %return588 = call i64 @"neg@II"(i64 34)
  %return589 = call double* @"detail@[FIS"(i64 %return588, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @75, i64 0, i64 0))
  store <2 x double> %pos1, <2 x double>* %138
  %w591 = load double, double* %w
  store double %w591, double* %139
  %idx593 = load i64, i64* %idx
  %return594 = call double @"getcomp@F[FI"(double* %return589, i64 %idx593)
  store double %return594, double* %140
  call void @"V_CELL@UUFF"(<2 x double>* %p, <2 x double>* %138, double* %139, double* %140)
  %p595 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false586:                                         ; preds = %false578
  %return597 = call i64 @"eq@III"(i64 %T2, i64 57)
  %344 = icmp ne i64 %return597, 0
  br i1 %344, label %true598, label %false599

true598:                                          ; preds = %false586
  %return601 = call i64 @"neg@II"(i64 35)
  %return602 = call <3 x double>* @"detail@[VIS"(i64 %return601, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @76, i64 0, i64 0))
  %idx603 = load i64, i64* %idx
  %return604 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %return602, i64 %idx603)
  store <2 x double> %pos1, <2 x double>* %141
  %w606 = load double, double* %w
  store double %w606, double* %142
  store <3 x double> %return604, <3 x double>* %143
  call void @"V_CPOW@UUFV"(<2 x double>* %p, <2 x double>* %141, double* %142, <3 x double>* %143)
  %p608 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false599:                                         ; preds = %false586
  %return610 = call i64 @"eq@III"(i64 %T2, i64 58)
  %345 = icmp ne i64 %return610, 0
  br i1 %345, label %true611, label %false612

true611:                                          ; preds = %false599
  store <2 x double> %pos1, <2 x double>* %144
  %w615 = load double, double* %w
  store double %w615, double* %145
  call void @"V_EDISC@UUF"(<2 x double>* %p, <2 x double>* %144, double* %145)
  %p616 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false612:                                         ; preds = %false599
  %return618 = call i64 @"eq@III"(i64 %T2, i64 60)
  %346 = icmp ne i64 %return618, 0
  br i1 %346, label %true619, label %false620

true619:                                          ; preds = %false612
  store <2 x double> %pos1, <2 x double>* %146
  %w623 = load double, double* %w
  store double %w623, double* %147
  call void @"V_NOISE@UUF"(<2 x double>* %p, <2 x double>* %146, double* %147)
  %p624 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false620:                                         ; preds = %false612
  %return626 = call i64 @"eq@III"(i64 %T2, i64 61)
  %347 = icmp ne i64 %return626, 0
  br i1 %347, label %true627, label %false628

true627:                                          ; preds = %false620
  %return630 = call i64 @"neg@II"(i64 36)
  %return631 = call double* @"detail@[FIS"(i64 %return630, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @77, i64 0, i64 0))
  store <2 x double> %pos1, <2 x double>* %148
  %w633 = load double, double* %w
  store double %w633, double* %149
  %idx635 = load i64, i64* %idx
  %return636 = call double @"getcomp@F[FI"(double* %return631, i64 %idx635)
  store double %return636, double* %150
  call void @"V_ESCHER@UUFF"(<2 x double>* %p, <2 x double>* %148, double* %149, double* %150)
  %p637 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false628:                                         ; preds = %false620
  %return639 = call i64 @"eq@III"(i64 %T2, i64 62)
  %348 = icmp ne i64 %return639, 0
  br i1 %348, label %true640, label %false641

true640:                                          ; preds = %false628
  store <2 x double> %pos1, <2 x double>* %151
  %w644 = load double, double* %w
  store double %w644, double* %152
  call void @"V_FOCI@UUF"(<2 x double>* %p, <2 x double>* %151, double* %152)
  %p645 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false641:                                         ; preds = %false628
  %return647 = call i64 @"eq@III"(i64 %T2, i64 63)
  %349 = icmp ne i64 %return647, 0
  br i1 %349, label %true648, label %false649

true648:                                          ; preds = %false641
  %return651 = call i64 @"neg@II"(i64 37)
  %return652 = call <3 x double>* @"detail@[VIS"(i64 %return651, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @78, i64 0, i64 0))
  %idx653 = load i64, i64* %idx
  %return654 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %return652, i64 %idx653)
  %return656 = call <2 x double>* @"detail@[UIS"(i64 %return651, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @79, i64 0, i64 0))
  %idx657 = load i64, i64* %idx
  %return658 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return656, i64 %idx657)
  store <2 x double> %pos1, <2 x double>* %153
  %w660 = load double, double* %w
  store double %w660, double* %154
  store <3 x double> %return654, <3 x double>* %155
  store <2 x double> %return658, <2 x double>* %156
  call void @"V_LAZYSUSAN@UUFVU"(<2 x double>* %p, <2 x double>* %153, double* %154, <3 x double>* %155, <2 x double>* %156)
  %p663 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false649:                                         ; preds = %false641
  %return665 = call i64 @"eq@III"(i64 %T2, i64 64)
  %350 = icmp ne i64 %return665, 0
  br i1 %350, label %true666, label %false667

true666:                                          ; preds = %false649
  store <2 x double> %pos1, <2 x double>* %157
  %w670 = load double, double* %w
  store double %w670, double* %158
  call void @"V_LOONIE@UUF"(<2 x double>* %p, <2 x double>* %157, double* %158)
  %p671 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false667:                                         ; preds = %false649
  %return673 = call i64 @"eq@III"(i64 %T2, i64 66)
  %351 = icmp ne i64 %return673, 0
  br i1 %351, label %true674, label %false675

true674:                                          ; preds = %false667
  %return677 = call i64 @"neg@II"(i64 38)
  %return678 = call <2 x double>* @"detail@[UIS"(i64 %return677, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @80, i64 0, i64 0))
  %idx679 = load i64, i64* %idx
  %return680 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return678, i64 %idx679)
  store <2 x double> %pos1, <2 x double>* %159
  %w682 = load double, double* %w
  store double %w682, double* %160
  store <2 x double> %return680, <2 x double>* %161
  call void @"V_MODULUS@UUFU"(<2 x double>* %p, <2 x double>* %159, double* %160, <2 x double>* %161)
  %p684 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false675:                                         ; preds = %false667
  %return686 = call i64 @"eq@III"(i64 %T2, i64 67)
  %352 = icmp ne i64 %return686, 0
  br i1 %352, label %true687, label %false688

true687:                                          ; preds = %false675
  %return690 = call i64 @"neg@II"(i64 39)
  %return691 = call <4 x double>* @"detail@[PIS"(i64 %return690, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @81, i64 0, i64 0))
  %idx692 = load i64, i64* %idx
  %return693 = call <4 x double> @"getcomp@P[PI"(<4 x double>* %return691, i64 %idx692)
  store <2 x double> %pos1, <2 x double>* %162
  %w695 = load double, double* %w
  store double %w695, double* %163
  store <4 x double> %return693, <4 x double>* %164
  call void @"V_OSCOPE@UUFP"(<2 x double>* %p, <2 x double>* %162, double* %163, <4 x double>* %164)
  %p697 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false688:                                         ; preds = %false675
  %return699 = call i64 @"eq@III"(i64 %T2, i64 68)
  %353 = icmp ne i64 %return699, 0
  br i1 %353, label %true700, label %false701

true700:                                          ; preds = %false688
  store <2 x double> %pos1, <2 x double>* %165
  %w704 = load double, double* %w
  store double %w704, double* %166
  call void @"V_POLAR2@UUF"(<2 x double>* %p, <2 x double>* %165, double* %166)
  %p705 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false701:                                         ; preds = %false688
  %return707 = call i64 @"eq@III"(i64 %T2, i64 69)
  %354 = icmp ne i64 %return707, 0
  br i1 %354, label %true708, label %end9

true708:                                          ; preds = %false701
  %return710 = call i64 @"neg@II"(i64 40)
  %return711 = call double* @"detail@[FIS"(i64 %return710, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @82, i64 0, i64 0))
  %return713 = call <2 x double>* @"detail@[UIS"(i64 %return710, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @83, i64 0, i64 0))
  %idx714 = load i64, i64* %idx
  %return715 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return713, i64 %idx714)
  store <2 x double> %pos1, <2 x double>* %167
  %w717 = load double, double* %w
  store double %w717, double* %168
  %idx719 = load i64, i64* %idx
  %return720 = call double @"getcomp@F[FI"(double* %return711, i64 %idx719)
  store double %return720, double* %169
  store <2 x double> %return715, <2 x double>* %170
  call void @"V_POPCORN2@UUFFU"(<2 x double>* %p, <2 x double>* %167, double* %168, double* %169, <2 x double>* %170)
  %p722 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true725:                                          ; preds = %false339
  %return729 = call i64 @"eq@III"(i64 %T2, i64 73)
  %355 = icmp ne i64 %return729, 0
  br i1 %355, label %true730, label %false731

false726:                                         ; preds = %false339
  %return932 = call i64 @"eq@III"(i64 %T2, i64 88)
  %356 = icmp ne i64 %return932, 0
  br i1 %356, label %true933, label %false934

true730:                                          ; preds = %true725
  %return733 = call i64 @"neg@II"(i64 43)
  %return734 = call <2 x double>* @"detail@[UIS"(i64 %return733, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @84, i64 0, i64 0))
  %idx735 = load i64, i64* %idx
  %return736 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return734, i64 %idx735)
  store <2 x double> %pos1, <2 x double>* %171
  %w738 = load double, double* %w
  store double %w738, double* %172
  store <2 x double> %return736, <2 x double>* %173
  call void @"V_SPLITS@UUFU"(<2 x double>* %p, <2 x double>* %171, double* %172, <2 x double>* %173)
  %p740 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false731:                                         ; preds = %true725
  %return742 = call i64 @"eq@III"(i64 %T2, i64 70)
  %357 = icmp ne i64 %return742, 0
  br i1 %357, label %true743, label %false744

true743:                                          ; preds = %false731
  store <2 x double> %pos1, <2 x double>* %174
  %w747 = load double, double* %w
  store double %w747, double* %175
  call void @"V_SCRY@UUF"(<2 x double>* %p, <2 x double>* %174, double* %175)
  %p748 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false744:                                         ; preds = %false731
  %return750 = call i64 @"eq@III"(i64 %T2, i64 71)
  %358 = icmp ne i64 %return750, 0
  br i1 %358, label %true751, label %false752

true751:                                          ; preds = %false744
  %return754 = call i64 @"neg@II"(i64 41)
  %return755 = call <2 x double>* @"detail@[UIS"(i64 %return754, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @85, i64 0, i64 0))
  %idx756 = load i64, i64* %idx
  %return757 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return755, i64 %idx756)
  %return759 = call <2 x double>* @"detail@[UIS"(i64 %return754, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @86, i64 0, i64 0))
  %idx760 = load i64, i64* %idx
  %return761 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return759, i64 %idx760)
  store <2 x double> %pos1, <2 x double>* %176
  %w763 = load double, double* %w
  store double %w763, double* %177
  store <2 x double> %return757, <2 x double>* %178
  store <2 x double> %return761, <2 x double>* %179
  call void @"V_SEPARATION@UUFUU"(<2 x double>* %p, <2 x double>* %176, double* %177, <2 x double>* %178, <2 x double>* %179)
  %p766 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false752:                                         ; preds = %false744
  %return768 = call i64 @"eq@III"(i64 %T2, i64 72)
  %359 = icmp ne i64 %return768, 0
  br i1 %359, label %true769, label %false770

true769:                                          ; preds = %false752
  %return772 = call i64 @"neg@II"(i64 42)
  %return773 = call <2 x double>* @"detail@[UIS"(i64 %return772, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @87, i64 0, i64 0))
  %idx774 = load i64, i64* %idx
  %return775 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return773, i64 %idx774)
  store <2 x double> %pos1, <2 x double>* %180
  %w777 = load double, double* %w
  store double %w777, double* %181
  store <2 x double> %return775, <2 x double>* %182
  call void @"V_SPLIT@UUFU"(<2 x double>* %p, <2 x double>* %180, double* %181, <2 x double>* %182)
  %p779 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false770:                                         ; preds = %false752
  %return781 = call i64 @"eq@III"(i64 %T2, i64 74)
  %360 = icmp ne i64 %return781, 0
  br i1 %360, label %true782, label %false783

true782:                                          ; preds = %false770
  %return785 = call i64 @"neg@II"(i64 44)
  %return786 = call <2 x double>* @"detail@[UIS"(i64 %return785, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @88, i64 0, i64 0))
  %idx787 = load i64, i64* %idx
  %return788 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return786, i64 %idx787)
  store <2 x double> %pos1, <2 x double>* %183
  %w790 = load double, double* %w
  store double %w790, double* %184
  store <2 x double> %return788, <2 x double>* %185
  call void @"V_STRIPES@UUFU"(<2 x double>* %p, <2 x double>* %183, double* %184, <2 x double>* %185)
  %p792 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false783:                                         ; preds = %false770
  %return794 = call i64 @"eq@III"(i64 %T2, i64 75)
  %361 = icmp ne i64 %return794, 0
  br i1 %361, label %true795, label %false796

true795:                                          ; preds = %false783
  %return798 = call i64 @"neg@II"(i64 45)
  %return799 = call <4 x double>* @"detail@[PIS"(i64 %return798, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @89, i64 0, i64 0))
  %idx800 = load i64, i64* %idx
  %return801 = call <4 x double> @"getcomp@P[PI"(<4 x double>* %return799, i64 %idx800)
  store <2 x double> %pos1, <2 x double>* %186
  %w803 = load double, double* %w
  store double %w803, double* %187
  store <4 x double> %return801, <4 x double>* %188
  call void @"V_WEDGE@UUFP"(<2 x double>* %p, <2 x double>* %186, double* %187, <4 x double>* %188)
  %p805 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false796:                                         ; preds = %false783
  %return807 = call i64 @"eq@III"(i64 %T2, i64 76)
  %362 = icmp ne i64 %return807, 0
  br i1 %362, label %true808, label %false809

true808:                                          ; preds = %false796
  %return811 = call i64 @"neg@II"(i64 46)
  %return812 = call <4 x double>* @"detail@[PIS"(i64 %return811, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @90, i64 0, i64 0))
  %idx813 = load i64, i64* %idx
  %return814 = call <4 x double> @"getcomp@P[PI"(<4 x double>* %return812, i64 %idx813)
  store <2 x double> %pos1, <2 x double>* %189
  %w816 = load double, double* %w
  store double %w816, double* %190
  store <4 x double> %return814, <4 x double>* %191
  call void @"V_WEDGEJULIA@UUFP"(<2 x double>* %p, <2 x double>* %189, double* %190, <4 x double>* %191)
  %p818 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false809:                                         ; preds = %false796
  %return820 = call i64 @"eq@III"(i64 %T2, i64 77)
  %363 = icmp ne i64 %return820, 0
  br i1 %363, label %true821, label %false822

true821:                                          ; preds = %false809
  %return824 = call i64 @"neg@II"(i64 47)
  %return825 = call <4 x double>* @"detail@[PIS"(i64 %return824, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @91, i64 0, i64 0))
  %idx826 = load i64, i64* %idx
  %return827 = call <4 x double> @"getcomp@P[PI"(<4 x double>* %return825, i64 %idx826)
  store <2 x double> %pos1, <2 x double>* %192
  %w829 = load double, double* %w
  store double %w829, double* %193
  store <4 x double> %return827, <4 x double>* %194
  call void @"V_WEDGESPH@UUFP"(<2 x double>* %p, <2 x double>* %192, double* %193, <4 x double>* %194)
  %p831 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false822:                                         ; preds = %false809
  %return833 = call i64 @"eq@III"(i64 %T2, i64 78)
  %364 = icmp ne i64 %return833, 0
  br i1 %364, label %true834, label %false835

true834:                                          ; preds = %false822
  %return837 = call i64 @"neg@II"(i64 48)
  %return838 = call <2 x double>* @"detail@[UIS"(i64 %return837, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @92, i64 0, i64 0))
  %idx839 = load i64, i64* %idx
  %return840 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return838, i64 %idx839)
  store <2 x double> %pos1, <2 x double>* %195
  %w842 = load double, double* %w
  store double %w842, double* %196
  store <2 x double> %return840, <2 x double>* %197
  call void @"V_WHORL@UUFU"(<2 x double>* %p, <2 x double>* %195, double* %196, <2 x double>* %197)
  %p844 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false835:                                         ; preds = %false822
  %return846 = call i64 @"eq@III"(i64 %T2, i64 79)
  %365 = icmp ne i64 %return846, 0
  br i1 %365, label %true847, label %false848

true847:                                          ; preds = %false835
  %return850 = call i64 @"neg@II"(i64 49)
  %return851 = call <2 x double>* @"detail@[UIS"(i64 %return850, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @93, i64 0, i64 0))
  %idx852 = load i64, i64* %idx
  %return853 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return851, i64 %idx852)
  %return855 = call <2 x double>* @"detail@[UIS"(i64 %return850, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @94, i64 0, i64 0))
  %idx856 = load i64, i64* %idx
  %return857 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return855, i64 %idx856)
  store <2 x double> %pos1, <2 x double>* %198
  %w859 = load double, double* %w
  store double %w859, double* %199
  store <2 x double> %return853, <2 x double>* %200
  store <2 x double> %return857, <2 x double>* %201
  call void @"V_WAVES2@UUFUU"(<2 x double>* %p, <2 x double>* %198, double* %199, <2 x double>* %200, <2 x double>* %201)
  %p862 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false848:                                         ; preds = %false835
  %return864 = call i64 @"eq@III"(i64 %T2, i64 80)
  %366 = icmp ne i64 %return864, 0
  br i1 %366, label %true865, label %false866

true865:                                          ; preds = %false848
  store <2 x double> %pos1, <2 x double>* %202
  %w869 = load double, double* %w
  store double %w869, double* %203
  call void @"V_EXP@UUF"(<2 x double>* %p, <2 x double>* %202, double* %203)
  %p870 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false866:                                         ; preds = %false848
  %return872 = call i64 @"eq@III"(i64 %T2, i64 81)
  %367 = icmp ne i64 %return872, 0
  br i1 %367, label %true873, label %false874

true873:                                          ; preds = %false866
  store <2 x double> %pos1, <2 x double>* %204
  %w877 = load double, double* %w
  store double %w877, double* %205
  call void @"V_LOG@UUF"(<2 x double>* %p, <2 x double>* %204, double* %205)
  %p878 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false874:                                         ; preds = %false866
  %return880 = call i64 @"eq@III"(i64 %T2, i64 82)
  %368 = icmp ne i64 %return880, 0
  br i1 %368, label %true881, label %false882

true881:                                          ; preds = %false874
  %f3c884 = load i64, i64* %f3c
  store i64 %f3c884, i64* %206
  store <2 x double> %pos1, <2 x double>* %207
  %w886 = load double, double* %w
  store double %w886, double* %208
  call void @"V_SIN@IUUF"(i64* %206, <2 x double>* %p, <2 x double>* %207, double* %208)
  %p887 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false882:                                         ; preds = %false874
  %return889 = call i64 @"eq@III"(i64 %T2, i64 83)
  %369 = icmp ne i64 %return889, 0
  br i1 %369, label %true890, label %false891

true890:                                          ; preds = %false882
  %f3c893 = load i64, i64* %f3c
  store i64 %f3c893, i64* %209
  store <2 x double> %pos1, <2 x double>* %210
  %w895 = load double, double* %w
  store double %w895, double* %211
  call void @"V_COS@IUUF"(i64* %209, <2 x double>* %p, <2 x double>* %210, double* %211)
  %p896 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false891:                                         ; preds = %false882
  %return898 = call i64 @"eq@III"(i64 %T2, i64 84)
  %370 = icmp ne i64 %return898, 0
  br i1 %370, label %true899, label %false900

true899:                                          ; preds = %false891
  %f3c902 = load i64, i64* %f3c
  store i64 %f3c902, i64* %212
  store <2 x double> %pos1, <2 x double>* %213
  %w904 = load double, double* %w
  store double %w904, double* %214
  call void @"V_TAN@IUUF"(i64* %212, <2 x double>* %p, <2 x double>* %213, double* %214)
  %p905 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false900:                                         ; preds = %false891
  %return907 = call i64 @"eq@III"(i64 %T2, i64 85)
  %371 = icmp ne i64 %return907, 0
  br i1 %371, label %true908, label %false909

true908:                                          ; preds = %false900
  %f3c911 = load i64, i64* %f3c
  store i64 %f3c911, i64* %215
  store <2 x double> %pos1, <2 x double>* %216
  %w913 = load double, double* %w
  store double %w913, double* %217
  call void @"V_SEC@IUUF"(i64* %215, <2 x double>* %p, <2 x double>* %216, double* %217)
  %p914 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false909:                                         ; preds = %false900
  %return916 = call i64 @"eq@III"(i64 %T2, i64 86)
  %372 = icmp ne i64 %return916, 0
  br i1 %372, label %true917, label %end918

true917:                                          ; preds = %false909
  %f3c919 = load i64, i64* %f3c
  store i64 %f3c919, i64* %218
  store <2 x double> %pos1, <2 x double>* %219
  %w921 = load double, double* %w
  store double %w921, double* %220
  call void @"V_CSC@IUUF"(i64* %218, <2 x double>* %p, <2 x double>* %219, double* %220)
  %p922 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

end918:                                           ; preds = %false909
  %return924 = call i64 @"eq@III"(i64 %T2, i64 87)
  %373 = icmp ne i64 %return924, 0
  br i1 %373, label %true925, label %end9

true925:                                          ; preds = %end918
  %f3c927 = load i64, i64* %f3c
  store i64 %f3c927, i64* %221
  store <2 x double> %pos1, <2 x double>* %222
  %w929 = load double, double* %w
  store double %w929, double* %223
  call void @"V_COT@IUUF"(i64* %221, <2 x double>* %p, <2 x double>* %222, double* %223)
  %p930 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true933:                                          ; preds = %false726
  %f3c936 = load i64, i64* %f3c
  store i64 %f3c936, i64* %224
  store <2 x double> %pos1, <2 x double>* %225
  %w938 = load double, double* %w
  store double %w938, double* %226
  call void @"V_SINH@IUUF"(i64* %224, <2 x double>* %p, <2 x double>* %225, double* %226)
  %p939 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false934:                                         ; preds = %false726
  %return941 = call i64 @"eq@III"(i64 %T2, i64 89)
  %374 = icmp ne i64 %return941, 0
  br i1 %374, label %true942, label %false943

true942:                                          ; preds = %false934
  %f3c945 = load i64, i64* %f3c
  store i64 %f3c945, i64* %227
  store <2 x double> %pos1, <2 x double>* %228
  %w947 = load double, double* %w
  store double %w947, double* %229
  call void @"V_COSH@IUUF"(i64* %227, <2 x double>* %p, <2 x double>* %228, double* %229)
  %p948 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false943:                                         ; preds = %false934
  %return950 = call i64 @"eq@III"(i64 %T2, i64 90)
  %375 = icmp ne i64 %return950, 0
  br i1 %375, label %true951, label %false952

true951:                                          ; preds = %false943
  %f3c954 = load i64, i64* %f3c
  store i64 %f3c954, i64* %230
  store <2 x double> %pos1, <2 x double>* %231
  %w956 = load double, double* %w
  store double %w956, double* %232
  call void @"V_TANH@IUUF"(i64* %230, <2 x double>* %p, <2 x double>* %231, double* %232)
  %p957 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false952:                                         ; preds = %false943
  %return959 = call i64 @"eq@III"(i64 %T2, i64 91)
  %376 = icmp ne i64 %return959, 0
  br i1 %376, label %true960, label %false961

true960:                                          ; preds = %false952
  %f3c963 = load i64, i64* %f3c
  store i64 %f3c963, i64* %233
  store <2 x double> %pos1, <2 x double>* %234
  %w965 = load double, double* %w
  store double %w965, double* %235
  call void @"V_SECH@IUUF"(i64* %233, <2 x double>* %p, <2 x double>* %234, double* %235)
  %p966 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false961:                                         ; preds = %false952
  %return968 = call i64 @"eq@III"(i64 %T2, i64 92)
  %377 = icmp ne i64 %return968, 0
  br i1 %377, label %true969, label %false970

true969:                                          ; preds = %false961
  %f3c972 = load i64, i64* %f3c
  store i64 %f3c972, i64* %236
  store <2 x double> %pos1, <2 x double>* %237
  %w974 = load double, double* %w
  store double %w974, double* %238
  call void @"V_CSCH@IUUF"(i64* %236, <2 x double>* %p, <2 x double>* %237, double* %238)
  %p975 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false970:                                         ; preds = %false961
  %return977 = call i64 @"eq@III"(i64 %T2, i64 93)
  %378 = icmp ne i64 %return977, 0
  br i1 %378, label %true978, label %false979

true978:                                          ; preds = %false970
  %f3c981 = load i64, i64* %f3c
  store i64 %f3c981, i64* %239
  store <2 x double> %pos1, <2 x double>* %240
  %w983 = load double, double* %w
  store double %w983, double* %241
  call void @"V_COTH@IUUF"(i64* %239, <2 x double>* %p, <2 x double>* %240, double* %241)
  %p984 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false979:                                         ; preds = %false970
  %return986 = call i64 @"eq@III"(i64 %T2, i64 94)
  %379 = icmp ne i64 %return986, 0
  br i1 %379, label %true987, label %false988

true987:                                          ; preds = %false979
  %return990 = call i64 @"neg@II"(i64 50)
  %return991 = call <4 x double>* @"detail@[PIS"(i64 %return990, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @95, i64 0, i64 0))
  %idx992 = load i64, i64* %idx
  %return993 = call <4 x double> @"getcomp@P[PI"(<4 x double>* %return991, i64 %idx992)
  store <2 x double> %pos1, <2 x double>* %242
  %w995 = load double, double* %w
  store double %w995, double* %243
  store <4 x double> %return993, <4 x double>* %244
  call void @"V_AUGER@UUFP"(<2 x double>* %p, <2 x double>* %242, double* %243, <4 x double>* %244)
  %p997 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false988:                                         ; preds = %false979
  %return999 = call i64 @"eq@III"(i64 %T2, i64 95)
  %380 = icmp ne i64 %return999, 0
  br i1 %380, label %true1000, label %false1001

true1000:                                         ; preds = %false988
  %return1003 = call i64 @"neg@II"(i64 51)
  %return1004 = call double* @"detail@[FIS"(i64 %return1003, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @96, i64 0, i64 0))
  store <2 x double> %pos1, <2 x double>* %245
  %w1006 = load double, double* %w
  store double %w1006, double* %246
  %idx1008 = load i64, i64* %idx
  %return1009 = call double @"getcomp@F[FI"(double* %return1004, i64 %idx1008)
  store double %return1009, double* %247
  call void @"V_FLUX@UUFF"(<2 x double>* %p, <2 x double>* %245, double* %246, double* %247)
  %p1010 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1001:                                        ; preds = %false988
  %return1012 = call i64 @"eq@III"(i64 %T2, i64 96)
  %381 = icmp ne i64 %return1012, 0
  br i1 %381, label %true1013, label %false1014

true1013:                                         ; preds = %false1001
  %return1016 = call i64 @"neg@II"(i64 52)
  %return1017 = call <4 x double>* @"detail@[PIS"(i64 %return1016, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @97, i64 0, i64 0))
  %idx1018 = load i64, i64* %idx
  %return1019 = call <4 x double> @"getcomp@P[PI"(<4 x double>* %return1017, i64 %idx1018)
  %return1021 = call <4 x double>* @"detail@[PIS"(i64 %return1016, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @98, i64 0, i64 0))
  %idx1022 = load i64, i64* %idx
  %return1023 = call <4 x double> @"getcomp@P[PI"(<4 x double>* %return1021, i64 %idx1022)
  store <2 x double> %pos1, <2 x double>* %248
  %w1025 = load double, double* %w
  store double %w1025, double* %249
  store <4 x double> %return1019, <4 x double>* %250
  store <4 x double> %return1023, <4 x double>* %251
  call void @"V_MOBIUS@UUFPP"(<2 x double>* %p, <2 x double>* %248, double* %249, <4 x double>* %250, <4 x double>* %251)
  %p1028 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1014:                                        ; preds = %false1001
  %return1030 = call i64 @"eq@III"(i64 %T2, i64 97)
  %382 = icmp ne i64 %return1030, 0
  br i1 %382, label %true1031, label %false1032

true1031:                                         ; preds = %false1014
  %return1034 = call i64 @"neg@II"(i64 53)
  %return1035 = call <2 x double>* @"detail@[UIS"(i64 %return1034, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @99, i64 0, i64 0))
  %idx1036 = load i64, i64* %idx
  %return1037 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return1035, i64 %idx1036)
  %return1039 = call <2 x double>* @"detail@[UIS"(i64 %return1034, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @100, i64 0, i64 0))
  %idx1040 = load i64, i64* %idx
  %return1041 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return1039, i64 %idx1040)
  store <2 x double> %pos1, <2 x double>* %252
  %w1043 = load double, double* %w
  store double %w1043, double* %253
  store <2 x double> %return1037, <2 x double>* %254
  store <2 x double> %return1041, <2 x double>* %255
  call void @"V_CURVE@UUFUU"(<2 x double>* %p, <2 x double>* %252, double* %253, <2 x double>* %254, <2 x double>* %255)
  %p1046 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1032:                                        ; preds = %false1014
  %return1048 = call i64 @"eq@III"(i64 %T2, i64 98)
  %383 = icmp ne i64 %return1048, 0
  br i1 %383, label %true1049, label %false1050

true1049:                                         ; preds = %false1032
  %return1052 = call i64 @"neg@II"(i64 54)
  %return1053 = call <2 x double>* @"detail@[UIS"(i64 %return1052, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @101, i64 0, i64 0))
  %idx1054 = load i64, i64* %idx
  %return1055 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return1053, i64 %idx1054)
  store <2 x double> %pos1, <2 x double>* %256
  %w1057 = load double, double* %w
  store double %w1057, double* %257
  store <2 x double> %return1055, <2 x double>* %258
  call void @"V_PERSPECTIVE@UUFU"(<2 x double>* %p, <2 x double>* %256, double* %257, <2 x double>* %258)
  %p1059 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1050:                                        ; preds = %false1032
  %return1061 = call i64 @"eq@III"(i64 %T2, i64 99)
  %384 = icmp ne i64 %return1061, 0
  br i1 %384, label %true1062, label %false1063

true1062:                                         ; preds = %false1050
  %return1065 = call i64 @"neg@II"(i64 55)
  %return1066 = call <3 x double>* @"detail@[VIS"(i64 %return1065, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @102, i64 0, i64 0))
  %idx1067 = load i64, i64* %idx
  %return1068 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %return1066, i64 %idx1067)
  %return1070 = call <2 x double>* @"detail@[UIS"(i64 %return1065, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @103, i64 0, i64 0))
  %idx1071 = load i64, i64* %idx
  %return1072 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return1070, i64 %idx1071)
  store <2 x double> %pos1, <2 x double>* %259
  %w1074 = load double, double* %w
  store double %w1074, double* %260
  store <3 x double> %return1068, <3 x double>* %261
  store <2 x double> %return1072, <2 x double>* %262
  call void @"V_BWRAPS@UUFVU"(<2 x double>* %p, <2 x double>* %259, double* %260, <3 x double>* %261, <2 x double>* %262)
  %p1077 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1063:                                        ; preds = %false1050
  %return1079 = call i64 @"eq@III"(i64 %T2, i64 100)
  %385 = icmp ne i64 %return1079, 0
  br i1 %385, label %true1080, label %false1081

true1080:                                         ; preds = %false1063
  store <2 x double> %pos1, <2 x double>* %263
  %w1084 = load double, double* %w
  store double %w1084, double* %264
  call void @"V_HEMISPHERE@UUF"(<2 x double>* %p, <2 x double>* %263, double* %264)
  %p1085 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1081:                                        ; preds = %false1063
  %return1087 = call i64 @"eq@III"(i64 %T2, i64 101)
  %386 = icmp ne i64 %return1087, 0
  br i1 %386, label %true1088, label %false1089

true1088:                                         ; preds = %false1081
  %return1091 = call i64 @"neg@II"(i64 56)
  %return1092 = call <2 x double>* @"detail@[UIS"(i64 %return1091, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @104, i64 0, i64 0))
  %idx1093 = load i64, i64* %idx
  %return1094 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return1092, i64 %idx1093)
  %return1096 = call <2 x double>* @"detail@[UIS"(i64 %return1091, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @105, i64 0, i64 0))
  %idx1097 = load i64, i64* %idx
  %return1098 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return1096, i64 %idx1097)
  %return1100 = call <2 x double>* @"detail@[UIS"(i64 %return1091, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @106, i64 0, i64 0))
  %idx1101 = load i64, i64* %idx
  %return1102 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return1100, i64 %idx1101)
  store <2 x double> %pos1, <2 x double>* %265
  %w1104 = load double, double* %w
  store double %w1104, double* %266
  store <2 x double> %return1094, <2 x double>* %267
  store <2 x double> %return1098, <2 x double>* %268
  store <2 x double> %return1102, <2 x double>* %269
  call void @"V_POLYNOMIAL@UUFUUU"(<2 x double>* %p, <2 x double>* %265, double* %266, <2 x double>* %267, <2 x double>* %268, <2 x double>* %269)
  %p1108 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1089:                                        ; preds = %false1081
  %return1110 = call i64 @"eq@III"(i64 %T2, i64 102)
  %387 = icmp ne i64 %return1110, 0
  br i1 %387, label %true1111, label %false1112

true1111:                                         ; preds = %false1089
  %return1114 = call i64 @"neg@II"(i64 57)
  %return1115 = call <4 x double>* @"detail@[PIS"(i64 %return1114, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @107, i64 0, i64 0))
  %idx1116 = load i64, i64* %idx
  %return1117 = call <4 x double> @"getcomp@P[PI"(<4 x double>* %return1115, i64 %idx1116)
  %return1119 = call <2 x double>* @"detail@[UIS"(i64 %return1114, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @108, i64 0, i64 0))
  %idx1120 = load i64, i64* %idx
  %return1121 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %return1119, i64 %idx1120)
  store <2 x double> %pos1, <2 x double>* %270
  %w1123 = load double, double* %w
  store double %w1123, double* %271
  store <4 x double> %return1117, <4 x double>* %272
  store <2 x double> %return1121, <2 x double>* %273
  call void @"V_CROP@UUFPU"(<2 x double>* %p, <2 x double>* %270, double* %271, <4 x double>* %272, <2 x double>* %273)
  %p1126 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1112:                                        ; preds = %false1089
  %return1128 = call i64 @"eq@III"(i64 %T2, i64 103)
  %388 = icmp ne i64 %return1128, 0
  br i1 %388, label %true1129, label %false1130

true1129:                                         ; preds = %false1112
  store <2 x double> %pos1, <2 x double>* %274
  %w1133 = load double, double* %w
  store double %w1133, double* %275
  call void @"V_UNPOLAR@UUF"(<2 x double>* %p, <2 x double>* %274, double* %275)
  %p1134 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1130:                                        ; preds = %false1112
  %return1136 = call i64 @"eq@III"(i64 %T2, i64 104)
  %389 = icmp ne i64 %return1136, 0
  br i1 %389, label %true1137, label %false1138

true1137:                                         ; preds = %false1130
  store <2 x double> %pos1, <2 x double>* %276
  %w1141 = load double, double* %w
  store double %w1141, double* %277
  call void @"V_GLYNNIA@UUF"(<2 x double>* %p, <2 x double>* %276, double* %277)
  %p1142 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1138:                                        ; preds = %false1130
  %return1144 = call i64 @"eq@III"(i64 %T2, i64 105)
  %390 = icmp ne i64 %return1144, 0
  br i1 %390, label %true1145, label %end9

true1145:                                         ; preds = %false1138
  %return1147 = call i64 @"neg@II"(i64 58)
  %return1148 = call <3 x double>* @"detail@[VIS"(i64 %return1147, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @109, i64 0, i64 0))
  %idx1149 = load i64, i64* %idx
  %return1150 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %return1148, i64 %idx1149)
  store <2 x double> %pos1, <2 x double>* %278
  %w1152 = load double, double* %w
  store double %w1152, double* %279
  store <3 x double> %return1150, <3 x double>* %280
  call void @"V_POINT_SYMMETRY@UUFV"(<2 x double>* %p, <2 x double>* %278, double* %279, <3 x double>* %280)
  %p1154 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %true1145, %true1137, %true1129, %true1111, %true1088, %true1080, %true1062, %true1049, %true1031, %true1013, %true1000, %true987, %true978, %true969, %true960, %true951, %true942, %true933, %true925, %true917, %true908, %true899, %true890, %true881, %true873, %true865, %true847, %true834, %true821, %true808, %true795, %true782, %true769, %true751, %true743, %true730, %true708, %true700, %true687, %true674, %true666, %true648, %true640, %true627, %true619, %true611, %true598, %true585, %true577, %true569, %true556, %true543, %true535, %true523, %true510, %true497, %true479, %true461, %true453, %true445, %true437, %true429, %true421, %true414, %true406, %true399, %true387, %true374, %true361, %true348, %true326, %true319, %true306, %true293, %true280, %true267, %true254, %true241, %true234, %true226, %true218, %true210, %true198, %true188, %true180, %true172, %true164, %true153, %true145, %true129, %true121, %true113, %true105, %true97, %true89, %true81, %true73, %true65, %true57, %true49, %true41, %true33, %true25, %true17, %end9, %true
  %UnifiedRetVal = phi <2 x double> [ %output, %true ], [ %pos1, %end9 ], [ %p22, %true17 ], [ %p30, %true25 ], [ %p38, %true33 ], [ %p46, %true41 ], [ %p54, %true49 ], [ %p62, %true57 ], [ %p70, %true65 ], [ %p78, %true73 ], [ %p86, %true81 ], [ %p94, %true89 ], [ %p102, %true97 ], [ %p110, %true105 ], [ %p118, %true113 ], [ %p126, %true121 ], [ %p142, %true129 ], [ %p150, %true145 ], [ %p161, %true153 ], [ %p169, %true164 ], [ %p177, %true172 ], [ %p185, %true180 ], [ %p195, %true188 ], [ %p207, %true198 ], [ %p215, %true210 ], [ %p223, %true218 ], [ %p231, %true226 ], [ %p238, %true234 ], [ %p251, %true241 ], [ %p264, %true254 ], [ %p277, %true267 ], [ %p290, %true280 ], [ %p303, %true293 ], [ %p316, %true306 ], [ %p323, %true319 ], [ %p335, %true326 ], [ %p358, %true348 ], [ %p371, %true361 ], [ %p384, %true374 ], [ %p396, %true387 ], [ %p403, %true399 ], [ %p411, %true406 ], [ %p418, %true414 ], [ %p426, %true421 ], [ %p434, %true429 ], [ %p442, %true437 ], [ %p450, %true445 ], [ %p458, %true453 ], [ %p476, %true461 ], [ %p494, %true479 ], [ %p507, %true497 ], [ %p520, %true510 ], [ %p532, %true523 ], [ %p540, %true535 ], [ %p553, %true543 ], [ %p566, %true556 ], [ %p574, %true569 ], [ %p582, %true577 ], [ %p595, %true585 ], [ %p608, %true598 ], [ %p616, %true611 ], [ %p624, %true619 ], [ %p637, %true627 ], [ %p645, %true640 ], [ %p663, %true648 ], [ %p671, %true666 ], [ %p684, %true674 ], [ %p697, %true687 ], [ %p705, %true700 ], [ %p722, %true708 ], [ %p740, %true730 ], [ %p748, %true743 ], [ %p766, %true751 ], [ %p779, %true769 ], [ %p792, %true782 ], [ %p805, %true795 ], [ %p818, %true808 ], [ %p831, %true821 ], [ %p844, %true834 ], [ %p862, %true847 ], [ %p870, %true865 ], [ %p878, %true873 ], [ %p887, %true881 ], [ %p896, %true890 ], [ %p905, %true899 ], [ %p914, %true908 ], [ %p922, %true917 ], [ %p930, %true925 ], [ %p939, %true933 ], [ %p948, %true942 ], [ %p957, %true951 ], [ %p966, %true960 ], [ %p975, %true969 ], [ %p984, %true978 ], [ %p997, %true987 ], [ %p1010, %true1000 ], [ %p1028, %true1013 ], [ %p1046, %true1031 ], [ %p1059, %true1049 ], [ %p1077, %true1062 ], [ %p1085, %true1080 ], [ %p1108, %true1088 ], [ %p1126, %true1111 ], [ %p1134, %true1129 ], [ %p1142, %true1137 ], [ %p1154, %true1145 ]
  ret <2 x double> %UnifiedRetVal
}

; Function Attrs: nounwind readnone
declare <2 x double> @"mul@UU"(<2 x double>, <2 x double>) #0

; Function Attrs: nounwind
declare <4 x double>* @"detail@[PIS"(i64, i8*) #2

; Function Attrs: nounwind readnone
declare <4 x double> @"getcomp@P[PI"(<4 x double>*, i64) #0

; Function Attrs: nounwind
declare <3 x double>* @"detail@[VIS"(i64, i8*) #2

; Function Attrs: nounwind readnone
declare <3 x double> @"getcomp@V[VI"(<3 x double>*, i64) #0

; Function Attrs: alwaysinline nounwind
define private <2 x double> @"FLAMEFF@USIIUUUUF"(i8** %prx, i64* %T, i64* %f3c, <2 x double>* %pos, <2 x double>* %x, <2 x double>* %y, <2 x double>* %o, double* %w) #1 {
__llvm_entry:
  %0 = alloca <2 x double>
  %1 = alloca double
  %2 = alloca <2 x double>
  %3 = alloca double
  %4 = alloca <2 x double>
  %5 = alloca double
  %6 = alloca <2 x double>
  %7 = alloca double
  %8 = alloca <2 x double>
  %9 = alloca double
  %10 = alloca <2 x double>
  %11 = alloca double
  %12 = alloca <2 x double>
  %13 = alloca double
  %14 = alloca <2 x double>
  %15 = alloca double
  %16 = alloca <2 x double>
  %17 = alloca double
  %18 = alloca <2 x double>
  %19 = alloca double
  %20 = alloca <2 x double>
  %21 = alloca double
  %22 = alloca <2 x double>
  %23 = alloca double
  %24 = alloca <2 x double>
  %25 = alloca double
  %26 = alloca <2 x double>
  %27 = alloca double
  %28 = alloca <2 x double>
  %29 = alloca double
  %30 = alloca double
  %31 = alloca double
  %32 = alloca double
  %33 = alloca double
  %34 = alloca <2 x double>
  %35 = alloca double
  %36 = alloca <2 x double>
  %37 = alloca double
  %38 = alloca double
  %39 = alloca double
  %40 = alloca <2 x double>
  %41 = alloca double
  %42 = alloca <2 x double>
  %43 = alloca double
  %44 = alloca <2 x double>
  %45 = alloca double
  %46 = alloca <2 x double>
  %47 = alloca double
  %48 = alloca double
  %49 = alloca <2 x double>
  %50 = alloca double
  %51 = alloca double
  %52 = alloca double
  %53 = alloca <2 x double>
  %54 = alloca double
  %55 = alloca <2 x double>
  %56 = alloca double
  %57 = alloca <2 x double>
  %58 = alloca double
  %59 = alloca double
  %60 = alloca <2 x double>
  %61 = alloca double
  %62 = alloca <2 x double>
  %63 = alloca <2 x double>
  %64 = alloca double
  %65 = alloca <4 x double>
  %66 = alloca <2 x double>
  %67 = alloca double
  %68 = alloca <4 x double>
  %69 = alloca <2 x double>
  %70 = alloca double
  %71 = alloca <3 x double>
  %72 = alloca <2 x double>
  %73 = alloca double
  %74 = alloca <2 x double>
  %75 = alloca <2 x double>
  %76 = alloca double
  %77 = alloca <2 x double>
  %78 = alloca double
  %79 = alloca <2 x double>
  %80 = alloca double
  %81 = alloca <2 x double>
  %82 = alloca <2 x double>
  %83 = alloca double
  %84 = alloca double
  %85 = alloca <2 x double>
  %86 = alloca double
  %87 = alloca <2 x double>
  %88 = alloca <2 x double>
  %89 = alloca double
  %90 = alloca double
  %91 = alloca double
  %92 = alloca <3 x double>
  %93 = alloca <2 x double>
  %94 = alloca double
  %95 = alloca <2 x double>
  %96 = alloca double
  %97 = alloca <2 x double>
  %98 = alloca double
  %99 = alloca <2 x double>
  %100 = alloca double
  %101 = alloca <2 x double>
  %102 = alloca double
  %103 = alloca <2 x double>
  %104 = alloca double
  %105 = alloca <2 x double>
  %106 = alloca double
  %107 = alloca <2 x double>
  %108 = alloca double
  %109 = alloca <2 x double>
  %110 = alloca double
  %111 = alloca <2 x double>
  %112 = alloca <2 x double>
  %113 = alloca double
  %114 = alloca <3 x double>
  %115 = alloca <3 x double>
  %116 = alloca <2 x double>
  %117 = alloca double
  %118 = alloca <2 x double>
  %119 = alloca <2 x double>
  %120 = alloca double
  %121 = alloca <2 x double>
  %122 = alloca <2 x double>
  %123 = alloca double
  %124 = alloca <2 x double>
  %125 = alloca <2 x double>
  %126 = alloca double
  %127 = alloca <2 x double>
  %128 = alloca <2 x double>
  %129 = alloca double
  %130 = alloca double
  %131 = alloca <2 x double>
  %132 = alloca double
  %133 = alloca <2 x double>
  %134 = alloca double
  %135 = alloca <2 x double>
  %136 = alloca double
  %137 = alloca double
  %138 = alloca <2 x double>
  %139 = alloca double
  %140 = alloca <3 x double>
  %141 = alloca <2 x double>
  %142 = alloca double
  %143 = alloca <2 x double>
  %144 = alloca double
  %145 = alloca <2 x double>
  %146 = alloca double
  %147 = alloca <2 x double>
  %148 = alloca double
  %149 = alloca double
  %150 = alloca <2 x double>
  %151 = alloca double
  %152 = alloca <2 x double>
  %153 = alloca double
  %154 = alloca <3 x double>
  %155 = alloca <2 x double>
  %156 = alloca <2 x double>
  %157 = alloca double
  %158 = alloca <2 x double>
  %159 = alloca double
  %160 = alloca <2 x double>
  %161 = alloca <2 x double>
  %162 = alloca double
  %163 = alloca <4 x double>
  %164 = alloca <2 x double>
  %165 = alloca double
  %166 = alloca <2 x double>
  %167 = alloca double
  %168 = alloca double
  %169 = alloca <2 x double>
  %170 = alloca <2 x double>
  %171 = alloca double
  %172 = alloca <2 x double>
  %173 = alloca double
  %174 = alloca <2 x double>
  %175 = alloca <2 x double>
  %176 = alloca <2 x double>
  %177 = alloca double
  %178 = alloca <2 x double>
  %179 = alloca <2 x double>
  %180 = alloca double
  %181 = alloca <2 x double>
  %182 = alloca <2 x double>
  %183 = alloca double
  %184 = alloca <2 x double>
  %185 = alloca <2 x double>
  %186 = alloca double
  %187 = alloca <4 x double>
  %188 = alloca <2 x double>
  %189 = alloca double
  %190 = alloca <4 x double>
  %191 = alloca <2 x double>
  %192 = alloca double
  %193 = alloca <4 x double>
  %194 = alloca <2 x double>
  %195 = alloca double
  %196 = alloca <2 x double>
  %197 = alloca <2 x double>
  %198 = alloca double
  %199 = alloca <2 x double>
  %200 = alloca <2 x double>
  %201 = alloca <2 x double>
  %202 = alloca double
  %203 = alloca <2 x double>
  %204 = alloca double
  %205 = alloca i64
  %206 = alloca <2 x double>
  %207 = alloca double
  %208 = alloca i64
  %209 = alloca <2 x double>
  %210 = alloca double
  %211 = alloca i64
  %212 = alloca <2 x double>
  %213 = alloca double
  %214 = alloca i64
  %215 = alloca <2 x double>
  %216 = alloca double
  %217 = alloca i64
  %218 = alloca <2 x double>
  %219 = alloca double
  %220 = alloca i64
  %221 = alloca <2 x double>
  %222 = alloca double
  %223 = alloca i64
  %224 = alloca <2 x double>
  %225 = alloca double
  %226 = alloca i64
  %227 = alloca <2 x double>
  %228 = alloca double
  %229 = alloca i64
  %230 = alloca <2 x double>
  %231 = alloca double
  %232 = alloca i64
  %233 = alloca <2 x double>
  %234 = alloca double
  %235 = alloca i64
  %236 = alloca <2 x double>
  %237 = alloca double
  %238 = alloca i64
  %239 = alloca <2 x double>
  %240 = alloca double
  %241 = alloca <2 x double>
  %242 = alloca double
  %243 = alloca <4 x double>
  %244 = alloca <2 x double>
  %245 = alloca double
  %246 = alloca double
  %247 = alloca <2 x double>
  %248 = alloca double
  %249 = alloca <4 x double>
  %250 = alloca <4 x double>
  %251 = alloca <2 x double>
  %252 = alloca double
  %253 = alloca <2 x double>
  %254 = alloca <2 x double>
  %255 = alloca <2 x double>
  %256 = alloca double
  %257 = alloca <2 x double>
  %258 = alloca <2 x double>
  %259 = alloca double
  %260 = alloca <3 x double>
  %261 = alloca <2 x double>
  %262 = alloca <2 x double>
  %263 = alloca double
  %264 = alloca <2 x double>
  %265 = alloca double
  %266 = alloca <2 x double>
  %267 = alloca <2 x double>
  %268 = alloca <2 x double>
  %269 = alloca <2 x double>
  %270 = alloca double
  %271 = alloca <4 x double>
  %272 = alloca <2 x double>
  %273 = alloca <2 x double>
  %274 = alloca double
  %275 = alloca <2 x double>
  %276 = alloca double
  %277 = alloca <2 x double>
  %278 = alloca double
  %279 = alloca <3 x double>
  %p = alloca <2 x double>
  store <2 x double> zeroinitializer, <2 x double>* %p, !vex-initializer-store !3
  %pos1 = load <2 x double>, <2 x double>* %pos
  %T2 = load i64, i64* %T
  %return = call i64 @"not@II"(i64 %T2)
  %280 = icmp ne i64 %return, 0
  br i1 %280, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %w4 = load double, double* %w
  %cast = call <2 x double> @"set@UF"(double %w4)
  %output = call <2 x double> @"mul@UU"(<2 x double> %pos1, <2 x double> %cast)
  br label %UnifiedReturnBlock

false:                                            ; preds = %__llvm_entry
  %return6 = call i64 @"lt@III"(i64 %T2, i64 35)
  %281 = icmp ne i64 %return6, 0
  br i1 %281, label %true7, label %false8

true7:                                            ; preds = %false
  %return11 = call i64 @"lt@III"(i64 %T2, i64 18)
  %282 = icmp ne i64 %return11, 0
  br i1 %282, label %true12, label %false13

false8:                                           ; preds = %false
  %return330 = call i64 @"lt@III"(i64 %T2, i64 70)
  %283 = icmp ne i64 %return330, 0
  br i1 %283, label %true331, label %false332

end9:                                             ; preds = %false1081, %false874, %false670, %false491, %false314, %false146
  br label %UnifiedReturnBlock

true12:                                           ; preds = %true7
  %return16 = call i64 @"eq@III"(i64 %T2, i64 1)
  %284 = icmp ne i64 %return16, 0
  br i1 %284, label %true17, label %false18

false13:                                          ; preds = %true7
  %return163 = call i64 @"eq@III"(i64 %T2, i64 18)
  %285 = icmp ne i64 %return163, 0
  br i1 %285, label %true164, label %false165

true17:                                           ; preds = %true12
  store <2 x double> %pos1, <2 x double>* %0
  %w21 = load double, double* %w
  store double %w21, double* %1
  call void @"V_SINUSOIDAL@UUF"(<2 x double>* %p, <2 x double>* %0, double* %1)
  %p22 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false18:                                          ; preds = %true12
  %return24 = call i64 @"eq@III"(i64 %T2, i64 2)
  %286 = icmp ne i64 %return24, 0
  br i1 %286, label %true25, label %false26

true25:                                           ; preds = %false18
  store <2 x double> %pos1, <2 x double>* %2
  %w29 = load double, double* %w
  store double %w29, double* %3
  call void @"V_SPHERICAL@UUF"(<2 x double>* %p, <2 x double>* %2, double* %3)
  %p30 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false26:                                          ; preds = %false18
  %return32 = call i64 @"eq@III"(i64 %T2, i64 3)
  %287 = icmp ne i64 %return32, 0
  br i1 %287, label %true33, label %false34

true33:                                           ; preds = %false26
  store <2 x double> %pos1, <2 x double>* %4
  %w37 = load double, double* %w
  store double %w37, double* %5
  call void @"V_SWIRL@UUF"(<2 x double>* %p, <2 x double>* %4, double* %5)
  %p38 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false34:                                          ; preds = %false26
  %return40 = call i64 @"eq@III"(i64 %T2, i64 4)
  %288 = icmp ne i64 %return40, 0
  br i1 %288, label %true41, label %false42

true41:                                           ; preds = %false34
  store <2 x double> %pos1, <2 x double>* %6
  %w45 = load double, double* %w
  store double %w45, double* %7
  call void @"V_HORSESHOE@UUF"(<2 x double>* %p, <2 x double>* %6, double* %7)
  %p46 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false42:                                          ; preds = %false34
  %return48 = call i64 @"eq@III"(i64 %T2, i64 5)
  %289 = icmp ne i64 %return48, 0
  br i1 %289, label %true49, label %false50

true49:                                           ; preds = %false42
  store <2 x double> %pos1, <2 x double>* %8
  %w53 = load double, double* %w
  store double %w53, double* %9
  call void @"V_POLAR@UUF"(<2 x double>* %p, <2 x double>* %8, double* %9)
  %p54 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false50:                                          ; preds = %false42
  %return56 = call i64 @"eq@III"(i64 %T2, i64 6)
  %290 = icmp ne i64 %return56, 0
  br i1 %290, label %true57, label %false58

true57:                                           ; preds = %false50
  store <2 x double> %pos1, <2 x double>* %10
  %w61 = load double, double* %w
  store double %w61, double* %11
  call void @"V_HANDKERCHIEF@UUF"(<2 x double>* %p, <2 x double>* %10, double* %11)
  %p62 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false58:                                          ; preds = %false50
  %return64 = call i64 @"eq@III"(i64 %T2, i64 7)
  %291 = icmp ne i64 %return64, 0
  br i1 %291, label %true65, label %false66

true65:                                           ; preds = %false58
  store <2 x double> %pos1, <2 x double>* %12
  %w69 = load double, double* %w
  store double %w69, double* %13
  call void @"V_HEART@UUF"(<2 x double>* %p, <2 x double>* %12, double* %13)
  %p70 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false66:                                          ; preds = %false58
  %return72 = call i64 @"eq@III"(i64 %T2, i64 8)
  %292 = icmp ne i64 %return72, 0
  br i1 %292, label %true73, label %false74

true73:                                           ; preds = %false66
  store <2 x double> %pos1, <2 x double>* %14
  %w77 = load double, double* %w
  store double %w77, double* %15
  call void @"V_DISC@UUF"(<2 x double>* %p, <2 x double>* %14, double* %15)
  %p78 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false74:                                          ; preds = %false66
  %return80 = call i64 @"eq@III"(i64 %T2, i64 9)
  %293 = icmp ne i64 %return80, 0
  br i1 %293, label %true81, label %false82

true81:                                           ; preds = %false74
  store <2 x double> %pos1, <2 x double>* %16
  %w85 = load double, double* %w
  store double %w85, double* %17
  call void @"V_SPIRAL@UUF"(<2 x double>* %p, <2 x double>* %16, double* %17)
  %p86 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false82:                                          ; preds = %false74
  %return88 = call i64 @"eq@III"(i64 %T2, i64 10)
  %294 = icmp ne i64 %return88, 0
  br i1 %294, label %true89, label %false90

true89:                                           ; preds = %false82
  store <2 x double> %pos1, <2 x double>* %18
  %w93 = load double, double* %w
  store double %w93, double* %19
  call void @"V_HIPERBOLIC@UUF"(<2 x double>* %p, <2 x double>* %18, double* %19)
  %p94 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false90:                                          ; preds = %false82
  %return96 = call i64 @"eq@III"(i64 %T2, i64 11)
  %295 = icmp ne i64 %return96, 0
  br i1 %295, label %true97, label %false98

true97:                                           ; preds = %false90
  store <2 x double> %pos1, <2 x double>* %20
  %w101 = load double, double* %w
  store double %w101, double* %21
  call void @"V_DIAMOND@UUF"(<2 x double>* %p, <2 x double>* %20, double* %21)
  %p102 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false98:                                          ; preds = %false90
  %return104 = call i64 @"eq@III"(i64 %T2, i64 12)
  %296 = icmp ne i64 %return104, 0
  br i1 %296, label %true105, label %false106

true105:                                          ; preds = %false98
  store <2 x double> %pos1, <2 x double>* %22
  %w109 = load double, double* %w
  store double %w109, double* %23
  call void @"V_EX@UUF"(<2 x double>* %p, <2 x double>* %22, double* %23)
  %p110 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false106:                                         ; preds = %false98
  %return112 = call i64 @"eq@III"(i64 %T2, i64 13)
  %297 = icmp ne i64 %return112, 0
  br i1 %297, label %true113, label %false114

true113:                                          ; preds = %false106
  store <2 x double> %pos1, <2 x double>* %24
  %w117 = load double, double* %w
  store double %w117, double* %25
  call void @"V_JULIA@UUF"(<2 x double>* %p, <2 x double>* %24, double* %25)
  %p118 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false114:                                         ; preds = %false106
  %return120 = call i64 @"eq@III"(i64 %T2, i64 14)
  %298 = icmp ne i64 %return120, 0
  br i1 %298, label %true121, label %false122

true121:                                          ; preds = %false114
  store <2 x double> %pos1, <2 x double>* %26
  %w125 = load double, double* %w
  store double %w125, double* %27
  call void @"V_BENT@UUF"(<2 x double>* %p, <2 x double>* %26, double* %27)
  %p126 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false122:                                         ; preds = %false114
  %return128 = call i64 @"eq@III"(i64 %T2, i64 15)
  %299 = icmp ne i64 %return128, 0
  br i1 %299, label %true129, label %false130

true129:                                          ; preds = %false122
  store <2 x double> %pos1, <2 x double>* %28
  %w133 = load double, double* %w
  store double %w133, double* %29
  %y134 = load <2 x double>, <2 x double>* %y
  %return135 = call double @"getcomp@FUI"(<2 x double> %y134, i64 0)
  store double %return135, double* %30
  %o136 = load <2 x double>, <2 x double>* %o
  %return137 = call double @"getcomp@FUI"(<2 x double> %o136, i64 0)
  store double %return137, double* %31
  %y138 = load <2 x double>, <2 x double>* %y
  %return139 = call double @"getcomp@FUI"(<2 x double> %y138, i64 1)
  store double %return139, double* %32
  %o140 = load <2 x double>, <2 x double>* %o
  %return141 = call double @"getcomp@FUI"(<2 x double> %o140, i64 1)
  store double %return141, double* %33
  call void @"V_WAVES@UUFFFFF"(<2 x double>* %p, <2 x double>* %28, double* %29, double* %30, double* %31, double* %32, double* %33)
  %p142 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false130:                                         ; preds = %false122
  %return144 = call i64 @"eq@III"(i64 %T2, i64 16)
  %300 = icmp ne i64 %return144, 0
  br i1 %300, label %true145, label %false146

true145:                                          ; preds = %false130
  store <2 x double> %pos1, <2 x double>* %34
  %w149 = load double, double* %w
  store double %w149, double* %35
  call void @"V_FISHEYE@UUF"(<2 x double>* %p, <2 x double>* %34, double* %35)
  %p150 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false146:                                         ; preds = %false130
  %return152 = call i64 @"eq@III"(i64 %T2, i64 17)
  %301 = icmp ne i64 %return152, 0
  br i1 %301, label %true153, label %end9

true153:                                          ; preds = %false146
  store <2 x double> %pos1, <2 x double>* %36
  %w156 = load double, double* %w
  store double %w156, double* %37
  %o157 = load <2 x double>, <2 x double>* %o
  %return158 = call double @"getcomp@FUI"(<2 x double> %o157, i64 0)
  store double %return158, double* %38
  %o159 = load <2 x double>, <2 x double>* %o
  %return160 = call double @"getcomp@FUI"(<2 x double> %o159, i64 1)
  store double %return160, double* %39
  call void @"V_POPCORN@UUFFF"(<2 x double>* %p, <2 x double>* %36, double* %37, double* %38, double* %39)
  %p161 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true164:                                          ; preds = %false13
  store <2 x double> %pos1, <2 x double>* %40
  %w168 = load double, double* %w
  store double %w168, double* %41
  call void @"V_EXPONENTIAL@UUF"(<2 x double>* %p, <2 x double>* %40, double* %41)
  %p169 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false165:                                         ; preds = %false13
  %return171 = call i64 @"eq@III"(i64 %T2, i64 19)
  %302 = icmp ne i64 %return171, 0
  br i1 %302, label %true172, label %false173

true172:                                          ; preds = %false165
  store <2 x double> %pos1, <2 x double>* %42
  %w176 = load double, double* %w
  store double %w176, double* %43
  call void @"V_POWER@UUF"(<2 x double>* %p, <2 x double>* %42, double* %43)
  %p177 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false173:                                         ; preds = %false165
  %return179 = call i64 @"eq@III"(i64 %T2, i64 20)
  %303 = icmp ne i64 %return179, 0
  br i1 %303, label %true180, label %false181

true180:                                          ; preds = %false173
  store <2 x double> %pos1, <2 x double>* %44
  %w184 = load double, double* %w
  store double %w184, double* %45
  call void @"V_COSINE@UUF"(<2 x double>* %p, <2 x double>* %44, double* %45)
  %p185 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false181:                                         ; preds = %false173
  %return187 = call i64 @"eq@III"(i64 %T2, i64 21)
  %304 = icmp ne i64 %return187, 0
  br i1 %304, label %true188, label %false189

true188:                                          ; preds = %false181
  store <2 x double> %pos1, <2 x double>* %46
  %w192 = load double, double* %w
  store double %w192, double* %47
  %o193 = load <2 x double>, <2 x double>* %o
  %return194 = call double @"getcomp@FUI"(<2 x double> %o193, i64 0)
  store double %return194, double* %48
  call void @"V_RINGS@UUFF"(<2 x double>* %p, <2 x double>* %46, double* %47, double* %48)
  %p195 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false189:                                         ; preds = %false181
  %return197 = call i64 @"eq@III"(i64 %T2, i64 22)
  %305 = icmp ne i64 %return197, 0
  br i1 %305, label %true198, label %false199

true198:                                          ; preds = %false189
  store <2 x double> %pos1, <2 x double>* %49
  %w202 = load double, double* %w
  store double %w202, double* %50
  %o203 = load <2 x double>, <2 x double>* %o
  %return204 = call double @"getcomp@FUI"(<2 x double> %o203, i64 0)
  store double %return204, double* %51
  %o205 = load <2 x double>, <2 x double>* %o
  %return206 = call double @"getcomp@FUI"(<2 x double> %o205, i64 1)
  store double %return206, double* %52
  call void @"V_FAN@UUFFF"(<2 x double>* %p, <2 x double>* %49, double* %50, double* %51, double* %52)
  %p207 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false199:                                         ; preds = %false189
  %return209 = call i64 @"eq@III"(i64 %T2, i64 23)
  %306 = icmp ne i64 %return209, 0
  br i1 %306, label %true210, label %false211

true210:                                          ; preds = %false199
  store <2 x double> %pos1, <2 x double>* %53
  %w214 = load double, double* %w
  store double %w214, double* %54
  call void @"V_BUBBLE@UUF"(<2 x double>* %p, <2 x double>* %53, double* %54)
  %p215 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false211:                                         ; preds = %false199
  %return217 = call i64 @"eq@III"(i64 %T2, i64 24)
  %307 = icmp ne i64 %return217, 0
  br i1 %307, label %true218, label %false219

true218:                                          ; preds = %false211
  store <2 x double> %pos1, <2 x double>* %55
  %w222 = load double, double* %w
  store double %w222, double* %56
  call void @"V_CYLINDER@UUF"(<2 x double>* %p, <2 x double>* %55, double* %56)
  %p223 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false219:                                         ; preds = %false211
  %return225 = call i64 @"eq@III"(i64 %T2, i64 25)
  %308 = icmp ne i64 %return225, 0
  br i1 %308, label %true226, label %false227

true226:                                          ; preds = %false219
  store <2 x double> %pos1, <2 x double>* %57
  %w230 = load double, double* %w
  store double %w230, double* %58
  call void @"V_EYEFISH@UUF"(<2 x double>* %p, <2 x double>* %57, double* %58)
  %p231 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false227:                                         ; preds = %false219
  %return233 = call i64 @"eq@III"(i64 %T2, i64 26)
  %309 = icmp ne i64 %return233, 0
  br i1 %309, label %true234, label %false235

true234:                                          ; preds = %false227
  %w237 = load double, double* %w
  store double %w237, double* %59
  call void @"V_BLUR@UF"(<2 x double>* %p, double* %59)
  %p238 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false235:                                         ; preds = %false227
  %return240 = call i64 @"eq@III"(i64 %T2, i64 27)
  %310 = icmp ne i64 %return240, 0
  br i1 %310, label %true241, label %false242

true241:                                          ; preds = %false235
  %prx244 = load i8*, i8** %prx
  %return245 = call i8* @"concat@SSS"(i8* %prx244, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @110, i64 0, i64 0))
  %return246 = call <2 x double> @"chu@US"(i8* %return245)
  store <2 x double> %pos1, <2 x double>* %60
  %w248 = load double, double* %w
  store double %w248, double* %61
  store <2 x double> %return246, <2 x double>* %62
  call void @"V_CURL@UUFU"(<2 x double>* %p, <2 x double>* %60, double* %61, <2 x double>* %62)
  %p250 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false242:                                         ; preds = %false235
  %return252 = call i64 @"eq@III"(i64 %T2, i64 28)
  %311 = icmp ne i64 %return252, 0
  br i1 %311, label %true253, label %false254

true253:                                          ; preds = %false242
  %prx256 = load i8*, i8** %prx
  %return257 = call i8* @"concat@SSS"(i8* %prx256, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @56, i64 0, i64 0))
  %return258 = call <4 x double> @"chp@PS"(i8* %return257)
  store <2 x double> %pos1, <2 x double>* %63
  %w260 = load double, double* %w
  store double %w260, double* %64
  store <4 x double> %return258, <4 x double>* %65
  call void @"V_NGON@UUFP"(<2 x double>* %p, <2 x double>* %63, double* %64, <4 x double>* %65)
  %p262 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false254:                                         ; preds = %false242
  %return264 = call i64 @"eq@III"(i64 %T2, i64 29)
  %312 = icmp ne i64 %return264, 0
  br i1 %312, label %true265, label %false266

true265:                                          ; preds = %false254
  %prx268 = load i8*, i8** %prx
  %return269 = call i8* @"concat@SSS"(i8* %prx268, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @111, i64 0, i64 0))
  %return270 = call <4 x double> @"chp@PS"(i8* %return269)
  store <2 x double> %pos1, <2 x double>* %66
  %w272 = load double, double* %w
  store double %w272, double* %67
  store <4 x double> %return270, <4 x double>* %68
  call void @"V_PDJ@UUFP"(<2 x double>* %p, <2 x double>* %66, double* %67, <4 x double>* %68)
  %p274 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false266:                                         ; preds = %false254
  %return276 = call i64 @"eq@III"(i64 %T2, i64 30)
  %313 = icmp ne i64 %return276, 0
  br i1 %313, label %true277, label %false278

true277:                                          ; preds = %false266
  %prx280 = load i8*, i8** %prx
  %return281 = call i8* @"concat@SSS"(i8* %prx280, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @58, i64 0, i64 0))
  %return282 = call <3 x double> @"chv@VS"(i8* %return281)
  store <2 x double> %pos1, <2 x double>* %69
  %w284 = load double, double* %w
  store double %w284, double* %70
  store <3 x double> %return282, <3 x double>* %71
  call void @"V_BLOB@UUFV"(<2 x double>* %p, <2 x double>* %69, double* %70, <3 x double>* %71)
  %p286 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false278:                                         ; preds = %false266
  %return288 = call i64 @"eq@III"(i64 %T2, i64 31)
  %314 = icmp ne i64 %return288, 0
  br i1 %314, label %true289, label %false290

true289:                                          ; preds = %false278
  %prx292 = load i8*, i8** %prx
  %return293 = call i8* @"concat@SSS"(i8* %prx292, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @59, i64 0, i64 0))
  %return294 = call <2 x double> @"chu@US"(i8* %return293)
  store <2 x double> %pos1, <2 x double>* %72
  %w296 = load double, double* %w
  store double %w296, double* %73
  store <2 x double> %return294, <2 x double>* %74
  call void @"V_JULIAN@UUFU"(<2 x double>* %p, <2 x double>* %72, double* %73, <2 x double>* %74)
  %p298 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false290:                                         ; preds = %false278
  %return300 = call i64 @"eq@III"(i64 %T2, i64 32)
  %315 = icmp ne i64 %return300, 0
  br i1 %315, label %true301, label %false302

true301:                                          ; preds = %false290
  %prx304 = load i8*, i8** %prx
  %return305 = call i8* @"concat@SSS"(i8* %prx304, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @60, i64 0, i64 0))
  %return306 = call <2 x double> @"chu@US"(i8* %return305)
  store <2 x double> %pos1, <2 x double>* %75
  %w308 = load double, double* %w
  store double %w308, double* %76
  store <2 x double> %return306, <2 x double>* %77
  call void @"V_JULIASCOPE@UUFU"(<2 x double>* %p, <2 x double>* %75, double* %76, <2 x double>* %77)
  %p310 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false302:                                         ; preds = %false290
  %return312 = call i64 @"eq@III"(i64 %T2, i64 33)
  %316 = icmp ne i64 %return312, 0
  br i1 %316, label %true313, label %false314

true313:                                          ; preds = %false302
  %w316 = load double, double* %w
  store double %w316, double* %78
  call void @"V_GAUSSIAN_BLUR@UF"(<2 x double>* %p, double* %78)
  %p317 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false314:                                         ; preds = %false302
  %return319 = call i64 @"eq@III"(i64 %T2, i64 34)
  %317 = icmp ne i64 %return319, 0
  br i1 %317, label %true320, label %end9

true320:                                          ; preds = %false314
  %prx322 = load i8*, i8** %prx
  %return323 = call i8* @"concat@SSS"(i8* %prx322, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @61, i64 0, i64 0))
  %return324 = call <2 x double> @"chu@US"(i8* %return323)
  store <2 x double> %pos1, <2 x double>* %79
  %w326 = load double, double* %w
  store double %w326, double* %80
  store <2 x double> %return324, <2 x double>* %81
  call void @"V_FAN2@UUFU"(<2 x double>* %p, <2 x double>* %79, double* %80, <2 x double>* %81)
  %p328 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true331:                                          ; preds = %false8
  %return335 = call i64 @"lt@III"(i64 %T2, i64 52)
  %318 = icmp ne i64 %return335, 0
  br i1 %318, label %true336, label %false337

false332:                                         ; preds = %false8
  %return691 = call i64 @"lt@III"(i64 %T2, i64 88)
  %319 = icmp ne i64 %return691, 0
  br i1 %319, label %true692, label %false693

true336:                                          ; preds = %true331
  %return340 = call i64 @"eq@III"(i64 %T2, i64 35)
  %320 = icmp ne i64 %return340, 0
  br i1 %320, label %true341, label %false342

false337:                                         ; preds = %true331
  %return512 = call i64 @"eq@III"(i64 %T2, i64 52)
  %321 = icmp ne i64 %return512, 0
  br i1 %321, label %true513, label %false514

true341:                                          ; preds = %true336
  %prx344 = load i8*, i8** %prx
  %return345 = call i8* @"concat@SSS"(i8* %prx344, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @112, i64 0, i64 0))
  %return346 = call double @"chf@FS"(i8* %return345)
  store <2 x double> %pos1, <2 x double>* %82
  %w348 = load double, double* %w
  store double %w348, double* %83
  store double %return346, double* %84
  call void @"V_RINGS2@UUFF"(<2 x double>* %p, <2 x double>* %82, double* %83, double* %84)
  %p350 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false342:                                         ; preds = %true336
  %return352 = call i64 @"eq@III"(i64 %T2, i64 36)
  %322 = icmp ne i64 %return352, 0
  br i1 %322, label %true353, label %false354

true353:                                          ; preds = %false342
  %prx356 = load i8*, i8** %prx
  %return357 = call i8* @"concat@SSS"(i8* %prx356, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @63, i64 0, i64 0))
  %return358 = call <2 x double> @"chu@US"(i8* %return357)
  store <2 x double> %pos1, <2 x double>* %85
  %w360 = load double, double* %w
  store double %w360, double* %86
  store <2 x double> %return358, <2 x double>* %87
  call void @"V_RECTANGLES@UUFU"(<2 x double>* %p, <2 x double>* %85, double* %86, <2 x double>* %87)
  %p362 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false354:                                         ; preds = %false342
  %return364 = call i64 @"eq@III"(i64 %T2, i64 37)
  %323 = icmp ne i64 %return364, 0
  br i1 %323, label %true365, label %false366

true365:                                          ; preds = %false354
  %prx368 = load i8*, i8** %prx
  %return369 = call i8* @"concat@SSS"(i8* %prx368, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @64, i64 0, i64 0))
  %return370 = call double @"chf@FS"(i8* %return369)
  store <2 x double> %pos1, <2 x double>* %88
  %w372 = load double, double* %w
  store double %w372, double* %89
  store double %return370, double* %90
  call void @"V_RADIALBLUR@UUFF"(<2 x double>* %p, <2 x double>* %88, double* %89, double* %90)
  %p374 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false366:                                         ; preds = %false354
  %return376 = call i64 @"eq@III"(i64 %T2, i64 38)
  %324 = icmp ne i64 %return376, 0
  br i1 %324, label %true377, label %false378

true377:                                          ; preds = %false366
  %prx380 = load i8*, i8** %prx
  %return381 = call i8* @"concat@SSS"(i8* %prx380, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @65, i64 0, i64 0))
  %return382 = call <3 x double> @"chv@VS"(i8* %return381)
  %w383 = load double, double* %w
  store double %w383, double* %91
  store <3 x double> %return382, <3 x double>* %92
  call void @"V_PIE@UFV"(<2 x double>* %p, double* %91, <3 x double>* %92)
  %p385 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false378:                                         ; preds = %false366
  %return387 = call i64 @"eq@III"(i64 %T2, i64 39)
  %325 = icmp ne i64 %return387, 0
  br i1 %325, label %true388, label %false389

true388:                                          ; preds = %false378
  %w391 = load double, double* %w
  store double %w391, double* %94
  call void @"V_ARCH@UUF"(<2 x double>* %p, <2 x double>* %93, double* %94)
  %p392 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false389:                                         ; preds = %false378
  %return394 = call i64 @"eq@III"(i64 %T2, i64 40)
  %326 = icmp ne i64 %return394, 0
  br i1 %326, label %true395, label %false396

true395:                                          ; preds = %false389
  store <2 x double> %pos1, <2 x double>* %95
  %w399 = load double, double* %w
  store double %w399, double* %96
  call void @"V_TANGENT@UUF"(<2 x double>* %p, <2 x double>* %95, double* %96)
  %p400 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false396:                                         ; preds = %false389
  %return402 = call i64 @"eq@III"(i64 %T2, i64 41)
  %327 = icmp ne i64 %return402, 0
  br i1 %327, label %true403, label %false404

true403:                                          ; preds = %false396
  %w406 = load double, double* %w
  store double %w406, double* %98
  call void @"V_SQUARE@UUF"(<2 x double>* %p, <2 x double>* %97, double* %98)
  %p407 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false404:                                         ; preds = %false396
  %return409 = call i64 @"eq@III"(i64 %T2, i64 42)
  %328 = icmp ne i64 %return409, 0
  br i1 %328, label %true410, label %false411

true410:                                          ; preds = %false404
  store <2 x double> %pos1, <2 x double>* %99
  %w414 = load double, double* %w
  store double %w414, double* %100
  call void @"V_RAYS@UUF"(<2 x double>* %p, <2 x double>* %99, double* %100)
  %p415 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false411:                                         ; preds = %false404
  %return417 = call i64 @"eq@III"(i64 %T2, i64 43)
  %329 = icmp ne i64 %return417, 0
  br i1 %329, label %true418, label %false419

true418:                                          ; preds = %false411
  store <2 x double> %pos1, <2 x double>* %101
  %w422 = load double, double* %w
  store double %w422, double* %102
  call void @"V_BLADE@UUF"(<2 x double>* %p, <2 x double>* %101, double* %102)
  %p423 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false419:                                         ; preds = %false411
  %return425 = call i64 @"eq@III"(i64 %T2, i64 44)
  %330 = icmp ne i64 %return425, 0
  br i1 %330, label %true426, label %false427

true426:                                          ; preds = %false419
  store <2 x double> %pos1, <2 x double>* %103
  %w430 = load double, double* %w
  store double %w430, double* %104
  call void @"V_SECANT2@UUF"(<2 x double>* %p, <2 x double>* %103, double* %104)
  %p431 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false427:                                         ; preds = %false419
  %return433 = call i64 @"eq@III"(i64 %T2, i64 45)
  %331 = icmp ne i64 %return433, 0
  br i1 %331, label %true434, label %false435

true434:                                          ; preds = %false427
  store <2 x double> %pos1, <2 x double>* %105
  %w438 = load double, double* %w
  store double %w438, double* %106
  call void @"V_TWINTRIAN@UUF"(<2 x double>* %p, <2 x double>* %105, double* %106)
  %p439 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false435:                                         ; preds = %false427
  %return441 = call i64 @"eq@III"(i64 %T2, i64 46)
  %332 = icmp ne i64 %return441, 0
  br i1 %332, label %true442, label %false443

true442:                                          ; preds = %false435
  store <2 x double> %pos1, <2 x double>* %107
  %w446 = load double, double* %w
  store double %w446, double* %108
  call void @"V_CROSS@UUF"(<2 x double>* %p, <2 x double>* %107, double* %108)
  %p447 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false443:                                         ; preds = %false435
  %return449 = call i64 @"eq@III"(i64 %T2, i64 47)
  %333 = icmp ne i64 %return449, 0
  br i1 %333, label %true450, label %false451

true450:                                          ; preds = %false443
  %prx453 = load i8*, i8** %prx
  %return454 = call i8* @"concat@SSS"(i8* %prx453, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @66, i64 0, i64 0))
  %return455 = call <2 x double> @"chu@US"(i8* %return454)
  store <2 x double> %pos1, <2 x double>* %109
  %w457 = load double, double* %w
  store double %w457, double* %110
  store <2 x double> %return455, <2 x double>* %111
  call void @"V_DISC2_FF@UUFU"(<2 x double>* %p, <2 x double>* %109, double* %110, <2 x double>* %111)
  %p459 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false451:                                         ; preds = %false443
  %return461 = call i64 @"eq@III"(i64 %T2, i64 48)
  %334 = icmp ne i64 %return461, 0
  br i1 %334, label %true462, label %false463

true462:                                          ; preds = %false451
  %prx465 = load i8*, i8** %prx
  %return466 = call i8* @"concat@SSS"(i8* %prx465, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @68, i64 0, i64 0))
  %return467 = call <3 x double> @"chv@VS"(i8* %return466)
  %return469 = call i8* @"concat@SSS"(i8* %prx465, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @113, i64 0, i64 0))
  %return470 = call <3 x double> @"chv@VS"(i8* %return469)
  store <2 x double> %pos1, <2 x double>* %112
  %w472 = load double, double* %w
  store double %w472, double* %113
  store <3 x double> %return467, <3 x double>* %114
  store <3 x double> %return470, <3 x double>* %115
  call void @"V_SUPERSHAPE@UUFVV"(<2 x double>* %p, <2 x double>* %112, double* %113, <3 x double>* %114, <3 x double>* %115)
  %p475 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false463:                                         ; preds = %false451
  %return477 = call i64 @"eq@III"(i64 %T2, i64 49)
  %335 = icmp ne i64 %return477, 0
  br i1 %335, label %true478, label %false479

true478:                                          ; preds = %false463
  %prx481 = load i8*, i8** %prx
  %return482 = call i8* @"concat@SSS"(i8* %prx481, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @70, i64 0, i64 0))
  %return483 = call <2 x double> @"chu@US"(i8* %return482)
  store <2 x double> %pos1, <2 x double>* %116
  %w485 = load double, double* %w
  store double %w485, double* %117
  store <2 x double> %return483, <2 x double>* %118
  call void @"V_FLOWER@UUFU"(<2 x double>* %p, <2 x double>* %116, double* %117, <2 x double>* %118)
  %p487 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false479:                                         ; preds = %false463
  %return489 = call i64 @"eq@III"(i64 %T2, i64 50)
  %336 = icmp ne i64 %return489, 0
  br i1 %336, label %true490, label %false491

true490:                                          ; preds = %false479
  %prx493 = load i8*, i8** %prx
  %return494 = call i8* @"concat@SSS"(i8* %prx493, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @71, i64 0, i64 0))
  %return495 = call <2 x double> @"chu@US"(i8* %return494)
  store <2 x double> %pos1, <2 x double>* %119
  %w497 = load double, double* %w
  store double %w497, double* %120
  store <2 x double> %return495, <2 x double>* %121
  call void @"V_CONIC@UUFU"(<2 x double>* %p, <2 x double>* %119, double* %120, <2 x double>* %121)
  %p499 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false491:                                         ; preds = %false479
  %return501 = call i64 @"eq@III"(i64 %T2, i64 51)
  %337 = icmp ne i64 %return501, 0
  br i1 %337, label %true502, label %end9

true502:                                          ; preds = %false491
  %prx504 = load i8*, i8** %prx
  %return505 = call i8* @"concat@SSS"(i8* %prx504, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @72, i64 0, i64 0))
  %return506 = call <2 x double> @"chu@US"(i8* %return505)
  store <2 x double> %pos1, <2 x double>* %122
  %w508 = load double, double* %w
  store double %w508, double* %123
  store <2 x double> %return506, <2 x double>* %124
  call void @"V_PARABOLA@UUFU"(<2 x double>* %p, <2 x double>* %122, double* %123, <2 x double>* %124)
  %p510 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true513:                                          ; preds = %false337
  %prx516 = load i8*, i8** %prx
  %return517 = call i8* @"concat@SSS"(i8* %prx516, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @114, i64 0, i64 0))
  %return518 = call <2 x double> @"chu@US"(i8* %return517)
  store <2 x double> %pos1, <2 x double>* %125
  %w520 = load double, double* %w
  store double %w520, double* %126
  store <2 x double> %return518, <2 x double>* %127
  call void @"V_BENT2@UUFU"(<2 x double>* %p, <2 x double>* %125, double* %126, <2 x double>* %127)
  %p522 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false514:                                         ; preds = %false337
  %return524 = call i64 @"eq@III"(i64 %T2, i64 53)
  %338 = icmp ne i64 %return524, 0
  br i1 %338, label %true525, label %false526

true525:                                          ; preds = %false514
  %prx528 = load i8*, i8** %prx
  %return529 = call i8* @"concat@SSS"(i8* %prx528, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @115, i64 0, i64 0))
  %return530 = call double @"chf@FS"(i8* %return529)
  store <2 x double> %pos1, <2 x double>* %128
  %w532 = load double, double* %w
  store double %w532, double* %129
  store double %return530, double* %130
  call void @"V_BIPOLAR@UUFF"(<2 x double>* %p, <2 x double>* %128, double* %129, double* %130)
  %p534 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false526:                                         ; preds = %false514
  %return536 = call i64 @"eq@III"(i64 %T2, i64 54)
  %339 = icmp ne i64 %return536, 0
  br i1 %339, label %true537, label %false538

true537:                                          ; preds = %false526
  store <2 x double> %pos1, <2 x double>* %131
  %w541 = load double, double* %w
  store double %w541, double* %132
  call void @"V_BOARDERS@UUF"(<2 x double>* %p, <2 x double>* %131, double* %132)
  %p542 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false538:                                         ; preds = %false526
  %return544 = call i64 @"eq@III"(i64 %T2, i64 55)
  %340 = icmp ne i64 %return544, 0
  br i1 %340, label %true545, label %false546

true545:                                          ; preds = %false538
  store <2 x double> %pos1, <2 x double>* %133
  %w549 = load double, double* %w
  store double %w549, double* %134
  call void @"V_BUTTERFLY@UUF"(<2 x double>* %p, <2 x double>* %133, double* %134)
  %p550 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false546:                                         ; preds = %false538
  %return552 = call i64 @"eq@III"(i64 %T2, i64 56)
  %341 = icmp ne i64 %return552, 0
  br i1 %341, label %true553, label %false554

true553:                                          ; preds = %false546
  %prx556 = load i8*, i8** %prx
  %return557 = call i8* @"concat@SSS"(i8* %prx556, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @116, i64 0, i64 0))
  %return558 = call double @"chf@FS"(i8* %return557)
  store <2 x double> %pos1, <2 x double>* %135
  %w560 = load double, double* %w
  store double %w560, double* %136
  store double %return558, double* %137
  call void @"V_CELL@UUFF"(<2 x double>* %p, <2 x double>* %135, double* %136, double* %137)
  %p562 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false554:                                         ; preds = %false546
  %return564 = call i64 @"eq@III"(i64 %T2, i64 57)
  %342 = icmp ne i64 %return564, 0
  br i1 %342, label %true565, label %false566

true565:                                          ; preds = %false554
  %prx568 = load i8*, i8** %prx
  %return569 = call i8* @"concat@SSS"(i8* %prx568, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @76, i64 0, i64 0))
  %return570 = call <3 x double> @"chv@VS"(i8* %return569)
  store <2 x double> %pos1, <2 x double>* %138
  %w572 = load double, double* %w
  store double %w572, double* %139
  store <3 x double> %return570, <3 x double>* %140
  call void @"V_CPOW@UUFV"(<2 x double>* %p, <2 x double>* %138, double* %139, <3 x double>* %140)
  %p574 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false566:                                         ; preds = %false554
  %return576 = call i64 @"eq@III"(i64 %T2, i64 58)
  %343 = icmp ne i64 %return576, 0
  br i1 %343, label %true577, label %false578

true577:                                          ; preds = %false566
  store <2 x double> %pos1, <2 x double>* %141
  %w581 = load double, double* %w
  store double %w581, double* %142
  call void @"V_EDISC@UUF"(<2 x double>* %p, <2 x double>* %141, double* %142)
  %p582 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false578:                                         ; preds = %false566
  %return584 = call i64 @"eq@III"(i64 %T2, i64 59)
  %344 = icmp ne i64 %return584, 0
  br i1 %344, label %true585, label %false586

true585:                                          ; preds = %false578
  store <2 x double> %pos1, <2 x double>* %143
  %w589 = load double, double* %w
  store double %w589, double* %144
  call void @"V_ELLIPTIC@UUF"(<2 x double>* %p, <2 x double>* %143, double* %144)
  %p590 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false586:                                         ; preds = %false578
  %return592 = call i64 @"eq@III"(i64 %T2, i64 60)
  %345 = icmp ne i64 %return592, 0
  br i1 %345, label %true593, label %false594

true593:                                          ; preds = %false586
  store <2 x double> %pos1, <2 x double>* %145
  %w597 = load double, double* %w
  store double %w597, double* %146
  call void @"V_NOISE@UUF"(<2 x double>* %p, <2 x double>* %145, double* %146)
  %p598 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false594:                                         ; preds = %false586
  %return600 = call i64 @"eq@III"(i64 %T2, i64 61)
  %346 = icmp ne i64 %return600, 0
  br i1 %346, label %true601, label %false602

true601:                                          ; preds = %false594
  %prx604 = load i8*, i8** %prx
  %return605 = call i8* @"concat@SSS"(i8* %prx604, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @117, i64 0, i64 0))
  %return606 = call double @"chf@FS"(i8* %return605)
  store <2 x double> %pos1, <2 x double>* %147
  %w608 = load double, double* %w
  store double %w608, double* %148
  store double %return606, double* %149
  call void @"V_ESCHER@UUFF"(<2 x double>* %p, <2 x double>* %147, double* %148, double* %149)
  %p610 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false602:                                         ; preds = %false594
  %return612 = call i64 @"eq@III"(i64 %T2, i64 62)
  %347 = icmp ne i64 %return612, 0
  br i1 %347, label %true613, label %false614

true613:                                          ; preds = %false602
  store <2 x double> %pos1, <2 x double>* %150
  %w617 = load double, double* %w
  store double %w617, double* %151
  call void @"V_FOCI@UUF"(<2 x double>* %p, <2 x double>* %150, double* %151)
  %p618 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false614:                                         ; preds = %false602
  %return620 = call i64 @"eq@III"(i64 %T2, i64 63)
  %348 = icmp ne i64 %return620, 0
  br i1 %348, label %true621, label %false622

true621:                                          ; preds = %false614
  %prx624 = load i8*, i8** %prx
  %return625 = call i8* @"concat@SSS"(i8* %prx624, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @78, i64 0, i64 0))
  %return626 = call <3 x double> @"chv@VS"(i8* %return625)
  %return628 = call i8* @"concat@SSS"(i8* %prx624, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @79, i64 0, i64 0))
  %return629 = call <2 x double> @"chu@US"(i8* %return628)
  store <2 x double> %pos1, <2 x double>* %152
  %w631 = load double, double* %w
  store double %w631, double* %153
  store <3 x double> %return626, <3 x double>* %154
  store <2 x double> %return629, <2 x double>* %155
  call void @"V_LAZYSUSAN@UUFVU"(<2 x double>* %p, <2 x double>* %152, double* %153, <3 x double>* %154, <2 x double>* %155)
  %p634 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false622:                                         ; preds = %false614
  %return636 = call i64 @"eq@III"(i64 %T2, i64 64)
  %349 = icmp ne i64 %return636, 0
  br i1 %349, label %true637, label %false638

true637:                                          ; preds = %false622
  store <2 x double> %pos1, <2 x double>* %156
  %w641 = load double, double* %w
  store double %w641, double* %157
  call void @"V_LOONIE@UUF"(<2 x double>* %p, <2 x double>* %156, double* %157)
  %p642 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false638:                                         ; preds = %false622
  %return644 = call i64 @"eq@III"(i64 %T2, i64 66)
  %350 = icmp ne i64 %return644, 0
  br i1 %350, label %true645, label %false646

true645:                                          ; preds = %false638
  %prx648 = load i8*, i8** %prx
  %return649 = call i8* @"concat@SSS"(i8* %prx648, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @118, i64 0, i64 0))
  %return650 = call <2 x double> @"chu@US"(i8* %return649)
  store <2 x double> %pos1, <2 x double>* %158
  %w652 = load double, double* %w
  store double %w652, double* %159
  store <2 x double> %return650, <2 x double>* %160
  call void @"V_MODULUS@UUFU"(<2 x double>* %p, <2 x double>* %158, double* %159, <2 x double>* %160)
  %p654 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false646:                                         ; preds = %false638
  %return656 = call i64 @"eq@III"(i64 %T2, i64 67)
  %351 = icmp ne i64 %return656, 0
  br i1 %351, label %true657, label %false658

true657:                                          ; preds = %false646
  %prx660 = load i8*, i8** %prx
  %return661 = call i8* @"concat@SSS"(i8* %prx660, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @81, i64 0, i64 0))
  %return662 = call <4 x double> @"chp@PS"(i8* %return661)
  store <2 x double> %pos1, <2 x double>* %161
  %w664 = load double, double* %w
  store double %w664, double* %162
  store <4 x double> %return662, <4 x double>* %163
  call void @"V_OSCOPE@UUFP"(<2 x double>* %p, <2 x double>* %161, double* %162, <4 x double>* %163)
  %p666 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false658:                                         ; preds = %false646
  %return668 = call i64 @"eq@III"(i64 %T2, i64 68)
  %352 = icmp ne i64 %return668, 0
  br i1 %352, label %true669, label %false670

true669:                                          ; preds = %false658
  store <2 x double> %pos1, <2 x double>* %164
  %w673 = load double, double* %w
  store double %w673, double* %165
  call void @"V_POLAR2@UUF"(<2 x double>* %p, <2 x double>* %164, double* %165)
  %p674 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false670:                                         ; preds = %false658
  %return676 = call i64 @"eq@III"(i64 %T2, i64 69)
  %353 = icmp ne i64 %return676, 0
  br i1 %353, label %true677, label %end9

true677:                                          ; preds = %false670
  %prx679 = load i8*, i8** %prx
  %return680 = call i8* @"concat@SSS"(i8* %prx679, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @119, i64 0, i64 0))
  %return681 = call double @"chf@FS"(i8* %return680)
  %return683 = call i8* @"concat@SSS"(i8* %prx679, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @120, i64 0, i64 0))
  %return684 = call <2 x double> @"chu@US"(i8* %return683)
  store <2 x double> %pos1, <2 x double>* %166
  %w686 = load double, double* %w
  store double %w686, double* %167
  store double %return681, double* %168
  store <2 x double> %return684, <2 x double>* %169
  call void @"V_POPCORN2@UUFFU"(<2 x double>* %p, <2 x double>* %166, double* %167, double* %168, <2 x double>* %169)
  %p689 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true692:                                          ; preds = %false332
  %return696 = call i64 @"eq@III"(i64 %T2, i64 70)
  %354 = icmp ne i64 %return696, 0
  br i1 %354, label %true697, label %false698

false693:                                         ; preds = %false332
  %return889 = call i64 @"eq@III"(i64 %T2, i64 88)
  %355 = icmp ne i64 %return889, 0
  br i1 %355, label %true890, label %false891

true697:                                          ; preds = %true692
  store <2 x double> %pos1, <2 x double>* %170
  %w701 = load double, double* %w
  store double %w701, double* %171
  call void @"V_SCRY@UUF"(<2 x double>* %p, <2 x double>* %170, double* %171)
  %p702 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false698:                                         ; preds = %true692
  %return704 = call i64 @"eq@III"(i64 %T2, i64 71)
  %356 = icmp ne i64 %return704, 0
  br i1 %356, label %true705, label %false706

true705:                                          ; preds = %false698
  %prx708 = load i8*, i8** %prx
  %return709 = call i8* @"concat@SSS"(i8* %prx708, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @121, i64 0, i64 0))
  %return710 = call <2 x double> @"chu@US"(i8* %return709)
  %return712 = call i8* @"concat@SSS"(i8* %prx708, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @122, i64 0, i64 0))
  %return713 = call <2 x double> @"chu@US"(i8* %return712)
  store <2 x double> %pos1, <2 x double>* %172
  %w715 = load double, double* %w
  store double %w715, double* %173
  store <2 x double> %return710, <2 x double>* %174
  store <2 x double> %return713, <2 x double>* %175
  call void @"V_SEPARATION@UUFUU"(<2 x double>* %p, <2 x double>* %172, double* %173, <2 x double>* %174, <2 x double>* %175)
  %p718 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false706:                                         ; preds = %false698
  %return720 = call i64 @"eq@III"(i64 %T2, i64 72)
  %357 = icmp ne i64 %return720, 0
  br i1 %357, label %true721, label %false722

true721:                                          ; preds = %false706
  %prx724 = load i8*, i8** %prx
  %return725 = call i8* @"concat@SSS"(i8* %prx724, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @123, i64 0, i64 0))
  %return726 = call <2 x double> @"chu@US"(i8* %return725)
  store <2 x double> %pos1, <2 x double>* %176
  %w728 = load double, double* %w
  store double %w728, double* %177
  store <2 x double> %return726, <2 x double>* %178
  call void @"V_SPLIT@UUFU"(<2 x double>* %p, <2 x double>* %176, double* %177, <2 x double>* %178)
  %p730 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false722:                                         ; preds = %false706
  %return732 = call i64 @"eq@III"(i64 %T2, i64 73)
  %358 = icmp ne i64 %return732, 0
  br i1 %358, label %true733, label %false734

true733:                                          ; preds = %false722
  %prx736 = load i8*, i8** %prx
  %return737 = call i8* @"concat@SSS"(i8* %prx736, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @124, i64 0, i64 0))
  %return738 = call <2 x double> @"chu@US"(i8* %return737)
  store <2 x double> %pos1, <2 x double>* %179
  %w740 = load double, double* %w
  store double %w740, double* %180
  store <2 x double> %return738, <2 x double>* %181
  call void @"V_SPLITS@UUFU"(<2 x double>* %p, <2 x double>* %179, double* %180, <2 x double>* %181)
  %p742 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false734:                                         ; preds = %false722
  %return744 = call i64 @"eq@III"(i64 %T2, i64 74)
  %359 = icmp ne i64 %return744, 0
  br i1 %359, label %true745, label %false746

true745:                                          ; preds = %false734
  %prx748 = load i8*, i8** %prx
  %return749 = call i8* @"concat@SSS"(i8* %prx748, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @88, i64 0, i64 0))
  %return750 = call <2 x double> @"chu@US"(i8* %return749)
  store <2 x double> %pos1, <2 x double>* %182
  %w752 = load double, double* %w
  store double %w752, double* %183
  store <2 x double> %return750, <2 x double>* %184
  call void @"V_STRIPES@UUFU"(<2 x double>* %p, <2 x double>* %182, double* %183, <2 x double>* %184)
  %p754 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false746:                                         ; preds = %false734
  %return756 = call i64 @"eq@III"(i64 %T2, i64 75)
  %360 = icmp ne i64 %return756, 0
  br i1 %360, label %true757, label %false758

true757:                                          ; preds = %false746
  %prx760 = load i8*, i8** %prx
  %return761 = call i8* @"concat@SSS"(i8* %prx760, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @89, i64 0, i64 0))
  %return762 = call <4 x double> @"chp@PS"(i8* %return761)
  store <2 x double> %pos1, <2 x double>* %185
  %w764 = load double, double* %w
  store double %w764, double* %186
  store <4 x double> %return762, <4 x double>* %187
  call void @"V_WEDGE@UUFP"(<2 x double>* %p, <2 x double>* %185, double* %186, <4 x double>* %187)
  %p766 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false758:                                         ; preds = %false746
  %return768 = call i64 @"eq@III"(i64 %T2, i64 76)
  %361 = icmp ne i64 %return768, 0
  br i1 %361, label %true769, label %false770

true769:                                          ; preds = %false758
  %prx772 = load i8*, i8** %prx
  %return773 = call i8* @"concat@SSS"(i8* %prx772, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @90, i64 0, i64 0))
  %return774 = call <4 x double> @"chp@PS"(i8* %return773)
  store <2 x double> %pos1, <2 x double>* %188
  %w776 = load double, double* %w
  store double %w776, double* %189
  store <4 x double> %return774, <4 x double>* %190
  call void @"V_WEDGEJULIA@UUFP"(<2 x double>* %p, <2 x double>* %188, double* %189, <4 x double>* %190)
  %p778 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false770:                                         ; preds = %false758
  %return780 = call i64 @"eq@III"(i64 %T2, i64 77)
  %362 = icmp ne i64 %return780, 0
  br i1 %362, label %true781, label %false782

true781:                                          ; preds = %false770
  %prx784 = load i8*, i8** %prx
  %return785 = call i8* @"concat@SSS"(i8* %prx784, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @91, i64 0, i64 0))
  %return786 = call <4 x double> @"chp@PS"(i8* %return785)
  store <2 x double> %pos1, <2 x double>* %191
  %w788 = load double, double* %w
  store double %w788, double* %192
  store <4 x double> %return786, <4 x double>* %193
  call void @"V_WEDGESPH@UUFP"(<2 x double>* %p, <2 x double>* %191, double* %192, <4 x double>* %193)
  %p790 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false782:                                         ; preds = %false770
  %return792 = call i64 @"eq@III"(i64 %T2, i64 78)
  %363 = icmp ne i64 %return792, 0
  br i1 %363, label %true793, label %false794

true793:                                          ; preds = %false782
  %prx796 = load i8*, i8** %prx
  %return797 = call i8* @"concat@SSS"(i8* %prx796, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @92, i64 0, i64 0))
  %return798 = call <2 x double> @"chu@US"(i8* %return797)
  store <2 x double> %pos1, <2 x double>* %194
  %w800 = load double, double* %w
  store double %w800, double* %195
  store <2 x double> %return798, <2 x double>* %196
  call void @"V_WHORL@UUFU"(<2 x double>* %p, <2 x double>* %194, double* %195, <2 x double>* %196)
  %p802 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false794:                                         ; preds = %false782
  %return804 = call i64 @"eq@III"(i64 %T2, i64 79)
  %364 = icmp ne i64 %return804, 0
  br i1 %364, label %true805, label %false806

true805:                                          ; preds = %false794
  %prx808 = load i8*, i8** %prx
  %return809 = call i8* @"concat@SSS"(i8* %prx808, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @125, i64 0, i64 0))
  %return810 = call <2 x double> @"chu@US"(i8* %return809)
  %return812 = call i8* @"concat@SSS"(i8* %prx808, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @126, i64 0, i64 0))
  %return813 = call <2 x double> @"chu@US"(i8* %return812)
  store <2 x double> %pos1, <2 x double>* %197
  %w815 = load double, double* %w
  store double %w815, double* %198
  store <2 x double> %return810, <2 x double>* %199
  store <2 x double> %return813, <2 x double>* %200
  call void @"V_WAVES2@UUFUU"(<2 x double>* %p, <2 x double>* %197, double* %198, <2 x double>* %199, <2 x double>* %200)
  %p818 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false806:                                         ; preds = %false794
  %return820 = call i64 @"eq@III"(i64 %T2, i64 80)
  %365 = icmp ne i64 %return820, 0
  br i1 %365, label %true821, label %false822

true821:                                          ; preds = %false806
  store <2 x double> %pos1, <2 x double>* %201
  %w825 = load double, double* %w
  store double %w825, double* %202
  call void @"V_EXP@UUF"(<2 x double>* %p, <2 x double>* %201, double* %202)
  %p826 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false822:                                         ; preds = %false806
  %return828 = call i64 @"eq@III"(i64 %T2, i64 81)
  %366 = icmp ne i64 %return828, 0
  br i1 %366, label %true829, label %false830

true829:                                          ; preds = %false822
  store <2 x double> %pos1, <2 x double>* %203
  %w833 = load double, double* %w
  store double %w833, double* %204
  call void @"V_LOG@UUF"(<2 x double>* %p, <2 x double>* %203, double* %204)
  %p834 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false830:                                         ; preds = %false822
  %return836 = call i64 @"eq@III"(i64 %T2, i64 82)
  %367 = icmp ne i64 %return836, 0
  br i1 %367, label %true837, label %false838

true837:                                          ; preds = %false830
  %f3c840 = load i64, i64* %f3c
  store i64 %f3c840, i64* %205
  store <2 x double> %pos1, <2 x double>* %206
  %w842 = load double, double* %w
  store double %w842, double* %207
  call void @"V_SIN@IUUF"(i64* %205, <2 x double>* %p, <2 x double>* %206, double* %207)
  %p843 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false838:                                         ; preds = %false830
  %return845 = call i64 @"eq@III"(i64 %T2, i64 83)
  %368 = icmp ne i64 %return845, 0
  br i1 %368, label %true846, label %false847

true846:                                          ; preds = %false838
  %f3c849 = load i64, i64* %f3c
  store i64 %f3c849, i64* %208
  store <2 x double> %pos1, <2 x double>* %209
  %w851 = load double, double* %w
  store double %w851, double* %210
  call void @"V_COS@IUUF"(i64* %208, <2 x double>* %p, <2 x double>* %209, double* %210)
  %p852 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false847:                                         ; preds = %false838
  %return854 = call i64 @"eq@III"(i64 %T2, i64 84)
  %369 = icmp ne i64 %return854, 0
  br i1 %369, label %true855, label %false856

true855:                                          ; preds = %false847
  %f3c858 = load i64, i64* %f3c
  store i64 %f3c858, i64* %211
  store <2 x double> %pos1, <2 x double>* %212
  %w860 = load double, double* %w
  store double %w860, double* %213
  call void @"V_TAN@IUUF"(i64* %211, <2 x double>* %p, <2 x double>* %212, double* %213)
  %p861 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false856:                                         ; preds = %false847
  %return863 = call i64 @"eq@III"(i64 %T2, i64 85)
  %370 = icmp ne i64 %return863, 0
  br i1 %370, label %true864, label %false865

true864:                                          ; preds = %false856
  %f3c867 = load i64, i64* %f3c
  store i64 %f3c867, i64* %214
  store <2 x double> %pos1, <2 x double>* %215
  %w869 = load double, double* %w
  store double %w869, double* %216
  call void @"V_SEC@IUUF"(i64* %214, <2 x double>* %p, <2 x double>* %215, double* %216)
  %p870 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false865:                                         ; preds = %false856
  %return872 = call i64 @"eq@III"(i64 %T2, i64 86)
  %371 = icmp ne i64 %return872, 0
  br i1 %371, label %true873, label %false874

true873:                                          ; preds = %false865
  %f3c876 = load i64, i64* %f3c
  store i64 %f3c876, i64* %217
  store <2 x double> %pos1, <2 x double>* %218
  %w878 = load double, double* %w
  store double %w878, double* %219
  call void @"V_CSC@IUUF"(i64* %217, <2 x double>* %p, <2 x double>* %218, double* %219)
  %p879 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false874:                                         ; preds = %false865
  %return881 = call i64 @"eq@III"(i64 %T2, i64 87)
  %372 = icmp ne i64 %return881, 0
  br i1 %372, label %true882, label %end9

true882:                                          ; preds = %false874
  %f3c884 = load i64, i64* %f3c
  store i64 %f3c884, i64* %220
  store <2 x double> %pos1, <2 x double>* %221
  %w886 = load double, double* %w
  store double %w886, double* %222
  call void @"V_COT@IUUF"(i64* %220, <2 x double>* %p, <2 x double>* %221, double* %222)
  %p887 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

true890:                                          ; preds = %false693
  %f3c893 = load i64, i64* %f3c
  store i64 %f3c893, i64* %223
  store <2 x double> %pos1, <2 x double>* %224
  %w895 = load double, double* %w
  store double %w895, double* %225
  call void @"V_SINH@IUUF"(i64* %223, <2 x double>* %p, <2 x double>* %224, double* %225)
  %p896 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false891:                                         ; preds = %false693
  %return898 = call i64 @"eq@III"(i64 %T2, i64 89)
  %373 = icmp ne i64 %return898, 0
  br i1 %373, label %true899, label %false900

true899:                                          ; preds = %false891
  %f3c902 = load i64, i64* %f3c
  store i64 %f3c902, i64* %226
  store <2 x double> %pos1, <2 x double>* %227
  %w904 = load double, double* %w
  store double %w904, double* %228
  call void @"V_COSH@IUUF"(i64* %226, <2 x double>* %p, <2 x double>* %227, double* %228)
  %p905 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false900:                                         ; preds = %false891
  %return907 = call i64 @"eq@III"(i64 %T2, i64 90)
  %374 = icmp ne i64 %return907, 0
  br i1 %374, label %true908, label %false909

true908:                                          ; preds = %false900
  %f3c911 = load i64, i64* %f3c
  store i64 %f3c911, i64* %229
  store <2 x double> %pos1, <2 x double>* %230
  %w913 = load double, double* %w
  store double %w913, double* %231
  call void @"V_TANH@IUUF"(i64* %229, <2 x double>* %p, <2 x double>* %230, double* %231)
  %p914 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false909:                                         ; preds = %false900
  %return916 = call i64 @"eq@III"(i64 %T2, i64 91)
  %375 = icmp ne i64 %return916, 0
  br i1 %375, label %true917, label %false918

true917:                                          ; preds = %false909
  %f3c920 = load i64, i64* %f3c
  store i64 %f3c920, i64* %232
  store <2 x double> %pos1, <2 x double>* %233
  %w922 = load double, double* %w
  store double %w922, double* %234
  call void @"V_SECH@IUUF"(i64* %232, <2 x double>* %p, <2 x double>* %233, double* %234)
  %p923 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false918:                                         ; preds = %false909
  %return925 = call i64 @"eq@III"(i64 %T2, i64 92)
  %376 = icmp ne i64 %return925, 0
  br i1 %376, label %true926, label %false927

true926:                                          ; preds = %false918
  %f3c929 = load i64, i64* %f3c
  store i64 %f3c929, i64* %235
  store <2 x double> %pos1, <2 x double>* %236
  %w931 = load double, double* %w
  store double %w931, double* %237
  call void @"V_CSCH@IUUF"(i64* %235, <2 x double>* %p, <2 x double>* %236, double* %237)
  %p932 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false927:                                         ; preds = %false918
  %return934 = call i64 @"eq@III"(i64 %T2, i64 93)
  %377 = icmp ne i64 %return934, 0
  br i1 %377, label %true935, label %false936

true935:                                          ; preds = %false927
  %f3c938 = load i64, i64* %f3c
  store i64 %f3c938, i64* %238
  store <2 x double> %pos1, <2 x double>* %239
  %w940 = load double, double* %w
  store double %w940, double* %240
  call void @"V_COTH@IUUF"(i64* %238, <2 x double>* %p, <2 x double>* %239, double* %240)
  %p941 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false936:                                         ; preds = %false927
  %return943 = call i64 @"eq@III"(i64 %T2, i64 94)
  %378 = icmp ne i64 %return943, 0
  br i1 %378, label %true944, label %false945

true944:                                          ; preds = %false936
  %prx947 = load i8*, i8** %prx
  %return948 = call i8* @"concat@SSS"(i8* %prx947, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @95, i64 0, i64 0))
  %return949 = call <4 x double> @"chp@PS"(i8* %return948)
  store <2 x double> %pos1, <2 x double>* %241
  %w951 = load double, double* %w
  store double %w951, double* %242
  store <4 x double> %return949, <4 x double>* %243
  call void @"V_AUGER@UUFP"(<2 x double>* %p, <2 x double>* %241, double* %242, <4 x double>* %243)
  %p953 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false945:                                         ; preds = %false936
  %return955 = call i64 @"eq@III"(i64 %T2, i64 95)
  %379 = icmp ne i64 %return955, 0
  br i1 %379, label %true956, label %false957

true956:                                          ; preds = %false945
  %prx959 = load i8*, i8** %prx
  %return960 = call i8* @"concat@SSS"(i8* %prx959, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @127, i64 0, i64 0))
  %return961 = call double @"chf@FS"(i8* %return960)
  store <2 x double> %pos1, <2 x double>* %244
  %w963 = load double, double* %w
  store double %w963, double* %245
  store double %return961, double* %246
  call void @"V_FLUX@UUFF"(<2 x double>* %p, <2 x double>* %244, double* %245, double* %246)
  %p965 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false957:                                         ; preds = %false945
  %return967 = call i64 @"eq@III"(i64 %T2, i64 96)
  %380 = icmp ne i64 %return967, 0
  br i1 %380, label %true968, label %false969

true968:                                          ; preds = %false957
  %prx971 = load i8*, i8** %prx
  %return972 = call i8* @"concat@SSS"(i8* %prx971, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @128, i64 0, i64 0))
  %return973 = call <4 x double> @"chp@PS"(i8* %return972)
  %return975 = call i8* @"concat@SSS"(i8* %prx971, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @129, i64 0, i64 0))
  %return976 = call <4 x double> @"chp@PS"(i8* %return975)
  store <2 x double> %pos1, <2 x double>* %247
  %w978 = load double, double* %w
  store double %w978, double* %248
  store <4 x double> %return973, <4 x double>* %249
  store <4 x double> %return976, <4 x double>* %250
  call void @"V_MOBIUS@UUFPP"(<2 x double>* %p, <2 x double>* %247, double* %248, <4 x double>* %249, <4 x double>* %250)
  %p981 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false969:                                         ; preds = %false957
  %return983 = call i64 @"eq@III"(i64 %T2, i64 97)
  %381 = icmp ne i64 %return983, 0
  br i1 %381, label %true984, label %false985

true984:                                          ; preds = %false969
  %prx987 = load i8*, i8** %prx
  %return988 = call i8* @"concat@SSS"(i8* %prx987, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @130, i64 0, i64 0))
  %return989 = call <2 x double> @"chu@US"(i8* %return988)
  %return991 = call i8* @"concat@SSS"(i8* %prx987, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @131, i64 0, i64 0))
  %return992 = call <2 x double> @"chu@US"(i8* %return991)
  store <2 x double> %pos1, <2 x double>* %251
  %w994 = load double, double* %w
  store double %w994, double* %252
  store <2 x double> %return989, <2 x double>* %253
  store <2 x double> %return992, <2 x double>* %254
  call void @"V_CURVE@UUFUU"(<2 x double>* %p, <2 x double>* %251, double* %252, <2 x double>* %253, <2 x double>* %254)
  %p997 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false985:                                         ; preds = %false969
  %return999 = call i64 @"eq@III"(i64 %T2, i64 98)
  %382 = icmp ne i64 %return999, 0
  br i1 %382, label %true1000, label %false1001

true1000:                                         ; preds = %false985
  %prx1003 = load i8*, i8** %prx
  %return1004 = call i8* @"concat@SSS"(i8* %prx1003, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @101, i64 0, i64 0))
  %return1005 = call <2 x double> @"chu@US"(i8* %return1004)
  store <2 x double> %pos1, <2 x double>* %255
  %w1007 = load double, double* %w
  store double %w1007, double* %256
  store <2 x double> %return1005, <2 x double>* %257
  call void @"V_PERSPECTIVE@UUFU"(<2 x double>* %p, <2 x double>* %255, double* %256, <2 x double>* %257)
  %p1009 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1001:                                        ; preds = %false985
  %return1011 = call i64 @"eq@III"(i64 %T2, i64 99)
  %383 = icmp ne i64 %return1011, 0
  br i1 %383, label %true1012, label %false1013

true1012:                                         ; preds = %false1001
  %prx1015 = load i8*, i8** %prx
  %return1016 = call i8* @"concat@SSS"(i8* %prx1015, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @102, i64 0, i64 0))
  %return1017 = call <3 x double> @"chv@VS"(i8* %return1016)
  %return1019 = call i8* @"concat@SSS"(i8* %prx1015, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @103, i64 0, i64 0))
  %return1020 = call <2 x double> @"chu@US"(i8* %return1019)
  store <2 x double> %pos1, <2 x double>* %258
  %w1022 = load double, double* %w
  store double %w1022, double* %259
  store <3 x double> %return1017, <3 x double>* %260
  store <2 x double> %return1020, <2 x double>* %261
  call void @"V_BWRAPS@UUFVU"(<2 x double>* %p, <2 x double>* %258, double* %259, <3 x double>* %260, <2 x double>* %261)
  %p1025 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1013:                                        ; preds = %false1001
  %return1027 = call i64 @"eq@III"(i64 %T2, i64 100)
  %384 = icmp ne i64 %return1027, 0
  br i1 %384, label %true1028, label %false1029

true1028:                                         ; preds = %false1013
  store <2 x double> %pos1, <2 x double>* %262
  %w1032 = load double, double* %w
  store double %w1032, double* %263
  call void @"V_HEMISPHERE@UUF"(<2 x double>* %p, <2 x double>* %262, double* %263)
  %p1033 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1029:                                        ; preds = %false1013
  %return1035 = call i64 @"eq@III"(i64 %T2, i64 101)
  %385 = icmp ne i64 %return1035, 0
  br i1 %385, label %true1036, label %false1037

true1036:                                         ; preds = %false1029
  %prx1039 = load i8*, i8** %prx
  %return1040 = call i8* @"concat@SSS"(i8* %prx1039, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @132, i64 0, i64 0))
  %return1041 = call <2 x double> @"chu@US"(i8* %return1040)
  %return1043 = call i8* @"concat@SSS"(i8* %prx1039, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @133, i64 0, i64 0))
  %return1044 = call <2 x double> @"chu@US"(i8* %return1043)
  %return1046 = call i8* @"concat@SSS"(i8* %prx1039, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @134, i64 0, i64 0))
  %return1047 = call <2 x double> @"chu@US"(i8* %return1046)
  store <2 x double> %pos1, <2 x double>* %264
  %w1049 = load double, double* %w
  store double %w1049, double* %265
  store <2 x double> %return1041, <2 x double>* %266
  store <2 x double> %return1044, <2 x double>* %267
  store <2 x double> %return1047, <2 x double>* %268
  call void @"V_POLYNOMIAL@UUFUUU"(<2 x double>* %p, <2 x double>* %264, double* %265, <2 x double>* %266, <2 x double>* %267, <2 x double>* %268)
  %p1053 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1037:                                        ; preds = %false1029
  %return1055 = call i64 @"eq@III"(i64 %T2, i64 102)
  %386 = icmp ne i64 %return1055, 0
  br i1 %386, label %true1056, label %false1057

true1056:                                         ; preds = %false1037
  %prx1059 = load i8*, i8** %prx
  %return1060 = call i8* @"concat@SSS"(i8* %prx1059, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @135, i64 0, i64 0))
  %return1061 = call <4 x double> @"chp@PS"(i8* %return1060)
  %return1063 = call i8* @"concat@SSS"(i8* %prx1059, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @136, i64 0, i64 0))
  %return1064 = call <2 x double> @"chu@US"(i8* %return1063)
  store <2 x double> %pos1, <2 x double>* %269
  %w1066 = load double, double* %w
  store double %w1066, double* %270
  store <4 x double> %return1061, <4 x double>* %271
  store <2 x double> %return1064, <2 x double>* %272
  call void @"V_CROP@UUFPU"(<2 x double>* %p, <2 x double>* %269, double* %270, <4 x double>* %271, <2 x double>* %272)
  %p1069 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1057:                                        ; preds = %false1037
  %return1071 = call i64 @"eq@III"(i64 %T2, i64 103)
  %387 = icmp ne i64 %return1071, 0
  br i1 %387, label %true1072, label %false1073

true1072:                                         ; preds = %false1057
  store <2 x double> %pos1, <2 x double>* %273
  %w1076 = load double, double* %w
  store double %w1076, double* %274
  call void @"V_UNPOLAR@UUF"(<2 x double>* %p, <2 x double>* %273, double* %274)
  %p1077 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1073:                                        ; preds = %false1057
  %return1079 = call i64 @"eq@III"(i64 %T2, i64 104)
  %388 = icmp ne i64 %return1079, 0
  br i1 %388, label %true1080, label %false1081

true1080:                                         ; preds = %false1073
  store <2 x double> %pos1, <2 x double>* %275
  %w1084 = load double, double* %w
  store double %w1084, double* %276
  call void @"V_GLYNNIA@UUF"(<2 x double>* %p, <2 x double>* %275, double* %276)
  %p1085 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

false1081:                                        ; preds = %false1073
  %return1087 = call i64 @"eq@III"(i64 %T2, i64 105)
  %389 = icmp ne i64 %return1087, 0
  br i1 %389, label %true1088, label %end9

true1088:                                         ; preds = %false1081
  %prx1090 = load i8*, i8** %prx
  %return1091 = call i8* @"concat@SSS"(i8* %prx1090, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @137, i64 0, i64 0))
  %return1092 = call <3 x double> @"chv@VS"(i8* %return1091)
  store <2 x double> %pos1, <2 x double>* %277
  %w1094 = load double, double* %w
  store double %w1094, double* %278
  store <3 x double> %return1092, <3 x double>* %279
  call void @"V_POINT_SYMMETRY@UUFV"(<2 x double>* %p, <2 x double>* %277, double* %278, <3 x double>* %279)
  %p1096 = load <2 x double>, <2 x double>* %p
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %true1088, %true1080, %true1072, %true1056, %true1036, %true1028, %true1012, %true1000, %true984, %true968, %true956, %true944, %true935, %true926, %true917, %true908, %true899, %true890, %true882, %true873, %true864, %true855, %true846, %true837, %true829, %true821, %true805, %true793, %true781, %true769, %true757, %true745, %true733, %true721, %true705, %true697, %true677, %true669, %true657, %true645, %true637, %true621, %true613, %true601, %true593, %true585, %true577, %true565, %true553, %true545, %true537, %true525, %true513, %true502, %true490, %true478, %true462, %true450, %true442, %true434, %true426, %true418, %true410, %true403, %true395, %true388, %true377, %true365, %true353, %true341, %true320, %true313, %true301, %true289, %true277, %true265, %true253, %true241, %true234, %true226, %true218, %true210, %true198, %true188, %true180, %true172, %true164, %true153, %true145, %true129, %true121, %true113, %true105, %true97, %true89, %true81, %true73, %true65, %true57, %true49, %true41, %true33, %true25, %true17, %end9, %true
  %UnifiedRetVal = phi <2 x double> [ %output, %true ], [ %pos1, %end9 ], [ %p22, %true17 ], [ %p30, %true25 ], [ %p38, %true33 ], [ %p46, %true41 ], [ %p54, %true49 ], [ %p62, %true57 ], [ %p70, %true65 ], [ %p78, %true73 ], [ %p86, %true81 ], [ %p94, %true89 ], [ %p102, %true97 ], [ %p110, %true105 ], [ %p118, %true113 ], [ %p126, %true121 ], [ %p142, %true129 ], [ %p150, %true145 ], [ %p161, %true153 ], [ %p169, %true164 ], [ %p177, %true172 ], [ %p185, %true180 ], [ %p195, %true188 ], [ %p207, %true198 ], [ %p215, %true210 ], [ %p223, %true218 ], [ %p231, %true226 ], [ %p238, %true234 ], [ %p250, %true241 ], [ %p262, %true253 ], [ %p274, %true265 ], [ %p286, %true277 ], [ %p298, %true289 ], [ %p310, %true301 ], [ %p317, %true313 ], [ %p328, %true320 ], [ %p350, %true341 ], [ %p362, %true353 ], [ %p374, %true365 ], [ %p385, %true377 ], [ %p392, %true388 ], [ %p400, %true395 ], [ %p407, %true403 ], [ %p415, %true410 ], [ %p423, %true418 ], [ %p431, %true426 ], [ %p439, %true434 ], [ %p447, %true442 ], [ %p459, %true450 ], [ %p475, %true462 ], [ %p487, %true478 ], [ %p499, %true490 ], [ %p510, %true502 ], [ %p522, %true513 ], [ %p534, %true525 ], [ %p542, %true537 ], [ %p550, %true545 ], [ %p562, %true553 ], [ %p574, %true565 ], [ %p582, %true577 ], [ %p590, %true585 ], [ %p598, %true593 ], [ %p610, %true601 ], [ %p618, %true613 ], [ %p634, %true621 ], [ %p642, %true637 ], [ %p654, %true645 ], [ %p666, %true657 ], [ %p674, %true669 ], [ %p689, %true677 ], [ %p702, %true697 ], [ %p718, %true705 ], [ %p730, %true721 ], [ %p742, %true733 ], [ %p754, %true745 ], [ %p766, %true757 ], [ %p778, %true769 ], [ %p790, %true781 ], [ %p802, %true793 ], [ %p818, %true805 ], [ %p826, %true821 ], [ %p834, %true829 ], [ %p843, %true837 ], [ %p852, %true846 ], [ %p861, %true855 ], [ %p870, %true864 ], [ %p879, %true873 ], [ %p887, %true882 ], [ %p896, %true890 ], [ %p905, %true899 ], [ %p914, %true908 ], [ %p923, %true917 ], [ %p932, %true926 ], [ %p941, %true935 ], [ %p953, %true944 ], [ %p965, %true956 ], [ %p981, %true968 ], [ %p997, %true984 ], [ %p1009, %true1000 ], [ %p1025, %true1012 ], [ %p1033, %true1028 ], [ %p1053, %true1036 ], [ %p1069, %true1056 ], [ %p1077, %true1072 ], [ %p1085, %true1080 ], [ %p1096, %true1088 ]
  ret <2 x double> %UnifiedRetVal
}

; Function Attrs: alwaysinline nounwind
define private void @"_FLAM3@IFFFFV"(i64* %_bound_ptnum, double* %_bound_pscale, double* %_bound_clr, double* %_bound_Alpha, double* %_bound_mb, <3 x double>* %_bound_P) #1 {
__llvm_entry:
  %tmp = alloca <2 x double>
  %mem = alloca <2 x double>
  %GEMSYSGLB = alloca %gemSYSGLB
  %GEMSYS = alloca %gemSYS
  %GEMSHD = alloca %gemSHD
  %GEMPA = alloca %gemPA
  %GEMAP = alloca %gemAP
  %GEMPV = alloca %gemPV
  %GEMV = alloca %gemV
  %GEMVP = alloca %gemVP
  %GEMFFPA = alloca %gemFFPA
  %GEMFFAP = alloca %gemFFAP
  %GEMFFPV = alloca %gemFFPV
  %GEMFFV = alloca %gemFFV
  %GEMFFVP = alloca %gemFFVP
  %0 = alloca i64
  %1 = alloca double
  %2 = alloca double*
  %3 = alloca <2 x double>
  %4 = alloca <2 x double>
  %5 = alloca <2 x double>
  %6 = alloca double
  %7 = alloca i64
  %8 = alloca i64
  %9 = alloca i64
  %10 = alloca <2 x double>
  %11 = alloca <2 x double>
  %12 = alloca <2 x double>
  %13 = alloca <2 x double>
  %14 = alloca double
  %15 = alloca i64
  %16 = alloca i64
  %17 = alloca i64
  %18 = alloca <2 x double>
  %19 = alloca <2 x double>
  %20 = alloca <2 x double>
  %21 = alloca <2 x double>
  %22 = alloca double
  %23 = alloca i64
  %24 = alloca i64
  %25 = alloca i64
  %26 = alloca <2 x double>
  %27 = alloca <2 x double>
  %28 = alloca <2 x double>
  %29 = alloca <2 x double>
  %30 = alloca double
  %31 = alloca i64
  %32 = alloca i64
  %33 = alloca i64
  %34 = alloca <2 x double>
  %35 = alloca <2 x double>
  %36 = alloca <2 x double>
  %37 = alloca <2 x double>
  %38 = alloca double
  %39 = alloca i64
  %40 = alloca i64
  %41 = alloca i64
  %42 = alloca <2 x double>
  %43 = alloca <2 x double>
  %44 = alloca <2 x double>
  %45 = alloca <2 x double>
  %46 = alloca double
  %47 = alloca i64
  %48 = alloca i64
  %49 = alloca i64
  %50 = alloca <2 x double>
  %51 = alloca <2 x double>
  %52 = alloca <2 x double>
  %53 = alloca <2 x double>
  %54 = alloca double
  %55 = alloca i64
  %56 = alloca i64
  %57 = alloca i64
  %58 = alloca <2 x double>
  %59 = alloca <2 x double>
  %60 = alloca <2 x double>
  %61 = alloca <2 x double>
  %62 = alloca double
  %63 = alloca <2 x double>
  %64 = alloca <2 x double>
  %65 = alloca <2 x double>
  %66 = alloca <2 x double>
  %67 = alloca <2 x double>
  %68 = alloca <2 x double>
  %69 = alloca i64
  %70 = alloca <2 x double>
  %71 = alloca double
  %72 = alloca i8*
  %73 = alloca i64
  %74 = alloca i64
  %75 = alloca <2 x double>
  %76 = alloca <2 x double>
  %77 = alloca <2 x double>
  %78 = alloca <2 x double>
  %79 = alloca double
  %80 = alloca i8*
  %81 = alloca i64
  %82 = alloca i64
  %83 = alloca <2 x double>
  %84 = alloca <2 x double>
  %85 = alloca <2 x double>
  %86 = alloca <2 x double>
  %87 = alloca double
  %88 = alloca i8*
  %89 = alloca i64
  %90 = alloca i64
  %91 = alloca <2 x double>
  %92 = alloca <2 x double>
  %93 = alloca <2 x double>
  %94 = alloca <2 x double>
  %95 = alloca double
  %96 = alloca i8*
  %97 = alloca i64
  %98 = alloca i64
  %99 = alloca <2 x double>
  %100 = alloca <2 x double>
  %101 = alloca <2 x double>
  %102 = alloca <2 x double>
  %103 = alloca double
  %104 = alloca i8*
  %105 = alloca i64
  %106 = alloca i64
  %107 = alloca <2 x double>
  %108 = alloca <2 x double>
  %109 = alloca <2 x double>
  %110 = alloca <2 x double>
  %111 = alloca double
  %112 = alloca <2 x double>
  %113 = alloca <2 x double>
  %114 = alloca <2 x double>
  store <2 x double> zeroinitializer, <2 x double>* %tmp, !vex-initializer-store !3
  store <2 x double> zeroinitializer, <2 x double>* %mem, !vex-initializer-store !3
  %GEMSYSGLB1 = call %gemSYSGLB @"gemSYSGLB@Z9gemSYSGLBM5N2FFIN3RIPIN2MBIN3F3CIN4ITERI"()
  %GEMSYSGLB1.fca.0.extract = extractvalue %gemSYSGLB %GEMSYSGLB1, 0
  %GEMSYSGLB1.fca.0.gep = getelementptr inbounds %gemSYSGLB, %gemSYSGLB* %GEMSYSGLB, i32 0, i32 0
  store i64 %GEMSYSGLB1.fca.0.extract, i64* %GEMSYSGLB1.fca.0.gep
  %GEMSYSGLB1.fca.1.extract = extractvalue %gemSYSGLB %GEMSYSGLB1, 1
  %GEMSYSGLB1.fca.1.gep = getelementptr inbounds %gemSYSGLB, %gemSYSGLB* %GEMSYSGLB, i32 0, i32 1
  store i64 %GEMSYSGLB1.fca.1.extract, i64* %GEMSYSGLB1.fca.1.gep
  %GEMSYSGLB1.fca.2.extract = extractvalue %gemSYSGLB %GEMSYSGLB1, 2
  %GEMSYSGLB1.fca.2.gep = getelementptr inbounds %gemSYSGLB, %gemSYSGLB* %GEMSYSGLB, i32 0, i32 2
  store i64 %GEMSYSGLB1.fca.2.extract, i64* %GEMSYSGLB1.fca.2.gep
  %GEMSYSGLB1.fca.3.extract = extractvalue %gemSYSGLB %GEMSYSGLB1, 3
  %GEMSYSGLB1.fca.3.gep = getelementptr inbounds %gemSYSGLB, %gemSYSGLB* %GEMSYSGLB, i32 0, i32 3
  store i64 %GEMSYSGLB1.fca.3.extract, i64* %GEMSYSGLB1.fca.3.gep
  %GEMSYSGLB1.fca.4.extract = extractvalue %gemSYSGLB %GEMSYSGLB1, 4
  %GEMSYSGLB1.fca.4.gep = getelementptr inbounds %gemSYSGLB, %gemSYSGLB* %GEMSYSGLB, i32 0, i32 4
  store i64 %GEMSYSGLB1.fca.4.extract, i64* %GEMSYSGLB1.fca.4.gep
  call void @"gemSYSGLBBuild@Z9gemSYSGLBM5N2FFIN3RIPIN2MBIN3F3CIN4ITERI"(%gemSYSGLB* %GEMSYSGLB)
  %GEMSYSGLB2.fca.0.load = load i64, i64* %GEMSYSGLB1.fca.0.gep
  %GEMSYSGLB2.fca.0.insert = insertvalue %gemSYSGLB undef, i64 %GEMSYSGLB2.fca.0.load, 0
  %GEMSYSGLB2.fca.1.load = load i64, i64* %GEMSYSGLB1.fca.1.gep
  %GEMSYSGLB2.fca.1.insert = insertvalue %gemSYSGLB %GEMSYSGLB2.fca.0.insert, i64 %GEMSYSGLB2.fca.1.load, 1
  %GEMSYSGLB2.fca.2.load = load i64, i64* %GEMSYSGLB1.fca.2.gep
  %GEMSYSGLB2.fca.2.insert = insertvalue %gemSYSGLB %GEMSYSGLB2.fca.1.insert, i64 %GEMSYSGLB2.fca.2.load, 2
  %GEMSYSGLB2.fca.3.load = load i64, i64* %GEMSYSGLB1.fca.3.gep
  %GEMSYSGLB2.fca.3.insert = insertvalue %gemSYSGLB %GEMSYSGLB2.fca.2.insert, i64 %GEMSYSGLB2.fca.3.load, 3
  %GEMSYSGLB2.fca.4.load = load i64, i64* %GEMSYSGLB1.fca.4.gep
  %GEMSYS12 = call %gemSYS @"gemSYS@Z6gemSYSM4N3RESIN2XSIN2IW[FN3XST[F"()
  %GEMSYS12.fca.0.extract = extractvalue %gemSYS %GEMSYS12, 0
  %GEMSYS12.fca.0.gep = getelementptr inbounds %gemSYS, %gemSYS* %GEMSYS, i32 0, i32 0
  store i64 %GEMSYS12.fca.0.extract, i64* %GEMSYS12.fca.0.gep
  %GEMSYS12.fca.1.extract = extractvalue %gemSYS %GEMSYS12, 1
  %GEMSYS12.fca.1.gep = getelementptr inbounds %gemSYS, %gemSYS* %GEMSYS, i32 0, i32 1
  store i64 %GEMSYS12.fca.1.extract, i64* %GEMSYS12.fca.1.gep
  %GEMSYS12.fca.2.extract = extractvalue %gemSYS %GEMSYS12, 2
  %GEMSYS12.fca.2.gep = getelementptr inbounds %gemSYS, %gemSYS* %GEMSYS, i32 0, i32 2
  store double* %GEMSYS12.fca.2.extract, double** %GEMSYS12.fca.2.gep
  %GEMSYS12.fca.3.extract = extractvalue %gemSYS %GEMSYS12, 3
  %GEMSYS12.fca.3.gep = getelementptr inbounds %gemSYS, %gemSYS* %GEMSYS, i32 0, i32 3
  store double* %GEMSYS12.fca.3.extract, double** %GEMSYS12.fca.3.gep
  call void @"gemSYSBuild@Z6gemSYSM4N3RESIN2XSIN2IW[FN3XST[F"(%gemSYS* %GEMSYS)
  %GEMSYS13.fca.0.load = load i64, i64* %GEMSYS12.fca.0.gep
  %GEMSYS13.fca.0.insert = insertvalue %gemSYS undef, i64 %GEMSYS13.fca.0.load, 0
  %GEMSYS13.fca.1.load = load i64, i64* %GEMSYS12.fca.1.gep
  %GEMSYS13.fca.1.insert = insertvalue %gemSYS %GEMSYS13.fca.0.insert, i64 %GEMSYS13.fca.1.load, 1
  %GEMSYS13.fca.2.load = load double*, double** %GEMSYS12.fca.2.gep
  %GEMSYS13.fca.2.insert = insertvalue %gemSYS %GEMSYS13.fca.1.insert, double* %GEMSYS13.fca.2.load, 2
  %GEMSYS13.fca.3.load = load double*, double** %GEMSYS12.fca.3.gep
  %GEMSHD21 = call %gemSHD @"gemSHD@Z6gemSHDM3N3CLR[FN2OM[FN1A[F"()
  %GEMSHD21.fca.0.extract = extractvalue %gemSHD %GEMSHD21, 0
  %GEMSHD21.fca.0.gep = getelementptr inbounds %gemSHD, %gemSHD* %GEMSHD, i32 0, i32 0
  store double* %GEMSHD21.fca.0.extract, double** %GEMSHD21.fca.0.gep
  %GEMSHD21.fca.1.extract = extractvalue %gemSHD %GEMSHD21, 1
  %GEMSHD21.fca.1.gep = getelementptr inbounds %gemSHD, %gemSHD* %GEMSHD, i32 0, i32 1
  store double* %GEMSHD21.fca.1.extract, double** %GEMSHD21.fca.1.gep
  %GEMSHD21.fca.2.extract = extractvalue %gemSHD %GEMSHD21, 2
  %GEMSHD21.fca.2.gep = getelementptr inbounds %gemSHD, %gemSHD* %GEMSHD, i32 0, i32 2
  store double* %GEMSHD21.fca.2.extract, double** %GEMSHD21.fca.2.gep
  call void @"gemSHDBuild@Z6gemSHDM3N3CLR[FN2OM[FN1A[F"(%gemSHD* %GEMSHD)
  %GEMSHD22.fca.0.load = load double*, double** %GEMSHD21.fca.0.gep
  %GEMSHD22.fca.0.insert = insertvalue %gemSHD undef, double* %GEMSHD22.fca.0.load, 0
  %GEMSHD22.fca.1.load = load double*, double** %GEMSHD21.fca.1.gep
  %GEMSHD22.fca.1.insert = insertvalue %gemSHD %GEMSHD22.fca.0.insert, double* %GEMSHD22.fca.1.load, 1
  %GEMSHD22.fca.2.load = load double*, double** %GEMSHD21.fca.2.gep
  %GEMPA28 = call %gemPA @"gemPA@Z5gemPAM3N1x[UN1y[UN1o[U"()
  %GEMPA28.fca.0.extract = extractvalue %gemPA %GEMPA28, 0
  %GEMPA28.fca.0.gep = getelementptr inbounds %gemPA, %gemPA* %GEMPA, i32 0, i32 0
  store <2 x double>* %GEMPA28.fca.0.extract, <2 x double>** %GEMPA28.fca.0.gep
  %GEMPA28.fca.1.extract = extractvalue %gemPA %GEMPA28, 1
  %GEMPA28.fca.1.gep = getelementptr inbounds %gemPA, %gemPA* %GEMPA, i32 0, i32 1
  store <2 x double>* %GEMPA28.fca.1.extract, <2 x double>** %GEMPA28.fca.1.gep
  %GEMPA28.fca.2.extract = extractvalue %gemPA %GEMPA28, 2
  %GEMPA28.fca.2.gep = getelementptr inbounds %gemPA, %gemPA* %GEMPA, i32 0, i32 2
  store <2 x double>* %GEMPA28.fca.2.extract, <2 x double>** %GEMPA28.fca.2.gep
  call void @"gemPABuild@Z5gemPAM3N1x[UN1y[UN1o[U"(%gemPA* %GEMPA)
  %GEMPA29.fca.0.load = load <2 x double>*, <2 x double>** %GEMPA28.fca.0.gep
  %GEMPA29.fca.0.insert = insertvalue %gemPA undef, <2 x double>* %GEMPA29.fca.0.load, 0
  %GEMPA29.fca.1.load = load <2 x double>*, <2 x double>** %GEMPA28.fca.1.gep
  %GEMPA29.fca.1.insert = insertvalue %gemPA %GEMPA29.fca.0.insert, <2 x double>* %GEMPA29.fca.1.load, 1
  %GEMPA29.fca.2.load = load <2 x double>*, <2 x double>** %GEMPA28.fca.2.gep
  %GEMAP35 = call %gemAP @"gemAP@Z5gemAPM4N3PPL[IN2px[UN2py[UN2po[U"()
  %GEMAP35.fca.0.extract = extractvalue %gemAP %GEMAP35, 0
  %GEMAP35.fca.0.gep = getelementptr inbounds %gemAP, %gemAP* %GEMAP, i32 0, i32 0
  store i64* %GEMAP35.fca.0.extract, i64** %GEMAP35.fca.0.gep
  %GEMAP35.fca.1.extract = extractvalue %gemAP %GEMAP35, 1
  %GEMAP35.fca.1.gep = getelementptr inbounds %gemAP, %gemAP* %GEMAP, i32 0, i32 1
  store <2 x double>* %GEMAP35.fca.1.extract, <2 x double>** %GEMAP35.fca.1.gep
  %GEMAP35.fca.2.extract = extractvalue %gemAP %GEMAP35, 2
  %GEMAP35.fca.2.gep = getelementptr inbounds %gemAP, %gemAP* %GEMAP, i32 0, i32 2
  store <2 x double>* %GEMAP35.fca.2.extract, <2 x double>** %GEMAP35.fca.2.gep
  %GEMAP35.fca.3.extract = extractvalue %gemAP %GEMAP35, 3
  %GEMAP35.fca.3.gep = getelementptr inbounds %gemAP, %gemAP* %GEMAP, i32 0, i32 3
  store <2 x double>* %GEMAP35.fca.3.extract, <2 x double>** %GEMAP35.fca.3.gep
  call void @"gemAPBuild@Z5gemAPM4N3PPL[IN2px[UN2py[UN2po[U"(%gemAP* %GEMAP)
  %GEMAP36.fca.0.load = load i64*, i64** %GEMAP35.fca.0.gep
  %GEMAP36.fca.0.insert = insertvalue %gemAP undef, i64* %GEMAP36.fca.0.load, 0
  %GEMAP36.fca.1.load = load <2 x double>*, <2 x double>** %GEMAP35.fca.1.gep
  %GEMAP36.fca.1.insert = insertvalue %gemAP %GEMAP36.fca.0.insert, <2 x double>* %GEMAP36.fca.1.load, 1
  %GEMAP36.fca.2.load = load <2 x double>*, <2 x double>** %GEMAP35.fca.2.gep
  %GEMAP36.fca.2.insert = insertvalue %gemAP %GEMAP36.fca.1.insert, <2 x double>* %GEMAP36.fca.2.load, 2
  %GEMAP36.fca.3.load = load <2 x double>*, <2 x double>** %GEMAP35.fca.3.gep
  %GEMPV44 = call %gemPV @"gemPV@Z5gemPVM5N3p1t[IN3p2t[IN3pbw[FN3p1w[FN3p2w[F"()
  %GEMPV44.fca.0.extract = extractvalue %gemPV %GEMPV44, 0
  %GEMPV44.fca.0.gep = getelementptr inbounds %gemPV, %gemPV* %GEMPV, i32 0, i32 0
  store i64* %GEMPV44.fca.0.extract, i64** %GEMPV44.fca.0.gep
  %GEMPV44.fca.1.extract = extractvalue %gemPV %GEMPV44, 1
  %GEMPV44.fca.1.gep = getelementptr inbounds %gemPV, %gemPV* %GEMPV, i32 0, i32 1
  store i64* %GEMPV44.fca.1.extract, i64** %GEMPV44.fca.1.gep
  %GEMPV44.fca.2.extract = extractvalue %gemPV %GEMPV44, 2
  %GEMPV44.fca.2.gep = getelementptr inbounds %gemPV, %gemPV* %GEMPV, i32 0, i32 2
  store double* %GEMPV44.fca.2.extract, double** %GEMPV44.fca.2.gep
  %GEMPV44.fca.3.extract = extractvalue %gemPV %GEMPV44, 3
  %GEMPV44.fca.3.gep = getelementptr inbounds %gemPV, %gemPV* %GEMPV, i32 0, i32 3
  store double* %GEMPV44.fca.3.extract, double** %GEMPV44.fca.3.gep
  %GEMPV44.fca.4.extract = extractvalue %gemPV %GEMPV44, 4
  %GEMPV44.fca.4.gep = getelementptr inbounds %gemPV, %gemPV* %GEMPV, i32 0, i32 4
  store double* %GEMPV44.fca.4.extract, double** %GEMPV44.fca.4.gep
  call void @"gemPVBuild@Z5gemPVM5N3p1t[IN3p2t[IN3pbw[FN3p1w[FN3p2w[F"(%gemPV* %GEMPV)
  %GEMPV45.fca.0.load = load i64*, i64** %GEMPV44.fca.0.gep
  %GEMPV45.fca.0.insert = insertvalue %gemPV undef, i64* %GEMPV45.fca.0.load, 0
  %GEMPV45.fca.1.load = load i64*, i64** %GEMPV44.fca.1.gep
  %GEMPV45.fca.1.insert = insertvalue %gemPV %GEMPV45.fca.0.insert, i64* %GEMPV45.fca.1.load, 1
  %GEMPV45.fca.2.load = load double*, double** %GEMPV44.fca.2.gep
  %GEMPV45.fca.2.insert = insertvalue %gemPV %GEMPV45.fca.1.insert, double* %GEMPV45.fca.2.load, 2
  %GEMPV45.fca.3.load = load double*, double** %GEMPV44.fca.3.gep
  %GEMPV45.fca.3.insert = insertvalue %gemPV %GEMPV45.fca.2.insert, double* %GEMPV45.fca.3.load, 3
  %GEMPV45.fca.4.load = load double*, double** %GEMPV44.fca.4.gep
  %GEMV55 = call %gemV @"gemV@Z4gemVM8N3v1t[IN3v2t[IN3v3t[IN3v4t[IN3v1w[FN3v2w[FN3v3w[FN3v4w[F"()
  %GEMV55.fca.0.extract = extractvalue %gemV %GEMV55, 0
  %GEMV55.fca.0.gep = getelementptr inbounds %gemV, %gemV* %GEMV, i32 0, i32 0
  store i64* %GEMV55.fca.0.extract, i64** %GEMV55.fca.0.gep
  %GEMV55.fca.1.extract = extractvalue %gemV %GEMV55, 1
  %GEMV55.fca.1.gep = getelementptr inbounds %gemV, %gemV* %GEMV, i32 0, i32 1
  store i64* %GEMV55.fca.1.extract, i64** %GEMV55.fca.1.gep
  %GEMV55.fca.2.extract = extractvalue %gemV %GEMV55, 2
  %GEMV55.fca.2.gep = getelementptr inbounds %gemV, %gemV* %GEMV, i32 0, i32 2
  store i64* %GEMV55.fca.2.extract, i64** %GEMV55.fca.2.gep
  %GEMV55.fca.3.extract = extractvalue %gemV %GEMV55, 3
  %GEMV55.fca.3.gep = getelementptr inbounds %gemV, %gemV* %GEMV, i32 0, i32 3
  store i64* %GEMV55.fca.3.extract, i64** %GEMV55.fca.3.gep
  %GEMV55.fca.4.extract = extractvalue %gemV %GEMV55, 4
  %GEMV55.fca.4.gep = getelementptr inbounds %gemV, %gemV* %GEMV, i32 0, i32 4
  store double* %GEMV55.fca.4.extract, double** %GEMV55.fca.4.gep
  %GEMV55.fca.5.extract = extractvalue %gemV %GEMV55, 5
  %GEMV55.fca.5.gep = getelementptr inbounds %gemV, %gemV* %GEMV, i32 0, i32 5
  store double* %GEMV55.fca.5.extract, double** %GEMV55.fca.5.gep
  %GEMV55.fca.6.extract = extractvalue %gemV %GEMV55, 6
  %GEMV55.fca.6.gep = getelementptr inbounds %gemV, %gemV* %GEMV, i32 0, i32 6
  store double* %GEMV55.fca.6.extract, double** %GEMV55.fca.6.gep
  %GEMV55.fca.7.extract = extractvalue %gemV %GEMV55, 7
  %GEMV55.fca.7.gep = getelementptr inbounds %gemV, %gemV* %GEMV, i32 0, i32 7
  store double* %GEMV55.fca.7.extract, double** %GEMV55.fca.7.gep
  call void @"gemVBuild@Z4gemVM8N3v1t[IN3v2t[IN3v3t[IN3v4t[IN3v1w[FN3v2w[FN3v3w[FN3v4w[F"(%gemV* %GEMV)
  %GEMV56.fca.0.load = load i64*, i64** %GEMV55.fca.0.gep
  %GEMV56.fca.0.insert = insertvalue %gemV undef, i64* %GEMV56.fca.0.load, 0
  %GEMV56.fca.1.load = load i64*, i64** %GEMV55.fca.1.gep
  %GEMV56.fca.1.insert = insertvalue %gemV %GEMV56.fca.0.insert, i64* %GEMV56.fca.1.load, 1
  %GEMV56.fca.2.load = load i64*, i64** %GEMV55.fca.2.gep
  %GEMV56.fca.2.insert = insertvalue %gemV %GEMV56.fca.1.insert, i64* %GEMV56.fca.2.load, 2
  %GEMV56.fca.3.load = load i64*, i64** %GEMV55.fca.3.gep
  %GEMV56.fca.3.insert = insertvalue %gemV %GEMV56.fca.2.insert, i64* %GEMV56.fca.3.load, 3
  %GEMV56.fca.4.load = load double*, double** %GEMV55.fca.4.gep
  %GEMV56.fca.4.insert = insertvalue %gemV %GEMV56.fca.3.insert, double* %GEMV56.fca.4.load, 4
  %GEMV56.fca.5.load = load double*, double** %GEMV55.fca.5.gep
  %GEMV56.fca.5.insert = insertvalue %gemV %GEMV56.fca.4.insert, double* %GEMV56.fca.5.load, 5
  %GEMV56.fca.6.load = load double*, double** %GEMV55.fca.6.gep
  %GEMV56.fca.6.insert = insertvalue %gemV %GEMV56.fca.5.insert, double* %GEMV56.fca.6.load, 6
  %GEMV56.fca.7.load = load double*, double** %GEMV55.fca.7.gep
  %GEMVP72 = call %gemVP @"gemVP@Z5gemVPM3N3PPL[IN3P1t[IN3P1w[F"()
  %GEMVP72.fca.0.extract = extractvalue %gemVP %GEMVP72, 0
  %GEMVP72.fca.0.gep = getelementptr inbounds %gemVP, %gemVP* %GEMVP, i32 0, i32 0
  store i64* %GEMVP72.fca.0.extract, i64** %GEMVP72.fca.0.gep
  %GEMVP72.fca.1.extract = extractvalue %gemVP %GEMVP72, 1
  %GEMVP72.fca.1.gep = getelementptr inbounds %gemVP, %gemVP* %GEMVP, i32 0, i32 1
  store i64* %GEMVP72.fca.1.extract, i64** %GEMVP72.fca.1.gep
  %GEMVP72.fca.2.extract = extractvalue %gemVP %GEMVP72, 2
  %GEMVP72.fca.2.gep = getelementptr inbounds %gemVP, %gemVP* %GEMVP, i32 0, i32 2
  store double* %GEMVP72.fca.2.extract, double** %GEMVP72.fca.2.gep
  call void @"gemVPBuild@Z5gemVPM3N3PPL[IN3P1t[IN3P1w[F"(%gemVP* %GEMVP)
  %GEMVP73.fca.0.load = load i64*, i64** %GEMVP72.fca.0.gep
  %GEMVP73.fca.0.insert = insertvalue %gemVP undef, i64* %GEMVP73.fca.0.load, 0
  %GEMVP73.fca.1.load = load i64*, i64** %GEMVP72.fca.1.gep
  %GEMVP73.fca.1.insert = insertvalue %gemVP %GEMVP73.fca.0.insert, i64* %GEMVP73.fca.1.load, 1
  %GEMVP73.fca.2.load = load double*, double** %GEMVP72.fca.2.gep
  %GEMFFPA77 = call %gemFFPA @"gemFFPA@Z7gemFFPAM3N2fxUN2fyUN2foU"()
  %GEMFFPA77.fca.0.extract = extractvalue %gemFFPA %GEMFFPA77, 0
  %GEMFFPA77.fca.0.gep = getelementptr inbounds %gemFFPA, %gemFFPA* %GEMFFPA, i32 0, i32 0
  store <2 x double> %GEMFFPA77.fca.0.extract, <2 x double>* %GEMFFPA77.fca.0.gep
  %GEMFFPA77.fca.1.extract = extractvalue %gemFFPA %GEMFFPA77, 1
  %GEMFFPA77.fca.1.gep = getelementptr inbounds %gemFFPA, %gemFFPA* %GEMFFPA, i32 0, i32 1
  store <2 x double> %GEMFFPA77.fca.1.extract, <2 x double>* %GEMFFPA77.fca.1.gep
  %GEMFFPA77.fca.2.extract = extractvalue %gemFFPA %GEMFFPA77, 2
  %GEMFFPA77.fca.2.gep = getelementptr inbounds %gemFFPA, %gemFFPA* %GEMFFPA, i32 0, i32 2
  store <2 x double> %GEMFFPA77.fca.2.extract, <2 x double>* %GEMFFPA77.fca.2.gep
  %GEMFFAP78 = call %gemFFAP @"gemFFAP@Z7gemFFAPM4N3PFFIN3pfxUN3pfyUN3pfoU"()
  %GEMFFAP78.fca.0.extract = extractvalue %gemFFAP %GEMFFAP78, 0
  %GEMFFAP78.fca.0.gep = getelementptr inbounds %gemFFAP, %gemFFAP* %GEMFFAP, i32 0, i32 0
  store i64 %GEMFFAP78.fca.0.extract, i64* %GEMFFAP78.fca.0.gep
  %GEMFFAP78.fca.1.extract = extractvalue %gemFFAP %GEMFFAP78, 1
  %GEMFFAP78.fca.1.gep = getelementptr inbounds %gemFFAP, %gemFFAP* %GEMFFAP, i32 0, i32 1
  store <2 x double> %GEMFFAP78.fca.1.extract, <2 x double>* %GEMFFAP78.fca.1.gep
  %GEMFFAP78.fca.2.extract = extractvalue %gemFFAP %GEMFFAP78, 2
  %GEMFFAP78.fca.2.gep = getelementptr inbounds %gemFFAP, %gemFFAP* %GEMFFAP, i32 0, i32 2
  store <2 x double> %GEMFFAP78.fca.2.extract, <2 x double>* %GEMFFAP78.fca.2.gep
  %GEMFFAP78.fca.3.extract = extractvalue %gemFFAP %GEMFFAP78, 3
  %GEMFFAP78.fca.3.gep = getelementptr inbounds %gemFFAP, %gemFFAP* %GEMFFAP, i32 0, i32 3
  store <2 x double> %GEMFFAP78.fca.3.extract, <2 x double>* %GEMFFAP78.fca.3.gep
  %GEMFFPV79 = call %gemFFPV @"gemFFPV@Z7gemFFPVM2N4fp1tIN4fp1wF"()
  %GEMFFPV79.fca.0.extract = extractvalue %gemFFPV %GEMFFPV79, 0
  %GEMFFPV79.fca.0.gep = getelementptr inbounds %gemFFPV, %gemFFPV* %GEMFFPV, i32 0, i32 0
  store i64 %GEMFFPV79.fca.0.extract, i64* %GEMFFPV79.fca.0.gep
  %GEMFFPV79.fca.1.extract = extractvalue %gemFFPV %GEMFFPV79, 1
  %GEMFFPV79.fca.1.gep = getelementptr inbounds %gemFFPV, %gemFFPV* %GEMFFPV, i32 0, i32 1
  store double %GEMFFPV79.fca.1.extract, double* %GEMFFPV79.fca.1.gep
  %GEMFFV80 = call %gemFFV @"gemFFV@Z6gemFFVM4N4fv1tIN4fv2tIN4fv1wFN4fv2wF"()
  %GEMFFV80.fca.0.extract = extractvalue %gemFFV %GEMFFV80, 0
  %GEMFFV80.fca.0.gep = getelementptr inbounds %gemFFV, %gemFFV* %GEMFFV, i32 0, i32 0
  store i64 %GEMFFV80.fca.0.extract, i64* %GEMFFV80.fca.0.gep
  %GEMFFV80.fca.1.extract = extractvalue %gemFFV %GEMFFV80, 1
  %GEMFFV80.fca.1.gep = getelementptr inbounds %gemFFV, %gemFFV* %GEMFFV, i32 0, i32 1
  store i64 %GEMFFV80.fca.1.extract, i64* %GEMFFV80.fca.1.gep
  %GEMFFV80.fca.2.extract = extractvalue %gemFFV %GEMFFV80, 2
  %GEMFFV80.fca.2.gep = getelementptr inbounds %gemFFV, %gemFFV* %GEMFFV, i32 0, i32 2
  store double %GEMFFV80.fca.2.extract, double* %GEMFFV80.fca.2.gep
  %GEMFFV80.fca.3.extract = extractvalue %gemFFV %GEMFFV80, 3
  %GEMFFV80.fca.3.gep = getelementptr inbounds %gemFFV, %gemFFV* %GEMFFV, i32 0, i32 3
  store double %GEMFFV80.fca.3.extract, double* %GEMFFV80.fca.3.gep
  %GEMFFVP81 = call %gemFFVP @"gemFFVP@Z7gemFFVPM4N4fP1tIN4fP2tIN4fP1wFN4fP2wF"()
  %GEMFFVP81.fca.0.extract = extractvalue %gemFFVP %GEMFFVP81, 0
  %GEMFFVP81.fca.0.gep = getelementptr inbounds %gemFFVP, %gemFFVP* %GEMFFVP, i32 0, i32 0
  store i64 %GEMFFVP81.fca.0.extract, i64* %GEMFFVP81.fca.0.gep
  %GEMFFVP81.fca.1.extract = extractvalue %gemFFVP %GEMFFVP81, 1
  %GEMFFVP81.fca.1.gep = getelementptr inbounds %gemFFVP, %gemFFVP* %GEMFFVP, i32 0, i32 1
  store i64 %GEMFFVP81.fca.1.extract, i64* %GEMFFVP81.fca.1.gep
  %GEMFFVP81.fca.2.extract = extractvalue %gemFFVP %GEMFFVP81, 2
  %GEMFFVP81.fca.2.gep = getelementptr inbounds %gemFFVP, %gemFFVP* %GEMFFVP, i32 0, i32 2
  store double %GEMFFVP81.fca.2.extract, double* %GEMFFVP81.fca.2.gep
  %GEMFFVP81.fca.3.extract = extractvalue %gemFFVP %GEMFFVP81, 3
  %GEMFFVP81.fca.3.gep = getelementptr inbounds %gemFFVP, %gemFFVP* %GEMFFVP, i32 0, i32 3
  store double %GEMFFVP81.fca.3.extract, double* %GEMFFVP81.fca.3.gep
  %biunit = call <2 x double> @"biunit@U"()
  store <2 x double> %biunit, <2 x double>* %mem
  %115 = icmp ne i64 %GEMSYS13.fca.1.load, 0
  br i1 %115, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %return = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return84 = call i64 @"sample_cdf@[FFI"(double* %GEMSYS13.fca.2.load, double %return)
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %idx.0 = phi i64 [ %return84, %true ], [ 0, %__llvm_entry ]
  br label %cond

cond:                                             ; preds = %end263, %end
  %clr.0 = phi double [ 0.000000e+00, %end ], [ %output277, %end263 ]
  %prv_clr.0 = phi double [ 0.000000e+00, %end ], [ %output277, %end263 ]
  %i.0 = phi i64 [ 0, %end ], [ %output280, %end263 ]
  %idx.1 = phi i64 [ %idx.0, %end ], [ %phi, %end263 ]
  %return87 = call i64 @"lt@III"(i64 %i.0, i64 %GEMSYSGLB2.fca.4.load)
  %116 = icmp ne i64 %return87, 0
  br i1 %116, label %body, label %end88

body:                                             ; preds = %cond
  br i1 %115, label %true90, label %false

end88:                                            ; preds = %cond
  %117 = icmp ne i64 %GEMSYSGLB2.fca.0.load, 0
  br i1 %117, label %true282, label %end283

true90:                                           ; preds = %body
  store i64 %idx.1, i64* %0
  %cast = sitofp i64 %GEMSYS13.fca.0.load to double
  store double %cast, double* %1
  store double* %GEMSYS13.fca.3.load, double** %2
  %XAOS = call i64 @"XAOS@IIF[F"(i64* %0, double* %1, double** %2)
  br label %end91

false:                                            ; preds = %body
  %return96 = call double @"nrandom@F:S"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0))
  %return97 = call i64 @"sample_cdf@[FFI"(double* %GEMSYS13.fca.2.load, double %return96)
  br label %end91

end91:                                            ; preds = %false, %true90
  %phi = phi i64 [ %XAOS, %true90 ], [ %return97, %false ]
  %return100 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEMPA29.fca.0.load, i64 %phi)
  %return103 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEMPA29.fca.1.load, i64 %phi)
  %return106 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEMPA29.fca.2.load, i64 %phi)
  %return109 = call double @"getcomp@F[FI"(double* %GEMPV45.fca.2.load, i64 %phi)
  %return112 = call double @"getcomp@F[FI"(double* %GEMPV45.fca.3.load, i64 %phi)
  %return115 = call double @"getcomp@F[FI"(double* %GEMPV45.fca.4.load, i64 %phi)
  %return118 = call double @"getcomp@F[FI"(double* %GEMV56.fca.4.load, i64 %phi)
  %return121 = call double @"getcomp@F[FI"(double* %GEMV56.fca.5.load, i64 %phi)
  %return124 = call double @"getcomp@F[FI"(double* %GEMV56.fca.6.load, i64 %phi)
  %return127 = call double @"getcomp@F[FI"(double* %GEMV56.fca.7.load, i64 %phi)
  %return130 = call double @"getcomp@F[FI"(double* %GEMVP73.fca.2.load, i64 %phi)
  %return133 = call i64 @"getcomp@I[II"(i64* %GEMAP36.fca.0.load, i64 %phi)
  %return136 = call double @"getcomp@F[FI"(double* %GEMSHD22.fca.0.load, i64 %phi)
  %return139 = call double @"getcomp@F[FI"(double* %GEMSHD22.fca.1.load, i64 %phi)
  store <2 x double> %return100, <2 x double>* %3
  store <2 x double> %return103, <2 x double>* %4
  store <2 x double> %return106, <2 x double>* %5
  call void @"affine@UUUU"(<2 x double>* %mem, <2 x double>* %3, <2 x double>* %4, <2 x double>* %5)
  %return144 = fcmp ogt double %return109, 0.000000e+00
  br i1 %return144, label %true146, label %end147

true146:                                          ; preds = %end91
  store double %return109, double* %6
  call void @"V_PREBLUR@UF"(<2 x double>* %mem, double* %6)
  br label %end147

end147:                                           ; preds = %true146, %end91
  %return150 = fcmp ogt double %return112, 0.000000e+00
  br i1 %return150, label %true152, label %end153

true152:                                          ; preds = %end147
  store i64 %phi, i64* %7
  %return157 = call i64 @"getcomp@I[II"(i64* %GEMPV45.fca.0.load, i64 %phi)
  store i64 %return157, i64* %8
  store i64 %GEMSYSGLB2.fca.3.load, i64* %9
  %mem159 = load <2 x double>, <2 x double>* %mem
  store <2 x double> %mem159, <2 x double>* %10
  store <2 x double> %return103, <2 x double>* %12
  store <2 x double> %return106, <2 x double>* %13
  store double %return112, double* %14
  %FLAME = call <2 x double> @"FLAME@UIIIUUUUF"(i64* %7, i64* %8, i64* %9, <2 x double>* %10, <2 x double>* %11, <2 x double>* %12, <2 x double>* %13, double* %14)
  store <2 x double> %FLAME, <2 x double>* %mem
  br label %end153

end153:                                           ; preds = %true152, %end147
  %return164 = fcmp ogt double %return115, 0.000000e+00
  br i1 %return164, label %true166, label %end167

true166:                                          ; preds = %end153
  store i64 %phi, i64* %15
  %return171 = call i64 @"getcomp@I[II"(i64* %GEMPV45.fca.1.load, i64 %phi)
  store i64 %return171, i64* %16
  store i64 %GEMSYSGLB2.fca.3.load, i64* %17
  %mem173 = load <2 x double>, <2 x double>* %mem
  store <2 x double> %mem173, <2 x double>* %18
  store <2 x double> %return103, <2 x double>* %20
  store <2 x double> %return106, <2 x double>* %21
  store double %return115, double* %22
  %FLAME177 = call <2 x double> @"FLAME@UIIIUUUUF"(i64* %15, i64* %16, i64* %17, <2 x double>* %18, <2 x double>* %19, <2 x double>* %20, <2 x double>* %21, double* %22)
  store <2 x double> %FLAME177, <2 x double>* %mem
  br label %end167

end167:                                           ; preds = %true166, %end153
  %cast178 = call <2 x double> @"set@UI"(i64 0)
  store <2 x double> %cast178, <2 x double>* %tmp
  %return180 = fcmp one double %return118, 0.000000e+00
  br i1 %return180, label %true182, label %end183

true182:                                          ; preds = %end167
  store i64 %phi, i64* %23
  %return188 = call i64 @"getcomp@I[II"(i64* %GEMV56.fca.0.load, i64 %phi)
  store i64 %return188, i64* %24
  store i64 %GEMSYSGLB2.fca.3.load, i64* %25
  %mem190 = load <2 x double>, <2 x double>* %mem
  store <2 x double> %mem190, <2 x double>* %26
  store <2 x double> %return103, <2 x double>* %28
  store <2 x double> %return106, <2 x double>* %29
  store double %return118, double* %30
  %FLAME194 = call <2 x double> @"FLAME@UIIIUUUUF"(i64* %23, i64* %24, i64* %25, <2 x double>* %26, <2 x double>* %27, <2 x double>* %28, <2 x double>* %29, double* %30)
  %output = call <2 x double> @"add@UU"(<2 x double> %cast178, <2 x double> %FLAME194)
  store <2 x double> %output, <2 x double>* %tmp
  br label %end183

end183:                                           ; preds = %true182, %end167
  %return196 = fcmp one double %return121, 0.000000e+00
  br i1 %return196, label %true198, label %end199

true198:                                          ; preds = %end183
  %tmp200 = load <2 x double>, <2 x double>* %tmp
  store i64 %phi, i64* %31
  %return204 = call i64 @"getcomp@I[II"(i64* %GEMV56.fca.1.load, i64 %phi)
  store i64 %return204, i64* %32
  store i64 %GEMSYSGLB2.fca.3.load, i64* %33
  %mem206 = load <2 x double>, <2 x double>* %mem
  store <2 x double> %mem206, <2 x double>* %34
  store <2 x double> %return103, <2 x double>* %36
  store <2 x double> %return106, <2 x double>* %37
  store double %return121, double* %38
  %FLAME210 = call <2 x double> @"FLAME@UIIIUUUUF"(i64* %31, i64* %32, i64* %33, <2 x double>* %34, <2 x double>* %35, <2 x double>* %36, <2 x double>* %37, double* %38)
  %output211 = call <2 x double> @"add@UU"(<2 x double> %tmp200, <2 x double> %FLAME210)
  store <2 x double> %output211, <2 x double>* %tmp
  br label %end199

end199:                                           ; preds = %true198, %end183
  %return213 = fcmp one double %return124, 0.000000e+00
  br i1 %return213, label %true215, label %end216

true215:                                          ; preds = %end199
  %tmp217 = load <2 x double>, <2 x double>* %tmp
  store i64 %phi, i64* %39
  %return221 = call i64 @"getcomp@I[II"(i64* %GEMV56.fca.2.load, i64 %phi)
  store i64 %return221, i64* %40
  store i64 %GEMSYSGLB2.fca.3.load, i64* %41
  %mem223 = load <2 x double>, <2 x double>* %mem
  store <2 x double> %mem223, <2 x double>* %42
  store <2 x double> %return103, <2 x double>* %44
  store <2 x double> %return106, <2 x double>* %45
  store double %return124, double* %46
  %FLAME227 = call <2 x double> @"FLAME@UIIIUUUUF"(i64* %39, i64* %40, i64* %41, <2 x double>* %42, <2 x double>* %43, <2 x double>* %44, <2 x double>* %45, double* %46)
  %output228 = call <2 x double> @"add@UU"(<2 x double> %tmp217, <2 x double> %FLAME227)
  store <2 x double> %output228, <2 x double>* %tmp
  br label %end216

end216:                                           ; preds = %true215, %end199
  %return230 = fcmp one double %return127, 0.000000e+00
  br i1 %return230, label %true232, label %end233

true232:                                          ; preds = %end216
  %tmp234 = load <2 x double>, <2 x double>* %tmp
  store i64 %phi, i64* %47
  %return238 = call i64 @"getcomp@I[II"(i64* %GEMV56.fca.3.load, i64 %phi)
  store i64 %return238, i64* %48
  store i64 %GEMSYSGLB2.fca.3.load, i64* %49
  %mem240 = load <2 x double>, <2 x double>* %mem
  store <2 x double> %mem240, <2 x double>* %50
  store <2 x double> %return103, <2 x double>* %52
  store <2 x double> %return106, <2 x double>* %53
  store double %return127, double* %54
  %FLAME244 = call <2 x double> @"FLAME@UIIIUUUUF"(i64* %47, i64* %48, i64* %49, <2 x double>* %50, <2 x double>* %51, <2 x double>* %52, <2 x double>* %53, double* %54)
  %output245 = call <2 x double> @"add@UU"(<2 x double> %tmp234, <2 x double> %FLAME244)
  store <2 x double> %output245, <2 x double>* %tmp
  br label %end233

end233:                                           ; preds = %true232, %end216
  %return247 = fcmp ogt double %return130, 0.000000e+00
  br i1 %return247, label %true249, label %end250

true249:                                          ; preds = %end233
  store i64 %phi, i64* %55
  %return254 = call i64 @"getcomp@I[II"(i64* %GEMVP73.fca.1.load, i64 %phi)
  store i64 %return254, i64* %56
  store i64 %GEMSYSGLB2.fca.3.load, i64* %57
  %tmp256 = load <2 x double>, <2 x double>* %tmp
  store <2 x double> %tmp256, <2 x double>* %58
  store <2 x double> %return103, <2 x double>* %60
  store <2 x double> %return106, <2 x double>* %61
  store double %return130, double* %62
  %FLAME260 = call <2 x double> @"FLAME@UIIIUUUUF"(i64* %55, i64* %56, i64* %57, <2 x double>* %58, <2 x double>* %59, <2 x double>* %60, <2 x double>* %61, double* %62)
  store <2 x double> %FLAME260, <2 x double>* %tmp
  br label %end250

end250:                                           ; preds = %true249, %end233
  %118 = icmp ne i64 %return133, 0
  br i1 %118, label %true262, label %end263

true262:                                          ; preds = %end250
  %return266 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEMAP36.fca.1.load, i64 %phi)
  store <2 x double> %return266, <2 x double>* %63
  %return269 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEMAP36.fca.2.load, i64 %phi)
  store <2 x double> %return269, <2 x double>* %64
  %return272 = call <2 x double> @"getcomp@U[UI"(<2 x double>* %GEMAP36.fca.3.load, i64 %phi)
  store <2 x double> %return272, <2 x double>* %65
  call void @"affine@UUUU"(<2 x double>* %tmp, <2 x double>* %63, <2 x double>* %64, <2 x double>* %65)
  br label %end263

end263:                                           ; preds = %true262, %end250
  %output276 = fmul double %return139, %prv_clr.0
  %output277 = fadd double %return136, %output276
  %tmp278 = load <2 x double>, <2 x double>* %tmp
  store <2 x double> %tmp278, <2 x double>* %mem
  %output280 = add i64 %i.0, 1
  br label %cond

true282:                                          ; preds = %end88
  call void @"gemFFPABuild@Z7gemFFPAM3N2fxUN2fyUN2foU"(%gemFFPA* %GEMFFPA)
  %GEMFFPA284.fca.0.load = load <2 x double>, <2 x double>* %GEMFFPA77.fca.0.gep
  %GEMFFPA284.fca.0.insert = insertvalue %gemFFPA undef, <2 x double> %GEMFFPA284.fca.0.load, 0
  %GEMFFPA284.fca.1.load = load <2 x double>, <2 x double>* %GEMFFPA77.fca.1.gep
  %GEMFFPA284.fca.1.insert = insertvalue %gemFFPA %GEMFFPA284.fca.0.insert, <2 x double> %GEMFFPA284.fca.1.load, 1
  %GEMFFPA284.fca.2.load = load <2 x double>, <2 x double>* %GEMFFPA77.fca.2.gep
  call void @"gemFFAPBuild@Z7gemFFAPM4N3PFFIN3pfxUN3pfyUN3pfoU"(%gemFFAP* %GEMFFAP)
  %GEMFFAP290.fca.0.load = load i64, i64* %GEMFFAP78.fca.0.gep
  %GEMFFAP290.fca.0.insert = insertvalue %gemFFAP undef, i64 %GEMFFAP290.fca.0.load, 0
  %GEMFFAP290.fca.1.load = load <2 x double>, <2 x double>* %GEMFFAP78.fca.1.gep
  %GEMFFAP290.fca.1.insert = insertvalue %gemFFAP %GEMFFAP290.fca.0.insert, <2 x double> %GEMFFAP290.fca.1.load, 1
  %GEMFFAP290.fca.2.load = load <2 x double>, <2 x double>* %GEMFFAP78.fca.2.gep
  %GEMFFAP290.fca.2.insert = insertvalue %gemFFAP %GEMFFAP290.fca.1.insert, <2 x double> %GEMFFAP290.fca.2.load, 2
  %GEMFFAP290.fca.3.load = load <2 x double>, <2 x double>* %GEMFFAP78.fca.3.gep
  call void @"gemFFPVBuild@Z7gemFFPVM2N4fp1tIN4fp1wF"(%gemFFPV* %GEMFFPV)
  %GEMFFPV298.fca.0.load = load i64, i64* %GEMFFPV79.fca.0.gep
  %GEMFFPV298.fca.0.insert = insertvalue %gemFFPV undef, i64 %GEMFFPV298.fca.0.load, 0
  %GEMFFPV298.fca.1.load = load double, double* %GEMFFPV79.fca.1.gep
  call void @"gemFFVBuild@Z6gemFFVM4N4fv1tIN4fv2tIN4fv1wFN4fv2wF"(%gemFFV* %GEMFFV)
  %GEMFFV302.fca.0.load = load i64, i64* %GEMFFV80.fca.0.gep
  %GEMFFV302.fca.0.insert = insertvalue %gemFFV undef, i64 %GEMFFV302.fca.0.load, 0
  %GEMFFV302.fca.1.load = load i64, i64* %GEMFFV80.fca.1.gep
  %GEMFFV302.fca.1.insert = insertvalue %gemFFV %GEMFFV302.fca.0.insert, i64 %GEMFFV302.fca.1.load, 1
  %GEMFFV302.fca.2.load = load double, double* %GEMFFV80.fca.2.gep
  %GEMFFV302.fca.2.insert = insertvalue %gemFFV %GEMFFV302.fca.1.insert, double %GEMFFV302.fca.2.load, 2
  %GEMFFV302.fca.3.load = load double, double* %GEMFFV80.fca.3.gep
  call void @"gemFFVPBuild@Z7gemFFVPM4N4fP1tIN4fP2tIN4fP1wFN4fP2wF"(%gemFFVP* %GEMFFVP)
  %GEMFFVP310.fca.0.load = load i64, i64* %GEMFFVP81.fca.0.gep
  %GEMFFVP310.fca.0.insert = insertvalue %gemFFVP undef, i64 %GEMFFVP310.fca.0.load, 0
  %GEMFFVP310.fca.1.load = load i64, i64* %GEMFFVP81.fca.1.gep
  %GEMFFVP310.fca.1.insert = insertvalue %gemFFVP %GEMFFVP310.fca.0.insert, i64 %GEMFFVP310.fca.1.load, 1
  %GEMFFVP310.fca.2.load = load double, double* %GEMFFVP81.fca.2.gep
  %GEMFFVP310.fca.2.insert = insertvalue %gemFFVP %GEMFFVP310.fca.1.insert, double %GEMFFVP310.fca.2.load, 2
  %GEMFFVP310.fca.3.load = load double, double* %GEMFFVP81.fca.3.gep
  store <2 x double> %GEMFFPA284.fca.0.load, <2 x double>* %66
  store <2 x double> %GEMFFPA284.fca.1.load, <2 x double>* %67
  store <2 x double> %GEMFFPA284.fca.2.load, <2 x double>* %68
  call void @"affine@UUUU"(<2 x double>* %mem, <2 x double>* %66, <2 x double>* %67, <2 x double>* %68)
  %return322 = fcmp ogt double %GEMFFPV298.fca.1.load, 0.000000e+00
  br i1 %return322, label %true324, label %end325

end283:                                           ; preds = %end387, %end88
  %return394 = call double @"getcomp@F[FI"(double* %GEMSHD22.fca.2.load, i64 %idx.1)
  store i64 %GEMSYSGLB2.fca.1.load, i64* %69
  %mem396 = load <2 x double>, <2 x double>* %mem
  store <2 x double> %mem396, <2 x double>* %70
  store double %return394, double* %71
  %chkPT = call i64 @"chkPT@IIUF"(i64* %69, <2 x double>* %70, double* %71)
  %119 = icmp ne i64 %chkPT, 0
  br i1 %119, label %true398, label %false399

true324:                                          ; preds = %true282
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @138, i64 0, i64 0), i8** %72
  store i64 %GEMFFPV298.fca.0.load, i64* %73
  store i64 %GEMSYSGLB2.fca.3.load, i64* %74
  %mem328 = load <2 x double>, <2 x double>* %mem
  store <2 x double> %mem328, <2 x double>* %75
  store <2 x double> %GEMFFPA284.fca.1.load, <2 x double>* %77
  store <2 x double> %GEMFFPA284.fca.2.load, <2 x double>* %78
  store double %GEMFFPV298.fca.1.load, double* %79
  %FLAMEFF = call <2 x double> @"FLAMEFF@USIIUUUUF"(i8** %72, i64* %73, i64* %74, <2 x double>* %75, <2 x double>* %76, <2 x double>* %77, <2 x double>* %78, double* %79)
  store <2 x double> %FLAMEFF, <2 x double>* %mem
  br label %end325

end325:                                           ; preds = %true324, %true282
  %cast332 = call <2 x double> @"set@UI"(i64 0)
  store <2 x double> %cast332, <2 x double>* %tmp
  %return334 = fcmp one double %GEMFFV302.fca.2.load, 0.000000e+00
  br i1 %return334, label %true336, label %end337

true336:                                          ; preds = %end325
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @139, i64 0, i64 0), i8** %80
  store i64 %GEMFFV302.fca.0.load, i64* %81
  store i64 %GEMSYSGLB2.fca.3.load, i64* %82
  %mem341 = load <2 x double>, <2 x double>* %mem
  store <2 x double> %mem341, <2 x double>* %83
  store <2 x double> %GEMFFPA284.fca.1.load, <2 x double>* %85
  store <2 x double> %GEMFFPA284.fca.2.load, <2 x double>* %86
  store double %GEMFFV302.fca.2.load, double* %87
  %FLAMEFF345 = call <2 x double> @"FLAMEFF@USIIUUUUF"(i8** %80, i64* %81, i64* %82, <2 x double>* %83, <2 x double>* %84, <2 x double>* %85, <2 x double>* %86, double* %87)
  %output346 = call <2 x double> @"add@UU"(<2 x double> %cast332, <2 x double> %FLAMEFF345)
  store <2 x double> %output346, <2 x double>* %tmp
  br label %end337

end337:                                           ; preds = %true336, %end325
  %return348 = fcmp one double %GEMFFV302.fca.3.load, 0.000000e+00
  br i1 %return348, label %true350, label %end351

true350:                                          ; preds = %end337
  %tmp352 = load <2 x double>, <2 x double>* %tmp
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @139, i64 0, i64 0), i8** %88
  store i64 %GEMFFV302.fca.1.load, i64* %89
  store i64 %GEMSYSGLB2.fca.3.load, i64* %90
  %mem355 = load <2 x double>, <2 x double>* %mem
  store <2 x double> %mem355, <2 x double>* %91
  store <2 x double> %GEMFFPA284.fca.1.load, <2 x double>* %93
  store <2 x double> %GEMFFPA284.fca.2.load, <2 x double>* %94
  store double %GEMFFV302.fca.3.load, double* %95
  %FLAMEFF359 = call <2 x double> @"FLAMEFF@USIIUUUUF"(i8** %88, i64* %89, i64* %90, <2 x double>* %91, <2 x double>* %92, <2 x double>* %93, <2 x double>* %94, double* %95)
  %output360 = call <2 x double> @"add@UU"(<2 x double> %tmp352, <2 x double> %FLAMEFF359)
  store <2 x double> %output360, <2 x double>* %tmp
  br label %end351

end351:                                           ; preds = %true350, %end337
  %return362 = fcmp ogt double %GEMFFVP310.fca.2.load, 0.000000e+00
  br i1 %return362, label %true364, label %end365

true364:                                          ; preds = %end351
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @138, i64 0, i64 0), i8** %96
  store i64 %GEMFFVP310.fca.0.load, i64* %97
  store i64 %GEMSYSGLB2.fca.3.load, i64* %98
  %tmp368 = load <2 x double>, <2 x double>* %tmp
  store <2 x double> %tmp368, <2 x double>* %99
  store <2 x double> %GEMFFPA284.fca.1.load, <2 x double>* %101
  store <2 x double> %GEMFFPA284.fca.2.load, <2 x double>* %102
  store double %GEMFFVP310.fca.2.load, double* %103
  %FLAMEFF372 = call <2 x double> @"FLAMEFF@USIIUUUUF"(i8** %96, i64* %97, i64* %98, <2 x double>* %99, <2 x double>* %100, <2 x double>* %101, <2 x double>* %102, double* %103)
  store <2 x double> %FLAMEFF372, <2 x double>* %tmp
  br label %end365

end365:                                           ; preds = %true364, %end351
  %return374 = fcmp ogt double %GEMFFVP310.fca.3.load, 0.000000e+00
  br i1 %return374, label %true376, label %end377

true376:                                          ; preds = %end365
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @138, i64 0, i64 0), i8** %104
  store i64 %GEMFFVP310.fca.1.load, i64* %105
  store i64 %GEMSYSGLB2.fca.3.load, i64* %106
  %tmp380 = load <2 x double>, <2 x double>* %tmp
  store <2 x double> %tmp380, <2 x double>* %107
  store <2 x double> %GEMFFPA284.fca.1.load, <2 x double>* %109
  store <2 x double> %GEMFFPA284.fca.2.load, <2 x double>* %110
  store double %GEMFFVP310.fca.3.load, double* %111
  %FLAMEFF384 = call <2 x double> @"FLAMEFF@USIIUUUUF"(i8** %104, i64* %105, i64* %106, <2 x double>* %107, <2 x double>* %108, <2 x double>* %109, <2 x double>* %110, double* %111)
  store <2 x double> %FLAMEFF384, <2 x double>* %tmp
  br label %end377

end377:                                           ; preds = %true376, %end365
  %120 = icmp ne i64 %GEMFFAP290.fca.0.load, 0
  br i1 %120, label %true386, label %end387

true386:                                          ; preds = %end377
  store <2 x double> %GEMFFAP290.fca.1.load, <2 x double>* %112
  store <2 x double> %GEMFFAP290.fca.2.load, <2 x double>* %113
  store <2 x double> %GEMFFAP290.fca.3.load, <2 x double>* %114
  call void @"affine@UUUU"(<2 x double>* %tmp, <2 x double>* %112, <2 x double>* %113, <2 x double>* %114)
  br label %end387

end387:                                           ; preds = %true386, %end377
  %tmp391 = load <2 x double>, <2 x double>* %tmp
  store <2 x double> %tmp391, <2 x double>* %mem
  br label %end283

true398:                                          ; preds = %end283
  %_bound_ptnum401 = load i64, i64* %_bound_ptnum
  %return402 = call i64 @"removepoint@III"(i64 0, i64 %_bound_ptnum401)
  br label %end400

false399:                                         ; preds = %end283
  %output405 = fmul double 1.000000e-03, %return394
  %121 = icmp ne i64 %GEMSYSGLB2.fca.2.load, 0
  br i1 %121, label %true407, label %end408

end400:                                           ; preds = %end408, %true398
  ret void

true407:                                          ; preds = %false399
  %return409 = call double @"detail@FISI"(i64 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @140, i64 0, i64 0), i64 0)
  store double %return409, double* %_bound_mb
  %output412 = fmul double %output405, %return409
  br label %end408

end408:                                           ; preds = %true407, %false399
  %pscl.0 = phi double [ %output412, %true407 ], [ %output405, %false399 ]
  %mem413 = load <2 x double>, <2 x double>* %mem
  %cast414 = call <3 x double> @"set@VU"(<2 x double> %mem413)
  store <3 x double> %cast414, <3 x double>* %_bound_P
  store double %clr.0, double* %_bound_clr
  store double %pscl.0, double* %_bound_pscale
  store double %return394, double* %_bound_Alpha
  br label %end400
}

; Function Attrs: nounwind readnone
declare <2 x double> @"set@UI"(i64) #0

; Function Attrs: nounwind readnone
declare <2 x double> @"add@UU"(<2 x double>, <2 x double>) #0

; Function Attrs: nounwind
declare i64 @"removepoint@III"(i64, i64) #2

; Function Attrs: nounwind
declare double @"detail@FISI"(i64, i8*, i64) #2

; Function Attrs: nounwind readnone
declare <3 x double> @"set@VU"(<2 x double>) #0

; Function Attrs: nounwind
define void @FLAM3(i64 %ptnum, double %pscale, double %clr, double %Alpha, double %mb, <3 x double> %P) #2 {
__llvm_entry:
  %"<pscale>" = alloca double
  %"<clr>" = alloca double
  %"<Alpha>" = alloca double
  %"<mb>" = alloca double
  %"<P>" = alloca <3 x double>
  %0 = alloca i64
  store double %pscale, double* %"<pscale>"
  store double %clr, double* %"<clr>"
  store double %Alpha, double* %"<Alpha>"
  store double %mb, double* %"<mb>"
  store <3 x double> %P, <3 x double>* %"<P>"
  store i64 %ptnum, i64* %0
  call void @"_FLAM3@IFFFFV"(i64* %0, double* %"<pscale>", double* %"<clr>", double* %"<Alpha>", double* %"<mb>", <3 x double>* %"<P>")
  %gvalue = call i64 @"_export@ISI"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @141, i64 0, i64 0), i64 %ptnum) #4
  %evalue2 = load double, double* %"<pscale>"
  %gvalue3 = call double @"_export@FSF"(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @142, i64 0, i64 0), double %evalue2) #4
  %evalue4 = load double, double* %"<clr>"
  %gvalue5 = call double @"_export@FSF"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @143, i64 0, i64 0), double %evalue4) #4
  %evalue6 = load double, double* %"<Alpha>"
  %gvalue7 = call double @"_export@FSF"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @144, i64 0, i64 0), double %evalue6) #4
  %evalue8 = load double, double* %"<mb>"
  %gvalue9 = call double @"_export@FSF"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @145, i64 0, i64 0), double %evalue8) #4
  %evalue10 = load <3 x double>, <3 x double>* %"<P>"
  %gvalue11 = call <3 x double> @"_export@VSV"(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @146, i64 0, i64 0), <3 x double> %evalue10) #4
  store i64 %gvalue, i64* @ptnum
  store double %gvalue3, double* @pscale
  store double %gvalue5, double* @clr
  store double %gvalue7, double* @Alpha
  store double %gvalue9, double* @mb
  store <3 x double> %gvalue11, <3 x double>* @P
  ret void
}

declare i64 @"_export@ISI"(i8*, i64)

declare double @"_export@FSF"(i8*, double)

declare <3 x double> @"_export@VSV"(i8*, <3 x double>)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @FLAM3(i64 0, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, <3 x double> zeroinitializer)
  ret void
}

attributes #0 = { nounwind readnone }
attributes #1 = { alwaysinline nounwind }
attributes #2 = { nounwind }
attributes #3 = { alwaysinline }
attributes #4 = { nounwind readonly }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"20.5.487"}
!2 = !{!"64"}
!3 = !{!""}

;_code_end
