/*  
 /  Tested on:  Houdini 19.x
 /              Houdini 19.5
 /              Houdini 20.x
 /              Houdini 20.5
 /
 /  Title:      FLAM3H. SideFX Houdini FLAM3: 2D
 /  Author:     Alessandro Nardini
 /  date:       November 2024, Last revised November 2024
 /
 /  info:       Based on the original: "The Fractal Flame Algorithm"
 /  Authors:    Scott Draves, Erik Reckase
 /
 /  Paper:      https://flam3.com/flame_draves.pdf
 /  Date:       September 2003, Last revised November 2008
 /
 /  Github:     https://github.com/scottdraves/flam3
 /  Date:       December 2002, Last revised May 2015
 /
 /  Name:       FLAM3 XFORMS HANDLES TM "CVEX"
 /
 /  Comment:    xforms iterators affine handles viz.
*/



#pragma opname  "TFFAxformshandles"
#pragma oplabel "TFFAxformshandles"
#pragma opmininputs 1
#pragma opmaxinputs 2

#include <genome.h>


void _FLAM3HANDLES(const string _bound_sIDX[]; vector _bound_P)
{
    int idx = detail(1, "iteration");
    vector2 mem = (vector2)_bound_P;

    // Build genome handle
    string sIDX[]=_bound_sIDX;
    gemhandles GEMH; GEMH->gemhandlesBuild(sIDX);
    // cast HANDLES 
    int PPL[]; /* CAST */ PPL=GEMH.PPL;
    vector2 x[], y[], o[], px[], py[], po[]; /* CAST */ x=GEMH.x; y=GEMH.y; o=GEMH.o; px=GEMH.px; py=GEMH.py; po=GEMH.po;
    // pre affine
    affine(mem, x[idx], y[idx], o[idx]);
    // post affine
    if(PPL[idx]) affine(mem, px[idx], py[idx], po[idx]);
    // OUT
    _bound_P=(vector)mem + {0, 0, 0.01}; // Adding an offset to be on top of the FLAM3H points
}

cvex
FLAM3HANDLES(   const  string sIDX[] = {};
	            export vector P      = 0)
{
    _FLAM3HANDLES(sIDX, P);
}
