/* 
 /  Tested on:  Houdini 19.0
 /              Houdini 19.5
 /              Houdini 20.0
 /              Houdini 20.5
 /              Houdini 21.0
 /
 /  Title:      FLAM3H™. SideFX Houdini FLAM3: 2D
 /  Author:     Alessandro Nardini
 /  date:       October 2020, Last revised April 2025
 /  License:    GPL
 /  Copyright:  2021, © F stands for liFe ( made in Italy )
 /
 /  info:       Based on the original: "The Fractal Flame Algorithm"
 /  Authors:    Scott Draves, Erik Reckase
 /
 /  Paper:      https://flam3.com/flame_draves.pdf
 /  Date:       September 2003, Last revised November 2008
 /
 /  Github:     https://github.com/scottdraves/flam3
 /  Date:       December 2002, Last revised May 2015
 /
 /  Name:       COMPENSATE "CVEX"
 /
 /  Comment:    @pscale compensate due to motion blur.
*/


#pragma opname  "TFFAcompensate"
#pragma oplabel "TFFAcompensate"
#pragma opmininputs 1
#pragma opmaxinputs 1

void
_TFFAcompensate(float _bound_Tstep_mult_compensate)
{   
    // init
    int     samples;
    float   Tstep_accum, Tstep_mult_compensate;

    // data
    samples = chi('mbsamples');

    // solve
    Tstep_accum = 0;
    for(int i=1; i<=samples; i++) Tstep_accum += (1-abs(fit(i, 1, samples, -0.8, 0.8)));

    // out
    _bound_Tstep_mult_compensate = (float)samples/Tstep_accum;
}

cvex
TFFAcompensate(export float Tstep_mult_compensate = 0)
{
    _TFFAcompensate(Tstep_mult_compensate);
}
