/*  
 /  Tested on:  Houdini 19.x
 /              Houdini 19.5
 /              Houdini 20.x
 /              Houdini 20.5
 /
 /  Title:      FLAM3H. SideFX Houdini FLAM3: 2D
 /  Author:     Alessandro Nardini
 /  date:       November 2024, Last revised November 2024
 /
 /  info:       Based on the original: "The Fractal Flame Algorithm"
 /  Authors:    Scott Draves, Erik Reckase
 /
 /  Paper:      https://flam3.com/flame_draves.pdf
 /  Date:       September 2003, Last revised November 2008
 /
 /  Github:     https://github.com/scottdraves/flam3
 /  Date:       December 2002, Last revised May 2015
 /
 /  Name:       FLAM3 XFORMS HANDLES TM "CVEX"
 /
 /  Comment:    xforms FF affine handles viz.
*/



#pragma opname  "TFFAxformshandlesff"
#pragma oplabel "TFFAxformshandlesff"
#pragma opmininputs 1
#pragma opmaxinputs 1

#include <functions.h>


void _FLAM3HANDLESFF(vector _bound_P)
{

    int PFF;
    float _a;
    vector2 mem, fx, fy, fo;
    mem = (vector2)_bound_P;
    matrix2 _m2;
    
    // FF PRE AFFINE
    fx = chu("../../ffx");
    fy = chu("../../ffy");
    _a = chf("../../ffang");
    if(_a!=0){
        affineRot(_m2, fx, fy, -radians(_a));
        fx = set(_m2.xx, _m2.xy);
        fy = set(_m2.yx, _m2.yy);
    }
    fo = chu("../../ffo");
    // pre affine FF
    affine(mem, fx, fy, fo);

    // FF POST AFFINE
    PFF = chi("../../ffdopost");
    if(PFF){
        fx = chu("../../ffpx");
        fy = chu("../../ffpy");
        _a = chf("../../ffpang");
        if(_a!=0){
            affineRot(_m2, fx, fy, -radians(_a));
            fx = set(_m2.xx, _m2.xy);
            fy = set(_m2.yx, _m2.yy);
        }
        fo = chu("../../ffpo");
        // post affine FF
        affine(mem, fx, fy, fo);
    }

    // OUT FF
    _bound_P=(vector)mem + {0, 0, 0.02}; // Adding an offset to be on top of the FLAM3H points and iterators handles.
}

cvex
FLAM3HANDLESFF(export vector P = 0)
{
    _FLAM3HANDLESFF(P);
}
